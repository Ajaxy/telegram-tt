.overlay {
  pointer-events: none;

  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;

  aspect-ratio: 9 / 16;
  width: auto;
  height: auto;

  @media (max-width: 600px) {
    top: 50%;
    right: auto;
    left: 50%;
    transform: translate(-50%, -50%);

    width: var(--media-width, 100%);
    height: var(--media-height, 100%);
  }
}

.mediaArea {
  pointer-events: all;
  cursor: var(--custom-cursor, pointer);
  position: absolute;
  transform-origin: top left;
}

.preview .mediaArea {
  pointer-events: none;
}

.shiny {
  overflow: hidden;
  border-radius: var(--border-radius-default-small);
}

.shiny::before {
  --color-shine: rgb(255, 255, 255, 0.5);

  content: "";

  position: absolute;
  top: 0;

  display: block;

  width: 100%;
  height: 100%;

  background: linear-gradient(to right, transparent 0%, var(--color-shine) 50%, transparent 100%);

  animation: wave 1s cubic-bezier(0.4, 0, 0.6, 1) forwards;

  @keyframes wave {
    from {
      transform: translateX(-100%);
    }
    to {
      transform: translateX(100%);
    }
  }
}

.light {
  --background-color: white;

  color: black;
}

.dark {
  --background-color: black;

  color: white;
}

.reactionBackground {
  cursor: var(--custom-cursor, pointer);

  width: 100%;
  height: 100%;
  border-radius: 50%;

  background-color: var(--background-color);
  filter: drop-shadow(0 0.125rem 0.25rem var(--color-default-shadow));

  &::before,
  &::after {
    content: "";
    position: absolute;
    border-radius: 50%;
    background-color: var(--background-color);
  }

  &::before {
    right: 5%;
    bottom: 5%;
    width: 30%;
    height: 30%;
  }

  &::after {
    right: -5%;
    bottom: 0;
    width: 10%;
    height: 10%;
  }

  &.flipped {
    &::before {
      right: auto;
      left: 5%;
    }

    &::after {
      right: auto;
      left: -5%;
    }
  }

  .dark & {
    opacity: 0.5;
  }
}

.reaction {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

  transition: transform 200ms ease-out;

  &.withCount {
    transform: (translate(-50%, -65%) scale(0.7));
  }
}

.reactionCount {
  position: absolute;
  bottom: 8%;
  left: 50%;
  transform: translateX(-50%);

  font-weight: var(--font-weight-medium);
}

.weather {
  display: grid;
  place-items: center;
}

.weatherInner {
  display: flex;
  gap: 0.2em;
  align-items: center;
  justify-content: center;

  width: auto !important;
  height: auto !important;
  padding: 0 0.2em;
  border-radius: 0.25em;

  white-space: nowrap;

  background-color: var(--custom-background-color);
}

.temperature {
  margin: 0;
  font-family: var(--font-family-condensed);
  font-weight: var(--font-weight-semibold);
}
