{"version":3,"file":"9451.fa34a7dec5cb1e3ed4f7.js","mappings":"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","sources":["webpack://telegram-t/./src/components/mediaViewer/helpers/getViewableMedia.ts","webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStoryForward.tsx","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/components/common/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.module.scss?df39","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.module.scss?b798","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/main/premium/GiftPremiumModal.module.scss?1c3e","webpack://telegram-t/./src/components/main/premium/GiftPremiumModal.tsx","webpack://telegram-t/./src/components/common/CountryPickerModal.module.scss?d5e6","webpack://telegram-t/./src/components/common/CountryPickerModal.tsx","webpack://telegram-t/./src/components/main/AppendEntityPicker.module.scss?b380","webpack://telegram-t/./src/components/main/AppendEntityPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.module.scss?6d7c","webpack://telegram-t/./src/components/main/premium/GiveawayModal.module.scss?ac86","webpack://telegram-t/./src/components/main/premium/GiveawayModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumGiftingModal.module.scss?a8f0","webpack://telegram-t/./src/components/main/premium/PremiumGiftingModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/ReactionEmoji.module.scss?b399","webpack://telegram-t/./src/components/common/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://telegram-t/./src/components/modals/common/TableInfoModal.tsx","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.module.scss?1c77","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarsBalanceModal.module.scss?bbd4","webpack://telegram-t/./src/components/modals/stars/BalanceBlock.tsx","webpack://telegram-t/./src/components/modals/stars/PaidMediaThumb.module.scss?e2b6","webpack://telegram-t/./src/components/modals/stars/PaidMediaThumb.tsx","webpack://telegram-t/./src/components/modals/stars/StarsTransactionItem.tsx","webpack://telegram-t/./src/components/modals/stars/StarsTransactionItem.module.scss?2a3b","webpack://telegram-t/./src/components/modals/stars/StarsBalanceModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarsPaymentModal.tsx","webpack://telegram-t/./src/components/common/AboutAdsModal.module.scss?0072","webpack://telegram-t/./src/components/common/AboutAdsModal.tsx","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.module.scss?b26e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.tsx","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.module.scss?a8aa","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.tsx","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.module.scss?68c3","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.module.scss?497f","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.tsx","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/left/settings/PremiumStatusItem.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.module.scss?16a3","webpack://telegram-t/./src/components/left/settings/PrivacyMessages.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyLastSeen.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/common/PinMessageModal.async.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.module.scss?c38f","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/MobileSearch.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.module.scss?0536","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.module.scss?695a","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/isFullyVisible.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommand.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.module.scss?f347","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/RightSearch.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPost.module.scss?fea0","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPostMeta.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentStory.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.module.scss?96a0","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.module.scss?bbd6","webpack://telegram-t/./src/components/right/statistics/StatisticsMessagePublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsStoryPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/StoryStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageBot.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.tsx","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.module.scss?dbb9","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.module.scss?717b","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.tsx","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.module.scss?de6c","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/util/launchMediaWorkers.ts"],"sourcesContent":["import type { ApiMessage, ApiPeer } from '../../../api/types';\nimport type { MediaViewerMedia } from '../../../types';\n\nimport { getMessageContent, isDocumentPhoto, isDocumentVideo } from '../../../global/helpers';\n\nexport type MediaViewerItem = {\n  type: 'message';\n  message: ApiMessage;\n  mediaIndex?: number;\n} | {\n  type: 'avatar';\n  avatarOwner: ApiPeer;\n  mediaIndex: number;\n} | {\n  type: 'standalone';\n  media: MediaViewerMedia[];\n  mediaIndex: number;\n};\n\ntype ViewableMedia = {\n  media: MediaViewerMedia;\n  isSingle?: boolean;\n};\n\nexport function getMediaViewerItem({\n  message, avatarOwner, standaloneMedia, mediaIndex,\n}: {\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  standaloneMedia?: MediaViewerMedia[];\n  mediaIndex?: number;\n}): MediaViewerItem | undefined {\n  if (avatarOwner) {\n    return {\n      type: 'avatar',\n      avatarOwner,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (standaloneMedia) {\n    return {\n      type: 'standalone',\n      media: standaloneMedia!,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (message) {\n    return {\n      type: 'message',\n      message,\n      mediaIndex,\n    };\n  }\n\n  return undefined;\n}\n\nexport default function getViewableMedia(params?: MediaViewerItem): ViewableMedia | undefined {\n  if (!params) return undefined;\n\n  if (params.type === 'standalone') {\n    return {\n      media: params.media[params.mediaIndex],\n      isSingle: params.media.length === 1,\n    };\n  }\n\n  if (params.type === 'avatar') {\n    const avatar = params.avatarOwner.photos?.[params.mediaIndex];\n    if (avatar) {\n      return {\n        media: avatar,\n      };\n    }\n    return undefined;\n  }\n\n  const {\n    action, document, photo, video, webPage, paidMedia,\n  } = getMessageContent(params.message);\n\n  if (action?.photo) {\n    return {\n      media: action.photo,\n      isSingle: true,\n    };\n  }\n\n  if (document && (isDocumentPhoto(document) || isDocumentVideo(document))) {\n    return {\n      media: document,\n      isSingle: true,\n    };\n  }\n\n  if (webPage) {\n    const { photo: webPagePhoto, video: webPageVideo } = webPage;\n    const media = webPageVideo || webPagePhoto;\n    if (media) {\n      return {\n        media,\n        isSingle: true,\n      };\n    }\n  }\n\n  if (paidMedia) {\n    const extendedMedia = paidMedia.extendedMedia[params.mediaIndex || 0];\n    if (!('mediaType' in extendedMedia)) {\n      const { photo: extendedPhoto, video: extendedVideo } = extendedMedia;\n      return {\n        media: (extendedPhoto || extendedVideo)!,\n      };\n    }\n  }\n\n  const media = video || photo;\n\n  if (media) {\n    return {\n      media,\n      isSingle: video?.isGif,\n    };\n  }\n\n  return undefined;\n}\n","import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { isElementInViewport } from '../../../util/isElementInViewport';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n  mediaIndex?: number,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message, mediaIndex);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage, mediaIndex?: number,\n) {\n  const { container, mediaEl: toImage } = getNodes(origin, message, mediaIndex);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [MediaViewerOrigin.Inline, MediaViewerOrigin.ScheduledInline].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  ) || (\n    [MediaViewerOrigin.Album, MediaViewerOrigin.ScheduledAlbum].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(container: HTMLElement, imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n  let imgOffsetTop = container.offsetTop + imageEl.closest<HTMLDivElement>('.content-inner, .WebPage')!.offsetTop;\n  if (container.id.includes('album-media-')) {\n    imgOffsetTop += container.parentElement!.offsetTop + container.closest<HTMLDivElement>('.Message')!.offsetTop;\n  }\n\n  return imgOffsetTop > messageListElement.scrollTop\n    && imgOffsetTop + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage, index?: number) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      // eslint-disable-next-line max-len\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.StarsTransaction:\n      containerSelector = '.transaction-media-preview';\n      mediaSelector = index === 0 ? `.stars-transaction-media-${index} :is(img, video)` : undefined;\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = mediaSelector\n    ? container?.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector) : undefined;\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.StarsTransaction:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\nimport { IS_IOS, IS_PWA } from '../util/windowEnvironment';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type { MediaViewerMedia } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getMediaFileSize,\n  getMediaFormat,\n  getMediaHash,\n  getMediaThumbUri,\n  getPhotoFullDimensions,\n  getVideoAvatarMediaHash,\n  getVideoDimensions,\n  isDocumentPhoto,\n  isDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\ntype UseMediaProps = {\n  media?: MediaViewerMedia;\n  isAvatar?: boolean;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  media,\n  isAvatar,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const isVideoAvatar = isAvatar && media?.mediaType === 'photo' && media.isVideo;\n  const isDocument = media?.mediaType === 'document';\n  const isVideo = (media?.mediaType === 'video' && !media.isRound) || (isDocument && isDocumentVideo(media));\n  const isPhoto = media?.mediaType === 'photo' || (isDocument && isDocumentPhoto(media));\n  const isGif = media?.mediaType === 'video' && media.isGif;\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaOrAvatarHash = useMemo(() => (isFull?: boolean) => {\n    if (!media) return undefined;\n\n    if (isVideoAvatar && isFull) {\n      return getVideoAvatarMediaHash(media);\n    }\n\n    return getMediaHash(media, isFull ? 'full' : 'preview');\n  }, [isVideoAvatar, media]);\n\n  const pictogramBlobUrl = useMedia(\n    media\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocument)\n    && getMediaHash(media, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaOrAvatarHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaOrAvatarHash(true),\n    undefined,\n    media && getMediaFormat(media, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = media && 'blobUrl' in media ? media.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && media && getMediaThumbUri(media));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    (!isVideoAvatar && !isVideo) ? (previewBlobUrl || pictogramBlobUrl || bestImageData) : undefined\n  );\n\n  const mediaSize = media && getMediaFileSize(media);\n\n  const isLocal = Boolean(localBlobUrl);\n\n  const dimensions = useMemo(() => {\n    if (isAvatar) {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n\n    if (isDocument) {\n      return media.mediaSize!;\n    }\n\n    if (isPhoto) {\n      return getPhotoFullDimensions(media);\n    }\n\n    if (isVideo) {\n      return getVideoDimensions(media);\n    }\n    return undefined;\n  }, [isAvatar, isDocument, isPhoto, isVideo, isVideoAvatar, media]);\n\n  return {\n    getMediaHash: getMediaOrAvatarHash,\n    media,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocument,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    mediaSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useEffect(() => {\n    return () => {\n      setZoomChange(1);\n    };\n  }, []);\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { IAlbum } from '../../types';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectAllowedMessageActions,\n  selectBot,\n  selectChat,\n  selectCurrentMessageList,\n  selectUser,\n} from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  onClose: NoneToVoidFunction;\n  onConfirm?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isSchedule,\n  message,\n  album,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  onClose,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n  } = getActions();\n\n  const handleDeleteMessageForAll = useCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    deleteMessages({ messageIds, shouldDeleteForAll: true });\n    onClose();\n  }, [onConfirm, album, message.id, deleteMessages, onClose]);\n\n  const handleDeleteMessageForSelf = useCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else {\n      deleteMessages({\n        messageIds,\n        shouldDeleteForAll: false,\n      });\n    }\n    onClose();\n  }, [onConfirm, album, message.id, isSchedule, onClose, deleteScheduledMessages, deleteMessages]);\n\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen && !canDeleteForAll ? handleDeleteMessageForSelf : undefined}\n      className=\"delete\"\n      title={lang('DeleteSingleMessagesTitle')}\n    >\n      <p>{lang('AreYouSureDeleteSingleMessage')}</p>\n      {willDeleteForCurrentUserOnly && (\n        <p>{lang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n      )}\n      {willDeleteForAll && (\n        <p>{lang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n      )}\n      <div className={canDeleteForAll ? 'dialog-buttons-column' : 'dialog-buttons'}>\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n            {contactName && renderText(lang('Conversation.DeleteMessagesFor', contactName))}\n            {!contactName && lang('Conversation.DeleteMessagesForEveryone')}\n          </Button>\n        )}\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n          {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, isSchedule }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const { canDeleteForAll } = (threadId && selectAllowedMessageActions(global, message, threadId)) || {};\n    const chat = selectChat(global, message.chatId);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const isChatWithBot = Boolean(selectBot(global, message.chatId));\n\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveDownloads, MessageListType } from '../../global/types';\nimport type { MediaViewerOrigin } from '../../types';\nimport type { MenuItemProps } from '../ui/MenuItem';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getIsDownloading,\n  getMediaFilename,\n  getMediaFormat,\n  getMediaHash,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActions,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsMessageProtected,\n  selectTabState,\n} from '../../global/selectors';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteMessageModal from '../common/DeleteMessageModal';\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  activeDownloads: ActiveDownloads;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  origin?: MediaViewerOrigin;\n};\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  mediaData?: string;\n  isVideo: boolean;\n  canUpdateMedia?: boolean;\n  canReport?: boolean;\n  activeDownloads?: ActiveDownloads;\n  onReport: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  item,\n  mediaData,\n  isVideo,\n  isChatProtected,\n  isProtected,\n  canReport,\n  canDelete,\n  canUpdate,\n  messageListType,\n  activeDownloads,\n  origin,\n  onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMedia,\n    cancelMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n    openMediaViewer,\n  } = getActions();\n\n  const isMessage = item?.type === 'message';\n\n  const { media } = getViewableMedia(item) || {};\n  const fileName = media && getMediaFilename(media);\n  const isDownloading = media && getIsDownloading(activeDownloads, media);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    media && getMediaHash(media, 'download'),\n    !isDownloading,\n    media && getMediaFormat(media, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (!media) return;\n\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (item?.type !== 'avatar') return;\n    const { avatarOwner, mediaIndex } = item;\n    const avatarPhoto = avatarOwner.photos?.[mediaIndex]!;\n    if (isUserId(avatarOwner.id)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwner.id, photo: avatarPhoto });\n    }\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: avatarOwner.id,\n      mediaIndex: 0,\n      isAvatarView: true,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const lang = useOldLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModals() {\n    if (item?.type === 'message') {\n      return (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          onConfirm={onBeforeDelete}\n          message={item.message}\n        />\n      );\n    }\n    if (item?.type === 'avatar') {\n      return (\n        <DeleteProfilePhotoModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onConfirm={onBeforeDelete}\n          profileId={item.avatarOwner.id}\n          photo={item.avatarOwner.photos![item.mediaIndex!]}\n        />\n      );\n    }\n\n    return undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected || item?.type === 'standalone') {\n      return undefined;\n    }\n\n    return isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <i className=\"icon icon-download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <i className=\"icon icon-download\" />\n      </Button>\n    );\n  }\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (isMessage && item.message.isForwardingAllowed && !item.message.content.action && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReport) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModal,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModals()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {isMessage && item.message.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <i className=\"icon icon-forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <i className=\"icon icon-zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <i className=\"icon icon-zoom-in\" />\n      </Button>\n      {canReport && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <i className=\"icon icon-flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <i className=\"icon icon-copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModal}\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {canDelete && renderDeleteModals()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    item, canUpdateMedia,\n  }): StateProps => {\n    const tabState = selectTabState(global);\n    const { origin } = tabState.mediaViewer;\n\n    const message = item?.type === 'message' ? item.message : undefined;\n    const avatarOwner = item?.type === 'avatar' ? item.avatarOwner : undefined;\n    const avatarPhoto = avatarOwner?.photos?.[item!.mediaIndex!];\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isProtected = selectIsMessageProtected(global, message);\n    const activeDownloads = selectActiveDownloads(global);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActions(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarHash);\n    const canDeleteAvatar = canUpdateMedia && !!avatarPhoto;\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && !!avatarPhoto && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      activeDownloads,\n      isProtected,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      origin,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  onClick: () => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', isForVideo, onClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useEffect(() => {\n    return () => {\n      setCurrentTime(0);\n    };\n  }, []);\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useEffect(() => {\n    return () => {\n      setIsVideoWaiting(false);\n    };\n  }, []);\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => {\n    videoPreview?.destroy();\n    videoPreview = undefined;\n  };\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ingarEvU\",\"preview\":\"TqpEWfl3\",\"previewCanvas\":\"fKVz2lln\",\"previewTime\":\"bGiNvx5D\",\"previewTimeText\":\"mnkqvOMR\",\"track\":\"Od9ZSc1U\",\"buffered\":\"ANe2DKfp\",\"played\":\"igaGLblf\",\"seeking\":\"beUP6SqY\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { clamp, round } from '../../util/math';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useSignal,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useOldLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon = useMemo(() => {\n    if (volume === 0 || isMuted) return 'icon-muted';\n    if (volume < 0.3) return 'icon-volume-1';\n    if (volume < 0.6) return 'icon-volume-2';\n    return 'icon-volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <i className={buildClassName('icon', isPlaying ? 'icon-pause' : 'icon-play')} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <i className={buildClassName('icon', volumeIcon)} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <i className=\"icon icon-pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <i className={buildClassName('icon ', isFullscreen ? 'icon-smallscreen' : 'icon-fullscreen')} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/windowEnvironment';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useFullscreen from '../../hooks/window/useFullscreen';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  isClickDisabled?: boolean;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  onClose,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(!isBuffered && !isUnsupported, undefined, undefined, 'slow');\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, []);\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <i className=\"icon icon-play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage,\n} from '../../api/types';\nimport type { MediaViewerOrigin } from '../../types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  selectIsMessageProtected, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { ARE_WEBCODECS_SUPPORTED, IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  item: MediaViewerItem;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  isMoving?: boolean;\n  onClose: () => void;\n  onFooterClick: () => void;\n};\n\ntype StateProps = {\n  textMessage?: ApiMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\n\nconst MediaViewerContent = ({\n  item,\n  isActive,\n  textMessage,\n  origin,\n  withAnimation,\n  isProtected,\n  volume,\n  playbackRate,\n  isMuted,\n  isHidden,\n  isMoving,\n  onClose,\n  onFooterClick,\n}: OwnProps & StateProps) => {\n  const lang = useOldLang();\n\n  const isAvatar = item.type === 'avatar';\n  const { media } = getViewableMedia(item) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    mediaSize,\n    loadProgress,\n  } = useMediaProps({\n    media, isAvatar, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n\n  const isOpen = Boolean(media);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  if (!media) return undefined;\n\n  if (item.type !== 'message') {\n    if (!isVideoAvatar) {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={media.id}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={mediaSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n          />\n        </div>\n      );\n    }\n  }\n\n  if (!textMessage) return undefined;\n  const textParts = textMessage.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({ message: textMessage, forcePlayback: true, isForMediaViewer: true });\n\n  const hasFooter = Boolean(textParts);\n  const posterSize = calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={media.id}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={mediaSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n      origin,\n    } = selectTabState(global).mediaViewer;\n    const textMessage = item.type === 'message' ? item.message : undefined;\n\n    return {\n      origin,\n      textMessage,\n      isProtected: textMessage && selectIsMessageProtected(global, textMessage),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport { useFullscreenStatus } from '../../hooks/window/useFullscreen';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  chatId?: string;\n  threadId?: ThreadId;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  getNextItem: (from: MediaViewerItem, direction: number) => MediaViewerItem | undefined;\n  selectItem: (item: MediaViewerItem) => void;\n  loadMoreItemsIfNeeded: (item: MediaViewerItem) => void;\n  onFooterClick: () => void;\n  onClose: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  item,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  isLoadingMoreMedia,\n  isSynced,\n  loadMoreItemsIfNeeded,\n  getNextItem,\n  selectItem,\n  onClose,\n  onFooterClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveItem, setActiveItem] = useSignal<MediaViewerItem | undefined>(item);\n  const activeItemRef = useSignalRef(getActiveItem);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeItem = useDerivedState(getActiveItem);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectItemDebounced = useDebouncedCallback(selectItem, [selectItem], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveItem(item);\n    }\n  }, [item, setActiveItem, transformRef]);\n\n  useEffect(() => {\n    if (!isSynced || !activeItem || isLoadingMoreMedia) return;\n    loadMoreItemsIfNeeded(activeItem);\n  }, [activeItem, loadMoreItemsIfNeeded, isSynced, isLoadingMoreMedia]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeItemRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const cActiveItem = activeItemRef.current;\n      if (cActiveItem === undefined) return false;\n      const nextItem = getNextItem(cActiveItem, direction);\n      if (nextItem !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const cActiveItem = activeItemRef.current;\n      const nextItem = cActiveItem && getNextItem(cActiveItem, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (nextItem !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    activeItemRef,\n    clearSwipeDirectionDebounced,\n    clickXThreshold,\n    getNextItem,\n    isFullscreen,\n    isHidden,\n    onClose,\n    selectItemDebounced,\n    setActiveItem,\n    setIsActiveDebounced,\n    setTransform,\n    shouldCloseOnVideo,\n    transformRef,\n    windowHeight,\n    windowWidth,\n    withAnimation,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  const [prevItem, nextItem] = useMemo(() => {\n    if (activeItem === undefined) return [undefined, undefined];\n    return [getNextItem(activeItem, -1), getNextItem(activeItem, 1)];\n  }, [activeItem, getNextItem]);\n\n  if (activeItem === undefined) return undefined;\n\n  const hasPrev = prevItem !== undefined;\n  const hasNext = nextItem !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={prevItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          item={activeItem}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n          onClose={onClose}\n          onFooterClick={onFooterClick}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={nextItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiPeer } from '../../api/types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getSenderTitle, isChatChannel, isChatGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectSender,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dates/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n};\n\ntype StateProps = {\n  owner?: ApiPeer;\n  isFallbackAvatar?: boolean;\n};\n\nconst BULLET = '\\u2022';\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  owner,\n  item,\n  isFallbackAvatar,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (item?.type !== 'message') return;\n\n    const message = item.message;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId: message.chatId, messageId: message.id });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId: message.chatId, messageId: message.id });\n    }\n  });\n\n  const lang = useOldLang();\n\n  const subtitle = useMemo(() => {\n    if (!item || item.type === 'standalone') return undefined;\n\n    const avatarOwner = item.type === 'avatar' ? item.avatarOwner : undefined;\n    const avatar = avatarOwner?.photos?.[item.mediaIndex!];\n    const date = item.type === 'message' ? item.message.date : avatar?.date;\n    if (!date) return undefined;\n\n    const formattedDate = formatMediaDateTime(lang, date * 1000, true);\n\n    const parts: string[] = [];\n    if (avatar) {\n      const chat = !isUserId(avatarOwner!.id) ? avatarOwner as ApiChat : undefined;\n      const isChannel = chat && isChatChannel(chat);\n      const isGroup = chat && isChatGroup(chat);\n      parts.push(lang(\n        isFallbackAvatar ? 'lng_mediaview_profile_public_photo'\n          : isChannel ? 'lng_mediaview_channel_photo'\n            : isGroup ? 'lng_mediaview_group_photo' : 'lng_mediaview_profile_photo',\n      ));\n    }\n\n    parts.push(formattedDate);\n\n    return parts.join(` ${BULLET} `);\n  }, [item, isFallbackAvatar, lang]);\n\n  if (!owner) {\n    return undefined;\n  }\n\n  const senderTitle = getSenderTitle(lang, owner);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={owner.id} size=\"medium\" peer={owner} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {subtitle}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const message = item?.type === 'message' ? item.message : undefined;\n    const messageSender = message && selectSender(global, message);\n\n    const owner = item?.type === 'avatar' ? item.avatarOwner : messageSender;\n\n    const fallbackAvatar = item?.type === 'avatar'\n      ? selectUserFullInfo(global, item.avatarOwner.id)?.fallbackPhoto : undefined;\n\n    const isFallbackAvatar = fallbackAvatar && item?.type === 'avatar'\n      && item.avatarOwner.photos?.[item.mediaIndex].id === fallbackAvatar.id;\n\n    return {\n      owner,\n      isFallbackAvatar,\n    };\n  },\n)(SenderInfo);\n","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiPhoto,\n} from '../../api/types';\nimport { type MediaViewerMedia, MediaViewerOrigin, type ThreadId } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  getChatMediaMessageIds, getMessagePaidMedia, isChatAdmin, isUserId,\n} from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentChatMediaSearch,\n  selectCurrentSharedMediaSearch,\n  selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPeer,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia, { getMediaViewerItem, type MediaViewerItem } from './helpers/getViewableMedia';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePrevious from '../../hooks/usePrevious';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: ThreadId;\n  messageId?: number;\n  message?: ApiMessage;\n  collectedMessageIds?: number[];\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatar?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  chatMessages?: Record<number, ApiMessage>;\n  standaloneMedia?: MediaViewerMedia[];\n  mediaIndex?: number;\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  withDynamicLoading?: boolean;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\n\nconst MediaViewer = ({\n  chatId,\n  threadId,\n  messageId,\n  message,\n  collectedMessageIds,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatar,\n  avatarOwner,\n  chatMessages,\n  standaloneMedia,\n  mediaIndex,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n  withDynamicLoading,\n  isLoadingMoreMedia,\n  isSynced,\n}: StateProps) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n    searchChatMediaMessages,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || message || standaloneMedia);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const senderId = message?.senderId || avatarOwner?.id;\n  const prevSenderId = usePrevious<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  const currentItem = getMediaViewerItem({\n    message, avatarOwner, standaloneMedia, mediaIndex,\n  });\n  const { media, isSingle } = getViewableMedia(currentItem) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n  } = useMediaProps({\n    media, isAvatar: Boolean(avatarOwner), origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReport = avatarOwner && !isChatWithSelf;\n  const isVisible = !isHidden && isOpen;\n\n  const messageMediaIds = useMemo(() => {\n    return withDynamicLoading\n      ? collectedMessageIds\n      : getChatMediaMessageIds(chatMessages || {}, collectedMessageIds || [], isFromSharedMedia);\n  }, [chatMessages, collectedMessageIds, isFromSharedMedia, withDynamicLoading]);\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || animationKey.current === undefined)) {\n    animationKey.current = isSingle ? 0 : (messageId || mediaIndex);\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      document.body.classList.toggle('is-media-viewer-open', isOpen);\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    mql.addEventListener('change', forceUpdate);\n\n    return () => {\n      mql.removeEventListener('change', forceUpdate);\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePrevious<ApiMessage | undefined>(message);\n  const prevIsHidden = usePrevious<boolean | undefined>(isHidden);\n  const prevOrigin = usePrevious(origin);\n  const prevItem = usePrevious(currentItem);\n  const prevBestImageData = usePrevious(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevItem !== currentItem;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (shouldAnimateOpening || !prevItem)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message, mediaIndex);\n    }\n\n    if (isGhostAnimation && !isOpen && prevItem) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage, prevItem?.mediaIndex);\n    }\n  }, [\n    bestImageData, dimensions, hasFooter, isGhostAnimation, isOpen, isVideo, message, origin,\n    prevBestImageData, prevItem, prevMessage, prevOrigin, shouldAnimateOpening, mediaIndex,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const handleFooterClick = useLastCallback(() => {\n    handleClose();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId });\n    }\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [messageId!],\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const loadMoreItemsIfNeeded = useLastCallback((item?: MediaViewerItem) => {\n    if (!item || !withDynamicLoading || isLoadingMoreMedia) return;\n    if (item.type !== 'message') return;\n    searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: item.message.id });\n  });\n\n  const getNextItem = useLastCallback((from: MediaViewerItem, direction: number): MediaViewerItem | undefined => {\n    if (direction === 0 || isSingle) return undefined;\n\n    if (from.type === 'standalone') {\n      const { media: fromMedia, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && nextIndex < fromMedia.length) {\n        return { type: 'standalone', media: fromMedia, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'avatar') {\n      const { avatarOwner: fromAvatarOwner, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && fromAvatarOwner.photos && nextIndex < fromAvatarOwner.photos.length) {\n        return { type: 'avatar', avatarOwner: fromAvatarOwner, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    const { message: fromMessage, mediaIndex: fromMediaIndex } = from;\n\n    const paidMedia = getMessagePaidMedia(fromMessage);\n    if (paidMedia) {\n      const nextIndex = fromMediaIndex! + direction;\n\n      if (nextIndex >= 0 && nextIndex < paidMedia.extendedMedia.length) {\n        return { type: 'message', message: fromMessage, mediaIndex: nextIndex };\n      }\n    }\n\n    const index = messageMediaIds?.indexOf(fromMessage.id);\n    if (index === undefined) return undefined;\n    const nextIndex = index + direction;\n    const nextMessageId = messageMediaIds![nextIndex];\n    const nextMessage = chatMessages?.[nextMessageId];\n    if (nextMessage) {\n      return { type: 'message', message: nextMessage };\n    }\n\n    return undefined;\n  });\n\n  const openMediaViewerItem = useLastCallback((item?: MediaViewerItem) => {\n    if (!item) {\n      handleClose();\n      return;\n    }\n\n    const itemChatId = item.type === 'avatar'\n      ? item.avatarOwner.id : item.type === 'message'\n        ? item.message.chatId : undefined;\n    const itemMessageId = item.type === 'message' ? item.message.id : undefined;\n    const itemStandaloneMedia = item.type === 'standalone' ? item.media : undefined;\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: itemChatId,\n      messageId: itemMessageId,\n      standaloneMedia: itemStandaloneMedia,\n      mediaIndex: item.mediaIndex,\n      isAvatarView: item.type === 'avatar',\n      withDynamicLoading,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    const mediaCount = avatarOwner?.photos?.length || standaloneMedia?.length || messageMediaIds?.length || 0;\n    if (mediaCount <= 1 || !currentItem) {\n      handleClose();\n      return;\n    }\n    // Before deleting, select previous media\n    const prevMedia = getNextItem(currentItem, -1);\n    if (prevMedia) {\n      openMediaViewerItem(prevMedia);\n      return;\n    }\n\n    if (currentItem.type === 'avatar' || currentItem.type === 'standalone') {\n      // Keep current item, it'll update when indexes shift\n      return;\n    }\n\n    handleClose();\n  });\n\n  const lang = useOldLang();\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          <SenderInfo\n            key={media?.id}\n            item={currentItem}\n          />\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          item={currentItem}\n          canUpdateMedia={canUpdateMedia}\n          canReport={canReport}\n          onBeforeDelete={handleBeforeDelete}\n          onReport={openReportModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          subject=\"media\"\n          photo={avatar}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        item={currentItem}\n        loadMoreItemsIfNeeded={loadMoreItemsIfNeeded}\n        isLoadingMoreMedia={isLoadingMoreMedia}\n        isSynced={isSynced}\n        getNextItem={getNextItem}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectItem={openMediaViewerItem}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      messageId,\n      origin,\n      isHidden,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isAvatarView,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId, isSynced } = global;\n    const isChatWithSelf = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    if (isAvatarView) {\n      const peer = selectPeer(global, chatId!);\n      let canUpdateMedia = false;\n      if (peer) {\n        canUpdateMedia = isUserId(peer.id) ? peer.id === currentUserId : isChatAdmin(peer as ApiChat);\n      }\n\n      return {\n        avatar: peer?.photos?.[mediaIndex!],\n        avatarOwner: peer,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n        standaloneMedia,\n        mediaIndex,\n      };\n    }\n\n    let message: ApiMessage | undefined;\n    if (chatId && messageId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        message = selectScheduledMessage(global, chatId, messageId);\n      } else {\n        message = selectChatMessage(global, chatId, messageId);\n      }\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (chatId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        chatMessages = selectChatScheduledMessages(global, chatId);\n      } else {\n        chatMessages = selectChatMessages(global, chatId);\n      }\n    }\n\n    let isLoadingMoreMedia = false;\n    const isOriginInline = origin === MediaViewerOrigin.Inline;\n    const isOriginAlbum = origin === MediaViewerOrigin.Album;\n    let collectedMessageIds: number[] | undefined;\n\n    if (chatId && threadId && messageId) {\n      if (withDynamicLoading && (isOriginInline || isOriginAlbum)) {\n        const currentSearch = selectCurrentChatMediaSearch(global);\n        isLoadingMoreMedia = Boolean(currentSearch?.isLoading);\n        const { foundIds } = (currentSearch?.currentSegment) || {};\n        collectedMessageIds = foundIds;\n      } else if (origin === MediaViewerOrigin.SharedMedia) {\n        const currentSearch = selectCurrentSharedMediaSearch(global);\n        const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n        collectedMessageIds = foundIds;\n      } else if (isOriginInline || isOriginAlbum) {\n        const outlyingList = selectOutlyingListByMessageId(global, chatId, threadId, messageId);\n        collectedMessageIds = outlyingList || selectListedIds(global, chatId, threadId);\n      }\n    }\n\n    return {\n      chatId,\n      threadId,\n      messageId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      collectedMessageIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isLoadingMoreMedia,\n      isSynced,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"bu_hGbaa\",\"fullSize\":\"W9A8SEMl\",\"backdrop\":\"OFh6u50Q\",\"captionBackdrop\":\"Jd1DYS6Y\",\"backdropNonInteractive\":\"xe67dhtF\",\"close\":\"Mye8Dwxa\",\"wrapper\":\"gLHHo5k8\",\"slideAnimation\":\"GJVwqV9e\",\"slideAnimationToActive\":\"_Yn4SWUB\",\"content\":\"hGCH03qc\",\"slideAnimationFromActive\":\"ZecqXqKy\",\"storyHeader\":\"e7HHuS1g\",\"composer\":\"FXineBYO\",\"caption\":\"RKedwa0I\",\"captionGradient\":\"sHNAfxzf\",\"media\":\"PVZ8TOWS\",\"mediaPreview\":\"lQfkulvp\",\"contentInner\":\"Wi0DXPH2\",\"name\":\"Ka1CGfzq\",\"slide\":\"urTtSsk9\",\"mobileSlide\":\"AjXOHOgE\",\"slidePreview\":\"Sef28wEh\",\"activeSlide\":\"uAlXNXJN\",\"slideInner\":\"g8ypsnnC\",\"mediaWrapper\":\"YiuvOPgT\",\"forward\":\"pGKsAszF\",\"storyIndicators\":\"jGDd2sza\",\"sender\":\"eMYhXF_X\",\"senderInfoTransition\":\"PXnfXZur\",\"senderInfo\":\"WpyVfrsc\",\"senderMeta\":\"jmKI_lhC\",\"senderName\":\"H1uod43o\",\"storyMetaRow\":\"zimpR8Hz\",\"storyMeta\":\"hGTnZuar\",\"closeButton\":\"WlLsjJ2Z\",\"actions\":\"GrsJNw3y\",\"active\":\"q756IpZB\",\"visibilityButton\":\"prxptFFf\",\"visibilityButtonSelf\":\"_MVsZpgB\",\"button\":\"TkphaPyQ\",\"buttonMenu\":\"K0_xAdzf\",\"captionInner\":\"D_5mWNmi\",\"captionContent\":\"ilyTRZtw\",\"captionText\":\"hmFA5qb1\",\"hasOverflow\":\"e1gyTmKe\",\"expanded\":\"HIMnUViv\",\"animate\":\"CvnxnCxN\",\"withShowMore\":\"Vq8pl_kQ\",\"captionShowMore\":\"bM5rlQtM\",\"navigate\":\"nZ30pf4g\",\"prev\":\"SXpRZiax\",\"next\":\"twOBFwUE\",\"modal\":\"nLPOogqS\",\"thumbnail\":\"MnNC7VHS\",\"ghost\":\"fME2l_yv\",\"ghost2\":\"TYicp2_K\",\"ghostImage\":\"HjoURJRK\",\"forwardHeader\":\"JJFtefb9\",\"clickable\":\"BsqMBS2I\",\"headerTitle\":\"G8OgmMDJ\",\"forwardInfo\":\"_M8CgT7s\",\"fromPeer\":\"nJr8QgYX\"};","import type { IDimensions } from '../../../global/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n\n    const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--safe-area-bottom');\n    if (safeAreaBottom) {\n      toHeight -= parseFloat(safeAreaBottom);\n    }\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.mobileSlide} .${styles.media}, .${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../global/types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nexport const BASE_STORY_WIDTH = 720;\nexport const BASE_STORY_HEIGHT = 1280;\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n  const hasForwardInfo = isLoadedStory && Boolean(story.forwardInfo);\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GrE47IXS\",\"closeButton\":\"NlWSF1pA\",\"stealthIcon\":\"qKi5jsGM\",\"title\":\"BFctFGoT\",\"description\":\"fZIJH4IG\",\"listItem\":\"RGD70uBt\",\"icon\":\"HCYfPccW\",\"button\":\"AM_sxoXP\",\"subtitle\":\"L8oRQyKb\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useOldLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <i className=\"icon icon-eye-closed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-past', styles.icon)} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-future', styles.icon)} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Picker from '../../common/Picker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  usersById: Record<string, ApiUser>;\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  usersById,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterUsersByName([...selectedIds || [], ...contactIds], usersById, searchQuery));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds, usersById]);\n\n  return (\n    <Picker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedSelectedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"BDK_pgpt\",\"active\":\"N8ujSwlC\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Picker from '../../common/Picker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useOldLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterUsersByName([...closeFriendIds, ...contactIds], usersById, searchQuery));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery, usersById]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <Picker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"hz7SomkK\",\"header\":\"NV6Rt2g9\",\"closeButton\":\"SN1GFS6L\",\"headerTitle\":\"gi0Y6Ns6\",\"content\":\"sTaVDkiD\",\"section\":\"eUiuPoEC\",\"title\":\"iPPiw9DI\",\"list\":\"OUP1Ss0W\",\"option\":\"JL33Sa3b\",\"checked\":\"qVPo_cVL\",\"input\":\"zsDaUk0i\",\"icon\":\"AfYCVlys\",\"action\":\"njMeBBwY\",\"optionContent\":\"TUAAnG2w\",\"footer\":\"r24Qz2bf\",\"info\":\"ljeRVBOm\",\"submit\":\"RwNLN_rH\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiUser } from '../../api/types';\nimport type { ApiPrivacySettings, PrivacyVisibility } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getSenderTitle, getUserFullName } from '../../global/helpers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryInProfile } = getActions();\n\n  const lang = useOldLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isInProfile);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isInProfile !== isPinned) {\n      toggleStoryInProfile({ peerId: story!.peerId, storyId: story!.id, isInProfile: isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getSenderTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? convertSecondsToHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <i className={`icon icon-${option.icon}`} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <i className=\"icon icon-next\" aria-hidden />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n\nfunction convertSecondsToHours(seconds: number): number {\n  const secondsInHour = 3600;\n  const minutesInHour = 60;\n\n  const hours = Math.floor(seconds / secondsInHour);\n  const remainingSeconds = seconds % secondsInHour;\n  const remainingMinutes = Math.floor(remainingSeconds / minutesInHour);\n\n  // If remaining minutes are greater than or equal to 30, round up the hours\n  return remainingMinutes >= 30 ? hours + 1 : hours;\n}\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStoryForwardInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getSenderTitle,\n  isUserId,\n} from '../../../global/helpers';\nimport { selectPeer, selectPeerStory } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  forwardInfo: ApiStoryForwardInfo;\n  className?: string;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  story?: ApiTypeStory;\n};\n\nconst EmbeddedStoryForward: FC<OwnProps & StateProps> = ({\n  className,\n  forwardInfo,\n  sender,\n  story,\n}) => {\n  const { openStoryViewer, loadPeerStoriesByIds, openChat } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!story && forwardInfo.fromPeerId && forwardInfo.storyId) {\n      loadPeerStoriesByIds({\n        peerId: forwardInfo.fromPeerId,\n        storyIds: [forwardInfo.storyId],\n      });\n    }\n  }, [forwardInfo, story]);\n\n  const senderTitle = sender ? getSenderTitle(lang, sender) : forwardInfo.fromName;\n\n  const openOriginalStory = useLastCallback(() => {\n    const { fromPeerId, storyId } = forwardInfo;\n    if (!fromPeerId) return;\n\n    const isStoryReady = story && !('isDeleted' in story && story.isDeleted);\n\n    if (isStoryReady) {\n      openStoryViewer({\n        peerId: fromPeerId,\n        storyId,\n        isSingleStory: true,\n      });\n    } else {\n      openChat({ id: fromPeerId });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(openOriginalStory);\n\n  function renderTextContent() {\n    if (story && 'content' in story && story.content.text) {\n      return (\n        <p className=\"embedded-text-wrapper\">\n          {renderTextWithEntities(story.content.text)}\n        </p>\n      );\n    }\n\n    return undefined;\n  }\n\n  function renderSender() {\n    if (!sender || !senderTitle) {\n      return undefined;\n    }\n\n    const icon: IconName | undefined = !isUserId(sender.id) ? 'channel-filled' : 'user-filled';\n\n    return (\n      <>\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {senderTitle && renderText(senderTitle)}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, true, true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        {renderTextContent()}\n        <div className=\"message-title\">\n          {renderSender()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { forwardInfo }): StateProps => {\n    const sender = forwardInfo.fromPeerId ? selectPeer(global, forwardInfo.fromPeerId) : undefined;\n    const story = forwardInfo.storyId && forwardInfo.fromPeerId\n      ? selectPeerStory(global, forwardInfo.fromPeerId, forwardInfo.storyId) : undefined;\n    return {\n      sender,\n      story,\n    };\n  },\n)(EmbeddedStoryForward));\n","import React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport calcTextLineHeightAndCount from '../../util/element/calcTextLineHeightAndCount';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport EmbeddedStoryForward from '../common/embedded/EmbeddedStoryForward';\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst LINES_TO_SHOW = 3;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n  const renderingStory = useCurrentOrPrev(story, true);\n\n  const caption = renderingStory?.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransition(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useLayoutEffect(() => {\n    requestMeasure(() => {\n      if (!showMoreButtonRef.current) {\n        return;\n      }\n\n      const button = showMoreButtonRef.current;\n\n      const { offsetWidth } = button;\n\n      requestMutation(() => {\n        button.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n      });\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      if (!contentRef.current || !textRef.current) {\n        return undefined;\n      }\n\n      const container = contentRef.current;\n      const textContainer = textRef.current;\n\n      const textOffsetTop = textContainer.offsetTop;\n      const { lineHeight, totalLines } = calcTextLineHeightAndCount(textContainer);\n      const isOverflowing = totalLines > LINES_TO_SHOW;\n      const overflowShift = textOffsetTop + lineHeight * LINES_TO_SHOW;\n\n      return () => {\n        if (isOverflowing) {\n          addExtraClass(container, styles.hasOverflow);\n          setHasOverflow(true);\n        }\n\n        container.style.setProperty('--_overflow-shift', `${overflowShift}px`);\n      };\n    });\n  }, [caption]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          {renderingStory?.forwardInfo && (\n            <EmbeddedStoryForward\n              forwardInfo={renderingStory.forwardInfo}\n              className={styles.forwardInfo}\n            />\n          )}\n          {renderingStory && (\n            <div ref={textRef} className={styles.captionText}>\n              <MessageText\n                messageOrStory={renderingStory}\n                withTranslucentThumbs\n                forcePlayback\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YVD19vOP\",\"viewInfo\":\"cknL5COh\",\"interactive\":\"pJAyeGkG\",\"avatars\":\"Vz_VtJ16\",\"spacer\":\"kKoeDk3Z\",\"reactionCount\":\"sf3u_6Vh\",\"reactionCountHeart\":\"Er2XKRqi\",\"footerItem\":\"vJRk_UUk\",\"views\":\"nIv3YAnZ\",\"viewIcon\":\"WyBiNM6e\",\"reactionButton\":\"lpDXVIuf\",\"reactionHeart\":\"twgMDT1y\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport { getStoryKey, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useOldLang();\n\n  const {\n    views, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const { viewsCount, forwardsCount, reactionsCount } = views || {};\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && 'emoticon' in sentReaction\n    ? sentReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = views && 'recentViewerIds' in views ? views.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [views]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n          className={styles.footerItem}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <>\n          {Boolean(forwardsCount) && (\n            <div className={styles.footerItem}>\n              <Button\n                round\n                color=\"translucent\"\n                size=\"smaller\"\n                nonInteractive\n                ariaLabel={lang('PublicShares')}\n              >\n                <Icon name=\"loop\" />\n              </Button>\n              <span>{forwardsCount}</span>\n            </div>\n          )}\n          <div className={styles.footerItem}>\n            <Button\n              round\n              className={styles.reactionButton}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleLikeStory}\n              ariaLabel={lang('AccDescrLike')}\n            >\n              {sentReaction && (\n                <ReactionAnimatedEmoji\n                  key={'documentId' in sentReaction ? sentReaction.documentId : sentReaction.emoticon}\n                  containerId={containerId}\n                  reaction={sentReaction}\n                  withEffectOnly={isSentStoryReactionHeart}\n                />\n              )}\n              {(!sentReaction || isSentStoryReactionHeart) && (\n                <Icon\n                  name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                  className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n                />\n              )}\n            </Button>\n            {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c1fbGgcx\",\"viewed\":\"xwOKghO2\",\"active\":\"ZuByYcIx\",\"inner\":\"qyBCpJct\",\"progress\":\"XY98E7VM\",\"paused\":\"n9V6B7hP\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMediaAreaChannelPost,\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../global/types';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { getSenderTitle, isChatChannel, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativeTime } from '../../util/dates/dateFormat';\nimport download from '../../util/download';\nimport { round } from '../../util/math';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_SAFARI } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\nimport { BASE_STORY_HEIGHT, BASE_STORY_WIDTH } from './helpers/dimensions';\nimport { PRIMARY_VIDEO_MIME, SECONDARY_VIDEO_MIME } from './helpers/videoFormats';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport { useStreaming } from '../../hooks/useStreaming';\nimport useBackgroundMode from '../../hooks/window/useBackgroundMode';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport Transition from '../ui/Transition';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isReportModalOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  forwardSender?: ApiPeer;\n  fromPeer?: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  areChatSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n  withHeaderAnimation?: boolean;\n}\n\nconst VIDEO_MIN_READY_STATE = IS_SAFARI ? 4 : 3;\nconst SPACEBAR_CODE = 32;\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  forwardSender,\n  fromPeer,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  areChatSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  withHeaderAnimation,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryInProfile,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadChatSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n  const isChangelog = peerId === storyChangelogUserId;\n  const isUserStory = isUserId(peerId);\n  const isChatStory = !isUserStory;\n  const isChannelStory = isChatStory && isChatChannel(peer as ApiChat);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isInProfile : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isInProfile : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : (isLoadedStory && story.forwardInfo?.fromName);\n\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const duration = isLoadedStory && story.content.video?.duration\n    ? story.content.video.duration\n    : undefined;\n\n  const shouldShowComposer = !(isOut && isUserStory) && !isChangelog && !isChannelStory;\n  const shouldShowFooter = isLoadedStory && !shouldShowComposer && (isOut || isChannelStory);\n  const headerAnimation = isMobile && withHeaderAnimation ? 'slideFade' : 'none';\n\n  const {\n    shouldRender: shouldRenderSkeleton,\n    transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransition(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransition(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransition(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransition(shouldShowComposer);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransition(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransition(true);\n  const {\n    shouldRender: shouldRenderCaption,\n    transitionClassNames: captionAppearanceAnimationClassNames,\n  } = useShowTransition(hasText || hasForwardInfo);\n\n  const isStreamingSupported = useStreaming(videoRef, fullMediaData, PRIMARY_VIDEO_MIME);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !areChatSettingsLoaded) {\n      loadChatSettings({ chatId: peerId });\n    }\n  }, [areChatSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress(handleLongPressStart, handleLongPressEnd);\n\n  const isUnsupported = useUnsupportedMedia(\n    videoRef,\n    undefined,\n    !isVideo || !fullMediaData || isStreamingSupported,\n  );\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => {\n    if (hasAllData && !isUnsupported) handlePlayStory();\n  }, [hasAllData, isUnsupported]);\n\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isLoadedStory || isDeletedStory || areViewsExpired) return;\n\n    if (!isOut && !isChannelStory) return;\n\n    // Refresh counters each time\n    loadStoryViews({ peerId, storyId });\n  }, [isDeletedStory, areViewsExpired, isLoadedStory, peerId, storyId, isOut, isChannelStory]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) {\n      return;\n    }\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleForwardPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: forwardSender!.id });\n  });\n\n  const handleFromPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: fromPeer!.id });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    openNextStory();\n  });\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      markStoryPlaying();\n    } else {\n      unmarkStoryPlaying();\n    }\n    if (duration && round(video.currentTime, 2) >= round(duration, 2)) {\n      handleOpenNextStory();\n    }\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getSenderTitle(lang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = lang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = lang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = lang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: lang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: lang('StealthModeOn'),\n        message: lang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: lang('StoryNotFound'),\n    });\n  }, [lang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={lang('AccDescrOpenMenu2')}\n        >\n          <i className={buildClassName('icon icon-more')} aria-hidden />\n        </Button>\n      );\n    };\n  }, [isMobile, lang]);\n\n  function renderStoriesTabs() {\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (!isUserStory) return undefined;\n\n    let privacyIcon = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <i className={`icon icon-${privacyIcon}`} aria-hidden />\n        {isOut && <i className=\"icon icon-next\" aria-hidden />}\n      </div>\n    );\n  }\n\n  function renderSenderInfo() {\n    return (\n      <div className={styles.senderInfo}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderMeta}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getSenderTitle(lang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {forwardSenderTitle && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.forwardHeader, forwardSender && styles.clickable,\n                )}\n                onClick={forwardSender ? handleForwardPeerClick : undefined}\n              >\n                <Icon name=\"loop\" />\n                <span className={styles.headerTitle}>\n                  {renderText(forwardSenderTitle)}\n                </span>\n              </span>\n            )}\n            {fromPeer && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.fromPeer,\n                )}\n                onClick={handleFromPeerClick}\n              >\n                <Avatar peer={fromPeer} size=\"micro\" />\n                <span className={styles.headerTitle}>\n                  {renderText(getSenderTitle(lang, fromPeer) || '')}\n                </span>\n              </span>\n            )}\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativeTime(lang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{lang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Transition activeKey={Number(peerId)} name={headerAnimation} className={styles.senderInfoTransition}>\n          {renderSenderInfo()}\n        </Transition>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={lang('Volume')}\n            >\n              <i\n                className={buildClassName(\n                  'icon',\n                  isMuted || noSound ? 'icon-speaker-muted-story' : 'icon-speaker-story',\n                )}\n                aria-hidden\n              />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{lang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>\n                {lang(isUserStory ? 'StorySave' : 'SaveToPosts')}\n              </MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>\n                {lang(isUserStory ? 'ArchiveStory' : 'RemoveFromPosts')}\n              </MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {lang('lng_media_download')}\n              </MenuItem>\n            )}\n            {!isOut && isUserStory && (\n              <MenuItem icon=\"eye-closed-outline\" onClick={handleOpenStealthModal}>\n                {lang('StealthMode')}\n              </MenuItem>\n            )}\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{lang('lng_report_story')}</MenuItem>}\n            {isOut && <MenuItem icon=\"delete\" destructive onClick={handleDeleteStoryClick}>{lang('Delete')}</MenuItem>}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className={buildClassName('icon icon-close')} aria-hidden />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            key={`preview-${storyId}`}\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, styles.mediaPreview, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            key={`video-${storyId}`}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            width={BASE_STORY_WIDTH}\n            height={BASE_STORY_HEIGHT}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            disableRemotePlayback\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={lang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={lang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay story={story} isActive />\n        )}\n        {!isMobile && (\n          <div className={styles.content}>\n            <div className={styles.contentInner}>\n              <Avatar\n                peer={peer}\n                withStory\n                storyViewerMode=\"disabled\"\n              />\n              <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={lang('Close')}\n        />\n      )}\n      {hasText && <div className={buildClassName(styles.captionGradient, captionAppearanceAnimationClassNames)} />}\n      {shouldRenderCaption && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={captionAppearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={lang(isChatStory ? 'ReplyToGroupStory' : 'ReplyPrivately')}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId,\n  storyId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n      storyList,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const isLoadedStory = story && 'content' in story;\n  const shouldForcePause = Boolean(\n    viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || isReportModalOpen || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal,\n  );\n\n  const forwardInfo = isLoadedStory ? story.forwardInfo : undefined;\n  const mediaAreas = isLoadedStory ? story.mediaAreas : undefined;\n  const forwardSenderId = forwardInfo?.fromPeerId\n    || mediaAreas?.find((area): area is ApiMediaAreaChannelPost => area.type === 'channelPost')?.channelId;\n  const forwardSender = forwardSenderId ? selectPeer(global, forwardSenderId) : undefined;\n  const withHeaderAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  const fromPeer = isLoadedStory && story.fromId ? selectPeer(global, story.fromId) : undefined;\n\n  return {\n    peer: (user || chat)!,\n    forwardSender,\n    fromPeer,\n    story,\n    orderedIds: storyList?.storyIdsByPeerId[peerId],\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    areChatSettingsLoaded: Boolean(chat?.settings),\n    stealthMode: global.stories.stealthMode,\n    withHeaderAnimation,\n  };\n})(Story));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress(\n  onStart: NoneToVoidFunction,\n  onEnd: NoneToVoidFunction,\n) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart();\n      isLongPressActive.current = true;\n    }, DEFAULT_THRESHOLD);\n  }, [onStart]);\n\n  const cancel = useCallback(() => {\n    if (isLongPressActive.current) {\n      onEnd();\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd]);\n\n  useEffect(() => {\n    return () => {\n      window.clearTimeout(timerId.current);\n    };\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, getStoryMediaHash } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n  storyIdsForViewer?: number[];\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, storyIdsForViewer, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useOldLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId && storyIdsForViewer?.includes(lastViewedId)\n      ? lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1)\n      : -1;\n    const resultId = byId[previewIndexId]?.id || storyIdsForViewer?.[0] || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories, storyIdsForViewer]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <div className={styles.contentInner}>\n          <Avatar\n            peer={peer}\n            withStory\n            storyViewerMode=\"disabled\"\n          />\n          <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n      storyList,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n    storyIdsForViewer: peer?.id ? storyList?.storyIdsByPeerId[peer.id] : undefined,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeer,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport { IS_IOS } from '../../util/windowEnvironment';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isReportModalOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePrevious(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    if (!isMobile) return;\n\n    // If animation disabled, set rendering peer id to current peer\n    setRenderingPeerId(currentPeerId);\n  }, [currentPeerId, isMobile]);\n\n  // Handling the flipping of stories from a current user\n  useEffect(() => {\n    if (renderingPeerId === currentPeerId && currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n  }, [currentPeerId, currentStoryId, renderingPeerId, renderingStoryId]);\n\n  useEffect(() => {\n    if (isMobile) return undefined;\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n    }\n\n    return () => {\n      setIsAnimating(false);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, isMobile]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      withWheelDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${offsetY * (isMobile ? 1 : -1)}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, onClose, windowWidth, windowHeight, isMobile, renderingPeerId]);\n\n  useLayoutEffect(() => {\n    if (isMobile) return;\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n        current.style.setProperty('--slide-content-scale', String(slideSizes.toActiveScale));\n\n        return;\n      }\n\n      const getScale = () => {\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, slideSizes, isMobile]);\n\n  const handleTransitionEnd = useLastCallback((event: React.TransitionEvent<HTMLDivElement>) => {\n    // It is `target` that is needed here, not `currentTarget`\n    const target = event.target as HTMLDivElement | null;\n\n    if (!target || !target.classList.contains(styles.activeSlide)) return;\n\n    if (renderingPeerId !== currentPeerId) {\n      setRenderingPeerId(currentPeerId);\n      setRenderingStoryId(currentStoryId);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n    setIsAnimating(false);\n  });\n\n  if (isMobile) {\n    return (\n      <div className={styles.wrapper} ref={containerRef}>\n        <div\n          className={styles.mobileSlide}\n          ref={(ref) => setRef(ref, renderingPeerId!)}\n        >\n          <Story\n            peerId={renderingPeerId!}\n            storyId={renderingStoryId!}\n            onDelete={onDelete}\n            dimensions={slideSizes.activeSlide}\n            isPrivateStories={renderingIsPrivate}\n            isArchivedStories={renderingIsArchive}\n            isReportModalOpen={isReportModalOpen}\n            isDeleteModalOpen={isDeleteModalOpen}\n            isSingleStory={isSingleStory}\n            getIsAnimating={getIsAnimating}\n            onClose={onClose}\n            onReport={onReport}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = isMobile ? undefined : buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isReportModalOpen={isReportModalOpen}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n      onTransitionEnd={handleTransitionEnd}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive, storyList,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { active } } = global.stories;\n\n  return {\n    byPeerId,\n    peerIds: storyList?.peerIds ?? active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"gpDY8bos\",\"viewsList\":\"gpDY8bos\",\"views-list-loading\":\"vuRAfQ5v\",\"viewsListLoading\":\"vuRAfQ5v\",\"info\":\"AOSUIChK\",\"centeredInfo\":\"oGLhkkS7\",\"view-reaction\":\"MLaabS6n\",\"viewReaction\":\"MLaabS6n\",\"header\":\"d3N2bktu\",\"content\":\"QmRA3HZK\",\"top-button\":\"Dkv8GAxf\",\"topButton\":\"Dkv8GAxf\",\"contact-filter\":\"YpB_9VxE\",\"contactFilter\":\"YpB_9VxE\",\"selected\":\"DoUlpdZJ\",\"sort\":\"axDpgq9G\",\"sort-button\":\"Bm5VA66f\",\"sortButton\":\"Bm5VA66f\",\"icon-sort\":\"YVQiH93R\",\"iconSort\":\"YVQiH93R\",\"icon-down\":\"NXP9aMD0\",\"iconDown\":\"NXP9aMD0\",\"search\":\"QQQqBLK6\",\"bottom-info\":\"_CSv6suH\",\"bottomInfo\":\"_CSv6suH\",\"scrolled\":\"RYQ0liYe\",\"footer\":\"dUK7rP37\",\"closeButton\":\"abPzLiCH\",\"opacity-fade-in\":\"cX8oY3zb\",\"opacityFadeIn\":\"cX8oY3zb\",\"fadeIn\":\"Sx_aeh1o\",\"blocked\":\"L82sciL8\",\"check\":\"UqGBKwjg\",\"menuBubble\":\"dRqemuTA\",\"with-colored-status\":\"GQ96fta9\",\"withColoredStatus\":\"GQ96fta9\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiPeer, ApiTypeStoryView, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName, isUserId } from '../../global/helpers';\nimport { selectPeer } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiTypeStoryView;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\nconst BULLET = '\\u2022';\n\nconst StoryView = ({\n  storyView,\n  peer,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat,\n    closeStoryViewer,\n    unblockUser,\n    blockUser,\n    deleteContact,\n    updateStoryView,\n    focusMessage,\n    openStoryViewer,\n    closeStoryViewModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleClick = useLastCallback(() => {\n    const { type } = storyView;\n\n    if (type === 'repost') {\n      closeStoryViewModal();\n      openStoryViewer({\n        peerId: storyView.peerId,\n        storyId: storyView.storyId,\n      });\n      return;\n    }\n\n    closeStoryViewer();\n\n    setTimeout(() => {\n      if (type === 'user') {\n        openChat({ id: storyView.peerId });\n      } else if (type === 'forward') {\n        focusMessage({ chatId: storyView.peerId, messageId: storyView.messageId });\n      }\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    if (!isUserId(storyView.peerId)) return undefined;\n    const { peerId, areStoriesBlocked, isUserBlocked } = storyView;\n    const user = peer as ApiUser;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId: peerId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: false });\n          } else {\n            blockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, peer]);\n\n  const statusIcon: IconName = storyView.type === 'user' ? 'message-read'\n    : storyView.type === 'forward' ? 'forward' : 'loop';\n  const shouldColorStatus = storyView.type === 'forward' || storyView.type === 'repost';\n\n  const status = useMemo(() => {\n    const isModified = storyView.type === 'repost' && storyView.story.forwardInfo?.isModified;\n    const parts = [formatDateAtTime(lang, storyView.date * 1000)];\n    if (isModified) {\n      parts.push(lang('lng_edited'));\n    }\n\n    return parts.join(` ${BULLET} `);\n  }, [lang, storyView]);\n\n  return (\n    <ListItem\n      key={storyView.peerId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      onClick={handleClick}\n      rightElement={storyView.type === 'user' && storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      {isUserId(storyView.peerId) ? (\n        <PrivateChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          userId={storyView.peerId}\n          noStatusOrTyping\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n          forceShowSelf\n        />\n      ) : (\n        <GroupChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          chatId={storyView.peerId}\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const peer = selectPeer(global, storyView.peerId);\n\n  return {\n    peer,\n    availableReactions: global.reactions.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiTypeStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  views?: ApiTypeStoryView[];\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  views,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViewList, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const { viewsCount = 0, reactionsCount = 0 } = story?.views || {};\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViews = useMemo(() => {\n    return views?.sort(prepareComparator(areReactionsFirst));\n  }, [areReactionsFirst, views]);\n\n  const placeholderCount = !sortedViews?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViews?.length) && sortedViews!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViewList({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <i className={buildClassName(\n          'icon',\n          areReactionsFirst ? 'icon-heart-outline' : 'icon-recent',\n          styles.iconSort,\n        )}\n        />\n        <i className={buildClassName('icon icon-down', styles.iconDown)} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViews?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViews?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViews}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViews?.map((view) => {\n            const additionalKeyId = view.type === 'forward' ? view.messageId\n              : view.type === 'repost' ? view.storyId : 'user';\n            return (\n              <StoryView key={`${view.peerId}-${view.date}-${additionalKeyId}`} storyView={view} />\n            );\n          })}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiTypeStoryView, b: ApiTypeStoryView) => {\n    if (areReactionsFirst) {\n      const reactionA = a.type === 'user' && a.reaction;\n      const reactionB = b.type === 'user' && b.reaction;\n      if (reactionA && !reactionB) {\n        return -1;\n      }\n      if (!reactionA && reactionB) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, views, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    views,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.reactions.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor } = getActions();\n\n  const lang = useOldLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePrevious(isOpen);\n  const prevBestImageData = usePrevious(bestImageData);\n  const prevPeerId = usePrevious(peerId);\n  const prevOrigin = usePrevious(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeReportModal();\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  }, []);\n\n  const handleCloseDeleteModal = useCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  }, []);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className={buildClassName('icon icon-close')} aria-hidden />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isReportModalOpen={isReportModalOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openReportModal}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        subject=\"story\"\n        peerId={peerId!}\n        storyId={storyId}\n      />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    },\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { CHAT_HEIGHT_PX } from '../../config';\nimport { getCanPostInChat, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\nimport Transition from '../ui/Transition';\nimport GroupChatInfo from './GroupChatInfo';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport TopicIcon from './TopicIcon';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const [topicIds, topics] = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const topicsResult = forumId ? chatsById[forumId].topics : undefined;\n    if (!topicsResult) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = topicsResult\n      ? Object.values(topicsResult).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chatsById[forumId!], topic.id, undefined, chatFullInfoById[forumId!])\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : topicsResult;\n\n    return [Object.keys(result).map(Number), result];\n  }, [forumId, topicSearch]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatsById = getGlobal().chats.byId;\n\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById[chatId];\n      if (chat?.isForum) {\n        if (!chat.topics) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, '.ListItem-button', true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleClick = useLastCallback((e: React.MouseEvent, chatId: string) => {\n    const chatsById = getGlobal().chats.byId;\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!chat.topics) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const handleTopicClick = useLastCallback((e: React.MouseEvent, topicId: number) => {\n    onSelectChatOrUser(forumId!, topicId);\n  });\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={!topicIds ? 0 : topicIds.length * CHAT_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {topicIds\n            ? topicIds.map((topicId, i) => (\n              <ListItem\n                key={`${forumId}_${topicId}`}\n                className=\"chat-item-clickable force-rounded-corners small-icon topic-item\"\n                style={`top: ${i * CHAT_HEIGHT_PX}px;`}\n                onClick={handleTopicClick}\n                clickArg={topicId}\n              >\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n                <div dir=\"auto\" className=\"fullName\">{renderText(topics[topicId].title)}</div>\n              </ListItem>\n            ))\n            : <Loading />}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * CHAT_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map((id, i) => (\n              <ListItem\n                key={id}\n                className=\"chat-item-clickable force-rounded-corners small-icon\"\n                style={`height: ${CHAT_HEIGHT_PX}px; top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n                onClick={handleClick}\n                clickArg={id}\n              >\n                {isUserId(id) ? (\n                  <PrivateChatInfo\n                    status={id === currentUserId ? lang('SavedMessagesInfo') : undefined}\n                    userId={id}\n                  />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n              </ListItem>\n            ))}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChatType } from '../../api/types';\nimport type { ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  getCanPostInChat,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { filterChatIdsByType } from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from './helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ChatOrUserPicker from './ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chatIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = chatsById[id];\n      const user = usersById[id];\n      if (user && isDeletedUser(user)) return false;\n\n      return chat && getCanPostInChat(chat, MAIN_THREAD_ID, undefined, chatFullInfoById[id]);\n    });\n\n    const sorted = sortChatIds(unique([\n      ...filterChatsByName(lang, chatIds, chatsById, search, currentUserId),\n      ...(contactIds && filter.includes('users') ? filterUsersByName(contactIds, usersById, search) : []),\n    ]), undefined, priorityIds);\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, lang, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ThreadId } from '../../types';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n  isForwarding?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n  isForwarding,\n}) => {\n  const {\n    openChatOrTopicWithReplyInDraft,\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingIsStory = usePrevious(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      const chatId = recipientId;\n      const topicId = threadId ? Number(threadId) : undefined;\n      if (isForwarding) {\n        setForwardChatOrTopic({ chatId, topicId });\n      } else {\n        openChatOrTopicWithReplyInDraft({ chatId, topicId });\n      }\n    }\n  }, [currentUserId, isManyMessages, isStory, lang, isForwarding]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang('ForwardTo')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  const isForwarding = (messageIds && messageIds.length > 0);\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n    isForwarding,\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\nimport type { ThreadId } from '../../types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError, ApiInviteInfo, ApiPhoto,\n} from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiInviteInfo | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    acceptInviteConfirmation,\n    sendMessage,\n    showNotification,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  function renderInviteHeader(title: string, photo?: ApiPhoto) {\n    return (\n      <div className=\"modal-header\">\n        {photo && <Avatar size=\"small\" photo={photo} withVideo />}\n        <div className=\"modal-title\">\n          {renderText(title)}\n        </div>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={closeModal}>\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    );\n  }\n\n  const renderInvite = (invite: ApiInviteInfo) => {\n    const {\n      hash, title, about, participantsCount, isChannel, photo, isRequestNeeded,\n    } = invite;\n\n    const handleJoinClick = () => {\n      acceptInviteConfirmation({\n        hash,\n      });\n      if (isRequestNeeded) {\n        showNotification({\n          message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n        });\n      }\n      closeModal();\n    };\n\n    const participantsText = isChannel\n      ? lang('Subscribers', participantsCount, 'i')\n      : lang('Members', participantsCount, 'i');\n\n    const joinText = isChannel ? lang('ChannelJoin') : lang('JoinGroup');\n    const requestToJoinText = isChannel\n      ? lang('MemberRequests.RequestToJoinChannel') : lang('MemberRequests.RequestToJoinGroup');\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"error\"\n        header={renderInviteHeader(title, photo)}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {participantsCount !== undefined && <p className=\"modal-help\">{participantsText}</p>}\n        {about && <p className=\"modal-about\">{renderText(about, ['br'])}</p>}\n        {isRequestNeeded && (\n          <p className=\"modal-help\">\n            {isChannel\n              ? lang('MemberRequests.RequestToJoinDescriptionChannel')\n              : lang('MemberRequests.RequestToJoinDescriptionGroup')}\n          </p>\n        )}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            className=\"confirm-dialog-button\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleJoinClick}\n          >\n            {isRequestNeeded ? requestToJoinText : joinText}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: pick(contactRequest, ['firstName', 'lastName', 'phoneNumber']),\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiInviteInfo | ApiContact) => {\n    if ('hash' in dialog) {\n      return renderInvite(dialog);\n    }\n\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  const { dismissNotification } = getActions();\n\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map(({\n        message, className, localId, action, actionText, title, duration,\n      }) => (\n        <Notification\n          title={title ? renderText(title, ['simple_markdown', 'emoji', 'br', 'links']) : undefined}\n          action={action}\n          actionText={actionText}\n          className={className}\n          duration={duration}\n          message={renderText(message, ['simple_markdown', 'emoji', 'br', 'links'])}\n          // eslint-disable-next-line react/jsx-no-bind\n          onDismiss={() => dismissNotification({ localId })}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/ensureProtocol';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    window.open(ensureProtocol(url), '_blank', 'noopener');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlAlert2', renderingUrl), ['links'])}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VJDwJpsF\",\"buttons\":\"aYO2C2Hx\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { prepareMapUrl } from '../../../util/map';\nimport { IS_IOS, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['mapModal'];\n};\n\nconst OpenMapModal = ({ modal }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const { point: geoPoint, zoom } = modal || {};\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          OpenStreetMap\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkbox\":\"eha3Z6eU\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nimport styles from './UrlAuthModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['urlAuth'];\n};\n\ntype StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst UrlAuthModal: FC<OwnProps & StateProps> = ({\n  modal, currentUser,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(modal, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    if (modal?.url && isLoginChecked) {\n      const acceptAction = modal.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else {\n      window.open(ensureProtocol(currentAuth?.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    modal, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(modal?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, getUserFullName(currentUser)]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    return {\n      currentUser,\n    };\n  },\n)(UrlAuthModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { LangFn } from '../../hooks/useOldLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dates/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useOldLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePrevious(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  const isDisabled = (isFutureMode && selectedDate.getTime() < minDate.getTime())\n    || (isPastMode && selectedDate.getTime() > maxDate.getTime());\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    if (isFutureMode && selectedDate < minDate) {\n      onSubmit(minDate);\n    } else if (isPastMode && selectedDate > maxDate) {\n      onSubmit(maxDate);\n    } else {\n      onSubmit(selectedDate);\n    }\n  }, [isFutureMode, isPastMode, minDate, maxDate, onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <i className=\"icon icon-previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <i className=\"icon icon-next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <div className=\"footer\">\n          <Button\n            onClick={handleSubmit}\n            disabled={isDisabled}\n          >\n            {submitLabel}\n          </Button>\n          {secondButtonLabel && (\n            <Button onClick={onSecondButtonClick} isText>\n              {secondButtonLabel}\n            </Button>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: LangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.valueOf() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useOldLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useOldLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst RELOAD_TIMEOUT = 500;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n  } = getActions();\n\n  const isReloadSupported = useRef<boolean>(false);\n  const reloadTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const forceReloadFrame = useLastCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  });\n\n  const reloadFrame = useCallback((url: string) => {\n    if (isReloadSupported.current) {\n      sendEvent({\n        eventType: 'reload_iframe',\n      });\n      reloadTimeout.current = setTimeout(() => {\n        forceReloadFrame(url);\n      }, RELOAD_TIMEOUT);\n      return;\n    }\n\n    forceReloadFrame(url);\n  }, [sendEvent]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        closeWebApp();\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n        isReloadSupported.current = Boolean(eventData.reload_supported);\n      }\n\n      if (eventType === 'iframe_will_reload') {\n        clearTimeout(reloadTimeout.current);\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n\n        showNotification({\n          message: 'Clipboard access is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          type: 'slug',\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      if (eventType === 'web_app_biometry_get_info') {\n        sendEvent({\n          eventType: 'biometry_info_received',\n          eventData: {\n            available: false,\n          },\n        });\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [isSimpleView, sendEvent, onEvent, sendCustomStyle, sendTheme, sendViewport, onLoad, windowSize.isResizing]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, windowSize]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, sendViewport, ref]);\n\n  return {\n    sendEvent, reloadFrame, sendViewport, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport type { PopupOptions, WebAppInboundEvent } from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport {\n  selectCurrentChat, selectTabState, selectTheme, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\nimport renderText from '../../common/helpers/renderText';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApp'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst PROLONG_INTERVAL = 45000; // 45s\nconst ANIMATION_WAIT = 400;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst LUMA_THRESHOLD = 128;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n  bot,\n  attachBot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n}) => {\n  const {\n    closeWebApp,\n    sendWebViewData,\n    prolongWebView,\n    toggleAttachBot,\n    openTelegramLink,\n    openChat,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [isBackButtonVisible, setIsBackButtonVisible] = useState(false);\n  const [isSettingsButtonVisible, setIsSettingsButtonVisible] = useState(false);\n\n  const [backgroundColor, setBackgroundColor] = useState<string>();\n  const [headerColor, setHeaderColor] = useState<string>();\n\n  const [shouldConfirmClosing, setShouldConfirmClosing] = useState(false);\n  const [isCloseModalOpen, openCloseModal, hideCloseModal] = useFlag(false);\n  const [isRemoveModalOpen, openRemoveModal, hideRemoveModal] = useFlag(false);\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequesingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    const themeParams = extractCurrentThemeParams();\n    setBackgroundColor(themeParams.bg_color);\n    setHeaderColor(themeParams.bg_color);\n  }, []);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const lang = useOldLang();\n  const {\n    url, buttonText, queryId, replyInfo,\n  } = modal || {};\n  const isOpen = Boolean(url);\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendViewport, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isSimple, handleEvent, markLoaded);\n\n  const shouldShowMainButton = mainButton?.isVisible && mainButton.text.trim().length > 0;\n\n  useInterval(() => {\n    prolongWebView({\n      botId: bot!.id,\n      queryId: queryId!,\n      peerId: chat!.id,\n      replyInfo,\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(modal!.url);\n  });\n\n  const handleClose = useLastCallback(() => {\n    if (shouldConfirmClosing) {\n      openCloseModal();\n    } else {\n      closeWebApp();\n    }\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n    }, ANIMATION_WAIT);\n  }, [mainButton?.isVisible, sendViewport]);\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendTheme();\n    }, ANIMATION_WAIT);\n  }, [theme, sendTheme]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (modal?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: modal.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, modal?.slug]);\n\n  const handleRemoveAttachBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: false,\n    });\n    closeWebApp();\n  });\n\n  const handleToggleClick = useLastCallback(() => {\n    if (attachBot) {\n      openRemoveModal();\n      return;\n    }\n\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: true,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleClose();\n    }\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    const result = await callApi('allowBotSendMessages', { bot: bot! });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot: bot!,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n    closeWebApp();\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      const themeParams = extractCurrentThemeParams();\n\n      setShouldConfirmClosing(false);\n      hideCloseModal();\n      hideRemoveModal();\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      setIsBackButtonVisible(false);\n      setIsSettingsButtonVisible(false);\n      setBackgroundColor(themeParams.bg_color);\n      setHeaderColor(themeParams.bg_color);\n      markUnloaded();\n    }\n  }, [isOpen]);\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n    if (eventType === 'web_app_open_tg_link' && !isPaymentModalOpen) {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl });\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      setIsBackButtonVisible(eventData.is_visible);\n    }\n\n    if (eventType === 'web_app_setup_settings_button') {\n      setIsSettingsButtonVisible(eventData.is_visible);\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.bg_color;\n      setBackgroundColor(color);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      if (eventData.color_key) {\n        const themeParams = extractCurrentThemeParams();\n        const key = eventData.color_key;\n        const newColor = themeParams[key];\n        const color = validateHexColor(newColor) ? newColor : headerColor;\n        setHeaderColor(color);\n      }\n\n      if (eventData.color) {\n        const color = validateHexColor(eventData.color) ? eventData.color : headerColor;\n        setHeaderColor(color);\n      }\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.button_color;\n      const textColor = validateHexColor(eventData.text_color) ? eventData.text_color : themeParams.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text || '',\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      setShouldConfirmClosing(eventData.need_confirmation);\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n      || eventData.buttons.length > 3 || isRequestingPhone || isRequesingWriteAccess\n      || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequesingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n  }\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={buildClassName(styles.moreButton, isMenuOpen && 'active')}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme]);\n\n  function renderHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{attachBot?.shortName ?? bot?.firstName}</div>\n        <DropdownMenu\n          className=\"web-app-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          {chat && bot && chat.id !== bot.id && (\n            <MenuItem icon=\"bots\" onClick={openBotChat}>{lang('BotWebViewOpenBot')}</MenuItem>\n          )}\n          <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{lang('WebApp.ReloadPage')}</MenuItem>\n          {isSettingsButtonVisible && (\n            <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n              {lang('Settings')}\n            </MenuItem>\n          )}\n          {bot?.isAttachBot && (\n            <MenuItem\n              icon={attachBot ? 'stop' : 'install'}\n              onClick={handleToggleClick}\n              destructive={Boolean(attachBot)}\n            >\n              {lang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n            </MenuItem>\n          )}\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  const prevMainButtonColor = usePrevious(mainButton?.color, true);\n  const prevMainButtonTextColor = usePrevious(mainButton?.textColor, true);\n  const prevMainButtonIsActive = usePrevious(mainButton && Boolean(mainButton.isActive), true);\n  const prevMainButtonText = usePrevious(mainButton?.text, true);\n\n  const mainButtonCurrentColor = mainButton?.color || prevMainButtonColor;\n  const mainButtonCurrentTextColor = mainButton?.textColor || prevMainButtonTextColor;\n  const mainButtonCurrentIsActive = mainButton?.isActive !== undefined ? mainButton.isActive : prevMainButtonIsActive;\n  const mainButtonCurrentText = mainButton?.text || prevMainButtonText;\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideButton, setShouldHideButton] = useState(true);\n\n  const buttonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (buttonChangeTimeout.current) clearTimeout(buttonChangeTimeout.current);\n    if (!shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldHideButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    } else {\n      setShouldHideButton(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowMainButton]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={handleClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor}`}\n    >\n      <Spinner className={buildClassName(styles.loadingSpinner, isLoaded && styles.hide)} />\n      {isOpen && (\n        <>\n          <iframe\n            className={buildClassName(styles.frame, shouldDecreaseWebFrameSize && styles.withButton)}\n            src={url}\n            title={`${bot?.firstName} Web App`}\n            sandbox={SANDBOX_ATTRIBUTES}\n            allow=\"camera; microphone; geolocation;\"\n            allowFullScreen\n            ref={frameRef}\n          />\n          <Button\n            className={buildClassName(\n              styles.mainButton,\n              shouldShowMainButton && styles.visible,\n              shouldHideButton && styles.hidden,\n            )}\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive}\n            onClick={handleMainButtonClick}\n          >\n            {mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n          </Button>\n        </>\n      )}\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={lang('ShareYouPhoneNumberTitle')}\n        text={lang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={lang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequesingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={lang('lng_bot_allow_write_title')}\n        text={lang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={lang('lng_bot_allow_write_confirm')}\n      />\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || lang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={hideCloseModal}\n        title={lang('lng_bot_close_warning_title')}\n        text={lang('lng_bot_close_warning')}\n        confirmHandler={closeWebApp}\n        confirmIsDestructive\n        confirmLabel={lang('lng_bot_close_warning_sure')}\n      />\n      <ConfirmDialog\n        isOpen={isRemoveModalOpen}\n        onClose={hideRemoveModal}\n        title={lang('BotRemoveFromMenuTitle')}\n        textParts={renderText(lang('BotRemoveFromMenu', bot?.firstName), ['simple_markdown'])}\n        confirmHandler={handleRemoveAttachBot}\n        confirmIsDestructive\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { botId } = modal || {};\n    const attachBot = botId ? global.attachMenu.bots[botId] : undefined;\n    const bot = botId ? selectUser(global, botId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status } = selectTabState(global).payment;\n    const { isStarPaymentModalOpen } = selectTabState(global);\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      isPaymentModalOpen: isPaymentModalOpen || isStarPaymentModalOpen,\n      paymentStatus: status,\n    };\n  },\n)(WebAppModal));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"XWfkIDLY\",\"more-button\":\"kKPD09tc\",\"moreButton\":\"kKPD09tc\",\"close-icon\":\"RuJ3d9N6\",\"closeIcon\":\"RuJ3d9N6\",\"state-back\":\"IWA50OWU\",\"stateBack\":\"IWA50OWU\",\"loading-spinner\":\"ZvO65ZK4\",\"loadingSpinner\":\"ZvO65ZK4\",\"hide\":\"_90e04Jo\",\"frame\":\"zA1w1IOq\",\"with-button\":\"XsPaFD9G\",\"withButton\":\"XsPaFD9G\",\"main-button\":\"Os96PEjQ\",\"mainButton\":\"Os96PEjQ\",\"visible\":\"C8aMayAw\",\"hidden\":\"GllU9an9\",\"main-button-spinner\":\"nYSFrf_X\",\"mainButtonSpinner\":\"nYSFrf_X\",\"web-app-popup\":\"cTVKrIjM\",\"webAppPopup\":\"cTVKrIjM\",\"without-title\":\"d0DG1SkF\",\"withoutTitle\":\"d0DG1SkF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useOldLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['requestedAttachBotInstall'];\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  modal,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const bot = modal?.bot;\n\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useOldLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePrevious(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wn7D2H1e\",\"text\":\"IQ1U2TrZ\",\"header\":\"F6qqXRvD\",\"description\":\"ILLaH6qQ\",\"icon\":\"DzGwbpu5\",\"font-icon\":\"Pa9h5mh3\",\"fontIcon\":\"Pa9h5mh3\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps<T> = {\n  icon: string;\n  isFontIcon?: boolean;\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  section: T;\n  onClick?: (section: T) => void;\n};\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PremiumFeatureItem = <T,>({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  section,\n  onClick,\n}: OwnProps<T>) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(section);\n  });\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={handleClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <i\n          className={buildClassName(styles.fontIcon, `icon icon-${icon}`)}\n          aria-hidden\n          style={`--item-color: rgb(${r},${g},${b})`}\n        />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HmY1pYD9\",\"arrow\":\"cqNhvdib\",\"right\":\"hIgQCprt\",\"arrow-hidden\":\"wDzTWXzO\",\"arrowHidden\":\"wDzTWXzO\",\"dot\":\"Ac0pMX9w\",\"medium\":\"yDo_8Y7X\",\"small\":\"bhODNwmU\",\"invisible\":\"O9pyrgj0\",\"active\":\"NYDxCNdz\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport Button from '../ui/Button';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <i className=\"icon icon-previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst || isInvisible) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <i className=\"icon icon-next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u84X0r2z\",\"floating-badge\":\"hPi4fICJ\",\"floatingBadge\":\"hPi4fICJ\",\"floating-badge-triangle\":\"jufjjcX9\",\"floatingBadgeTriangle\":\"jufjjcX9\",\"floating-badge-icon\":\"XkiOXdMP\",\"floatingBadgeIcon\":\"XkiOXdMP\",\"text\":\"YaiSoFKE\",\"floating-badge-value\":\"iC3LJrvy\",\"floatingBadgeValue\":\"iC3LJrvy\",\"left-text\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"leftText\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"right-text\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"rightText\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"right-value\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"rightValue\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"left-value\":\"RJosx238 YaiSoFKE\",\"leftValue\":\"RJosx238 YaiSoFKE\",\"line\":\"Hy5kWx0p\",\"left\":\"scGr4JS9\",\"right\":\"nPaUalQf\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <i className={buildClassName(styles.floatingBadgeIcon, `icon-${floatingBadgeIcon}`, 'icon')} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZXp65Wgy\",\"title\":\"W1xG3pjS\",\"description\":\"b_CBXIkT\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O1fqNCy0\",\"sticker\":\"ogaoEAcn\",\"effect-sticker\":\"Stdz4UIW ogaoEAcn\",\"effectSticker\":\"Stdz4UIW ogaoEAcn\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: (index: number) => void;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useLastCallback(() => {\n    onClick(realIndex);\n  });\n\n  const handleEnded = useLastCallback(() => {\n    inanimate();\n    onEnded(realIndex);\n  });\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useLastCallback((i: number) => {\n    setOffset(-i);\n  });\n\n  const handleEnded = useLastCallback((i: number) => {\n    const displayIndex = cycleRestrict(renderedStickers.length, i + offset);\n    if (displayIndex !== 0) return;\n\n    setTimeout(() => {\n      setOffset((current) => {\n        return cycleRestrict(renderedStickers.length, current + 1);\n      });\n    }, ENDED_DELAY);\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((sticker, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={sticker}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mFElmm7a\",\"header\":\"Jjbochk6\",\"circle\":\"ChteQ9C3\",\"title\":\"d2ayix6L\",\"features\":\"ensyCeMe\",\"mobile\":\"DFbZJafh\",\"scrolled\":\"iN1T0a2Y\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useOldLang from '../../../../hooks/useOldLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-closed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = 5.25 * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const dpr = useDevicePixelRatio();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE * dpr,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n      dpr,\n    });\n  }, [dpr]);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n              section={section}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ot0dA1yZ\",\"wrapper\":\"yxSAGAc1\",\"down\":\"Jcy6cDoc\",\"frame\":\"Vn81yTTJ\",\"video\":\"rrVJClLL\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransition from '../../../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oyUTEj8I\",\"button\":\"EPfM7AgT\",\"button-content\":\"GysZk2mF\",\"buttonContent\":\"GysZk2mF\",\"back-button\":\"njYoMrKM\",\"backButton\":\"njYoMrKM\",\"white-back-button\":\"SB4pczOo\",\"whiteBackButton\":\"SB4pczOo\",\"content\":\"sJubG84j\",\"frame\":\"a7IoUtQG\",\"slide\":\"gubS9KP1\",\"limits\":\"U7ePgVBR\",\"stories\":\"J1M6fEdo\",\"limits-content\":\"n_rowVPI\",\"limitsContent\":\"n_rowVPI\",\"header\":\"mz2Hmd83\",\"no-header-border\":\"AgmNOqi7\",\"noHeaderBorder\":\"AgmNOqi7\",\"preview\":\"dIVBSdWi\",\"title\":\"iZLwcL8v\",\"description\":\"A7YHY8qF\",\"footer\":\"yN2611rA\",\"no-footer-border\":\"rCHMABcD\",\"noFooterBorder\":\"rCHMABcD\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { toggleExtraClass } from '../../../lib/teact/teact-dom';\n\nimport type { ApiPremiumPromo, ApiPremiumSubscriptionOption } from '../../../api/types';\nimport type { ApiLimitTypeForPromo, ApiPremiumSection, GlobalState } from '../../../global/types';\n\nimport { PREMIUM_BOTTOM_VIDEOS, PREMIUM_FEATURE_SECTIONS, PREMIUM_LIMITS_ORDER } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n  saved_tags: 'PremiumPreviewTags2',\n  last_seen: 'PremiumPreviewLastSeen',\n  message_privacy: 'PremiumPreviewMessagePrivacy',\n  effects: 'PremiumPreviewEffects',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n  saved_tags: 'PremiumPreviewTagsDescription2',\n  last_seen: 'PremiumPreviewLastSeenDescription',\n  message_privacy: 'PremiumPreviewMessagePrivacyDescription',\n  effects: 'PremiumPreviewEffectsDescription',\n};\n\nconst LIMITS_TITLES: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n  recommendedChannels: 'SimilarChannelsLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n  recommendedChannels: 'SimilarChannelsLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  initialSection: ApiPremiumSection;\n  promo: ApiPremiumPromo;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumPromoOrder?: ApiPremiumSection[];\n  subscriptionOption?: ApiPremiumSubscriptionOption;\n  onBack: VoidFunction;\n  onClickSubscribe: (startParam?: string) => void;\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  isPremium,\n  limits,\n  premiumPromoOrder,\n  subscriptionOption,\n  onBack,\n  onClickSubscribe,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePrevious(initialSection);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  const subscriptionButtonText = useMemo(() => {\n    if (!subscriptionOption) return undefined;\n\n    const { amount, months, currency } = subscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n\n    return isPremium ? lang('OK') : lang('SubscribeToPremium', formatCurrency(perMonthPrice, currency, lang.code));\n  }, [isPremium, lang, subscriptionOption]);\n\n  const handleClick = useLastCallback(() => {\n    onClickSubscribe(initialSection);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const target = e.currentTarget;\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = target;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex}`);\n\n    requestMutation(() => {\n      target.style.setProperty('--scroll-progress', progress.toString());\n      target.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n\n      if (prevElement) toggleExtraClass(prevElement, 'reverse', false);\n      if (reverseElement) toggleExtraClass(reverseElement, 'reverse', true);\n    });\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = filteredSections.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, filteredSections, initialSection, prevInitialSection]);\n\n  const handleSelectSlide = useLastCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  });\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, currentSlideIndex !== 0 && styles.whiteBackButton)}\n        color={currentSlideIndex === 0 ? 'translucent' : 'translucent-white'}\n        onClick={onBack}\n        ariaLabel={lang('Back')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {filteredSections.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {lang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {PREMIUM_LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={lang(LIMITS_TITLES[limit])}\n                        description={lang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (PREMIUM_LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {lang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {lang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        {subscriptionButtonText && (\n          <Button\n            className={buildClassName(styles.button)}\n            isShiny={!isPremium}\n            withPremiumGradient={!isPremium}\n            onClick={isPremium ? onBack : handleClick}\n          >\n            {subscriptionButtonText}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiPremiumGiftCodeOption, ApiPremiumGiftOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './PremiumSubscriptionOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumGiftOption | ApiPremiumGiftCodeOption;\n  isGiveaway?: boolean;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  className?: string;\n  onChange: (month: number) => void;\n};\n\nconst PremiumSubscriptionOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount,\n  onChange, className, isGiveaway,\n}) => {\n  const lang = useOldLang();\n\n  const {\n    months, amount, currency,\n  } = option;\n  const users = 'users' in option ? option.users : undefined;\n  const perMonth = Math.floor(amount / months);\n  const isUserCountPlural = users ? users > 1 : undefined;\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label\n      className={buildClassName(\n        isGiveaway ? styles.giveawayWrapper : styles.wrapper,\n        (checked && !isGiveaway) && styles.active,\n        className,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"subscription_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>\n          {Boolean(discount) && (\n            <span\n              className={buildClassName(styles.giveawayDiscount, styles.discount)}\n              title={lang('GiftDiscount')}\n            > &minus;{discount}%\n            </span>\n          )}\n          {lang('Months', months)}\n        </div>\n        <div className={styles.perMonth}>\n          {(isGiveaway || isUserCountPlural) ? `${formatCurrency(amount, currency, lang.code)} x ${users!}`\n            : lang('PricePerMonth', formatCurrency(perMonth, currency, lang.code))}\n        </div>\n        <div className={styles.amount}>\n          {formatCurrency(amount, currency, lang.code)}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(PremiumSubscriptionOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"qZA6S2kc\",\"giveawayWrapper\":\"PkseWxFK\",\"active\":\"EJOQwnRj\",\"input\":\"WOEkhx6R\",\"content\":\"BHUCScsU\",\"month\":\"DfYCMUkL\",\"perMonth\":\"poxOXJ2o\",\"amount\":\"IGMrERf_\",\"discount\":\"uqDlP3Zt\",\"giveawayDiscount\":\"ublijP0j\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sfbpMFHM\",\"transition\":\"ELNkgPve\",\"button\":\"c1tMxuFH\",\"main\":\"ZpOIPrhp\",\"logo\":\"mlMezt6b\",\"status-emoji\":\"mQwvY9LA\",\"statusEmoji\":\"mQwvY9LA\",\"header-text\":\"y71v6ECL\",\"headerText\":\"y71v6ECL\",\"description\":\"cUcKXV3j\",\"list\":\"c3Ee2oSo\",\"no-button\":\"yWEHoJOL\",\"noButton\":\"yWEHoJOL\",\"header\":\"Bc_F0RKb\",\"hidden-header\":\"ltXo0Xi7\",\"hiddenHeader\":\"ltXo0Xi7\",\"close-button\":\"XyN3eWog\",\"closeButton\":\"XyN3eWog\",\"premium-header-text\":\"xysPdANX\",\"premiumHeaderText\":\"xysPdANX\",\"footer-text\":\"yKm9hKQP\",\"footerText\":\"yKm9hKQP\",\"primary-footer-text\":\"l1WlNpmu\",\"primaryFooterText\":\"l1WlNpmu\",\"footer\":\"nCnlO9UZ\",\"stickerSetText\":\"xw_GbDj7\",\"stickerSetLink\":\"FLzl2ng5\",\"stickerSetLinkIcon\":\"Y0jTcadE\",\"subscriptionOptions\":\"xZC_Oajr\",\"subscriptionOption\":\"gygsbDbE\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiPremiumSubscriptionOption, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { ApiPremiumSection, GlobalState } from '../../../global/types';\n\nimport { PREMIUM_FEATURE_SECTIONS, TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEffects from '../../../assets/premium/PremiumEffects.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLastSeen from '../../../assets/premium/PremiumLastSeen.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumMessagePrivacy from '../../../assets/premium/PremiumMessagePrivacy.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTags from '../../../assets/premium/PremiumTags.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<ApiPremiumSection, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n  saved_tags: PremiumTags,\n  last_seen: PremiumLastSeen,\n  message_privacy: PremiumMessagePrivacy,\n  effects: PremiumEffects,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: ApiPremiumSection;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: ApiPremiumSection[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<ApiPremiumSection | undefined>(initialSection);\n  const [selectedSubscriptionOption, setSubscriptionOption] = useState<ApiPremiumSubscriptionOption>();\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setCurrentSection(undefined);\n    }\n  }, [isOpen]);\n\n  const handleOpenSection = useLastCallback((section: ApiPremiumSection) => {\n    setCurrentSection(section);\n  });\n\n  const handleResetSection = useLastCallback(() => {\n    setCurrentSection(undefined);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClickWithStartParam = useLastCallback((startParam?: string) => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        type: 'slug',\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (selectedSubscriptionOption) {\n      handleClickWithStartParam(String(selectedSubscriptionOption.months));\n    } else {\n      handleClickWithStartParam();\n    }\n  });\n\n  const handleChangeSubscriptionOption = useLastCallback((months: number) => {\n    const foundOption = promo?.options.find((option) => option.months === months);\n    setSubscriptionOption(foundOption);\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  useEffect(() => {\n    const [defaultOption] = promo?.options ?? [];\n    setSubscriptionOption(defaultOption);\n  }, [promo]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const stickerSetTitle = useMemo(() => {\n    if (!fromUserStatusSet || !fromUser) return undefined;\n\n    const template = lang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n    const [first, second] = template.split('{link}');\n\n    const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n      <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n    ) : undefined;\n    const link = (\n      <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n        {emoji}{renderText(fromUserStatusSet.title)}\n      </span>\n    );\n    return [renderText(first), link, renderText(second)];\n  }, [fromUser, fromUserStatusSet, lang]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const monthOption = promo?.options.find((option) => option.months === 1);\n    if (!monthOption) {\n      return undefined;\n    }\n    return Number(monthOption.amount);\n  }, [promo]);\n\n  const subscribeButtonText = useMemo(() => {\n    if (!selectedSubscriptionOption) {\n      return undefined;\n    }\n    const { amount, months, currency } = selectedSubscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n    return formatCurrency(\n      perMonthPrice,\n      currency,\n      lang.code,\n    );\n  }, [selectedSubscriptionOption, lang.code]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  function getHeaderText() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n        : lang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]);\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n      : lang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium');\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : lang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return lang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogSubtitle')\n      : lang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={lang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {promo?.options\n          .map((option) => (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={option.amount}\n              option={option}\n              onChange={handleChangeSubscriptionOption}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={selectedSubscriptionOption?.months === option.months}\n            />\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={closePremiumModal}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={lang('Close')}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n            {fromUserStatusEmoji ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            )}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {fromUserStatusSet ? stickerSetTitle : renderText(getHeaderText(), ['simple_markdown', 'emoji'])}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            {!isPremium && !isGift && renderSubscriptionOptions()}\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {lang('TelegramPremium')}\n              </h2>\n            </div>\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={lang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? lang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : lang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    section={section}\n                    onClick={handleOpenSection}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(lang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(lang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && selectedSubscriptionOption && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {lang('SubscribeToPremium', subscribeButtonText)}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleResetSection}\n            promo={promo}\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n            premiumPromoOrder={premiumPromoOrder}\n            subscriptionOption={selectedSubscriptionOption}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDialog\":\"PMXzSiTT\",\"closeButton\":\"j3gx2vFZ\",\"avatars\":\"yIKcy5ir\",\"center\":\"EIXAUV27\",\"description\":\"TJy4zGvM\",\"premiumFeatures\":\"JqQfM_r9\",\"options\":\"eXU0NjiF\",\"boostIcon\":\"ZsR31o4m\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumGiftCodeOption,\n} from '../../../api/types';\n\nimport { BOOST_PER_SENT_GIFT } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport Modal from '../../ui/Modal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiftPremiumModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  isCompleted?: boolean;\n  gifts?: ApiPremiumGiftCodeOption[] | undefined;\n  forUserIds?: string[];\n  boostPerSentGift?: number;\n};\n\nconst GiftPremiumModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isCompleted,\n  gifts,\n  boostPerSentGift = BOOST_PER_SENT_GIFT,\n  forUserIds,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n\n  const {\n    openPremiumModal, closeGiftPremiumModal, openInvoice, requestConfetti,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n\n  const selectedUserQuantity = forUserIds && forUserIds.length * boostPerSentGift;\n\n  useEffect(() => {\n    if (forUserIds?.length) {\n      setSelectedMonthOption(gifts?.[0].months);\n    }\n  }, [gifts, forUserIds]);\n\n  const giftingUserList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return forUserIds?.map((userId) => usersById[userId]).filter(Boolean);\n  }, [forUserIds]);\n\n  const selectedGift = useMemo(() => {\n    return gifts?.find((gift) => gift.months === selectedMonthOption && gift.users === forUserIds?.length);\n  }, [gifts, selectedMonthOption, forUserIds?.length]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users\n      === forUserIds?.length);\n  }, [gifts, forUserIds?.length]);\n\n  const fullMonthlyGiftAmount = useMemo(() => {\n    if (!filteredGifts?.length) {\n      return undefined;\n    }\n\n    const basicGift = filteredGifts.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    });\n\n    return Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const handleSubmit = useLastCallback(() => {\n    if (!selectedGift) {\n      return;\n    }\n\n    openInvoice({\n      type: 'giftcode',\n      userIds: forUserIds!,\n      currency: selectedGift!.currency,\n      amount: selectedGift!.amount,\n      option: selectedGift!,\n    });\n  });\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isCompleted) {\n      showConfetti();\n    }\n  }, [isCompleted, showConfetti]);\n\n  const userNameList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return forUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [forUserIds]);\n\n  function renderGiftTitle() {\n    if (isCompleted) {\n      return renderText(lang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle',\n        [userNameList, selectedGift?.months]), ['simple_markdown']);\n    }\n\n    return lang('GiftTelegramPremiumTitle');\n  }\n\n  function renderGiftText() {\n    if (isCompleted) {\n      return renderText(lang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', userNameList),\n        ['simple_markdown']);\n    }\n    return renderText(lang('GiftPremiumUsersGiveAccessManyZero', userNameList), ['simple_markdown']);\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    // Translation hack for rendering component inside string\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={buildClassName(styles.premiumFeatures, styles.center)}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function renderBoostsPluralText() {\n    const giftParts = renderText(lang('GiftPremiumWillReceiveBoostsPlural', selectedUserQuantity), ['simple_markdown']);\n    return giftParts.map((part) => {\n      if (typeof part === 'string') {\n        return part.split(/(⚡)/g).map((subpart) => {\n          if (subpart === '⚡') {\n            return <Icon name=\"boost\" className={styles.boostIcon} />;\n          }\n          return subpart;\n        });\n      }\n      return part;\n    });\n  }\n\n  function renderSubscriptionGiftOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {filteredGifts?.map((gift) => {\n          return (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={gift.months}\n              option={gift}\n              fullMonthlyAmount={fullMonthlyGiftAmount}\n              checked={gift.months === selectedMonthOption}\n              onChange={setSelectedMonthOption}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={dialogRef}\n      onClose={closeGiftPremiumModal}\n      isOpen={isOpen}\n      className={styles.modalDialog}\n    >\n      <div className=\"custom-scroll\">\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closeGiftPremiumModal()}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className={styles.avatars}>\n          <AvatarList\n            size=\"large\"\n            peers={giftingUserList}\n          />\n        </div>\n        <h2 className={buildClassName(styles.headerText, styles.center)}>\n          {renderGiftTitle()}\n        </h2>\n        <p className={buildClassName(styles.description, styles.center)}>\n          {renderGiftText()}\n        </p>\n        {!isCompleted && (\n          <>\n            <p className={styles.description}>\n              {renderText(renderBoostsPluralText(), ['simple_markdown', 'emoji'])}\n            </p>\n\n            <div className={styles.options}>\n              {renderSubscriptionGiftOptions()}\n            </div>\n          </>\n        )}\n        {renderPremiumFeaturesLink()}\n      </div>\n\n      {!isCompleted && (\n        <Button withPremiumGradient className={styles.button} isShiny disabled={!selectedGift} onClick={handleSubmit}>\n          {lang(\n            'GiftSubscriptionFor', selectedGift\n            && formatCurrency(selectedGift!.amount, selectedGift.currency, lang.code),\n          )}\n        </Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    gifts, forUserIds, isCompleted,\n  } = selectTabState(global).giftPremiumModal || {};\n\n  return {\n    isCompleted,\n    gifts,\n    boostPerSentGift: global.appConfig?.boostsPerSentGift,\n    forUserIds,\n  };\n})(GiftPremiumModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wzzA3MFh\",\"pickerSelector\":\"xhujrq9i\",\"pickerTitle\":\"YuRK4e7S\",\"picker\":\"YF9nLkCK\",\"footer\":\"ATCZ2Q5G\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport Picker from './Picker';\n\nimport styles from './CountryPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (value: string[]) => void;\n  countryList: ApiCountry[];\n  selectionLimit?: number | undefined;\n};\n\nconst CountryPickerModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  countryList,\n  selectionLimit,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[]>([]);\n  const prevSelectedCountryIds = usePrevious(selectedCountryIds);\n  const noPickerScrollRestore = prevSelectedCountryIds === selectedCountryIds;\n\n  const displayedIds = useMemo(() => {\n    if (!countryList) {\n      return [];\n    }\n\n    return countryList\n      .filter((country) => !country.isHidden)\n      .map((country) => country.iso2);\n  }, [countryList]);\n\n  const handleSelectedIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (selectionLimit && newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningCountries', selectionLimit),\n      });\n      return;\n    }\n    setSelectedCountryIds(newSelectedIds);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(selectedCountryIds);\n    onClose();\n  });\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleSubmit}\n    >\n      <div className={styles.container}>\n        <div className={styles.pickerSelector}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4 className={styles.pickerTitle}>\n            {lang('BoostingSelectCountry')}\n          </h4>\n        </div>\n      </div>\n\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <Picker\n          className={styles.picker}\n          itemIds={displayedIds}\n          selectedIds={selectedCountryIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          noScrollRestore={noPickerScrollRestore}\n          isCountryList\n          countryList={countryList}\n        />\n      </div>\n\n      <div className={styles.footer}>\n        <Button\n          size=\"smaller\"\n          onClick={handleSubmit}\n        >\n          {lang('SelectCountries.OK')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(CountryPickerModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"fAO_fMJD\",\"main\":\"vtyWYWNc\",\"filter\":\"OM3FgjkD\",\"title\":\"d3EvpDij\",\"buttons\":\"w2D1Ddo7\",\"picker\":\"dWDj6lW6\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUserStatus } from '../../api/types';\n\nimport {\n  filterChatsByName,\n  filterUsersByName, isChatChannel, isChatPublic, isChatSuperGroup, isUserBot, sortUserIds,\n} from '../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from '../common/helpers/sortChatIds';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Picker from '../common/Picker';\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Modal from '../ui/Modal';\n\nimport styles from './AppendEntityPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n  chatId?: string;\n  entityType: 'members' | 'channels' | undefined;\n  onSubmit: (value: string[]) => void;\n  selectionLimit: number;\n};\n\ninterface StateProps {\n  chatId?: string;\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  channelList?: (ApiChat | undefined)[] | undefined;\n  isChannel?: boolean;\n  isSuperGroup?: boolean;\n  currentUserId?: string | undefined;\n}\n\nconst AppendEntityPickerModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  isOpen,\n  onClose,\n  members,\n  adminMembersById,\n  userStatusesById,\n  entityType,\n  isChannel,\n  isSuperGroup,\n  onSubmit,\n  currentUserId,\n  selectionLimit,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n  const [pendingChannelId, setPendingChannelId] = useState<string | undefined>(undefined);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const channelsIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    const activeChatIds = getGlobal().chats.listIds.active;\n\n    return activeChatIds!.map((id) => chatsById[id])\n      .filter((chat) => chat && (isChatChannel(chat)\n        || isChatSuperGroup(chat)) && chat.id !== chatId)\n      .map((chat) => chat!.id);\n  }, [chatId]);\n\n  const adminIds = useMemo(() => {\n    return adminMembersById && Object.keys(adminMembersById);\n  }, [adminMembersById]);\n\n  const memberIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return adminIds ? userIds.filter((userId) => userId !== currentUserId) : userIds;\n  }, [adminIds, currentUserId, members, userStatusesById]);\n\n  const displayedMembersIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredContactIds = memberIds ? filterUsersByName(memberIds, usersById, searchQuery) : [];\n\n    return sortChatIds(unique(filteredContactIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user);\n    }));\n  }, [memberIds, searchQuery]);\n\n  const displayedChannelIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    const foundChannelIds = channelsIds ? filterChatsByName(lang, channelsIds, chatsById, searchQuery) : [];\n\n    return sortChatIds(unique(foundChannelIds).filter((contactId) => {\n      const chat = chatsById[contactId];\n      if (!chat) {\n        return true;\n      }\n\n      return isChannel || isSuperGroup;\n    }),\n    false,\n    selectedIds);\n  }, [channelsIds, lang, searchQuery, selectedIds, isSuperGroup, isChannel]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    onSubmit([]);\n    onClose();\n  });\n\n  const handleSendIdList = useLastCallback(() => {\n    onSubmit(selectedIds);\n    onClose();\n  });\n\n  const confirmPrivateLinkChannelSelection = useLastCallback(() => {\n    if (pendingChannelId) {\n      setSelectedIds((prevIds) => unique([...prevIds, pendingChannelId]));\n    }\n    closeConfirmModal();\n  });\n\n  const handleSelectedMemberIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningUsers', selectionLimit),\n      });\n      return;\n    }\n    setSelectedIds(newSelectedIds);\n  });\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    const chatsById = getGlobal().chats.byId;\n    const newlyAddedIds = newSelectedIds.filter((id) => !selectedIds.includes(id));\n    const privateLinkChannelId = newlyAddedIds.find((id) => {\n      const chat = chatsById[id];\n      return chat && !isChatPublic(chat);\n    });\n\n    if (selectedIds?.length >= selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningChannelsPlural', selectionLimit),\n      });\n      return;\n    }\n\n    if (privateLinkChannelId) {\n      setPendingChannelId(privateLinkChannelId);\n      openConfirmModal();\n    } else {\n      setSelectedIds(newSelectedIds);\n    }\n  });\n\n  const handleClose = useLastCallback(() => {\n    onSubmit([]);\n    onClose();\n  });\n\n  function renderSearchField() {\n    return (\n      <div className={styles.filter} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleCloseButtonClick}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <h3 className={styles.title}>{lang(entityType === 'channels'\n          ? 'RequestPeer.ChooseChannelTitle' : 'BoostingAwardSpecificUsers')}\n        </h3>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onEnter={handleSendIdList}\n    >\n      <div className={styles.main}>\n        {renderSearchField()}\n        <div className={buildClassName(styles.main, 'custom-scroll')}>\n          <Picker\n            className={styles.picker}\n            itemIds={entityType === 'members' ? displayedMembersIds : displayedChannelIds}\n            selectedIds={selectedIds}\n            filterValue={searchQuery}\n            filterPlaceholder={lang('Search')}\n            searchInputId={`${entityType}-picker-search`}\n            onSelectedIdsChange={entityType === 'channels'\n              ? handleSelectedChannelIdsChange : handleSelectedMemberIdsChange}\n            onFilterChange={setSearchQuery}\n            isSearchable\n          />\n        </div>\n        <div className={styles.buttons}>\n          <Button size=\"smaller\" onClick={handleSendIdList}>\n            {lang('Save')}\n          </Button>\n        </div>\n      </div>\n      <ConfirmDialog\n        title={lang('BoostingGiveawayPrivateChannel')}\n        text={lang('BoostingGiveawayPrivateChannelWarning')}\n        confirmLabel={lang('Add')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmPrivateLinkChannelSelection}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId, entityType }): StateProps => {\n  const { statusesById: userStatusesById } = global.users;\n  let isChannel;\n  let isSuperGroup;\n  let members: ApiChatMember[] | undefined;\n  let adminMembersById: Record<string, ApiChatMember> | undefined;\n  let currentUserId: string | undefined;\n\n  if (entityType === 'members') {\n    currentUserId = global.currentUserId;\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    if (chatFullInfo) {\n      members = chatFullInfo.members;\n      adminMembersById = chatFullInfo.adminMembersById;\n    }\n  } if (entityType === 'channels') {\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    if (chat) {\n      isChannel = isChatChannel(chat);\n      isSuperGroup = isChatSuperGroup(chat);\n    }\n  }\n\n  return {\n    chatId,\n    members,\n    adminMembersById,\n    userStatusesById,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n  };\n})(AppendEntityPickerModal));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './GiveawayTypeOption.module.scss';\n\ntype ApiGiveawayType = 'random_users' | 'specific_users';\n\ntype OwnProps = {\n  option: ApiGiveawayType;\n  name: string;\n  text: string;\n  img: string;\n  checked?: boolean;\n  isLink: boolean;\n  className?: string;\n  onChange: (value: ApiGiveawayType) => void;\n  onClickAction?: () => void;\n  userNames?: string;\n  selectedMemberIds?: string[];\n};\n\nconst GiveawayTypeOption: FC<OwnProps> = ({\n  option, checked,\n  name, text, img,\n  isLink, onChange, onClickAction, className,\n  userNames, selectedMemberIds,\n}) => {\n  const lang = useOldLang();\n\n  let displayText: string | undefined = lang(text);\n  if (isLink && selectedMemberIds?.length) {\n    displayText = selectedMemberIds.length > 2 ? `${selectedMemberIds.length}` : userNames;\n  }\n\n  const handleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(option);\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    onClickAction?.();\n  });\n\n  return (\n    <label\n      className={buildClassName(styles.wrapper, className)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"giveaway_option\"\n        value={option}\n        checked={checked}\n        onChange={handleChange}\n        onClick={(e) => e.stopPropagation()}\n      />\n      <div className={styles.content}>\n        <img className={styles.optionImg} src={img} alt=\"\" draggable={false} />\n        <div className={styles.giveaway}>\n          <h3 className={styles.title}>\n            {lang(`${name}`)}\n          </h3>\n          {isLink ? (\n            <div className={styles.link}>\n              <span>{displayText}</span>\n              <Icon name=\"next\" />\n            </div>\n          ) : (\n            <span className={styles.contentText}>{displayText}</span>\n          )}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiveawayTypeOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"w3OGYFKn\",\"input\":\"xy4AclZa\",\"content\":\"TTgSI7Xh\",\"notChecked\":\"JDcXsByU\",\"giveaway\":\"sEt7TF59\",\"title\":\"u4NzVBBi\",\"link\":\"y7XfPOoG\",\"optionImg\":\"lGhZJbMF\",\"contentText\":\"kt2ZKZ6j\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"P0kLOw15\",\"button\":\"ILuhBsJG\",\"main\":\"SqiN63Ef\",\"logo\":\"Me2hCsMs\",\"header-text\":\"UVDnB0Wq\",\"headerText\":\"UVDnB0Wq\",\"description\":\"v5yGzV6v\",\"header\":\"U6XNIToQ\",\"hidden-header\":\"tDZc21ZC\",\"hiddenHeader\":\"tDZc21ZC\",\"close-button\":\"OX6_HqAd\",\"closeButton\":\"OX6_HqAd\",\"premium-header-text\":\"v6hiGpEn\",\"premiumHeaderText\":\"v6hiGpEn\",\"primary-footer-text\":\"YGbiSd3e\",\"primaryFooterText\":\"YGbiSd3e\",\"section\":\"rZRDMqUL\",\"types\":\"sQ5PkKEs\",\"footer\":\"hD_AEzjd\",\"options\":\"JjDLNrKG\",\"giveawayTitle\":\"p5Hn4Q6E\",\"subscription\":\"rniPcuiP\",\"subscriptionOption\":\"ggZrgZnv\",\"status\":\"q1y2qUTn\",\"info\":\"IsT38nlq\",\"titleInfo\":\"nmsfBLut\",\"month\":\"TsGuei3B\",\"quantity\":\"G9H3tm6D\",\"floatingBadge\":\"xKl2UeV8\",\"floatingBadgeColor\":\"HLx3wTBD\",\"floatingBadgeButtonColor\":\"JLH0MExt\",\"floatingBadgeIcon\":\"Ftr7zf2v\",\"floatingBadgeValue\":\"Ce0Ob2tg\",\"subscriptionFooter\":\"rDFQAfTt\",\"premiumFeatures\":\"eNQ_nrKr\",\"dateButton\":\"GeKqKRgP\",\"title\":\"LZ3vPzak\",\"checkboxSection\":\"Z9QJQ6IS\",\"prizesSection\":\"eQVP0Nx8\",\"prizesInput\":\"qMYNwiUZ\",\"subLabelClassName\":\"txXJxVFu\",\"prepaidImg\":\"ldn4mh2T\",\"addButton\":\"sOXvh85b\",\"addChannel\":\"aGbyR60s\",\"transition\":\"vEI2Wewt\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiCountry, ApiPremiumGiftCodeOption, ApiPrepaidGiveaway, ApiUser,\n} from '../../../api/types';\n\nimport {\n  GIVEAWAY_BOOST_PER_PREMIUM,\n  GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  GIVEAWAY_MAX_ADDITIONAL_USERS,\n} from '../../../config';\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport CountryPickerModal from '../../common/CountryPickerModal';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSliderWithMarks from '../../ui/RangeSliderWithMarks';\nimport Switcher from '../../ui/Switcher';\nimport AppendEntityPickerModal from '../AppendEntityPickerModal';\nimport GiveawayTypeOption from './GiveawayTypeOption';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiveawayModal.module.scss';\n\nimport GiftBlueRound from '../../../assets/premium/GiftBlueRound.svg';\nimport GiftGreenRound from '../../../assets/premium/GiftGreenRound.svg';\nimport GiftRedRound from '../../../assets/premium/GiftRedRound.svg';\nimport GiveawayUsersRound from '../../../assets/premium/GiveawayUsersRound.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  userIds?: string[];\n};\n\ntype StateProps = {\n  chatId?: string;\n  gifts?: ApiPremiumGiftCodeOption[];\n  isOpen?: boolean;\n  fromUser?: ApiUser;\n  selectedMemberList?: string[] | undefined;\n  selectedChannelList?: string[] | undefined;\n  giveawayBoostPerPremiumLimit?: number;\n  userSelectionLimit?: number;\n  countryList: ApiCountry[];\n  prepaidGiveaway?: ApiPrepaidGiveaway;\n  countrySelectionLimit: number | undefined;\n  isChannel?: boolean;\n};\n\ntype GiveawayAction = 'createRandomlyUsers' | 'createSpecificUsers';\ntype ApiGiveawayType = 'random_users' | 'specific_users';\ntype SubscribersType = 'all' | 'new';\n\ninterface TypeOption {\n  name: string;\n  text: string;\n  value: ApiGiveawayType;\n  img: string;\n  actions?: GiveawayAction;\n  isLink: boolean;\n  onClickAction?: () => void;\n}\n\nconst DEFAULT_CUSTOM_EXPIRE_DATE = 86400 * 3 * 1000; // 3 days\nconst MAX_ADDITIONAL_CHANNELS = 9;\nconst DEFAULT_BOOST_COUNT = 5;\n\nconst GIVEAWAY_IMG_LIST: { [key: number]: string } = {\n  3: GiftGreenRound,\n  6: GiftBlueRound,\n  12: GiftRedRound,\n};\n\nconst GiveawayModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  gifts,\n  isOpen,\n  isChannel,\n  selectedMemberList,\n  selectedChannelList,\n  giveawayBoostPerPremiumLimit = GIVEAWAY_BOOST_PER_PREMIUM,\n  countryList,\n  prepaidGiveaway,\n  countrySelectionLimit = GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_USERS,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closeGiveawayModal, openInvoice, openPremiumModal,\n    launchPrepaidGiveaway,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isCountryPickerModalOpen, openCountryPickerModal, closeCountryPickerModal] = useFlag();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [isEntityPickerModalOpen, openEntityPickerModal, closeEntityPickerModal] = useFlag();\n  const [entityType, setEntityType] = useState<'members' | 'channels' | undefined>(undefined);\n\n  const TYPE_OPTIONS: TypeOption[] = [{\n    name: 'BoostingCreateGiveaway',\n    text: 'BoostingWinnersRandomly',\n    value: 'random_users',\n    img: GiftBlueRound,\n    actions: 'createRandomlyUsers',\n    isLink: false,\n  }, {\n    name: 'BoostingAwardSpecificUsers',\n    text: 'BoostingSelectRecipients',\n    value: 'specific_users',\n    img: GiveawayUsersRound,\n    actions: 'createSpecificUsers',\n    isLink: true,\n    onClickAction: () => {\n      openEntityPickerModal();\n      setEntityType('members');\n    },\n  }];\n\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedUserCount, setSelectedUserCount] = useState<number>(DEFAULT_BOOST_COUNT);\n  const [selectedGiveawayOption, setGiveawayOption] = useState<ApiGiveawayType>(TYPE_OPTIONS[0].value);\n  const [selectedSubscriberOption, setSelectedSubscriberOption] = useState<SubscribersType>('all');\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [selectedChannelIds, setSelectedChannelIds] = useState<string[]>([]);\n  const [selectedCountriesIds, setSelectedCountriesIds] = useState<string[] | undefined>([]);\n  const [shouldShowWinners, setShouldShowWinners] = useState<boolean>(false);\n  const [shouldShowPrizes, setShouldShowPrizes] = useState<boolean>(false);\n  const [prizeDescription, setPrizeDescription] = useState<string | undefined>(undefined);\n  const [dataPrepaidGiveaway, setDataPrepaidGiveaway] = useState<ApiPrepaidGiveaway | undefined>(undefined);\n  const boostQuantity = selectedUserCount * giveawayBoostPerPremiumLimit;\n  const isRandomUsers = selectedGiveawayOption === 'random_users';\n\n  const SUBSCRIBER_OPTIONS = useMemo(() => [\n    {\n      value: 'all',\n      label: lang(isChannel ? 'BoostingAllSubscribers' : 'BoostingAllMembers'),\n      subLabel: selectedCountriesIds && selectedCountriesIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountriesIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n    {\n      value: 'new',\n      label: lang(isChannel ? 'BoostingNewSubscribers' : 'BoostingNewMembers'),\n      subLabel: selectedCountriesIds && selectedCountriesIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountriesIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n  ], [isChannel, lang, selectedCountriesIds]);\n\n  const monthQuantity = lang('Months', selectedMonthOption);\n\n  const selectedGift = useMemo(() => {\n    return gifts!.find((gift) => gift.months === selectedMonthOption && gift.users === selectedUserCount);\n  }, [gifts, selectedMonthOption, selectedUserCount]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users\n      === (selectedUserIds?.length ? selectedUserIds?.length : selectedUserCount));\n  }, [gifts, selectedUserIds, selectedUserCount]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    if (!filteredGifts?.length) {\n      return undefined;\n    }\n\n    const basicGift = filteredGifts.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    });\n\n    return Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const userCountOptions = useMemo(() => {\n    const uniqueUserCounts = new Set(gifts?.map((gift) => gift.users));\n    return Array.from(uniqueUserCounts).sort((a, b) => a - b);\n  }, [gifts]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setSelectedMonthOption(prepaidGiveaway ? prepaidGiveaway.months : gifts?.[0].months);\n    }\n  }, [gifts, isOpen, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (prepaidGiveaway) {\n      setSelectedUserCount(prepaidGiveaway.quantity);\n      setDataPrepaidGiveaway(prepaidGiveaway);\n    }\n  }, [prepaidGiveaway]);\n\n  useEffect(() => {\n    if (selectedMemberList) {\n      setSelectedUserIds(selectedMemberList);\n    }\n  }, [selectedMemberList]);\n\n  useEffect(() => {\n    if (selectedChannelList) {\n      setSelectedChannelIds(selectedChannelList);\n    }\n  }, [selectedChannelList]);\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (selectedUserIds?.length) {\n      openInvoice({\n        type: 'giftcode',\n        boostChannelId: chatId!,\n        userIds: selectedUserIds,\n        currency: selectedGift!.currency,\n        amount: selectedGift!.amount,\n        option: selectedGift!,\n      });\n    } else {\n      openInvoice({\n        type: 'giveaway',\n        chatId: chatId!,\n        additionalChannelIds: selectedChannelIds,\n        isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n        countries: selectedCountriesIds,\n        areWinnersVisible: shouldShowWinners,\n        prizeDescription,\n        untilDate: customExpireDate / 1000,\n        currency: selectedGift!.currency,\n        amount: selectedGift!.amount,\n        option: selectedGift!,\n      });\n    }\n\n    closeGiveawayModal();\n  });\n\n  const confirmLaunchPrepaidGiveaway = useLastCallback(() => {\n    launchPrepaidGiveaway({\n      chatId: chatId!,\n      giveawayId: dataPrepaidGiveaway!.id,\n      paymentPurpose: {\n        additionalChannelIds: selectedChannelIds,\n        countries: selectedCountriesIds,\n        prizeDescription,\n        areWinnersVisible: shouldShowWinners,\n        untilDate: customExpireDate / 1000,\n        currency: selectedGift!.currency,\n        amount: selectedGift!.amount,\n      },\n    });\n\n    closeConfirmModal();\n    closeGiveawayModal();\n  });\n\n  const handleUserCountChange = useLastCallback((newValue) => {\n    setSelectedUserCount(newValue);\n  });\n\n  const handlePrizeDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setPrizeDescription(e.target.value);\n  });\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return selectedUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [selectedUserIds]);\n\n  const handleAdd = useLastCallback(() => {\n    openEntityPickerModal();\n    setEntityType('channels');\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleChangeSubscriberOption = useLastCallback((value) => {\n    setSelectedSubscriberOption(value);\n  });\n\n  const handleChangeTypeOption = useLastCallback((value: ApiGiveawayType) => {\n    setGiveawayOption(value);\n    setSelectedUserIds([]);\n  });\n\n  const handleExpireDateChange = useLastCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  });\n\n  const handleSetCountriesListChange = useLastCallback((value: string[]) => {\n    setSelectedCountriesIds(value);\n  });\n\n  const handleSetIdsListChange = useLastCallback((value: string[]) => {\n    return entityType === 'members'\n      ? (value?.length ? setSelectedUserIds(value) : setGiveawayOption('random_users'))\n      : setSelectedChannelIds(value);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeGiveawayModal();\n  });\n\n  const handleShouldShowWinnersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowWinners(e.target.checked);\n  });\n\n  const handleShouldShowPrizesChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowPrizes(e.target.checked);\n  });\n\n  const onClickActionHandler = useLastCallback(() => {\n    openCountryPickerModal();\n  });\n\n  if (!gifts) return undefined;\n\n  function renderTypeOptions() {\n    return (\n      <div className={styles.options}>\n        {TYPE_OPTIONS.map((option) => {\n          return (\n            <GiveawayTypeOption\n              key={option.name}\n              name={option.name}\n              text={option.text}\n              option={option.value}\n              img={option.img}\n              onChange={handleChangeTypeOption}\n              checked={selectedGiveawayOption === option.value}\n              isLink={option.isLink}\n              userNames={userNames}\n              selectedMemberIds={selectedUserIds}\n              onClickAction={option.onClickAction}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscribersOptions() {\n    return (\n      <div className={styles.options}>\n        <RadioGroup\n          name=\"subscribers\"\n          options={SUBSCRIBER_OPTIONS}\n          selected={selectedSubscriberOption}\n          onChange={handleChangeSubscriberOption}\n          onClickAction={onClickActionHandler}\n          subLabelClassName={styles.subLabelClassName}\n          isLink\n        />\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.options}>\n        {filteredGifts?.map((gift) => (\n          <PremiumSubscriptionOption\n            isGiveaway\n            key={gift.months}\n            option={gift}\n            fullMonthlyAmount={fullMonthlyAmount!}\n            checked={gift.months === selectedMonthOption}\n            onChange={setSelectedMonthOption}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function deleteParticipantsHandler(id: string) {\n    const filteredChannelIds = selectedChannelIds.filter((channelId) => channelId !== id);\n    setSelectedChannelIds(filteredChannelIds);\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={handleClose}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n    >\n      <div className={styles.main} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n        <h2 className={styles.headerText}>\n          {renderText(lang('BoostingBoostsViaGifts'))}\n        </h2>\n        <div className={styles.description}>\n          {renderText(lang(isChannel ? 'BoostingGetMoreBoost' : 'BoostingGetMoreBoostsGroup'))}\n        </div>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.premiumHeaderText}>\n            {lang('BoostingBoostsViaGifts')}\n          </h2>\n        </div>\n        {dataPrepaidGiveaway ? (\n          <div className={styles.status}>\n            <div>\n              <img className={styles.prepaidImg} src={GIVEAWAY_IMG_LIST[dataPrepaidGiveaway.months]} alt=\"\" />\n            </div>\n            <div className={styles.info}>\n              <h3 className={styles.title}>\n                {lang('BoostingTelegramPremiumCountPlural', dataPrepaidGiveaway.quantity)}\n              </h3>\n              <p className={styles.month}>{lang('PrepaidGiveawayMonths', dataPrepaidGiveaway.months)}</p>\n            </div>\n            <div className={styles.quantity}>\n              <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {dataPrepaidGiveaway.quantity * (giveawayBoostPerPremiumLimit ?? GIVEAWAY_BOOST_PER_PREMIUM)}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className={buildClassName(styles.section, styles.types)}>\n            {renderTypeOptions()}\n          </div>\n        )}\n\n        {isRandomUsers && (\n          <>\n            {!dataPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingQuantityPrizes')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedUserCount}\n                    marks={userCountOptions}\n                    onChange={handleUserCountChange}\n                  />\n                </div>\n\n                <div className={styles.subscription}>\n                  {renderText(lang('BoostingChooseHowMany'))}\n                </div>\n              </>\n            )}\n\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingChannelsIncludedGiveaway')}\n              </h2>\n\n              <ListItem\n                inactive\n                className=\"chat-item-clickable contact-list-item\"\n              >\n                <GroupChatInfo\n                  chatId={chatId!}\n                  status={lang(isChannel ? 'BoostingChannelWillReceiveBoost'\n                    : 'BoostingGroupWillReceiveBoost', boostQuantity, 'i')}\n                />\n              </ListItem>\n\n              {selectedChannelIds?.map((channelId) => {\n                return (\n                  <ListItem\n                    ripple\n                    key={channelId}\n                    className=\"chat-item-clickable contact-list-item\"\n                    /* eslint-disable-next-line react/jsx-no-bind */\n                    onClick={() => deleteParticipantsHandler(channelId)}\n                    rightElement={(<Icon name=\"close\" />)}\n                  >\n                    <GroupChatInfo\n                      chatId={channelId.toString()}\n                    />\n                  </ListItem>\n                );\n              })}\n\n              {selectedChannelIds.length < MAX_ADDITIONAL_CHANNELS && (\n                <ListItem\n                  icon=\"add\"\n                  ripple\n                  onClick={handleAdd}\n                  className={styles.addButton}\n                  iconClassName={styles.addChannel}\n                >\n                  {lang('BoostingAddChannelOrGroup')}\n                </ListItem>\n              )}\n            </div>\n\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingEligibleUsers')}\n              </h2>\n\n              {renderSubscribersOptions()}\n            </div>\n\n            <div className={styles.subscription}>\n              {renderText(lang(isChannel ? 'BoostGift.LimitSubscribersInfo' : 'lng_giveaway_users_about_group'))}\n            </div>\n\n            <div className={styles.section}>\n              <div className={styles.checkboxSection}>\n                <h2 className={styles.title}>\n                  {lang('BoostingGiveawayAdditionalPrizes')}\n                </h2>\n\n                <Switcher\n                  label={lang('BoostingGiveawayAdditionalPrizes')}\n                  checked={shouldShowPrizes}\n                  onChange={handleShouldShowPrizesChange}\n                />\n              </div>\n\n              {shouldShowPrizes && (\n                <div className={styles.prizesSection}>\n                  <h2 className={styles.title}>\n                    {dataPrepaidGiveaway ? dataPrepaidGiveaway.quantity : selectedUserCount}\n                  </h2>\n                  <InputText\n                    className={styles.prizesInput}\n                    value={prizeDescription}\n                    onChange={handlePrizeDescriptionChange}\n                    label={lang('BoostingGiveawayEnterYourPrize')}\n                  />\n                </div>\n              )}\n            </div>\n\n            {shouldShowPrizes ? (\n              <div className={styles.subscription}>\n                {prizeDescription?.length ? renderText(lang('BoostingGiveawayAdditionPrizeCountNameHint',\n                  dataPrepaidGiveaway\n                    ? [dataPrepaidGiveaway.quantity, prizeDescription, monthQuantity]\n                    : [selectedUserCount, prizeDescription, monthQuantity],\n                  undefined,\n                  selectedMonthOption), ['simple_markdown']) : renderText(lang('BoostingGiveawayAdditionPrizeCountHint',\n                  dataPrepaidGiveaway\n                    ? [dataPrepaidGiveaway.quantity, monthQuantity]\n                    : [selectedUserCount, monthQuantity],\n                  undefined,\n                  selectedMonthOption), ['simple_markdown'])}\n              </div>\n            ) : (\n              <div className={styles.subscription}>\n                {renderText(lang('BoostingGiveawayAdditionPrizeHint'))}\n              </div>\n            )}\n\n            <div className={styles.section}>\n              <div className={styles.checkboxSection}>\n                <h2 className={styles.title}>\n                  {lang('BoostingGiveawayShowWinners')}\n                </h2>\n\n                <Switcher\n                  label={lang('BoostingGiveawayAdditionalPrizes')}\n                  checked={shouldShowWinners}\n                  onChange={handleShouldShowWinnersChange}\n                />\n              </div>\n            </div>\n\n            <div className={styles.subscription}>\n              {renderText(lang('BoostingGiveawayShowWinnersHint'))}\n            </div>\n\n            <div className={buildClassName(styles.section, dataPrepaidGiveaway && styles.subscriptionFooter)}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingDateWhenGiveawayEnds')}\n              </h2>\n\n              <Button\n                ariaLabel={lang('BoostGift.DateEnds')}\n                className={buildClassName(styles.dateButton, 'expire-limit')}\n                isText\n                onClick={openCalendar}\n              >\n                <h3 className={styles.title}>\n                  {lang('BoostGift.DateEnds')}\n                </h3>\n                {formatDateTimeToString(customExpireDate, lang.code)}\n              </Button>\n            </div>\n          </>\n        )}\n\n        {!dataPrepaidGiveaway && (\n          <>\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingDurationOfPremium')}\n              </h2>\n\n              {renderSubscriptionOptions()}\n            </div>\n\n            <div className={buildClassName(styles.subscription, styles.subscriptionFooter)}>\n              {renderPremiumFeaturesLink()}\n            </div>\n          </>\n        )}\n\n        {selectedGiveawayOption && (\n          <div className={styles.footer}>\n            <Button className={styles.button} onClick={dataPrepaidGiveaway ? openConfirmModal : handleClick}>\n              {lang('BoostingStartGiveaway')}\n              <div className={styles.quantity}>\n                <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeButtonColor)}>\n                  <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                  <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                    {dataPrepaidGiveaway ? dataPrepaidGiveaway.quantity : boostQuantity}\n                  </div>\n                </div>\n              </div>\n            </Button>\n          </div>\n        )}\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n      <CountryPickerModal\n        isOpen={isCountryPickerModalOpen}\n        onClose={closeCountryPickerModal}\n        countryList={countryList}\n        onSubmit={handleSetCountriesListChange}\n        selectionLimit={countrySelectionLimit}\n      />\n      <AppendEntityPickerModal\n        key={entityType}\n        isOpen={isEntityPickerModalOpen}\n        onClose={closeEntityPickerModal}\n        entityType={entityType}\n        chatId={chatId}\n        onSubmit={handleSetIdsListChange}\n        selectionLimit={entityType === 'members' ? userSelectionLimit : GIVEAWAY_MAX_ADDITIONAL_CHANNELS}\n      />\n      <ConfirmDialog\n        title={lang('BoostingStartGiveawayConfirmTitle')}\n        text={lang('BoostingStartGiveawayConfirmText')}\n        confirmLabel={lang('Start')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmLaunchPrepaidGiveaway}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    giveawayModal,\n  } = selectTabState(global);\n  const chatId = giveawayModal?.chatId;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const isChannel = chat && isChatChannel(chat);\n\n  return {\n    chatId,\n    gifts: giveawayModal?.gifts,\n    selectedMemberList: giveawayModal?.selectedMemberIds,\n    selectedChannelList: giveawayModal?.selectedChannelIds,\n    giveawayBoostPerPremiumLimit: global.appConfig?.giveawayBoostsPerPremium,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n    countrySelectionLimit: global.appConfig?.giveawayCountriesMax,\n    countryList: global.countryList.general,\n    prepaidGiveaway: giveawayModal?.prepaidGiveaway,\n    isChannel,\n  };\n})(GiveawayModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"cKwZp5xA\",\"main\":\"bo8ICYep\",\"filter\":\"HK8ZNKHl\",\"title\":\"LUU19p8W\",\"buttons\":\"CdZFeuxb\",\"picker\":\"JBzw9a0l\",\"avatars\":\"UAhbe3L3\",\"center\":\"JZ7y_T5c\",\"description\":\"OySCJvvR\",\"premiumFeatures\":\"CrYMy2g6\",\"options\":\"IRkNlxtz\",\"button\":\"HIPk0a6e\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { GIVEAWAY_MAX_ADDITIONAL_CHANNELS } from '../../../config';\nimport {\n  filterUsersByName, isUserBot,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Picker from '../../common/Picker';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PremiumGiftingModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  userSelectionLimit?: number;\n  userIds?: string[];\n}\n\nconst PremiumGiftingModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  userIds,\n}) => {\n  const { closePremiumGiftingModal, openGiftPremiumModal, showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedUserIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredContactIds = userIds ? filterUsersByName(userIds, usersById, searchQuery) : [];\n\n    return sortChatIds(unique(filteredContactIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user) && userId !== currentUserId;\n    }));\n  }, [currentUserId, searchQuery, userIds]);\n\n  const handleSendIdList = useLastCallback(() => {\n    if (selectedUserIds?.length) {\n      openGiftPremiumModal({ forUserIds: selectedUserIds });\n\n      closePremiumGiftingModal();\n    }\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > userSelectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningUsers', userSelectionLimit),\n      });\n      return;\n    }\n    setSelectedUserIds(newSelectedIds);\n  });\n\n  function renderSearchField() {\n    return (\n      <div className={styles.filter} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closePremiumGiftingModal()}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <h3 className={styles.title}>{lang('GiftTelegramPremiumTitle')}\n        </h3>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={closePremiumGiftingModal}\n      onEnter={handleSendIdList}\n    >\n      <div className={styles.main}>\n        {renderSearchField()}\n        <div className={buildClassName(styles.main, 'custom-scroll')}>\n          <Picker\n            className={styles.picker}\n            itemIds={displayedUserIds}\n            selectedIds={selectedUserIds}\n            filterValue={searchQuery}\n            filterPlaceholder={lang('Search')}\n            searchInputId=\"users-picker-search\"\n            onSelectedIdsChange={handleSelectedUserIdsChange}\n            onFilterChange={setSearchQuery}\n            isSearchable\n          />\n        </div>\n        <div className={styles.buttons}>\n          <Button withPremiumGradient size=\"smaller\" onClick={handleSendIdList} disabled={!selectedUserIds?.length}>\n            {lang('Continue')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { currentUserId } = global;\n\n  return {\n    currentUserId,\n    userIds: global.contactList?.userIds,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n  };\n})(PremiumGiftingModal));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../global/types';\nimport type { LangFn } from '../../../../hooks/useOldLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogs',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n  savedDialogsPinned: 'pin-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: LangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: LangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useOldLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QAs_iFxO\",\"limit-compare\":\"k0O6Rnjh\",\"limitCompare\":\"k0O6Rnjh\",\"limit-badge\":\"Q5d_7bB4\",\"limitBadge\":\"Q5d_7bB4\",\"limit-value\":\"ArEy3hhB\",\"limitValue\":\"ArEy3hhB\",\"limit-icon\":\"rbnU7JVX\",\"limitIcon\":\"rbnU7JVX\",\"dialog-buttons\":\"RVM_RSap\",\"dialogButtons\":\"RVM_RSap\",\"x2\":\"esB1OhAF\",\"button-icon\":\"ydpxmYS3\",\"buttonIcon\":\"ydpxmYS3\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll(\n        containerRef.current!,\n        stickerSetEl,\n        'start',\n        FOCUS_MARGIN,\n        isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      );\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"m6XpTzQX\",\"video\":\"OZHqKbDL\",\"image\":\"enA6c8gc\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, hasVideoThumb, hasAnimatedThumb, hasStaticThumb, thumbCustomEmojiId,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const hasOnlyStaticThumb = hasStaticThumb && !hasVideoThumb && !hasAnimatedThumb && !thumbCustomEmojiId;\n\n  const shouldFallbackToStatic = hasOnlyStaticThumb || (hasVideoThumb && !IS_WEBM_SUPPORTED && !hasAnimatedThumb);\n  const staticHash = shouldFallbackToStatic && getStickerMediaHash(stickerSet.stickers![0], 'preview');\n  const staticMediaData = useMedia(staticHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !shouldFallbackToStatic) || hasAnimatedThumb) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = thumbCustomEmojiId || mediaData || staticMediaData;\n  const transitionClassNames = useMediaTransition(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: stickerSet,\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div ref={containerRef} className={buildClassName(styles.root, 'sticker-set-cover')}>\n      {isReady ? (\n        thumbCustomEmojiId ? (\n          <CustomEmoji\n            documentId={thumbCustomEmojiId}\n            size={size}\n            observeIntersectionForPlaying={observeIntersection}\n            noPlay={noPlay}\n          />\n        ) : hasAnimatedThumb ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (hasVideoThumb && !shouldFallbackToStatic) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || staticMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTimeOffset } from '../../util/serverTime';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldIgnorePremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n  isEffectEmoji?: boolean;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  shouldIgnorePremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  isEffectEmoji,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, stickerSetInfo,\n  } = sticker;\n\n  const isPremium = (!sticker.isFree && isEffectEmoji) || sticker.hasEffect;\n  const isCustomEmoji = sticker.isCustomEmoji || isEffectEmoji;\n  const isLocked = !isCurrentUserPremium && isPremium && !shouldIgnorePremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuPosition);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n\n  const getLayout = () => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      openPremiumModal({ initialSection: 'premium_stickers' });\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: sticker,\n      expires: Date.now() / 1000 + duration + getServerTimeOffset(),\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    isEffectEmoji && 'effect-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <Icon name=\"lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <Icon name=\"star\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Lu0K9UZP\",\"selected\":\"UF8XKO4C\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCoordsInSharedCanvas from '../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport CustomEmoji from './CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReaction) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation, 'full') : undefined,\n    !animationId,\n  );\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransition(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={mediaData}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Icon from './icons/Icon';\nimport ReactionEmoji from './ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isChatEmojiSet?: boolean;\n  isChatStickerSet?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isChatEmojiSet,\n  isChatStickerSet,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransition(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isCurrentUserPremium && isPremiumSet && !isChatEmojiSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID\n    && stickerSet.id !== POPULAR_SYMBOL_SET_ID && stickerSet.id !== EFFECT_EMOJIS_SET_ID\n    && stickerSet.id !== EFFECT_STICKERS_SET_ID && !isChatEmojiSet && !isChatStickerSet;\n\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = withDefaultTopicIcon ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && isEmoji && !isPopular && !isChatEmojiSet\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-title', withAddSetButton && 'symbol-set-title-external')}>\n            {isLocked && <Icon name=\"lock-badge\" className=\"symbol-set-locked-icon\" />}\n            <span className=\"symbol-set-name\">{stickerSet.title}</span>\n            {(isChatEmojiSet || isChatStickerSet) && (\n              <span className=\"symbol-set-chat\">{lang(isChatEmojiSet ? 'GroupEmoji' : 'GroupStickers')}</span>\n            )}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <Icon className=\"symbol-set-remove\" name=\"close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(\n          'symbol-set-container shared-canvas-container',\n          transitionClassNames,\n          stickerSet.id === EFFECT_EMOJIS_SET_ID && 'effect-emojis',\n        )}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <Icon name=\"star\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                shouldIgnorePremium={isChatEmojiSet}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n                isEffectEmoji={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n                noShowPremium={isCurrentUserPremium\n                  && (stickerSet.id === EFFECT_STICKERS_SET_ID || stickerSet.id === EFFECT_EMOJIS_SET_ID)}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSet);\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lq8BD6Hc\",\"main\":\"p7c8y0LH\",\"hasHeader\":\"zTGriBHY\",\"main_customEmoji\":\"U0BL1VvK\",\"mainCustomEmoji\":\"U0BL1VvK\",\"header\":\"Qn3lBUNs\",\"headerWithBorder\":\"HMspKpNp\",\"stickerCover\":\"YKO0Obwy\",\"activated\":\"y02WwQk6\",\"pickerDisabled\":\"BZfaP1GD\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiReaction, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChatFullInfo,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique } from '../../util/iteratees';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  chatEmojiSetId?: string;\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  stickerSetsById,\n  chatEmojiSetId,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  defaultTagReactions,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker && isSavedMessages) {\n      if (defaultTagReactions?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('PremiumPreviewTags'),\n          reactions: defaultTagReactions,\n          count: defaultTagReactions.length,\n          isEmoji: true,\n        });\n      }\n    }\n\n    if (isReactionPicker && !isSavedMessages) {\n      const topReactionsSlice = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .filter(({ isInactive }) => !isInactive)\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = (defaultStatusIconsPack.stickers || []).concat(recentCustomEmojis || []);\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const userSetIds = [...(addedCustomEmojiIds || [])];\n    if (chatEmojiSetId) {\n      userSetIds.unshift(chatEmojiSetId);\n    }\n\n    const setIdsToDisplay = unique(userSetIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, lang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId, isSavedMessages, defaultTagReactions, chatEmojiSetId,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleReactionSelect = useLastCallback((reaction: ApiReaction) => {\n    onReactionSelect?.(reaction);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <Icon name=\"recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !loadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n    pickerStyles.hasHeader,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n          const isChatEmojiSet = stickerSet.id === chatEmojiSetId;\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isChatEmojiSet={isChatEmojiSet}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={handleReactionSelect}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      reactions: {\n        availableReactions,\n        recentReactions,\n        topReactions,\n        defaultTags,\n      },\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n\n    return {\n      customEmojisById: !isStatusPicker ? customEmojisById : undefined,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      chatEmojiSetId: chatFullInfo?.emojiSet?.id,\n      availableReactions: isReactionPicker ? availableReactions : undefined,\n      defaultTagReactions: isReactionPicker ? defaultTags : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qk9PEGRE\",\"activated\":\"WYeuJNQx\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"hRzvfaRb\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"pUyNTysT\",\"modal\":\"IK2mBqbm\",\"loading\":\"zjXCH3pT\",\"description\":\"j6xEoljc\",\"bold\":\"hAA6B1lc\",\"chip\":\"smWR78pO\",\"replaceModal\":\"GIFAjZPY\",\"replaceModalContent\":\"Jxyz9TaL\",\"avatarContainer\":\"OKp6HS1U\",\"arrow\":\"WSJdWV7L\",\"boostedWrapper\":\"NU9itcIm\",\"boostedMark\":\"upXvhNRY\"};","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiMyBoost } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle, isChatAdmin, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateInFuture } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  boost?: ApiMyBoost;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n  canBoostMore?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  modal: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  prevBoostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  modal,\n  chat,\n  chatFullInfo,\n  prevBoostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n    loadFullChat,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isChannel = chat && isChatChannel(chat);\n\n  const isOpen = Boolean(modal);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (chat && !chatFullInfo) {\n      loadFullChat({ chatId: chat.id });\n    }\n  }, [chat, chatFullInfo]);\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, chat);\n  }, [chat, lang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!prevBoostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, prevBoostedChat);\n  }, [prevBoostedChat, lang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    boost,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n    canBoostMore,\n  }: BoostInfo = useMemo(() => {\n    if (!modal?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: lang('Loading'),\n      };\n    }\n\n    const {\n      hasMyBoost,\n    } = modal.boostStatus;\n\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, chat.id);\n    const areBoostsInDifferentChannels = modal?.myBoosts && !areAllBoostsInChannel(modal.myBoosts, chat.id);\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n      isMaxLevel,\n    } = getBoostProgressInfo(modal.boostStatus, true);\n\n    const hasBoost = hasMyBoost;\n\n    const left = lang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? lang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = lang('ChannelBoost.MoreBoosts', remainingBoosts);\n\n    const modalTitle = isChannel ? lang('BoostChannel') : lang('BoostGroup');\n\n    const boostsLeftToUnrestrict = (chatFullInfo?.boostsToUnrestrict || 0) - (chatFullInfo?.boostsApplied || 0);\n\n    let description: string | undefined;\n    if (isMaxLevel) {\n      description = lang('BoostsMaxLevelReached');\n    } else if (boostsLeftToUnrestrict > 0 && !isChatAdmin(chat)) {\n      const boostTimes = lang('GroupBoost.BoostToUnrestrict.Times', boostsLeftToUnrestrict);\n      description = lang('GroupBoost.BoostToUnrestrict', [boostTimes, chatTitle]);\n    } else {\n      description = lang('ChannelBoost.MoreBoostsNeeded.Text', [chatTitle, moreBoosts]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      boost: firstBoost,\n      isBoosted: hasBoost,\n      canBoostMore: areBoostsInDifferentChannels && !isMaxLevel,\n    };\n  }, [chat, chatTitle, modal, lang, chatFullInfo, isChannel]);\n\n  const isBoostDisabled = !modal?.myBoosts?.length && isCurrentUserPremium;\n  const isReplacingBoost = boost?.chatId && boost.chatId !== modal?.chatId;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id, slots: [boost!.slot] });\n    requestConfetti({});\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!boost) {\n      if (!isCurrentUserPremium) {\n        openPremiumDialog();\n        return;\n      }\n\n      closeBoostModal();\n      return;\n    }\n\n    if (!canBoostMore) {\n      closeBoostModal();\n      return;\n    }\n\n    if (boost.cooldownUntil) {\n      openWaitDialog();\n      return;\n    }\n\n    if (isReplacingBoost) {\n      openReplaceModal();\n      return;\n    }\n\n    handleApplyBoost();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        {isBoosted && (\n          <div className={buildClassName(styles.description, styles.bold)}>\n            {lang('ChannelBoost.YouBoostedChannelText', chatTitle)}\n          </div>\n        )}\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {canBoostMore ? (\n              <>\n                <Icon name=\"boost\" />\n                {lang(isChannel ? 'ChannelBoost.BoostChannel' : 'GroupBoost.BoostGroup')}\n              </>\n            ) : lang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {isReplacingBoost && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={prevBoostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(lang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {lang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {lang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {Boolean(boost?.cooldownUntil) && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={lang('OK')}\n          title={lang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            lang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatDateInFuture(lang, getServerTime(), boost!.cooldownUntil),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={lang('Common.Yes')}\n          title={lang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(lang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nfunction getFirstAvailableBoost(myBoosts: ApiMyBoost[], chatId?: string) {\n  return myBoosts.find((boost) => !boost.chatId)\n    || myBoosts.filter((b) => chatId && b.chatId !== chatId)\n      .sort((a, b) => a.date - b.date)[0];\n}\n\nfunction areAllBoostsInChannel(myBoosts: ApiMyBoost[], chatId: string) {\n  return myBoosts.every((boost) => boost.chatId === chatId);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal && selectChat(global, modal?.chatId);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, modal.chatId);\n    const boostedChat = firstBoost?.chatId ? selectChat(global, firstBoost?.chatId) : undefined;\n\n    return {\n      chat,\n      chatFullInfo,\n      prevBoostedChat: boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"KYHkJ9Qf\",\"title\":\"AwnUe4Qk\",\"value\":\"JGH6P9Az\",\"table\":\"DFRB0Ad4\",\"cell\":\"Cnh5ENvm\",\"logo\":\"jbiW0GE8\",\"avatar\":\"SHQbPR5Y\",\"chatItem\":\"aS9U4hiQ\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiWebDocument } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PickerSelectedItem from '../../common/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\ntype ChatItem = { chatId: string };\n\nexport type TableData = [TeactNode, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerImageUrl?: string;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  headerAvatarWebPhoto?: ApiWebDocument;\n  noHeaderImage?: boolean;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  className?: string;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerImageUrl,\n  headerAvatarPeer,\n  headerAvatarWebPhoto,\n  noHeaderImage,\n  header,\n  footer,\n  buttonText,\n  className,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  const withAvatar = Boolean(headerAvatarPeer || headerAvatarWebPhoto);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      isSlim\n      title={title}\n      className={className}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {!noHeaderImage && (\n        withAvatar ? (\n          <Avatar peer={headerAvatarPeer} webPhoto={headerAvatarWebPhoto} size=\"jumbo\" className={styles.avatar} />\n        ) : (\n          <img className={styles.logo} src={headerImageUrl} alt=\"\" draggable={false} />\n        )\n      )}\n      {header}\n      <table className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <tr className={styles.row}>\n            <td className={buildClassName(styles.cell, styles.title)}>{label}</td>\n            <td className={buildClassName(styles.cell, styles.value)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PickerSelectedItem\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  fluid\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </td>\n          </tr>\n        ))}\n      </table>\n      {footer}\n      {buttonText && (\n        <Button onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"clickable\":\"IzcASdzD\",\"centered\":\"xVLGjLub\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { selectChatMessage, selectSender } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport TableInfoModal, { type TableData } from '../common/TableInfoModal';\n\nimport styles from './GiftCodeModal.module.scss';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  modal: TabState['giftCodeModal'];\n};\n\nexport type StateProps = {\n  currentUserId?: string;\n  messageSender?: ApiPeer;\n};\n\nconst GIFTCODE_PATH = 'giftcode';\n\nconst GiftCodeModal = ({\n  currentUserId,\n  modal,\n  messageSender,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftCodeModal, applyGiftCode, focusMessage,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const canUse = (!modal?.info.toId || modal?.info.toId === currentUserId) && !modal?.info.usedAt;\n\n  const handleOpenGiveaway = useLastCallback(() => {\n    if (!modal || !modal.info.giveawayMessageId) return;\n    focusMessage({\n      chatId: modal.info.fromId!,\n      messageId: modal.info.giveawayMessageId,\n    });\n    closeGiftCodeModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (canUse) {\n      applyGiftCode({ slug: modal!.slug });\n      return;\n    }\n    closeGiftCodeModal();\n  });\n\n  const modalData = useMemo(() => {\n    if (!modal) return undefined;\n    const { slug, info } = modal;\n\n    const fromId = info.fromId || messageSender?.id;\n\n    const header = (\n      <>\n        <p className={styles.centered}>{renderText(lang('lng_gift_link_about'), ['simple_markdown'])}</p>\n        <LinkField title=\"BoostingGiftLink\" link={`${TME_LINK_PREFIX}/${GIFTCODE_PATH}/${slug}`} />\n      </>\n    );\n\n    const tableData = [\n      [lang('BoostingFrom'), fromId ? { chatId: fromId } : lang('BoostingNoRecipient')],\n      [lang('BoostingTo'), info.toId ? { chatId: info.toId } : lang('BoostingNoRecipient')],\n      [lang('BoostingGift'), lang('BoostingTelegramPremiumFor', lang('Months', info.months, 'i'))],\n      [lang('BoostingReason'), (\n        <span className={buildClassName(info.giveawayMessageId && styles.clickable)} onClick={handleOpenGiveaway}>\n          {info.isFromGiveaway && !info.toId ? lang('BoostingIncompleteGiveaway')\n            : lang(info.isFromGiveaway ? 'BoostingGiveaway' : 'BoostingYouWereSelected')}\n        </span>\n      )],\n      [lang('BoostingDate'), formatDateTimeToString(info.date * 1000, lang.code, true)],\n    ] satisfies TableData;\n\n    const footer = (\n      <span className={styles.centered}>\n        {renderText(\n          info.usedAt ? lang('BoostingUsedLinkDate', formatDateTimeToString(info.usedAt * 1000, lang.code, true))\n            : lang('BoostingSendLinkToAnyone'),\n          ['simple_markdown'],\n        )}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [lang, messageSender?.id, modal]);\n\n  if (!modalData) return undefined;\n\n  return (\n    <TableInfoModal\n      isOpen={isOpen}\n      title={lang('lng_gift_link_title')}\n      headerImageUrl={PremiumLogo}\n      tableData={modalData.tableData}\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={canUse ? lang('BoostingUseLink') : lang('Close')}\n      onButtonClick={handleButtonClick}\n      onClose={closeGiftCodeModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { message } = modal || {};\n    const chatMessage = message && selectChatMessage(global, message.chatId, message.messageId);\n    const sender = chatMessage && selectSender(global, chatMessage);\n\n    return {\n      currentUserId: global.currentUserId,\n      messageSender: sender,\n    };\n  },\n)(GiftCodeModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"dl10exNi\",\"picker-wrapper\":\"gxWY5c6x\",\"pickerWrapper\":\"gxWY5c6x\",\"picker-header\":\"h8N7eyob\",\"pickerHeader\":\"h8N7eyob\",\"picker-header-info\":\"Rth2Qu07\",\"pickerHeaderInfo\":\"Rth2Qu07\",\"selection-toggle\":\"B6eAugx8\",\"selectionToggle\":\"B6eAugx8\",\"foldersWrapper\":\"mwcvgD2S\",\"folders\":\"LKavx8ww\",\"folder\":\"qglLx5Dn\",\"button-text\":\"bgaRuEMs\",\"buttonText\":\"bgaRuEMs\",\"button-badge\":\"rTe14Z22\",\"buttonBadge\":\"rTe14Z22\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = hasChatsToAdd\n    ? lang('FolderLinkSubtitleChats', [newChatsCount, folder.title], undefined, newChatsCount)\n    : lang('FolderLinkSubtitleAlready', folder.title);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <Picker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <Picker\n          itemIds={invite.alreadyPeerIds}\n          lockedSelectedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(suggestedPeerIds);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <Picker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useOldLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(lang('FolderLinkSubtitle', invite.title), ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n          </div>\n        </div>\n        <Picker\n          itemIds={invite.peerIds}\n          lockedSelectedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkButtonAdd', invite.title)}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  modal,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(modal);\n  const renderingInfo = usePrevious(modal) || modal;\n  const renderingFolder = usePrevious(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) return renderingFolder.title;\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) return renderingInfo.invite.title;\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: string) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab className={styles.folder} isActive badgeCount={folderTabNumber} isBadgeActive title={folderTitle} />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { invite, removal } = modal || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"TtE8LQNJ\",\"transition\":\"nXQS4E59\",\"main\":\"JuWZY1ds\",\"section\":\"lYkNd_gb\",\"secondaryInfo\":\"fBublGG8\",\"logo\":\"sjhpNB8l\",\"logoBackground\":\"jjESKN3H\",\"headerHext\":\"xbpAOr37\",\"description\":\"teXilLxe\",\"header\":\"fnhXotO2\",\"starHeaderText\":\"iUwego5s\",\"hiddenHeader\":\"DZk6d6hF\",\"closeButton\":\"piD1PXHW\",\"balance\":\"LitvQduT\",\"smallerText\":\"rUnPcfmE\",\"balanceBottom\":\"F5BTkZ9G\",\"modalBalance\":\"t8tMrx3y\",\"options\":\"qPBycZTv\",\"option\":\"UJPk4YLZ\",\"optionTop\":\"uYCOjzEO\",\"stackedStars\":\"uulRH8gY\",\"stackedStar\":\"pXdx3arJ\",\"optionBottom\":\"ByyaPmxJ\",\"moreOptions\":\"z4OfLFqg\",\"iconDown\":\"Hj7jRHF8\",\"paymentContent\":\"OReEUNTV\",\"paymentImages\":\"oKorQYTC\",\"paymentPhoto\":\"HGTrEtUF\",\"paymentImageBackground\":\"os8jb_qv\",\"paymentAmount\":\"sd2jk3Hn\",\"paymentButton\":\"VzR5cibf\",\"paymentButtonStar\":\"Uhg7yWxK\",\"transactions\":\"Qvc0fTTH\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\n\nimport styles from './StarsBalanceModal.module.scss';\n\ntype OwnProps = {\n  balance: number;\n  className?: string;\n};\n\nconst BalanceBlock = ({ balance, className }: OwnProps) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.balance, className)}>\n      <span className={styles.smallerText}>{lang('StarsBalance')}</span>\n      <div className={styles.balanceBottom}>\n        <StarIcon type=\"gold\" size=\"middle\" />\n        {formatInteger(balance)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(BalanceBlock);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uRzvCSL9\",\"preview\":\"a3DW6BD4\",\"count\":\"D85xnc2A\",\"thumb\":\"YQkhSHTF\",\"noOutline\":\"DEHX4KE0\",\"itemCount1\":\"v2LXw_Ji\",\"itemCount2\":\"wMnTbflA\",\"itemCount3\":\"mfaJvWR5\",\"blurry\":\"SWzA5Thi\",\"full\":\"tWmMeHMH\",\"fadeIn\":\"rQLLTTKj\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, BoughtPaidMedia } from '../../../api/types';\n\nimport { getMediaHash, getMediaThumbUri } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './PaidMediaThumb.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  media: ApiMediaExtendedPreview[] | BoughtPaidMedia[];\n  isTransactionPreview?: boolean;\n  onClick?: NoneToVoidFunction;\n};\n\nconst THUMB_LIMIT = 3;\nconst PREVIEW_THUMB_LIMIT = 2;\n\nconst PaidMediaThumb = ({\n  media, className, isTransactionPreview, onClick,\n}: OwnProps) => {\n  const count = Math.min(media.length, isTransactionPreview ? PREVIEW_THUMB_LIMIT : THUMB_LIMIT);\n  const isLocked = 'mediaType' in media[0];\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles[`itemCount${count}`],\n        isTransactionPreview && styles.preview,\n        className,\n      )}\n      dir=\"rtl\"\n      onClick={onClick}\n    >\n      {media.slice(0, count).reverse().map((item, i, arr) => {\n        const realIndex = arr.length - i - 1;\n        return 'mediaType' in item ? (\n          <MediaSpoiler\n            className={styles.thumb}\n            isVisible\n            width={item.width}\n            height={item.height}\n            thumbDataUri={item.thumbnail?.dataUri}\n          />\n        ) : (\n          <SingleMediaThumb\n            className={buildClassName(isTransactionPreview && realIndex > 0 && styles.noOutline)}\n            boughtMedia={item}\n            index={realIndex}\n          />\n        );\n      })}\n      {isLocked && (\n        <div className={styles.count}>\n          <Icon name=\"stars-lock\" />\n          {media.length > 1 ? media.length : ''}\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SingleMediaThumb({\n  boughtMedia,\n  index,\n  className,\n}: {\n  boughtMedia: BoughtPaidMedia;\n  index?: number;\n  className?: string;\n}) {\n  const media = (boughtMedia.video || boughtMedia.photo)!;\n  const mediaHash = getMediaHash(media, 'pictogram');\n  const thumb = getMediaThumbUri(media);\n\n  const mediaBlob = useMedia(mediaHash);\n\n  return (\n    <div className={buildClassName(styles.thumb, index !== undefined && `stars-transaction-media-${index}`, className)}>\n      {thumb && <img className={styles.blurry} src={thumb} alt=\"\" />}\n      {mediaBlob && <img className={styles.full} src={mediaBlob} alt=\"\" />}\n    </div>\n  );\n}\n\nexport default memo(PaidMediaThumb);\n","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarsTransaction,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { getSenderTitle } from '../../../global/helpers';\nimport { buildStarsTransactionCustomPeer, formatStarsTransactionAmount } from '../../../global/helpers/payments';\nimport { selectPeer } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { CUSTOM_PEER_PREMIUM } from '../../../util/objects/customPeer';\n\nimport useSelector from '../../../hooks/data/useSelector';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StarIcon from '../../common/icons/StarIcon';\nimport PaidMediaThumb from './PaidMediaThumb';\n\nimport styles from './StarsTransactionItem.module.scss';\n\ntype OwnProps = {\n  transaction: ApiStarsTransaction;\n};\n\nfunction selectOptionalPeer(peerId?: string) {\n  return (global: GlobalState) => (\n    peerId ? selectPeer(global, peerId) : undefined\n  );\n}\n\nconst StarsTransactionItem = ({ transaction }: OwnProps) => {\n  const { getStarsReceipt } = getActions();\n  const {\n    date,\n    stars,\n    photo,\n    peer: transactionPeer,\n    extendedMedia,\n  } = transaction;\n  const lang = useOldLang();\n\n  const peerId = transactionPeer.type === 'peer' ? transactionPeer.id : undefined;\n  const peer = useSelector(selectOptionalPeer(peerId));\n\n  const data = useMemo(() => {\n    let title = transaction.title || (transaction.extendedMedia ? lang('StarMediaPurchase') : undefined);\n    let description;\n    let status: string | undefined;\n    let avatarPeer: ApiPeer | CustomPeer | undefined;\n\n    if (transaction.peer.type === 'peer') {\n      description = peer && getSenderTitle(lang, peer);\n      avatarPeer = peer || CUSTOM_PEER_PREMIUM;\n    } else {\n      const customPeer = buildStarsTransactionCustomPeer(transaction.peer);\n      title = lang(customPeer.titleKey);\n      description = lang(customPeer.subtitleKey!);\n      avatarPeer = customPeer;\n    }\n\n    if (transaction.photo) {\n      avatarPeer = undefined;\n    }\n\n    if (transaction.isRefund) {\n      status = lang('StarsRefunded');\n    }\n\n    if (transaction.hasFailed) {\n      status = lang('StarsFailed');\n    }\n\n    if (transaction.isPending) {\n      status = lang('StarsPending');\n    }\n\n    return {\n      title,\n      description,\n      avatarPeer,\n      status,\n    };\n  }, [lang, peer, transaction]);\n\n  const handleClick = useLastCallback(() => {\n    getStarsReceipt({ transaction });\n  });\n\n  return (\n    <div className={styles.root} onClick={handleClick}>\n      {extendedMedia ? <PaidMediaThumb media={extendedMedia} isTransactionPreview />\n        : <Avatar size=\"medium\" webPhoto={photo} peer={data.avatarPeer} />}\n      <div className={styles.info}>\n        <h3 className={styles.title}>{data.title}</h3>\n        <p className={styles.description}>{data.description}</p>\n        <p className={styles.date}>\n          {formatDateTimeToString(date * 1000, lang.code, true)}\n          {data.status && ` — (${data.status})`}\n        </p>\n      </div>\n      <div className={styles.stars}>\n        <span className={buildClassName(styles.amount, stars < 0 ? styles.negative : styles.positive)}>\n          {formatStarsTransactionAmount(stars)}\n        </span>\n        <StarIcon className={styles.star} type=\"gold\" size=\"big\" />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StarsTransactionItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ic1OO5om\",\"info\":\"mNSPocCT\",\"stars\":\"mNOFB1jr\",\"amount\":\"vocPCemA\",\"star\":\"Ev50qDRR\",\"title\":\"LiLNLeVH\",\"description\":\"Iu1Cg3HS\",\"date\":\"mPKxgyId\",\"positive\":\"dKHKLKDW\",\"negative\":\"Qsu5djeZ\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStarTopupOption, ApiUser } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Modal from '../../ui/Modal';\nimport TabList, { type TabWithProperties } from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport BalanceBlock from './BalanceBlock';\nimport TransactionItem from './StarsTransactionItem';\n\nimport styles from './StarsBalanceModal.module.scss';\n\nimport StarLogo from '../../../assets/icons/StarLogo.svg';\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nconst TRANSACTION_TYPES = ['all', 'inbound', 'outbound'] as const;\n\nconst TRANSACTION_TABS: TabWithProperties[] = [\n  { title: 'StarsTransactionsAll' },\n  { title: 'StarsTransactionsIncoming' },\n  { title: 'StarsTransactionsOutgoing' },\n];\n\nexport type OwnProps = {\n  modal: TabState['starsBalanceModal'];\n};\n\ntype StateProps = {\n  starsBalanceState?: GlobalState['stars'];\n  originPaymentBot?: ApiUser;\n};\n\nconst StarsBalanceModal = ({\n  modal, starsBalanceState, originPaymentBot,\n}: OwnProps & StateProps) => {\n  const { closeStarsBalanceModal, loadStarsTransactions, openInvoice } = getActions();\n\n  const { balance, history, topupOptions } = starsBalanceState || {};\n\n  const lang = useOldLang();\n\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n  const [selectedTabIndex, setSelectedTabIndex] = useState(0);\n\n  const isOpen = Boolean(modal && starsBalanceState);\n\n  const productStarsPrice = modal?.originPayment?.invoice?.amount;\n  const starsNeeded = productStarsPrice ? productStarsPrice - (balance || 0) : undefined;\n  const originBotName = originPaymentBot && getUserFullName(originPaymentBot);\n  const shouldShowTransactions = Boolean(history?.all?.transactions.length && !modal?.originPayment);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      unmarkOptionsExtended();\n      setSelectedTabIndex(0);\n    }\n  }, [isOpen]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!topupOptions) {\n      return [undefined, false];\n    }\n\n    const maxOption = topupOptions.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption; starsCount: number }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    topupOptions.forEach((option) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: currentStackedStarsCount,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, topupOptions, starsNeeded]);\n\n  const tosText = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const text = lang('lng_credits_summary_options_about');\n    const parts = text.split('{link}');\n    return [\n      parts[0],\n      <SafeLink url={lang('StarsTOSLink')} text={lang('lng_credits_summary_options_about_link')} />,\n      parts[1],\n    ];\n  }, [isOpen, lang]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClick = useLastCallback((option: ApiStarTopupOption) => {\n    openInvoice({\n      type: 'stars',\n      option,\n    });\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadStarsTransactions({\n      type: TRANSACTION_TYPES[selectedTabIndex],\n    });\n  });\n\n  return (\n    <Modal className={styles.root} isOpen={isOpen} onClose={closeStarsBalanceModal}>\n      <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closeStarsBalanceModal()}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <BalanceBlock balance={balance || 0} className={styles.modalBalance} />\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.starHeaderText}>\n            {lang('TelegramStars')}\n          </h2>\n        </div>\n        <div className={styles.section}>\n          <img className={styles.logo} src={StarLogo} alt=\"\" draggable={false} />\n          <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n          <h2 className={styles.headerText}>\n            {starsNeeded ? lang('StarsNeededTitle', starsNeeded) : lang('TelegramStars')}\n          </h2>\n          <div className={styles.description}>\n            {renderText(\n              starsNeeded ? lang('StarsNeededText', originBotName) : lang('TelegramStarsInfo'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n          <div className={styles.options}>\n            {renderingOptions?.map(({ option, starsCount }) => (\n              <StarTopupOption option={option} starsCount={starsCount} onClick={handleClick} />\n            ))}\n            {!areOptionsExtended && canExtend && (\n              <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n                {lang('Stars.Purchase.ShowMore')}\n                <Icon className={styles.iconDown} name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n        <div className={styles.secondaryInfo}>\n          {tosText}\n        </div>\n        {shouldShowTransactions && (\n          <>\n            <TabList\n              big\n              activeTab={selectedTabIndex}\n              tabs={TRANSACTION_TABS}\n              onSwitchTab={setSelectedTabIndex}\n            />\n            <div className={styles.section}>\n              <Transition\n                name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n                activeKey={selectedTabIndex}\n                renderCount={TRANSACTION_TABS.length}\n                shouldRestoreHeight\n                className={styles.transition}\n              >\n                <InfiniteScroll\n                  onLoadMore={handleLoadMore}\n                  items={history?.[TRANSACTION_TYPES[selectedTabIndex]]?.transactions}\n                  className={styles.transactions}\n                  noFastList\n                >\n                  {history?.[TRANSACTION_TYPES[selectedTabIndex]]?.transactions.map((transaction) => (\n                    <TransactionItem\n                      key={`${transaction.id}-${transaction.isRefund}`}\n                      transaction={transaction}\n                    />\n                  ))}\n                </InfiniteScroll>\n              </Transition>\n            </div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nfunction StarTopupOption({\n  option, starsCount, onClick,\n}: {\n  option: ApiStarTopupOption; starsCount: number; onClick?: (option: ApiStarTopupOption) => void;\n}) {\n  const lang = useOldLang();\n\n  return (\n    <div className={styles.option} key={option.stars} onClick={() => onClick?.(option)}>\n      <div className={styles.optionTop}>\n        +{option.stars}\n        {/* Switch directionality for correct order. Can't use flex because https://issues.chromium.org/issues/40249030 */}\n        <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n          {Array.from({ length: starsCount }).map(() => (\n            <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n          ))}\n        </div>\n      </div>\n      <div className={styles.optionBottom}>\n        {formatCurrency(option.amount, option.currency, lang.code)}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const botId = modal?.originPayment?.botId;\n    const bot = botId ? selectUser(global, botId) : undefined;\n\n    return {\n      starsBalanceState: global.stars,\n      originPaymentBot: bot,\n    };\n  },\n)(StarsBalanceModal));\n","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMediaExtendedPreview, ApiMessage, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport {\n  selectChat, selectChatMessage, selectTabState, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport BalanceBlock from './BalanceBlock';\nimport PaidMediaThumb from './PaidMediaThumb';\n\nimport styles from './StarsBalanceModal.module.scss';\n\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['isStarPaymentModalOpen'];\n};\n\ntype StateProps = {\n  payment?: TabState['payment'];\n  starsBalanceState?: GlobalState['stars'];\n  bot?: ApiUser;\n  paidMediaMessage?: ApiMessage;\n  paidMediaChat?: ApiChat;\n};\n\nconst StarPaymentModal = ({\n  modal,\n  bot,\n  starsBalanceState,\n  payment,\n  paidMediaMessage,\n  paidMediaChat,\n}: OwnProps & StateProps) => {\n  const { closePaymentModal, openStarsBalanceModal, sendStarPaymentForm } = getActions();\n  const [isLoading, markLoading, unmarkLoading] = useFlag();\n  const isOpen = Boolean(modal && starsBalanceState);\n\n  const photo = payment?.invoice?.photo;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkLoading();\n    }\n  }, [isOpen]);\n\n  const descriptionText = useMemo(() => {\n    if (!payment?.invoice) {\n      return '';\n    }\n\n    const botName = getUserFullName(bot);\n    const starsText = lang('Stars.Intro.PurchasedText.Stars', payment.invoice.amount);\n\n    if (paidMediaMessage) {\n      const extendedMedia = paidMediaMessage.content.paidMedia!.extendedMedia as ApiMediaExtendedPreview[];\n      const areAllPhotos = extendedMedia.every((media) => !media.duration);\n      const areAllVideos = extendedMedia.every((media) => !!media.duration);\n\n      const mediaText = areAllPhotos ? lang('Stars.Transfer.Photos', extendedMedia.length)\n        : areAllVideos ? lang('Stars.Transfer.Videos', extendedMedia.length)\n          : lang('Media', extendedMedia.length);\n\n      const channelTitle = getChatTitle(lang, paidMediaChat!);\n      return lang('Stars.Transfer.UnlockInfo', [mediaText, channelTitle, starsText]);\n    }\n\n    return lang('Stars.Transfer.Info', [payment.invoice.title, botName, starsText]);\n  }, [payment?.invoice, bot, lang, paidMediaMessage, paidMediaChat]);\n\n  const handlePayment = useLastCallback(() => {\n    const price = payment?.invoice?.amount;\n    const balance = starsBalanceState?.balance;\n    if (price === undefined || balance === undefined) {\n      return;\n    }\n\n    if (price > balance) {\n      openStarsBalanceModal({\n        originPayment: payment,\n      });\n      return;\n    }\n\n    sendStarPaymentForm();\n    markLoading();\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.paymentContent}\n      isOpen={isOpen}\n      hasAbsoluteCloseButton\n      isSlim\n      onClose={closePaymentModal}\n    >\n      <BalanceBlock balance={starsBalanceState?.balance || 0} className={styles.modalBalance} />\n      <div className={styles.paymentImages} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n        {paidMediaMessage ? (\n          <PaidMediaThumb media={paidMediaMessage.content.paidMedia!.extendedMedia} />\n        ) : (\n          <>\n            <Avatar peer={bot} size=\"giant\" />\n            {photo && <Avatar className={styles.paymentPhoto} webPhoto={photo} size=\"giant\" />}\n          </>\n        )}\n        <img className={styles.paymentImageBackground} src={StarsBackground} alt=\"\" draggable={false} />\n      </div>\n      <h2 className={styles.headerText}>\n        {lang('StarsConfirmPurchaseTitle')}\n      </h2>\n      <div className={buildClassName(styles.description, styles.smallerText)}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <Button className={styles.paymentButton} size=\"smaller\" onClick={handlePayment} isLoading={isLoading}>\n        {lang('Stars.Transfer.Pay')}\n        <div className={styles.paymentAmount}>\n          {payment?.invoice?.amount}\n          <StarIcon className={styles.paymentButtonStar} size=\"small\" />\n        </div>\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const payment = selectTabState(global).payment;\n    const bot = payment?.botId ? selectUser(global, payment.botId) : undefined;\n\n    const messageInputInvoice = payment.inputInvoice?.type === 'message' ? payment.inputInvoice : undefined;\n    const message = messageInputInvoice\n      ? selectChatMessage(global, messageInputInvoice.chatId, messageInputInvoice.messageId) : undefined;\n    const chat = messageInputInvoice ? selectChat(global, messageInputInvoice.chatId) : undefined;\n    const isPaidMedia = message?.content.paidMedia;\n\n    return {\n      bot,\n      starsBalanceState: global.stars,\n      payment,\n      paidMediaMessage: isPaidMedia ? message : undefined,\n      paidMediaChat: isPaidMedia ? chat : undefined,\n    };\n  },\n)(StarPaymentModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"FqyZSYhX\",\"description\":\"DkalJSBt\",\"secondary\":\"xNUKKd8T\",\"separator\":\"kiRrTaj3\",\"topIcon\":\"PKnc2DV2\",\"content\":\"qxOr0JyQ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useSelectorSignal from '../../hooks/data/useSelectorSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Separator from '../ui/Separator';\nimport Icon from './icons/Icon';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutAdsModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isRevenueSharing?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutAdsModal: FC<OwnProps> = ({\n  isOpen,\n  isRevenueSharing,\n  onClose,\n}) => {\n  const lang = useOldLang();\n\n  const minLevelSignal = useSelectorSignal((global) => global.appConfig?.channelRestrictAdsLevelMin);\n  const minLevelToRestrictAds = useDerivedState(minLevelSignal);\n\n  const regularAdContent = useMemo(() => {\n    return (\n      <>\n        <h3>{lang('SponsoredMessageInfoScreen.Title')}</h3>\n        <p>{renderText(lang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n        <p>{renderText(lang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n        <p>{renderText(lang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n        <p>\n          <SafeLink\n            url={lang('SponsoredMessageAlertLearnMoreUrl')}\n            text={lang('SponsoredMessageAlertLearnMoreUrl')}\n          />\n        </p>\n        <p>{renderText(lang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      </>\n    );\n  }, [lang]);\n\n  const revenueSharingAdContent = useMemo(() => {\n    return (\n      <>\n        <div className={styles.topIcon}><Icon name=\"channel\" /></div>\n        <h3 className={styles.title}>{lang('AboutRevenueSharingAds')}</h3>\n        <p className={buildClassName(styles.description, styles.secondary)}>\n          {lang('RevenueSharingAdsAlertSubtitle')}\n        </p>\n        <ListItem\n          isStatic\n          multiline\n          icon=\"lock\"\n        >\n          <span className=\"title\">{lang('RevenueSharingAdsInfo1Title')}</span>\n          <span className=\"subtitle\">\n            {renderText(lang('RevenueSharingAdsInfo1Subtitle'), ['simple_markdown'])}\n          </span>\n        </ListItem>\n        <ListItem\n          isStatic\n          multiline\n          icon=\"revenue-split\"\n        >\n          <span className=\"title\">{lang('RevenueSharingAdsInfo2Title')}</span>\n          <span className=\"subtitle\">\n            {renderText(lang('RevenueSharingAdsInfo2Subtitle'), ['simple_markdown'])}\n          </span>\n        </ListItem>\n        <ListItem\n          isStatic\n          multiline\n          icon=\"nochannel\"\n        >\n          <span className=\"title\">{lang('RevenueSharingAdsInfo3Title')}</span>\n          <span className=\"subtitle\">\n            {renderText(lang('RevenueSharingAdsInfo3Subtitle', minLevelToRestrictAds), ['simple_markdown'])}\n          </span>\n        </ListItem>\n        <Separator className={styles.separator} />\n        <h3 className={styles.title}>{renderText(lang('RevenueSharingAdsInfo4Title'), ['simple_markdown'])}</h3>\n        <p className={styles.description}>\n          {renderText(lang('RevenueSharingAdsInfo4Subtitle2', ''), ['simple_markdown'])}\n          <SafeLink\n            url={lang('PromoteUrl')}\n            text={lang('LearnMoreArrow')}\n          />\n        </p>\n      </>\n    );\n  }, [lang, minLevelToRestrictAds]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {isRevenueSharing ? revenueSharingAdContent : regularAdContent}\n      <Button\n        size=\"smaller\"\n        onClick={onClose}\n      >\n        {lang('RevenueSharingAdsUnderstood')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(AboutAdsModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"qJDgUtjV\",\"modalTitle\":\"ZAdG13Ah\",\"optionText\":\"oWujoaSC\",\"option\":\"aFbjDzNo\",\"optionButton\":\"VbE0HzDs\",\"sectionTitle\":\"jrA2dOiw\",\"description\":\"k71Zrc_P\",\"title\":\"mMmY6YR4\",\"titleMultiline\":\"lVVyV0py\",\"subtitle\":\"gSkAFc4u\",\"transition\":\"HjsGIG6e\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportAdModal.module.scss';\n\nconst ADDED_PADDING = 40;\n\nexport type OwnProps = {\n  modal: TabState['reportAdModal'];\n};\n\nconst ReportAdModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportSponsoredMessage, closeReportAdModal, openPreviousReportAdModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const { chatId, randomId } = modal!;\n    reportSponsoredMessage({ chatId, randomId, option });\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    if (!renderingDepth) {\n      closeReportAdModal();\n      return;\n    }\n\n    openPreviousReportAdModal();\n  });\n\n  const bottomText = useMemo(() => {\n    if (!modal) return undefined;\n    const template = lang('lng_report_sponsored_reported_learn');\n    const parts = template.split('{link}');\n    return [\n      parts[0],\n      <SafeLink text={lang('lng_report_sponsored_reported_link')} url={lang('ReportAd.Help_URL')} />,\n      parts[1],\n    ];\n  }, [lang, modal]);\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(renderingDepth ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <Icon name={renderingDepth ? 'arrow-left' : 'close'} />\n        </Button>\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={styles.title}>{lang('ReportAd')}</h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.subtitle]);\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      header={header}\n      onClose={closeReportAdModal}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3>\n          {renderingSection?.options.map((option) => (\n            <ListItem\n              narrow\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n        </div>\n        <p className={styles.description}>{bottomText}</p>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAdModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false,\n    });\n    onClose();\n  }, [pinMessage, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [messageId, onClose, pinMessage]);\n\n  const lang = useOldLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(isActive ? { 'Mod+C': handleCopy } : undefined);\n};\n\nexport default useCopySelectedMessages;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectCanDeleteSelectedMessages, selectCurrentChat, selectTabState, selectUser,\n} from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  selectedMessageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n};\n\nconst DeleteSelectedMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isSchedule,\n  selectedMessageIds,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onClose,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const prevIsOpen = usePrevious(isOpen);\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onClose();\n    deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: true });\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds: selectedMessageIds! });\n    } else {\n      deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: false });\n    }\n\n    onClose();\n  });\n\n  const lang = useOldLang();\n\n  // Returning `undefined` from FC instead of `<Modal>` doesn't trigger useHistoryBack\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      exitMessageSelectMode();\n    }\n  }, [exitMessageSelectMode, isOpen, prevIsOpen]);\n\n  if (!selectedMessageIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n      title={lang('Conversation.DeleteManyMessages')}\n    >\n      <p>{lang('AreYouSureDeleteFewMessages')}</p>\n      {willDeleteForCurrentUserOnly && (\n        <p>This will delete them just for you, not for other participants in the chat.</p>\n      )}\n      {willDeleteForAll && (\n        <p>This will delete them for everyone in this chat.</p>\n      )}\n      <div className={canDeleteForAll ? 'dialog-buttons-column' : 'dialog-buttons'}>\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n            {contactName\n              ? renderText(lang('ChatList.DeleteForEveryone', contactName))\n              : lang('Conversation.DeleteMessagesForEveryone')}\n          </Button>\n        )}\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n          {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isSchedule }): StateProps => {\n    const { messageIds: selectedMessageIds } = selectTabState(global).selectedMessages || {};\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global);\n    const chat = selectCurrentChat(global);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    const willDeleteForCurrentUserOnly = chat && isChatBasicGroup(chat) && !canDeleteForAll;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      selectedMessageIds,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n    };\n  },\n)(DeleteSelectedMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport DeleteSelectedMessageModal from './DeleteSelectedMessageModal';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  useCopySelectedMessages(isActive);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  useEffect(() => {\n    return isActive && !isDeleteModalOpen && !isReportModalOpen && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? openDeleteModal : undefined,\n        onDelete: canDeleteMessages ? openDeleteModal : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, isDeleteModalOpen, isReportModalOpen, openDeleteModal, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const prevSelectedMessagesCount = usePrevious(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n        aria-label={label}\n      >\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"MessageSelectToolbar-inner\">\n        <Button\n          color=\"translucent\"\n          round\n          onClick={handleExitMessageSelectMode}\n          ariaLabel=\"Exit select mode\"\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n          {formattedMessagesCount}\n        </span>\n\n        {Boolean(selectedMessagesCount) && (\n          <div className=\"MessageSelectToolbar-actions\">\n            {messageListType !== 'scheduled' && canForwardMessages && (\n              renderButton(\n                'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n              )\n            )}\n            {canReportMessages && (\n              renderButton('flag', lang('Conversation.ReportMessages'), openReportModal)\n            )}\n            {canDownloadMessages && !hasProtectedMessage && (\n              renderButton('download', lang('lng_media_download'), handleDownload)\n            )}\n            {!hasProtectedMessage && (\n              renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n            )}\n            {canDeleteMessages && (\n              renderButton('delete', lang('EditAdminGroupDeleteMessages'), openDeleteModal, true)\n            )}\n          </div>\n        )}\n      </div>\n      <DeleteSelectedMessageModal\n        isOpen={isDeleteModalOpen}\n        isSchedule={isSchedule}\n        onClose={closeDeleteModal}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={selectedMessageIds}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isForwardModalOpen = tabState.forwardMessages.isModalShown;\n    const isAnyModalOpen = Boolean(isForwardModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall);\n\n    return {\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"slqA9gR2\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tauadiDm\",\"icon\":\"i4wZg_0J\",\"header\":\"MQxuEIRA\",\"desc\":\"AEAN1Au4\",\"separator\":\"sXXb5yOS\",\"button\":\"F7owtTHj\",\"closeButton\":\"i6iFv9YE\"};","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectTabState, selectUser } from '../../global/selectors';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal, { ANIMATION_DURATION } from '../ui/Modal';\nimport Separator from '../ui/Separator';\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport Icon from './icons/Icon';\n\nimport styles from './PrivacySettingsNoticeModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isReadDate?: boolean;\n};\n\nconst CLOSE_ANIMATION_DURATION = ANIMATION_DURATION + ANIMATION_END_DELAY;\n\nconst PrivacySettingsNoticeModal = ({ isOpen, isReadDate, user }: OwnProps & StateProps) => {\n  const lang = useOldLang();\n  const {\n    updateGlobalPrivacySettings,\n    openPremiumModal,\n    closePrivacySettingsNoticeModal,\n    showNotification,\n    setPrivacyVisibility,\n    loadUser,\n  } = getActions();\n  const userName = getUserFirstOrLastName(user);\n\n  const handleShowReadTime = useLastCallback(() => {\n    updateGlobalPrivacySettings({ shouldHideReadMarks: false });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumReadSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleShowLastSeen = useLastCallback(() => {\n    setPrivacyVisibility({\n      privacyKey: 'lastSeen',\n      visibility: 'everybody',\n      onSuccess: () => loadUser({ userId: user!.id }),\n    });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumLastSeenSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleOpenPremium = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      openPremiumModal({ initialSection: 'last_seen' });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n  });\n\n  return (\n    <Modal isSlim isOpen={isOpen} onClose={handleClose}>\n      <div className={styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className={styles.closeButton}\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={handleClose}\n          ariaLabel=\"Close\"\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <AnimatedIconWithPreview\n          tgsUrl={isReadDate ? LOCAL_TGS_URLS.ReadTime : LOCAL_TGS_URLS.LastSeen}\n          size={84}\n          className={styles.icon}\n          nonInteractive\n          noLoop\n        />\n        <h2 className={styles.header}>\n          {lang(isReadDate ? 'PremiumReadHeader1' : 'PremiumLastSeenHeader1')}\n        </h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(\n              isReadDate ? 'PremiumReadText1' : 'PremiumLastSeenText1Locked',\n              userName,\n            ),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={isReadDate ? handleShowReadTime : handleShowLastSeen}\n          className={styles.button}\n        >\n          {lang(isReadDate ? 'PremiumReadButton1' : 'PremiumLastSeenButton1')}\n        </Button>\n        <Separator className={styles.separator}>{lang('PremiumOr')}</Separator>\n        <h2 className={styles.header}>{lang('PremiumReadHeader2')}</h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(isReadDate ? 'PremiumReadText2' : 'PremiumLastSeenText2', userName),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          withPremiumGradient\n          size=\"smaller\"\n          onClick={handleOpenPremium}\n          className={styles.button}\n        >\n          {lang('PremiumLastSeenButton2')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global): StateProps => {\n    const { chatId, isReadDate } = selectTabState(global).privacySettingsNoticeModal || {};\n    const user = chatId ? selectUser(global, chatId) : undefined;\n\n    return { user, isReadDate };\n  })(PrivacySettingsNoticeModal),\n);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const lang = useOldLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={lang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <i className=\"icon icon-heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={lang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <i className=\"icon icon-heart-outline status-icon\" />\n                          {formatDateAtTime(lang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(lang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {lang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../global/types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useFlag from '../../hooks/useFlag';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      dispatchHeavyAnimationStop();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useOldLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aMjNU9gm\",\"list-item\":\"T3An6Hoz\",\"listItem\":\"T3An6Hoz\",\"title\":\"dQ9wwFu1\",\"subtitle\":\"m_J41YYl\",\"languages\":\"r3YNWDQr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"WEJIbFQj\",\"closeButton\":\"_vwPuDEM\",\"icon\":\"BUiGM8qZ\",\"title\":\"Q3NhXpNI\",\"description\":\"frZbGQ0G\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiCountryCode } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport PickerSelectedItem from '../../common/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './CollectibleInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['collectibleInfoModal'];\n};\n\ntype StateProps = {\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst TOP_ICON_SIZE = 60;\n\nconst CollectibleInfoModal: FC<OwnProps & StateProps> = ({\n  modal,\n  phoneCodeList,\n}) => {\n  const {\n    closeCollectibleInfoModal,\n    openChat,\n    openUrl,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const isUsername = modal?.type === 'username';\n\n  const handleClose = useLastCallback(() => {\n    closeCollectibleInfoModal();\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: modal!.peerId });\n    handleClose();\n  });\n\n  const handleOpenUrl = useLastCallback(() => {\n    openUrl({\n      url: modal!.url,\n      shouldSkipModal: true,\n    });\n    handleClose();\n  });\n\n  const handleCopy = useLastCallback(() => {\n    const text = isUsername ? formatUsername(modal!.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal!.collectible);\n    copyTextToClipboard(text);\n    showNotification({\n      message: lang(isUsername ? 'UsernameCopied' : 'PhoneCopied'),\n    });\n    handleClose();\n  });\n\n  const title = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameTitle' : 'FragmentPhoneTitle';\n    const formattedCollectible = isUsername\n      ? formatUsername(modal.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal.collectible);\n    return lang(key, formattedCollectible);\n  }, [modal, isUsername, phoneCodeList, lang]);\n\n  const description = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameMessage' : 'FragmentPhoneMessage';\n    const date = formatDateAtTime(lang, modal.purchaseDate * 1000);\n    const currency = formatCurrencyAsString(modal.amount, modal.currency, lang.code);\n    const cryptoCurrency = formatCurrencyAsString(modal.cryptoAmount, modal.cryptoCurrency, lang.code);\n    const paid = `${cryptoCurrency} (${currency})`;\n    return lang(key, [date, paid]);\n  }, [modal, isUsername, lang]);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      isSlim\n      contentClassName={styles.content}\n      onClose={closeCollectibleInfoModal}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.icon}>\n        <AnimatedIconWithPreview\n          tgsUrl={isUsername ? LOCAL_TGS_URLS.Mention : LOCAL_TGS_URLS.Fragment}\n          size={TOP_ICON_SIZE}\n        />\n      </div>\n      <h3 className={styles.title}>\n        {title && renderText(title, ['simple_markdown'])}\n      </h3>\n      <PickerSelectedItem\n        fluid\n        className={styles.chip}\n        peerId={modal?.peerId}\n        forceShowSelf\n        onClick={handleOpenChat}\n      />\n      <p className={styles.description}>\n        {description && renderText(description, ['simple_markdown'])}\n      </p>\n      <div className=\"dialog-buttons dialog-buttons-centered\">\n        <Button className=\"confirm-dialog-button\" onClick={handleOpenUrl}>\n          {lang('FragmentUsernameOpen')}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleCopy}>\n          {lang(isUsername ? 'FragmentUsernameCopy' : 'FragmentPhoneCopy')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { countryList } = global;\n\n    return {\n      phoneCodeList: countryList.phoneCodes,\n    };\n  },\n)(CollectibleInfoModal));\n","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ISettings } from '../../../../types';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\n\nexport type StateProps = {\n  theme: ISettings['theme'];\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: string[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useOldLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <Audio\n            key={message.id}\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Search}\n            senderTitle={getSenderName(lang, message, chatsById, usersById)}\n            date={message.date}\n            className=\"scroll-item\"\n            onPlay={handlePlayAudio}\n            onDateClick={handleMessageFocus}\n            canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n            isDownloading={getIsDownloading(activeDownloads, message.content.audio!)}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useOldLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dates/dateFormat';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <i className=\"icon icon-calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectChat } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const topic = chat?.topics?.[topicId];\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: string[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openThread } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      if (!searchChatId) return;\n      openThread({ chatId: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = id.split('_');\n\n        return globalMessagesByChatId?.[chatId]?.byId[Number(messageId)];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { getPrivateChatUserId, isUserId, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyExceptions,\n  selectNotifySettings, selectUser,\n} from '../../../global/selectors';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  onClick,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n}) => {\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useCallback(() => {\n    onClick(chatId);\n  }, [chatId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"large\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"large\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const privateChatUserId = chat && getPrivateChatUserId(chat);\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat\n      ? selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global))\n      : undefined;\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useOldLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel=\"Clear recent chats\"\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { ALL_FOLDER_ID, GLOBAL_SUGGESTED_CHANNELS_ID } from '../../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  isChatChannel,\n} from '../../../global/helpers';\nimport { selectSimilarChannelIds, selectTabState } from '../../../global/selectors';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport PickerSelectedItem from '../../common/PickerSelectedItem';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport RecentContacts from './RecentContacts';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  isChannelList?: boolean;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  contactIds?: string[];\n  accountPeerIds?: string[];\n  globalPeerIds?: string[];\n  foundIds?: string[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  suggestedChannelIds?: string[];\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  isChannelList,\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  contactIds,\n  accountPeerIds,\n  globalPeerIds,\n  foundIds,\n  globalMessagesByChatId,\n  fetchingStatus,\n  suggestedChannelIds,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal, setGlobalSearchChatId, loadChannelRecommendations,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n\n  useEffectOnce(() => {\n    if (isChannelList) loadChannelRecommendations({});\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: isChannelList ? 'channels' : 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  const localResults = useMemo(() => {\n    if (!isChannelList && (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2))) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    const orderedChatIds = getOrderedIds(ALL_FOLDER_ID) ?? [];\n    const filteredChatIds = orderedChatIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n    const localChatIds = filterChatsByName(lang, filteredChatIds, chatsById, searchQuery, currentUserId);\n\n    if (isChannelList) return localChatIds;\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(contactIds || []),\n    ];\n\n    const localContactIds = filterUsersByName(\n      contactIdsWithMe, usersById, searchQuery, currentUserId, lang('SavedMessages'),\n    );\n\n    const localPeerIds = [\n      ...localContactIds,\n      ...localChatIds,\n    ];\n\n    return unique([\n      ...sortChatIds(localPeerIds, undefined, currentUserId ? [currentUserId] : undefined),\n      ...sortChatIds(accountPeerIds || []),\n    ]);\n  }, [searchQuery, lang, currentUserId, contactIds, accountPeerIds, isChannelList]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length || isChannelList, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalPeerIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const filteredIds = globalPeerIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n\n    return sortChatIds(filteredIds, true);\n  }, [globalPeerIds, isChannelList, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = id.split('_');\n        const chat = chatsById[chatId];\n        if (!chat) return undefined;\n        if (isChannelList && !isChatChannel(chat)) return undefined;\n\n        return globalMessagesByChatId?.[chatId]?.byId[Number(messageId)];\n      })\n      .filter(Boolean);\n  }, [searchQuery, searchDate, foundIds, isChannelList, globalMessagesByChatId]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const chatsById = getGlobal().chats.byId;\n\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !foundMessages.length;\n\n  if (!searchQuery && !searchDate && !isChannelList) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  return (\n    <InfiniteScroll\n      className=\"LeftSearch custom-scroll\"\n      items={foundMessages}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={lang('ChatList.Search.NoResults')}\n          description={lang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && !isChannelList && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PickerSelectedItem\n              peerId={id}\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {lang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang(isChannelList ? 'SearchMyChannels' : 'DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {lang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(suggestedChannelIds?.length) && !searchQuery && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {lang('SearchRecommendedChannels')}\n          </h3>\n          {suggestedChannelIds.map((id) => {\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(foundMessages.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>{lang('SearchMessages')}</h3>\n          {foundMessages.map(renderFoundMessage)}\n        </div>\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isChannelList }): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!contactIds) {\n      return {};\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: accountPeerIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.[isChannelList ? 'channels' : 'text']?.foundIds;\n    const { similarChannelIds } = selectSimilarChannelIds(global, GLOBAL_SUGGESTED_CHANNELS_ID) || {};\n\n    return {\n      currentUserId,\n      contactIds,\n      accountPeerIds,\n      globalPeerIds,\n      foundIds,\n      globalMessagesByChatId,\n      fetchingStatus,\n      suggestedChannelIds: similarChannelIds,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDocument } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n      const message = globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <Document\n            document={getMessageDocument(message)!}\n            message={message}\n            withDate\n            datetime={message.date}\n            smaller\n            sender={getSenderName(lang, message, chatsById, usersById)}\n            className=\"scroll-item\"\n            isDownloading={getIsDownloading(activeDownloads, message.content.document!)}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n            observeIntersection={observeIntersectionForMedia}\n            onDateClick={handleMessageFocus}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <WebLink\n            key={message.id}\n            message={message}\n            senderTitle={getSenderName(lang, message, chatsById, usersById)}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onMessageClick={handleMessageFocus}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      messageId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className={classNames}\n        items={foundMessages}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dates/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport AudioResults from './AudioResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\nconst TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'SearchAllChatsShort' },\n  { type: GlobalSearchContent.ChannelList, title: 'ChannelsTab' },\n  { type: GlobalSearchContent.Media, title: 'SharedMediaTab2' },\n  { type: GlobalSearchContent.Links, title: 'SharedLinksTab2' },\n  { type: GlobalSearchContent.Files, title: 'SharedFilesTab2' },\n  { type: GlobalSearchContent.Music, title: 'SharedMusicTab2' },\n  { type: GlobalSearchContent.Voice, title: 'SharedVoiceTab2' },\n];\n\nconst CHAT_TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'All Messages' },\n  ...TABS.slice(2), // Skip ChatList and ChannelList, replaced with All Messages\n];\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const tabs = chatId ? CHAT_TABS : TABS;\n\n  const handleSwitchTab = useLastCallback((index: number) => {\n    const tab = tabs[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  });\n\n  const handleSearchDateSelect = useLastCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={tabs} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={tabs.length}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n            case GlobalSearchContent.ChannelList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  isChannelList={currentContent === GlobalSearchContent.ChannelList}\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterChatsByName } from '../../../../global/helpers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { unique } from '../../../../util/iteratees';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Picker from '../../../common/Picker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Loading from '../../../ui/Loading';\n\ntype StateProps = {\n  maxChats: number;\n};\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps & StateProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n  maxChats,\n}) => {\n  const lang = useOldLang();\n\n  const { openLimitReachedModal } = getActions();\n\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = selectChatFilters(state, mode, true);\n  const chatTypes = mode === 'included' ? CUSTOM_PEER_INCLUDED_CHAT_TYPES : CUSTOM_PEER_EXCLUDED_CHAT_TYPES;\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...filterChatsByName(lang, chatIds, chatsById, chatFilter),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, lang, chatFilter]);\n\n  const handleFilterChange = useLastCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n    setIsTouched(true);\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    if (mode === 'included') {\n      if (ids.length >= maxChats) {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  const handleSelectedChatTypesChange = useLastCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"Picker settings-folders-chat-list\">\n      <Picker\n        categories={shouldHideChatTypes ? undefined : chatTypes}\n        itemIds={displayedIds}\n        selectedIds={selectedChatIds}\n        selectedCategories={selectedChatTypes}\n        filterValue={chatFilter}\n        filterPlaceholder={lang('Search')}\n        categoryPlaceholderKey=\"FilterChatTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        isRoundCheckbox\n        onSelectedIdsChange={handleSelectedIdsChange}\n        onSelectedCategoriesChange={handleSelectedChatTypesChange}\n        onFilterChange={handleFilterChange}\n      />\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatFilters));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatlistExportedInvite } from '../../../../api/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport {\n  EXCLUDED_CHAT_TYPES,\n  INCLUDED_CHAT_TYPES,\n  selectChatFilters,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport Icon from '../../../common/icons/Icon';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = selectChatFilters(state, 'included');\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = selectChatFilters(state, 'excluded');\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? INCLUDED_CHAT_TYPES.find(({ key: typeKey }) => typeKey === key)\n      : EXCLUDED_CHAT_TYPES.find(({ key: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.key}\n        className=\"settings-folders-list-item mb-1\"\n        icon={chatType.icon}\n        narrow\n        inactive\n      >\n        {lang(chatType.title)}\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ListItem\n            key=\"load-more\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n          >\n            <Icon name=\"down\" className=\"down\" />\n            {lang('FilterShowMoreChats', leftChatsCount, 'i')}\n          </ListItem>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIcon\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item pt-3\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary mb-0\"\n              icon=\"add\"\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary mb-0\"\n              icon=\"add\"\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary mb-0\"\n            icon=\"add\"\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item mb-0\"\n              icon=\"link\"\n              multiline\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 68;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePrevious(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: lang('FilterAllChats'),\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"with-icon mb-2\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <i className=\"icon icon-add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                    allowSelection\n                  >\n                    <span className=\"title\">\n                      {folder.title}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderText(folder.title, ['emoji'])}\n                    {isBlocked && <i className=\"icon icon-lock-badge settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <i className=\"icon icon-link mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              className=\"mb-2\"\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">{renderText(folder.title, ['emoji'])}</span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: folderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport LinkField from '../../../common/LinkField';\nimport Picker from '../../../common/Picker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  title?: string;\n  includedChatIds?: string[];\n  pinnedChatIds?: string[];\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  title,\n  includedChatIds,\n  pinnedChatIds,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (includedChatIds || []).concat(pinnedChatIds || []);\n  }, [includedChatIds, pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('FolderLinkScreen.TitleDescriptionSelected', [title, chatsCount]),\n            ['simple_markdown'])}\n        </p>\n      </div>\n\n      <LinkField\n        className=\"settings-item\"\n        link={!url ? lang('Loading') : url}\n        withShare\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-chatlist\">\n        <Picker\n          itemIds={itemIds}\n          lockedSelectedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          isRoundCheckbox\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      title: folder?.title,\n      includedChatIds: folder?.includedChatIds,\n      pinnedChatIds: folder?.pinnedChatIds,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useOldLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPremiumSection } from '../../../global/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  premiumSection?: ApiPremiumSection;\n};\n\nfunction PremiumStatusItem({ premiumSection }: OwnProps) {\n  const { openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal({ initialSection: premiumSection }));\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        leftElement={<StarIcon className=\"icon\" type=\"premium\" size=\"big\" />}\n        onClick={handleOpenPremiumModal}\n      >\n        {lang('PrivacyLastSeenPremium')}\n      </ListItem>\n      <p\n        className=\"settings-item-description-larger premium-info\"\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {lang('lng_messages_privacy_premium_about')}\n      </p>\n    </div>\n  );\n}\n\nexport default memo(PremiumStatusItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './PrivacyLockedOption.module.scss';\n\ntype OwnProps = {\n  label: string;\n};\n\nfunction PrivacyLockedOption({ label }: OwnProps) {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n\n  return (\n    <div\n      className={styles.contactsAndPremiumOptionTitle}\n      onClick={() => showNotification({ message: lang('OptionPremiumRequiredMessage') })}\n    >\n      <span>{label}</span>\n      <Icon name=\"lock-badge\" className={styles.lockIcon} />\n    </div>\n  );\n}\n\nexport default memo(PrivacyLockedOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts_and_premium_option-title\":\"TGUdGos3\",\"contactsAndPremiumOptionTitle\":\"TGUdGos3\",\"lock-icon\":\"jWxrRbkh\",\"lockIcon\":\"jWxrRbkh\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { selectIsCurrentUserPremium, selectNewNoncontactPeersRequirePremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canLimitNewMessagesWithoutPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nfunction PrivacyMessages({\n  isActive,\n  canLimitNewMessagesWithoutPremium,\n  shouldNewNonContactPeersRequirePremium,\n  isCurrentUserPremium,\n  onReset,\n}: OwnProps & StateProps) {\n  const { updateGlobalPrivacySettings } = getActions();\n  const lang = useOldLang();\n\n  const canChange = isCurrentUserPremium || canLimitNewMessagesWithoutPremium;\n\n  const options = useMemo(() => {\n    return [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      {\n        value: 'contacts_and_premium',\n        label: canChange ? (\n          lang('PrivacyMessagesContactsAndPremium')\n        ) : (\n          <PrivacyLockedOption label={lang('PrivacyMessagesContactsAndPremium')} />\n        ),\n        hidden: !canChange,\n      },\n    ];\n  }, [lang, canChange]);\n\n  const handleChange = useLastCallback((privacy: string) => {\n    updateGlobalPrivacySettings({ shouldNewNonContactPeersRequirePremium: privacy === 'contacts_and_premium' });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('PrivacyMessagesTitle')}\n        </h4>\n        <RadioGroup\n          name=\"privacy-messages\"\n          options={options}\n          onChange={handleChange}\n          selected={shouldNewNonContactPeersRequirePremium ? 'contacts_and_premium' : 'everybody'}\n        />\n        <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Privacy.Messages.SectionFooter')}\n        </p>\n      </div>\n      {!canChange && <PremiumStatusItem premiumSection=\"message_privacy\" />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    shouldNewNonContactPeersRequirePremium: selectNewNoncontactPeersRequirePremium(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    canLimitNewMessagesWithoutPremium: global.appConfig?.canLimitNewMessagesWithoutPremium,\n  };\n})(PrivacyMessages));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"M84mrPgu\",\"settingsActiveSession\":\"M84mrPgu\",\"iconDevice\":\"Add8P_K4\",\"iconDevice__android\":\"onkXVGY4\",\"iconDeviceAndroid\":\"onkXVGY4\",\"iconDevice__apple\":\"xw13aT8u\",\"iconDeviceApple\":\"xw13aT8u\",\"iconDevice__brave\":\"HESrGUdv\",\"iconDeviceBrave\":\"HESrGUdv\",\"iconDevice__chrome\":\"Vpej7wm7\",\"iconDeviceChrome\":\"Vpej7wm7\",\"iconDevice__edge\":\"ueWE77x9\",\"iconDeviceEdge\":\"ueWE77x9\",\"iconDevice__firefox\":\"_lMTmvya\",\"iconDeviceFirefox\":\"_lMTmvya\",\"iconDevice__linux\":\"cDVfvyG_\",\"iconDeviceLinux\":\"cDVfvyG_\",\"iconDevice__opera\":\"nWqlTxZt\",\"iconDeviceOpera\":\"nWqlTxZt\",\"iconDevice__safari\":\"ldFLp1Gf\",\"iconDeviceSafari\":\"ldFLp1Gf\",\"iconDevice__samsung\":\"VHNORBGL\",\"iconDeviceSamsung\":\"VHNORBGL\",\"iconDevice__ubuntu\":\"QBVivtdu\",\"iconDeviceUbuntu\":\"QBVivtdu\",\"iconDevice__unknown\":\"GbjIgrwU\",\"iconDeviceUnknown\":\"GbjIgrwU\",\"iconDevice__vivaldi\":\"yieVnjoI\",\"iconDeviceVivaldi\":\"yieVnjoI\",\"iconDevice__windows\":\"_0dnTFOE\",\"iconDeviceWindows\":\"_0dnTFOE\",\"iconDevice__xbox\":\"fbCjjDpU\",\"iconDeviceXbox\":\"fbCjjDpU\",\"title\":\"c6edjhlh\",\"note\":\"lRqTZAYn\",\"date\":\"oLnN6crs\",\"box\":\"wVEXuPlZ\",\"actionHeader\":\"olQS2T1n\",\"actionName\":\"KuX1APpO\",\"headerButton\":\"VT8pZfMu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p>{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wd0fmiSY\",\"avatar\":\"OhZHdRsP\",\"title\":\"EQ7__xGn\",\"note\":\"YRYk96ki\",\"box\":\"kmCTIfvf\",\"action-header\":\"qkq5Fa0V\",\"actionHeader\":\"qkq5Fa0V\",\"action-name\":\"zFYUiy13\",\"actionName\":\"zFYUiy13\",\"header-button\":\"lUf0RJ2h\",\"headerButton\":\"lUf0RJ2h\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"v0wP46TR\",\"clear-help\":\"WnnxcARX\",\"clearHelp\":\"WnnxcARX\",\"subtitle\":\"uEUfjByC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { CHAT_HEIGHT_PX, STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  }, [firstSticker, onClick]);\n\n  if (!stickerSet || !stickerSet.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      narrow\n      className={buildClassName('StickerSetCard', 'chat-item-clickable small-icon', className)}\n      style={`height: ${CHAT_HEIGHT_PX}px;`}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-menu-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', lang('FileSize.MB', String(AUTODOWNLOAD_FILESIZE_MB_LIMITS[value]), 'i'));\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettings.Contacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.PrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.GroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.Channels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        'Auto-download files', // Proper translation is not available yet\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\nimport type { IRadioOption } from '../../ui/CheckboxGroup';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition, unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, 'language' | 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  language,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n  const [displayedOptions, setDisplayedOptions] = useState<IRadioOption[]>([]);\n  const [search, setSearch] = useState('');\n\n  const options: IRadioOption[] = useMemo(() => {\n    return SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n  }, [language]);\n\n  useEffect(() => {\n    if (!isActive) setSearch('');\n  }, [isActive]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (prevIsActive === isActive) return;\n    if (isActive && displayedOptions.length) return;\n\n    const current = options.find((option) => option.value === language);\n    const otherLanguages = options.filter((option) => option.value !== language);\n\n    const [selected, unselected] = partition(otherLanguages, (option) => doNotTranslate.includes(option.value));\n\n    setDisplayedOptions([current!, ...selected, ...unselected]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, options]);\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newDoNotTranslate: string[];\n    if (checked) {\n      newDoNotTranslate = unique([...doNotTranslate, value]);\n    } else {\n      newDoNotTranslate = doNotTranslate.filter((v) => v !== value);\n    }\n\n    setSettingOption({\n      doNotTranslate: newDoNotTranslate,\n    });\n  }, [doNotTranslate, setSettingOption]);\n\n  const handleSearch = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  }, []);\n\n  const filteredDisplayedOptions = useMemo(() => {\n    if (!search.trim()) {\n      return displayedOptions;\n    }\n\n    return displayedOptions.filter((option) => (\n      option.label.toString().toLowerCase().includes(search.toLowerCase())\n      || option.subLabel?.toLowerCase().includes(search.toLowerCase())\n      || option.value.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [displayedOptions, search]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content custom-scroll')}>\n      <div className={buildClassName(styles.item, 'settings-item')}>\n        <InputText\n          key=\"search\"\n          value={search}\n          onChange={handleSearch}\n          placeholder={lang('Search')}\n          teactExperimentControlled\n        />\n        <div className={buildClassName(styles.languages, 'radio-group custom-scroll')}>\n          {filteredDisplayedOptions.map((option) => (\n            <Checkbox\n              className={styles.checkbox}\n              label={option.label}\n              subLabel={option.subLabel}\n              checked={doNotTranslate.includes(option.value)}\n              value={option.value}\n              key={option.value}\n              onChange={handleChange}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      language,\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ys1i4ssl\",\"item\":\"skaVPMTF\",\"checkbox\":\"obmoCKjY\",\"languages\":\"BccnzXwC\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 60;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useOldLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePrevious(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item mb-2 no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PaO1MMi5\",\"header\":\"wSswdVkR\",\"description\":\"oiJc22Aj\",\"sortableContainer\":\"lAeeBh9K\",\"item\":\"l04OwRBg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\nimport {\n  isUsernameValid, MAX_USERNAME_LENGTH, MIN_UPDATE_USERNAME_LENGTH, USERNAME_REGEX,\n} from '../../util/username';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useOldLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_UPDATE_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = newUsername === '' ? true : isUsernameValid(newUsername, true);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-edit-profile settings-item\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title=\"Edit your profile photo\"\n            disabled={isLoading}\n          />\n          <InputText\n            value={firstName}\n            onChange={handleFirstNameChange}\n            label={lang('FirstName')}\n            disabled={isLoading}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            value={lastName}\n            onChange={handleLastNameChange}\n            label={lang('LastName')}\n            disabled={isLoading}\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('UserBio')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <UsernameInput\n            currentUsername={currentUsername}\n            isLoading={isLoading}\n            isUsernameAvailable={isUsernameAvailable}\n            checkedUsername={checkedUsername}\n            onChange={handleUsernameChange}\n          />\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { IS_ELECTRON } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldShowLoginCodeInChatList?: boolean;\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldShowLoginCodeInChatList,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => requestConfetti({ withStars: true })}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Show login code in chat list\"\n          checked={Boolean(shouldShowLoginCodeInChatList)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldShowLoginCodeInChatList: !shouldShowLoginCodeInChatList })}\n        />\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      shouldShowLoginCodeInChatList: global.settings.byKey.shouldShowLoginCodeInChatList,\n      shouldForceHttpTransport: global.settings.byKey.shouldForceHttpTransport,\n      shouldAllowHttpTransport: global.settings.byKey.shouldAllowHttpTransport,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      shouldDebugExportedSenders: global.settings.byKey.shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { pick } from '../../../util/iteratees';\nimport { setTimeFormat } from '../../../util/oldLangProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'messageTextSize' |\n    'animationLevel' |\n    'messageSendKeyCombo' |\n    'timeFormat'\n  )> & {\n    theme: ISettings['theme'];\n    shouldUseSystemTheme: boolean;\n  };\n\nconst TIME_FORMAT_OPTIONS: IRadioOption[] = [{\n  label: '12-hour',\n  value: '12h',\n}, {\n  label: '24-hour',\n  value: '24h',\n}];\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n}) => {\n  const {\n    setSettingOption,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChat.Appearance.Light'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChat.Appearance.Dark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChat.Appearance.System'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('lng_settings_send_enter'), subLabel: 'New line by Shift + Enter' },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'lng_settings_send_cmdenter' : 'lng_settings_send_ctrlenter'),\n      subLabel: 'New line by Enter',\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSettingOption({ messageTextSize: newSize });\n  }, [setSettingOption]);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ISettings['theme'];\n\n    setSettingOption({ theme: newTheme });\n    setSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, [setSettingOption]);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, [setSettingOption]);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSettingOption({ messageSendKeyCombo: newCombo as ISettings['messageSendKeyCombo'] });\n  }, [setSettingOption]);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SETTINGS')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('GeneralSettings.StatusBarItem')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Time Format\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={TIME_FORMAT_OPTIONS}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('VoiceOver.Keyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { theme, shouldUseSystemTheme } = global.settings.byKey;\n\n    return {\n      ...pick(global.settings.byKey, [\n        'messageTextSize',\n        'animationLevel',\n        'messageSendKeyCombo',\n        'isSensitiveEnabled',\n        'canChangeSensitive',\n        'timeFormat',\n      ]),\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransition(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransition(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = global.settings.themes[theme] || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = global.settings.themes[theme] || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMultiClick from '../../../hooks/useMultiClick';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const lang = useOldLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{lang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{lang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{lang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{lang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{lang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{lang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{lang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{lang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{lang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{lang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{lang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{lang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{lang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{lang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{lang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{lang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{lang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyBirthday:\n        return <h3>{lang('PrivacyBirthday')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{lang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{lang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyMessages:\n        return <h3>{lang('PrivacyMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{lang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{lang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{lang('AlwaysShareWith')}</h3>;\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{lang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('Animations and Performance')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{lang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{lang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{lang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{lang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{lang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{lang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{lang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{lang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{lang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{lang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{lang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{lang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{lang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{lang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{lang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{lang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {lang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {lang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {lang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={lang('lng_settings_information')}\n            >\n              <i className=\"icon icon-edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{lang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={lang('AccDescrGoBack')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={lang('lng_sure_logout')}\n        confirmLabel={lang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiLanguage } from '../../../api/types';\nimport type { ISettings, LangCode } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { oldSetLanguage } from '../../../util/oldLangProvider';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n} & Pick<ISettings, 'languages' | 'language' | 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    loadAttachBots,\n    setSettingOption,\n    openPremiumModal,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void oldSetLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSettingOption({ language: langCode as LangCode });\n\n      loadAttachBots(); // Should be refetched every language change\n    });\n  });\n\n  const options = useMemo(() => {\n    return languages ? buildOptions(languages) : undefined;\n  }, [languages]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            className=\"pb-2\"\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\">{lang('Localization.InterfaceLanguage')}</h4>\n        {options ? (\n          <RadioGroup\n            name=\"language-settings\"\n            options={options}\n            selected={selectedLanguage}\n            loadingOption={isLoading ? selectedLanguage : undefined}\n            onChange={handleChange}\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction buildOptions(languages: ApiLanguage[]) {\n  const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n  const shortLangCode = currentLangCode.substr(0, 2);\n\n  return languages.map(({ langCode, nativeName, name }) => ({\n    value: langCode,\n    label: nativeName,\n    subLabel: name,\n  })).sort((a) => {\n    return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n  });\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, languages, canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport {\n  selectIsGiveawayGiftsPurchaseAvailable,\n  selectIsPremiumPurchaseBlocked,\n} from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ChatExtra from '../../common/profile/ChatExtra';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n  isGiveawayAvailable?: boolean;\n  starsBalance?: number;\n  shouldDisplayStars?: boolean;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n  isGiveawayAvailable,\n  starsBalance,\n  shouldDisplayStars,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n    openPremiumGiftingModal,\n    openStarsBalanceModal,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadProfilePhotos({ profileId: currentUserId });\n    }\n  }, [currentUserId, loadProfilePhotos]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu\">\n        {currentUserId && (\n          <ProfileInfo\n            userId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            isInSettings\n          />\n        )}\n        <ListItem\n          icon=\"settings\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {lang('Telegram.GeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {lang('Animations and Performance')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {lang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {lang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {lang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {lang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {lang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {lang('Language')}\n          <span className=\"settings-item__current-value\">{lang.langName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {lang('StickersName')}\n        </ListItem>\n      </div>\n      <div className=\"settings-main-menu\">\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon\" type=\"premium\" size=\"big\" />}\n            className=\"settings-main-menu-star\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {lang('TelegramPremium')}\n          </ListItem>\n        )}\n        {shouldDisplayStars && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon\" type=\"gold\" size=\"big\" />}\n            className=\"settings-main-menu-star\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openStarsBalanceModal({})}\n          >\n            {lang('MenuTelegramStars')}\n            {Boolean(starsBalance) && (\n              <span className=\"settings-item__current-value\">{formatInteger(starsBalance)}</span>\n            )}\n          </ListItem>\n        )}\n        {isGiveawayAvailable && (\n          <ListItem\n            icon=\"gift\"\n            className=\"settings-main-menu-star\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumGiftingModal()}\n          >\n            {lang('GiftPremiumGifting')}\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"ask-support\"\n          onClick={openSupportDialog}\n        >\n          {lang('AskAQuestion')}\n        </ListItem>\n        <ListItem\n          icon=\"help\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: FAQ_URL })}\n        >\n          {lang('TelegramFaq')}\n        </ListItem>\n        <ListItem\n          icon=\"privacy-policy\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: PRIVACY_URL })}\n        >\n          {lang('PrivacyPolicy')}\n        </ListItem>\n      </div>\n      <ConfirmDialog\n        isOpen={isSupportDialogOpen}\n        confirmLabel={lang('lng_settings_ask_ok')}\n        title={lang('AskAQuestion')}\n        text={lang('lng_settings_ask_sure')}\n        confirmHandler={handleOpenSupport}\n        onClose={closeSupportDialog}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const isGiveawayAvailable = selectIsGiveawayGiftsPurchaseAvailable(global);\n    const starsBalance = global.stars?.balance;\n    const shouldDisplayStars = Boolean(global.stars?.history?.all?.transactions.length);\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isGiveawayAvailable,\n      starsBalance,\n      shouldDisplayStars,\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  hasPrivateChatsNotifications: boolean;\n  hasPrivateChatsMessagePreview: boolean;\n  hasGroupNotifications: boolean;\n  hasGroupMessagePreview: boolean;\n  hasBroadcastNotifications: boolean;\n  hasBroadcastMessagePreview: boolean;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  hasPrivateChatsNotifications,\n  hasPrivateChatsMessagePreview,\n  hasGroupNotifications,\n  hasGroupMessagePreview,\n  hasBroadcastNotifications,\n  hasBroadcastMessagePreview,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: 'contact' | 'group' | 'broadcast',\n    setting: 'silent' | 'showPreviews',\n  ) => {\n    const currentIsSilent = peerType === 'contact'\n      ? !hasPrivateChatsNotifications\n      : !(peerType === 'group' ? hasGroupNotifications : hasBroadcastNotifications);\n    const currentShouldShowPreviews = peerType === 'contact'\n      ? hasPrivateChatsMessagePreview\n      : (peerType === 'group' ? hasGroupMessagePreview : hasBroadcastMessagePreview);\n\n    updateNotificationSettings({\n      peerType,\n      ...(setting === 'silent' && { isSilent: !e.target.checked, shouldShowPreviews: currentShouldShowPreviews }),\n      ...(setting === 'showPreviews' && { shouldShowPreviews: e.target.checked, isSilent: currentIsSilent }),\n    });\n  }, [\n    hasBroadcastMessagePreview, hasBroadcastNotifications,\n    hasGroupMessagePreview, hasGroupNotifications,\n    hasPrivateChatsMessagePreview, hasPrivateChatsNotifications,\n    updateNotificationSettings,\n  ]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'silent');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Web notifications\n        </h4>\n        <Checkbox\n          label=\"Web notifications\"\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasWebNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label=\"Offline notifications\"\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          // eslint-disable-next-line max-len\n          subLabel={areOfflineNotificationsSupported ? lang(hasPushNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled') : 'Not supported'}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label=\"Sound\"\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsNotifications}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasPrivateChatsNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsMessagePreview}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(hasGroupNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupNotifications}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasGroupNotifications}\n          subLabel={lang(hasGroupMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupMessagePreview}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastNotifications}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasBroadcastNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastMessagePreview}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasPrivateChatsNotifications: Boolean(global.settings.byKey.hasPrivateChatsNotifications),\n      hasPrivateChatsMessagePreview: Boolean(global.settings.byKey.hasPrivateChatsMessagePreview),\n      hasGroupNotifications: Boolean(global.settings.byKey.hasGroupNotifications),\n      hasGroupMessagePreview: Boolean(global.settings.byKey.hasGroupMessagePreview),\n      hasBroadcastNotifications: Boolean(global.settings.byKey.hasBroadcastNotifications),\n      hasBroadcastMessagePreview: Boolean(global.settings.byKey.hasBroadcastMessagePreview),\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [string, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: string;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS = [\n  'Power Saving',\n  'Nice and Fast',\n  'Lots of Stuff',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS = [\n  'Power Saving',\n  'Custom',\n  'Lots of Stuff',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['LiteMode.Key.animations.Title', [\n    { key: 'pageTransitions', label: 'Page Transitions' },\n    { key: 'messageSendingAnimations', label: 'Message Sending Animation' },\n    { key: 'mediaViewerAnimations', label: 'Media Viewer Animations' },\n    { key: 'messageComposerAnimations', label: 'Message Composer Animations' },\n    { key: 'contextMenuAnimations', label: 'Context Menu Animation' },\n    { key: 'contextMenuBlur', label: 'Context Menu Blur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'Right Column Animation' },\n  ]],\n  ['Stickers and Emoji', [\n    { key: 'animatedEmoji', label: 'Allow Animated Emoji' },\n    { key: 'loopAnimatedStickers', label: 'Loop Animated Stickers' },\n    { key: 'reactionEffects', label: 'Reaction Effects' },\n    { key: 'stickerEffects', label: 'Full-Screen Sticker and Emoji Effects' },\n  ]],\n  ['AutoplayMedia', [\n    { key: 'autoplayGifs', label: 'AutoplayGIF' },\n    { key: 'autoplayVideos', label: 'AutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useOldLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n  const animationLevelOptions = animationLevelState === ANIMATION_LEVEL_CUSTOM\n    ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n    : ANIMATION_LEVEL_OPTIONS;\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, [setSettingOption]);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Animation Level\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Choose the desired animations amount.\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => (\n                    <Checkbox\n                      key={key}\n                      name={key}\n                      checked={performanceSettings[key]}\n                      label={lang(label)}\n                      disabled={disabled}\n                      onChange={handlePropertyChange}\n                    />\n                  ))}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanSetPasscode, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canDisplayChatInTitle?: boolean;\n  privacy: GlobalState['settings']['privacy'];\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  shouldNewNonContactPeersRequirePremium,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacy,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    setSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    loadBlockedUsers();\n    loadPrivacySettings();\n    loadContentSettings();\n    loadWebAuthorizations();\n  }, []);\n\n  useEffect(() => {\n    if (isActive) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, loadGlobalPrivacySettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    const { visibility, shouldAllowPremium } = setting || {};\n    const blockCount = setting ? setting.blockChatIds.length + setting.blockUserIds.length : 0;\n    const allowCount = setting ? setting.allowChatIds.length + setting.allowUserIds.length : 0;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount) total.push(`+${allowCount}`);\n\n    const exceptionString = total.length ? `(${total.join(',')})` : '';\n\n    if (shouldAllowPremium) {\n      return lang(exceptionString ? 'ContactsAndPremium' : 'PrivacyPremium');\n    }\n\n    switch (visibility) {\n      case 'everybody':\n        return `${lang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${lang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${lang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"delete-user\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {lang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-menu-item\">\n              <span className=\"title\">{lang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {lang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {lang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {lang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.lastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.profilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBio)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.bio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBirthday)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyBirthday')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.birthday)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.forwards)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          allowDisabledClick\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyVoiceMessages)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.voiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyMessages)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {shouldNewNonContactPeersRequirePremium\n                ? lang('PrivacyMessagesContactsAndPremium')\n                : lang('P2PEverybody')}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.chatInvite)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={lang('lng_settings_sensitive_disable_filtering')}\n            subLabel={lang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={lang('ArchiveAndMute')}\n            subLabel={lang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={lang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          canDisplayChatInTitle, shouldNewNonContactPeersRequirePremium,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      shouldNewNonContactPeersRequirePremium,\n      privacy,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName, getUserFullName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterUsersByName(availableContactIds, usersById, search)\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useOldLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        className=\"block-user-button\"\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <i className=\"icon icon-add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyBirthday:\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return 'birthday';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n  }\n\n  return undefined;\n}\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { PrivacyVisibility } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectShouldHideReadMarks } from '../../../global/selectors';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  visibility?: PrivacyVisibility;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  shouldHideReadMarks: boolean;\n};\n\nconst SettingsPrivacyLastSeen = ({\n  isCurrentUserPremium, shouldHideReadMarks, visibility,\n}: OwnProps & StateProps) => {\n  const { updateGlobalPrivacySettings, openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const canShowHideReadTime = visibility === 'nobody' || visibility === 'contacts';\n\n  const handleChangeShouldHideReadMarks = useLastCallback(\n    (isEnabled) => updateGlobalPrivacySettings({ shouldHideReadMarks: isEnabled }),\n  );\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    openPremiumModal({\n      initialSection: 'last_seen',\n    });\n  });\n\n  return (\n    <>\n      {canShowHideReadTime && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('HideReadTime')}\n            checked={shouldHideReadMarks}\n            onCheck={handleChangeShouldHideReadMarks}\n          />\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('HideReadTimeInfo'), ['br'])}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <ListItem\n          leftElement={<StarIcon className=\"icon\" type=\"premium\" size=\"big\" />}\n          onClick={handleOpenPremiumModal}\n        >\n          {isCurrentUserPremium ? lang('PrivacyLastSeenPremiumForPremium') : lang('PrivacyLastSeenPremium')}\n        </ListItem>\n        <p\n          className=\"settings-item-description-larger premium-info\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n        >\n          {isCurrentUserPremium\n            ? lang('PrivacyLastSeenPremiumInfoForPremium')\n            : lang('PrivacyLastSeenPremiumInfo')}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldHideReadMarks: Boolean(selectShouldHideReadMarks(global)),\n    };\n  },\n)(SettingsPrivacyLastSeen));\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"Qvhl9Jjv\",\"fallbackPhoto\":\"Qvhl9Jjv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\nimport SettingsPrivacyLastSeen from './SettingsPrivacyLastSeen';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  isPremiumRequired,\n  onScreenSelect,\n  onReset,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        onScreenSelect={onScreenSelect}\n        isPremiumRequired={isPremiumRequired}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {screen === SettingsScreens.PrivacyLastSeen && (\n        <SettingsPrivacyLastSeen visibility={primaryPrivacy?.visibility} />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n          onScreenSelect={onScreenSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  onScreenSelect,\n  isPremiumRequired,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n}) {\n  const { setPrivacyVisibility } = getActions();\n  const lang = useOldLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      {\n        value: 'contacts',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={lang('P2PContacts')} />\n        ) : (\n          lang('P2PContacts')\n        ),\n        hidden: isPremiumRequired,\n      },\n    ];\n\n    if (hasNobody) {\n      options.push({\n        value: 'nobody',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={lang('P2PNobody')} />\n        ) : (\n          lang('P2PNobody')\n        ),\n        hidden: isPremiumRequired,\n      });\n    }\n    return options;\n  }, [lang, screen, isPremiumRequired]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? lang('PrivacyPhoneInfo') : lang('PrivacyPhoneInfo3');\n      }\n      case SettingsScreens.PrivacyVoiceMessages:\n        return lang('PrivacyVoiceMessagesInfo');\n      default:\n        return undefined;\n    }\n  }, [lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return lang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return lang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return lang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return lang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyBirthday:\n        return lang('PrivacyBirthdayTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return lang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return lang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return lang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return lang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return lang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [lang, screen]);\n\n  const prepareSubtitle = useLastCallback((userIds?: string[], chatIds?: string[], shouldAllowPremium?: boolean) => {\n    const userIdsCount = userIds?.length || 0;\n    const chatIdsCount = chatIds?.length || 0;\n\n    if (!userIdsCount && !chatIdsCount) {\n      return shouldAllowPremium ? lang('PrivacyPremium') : lang('EditAdminAddUsers');\n    } else if (shouldAllowPremium) {\n      return lang('ContactsAndPremium');\n    }\n\n    const userCountString = userIdsCount > 0 ? lang('Users', userIdsCount) : undefined;\n    const chatCountString = chatIdsCount > 0 ? lang('Chats', chatIdsCount) : undefined;\n\n    return [userCountString, chatCountString].filter(Boolean).join(', ');\n  });\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(privacy?.allowUserIds, privacy?.allowChatIds, privacy?.shouldAllowPremium);\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {!isPremiumRequired && (primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(allowedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(deniedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n      {isPremiumRequired && <PremiumStatusItem />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: { privacy },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyBirthday:\n        primaryPrivacy = privacy.birthday;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      isPremiumRequired: screen === SettingsScreens.PrivacyVoiceMessages && !selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings, CustomPeerType } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  filterChatsByName, isChatChannel, isDeletedUser,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { CUSTOM_PEER_PREMIUM } from '../../../util/objects/customPeer';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Picker from '../../common/Picker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  withPremiumCategory?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst PREMIUM_CATEGORY = [CUSTOM_PEER_PREMIUM];\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  withPremiumCategory,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  onScreenSelect,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const lang = useOldLang();\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const selectedCategoryTypes = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    return [settings.shouldAllowPremium ? CUSTOM_PEER_PREMIUM.type : undefined].filter(Boolean);\n  }, [settings]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n  const [newSelectedCategoryTypes, setNewSelectedCategoryTypes] = useState<CustomPeerType[]>(selectedCategoryTypes);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) {\n      setNewSelectedContactIds(selectedContactIds);\n      setNewSelectedCategoryTypes(selectedCategoryTypes);\n    }\n  }, [isActive, selectedCategoryTypes, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => {\n        const chat = chatsById[chatId];\n        const user = usersById[chatId];\n        const isDeleted = user && isDeletedUser(user);\n        const isChannel = chat && isChatChannel(chat);\n        return chatId !== currentUserId && chatId !== SERVICE_NOTIFICATIONS_USER_ID && !isChannel && !isDeleted;\n      });\n\n    const filteredChats = filterChatsByName(lang, chatIds, chatsById, searchQuery);\n\n    // Show only relevant items\n    if (searchQuery) return filteredChats;\n\n    return unique([\n      ...selectedContactIds,\n      ...filterChatsByName(lang, chatIds, chatsById, searchQuery),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, lang, searchQuery, currentUserId]);\n\n  const handleSelectedCategoriesChange = useCallback((value: CustomPeerType[]) => {\n    setNewSelectedCategoryTypes(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n      isPremiumAllowed: newSelectedCategoryTypes.includes(CUSTOM_PEER_PREMIUM.type) || undefined,\n    });\n\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [isAllowList, newSelectedCategoryTypes, newSelectedContactIds, onScreenSelect, screen]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <Picker\n        categories={withPremiumCategory ? PREMIUM_CATEGORY : undefined}\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        selectedCategories={newSelectedCategoryTypes}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? lang('AlwaysAllowPlaceholder') : lang('NeverAllowPlaceholder')}\n        categoryPlaceholderKey=\"PrivacyUserTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onSelectedCategoriesChange={handleSelectedCategoriesChange}\n        onFilterChange={setSearchQuery}\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? lang('AlwaysAllow') : lang('NeverAllow')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return privacy.birthday;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { config, reactions } = global;\n\n    return {\n      availableReactions: reactions.availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          className=\"mt-4\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.reactions.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  error,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  const lang = useOldLang();\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          placeholder={lang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={lang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport PrivacyMessages from './PrivacyMessages';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_BIRTHDAY_SCREENS = [\n  SettingsScreens.PrivacyBirthdayAllowedContacts,\n  SettingsScreens.PrivacyBirthdayDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, activeScreen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBirthday]: PRIVACY_BIRTHDAY_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(activeScreen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(activeScreen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(activeScreen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(activeScreen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(activeScreen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).map(Number).includes(activeScreen)\n      || Object.values(privacyAllowScreens).includes(true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || activeScreen === SettingsScreens.GeneralChatBackgroundColor\n              || activeScreen === SettingsScreens.GeneralChatBackground\n              || activeScreen === SettingsScreens.QuickReaction\n              || activeScreen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || activeScreen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || activeScreen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyBirthday:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            withPremiumCategory={currentScreen === SettingsScreens.PrivacyGroupChatsAllowedContacts}\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyMessages:\n        return (\n          <PrivacyMessages\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={activeScreen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(\n    isScreenActive: boolean,\n    _isFrom: boolean,\n    _currentKey: SettingsScreens,\n    activeKey: SettingsScreens,\n  ) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, activeKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { filterUsersByName, sortUserIds } from '../../../global/helpers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterUsersByName(contactIds, usersById, filter);\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <i className=\"icon icon-add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { filterUsersByName, isUserBot } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Picker from '../../common/Picker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localPeerIds?: string[];\n  globalPeerIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localPeerIds,\n  globalPeerIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localPeerIds || []),\n        ...(globalPeerIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n\n        return user && !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, searchQuery, localPeerIds, globalPeerIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <Picker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <i className=\"icon icon-arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: localPeerIds } = localResults || {};\n\n    return {\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalPeerIds,\n      localPeerIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst MAX_MEMBERS_FOR_GENERATE_CHAT_NAME = 4;\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  useEffect(() => {\n    if (isChannel) {\n      return;\n    }\n    if (!memberIds.length || memberIds.length > MAX_MEMBERS_FOR_GENERATE_CHAT_NAME) {\n      setTitle('');\n      return;\n    }\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const memberFirstNames = [global.currentUserId!, ...memberIds]\n      .map((userId) => getUserFirstOrLastName(usersById[userId]))\n      .filter(Boolean);\n    const generatedChatName = memberFirstNames.slice(0, -1).join(', ')\n      + lang('CreateGroup.PeersTitleLastDelimeter')\n      + memberFirstNames[memberFirstNames.length - 1];\n    setTitle(generatedChatName);\n  }, [isChannel, memberIds, lang]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransition(!isForumPanelOpen);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransition(isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          onSettingsScreenSelect={onSettingsScreenSelect}\n          onLeftColumnContentChange={onLeftColumnContentChange}\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useOldLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID).map((folderId) => ({\n      label: foldersById ? foldersById[folderId].title : '',\n      value: String(folderId),\n    })) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('FilterAddTo')}\n    >\n      <CheckboxGroup\n        options={folders}\n        selected={selectedFolderIds}\n        onChange={setSelectedFolderIds}\n        round\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('FilterAddTo')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useOldLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let muteUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      muteUntil = MAX_INT_32;\n    } else {\n      muteUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, muteUntil });\n    } else {\n      updateChatMutedState({ chatId, muteUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import type { ApiMessage } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoMediaHash,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { IS_SAFARI } from '../../../../util/windowEnvironment';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'inline') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          );\n          if (clipboardText) copyHtmlToClipboard(clipboardText.join(''), getMessageTextWithSpoilers(message)!);\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = (selection?.anchorNode?.parentNode as HTMLElement);\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"lhinieg0\",\"get\":\"wysoV1T4\",\"skeleton\":\"gPqaUijR\",\"transition\":\"Yg6u_MIn\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../lib/teact/teactn';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './ReadTimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  menuSeparatorSize: 'thin' | 'thick';\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu, menuSeparatorSize,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <>\n      <MenuSeparator size={menuSeparatorSize} />\n      <MenuItem icon=\"message-read\" className={styles.item}>\n        <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n          {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n            <>\n              {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n              {!readDate && shouldRenderShowWhen && (\n                <div>\n                  {lang('PmRead')}\n                  <span className={styles.get} onClick={handleOpenModal}>\n                    {lang('PmReadShowWhen')}\n                  </span>\n                </div>\n              )}\n            </>\n          )}\n        </Transition>\n      </MenuItem>\n    </>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiSponsoredMessage,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { getUserFullName, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling, enableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage | ApiSponsoredMessage;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  noTransition?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onAboutAds?: NoneToVoidFunction;\n  onSponsoredHide?: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  maxUniqueReactions,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canQuote,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canReport,\n  canForward,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  noTransition,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onReport,\n  onFaveSticker,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onCopyMessages,\n  onAboutAds,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n}) => {\n  const { showNotification, openStickerSet, openCustomEmojiSets } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const withReactions = canShowReactionList && !noReactions;\n  const isSponsoredMessage = !('id' in message);\n  const messageId = !isSponsoredMessage ? message.id : '';\n  const seenByDates = !isSponsoredMessage ? message.seenByDates : undefined;\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = isSponsoredMessage\n    ? []\n    : getMessageCopyOptions(\n      message,\n      targetHref,\n      canCopy,\n      handleAfterCopy,\n      canCopyLink ? onCopyLink : undefined,\n      onCopyMessages,\n      onCopyNumber,\n    );\n\n  const getTriggerElement = useLastCallback(() => {\n    return isSponsoredMessage\n      ? document.querySelector('.Transition_slide-active > .MessageList .SponsoredMessage')\n      : document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${messageId}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const pinnedElement = document.querySelector<HTMLElement>('.HeaderPinnedMessageWrapper');\n    const extraHeightPinned = (((isMobile && !extraHeightAudioPlayer)\n        || (!isMobile && pinnedElement?.classList.contains('full-width')))\n      && pinnedElement?.offsetHeight) || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style, menuStyle, withScroll,\n  } = useMenuPosition(anchor, getTriggerElement, getRootElement, getMenuElement, getLayout);\n\n  useEffect(() => {\n    disableScrolling(withScroll ? scrollableRef.current : undefined, '.ReactionPicker');\n\n    return enableScrolling;\n  }, [withScroll]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      positionX={positionX}\n      positionY={positionY}\n      style={style}\n      bubbleStyle={menuStyle}\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      shouldSkipTransition={noTransition}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={!isSponsoredMessage ? message.reactions?.results : undefined}\n          maxUniqueReactions={maxUniqueReactions}\n          onToggleReaction={onToggleReaction!}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        style={menuStyle}\n        dir={lang.isRtl ? 'rtl' : undefined}\n        ref={scrollableRef}\n      >\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {lang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >{lang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {isSponsoredMessage && message.sponsorInfo && (\n          <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n        )}\n        {isSponsoredMessage && (\n          <MenuItem icon=\"info\" onClick={onAboutAds}>\n            {lang(message.canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n          </MenuItem>\n        )}\n        {isSponsoredMessage && message.canReport && (\n          <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n            {lang('ReportAd')}\n          </MenuItem>\n        )}\n        {isSponsoredMessage && onSponsoredHide && (\n          <>\n            <MenuSeparator />\n            <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>{lang('HideAd')}</MenuItem>\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && !isSponsoredMessage && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? lang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : lang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {!isSponsoredMessage && (canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            menuSeparatorSize={hasCustomEmoji ? 'thin' : 'thick'}\n            closeContextMenu={onClose}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ActiveDownloads, MessageListType } from '../../../global/types';\nimport type { IAlbum, IAnchorPosition, ThreadId } from '../../../types';\nimport {\n  type ApiAvailableReaction,\n  type ApiChatReactions,\n  type ApiMessage,\n  type ApiReaction,\n  type ApiStickerSet,\n  type ApiStickerSetInfo,\n  type ApiThreadInfo,\n  MAIN_THREAD_ID,\n} from '../../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getIsDownloading,\n  getMessageDownloadableMedia,\n  getMessageVideo,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActions,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport DeleteMessageModal from '../../common/DeleteMessageModal';\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ReportModal from '../../common/ReportModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  maxUniqueReactions?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n};\n\nconst selection = window.getSelection();\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canReport,\n  canShowReactionsCount,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransition(isOpen, onCloseAnimationEnd, undefined, false);\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [canQuoteSelection, setCanQuoteSelection] = useState(false);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = getMessageDownloadableMedia(msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    setCanQuoteSelection(\n      selectionText.text.trim().length > 0\n      && message.content.text!.text!.includes(selectionText.text),\n    );\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    updateDraftReplyInfo({\n      replyToMsgId: message.id,\n      quoteText: canQuoteSelection && selectionRange ? getSelectionAsFormattedText(selectionRange) : undefined,\n      replyToPeerId: undefined,\n    });\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = getMessageDownloadableMedia(msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        maxUniqueReactions={maxUniqueReactions}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canQuote={canQuoteSelection}\n        canDelete={canDelete}\n        canReport={canReport}\n        canPin={canPin}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n      />\n      <DeleteMessageModal\n        isOpen={isDeleteModalOpen}\n        isSchedule={messageListType === 'scheduled'}\n        onClose={closeDeleteModal}\n        album={album}\n        message={message}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={reportMessageIds}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig || {};\n    const {\n      noOptions,\n      canReply,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canForward,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActions(global, message, threadId)) || {};\n\n    const isPrivate = chat && isUserId(chat.id);\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n        && isOwn\n        && !isMessageUnread\n        && readDateExpiresAt\n        && message.date > Date.now() / 1000 - readDateExpiresAt\n        && !userStatus?.isReadDateRestricted\n        && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    return {\n      threadId,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReply,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canReport,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      maxUniqueReactions,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  onAboutAds: NoneToVoidFunction;\n  onReportAd: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  message,\n  anchor,\n  onAboutAds,\n  onReportAd,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { openPremiumModal, showDialog } = getActions();\n\n  const [isMenuOpen, , closeMenu] = useFlag(true);\n  const { transitionClassNames } = useShowTransition(isMenuOpen, onCloseAnimationEnd, undefined, false);\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    onAboutAds();\n    closeMenu();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    closeMenu();\n    openPremiumModal();\n    onClose();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    closeMenu();\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    closeMenu();\n    onReportAd();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isOpen={isMenuOpen}\n        anchor={anchor}\n        message={message}\n        onClose={closeMenu}\n        onCloseAnimationEnd={closeMenu}\n        onAboutAds={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePrevious(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat, chatFullInfo) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, threadId, isMessageThread, chatFullInfo)\n        && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nZYT4vJ3\",\"sets\":\"JzkmXjFF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePrevious(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => (\n          <StickerSetCard\n            key={customEmojiSet.id}\n            className={styles.setCard}\n            stickerSet={customEmojiSet}\n            onClick={handleSetClick}\n            observeIntersection={observeIntersectionForCovers}\n            noPlay={!canPlayAnimatedEmojis}\n          />\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { customEmojiSetIds }): StateProps => {\n    const customEmojiSets = customEmojiSetIds?.map((id) => global.stickers.setsById[id]);\n\n    return {\n      customEmojiSets,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiBotCommand, ApiChat } from '../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { REPLIES_USER_ID } from '../../config';\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  getIsSavedDialog,\n  isChatChannel,\n  isChatGroup,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanManage, selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsPremiumPurchaseBlocked,\n  selectIsRightColumnShown, selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport ReportModal from '../common/ReportModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  privacy: {\n    icon: 'info',\n    label: 'Privacy',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  isForumAsMessages?: true;\n  canAddContact?: boolean;\n  canReportChat?: boolean;\n  canDeleteChat?: boolean;\n  canGiftPremium?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n  isChatWithSelf?: boolean;\n  savedDialog?: ApiChat;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  withForumActions,\n  isTopic,\n  isForum,\n  isForumAsMessages,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canReportChat,\n  canDeleteChat,\n  canGiftPremium,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  isChatWithSelf,\n  savedDialog,\n  canShowBoostModal,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openBoostStatistics,\n    openGiftPremiumModal,\n    openThreadWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n    setViewForumAsMessages,\n    openBoostModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransition(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openThreadWithInfo({ chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    updateChatMutedState({ chatId, isMuted: false });\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    markRenderMuteModal();\n    setIsMuteModalOpen(true);\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    openCreateTopicPanel({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    toggleManagement({ force: true });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    openEditTopicPanel({ chatId, topicId: Number(threadId) });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftPremiumClick = useLastCallback(() => {\n    openGiftPremiumModal({ forUserIds: [chatId] });\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    openAddContactDialog({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    onSubscribeChannel();\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    if (canViewBoosts) {\n      openBoostStatistics({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    } else {\n      openBoostModal({ chatId });\n    }\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    enterMessageSelectMode();\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    blockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  useEffect(() => {\n    disableScrolling();\n\n    return enableScrolling;\n  }, []);\n\n  const lang = useOldLang();\n\n  const botButtons = useMemo(() => {\n    return botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {lang(cmd.label)}\n        </MenuItem>\n      );\n    });\n  }, [botCommands, closeMenu, lang, sendBotCommand]);\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (savedDialog) {\n      return lang('Delete');\n    }\n\n    if (isPrivate) {\n      return lang('DeleteChatUser');\n    }\n\n    if (canDeleteChat) {\n      return lang('GroupInfo.DeleteAndExit');\n    }\n\n    if (isChannel) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [canDeleteChat, chat, isChannel, isPrivate, savedDialog, lang]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {lang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {lang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? lang('lng_context_view_topic') : lang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {lang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {lang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {lang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && !isForumAsMessages && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {lang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canShowBoostModal && !canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang(isChannel ? 'BoostingBoostChannelMenu' : 'BoostingBoostGroupMenu')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {lang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {lang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {lang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {lang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {lang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {lang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {lang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {lang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {lang('Statistics')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {lang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {lang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGiftPremium && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftPremiumClick}\n            >\n              {lang('GiftPremium')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? lang('BotRestart') : lang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isChatWithSelf && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? lang('Unblock') : lang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {deleteTitle}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={savedDialog || chat}\n            isSavedDialog={Boolean(savedDialog)}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n        {canReportChat && chat?.id && (\n          <ReportModal\n            isOpen={isReportModalOpen}\n            onClose={closeReportModal}\n            subject=\"peer\"\n            peerId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const canReportChat = isMainThread && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGiftPremium = Boolean(\n      userFullInfo?.premiumGifts?.length\n      && !selectIsPremiumPurchaseBlocked(global),\n    );\n\n    const topic = chat?.topics?.[threadId];\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n    const savedDialog = isSavedDialog ? selectChat(global, String(threadId)) : undefined;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      isForumAsMessages: chat?.isForumAsMessages,\n      canAddContact,\n      canReportChat,\n      canDeleteChat: getCanDeleteChat(chat),\n      canGiftPremium,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n      isChatWithSelf,\n      savedDialog,\n    };\n  },\n)(HeaderMenuContainer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiReaction, ApiReactionKey, ApiSavedReactionTag,\n} from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getIsSavedDialog, getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectCurrentTextSearch,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectTabState,\n} from '../../global/selectors';\nimport { getDayStartAt } from '../../util/dates/dateFormat';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS } from '../../util/windowEnvironment';\n\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport SearchInput from '../ui/SearchInput';\nimport SavedTagButton from './message/reactions/SavedTagButton';\n\nimport './MobileSearch.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: ThreadId;\n  query?: string;\n  savedTags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  searchTag?: ApiReaction;\n  totalCount?: number;\n  foundIds?: number[];\n  isHistoryCalendarOpen?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MobileSearchFooter: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  query,\n  savedTags,\n  searchTag,\n  totalCount,\n  foundIds,\n  isHistoryCalendarOpen,\n  isCurrentUserPremium,\n}) => {\n  const {\n    setLocalTextSearchQuery,\n    setLocalTextSearchTag,\n    searchTextMessagesLocal,\n    focusMessage,\n    closeLocalTextSearch,\n    openHistoryCalendar,\n    openPremiumModal,\n    loadSavedReactionTags,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const tagsRef = useRef<HTMLDivElement>(null);\n\n  const [focusedIndex, setFocusedIndex] = useState(0);\n\n  const hasQueryData = Boolean(query || searchTag);\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window as any;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Focus message\n  useEffect(() => {\n    if (chat?.id && foundIds?.length) {\n      focusMessage({ chatId: chat.id, messageId: foundIds[0], threadId });\n      setFocusedIndex(0);\n    } else {\n      setFocusedIndex(-1);\n    }\n  }, [chat?.id, focusMessage, foundIds, threadId]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n    searchInput.blur();\n  }, [isHistoryCalendarOpen]);\n\n  const tags = useMemo(() => {\n    if (!savedTags) return undefined;\n    return Object.values(savedTags);\n  }, [savedTags]);\n\n  const hasTags = Boolean(tags?.length);\n  const areTagsDisabled = hasTags && !isCurrentUserPremium;\n\n  useHorizontalScroll(tagsRef, !hasTags);\n\n  useEffect(() => {\n    if (isActive) loadSavedReactionTags();\n  }, [hasTags, isActive]);\n\n  const handleMessageSearchQueryChange = useLastCallback((newQuery: string) => {\n    setLocalTextSearchQuery({ query: newQuery });\n\n    if (hasQueryData) {\n      runDebouncedForSearch(searchTextMessagesLocal);\n    }\n  });\n\n  const handleTagClick = useLastCallback((tag: ApiReaction) => {\n    if (areTagsDisabled) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n      return;\n    }\n\n    setLocalTextSearchTag({ tag });\n\n    runDebouncedForSearch(searchTextMessagesLocal);\n  });\n\n  const handleUp = useLastCallback(() => {\n    if (chat && foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      focusMessage({ chatId: chat.id, messageId: foundIds[newFocusIndex], threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleDown = useLastCallback(() => {\n    if (chat && foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      focusMessage({ chatId: chat.id, messageId: foundIds[newFocusIndex], threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleCloseLocalTextSearch = useLastCallback(() => {\n    closeLocalTextSearch();\n  });\n\n  return (\n    <div id=\"MobileSearch\" className={isActive ? 'active' : ''}>\n      <div className=\"header\">\n        <Button\n          size=\"smaller\"\n          round\n          color=\"translucent\"\n          onClick={handleCloseLocalTextSearch}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          onChange={handleMessageSearchQueryChange}\n        />\n      </div>\n      {hasTags && (\n        <div\n          ref={tagsRef}\n          className=\"tags-subheader custom-scroll-x no-scrollbar\"\n        >\n          {tags.map((tag) => (\n            <SavedTagButton\n              containerId=\"mobile-search\"\n              key={getReactionKey(tag.reaction)}\n              reaction={tag.reaction}\n              tag={tag}\n              withCount\n              isDisabled={areTagsDisabled}\n              isChosen={isSameReaction(tag.reaction, searchTag)}\n              onClick={handleTagClick}\n            />\n          ))}\n        </div>\n      )}\n      <div className=\"footer\">\n        <div className=\"counter\">\n          {hasQueryData ? (\n            foundIds?.length ? (\n              `${focusedIndex + 1} of ${totalCount}`\n            ) : foundIds && !foundIds.length ? (\n              'No results'\n            ) : (\n              ''\n            )\n          ) : (\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel=\"Search messages by date\"\n            >\n              <i className=\"icon icon-calendar\" />\n            </Button>\n          )}\n        </div>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleUp}\n          disabled={!foundIds || !foundIds.length || focusedIndex === foundIds.length - 1}\n        >\n          <i className=\"icon icon-up\" />\n        </Button>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleDown}\n          disabled={!foundIds || !foundIds.length || focusedIndex === 0}\n        >\n          <i className=\"icon icon-down\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    if (!currentMessageList) {\n      return {};\n    }\n    const { chatId, threadId } = currentMessageList;\n\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { query, savedTag, results } = selectCurrentTextSearch(global) || {};\n    const { totalCount, foundIds } = results || {};\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const savedTags = isSavedMessages && !isSavedDialog ? global.savedReactionTags?.byKey : undefined;\n\n    return {\n      chat,\n      query,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n      savedTags,\n      searchTag: savedTag,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(MobileSearchFooter));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent, ThreadId } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  isForEffects?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  effectStickers?: ApiSticker[];\n  effectEmojis?: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  effectStickers,\n  effectEmojis,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n  isForEffects,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat?.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (isForEffects && effectStickers) {\n      const effectSets: StickerSetOrReactionsSetOrRecent[] = [];\n      if (effectEmojis?.length) {\n        effectSets.push({\n          id: EFFECT_EMOJIS_SET_ID,\n          accessHash: '0',\n          title: '',\n          stickers: effectEmojis,\n          count: effectEmojis.length,\n          isEmoji: true,\n        });\n      }\n      if (effectStickers?.length) {\n        effectSets.push({\n          id: EFFECT_STICKERS_SET_ID,\n          accessHash: '0',\n          title: lang('StickerEffects'),\n          stickers: effectStickers,\n          count: effectStickers.length,\n        });\n      }\n      return effectSets;\n    }\n\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    const userSetIds = [...(addedSetIds || [])];\n    if (chatStickerSetId) {\n      userSetIds.unshift(chatStickerSetId);\n    }\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, userSetIds));\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds,\n    stickerSetsById,\n    favoriteStickers,\n    recentStickers,\n    chatStickerSetId,\n    lang,\n    effectStickers,\n    isForEffects,\n    effectEmojis,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents\n  && !noPopulatedSets && (canSendStickers || isForEffects);\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  if (!chat) return undefined;\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers && !isForEffects ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      { !isForEffects && (\n        <div ref={headerRef} className={headerClassName}>\n          <div className=\"shared-canvas-container\">\n            <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n            {allSets.map(renderCover)}\n          </div>\n        </div>\n      ) }\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={\n          buildClassName(\n            styles.main,\n            IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n            !isForEffects && styles.hasHeader,\n          )\n        }\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            noContextMenus={noContextMenus}\n            index={i}\n            idPrefix={prefix}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            isChatStickerSet={stickerSet.id === chatStickerSetId}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            forcePlayback\n            shouldHideHeader={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      effect,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      effectStickers: effect?.stickers,\n      effectEmojis: effect?.emojis,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiAvailableReaction, ApiChatReactions, ApiReaction } from '../../../../api/types';\n\nimport { getReactionKey, sortReactions } from '../../../../global/helpers';\nimport { selectChatFullInfo } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nimport ReactionEmoji from '../../../common/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  onReactionSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const allAvailableReactions = useMemo(() => {\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      return sortReactions((availableReactions || []).map(({ reaction }) => reaction), topReactions);\n    }\n\n    return sortReactions(enabledReactions.allowed, topReactions);\n  }, [availableReactions, enabledReactions, topReactions]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global.reactions;\n    const { enabledReactions } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n    };\n  },\n)(ReactionPickerLimited));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MhpiTAwi\",\"wrapper\":\"NIaqmosK\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { IAnchorPosition } from '../../../../types';\nimport {\n  type ApiAvailableEffect,\n  type ApiMessage, type ApiMessageEntity,\n  type ApiReaction, type ApiReactionCustomEmoji, type ApiSticker, type ApiStory, type ApiStorySkipped,\n  MAIN_THREAD_ID,\n} from '../../../../api/types';\n\nimport { getReactionKey, getStoryKey, isUserId } from '../../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectChatMessage, selectIsContextMenuTranslucent, selectIsCurrentUserPremium,\n  selectPeerStory, selectTabState,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../../composer/helpers/customEmoji';\n\nimport { getIsMobile } from '../../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../../hooks/useMenuPosition';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../../../common/CustomEmojiPicker';\nimport Menu from '../../../ui/Menu';\nimport StickerPicker from '../../composer/StickerPicker';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  withCustomReactions?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n  chatId?: string;\n  isForEffects?: boolean;\n  availableEffectById: Record<string, ApiAvailableEffect>;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  withCustomReactions,\n  sendAsMessage,\n  chatId,\n  isForEffects,\n  availableEffectById,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction, saveEffectInDraft,\n    requestEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (withCustomReactions ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (withCustomReactions ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, withCustomReactions]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style,\n  } = useMenuPosition(renderingPosition, getTriggerElement, getRootElement, getMenuElement, getLayout);\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction = sticker.isCustomEmoji\n      ? { documentId: sticker.id } as ApiReactionCustomEmoji\n      : { emoticon: sticker.emoji } as ApiReaction;\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReaction | ApiSticker) => {\n    const reaction = 'id' in item ? { documentId: item.id } : item;\n\n    const sticker = 'documentId' in item\n      ? getGlobal().customEmojis.byId[item.documentId] : 'emoticon' in item ? undefined : item;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in item) {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker) => {\n    const availableEffects = Object.values(availableEffectById);\n    const effectId = availableEffects.find((effect) => effect.effectStickerId === sticker.id)?.id;\n\n    if (chatId) saveEffectInDraft({ chatId, threadId: MAIN_THREAD_ID, effectId });\n\n    if (effectId) requestEffectInComposer({ });\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push(getReactionKey(reaction));\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !withCustomReactions && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      positionX={positionX}\n      positionY={positionY}\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      style={style}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      {isForEffects && chatId ? (\n        <StickerPicker\n          className=\"\"\n          isHidden={!isOpen}\n          loadAndPlay={Boolean(isOpen && withCustomReactions)}\n          idPrefix=\"message-effect\"\n          canSendStickers={false}\n          noContextMenus={false}\n          chatId={chatId}\n          isTranslucent={isTranslucent}\n          onStickerSelect={handleStickerSelect}\n          isForEffects={isForEffects}\n        />\n      ) : (\n        <>\n          <CustomEmojiPicker\n            chatId={renderedChatId}\n            idPrefix=\"message-emoji-set-\"\n            isHidden={!isOpen || !(withCustomReactions || renderedStoryId)}\n            loadAndPlay={Boolean(isOpen && withCustomReactions)}\n            isReactionPicker\n            className={!withCustomReactions && !renderedStoryId ? styles.hidden : undefined}\n            selectedReactionIds={selectedReactionIds}\n            isTranslucent={isTranslucent}\n            onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n            onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n          />\n          {!withCustomReactions && Boolean(renderedChatId) && (\n            <ReactionPickerLimited\n              chatId={renderedChatId}\n              loadAndPlay={isOpen}\n              onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n              selectedReactionIds={selectedReactionIds}\n            />\n          )}\n        </>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const availableEffectById = global.availableEffectById;\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage, isForEffects,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const areCustomReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n    && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  return {\n    message,\n    story,\n    position,\n    withCustomReactions: chat?.isForbidden || areSomeReactionsAllowed\n      ? false\n      : areCustomReactionsAllowed || isPrivateChat,\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n    isForEffects,\n    chatId,\n    availableEffectById,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"gBh4WvBC\",\"menuContent\":\"qSfKwMzX\",\"storyMenu\":\"srpBMrqr\",\"onlyReactions\":\"dRNSqkOC\",\"hidden\":\"KVwgF6DG\"};","import { fixImageContent } from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QucaiGVU\",\"preview\":\"SHoF85Vw\",\"duration\":\"nI2M1SBH\",\"single\":\"FjrnqGba\",\"no-grouping\":\"g0cTsM9d\",\"noGrouping\":\"g0cTsM9d\",\"file\":\"B6f6GcvN\",\"overlay\":\"bX7LdgxW\",\"action-item\":\"Zo7u5epf\",\"actionItem\":\"Zo7u5epf\",\"delete-file\":\"CYJwy9T_\",\"deleteFile\":\"CYJwy9T_\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { SUPPORTED_IMAGE_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'image':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <i\n                className={buildClassName('icon', 'icon-delete', styles.actionItem, styles.deleteFile)}\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          <i\n            className={buildClassName(\n              'icon',\n              attachment.shouldSendAsSpoiler ? 'icon-spoiler-disable' : 'icon-spoiler',\n              styles.actionItem,\n            )}\n            onClick={handleSpoilerClick}\n          />\n          {onDelete && (\n            <i\n              className={buildClassName('icon', 'icon-delete', styles.actionItem)}\n              onClick={() => onDelete(index)}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport function getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_IMAGE_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'image';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n\nexport default isFullyVisible;\n","import animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\nimport isFullyVisible from './isFullyVisible';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll(container, allElements[index], position, SCROLL_MARGIN);\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  useEffect(() => {\n    if (!isActive) setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n  }, [isActive, shouldRemoveSelectionOnReset]);\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePrevious(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"a27O2Qlr\",\"mobile\":\"khvUZbGZ\",\"symbolMenuOpen\":\"ir5kkMy1\",\"header-border\":\"Pc1k8G8s\",\"headerBorder\":\"Pc1k8G8s\",\"attachments\":\"_bxSIFgj\",\"attachments-bottom-padding\":\"RPVunBe2\",\"attachmentsBottomPadding\":\"RPVunBe2\",\"caption-wrapper\":\"EtmiUn2k\",\"captionWrapper\":\"EtmiUn2k\",\"caption-top-border\":\"FjjSKMYe\",\"captionTopBorder\":\"FjjSKMYe\",\"caption\":\"Te7lIfpB\",\"drop-target\":\"LhhRTsy6\",\"dropTarget\":\"LhhRTsy6\",\"hovered\":\"AnO3BgVv\",\"send-wrapper\":\"wDqWK9MD\",\"sendWrapper\":\"wDqWK9MD\",\"send\":\"kNlWmBJI\",\"is-pointer-env\":\"rYZmraWo\",\"isPointerEnv\":\"rYZmraWo\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiMessage, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState, MessageListType } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getAttachmentType, isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  attachments: ApiAttachment[];\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  editingMessage?: ApiMessage;\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  editingMessage,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n}) => {\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePrevious(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const isEditing = editingMessage && Boolean(editingMessage);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n  const isEditingMessageFile = isEditing && attachments?.length && getAttachmentType(attachments[0]);\n  const notEditingFile = isEditingMessageFile !== 'file';\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean(\n    (shouldSendCompressed || shouldForceCompression || isInAlbum) && !shouldForceAsFile,\n  );\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [updateAttachmentSettings, isOpen, shouldSuggestCompression]);\n\n  function setIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage && !editingMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped, isInvertedMedia);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: true,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [lang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_IMAGE_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  const canInvertMedia = (() => {\n    if (isEditing) return false;\n    if (!hasMedia) return false;\n    if (!shouldForceAsFile && !shouldForceCompression && !isSendingCompressed) return false;\n    if (isMultiple && shouldSendGrouped) return false;\n    return true;\n  })();\n\n  let title = '';\n  if (areAllPhotos) {\n    title = lang(isEditing ? 'EditMessageReplacePhoto' : 'PreviewSender.SendPhoto', renderingAttachments.length, 'i');\n  } else if (areAllVideos) {\n    title = lang(isEditing ? 'EditMessageReplaceVideo' : 'PreviewSender.SendVideo', renderingAttachments.length, 'i');\n  } else if (areAllAudios) {\n    title = lang(isEditing ? 'EditMessageReplaceAudio' : 'PreviewSender.SendAudio', renderingAttachments.length, 'i');\n  } else {\n    title = lang(isEditing ? 'EditMessageReplaceFile' : 'PreviewSender.SendFile', renderingAttachments.length, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        {notEditingFile && !isInAlbum\n          && (\n            <DropdownMenu\n              className=\"attachmeneditingMessaget-modal-more-menu with-menu-transitions\"\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              {Boolean(!editingMessage) && (\n                <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{lang('Add')}</MenuItem>\n              )}\n              {hasMedia && (\n                <>\n                  {\n                    canInvertMedia && (!isInvertedMedia ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-up\" onClick={() => setIsInvertedMedia(true)}>\n                        {lang('PreviewSender.MoveTextUp')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-down\" onClick={() => setIsInvertedMedia(undefined)}>\n                        {lang(('PreviewSender.MoveTextDown'))}\n                      </MenuItem>\n                    ))\n                  }\n                  {\n                    !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                        {lang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                        {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                      </MenuItem>\n                    ))\n                  }\n                  {isSendingCompressed && hasAnySpoilerable && Boolean(!editingMessage) && (\n                    hasSpoiler ? (\n                      <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                        {lang('Attachment.DisableSpoiler')}\n                      </MenuItem>\n                    ) : (\n                      <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                        {lang('Attachment.EnableSpoiler')}\n                      </MenuItem>\n                    )\n                  )}\n                </>\n              )}\n              {isMultiple && (\n                shouldSendGrouped ? (\n                  <MenuItem\n                    icon=\"grouped-disable\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => setShouldSendGrouped(false)}\n                  >\n                    Ungroup All Media\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                    Group All Media\n                  </MenuItem>\n                )\n              )}\n            </DropdownMenu>\n          )}\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={lang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={lang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule && !editingMessage ? lang('Next') : editingMessage ? lang('Save') : lang('Send')}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { language, shouldSuggestCustomEmoji } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestMeasure, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useOldLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      requestMeasure(() => {\n        list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n      });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const isNoCorrectOptionError = isQuizMode && (correctOption === undefined || !options[correctOption].trim());\n\n    const answers = options\n      .map((text, index) => {\n        text = text.trim();\n\n        if (!text) return undefined;\n\n        return {\n          text: {\n            text,\n          },\n          option: String(index),\n          ...(index === correctOption && { correct: true }),\n        };\n      }).filter(Boolean);\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    if (!questionTrimmed || answers.length < 2) {\n      setQuestion(questionTrimmed);\n      if (answers.length) {\n        const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter(Boolean);\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isNoCorrectOptionError) {\n      setHasErrors(true);\n      return;\n    }\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: {\n          text: questionTrimmed,\n        },\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseHtmlAsFormattedText(solution.substring(0, MAX_SOLUTION_LENGTH)))\n        || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: !options[index].trim() }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        {!shouldBeAnonymous && (\n          <Checkbox\n            label={lang('PollAnonymous')}\n            checked={isAnonymous}\n            onChange={handleIsAnonymousChange}\n          />\n        )}\n        <Checkbox\n          label={lang('PollMultiple')}\n          checked={isMultipleAnswers}\n          disabled={isQuizMode}\n          onChange={handleMultipleAnswersChange}\n        />\n        <Checkbox\n          label={lang('PollQuiz')}\n          checked={isQuizMode}\n          disabled={isMultipleAnswers || isQuiz !== undefined}\n          onChange={handleQuizModeChange}\n        />\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_PACKAGED_ELECTRON } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji/emoji';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_PACKAGED_ELECTRON ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransition(shouldRender);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, string> = {\n  recent: 'icon-recent',\n  people: 'icon-smile',\n  nature: 'icon-animals',\n  foods: 'icon-eats',\n  activity: 'icon-sport',\n  places: 'icon-car',\n  objects: 'icon-lamp',\n  symbols: 'icon-language',\n  flags: 'icon-flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useOldLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll(containerRef.current!, categoryEl, 'start', FOCUS_MARGIN, SMOOTH_SCROLL_DISTANCE);\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <i className={buildClassName('icon', icon)} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getVideoMediaHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewBlobUrl = useMedia(getVideoMediaHash(gif, 'preview'), !loadAndPlay, ApiMediaFormat.BlobUrl);\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n  const videoData = useMedia(getVideoMediaHash(gif, 'full'), !loadAndPlay, ApiMediaFormat.BlobUrl);\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <i className=\"icon icon-close gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail canvas-blur-setup\"\n          // We need to always render to avoid blur re-calculation\n          style={isVideoReady ? 'display: none;' : undefined}\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useOldLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <i className=\"icon icon-search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <i className=\"icon icon-delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\nimport type { ThreadId } from '../../../types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Button from '../../ui/Button';\nimport { UnfreezableMenu } from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  positionX?: 'left' | 'right';\n  positionY?: 'top' | 'bottom';\n  transformOriginX?: number;\n  transformOriginY?: number;\n  style?: string;\n};\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  positionX,\n  positionY,\n  transformOriginX,\n  transformOriginY,\n  style,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, onClose, false, false);\n\n  const lang = useOldLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <UnfreezableMenu\n      isOpen={isOpen}\n      positionX={isAttachmentModal ? positionX : 'left'}\n      positionY={isAttachmentModal ? positionY : 'bottom'}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      style={style}\n    >\n      {content}\n    </UnfreezableMenu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatCommand.scss';\n\ntype OwnProps<T = undefined> = {\n  command: string;\n  description: string;\n  peer?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  clickArg: T;\n  onClick: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst ChatCommand = <T,>({\n  withAvatar,\n  focus,\n  command,\n  description,\n  peer,\n  clickArg,\n  onClick,\n}: OwnProps<T>) => {\n  const handleClick = useLastCallback(() => {\n    onClick(clickArg);\n  });\n\n  return (\n    <ListItem\n      key={command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      onClick={handleClick}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={peer} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{command}</span>\n        <span className=\"subtitle\">{renderText(description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(ChatCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiBotCommand, ApiMessage, ApiQuickReply, ApiUser,\n} from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport ChatCommand from './ChatCommand';\n\nimport styles from './ChatCommandTooltip.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  quickReplies?: ApiQuickReply[];\n  quickReplyMessages?: Record<number, ApiMessage>;\n  self: ApiUser;\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\ntype QuickReplyWithDescription = {\n  id: number;\n  command: string;\n  description: string;\n};\n\nconst ChatCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  withUsername,\n  botCommands,\n  quickReplies,\n  quickReplyMessages,\n  self,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand, sendQuickReply } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSendQuickReply = useLastCallback((id: number) => {\n    sendQuickReply({ chatId, quickReplyId: id });\n    onClick();\n  });\n\n  const quickRepliesWithDescription = useMemo(() => {\n    if (!quickReplies?.length || !quickReplyMessages) return undefined;\n    return quickReplies.map((reply) => {\n      const message = quickReplyMessages[reply.topMessageId];\n      return {\n        id: reply.id,\n        command: reply.shortcut,\n        description: message?.content.text?.text || '',\n      } satisfies QuickReplyWithDescription;\n    });\n  }, [quickReplies, quickReplyMessages]);\n\n  const handleKeyboardSelect = useLastCallback((item: ApiBotCommand | QuickReplyWithDescription) => {\n    if (!item.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    if ('id' in item) {\n      handleSendQuickReply(item.id);\n    } else {\n      handleSendCommand(item);\n    }\n\n    return true;\n  });\n\n  const keyboardNavigationItems = useMemo(() => {\n    if (!botCommands && !quickRepliesWithDescription) return undefined;\n    return ([] as (ApiBotCommand | QuickReplyWithDescription)[])\n      .concat(quickRepliesWithDescription || [], botCommands || []);\n  }, [botCommands, quickRepliesWithDescription]);\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: keyboardNavigationItems,\n    onSelect: handleKeyboardSelect,\n    onClose,\n  });\n\n  const isEmpty = (botCommands && !botCommands.length) || (quickReplies && !quickReplies.length);\n\n  useEffect(() => {\n    if (isEmpty) {\n      onClose();\n    }\n  }, [isEmpty, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  if (!shouldRender || isEmpty) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {quickRepliesWithDescription?.map((reply, index) => (\n        <ChatCommand\n          key={`quickReply_${reply.id}`}\n          command={reply.command}\n          description={reply.description}\n          peer={self}\n          withAvatar\n          clickArg={reply.id}\n          onClick={handleSendQuickReply}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n      {botCommands?.map((command, index) => (\n        <ChatCommand\n          key={`${command.botId}_${command.command}`}\n          command={command.command}\n          description={command.description}\n          // No need for expensive global updates on users and chats, so we avoid them\n          peer={getGlobal().users.byId[command.botId]}\n          withAvatar\n          clickArg={command}\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex + (quickRepliesWithDescription?.length || 0) === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(freezeWhenClosed(ChatCommandTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iaTB59vy\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport ChatCommand from './ChatCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((command: string) => {\n    sendBotCommand({\n      command: `/${command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <ChatCommand\n          key={botCommand.command}\n          command={botCommand.command}\n          description={botCommand.description}\n          clickArg={botCommand.command}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const prevStickers = usePrevious(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_8sFuAomM\",\"emojiButton\":\"crWzZ2jr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const prevStickers = usePrevious(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ReactionSelector from '../message/reactions/ReactionSelector';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onRemoveEffect?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  chatId?: string;\n  withEffects?: boolean;\n  hasCurrentEffect?: boolean;\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onRemoveEffect,\n  onClose,\n  onCloseAnimationEnd,\n  chatId,\n  withEffects,\n  hasCurrentEffect,\n  effectReactions,\n  allAvailableReactions,\n  onToggleReaction,\n  canBuyPremium,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  canPlayAnimatedEmojis,\n}) => {\n  const {\n    openEffectPicker,\n  } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [areItemsHidden, hideItems, showItems] = useFlag();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      showItems();\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n\n  const handleOpenMessageEffectsPicker = useLastCallback((position: IAnchorPosition) => {\n    hideItems();\n    if (chatId) openEffectPicker({ chatId, position });\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className={buildClassName(\n        'CustomSendMenu', 'fluid', 'with-menu-transitions', withEffects && 'with-effects',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n\n      {withEffects && !isInStoryViewer && (\n        <ReactionSelector\n          allAvailableReactions={allAvailableReactions}\n          effectReactions={effectReactions}\n          currentReactions={undefined}\n          onToggleReaction={onToggleReaction!}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          isForEffects\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageEffectsPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'CustomSendMenu_items',\n          areItemsHidden && 'CustomSendMenu_items-hidden',\n        )}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{oldLang('SendWithoutSound')}</MenuItem>}\n        {canSchedule && onSendSchedule && (\n          <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n            {oldLang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n        )}\n        {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n          <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n            {oldLang('SendWhenOnline')}\n          </MenuItem>\n        )}\n        {withEffects && hasCurrentEffect && (\n          <MenuItem icon=\"delete\" onClick={onRemoveEffect}>\n            {lang('RemoveEffect')}\n          </MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useOldLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? `webDocument:${thumbnail.url}` : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, url, description, webThumbnail,\n  } = inlineResult;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransition from '../../../../hooks/useMediaTransition';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult && isForGallery) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailDataUrl = useMedia(webThumbnail ? `webDocument:${webThumbnail.url}` : undefined);\n  const mediaBlobUrl = useMedia(photo && `photo${photo.id}?size=m`);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailDataUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbUrl={mediaBlobUrl || (thumbnail?.dataUri || thumbnailDataUrl)}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePrevious(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <i className=\"icon icon-lock-badge send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiReaction, ApiReactionKey, ApiSavedReactionTag,\n} from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { ANONYMOUS_USER_ID, REPLIES_USER_ID } from '../../config';\nimport { getIsSavedDialog, getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessages,\n  selectCurrentTextSearch,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n} from '../../global/selectors';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { debounce } from '../../util/schedulers';\nimport { renderMessageSummary } from '../common/helpers/renderMessageText';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport LastMessageMeta from '../common/LastMessageMeta';\nimport SavedTagButton from '../middle/message/reactions/SavedTagButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\n\nimport './RightSearch.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  messagesById?: Record<number, ApiMessage>;\n  query?: string;\n  savedTags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  searchTag?: ApiReaction;\n  totalCount?: number;\n  foundIds?: number[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst RightSearch: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isActive,\n  messagesById,\n  query,\n  totalCount,\n  foundIds,\n  savedTags,\n  searchTag,\n  isSavedMessages,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const {\n    searchTextMessagesLocal,\n    setLocalTextSearchTag,\n    focusMessage,\n    openPremiumModal,\n    loadSavedReactionTags,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const tagsRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isActive]);\n\n  const tags = useMemo(() => {\n    if (!savedTags) return undefined;\n    return Object.values(savedTags);\n  }, [savedTags]);\n\n  const hasTags = Boolean(tags?.length);\n  const areTagsDisabled = hasTags && !isCurrentUserPremium;\n\n  useHorizontalScroll(tagsRef, !hasTags);\n\n  useEffect(() => {\n    if (isActive) loadSavedReactionTags();\n  }, [hasTags, isActive]);\n\n  const handleSearchTextMessagesLocal = useLastCallback(() => {\n    runDebouncedForSearch(searchTextMessagesLocal);\n  });\n\n  const handleTagClick = useLastCallback((tag: ApiReaction) => {\n    if (areTagsDisabled) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n      return;\n    }\n\n    if (isSameReaction(tag, searchTag)) {\n      setLocalTextSearchTag({ tag: undefined });\n      return;\n    }\n\n    setLocalTextSearchTag({ tag });\n    handleSearchTextMessagesLocal();\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(handleSearchTextMessagesLocal, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if ((!query && !searchTag) || !viewportIds?.length || !messagesById) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return viewportIds.map((id) => {\n      const message = messagesById[id];\n      if (!message) {\n        return undefined;\n      }\n\n      const global = getGlobal();\n\n      const originalSender = (isSavedMessages || chatId === REPLIES_USER_ID || chatId === ANONYMOUS_USER_ID)\n        ? selectForwardedSender(global, message) : undefined;\n      const messageSender = selectSender(global, message);\n\n      const senderPeer = originalSender || messageSender;\n\n      const hiddenForwardTitle = message.forwardInfo?.hiddenUserName;\n\n      return {\n        message,\n        senderPeer,\n        hiddenForwardTitle,\n        onClick: () => focusMessage({ chatId, threadId, messageId: id }),\n      };\n    }).filter(Boolean);\n  }, [query, searchTag, viewportIds, messagesById, isSavedMessages, chatId, threadId]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, true, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      foundResult.onClick();\n    }\n  }, '.ListItem-button', true);\n\n  const renderSearchResult = ({\n    message, senderPeer, hiddenForwardTitle, onClick,\n  }: {\n    message: ApiMessage;\n    senderPeer?: ApiPeer;\n    hiddenForwardTitle?: string;\n    onClick: NoneToVoidFunction;\n  }) => {\n    const text = renderMessageSummary(lang, message, undefined, query);\n\n    return (\n      <ListItem\n        key={message.id}\n        teactOrderKey={-message.date}\n        className=\"chat-item-clickable search-result-message m-0\"\n        onClick={onClick}\n      >\n        <Avatar\n          peer={senderPeer}\n          text={hiddenForwardTitle}\n        />\n        <div className=\"info\">\n          <div className=\"search-result-message-top\">\n            {senderPeer && <FullNameTitle peer={senderPeer} withEmojiStatus />}\n            {!senderPeer && hiddenForwardTitle}\n            <LastMessageMeta message={message} />\n          </div>\n          <div className=\"subtitle\" dir=\"auto\">\n            {text}\n          </div>\n        </div>\n      </ListItem>\n    );\n  };\n\n  const isOnTop = viewportIds?.[0] === foundIds?.[0];\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className=\"RightSearch custom-scroll\"\n      items={viewportResults}\n      preloadBackwards={0}\n      onLoadMore={getMore}\n      onKeyDown={handleKeyDown}\n    >\n      {hasTags && (\n        <div\n          ref={tagsRef}\n          className=\"search-tags custom-scroll-x no-scrollbar\"\n          key=\"search-tags\"\n        >\n          {tags.map((tag) => (\n            <SavedTagButton\n              containerId=\"local-search\"\n              key={getReactionKey(tag.reaction)}\n              reaction={tag.reaction}\n              tag={tag}\n              withCount\n              isDisabled={areTagsDisabled}\n              isChosen={isSameReaction(tag.reaction, searchTag)}\n              onClick={handleTagClick}\n            />\n          ))}\n        </div>\n      )}\n      {isOnTop && (\n        <p key=\"helper-text\" className=\"helper-text\" dir=\"auto\">\n          {!query ? (\n            lang('lng_dlg_search_for_messages')\n          ) : (totalCount === 0 || !viewportResults.length) ? (\n            lang('lng_search_no_results')\n          ) : totalCount === 1 ? (\n            '1 message found'\n          ) : (\n            `${(viewportResults.length && (totalCount || viewportResults.length))} messages found`\n          )}\n        </p>\n      )}\n      {viewportResults.map(renderSearchResult)}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const messagesById = selectChatMessages(global, chatId);\n    if (!messagesById) {\n      return {};\n    }\n\n    const { query, savedTag, results } = selectCurrentTextSearch(global) || {};\n    const { totalCount, foundIds } = results || {};\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const savedTags = isSavedMessages && !isSavedDialog ? global.savedReactionTags?.byKey : undefined;\n\n    return {\n      messagesById,\n      query,\n      totalCount,\n      foundIds,\n      isSavedMessages,\n      savedTags,\n      searchTag: savedTag,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(RightSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  chatFullInfo,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const canPostInChat = Boolean(chat) && Boolean(threadId)\n      && getCanPostInChat(chat, threadId, isMessageThread, chatFullInfo);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OAKzmAva\",\"withImage\":\"BQ6HUOqN\",\"imageContainer\":\"TmJvv2A6\",\"image\":\"U96CW2I7\",\"round\":\"yxjDeIct\",\"circle\":\"cdfiLmXo\",\"withStoryCircle\":\"BOfHPv20\",\"summary\":\"vXi2JQlj\",\"title\":\"bi3fL59p\",\"info\":\"GUK4ajPK\",\"meta\":\"YH6jeZIh\",\"metaWithIcon\":\"q1LnuIUn\",\"metaIcon\":\"PJZzyVLK\",\"date\":\"C7NpG5Y9\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { StatisticsMessageInteractionCounter, StatisticsStoryInteractionCounter } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\ninterface OwnProps {\n  postStatistic: StatisticsStoryInteractionCounter | StatisticsMessageInteractionCounter;\n}\n\nfunction StatisticsRecentPostMeta({ postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  return (\n    <div className={styles.meta}>\n      {postStatistic.reactionsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"heart-outline\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.reactionsCount)}\n        </span>\n      )}\n\n      {postStatistic.forwardsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"forward\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.forwardsCount)}\n        </span>\n      )}\n\n      {!postStatistic.forwardsCount && !postStatistic.reactionsCount\n        && lang('ChannelStats.SharesCount_ZeroValueHolder')}\n    </div>\n  );\n}\n\nexport default memo(StatisticsRecentPostMeta);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsMessageInteractionCounter } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  postStatistic: StatisticsMessageInteractionCounter;\n  message: ApiMessage;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ postStatistic, message }) => {\n  const lang = useOldLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        Boolean(mediaBlobUrl || mediaThumbnail) && styles.withImage,\n      )}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span>\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName(styles.image, isRoundVideo && styles.round)}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiTypeStory,\n  StatisticsStoryInteractionCounter,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  story?: ApiTypeStory;\n  postStatistic: StatisticsStoryInteractionCounter;\n};\n\nfunction StatisticsRecentStory({ chat, story, postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  const { toggleStoryStatistics } = getActions();\n  const isLoaded = story && 'content' in story;\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const mediaThumbnail = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  const handleClick = useLastCallback(() => {\n    toggleStoryStatistics({ storyId: postStatistic.storyId });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, styles.withImage)}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, chat, imgBlobUrl || mediaThumbnail)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {isLoaded && Boolean(story.date) && formatDateTimeToString(story.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n}\n\nfunction renderSummary(lang: LangFn, chat: ApiChat, blobUrl?: string) {\n  return (\n    <span>\n      {blobUrl ? (\n        <span className={styles.imageContainer}>\n          <img\n            src={blobUrl}\n            alt=\"\"\n            draggable={false}\n            className={buildClassName(styles.image, styles.circle, styles.withStoryCircle)}\n          />\n        </span>\n      ) : (\n        <Avatar\n          peer={chat}\n          size=\"small-mobile\"\n          className={styles.image}\n          withStorySolid\n          forceUnreadStorySolid\n        />\n      )}\n\n      {lang('Story')}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"T1l_4J8z\",\"pie-slim-in\":\"EgyLOizu\",\"pieSlimIn\":\"EgyLOizu\",\"pie-slim-out\":\"TBiNdFb4\",\"pieSlimOut\":\"TBiNdFb4\",\"messages\":\"suY9dEIz\",\"publicForwards\":\"S1x1ovkC\",\"messages-title\":\"evQIkAqx\",\"messagesTitle\":\"evQIkAqx\",\"publicForwards-title\":\"WxL3i5PM\",\"publicForwardsTitle\":\"WxL3i5PM\",\"ready\":\"aUrozL5_\",\"graph\":\"QQHwjG88\",\"hidden\":\"QGctP1Nk\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiChat,\n  ApiGroupStatistics,\n  ApiMessage,\n  ApiTypeStory,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessages,\n  selectPeerStories,\n  selectStatistics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\nimport StatisticsRecentStory from './StatisticsRecentStory';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n  reactionsByEmotionGraph: 'ChannelStats.Graph.Reactions',\n  storyInteractionsGraph: 'ChannelStats.Graph.Stories',\n  storyReactionsByEmotionGraph: 'ChannelStats.Graph.StoriesReactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  chat?: ApiChat;\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n  messagesById: Record<string, ApiMessage>;\n  storiesById?: Record<string, ApiTypeStory>;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  statistics,\n  dcId,\n  isGroup,\n  messagesById,\n  storiesById,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove(styles.hidden);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview\n        statistics={statistics}\n        type={isGroup ? 'group' : 'channel'}\n        title={lang('StatisticOverview')}\n      />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className={buildClassName(styles.graph, styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics).recentPosts?.length) && (\n        <div className={styles.messages}>\n          <h2 className={styles.messagesTitle}>{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentPosts.map((postStatistic) => {\n            if ('msgId' in postStatistic) {\n              const message = messagesById[postStatistic.msgId];\n              if (!message || !('content' in message)) return undefined;\n\n              return (\n                <StatisticsRecentMessage\n                  key={`statistic_message_${postStatistic.msgId}`}\n                  message={message}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            if ('storyId' in postStatistic && chat) {\n              const story = storiesById?.[postStatistic.storyId];\n\n              return (\n                <StatisticsRecentStory\n                  key={`statistic_story_${postStatistic.storyId}`}\n                  chat={chat}\n                  story={story}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            return undefined;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n    const messagesById = selectChatMessages(global, chatId);\n    const storiesById = selectPeerStories(global, chatId)?.byId;\n\n    return {\n      statistics, dcId, isGroup, chat, messagesById, storiesById,\n    };\n  },\n)(Statistics));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oXLpD4Y4\",\"title\":\"paQ2VBe_\",\"views\":\"WvFuOAIf\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsMessagePublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useOldLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => (data.chat ? getMainUsername(data.chat) : undefined), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div>\n        <div className={styles.title}>\n          {data.title}\n        </div>\n\n        <div className={styles.views}>\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessagePublicForward,\n  ApiPostStatistics,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nfunction Statistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadMessagePublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards && messageId) {\n      loadMessagePublicForwards({ chatId, messageId });\n    }\n  });\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {(statistics.publicForwardsData as ApiMessagePublicForward[]).map((item) => (\n              <StatisticsMessagePublicForward key={item.messageId} data={item} />\n            ))}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat, ApiStoryPublicForward, ApiUser,\n} from '../../../api/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiStoryPublicForward;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n};\n\nfunction StatisticsMessagePublicForward({ data, chatsById, usersById }: OwnProps) {\n  const lang = useOldLang();\n  const { openChat } = getActions();\n  const user = usersById[data.peerId];\n  const chat = chatsById[data.peerId];\n\n  const handleClick = useLastCallback(() => {\n    openChat({ id: user.id });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={user || chat} withStorySolid forceUnreadStorySolid />\n\n      <div>\n        <div className={styles.title}>\n          {user ? getUserFullName(user) : getChatTitle(lang, chat)}\n        </div>\n\n        <div className={styles.views}>\n          {data.viewsCount ? lang('ChannelStats.ViewsCount', data.viewsCount, 'i') : lang('NoViews')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiPostStatistics,\n  ApiUser,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsStoryPublicForward from './StatisticsStoryPublicForward';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.StoryInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  storyId?: number;\n  dcId?: number;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n};\n\nfunction StoryStatistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  storyId,\n  chatsById,\n  usersById,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStoryStatistics, loadStoryPublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (storyId) {\n      loadStoryStatistics({ chatId, storyId });\n    }\n  }, [chatId, storyId]);\n\n  useEffect(() => {\n    if (!isActive || storyId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, storyId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, storyId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!storyId) return;\n\n    loadStoryPublicForwards({ chatId, storyId });\n  });\n\n  if (!isReady || !statistics || !storyId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"story\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {statistics.publicForwardsData!.map((item) => {\n              if ('messageId' in item) {\n                return (\n                  <StatisticsMessagePublicForward key={`message_${item.messageId}`} data={item} />\n                );\n              }\n\n              return (\n                <StatisticsStoryPublicForward\n                  key={`story_${item.storyId}`}\n                  data={item}\n                  chatsById={chatsById}\n                  usersById={usersById}\n                />\n              );\n            })}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentStory;\n    const storyId = tabState.statistics.currentStoryId;\n    const { byId: usersById } = global.users;\n    const { byId: chatsById } = global.chats;\n\n    return {\n      statistics, dcId, storyId, usersById, chatsById,\n    };\n  },\n)(StoryStatistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePrevious<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useOldLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: text.text,\n            entities: text.entities,\n          })}\n        </span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage } from '../../api/types';\n\nimport { getMessagePoll } from '../../global/helpers';\nimport { selectChat, selectChatMessage, selectTabState } from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  onClose,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = getMessagePoll(message)!;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n        })}\n      </h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${message.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      chat,\n      message,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xrnUE4e6\",\"content\":\"z7kF7tij\",\"section\":\"T6wFpdQO\",\"general\":\"YftUWqqw\",\"top\":\"CWsWIKQ1\",\"bottom\":\"KBl0ycLl\",\"iconWrapper\":\"iJ1U9kDD\",\"icon\":\"Rk6PT_yc\",\"clickable\":\"K1CTKtBS\",\"heading\":\"qlo3vSEw\",\"icon-picker\":\"r06zwL42\",\"iconPicker\":\"r06zwL42\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.topicId ? chat?.topics?.[editTopicPanel?.topicId] : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiBotInfo, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport {\n  getChatAvatarHash, getMainUsername, getUserFirstOrLastName,\n} from '../../../global/helpers';\nimport {\n  selectBot,\n  selectTabState,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  userId?: string;\n  user?: ApiUser;\n  chatBot?: ApiBotInfo;\n  currentBio?: string;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  maxBioLength: number;\n};\n\nconst ERROR_NAME_MISSING = 'Please provide name';\n\nconst ManageBot: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  onClose,\n  currentBio,\n  isActive,\n  maxBioLength,\n}) => {\n  const {\n    setBotInfo,\n    uploadProfilePhoto,\n    uploadContactProfilePhoto,\n    startBotFatherConversation,\n  } = getActions();\n\n  const [isFieldTouched, markFieldTouched, unmarkProfileTouched] = useFlag(false);\n  const [isAvatarTouched, markAvatarTouched, unmarkAvatarTouched] = useFlag(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  const username = useMemo(() => (user ? getMainUsername(user) : undefined), [user]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentName = user ? getUserFirstOrLastName(user) : '';\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [name, setName] = useState(currentName || '');\n  const [bio, setBio] = useState(currentBio || '');\n\n  const currentAvatarHash = user && getChatAvatarHash(user);\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    unmarkProfileTouched();\n    unmarkAvatarTouched();\n  }, [userId]);\n\n  useEffect(() => {\n    setName(currentName || '');\n    setBio(currentBio || '');\n  }, [currentName, currentBio, user]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkProfileTouched();\n      unmarkAvatarTouched();\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleNameChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n    markFieldTouched();\n\n    if (error === ERROR_NAME_MISSING) {\n      setError(undefined);\n    }\n  });\n\n  const handleBioChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    markFieldTouched();\n  });\n\n  const handlePhotoChange = useLastCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n    markAvatarTouched();\n  });\n\n  const handleProfileSave = useLastCallback(() => {\n    const trimmedName = name.trim();\n    const trimmedBio = bio.trim();\n\n    if (!trimmedName.length) {\n      setError(ERROR_NAME_MISSING);\n      return;\n    }\n\n    setBotInfo({\n      ...(isFieldTouched && {\n        bot: user,\n        name: trimmedName,\n        description: trimmedBio,\n      }),\n    });\n\n    if (photo) {\n      uploadProfilePhoto({\n        file: photo,\n        ...(isAvatarTouched && { bot: user }),\n      });\n    }\n  });\n\n  const handleChangeEditIntro = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-intro` });\n  });\n\n  const handleChangeEditCommands = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-commands` });\n  });\n\n  const handleChangeSettings = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}` });\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSelectAvatar = useLastCallback((file: File) => {\n    markAvatarTouched();\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  });\n\n  if (!user) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title={lang('ChatSetPhotoOrVideo')}\n            disabled={isLoading}\n          />\n          <InputText\n            id=\"user-name\"\n            label={lang('PaymentCheckoutName')}\n            onChange={handleNameChange}\n            value={name}\n            error={error === ERROR_NAME_MISSING ? error : undefined}\n            teactExperimentControlled\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('DescriptionPlaceholder')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n        </div>\n        <div className=\"section\">\n          <div className=\"dialog-buttons\">\n            <ListItem icon=\"bot-commands-filled\" ripple onClick={handleChangeEditIntro}>\n              <span>{lang('BotEditIntro')}</span>\n            </ListItem>\n            <ListItem icon=\"bot-command\" ripple onClick={handleChangeEditCommands}>\n              <span>{lang('BotEditCommands')}</span>\n            </ListItem>\n            <ListItem icon=\"bots\" ripple onClick={handleChangeSettings}>\n              <span>{lang('BotChangeSettings')}</span>\n            </ListItem>\n            <div className=\"section-info section-info_push\">\n              {renderText(lang('BotManageInfo'), ['links'])}\n            </div>\n          </div>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isFieldTouched || isAvatarTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectBot(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    return {\n      userId,\n      user,\n      progress,\n      currentBio: userFullInfo?.bio,\n      maxBioLength,\n    };\n  },\n)(ManageBot));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isSignaturesShown: boolean;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  canPost?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isSignaturesShown,\n  canChangeInfo,\n  canInvite,\n  canPost,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    toggleSignatures,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!canInvite) return;\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId, canInvite]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleToggleSignatures = useCallback(() => {\n    toggleSignatures({ chatId, isEnabled: !isSignaturesShown });\n  }, [chatId, isSignaturesShown, toggleSignatures]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"channel-title\"\n            label={lang('EnterChannelName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"channel-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            onChange={handleAboutChange}\n            value={about}\n            maxLength={CHANNEL_MAX_DESCRIPTION}\n            maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          {canPost && (\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={isSignaturesShown}\n                label={lang('ChannelSignMessages')}\n                onChange={handleToggleSignatures}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{lang('Subscribers', chat.membersCount ?? 0, 'i')}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const isSignaturesShown = Boolean(chat?.isSignaturesShown);\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      isSignaturesShown,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      canPost: getHasAdminRight(chat, 'postMessages'),\n      exportedInvites: invites,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  isChannel?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const canAddNewAdmins = Boolean(chat?.isCreator || chat?.adminRights?.addAdmins);\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    return Object.values(adminMembersById).sort((a, b) => {\n      if (a.isOwner) {\n        return -1;\n      } else if (b.isOwner) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const handleAddAdminClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  }, [onScreenSelect]);\n\n  const getMemberStatus = useCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [lang]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\" dir=\"auto\">\n            {isChannel\n              ? 'You can add administrators to help you manage your channel.'\n              : 'You can add administrators to help you manage your group.'}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <i className=\"icon icon-add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: chat && isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useOldLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <SafeLink url={privateInviteLink} className=\"group-link\" text={privateInviteLink} />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <UsernameInput\n              asLink\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId) && selectManagement(global, chatId));\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n\n    return filterUsersByName(availableMemberIds, usersById, search);\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useOldLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <i className=\"icon icon-add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useOldLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <Checkbox\n              checked={isJoinToSend}\n              onCheck={handleJoinToSendCheck}\n              label={lang('ChannelSettingsJoinToSend')}\n            />\n            {isJoinToSend && (\n              <Checkbox\n                checked={isJoinRequest}\n                onCheck={handleJoinRequestCheck}\n                label={lang('ChannelSettingsJoinRequest')}\n              />\n            )}\n            <p className=\"text-muted\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId ? selectChat(global, linkedChatId) : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  });\n\n  const handleClickDiscussion = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  });\n\n  const handleClickReactions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  });\n\n  const handleClickPermissions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  });\n\n  const handleClickAdministrators = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  });\n\n  const handleClickInvites = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  });\n\n  const handleClickRequests = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  });\n\n  const handleSetPhoto = useLastCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleTitleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleAboutChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleUpdateGroup = useLastCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  });\n\n  const handleClickMembers = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  });\n\n  const handleTogglePreHistory = useLastCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  });\n\n  const handleForumToggle = useLastCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  });\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useLastCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  });\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"group-title\"\n            label={lang('GroupName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === GROUP_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"group-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            maxLength={GROUP_MAX_DESCRIPTION}\n            maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n            onChange={handleAboutChange}\n            value={about}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n    const canChangeInfo = chat.isCreator || getHasAdminRight(chat, 'changeInfo');\n    const canBanUsers = chat.isCreator || getHasAdminRight(chat, 'banUsers');\n    const canInvite = chat.isCreator || getHasAdminRight(chat, 'inviteUsers');\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo,\n      canBanUsers,\n      canInvite,\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.reactions.availableReactions,\n      canEditForum,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"postStories\"\n              checked={Boolean(permissions.postStories)}\n              label={lang('EditAdminPostStories')}\n              blocking\n              disabled={getControlIsDisabled('postStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"editStories\"\n              checked={Boolean(permissions.editStories)}\n              label={lang('EditAdminEditStories')}\n              blocking\n              disabled={getControlIsDisabled('editStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteStories\"\n              checked={Boolean(permissions.deleteStories)}\n              label={lang('EditAdminDeleteStories')}\n              blocking\n              disabled={getControlIsDisabled('deleteStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens, NewChatMembersProgress } from '../../../types';\n\nimport {\n  filterUsersByName, getHasAdminRight, isChatBasicGroup,\n  isChatChannel, isUserBot, isUserRightBanned, sortUserIds,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Switcher from '../../ui/Switcher';\nimport DeleteMemberModal from '../DeleteMemberModal';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  canAddMembers?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  canAddMembers,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement,\n    toggleParticipantsHidden, setNewChatMembersDialogState, toggleManagement,\n  } = getActions();\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  usePeerStoriesPolling(memberIds);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useLastCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useLastCallback(() => {\n    setDeletingUserId(undefined);\n  });\n\n  const handleToggleParticipantsHidden = useLastCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  });\n\n  const handleNewMemberDialogOpen = useLastCallback(() => {\n    toggleManagement();\n    setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.InProgress });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"custom-scroll\">\n        {canHideParticipants && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canAddMembers && (\n        <FloatingActionButton\n          isShown\n          onClick={handleNewMemberDialogOpen}\n          ariaLabel={lang('lng_channel_add_users')}\n        >\n          <Icon name=\"add-user-filled\" />\n        </FloatingActionButton>\n      )}\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const canAddMembers = chat && ((getHasAdminRight(chat, 'inviteUsers')\n        || (!isChannel && !isUserRightBanned(chat, 'inviteUsers')))\n      || chat.isCreator\n    );\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      canAddMembers,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  hasLinkedChat?: boolean;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  currentUserId,\n  hasLinkedChat,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatDefaultBannedRights, showNotification } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const lang = useOldLang();\n  const { isForum } = chat || {};\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const handleOpenMediaDropdown = useCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  }, [isMediaDropdownOpen]);\n\n  const handleDisabledClick = useCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  }, [lang, showNotification]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  }, [chat, permissions, setIsLoading, updateChatDefaultBannedRights]);\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = lang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, lang]);\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n\n          <div className=\"ListItem with-checkbox\">\n            <Checkbox\n              name=\"sendPlain\"\n              checked={!permissions.sendPlain}\n              label={lang('UserRestrictionsSend')}\n              blocking\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem with-checkbox\">\n            <Checkbox\n              name=\"sendMedia\"\n              checked={!permissions.sendMedia}\n              label={lang('UserRestrictionsSendMedia')}\n              blocking\n              rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n              onChange={handlePermissionChange}\n              onClickLabel={handleOpenMediaDropdown}\n            />\n          </div>\n          <div className=\"DropdownListTrap\">\n            <div\n              className={buildClassName(\n                'DropdownList',\n                isMediaDropdownOpen && 'DropdownList--open',\n              )}\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendPhotos\"\n                  checked={!permissions.sendPhotos}\n                  label={lang('UserRestrictionsSendPhotos')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendVideos\"\n                  checked={!permissions.sendVideos}\n                  label={lang('UserRestrictionsSendVideos')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendStickers\"\n                  checked={!permissions.sendStickers && !permissions.sendGifs}\n                  label={lang('UserRestrictionsSendStickers')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendAudios\"\n                  checked={!permissions.sendAudios}\n                  label={lang('UserRestrictionsSendMusic')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendDocs\"\n                  checked={!permissions.sendDocs}\n                  label={lang('UserRestrictionsSendFiles')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendVoices\"\n                  checked={!permissions.sendVoices}\n                  label={lang('UserRestrictionsSendVoices')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendRoundvideos\"\n                  checked={!permissions.sendRoundvideos}\n                  label={lang('UserRestrictionsSendRound')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"embedLinks\"\n                  checked={!permissions.embedLinks}\n                  label={lang('UserRestrictionsEmbedLinks')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendPolls\"\n                  checked={!permissions.sendPolls}\n                  label={lang('UserRestrictionsSendPolls')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className={buildClassName('part', isMediaDropdownOpen && 'shifted')}>\n            <div className=\"ListItem with-checkbox\">\n              <Checkbox\n                name=\"inviteUsers\"\n                checked={!permissions.inviteUsers}\n                label={lang('UserRestrictionsInviteUsers')}\n                blocking\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div\n              className=\"ListItem with-checkbox\"\n              onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n            >\n              <Checkbox\n                name=\"pinMessages\"\n                checked={!permissions.pinMessages}\n                label={lang('UserRestrictionsPinMessages')}\n                disabled={shouldDisablePermissionForPublicGroup}\n                blocking\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div\n              className=\"ListItem with-checkbox\"\n              onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n            >\n              <Checkbox\n                name=\"changeInfo\"\n                checked={!permissions.changeInfo}\n                label={lang('UserRestrictionsChangeInfo')}\n                blocking\n                disabled={shouldDisablePermissionForPublicGroup}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            {isForum && (\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"manageTopics\"\n                  checked={!permissions.manageTopics}\n                  label={lang('CreateTopicsPermission')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      hasLinkedChat,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useOldLang();\n\n  const { isForum } = chat || {};\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const handleOpenMediaDropdown = useCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  }, [isMediaDropdownOpen]);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('UserRestrictionsCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"sendPlain\"\n              checked={!permissions.sendPlain}\n              label={lang('UserRestrictionsSend')}\n              blocking\n              disabled={getControlIsDisabled('sendPlain')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"sendMedia\"\n              checked={!permissions.sendMedia}\n              label={lang('UserRestrictionsSendMedia')}\n              blocking\n              rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n              disabled={getControlIsDisabled('sendMedia')}\n              onChange={handlePermissionChange}\n              onClickLabel={handleOpenMediaDropdown}\n            />\n          </div>\n\n          <div className=\"DropdownListTrap\">\n            <div\n              className={buildClassName(\n                'DropdownList',\n                isMediaDropdownOpen && 'DropdownList--open',\n              )}\n            >\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendPhotos\"\n                  checked={!permissions.sendPhotos}\n                  label={lang('UserRestrictionsSendPhotos')}\n                  blocking\n                  disabled={getControlIsDisabled('sendPhotos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendVideos\"\n                  checked={!permissions.sendVideos}\n                  label={lang('UserRestrictionsSendVideos')}\n                  blocking\n                  disabled={getControlIsDisabled('sendVideos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendStickers\"\n                  checked={!permissions.sendStickers && !permissions.sendGifs}\n                  label={lang('UserRestrictionsSendStickers')}\n                  blocking\n                  disabled={getControlIsDisabled('sendStickers')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendAudios\"\n                  checked={!permissions.sendAudios}\n                  label={lang('UserRestrictionsSendMusic')}\n                  blocking\n                  disabled={getControlIsDisabled('sendAudios')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendDocs\"\n                  checked={!permissions.sendDocs}\n                  label={lang('UserRestrictionsSendFiles')}\n                  blocking\n                  disabled={getControlIsDisabled('sendDocs')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendVoices\"\n                  checked={!permissions.sendVoices}\n                  label={lang('UserRestrictionsSendVoices')}\n                  blocking\n                  disabled={getControlIsDisabled('sendVoices')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendRoundvideos\"\n                  checked={!permissions.sendRoundvideos}\n                  label={lang('UserRestrictionsSendRound')}\n                  blocking\n                  disabled={getControlIsDisabled('sendRoundvideos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"embedLinks\"\n                  checked={!permissions.embedLinks}\n                  label={lang('UserRestrictionsEmbedLinks')}\n                  blocking\n                  disabled={getControlIsDisabled('embedLinks')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendPolls\"\n                  checked={!permissions.sendPolls}\n                  label={lang('UserRestrictionsSendPolls')}\n                  blocking\n                  disabled={getControlIsDisabled('sendPolls')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className={buildClassName('part', isMediaDropdownOpen && 'shifted')}>\n\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"inviteUsers\"\n                checked={!permissions.inviteUsers}\n                label={lang('UserRestrictionsInviteUsers')}\n                blocking\n                disabled={getControlIsDisabled('inviteUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={!permissions.pinMessages}\n                label={lang('UserRestrictionsPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"changeInfo\"\n                checked={!permissions.changeInfo}\n                label={lang('UserRestrictionsChangeInfo')}\n                blocking\n                disabled={getControlIsDisabled('changeInfo')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            {isForum && (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"manageTopics\"\n                  checked={!permissions.manageTopics}\n                  label={lang('CreateTopicsPermission')}\n                  blocking\n                  disabled={getControlIsDisabled('manageTopics')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {lang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text=\"Are you sure you want to ban and remove this user from the group?\"\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"text-muted hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-header\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"text-muted hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-header\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"text-muted hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId] || {};\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    showNotification,\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  const handleCopyClicked = useCallback(() => {\n    copyTextToClipboard(invite!.link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [invite, lang, showNotification]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p>{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"text-muted\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p>{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"text-muted\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"custom-scroll\">\n        {!invite && (\n          <p className=\"text-muted\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <h3 className=\"link-title\">{invite.title || invite.link}</h3>\n              <input\n                className=\"form-control\"\n                value={invite.link}\n                readOnly\n                onClick={handleCopyClicked}\n              />\n              <Button className=\"copy-link\" onClick={handleCopyClicked}>{lang('CopyLink')}</Button>\n              {Boolean(expireDate) && (\n                <p className=\"text-muted\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p>{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId] || {};\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport LinkField from '../../common/LinkField';\nimport NothingFound from '../../common/NothingFound';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(forceUpdate, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = lang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = lang('PeopleJoined', usage);\n    } else {\n      text = lang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${lang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${lang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${lang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += lang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += lang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${lang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: lang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: lang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: lang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: lang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"text-muted\">{isChannel ? lang('PrimaryLinkHelpChannel') : lang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <LinkField\n            className=\"section\"\n            link={primaryInviteLink}\n            withShare\n            onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n            title={chat?.usernames ? lang('PublicLink') : lang('lng_create_permanent_link_title')}\n          />\n        )}\n        <div className=\"section\" teactFastList>\n          <Button isText key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {lang('CreateNewLink')}\n          </Button>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"text-muted hint\" key=\"links-hint\">{lang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"text-muted\" key=\"title\">{lang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{lang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={lang('DeleteAllRevokedLinks')}\n        text={lang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={lang('RevokeLink')}\n        text={lang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={lang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={lang('DeleteLink')}\n        text={lang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId] || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useOldLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"text-muted\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useOldLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n  }, [enabledReactions]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n    } else {\n      setLocalEnabledReactions(undefined);\n    }\n    setIsTouched(true);\n  }, [enabledReactions]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n    setIsTouched(true);\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info mt-4\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('AvailableReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n\n    return {\n      enabledReactions: selectChatFullInfo(global, chatId)?.enabledReactions,\n      availableReactions: global.reactions.availableReactions,\n      chat,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <InputText\n            id=\"user-first-name\"\n            label={lang('UserInfo.FirstNamePlaceholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            id=\"user-last-name\"\n            label={lang('UserInfo.LastNamePlaceholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n          />\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"text-muted\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageBot from './ManageBot';\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'bot':\n          return (\n            <ManageBot\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Record<string, string>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"maC_9u6e\",\"description\":\"zQ6lEVJ2\",\"checkout-picture\":\"JgWvLdK2\",\"checkoutPicture\":\"JgWvLdK2\",\"text\":\"T2pYH395\",\"checkout-title\":\"HadolzeF\",\"checkoutTitle\":\"HadolzeF\",\"checkout-description\":\"oZW7mUNP\",\"checkoutDescription\":\"oZW7mUNP\",\"price-info\":\"P618Q3yr\",\"priceInfo\":\"P618Q3yr\",\"price-info-item\":\"XNNG_ajy\",\"priceInfoItem\":\"XNNG_ajy\",\"price-info-item-main\":\"D9gYNLVk\",\"priceInfoItemMain\":\"D9gYNLVk\",\"price-info-item-title\":\"NtY5Aah7\",\"priceInfoItemTitle\":\"NtY5Aah7\",\"tipsList\":\"WHO341eB\",\"tipsItem\":\"ksLlzBxw\",\"tipsItem_active\":\"J4yem62L\",\"tipsItemActive\":\"J4yem62L\",\"invoice-info\":\"U2IBOLP1\",\"invoiceInfo\":\"U2IBOLP1\",\"provider\":\"kqWcdro1\",\"stripe\":\"xKztZrna\",\"smartglocal\":\"X_Ge1o4u\",\"checkout-info-item-info-title\":\"ysWuPklS\",\"checkoutInfoItemInfoTitle\":\"ysWuPklS\",\"checkout-info-item-info-data\":\"MpC_P8_c\",\"checkoutInfoItemInfoData\":\"MpC_P8_c\",\"tos-checkbox\":\"OrRb0xG7\",\"tosCheckbox\":\"OrRb0xG7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiInvoice, ApiPaymentCredentials,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { LangCode, Price } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  invoice?: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n    botName?: string;\n  };\n  prices?: Price[];\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: Price[];\n  currency: string;\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst Checkout: FC<OwnProps> = ({\n  invoice,\n  prices,\n  shippingPrices,\n  checkoutInfo,\n  currency,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const lang = useOldLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    photo, title, text, termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(tipAmount!, currency, lang.code)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(tip, currency, lang.code, { shouldOmitFractions: true })}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = lang('PaymentCheckoutAcceptRecurrent', botName);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, lang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && <img className={styles.checkoutPicture} src={photoUrl} draggable={false} alt=\"\" />}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {text && <div className={styles.checkoutDescription}>{renderText(text, ['br', 'links', 'emoji'])}</div>}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {prices && prices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang.code, lang('Checkout.TotalAmount'), totalPrice, currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {!isPaymentFormUrl && renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: lang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: lang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || (!isInteractive && shippingAddress)) && renderCheckoutItem({\n          title: shippingAddress,\n          label: lang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: lang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: lang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || (!isInteractive && shippingMethod)) && renderCheckoutItem({\n          title: shippingMethod,\n          label: lang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  langCode: LangCode | undefined, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(value, currency, langCode)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  const isMultiline = Boolean(title && label !== title);\n\n  return (\n    <ListItem\n      multiline={isMultiline}\n      narrow={isMultiline}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n      leftElement={customIcon && <i className={buildClassName('icon', customIcon)} />}\n    >\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n  onPaymentFormSubmit?: (eventData: PaymentFormSubmitEvent['eventData']) => void;\n};\n\nexport interface PaymentFormSubmitEvent {\n  eventType: 'payment_form_submit';\n  eventData: {\n    credentials: {\n      token: string;\n      type: string;\n    };\n    title: string;\n  };\n}\n\ninterface WebAppOpenTgLinkEvent {\n  eventType: 'web_app_open_tg_link';\n  eventData: {\n    path_full?: string;\n  };\n}\n\ntype IframeCallbackEvent = PaymentFormSubmitEvent | WebAppOpenTgLinkEvent;\n\nconst ConfirmPayment: FC<OwnProps> = ({\n  url, noRedirect, onClose, onPaymentFormSubmit,\n}) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useOldLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n      switch (eventType) {\n        case 'web_app_open_tg_link':\n          if (!noRedirect) {\n            const linkUrl = TME_LINK_PREFIX + eventData.path_full!;\n            openTelegramLink({ url: linkUrl });\n          }\n          onClose();\n          break;\n        case 'payment_form_submit':\n          if (onPaymentFormSubmit) {\n            onPaymentFormSubmit(eventData);\n          }\n          break;\n        default:\n          onClose();\n          break;\n      }\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink, onPaymentFormSubmit]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  error?: string;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  error,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const lang = useOldLang();\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={error ? lang(error) : undefined}\n        hint={passwordHint}\n        description={lang('PaymentConfirmationMessage', cardName)}\n        placeholder={lang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    error: payment.error?.message,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.savedCredentials,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMeasure(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 19;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const lang = useOldLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber}\n        />\n        { needCardholderName && (\n          <InputText\n            label={lang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry}\n          />\n          <InputText\n            label={lang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv}\n            teactExperimentControlled\n          />\n        </section>\n        { needCountry || needZip ? (\n          <h5>{lang('PaymentBillingAddress')}</h5>\n        ) : undefined }\n        { needCountry && (\n          <Select\n            label={lang('PaymentShippingCountry')}\n            onChange={handleCountryChange}\n            value={state.billingCountry}\n            hasArrow={Boolean(true)}\n            id=\"billing-country\"\n            error={formErrors.billingCountry}\n            tabIndex={0}\n            ref={selectCountryRef}\n          >\n            {\n              countryList.map(({ defaultName, name }) => (\n                <option\n                  value={defaultName}\n                  className=\"county-item\"\n                  selected={defaultName === state.billingCountry}\n                >\n                  {defaultName || name}\n                </option>\n              ))\n            }\n          </Select>\n        ) }\n        { needZip && (\n          <InputText\n            label={lang('PaymentShippingZipPlaceholder')}\n            onChange={handleBillingPostCodeChange}\n            value={state.billingZip}\n            inputMode=\"text\"\n            tabIndex={0}\n            maxLength={12}\n            error={formErrors.billingZip}\n          />\n        )}\n        <Checkbox\n          label={lang('PaymentCardSavePaymentInformation')}\n          checked={canSaveCredentials ? state.saveCredentials : false}\n          tabIndex={0}\n          onChange={handleChangeSaveCredentials}\n          disabled={!canSaveCredentials}\n        />\n        <p className=\"description\">\n          {lang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useOldLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(amount, currency, lang.code),\n    value,\n  }))), [shippingOptions, currency, lang.code]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{lang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const lang = useOldLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{lang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={lang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1}\n            />\n            <InputText\n              label={lang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2}\n            />\n            <InputText\n              label={lang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city}\n            />\n            <InputText\n              label={lang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state}\n            />\n            <Select\n              label={lang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={lang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{lang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={lang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={lang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={lang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={lang('PaymentShippingSave')}\n          subLabel={lang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiCountry, ApiPaymentCredentials } from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { Price, ShippingOption } from '../../types';\nimport type { PaymentFormSubmitEvent } from './ConfirmPayment';\nimport { PaymentStep } from '../../types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrencyAsString } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst DONATE_PROVIDER_URL = 'https://payment.smart-glocal.com';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isNameRequested?: boolean;\n  isShippingAddressRequested?: boolean;\n  isPhoneRequested?: boolean;\n  isEmailRequested?: boolean;\n  shouldSendPhoneToProvider?: boolean;\n  shouldSendEmailToProvider?: boolean;\n  currency?: string;\n  prices?: Price[];\n  isProviderError?: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions?: boolean;\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\ntype GlobalStateProps = Pick<TabState['payment'], (\n  'step' | 'shippingOptions' |\n  'savedInfo' | 'canSaveCredentials' | 'nativeProvider' | 'passwordMissing' | 'invoice' | 'error'\n)>;\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps & GlobalStateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  shippingOptions,\n  savedInfo,\n  canSaveCredentials,\n  isNameRequested,\n  isShippingAddressRequested,\n  isPhoneRequested,\n  isEmailRequested,\n  shouldSendPhoneToProvider,\n  shouldSendEmailToProvider,\n  currency,\n  passwordMissing,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  prices,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n    setSmartGlocalCardInfo,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePrevious(step, true);\n  const prevRequestId = usePrevious(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.message,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [savedInfo, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.description || 'Error'}</h4>\n        <p>{error.description || 'Error'}</p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handlePaymentFormSubmit = useCallback((eventData: PaymentFormSubmitEvent['eventData']) => {\n    const { credentials } = eventData;\n    setSmartGlocalCardInfo(credentials);\n    sendForm();\n  }, [sendForm]);\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            prices={prices}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            isPaymentFormUrl={isPaymentFormUrl}\n            currency={currency!}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n            botName={botName}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!passwordMissing && canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(isShippingAddressRequested)}\n            needEmail={Boolean(isEmailRequested || shouldSendEmailToProvider)}\n            needPhone={Boolean(isPhoneRequested || shouldSendPhoneToProvider)}\n            needName={Boolean(isNameRequested)}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={currency!}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onPaymentFormSubmit={handlePaymentFormSubmit}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const handleButtonClick = useLastCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (isPaymentFormUrl) {\n          setIsLoading(true);\n          setStep(PaymentStep.ConfirmPayment);\n          return;\n        }\n\n        if (savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (isEmailRequested && !email)\n          || (isPhoneRequested && !phone)\n          || (isNameRequested && !fullName);\n\n        if ((isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (isShippingAddressRequested && !paymentState.shipping && shippingOptions?.length) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  });\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return lang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return lang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return lang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return lang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return lang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return lang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return lang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, lang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? lang('Checkout.PayPrice', formatCurrencyAsString(totalPrice, currency!, lang.code))\n    : lang('Next');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.termsUrl) && !isTosAccepted;\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <i className={buildClassName(\n            'icon', step === PaymentStep.Checkout ? 'icon-close' : 'icon-arrow-left',\n          )}\n          />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition\n          name=\"slide\"\n          activeKey={step}\n          shouldCleanup\n          cleanupOnlyKey={PaymentStep.ConfirmPayment}\n        >\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps & GlobalStateProps => {\n    const {\n      step,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      invoice,\n      invoiceContainer,\n      nativeProvider,\n      nativeParams,\n      passwordMissing,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      savedCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n      url,\n      botId,\n      type,\n    } = selectTabState(global).payment;\n\n    const countryList = global.countryList.general;\n\n    // Handled in `StarPaymentModal`\n    if (type === 'stars') {\n      return {\n        countryList,\n      };\n    }\n\n    let providerName = nativeProvider;\n    if (!providerName && url) {\n      providerName = url.startsWith(DONATE_PROVIDER_URL) ? DONATE_PROVIDER : undefined;\n    }\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId!) : undefined;\n    const isProviderError = Boolean(invoice && (!providerName || !SUPPORTED_PROVIDERS.has(providerName)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const {\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n    } = (invoiceContainer || {});\n    const bot = botId ? selectUser(global, botId) : undefined;\n    const botName = getUserFullName(bot);\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      nativeProvider: providerName,\n      passwordMissing,\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n      isProviderError,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl: confirmPaymentUrl ?? url,\n      isPaymentFormUrl: Boolean(!nativeProvider && url),\n      countryList,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      savedCredentials,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n      botName,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: Price[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"at4C5dtI\",\"positive\":\"ziem0hIt\",\"negative\":\"w5IBroJ0\",\"header\":\"LGfGeGBe\",\"amount\":\"qw8_2l5a\",\"title\":\"jUEywRxM\",\"description\":\"fqcBAivG\",\"tid\":\"Ryt8HXRa\",\"footer\":\"YxElnkFc\",\"starsBackground\":\"gqB7YL11\",\"mediaShift\":\"IKoS4bgV\",\"copyIcon\":\"VjTcIW6A\",\"mediaPreview\":\"gKrSXXpY\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiInvoice,\n  ApiPeer,\n  ApiReceipt, ApiReceiptRegular, ApiShippingAddress,\n  ApiStarsTransactionPeer,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { getMessageLink } from '../../global/helpers';\nimport { buildStarsTransactionCustomPeer, formatStarsTransactionAmount } from '../../global/helpers/payments';\nimport { selectPeer, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatDateTimeToString } from '../../util/dates/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport StarIcon from '../common/icons/StarIcon';\nimport SafeLink from '../common/SafeLink';\nimport TableInfoModal, { type TableData } from '../modals/common/TableInfoModal';\nimport PaidMediaThumb from '../modals/stars/PaidMediaThumb';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\nimport styles from './ReceiptModal.module.scss';\n\nimport StarsBackground from '../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  receipt?: ApiReceipt;\n  peer?: ApiPeer;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen, receipt, peer, onClose,\n}) => {\n  const { showNotification, openMediaViewer } = getActions();\n  const lang = useOldLang();\n\n  const handleOpenMedia = useLastCallback(() => {\n    const media = receipt?.type === 'stars' && receipt.media;\n    if (!media) return;\n\n    openMediaViewer({\n      origin: MediaViewerOrigin.StarsTransaction,\n      standaloneMedia: media.flatMap((item) => Object.values(item)),\n    });\n  });\n\n  const starModalData = useMemo(() => {\n    if (receipt?.type !== 'stars') return undefined;\n\n    const customPeer = (receipt.peer && receipt.peer.type !== 'peer' && buildStarsTransactionCustomPeer(receipt.peer))\n      || undefined;\n\n    const botId = receipt.botId || (receipt.peer?.type === 'peer' ? receipt.peer.id : undefined);\n    const toName = receipt.peer && lang(getStarsPeerTitleKey(receipt.peer));\n\n    const title = receipt.title || (customPeer ? lang(customPeer.titleKey) : undefined);\n\n    const messageLink = peer && receipt.messageId ? getMessageLink(peer, undefined, receipt.messageId) : undefined;\n\n    const media = receipt.media;\n\n    const mediaAmount = media?.length || 0;\n    const areAllPhotos = media?.every((m) => !m.video);\n    const areAllVideos = media?.every((m) => !m.photo);\n\n    const mediaText = areAllPhotos ? lang('Stars.Transfer.Photos', mediaAmount)\n      : areAllVideos ? lang('Stars.Transfer.Videos', mediaAmount)\n        : lang('Media', mediaAmount);\n\n    const description = receipt.text || (media ? mediaText : undefined);\n\n    const header = (\n      <div className={styles.header}>\n        {media && (\n          <PaidMediaThumb\n            className={buildClassName(styles.mediaPreview, 'transaction-media-preview')}\n            media={media}\n            onClick={handleOpenMedia}\n          />\n        )}\n        <img\n          className={buildClassName(styles.starsBackground, receipt.media && styles.mediaShift)}\n          src={StarsBackground}\n          alt=\"\"\n          draggable={false}\n        />\n        {title && <h1 className={styles.title}>{title}</h1>}\n        <p className={styles.description}>{description}</p>\n        <p className={styles.amount}>\n          <span className={buildClassName(styles.amount, receipt.totalAmount < 0 ? styles.negative : styles.positive)}>\n            {formatStarsTransactionAmount(receipt.totalAmount)}\n          </span>\n          <StarIcon type=\"gold\" size=\"big\" />\n        </p>\n      </div>\n    );\n\n    const tableData: TableData = [];\n\n    tableData.push([\n      lang(receipt.totalAmount < 0 ? 'Stars.Transaction.To' : 'Stars.Transaction.Via'),\n      botId ? { chatId: botId } : toName || '',\n    ]);\n\n    if (messageLink) {\n      tableData.push([lang('Stars.Transaction.Media'), <SafeLink url={messageLink} text={messageLink} />]);\n    }\n\n    tableData.push([\n      lang('Stars.Transaction.Id'),\n      (\n        <span\n          className={styles.tid}\n          onClick={() => {\n            copyTextToClipboard(receipt.transactionId);\n            showNotification({\n              message: lang('StarsTransactionIDCopied'),\n            });\n          }}\n        >\n          {receipt.transactionId}\n          <Icon className={styles.copyIcon} name=\"copy\" />\n        </span>\n      ),\n    ]);\n\n    tableData.push([\n      lang('Stars.Transaction.Date'),\n      formatDateTimeToString(receipt.date * 1000, lang.code, true),\n    ]);\n\n    const footerText = lang('lng_credits_box_out_about');\n    const footerTextParts = footerText.split('{link}');\n\n    const footer = (\n      <span className={styles.footer}>\n        {footerTextParts[0]}\n        <SafeLink url={lang('StarsTOSLink')} text={lang('lng_credits_summary_options_about_link')} />\n        {footerTextParts[1]}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n      avatarPeer: !receipt.photo ? (peer || customPeer) : undefined,\n    };\n  }, [lang, receipt, peer]);\n\n  if (receipt?.type === 'regular') {\n    return <ReceiptModalRegular isOpen={isOpen} receipt={receipt} onClose={onClose} />;\n  }\n\n  return (\n    <TableInfoModal\n      isOpen={isOpen}\n      className={styles.modal}\n      header={starModalData?.header}\n      tableData={starModalData?.tableData}\n      footer={starModalData?.footer}\n      noHeaderImage={Boolean(receipt?.media)}\n      headerAvatarWebPhoto={receipt?.photo}\n      headerAvatarPeer={starModalData?.avatarPeer}\n      buttonText={lang('OK')}\n      onClose={onClose}\n    />\n  );\n};\n\nfunction ReceiptModalRegular({\n  isOpen, receipt, onClose,\n}: {\n  isOpen?: boolean;\n  receipt: ApiReceiptRegular;\n  onClose: NoneToVoidFunction;\n}) {\n  const {\n    credentialsTitle,\n    currency,\n    prices,\n    tipAmount,\n    totalAmount,\n    info,\n    photo,\n    shippingMethod,\n    shippingPrices,\n    text,\n    title,\n  } = receipt;\n  const lang = useOldLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const checkoutInfo = useMemo(() => {\n    return getCheckoutInfo(credentialsTitle, info, shippingMethod);\n  }, [info, shippingMethod, credentialsTitle]);\n\n  const invoice: ApiInvoice = useMemo(() => {\n    return {\n      mediaType: 'invoice',\n      photo,\n      text: text!,\n      title: title!,\n      amount: totalAmount!,\n      currency: currency!,\n    };\n  }, [currency, photo, text, title, totalAmount]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      <div>\n        <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className=\"close-button\"\n            color=\"translucent\"\n            round\n            size=\"smaller\"\n            onClick={closeModal}\n            ariaLabel=\"Close\"\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <h3> {lang('PaymentReceipt')} </h3>\n        </div>\n        <div className=\"receipt-content custom-scroll\">\n          <Checkout\n            prices={prices}\n            shippingPrices={shippingPrices}\n            totalPrice={totalAmount}\n            tipAmount={tipAmount}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            currency={currency!}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n\n    const peerId = receipt?.type === 'stars' && (receipt.botId || (receipt.peer?.type === 'peer' && receipt.peer.id));\n    const peer = peerId ? selectPeer(global, peerId) : undefined;\n\n    return {\n      receipt,\n      peer,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?:\n  { phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getStarsPeerTitleKey(peer: ApiStarsTransactionPeer) {\n  switch (peer.type) {\n    case 'appStore':\n      return 'AppStore';\n    case 'playMarket':\n      return 'PlayMarket';\n    case 'fragment':\n      return 'Fragment';\n    case 'premiumBot':\n      return 'StarsTransactionBot';\n    case 'ads':\n      return 'StarsTransactionAds';\n    default:\n      return 'Stars.Transaction.Unsupported.Title';\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"n8eENbaR\",\"closeButton\":\"smosGkw9\",\"contentText\":\"Qo4PtFZI\",\"title\":\"wtfpombl\",\"separator\":\"UoMeVIyC\",\"userPicker\":\"nEYyTS_m\",\"sendInvites\":\"Ttkq3nqt\",\"avatarList\":\"Nc3SOtKd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Picker from '../../common/Picker';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './InviteViaLinkModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['inviteViaLinkModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n};\n\nconst InviteViaLinkModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n}) => {\n  const { sendInviteMessages, closeInviteViaLinkModal, openPremiumModal } = getActions();\n  const { missingUsers } = modal || {};\n\n  const lang = useOldLang();\n  const [selectedMemberIds, setSelectedMemberIds] = useState<string[]>([]);\n\n  const userIds = useMemo(() => missingUsers?.map((user) => user.id), [missingUsers]);\n  const [unselectableIds, selectableIds] = useMemo(() => {\n    if (!missingUsers?.length) return [[], []];\n    const [requirePremiumIds, regularIds] = partition(missingUsers, (user) => user.isRequiringPremiumToMessage);\n    return [requirePremiumIds.map((user) => user.id), regularIds.map((user) => user.id)];\n  }, [missingUsers]);\n\n  const invitableWithPremiumIds = useMemo(() => {\n    return missingUsers?.filter((user) => user.isRequiringPremiumToInvite || user.isRequiringPremiumToMessage)\n      .map((user) => user.id);\n  }, [missingUsers]);\n\n  const isEveryPremiumBlocksPm = useMemo(() => {\n    if (!missingUsers) return undefined;\n    return !missingUsers.some((user) => user.isRequiringPremiumToInvite && !user.isRequiringPremiumToMessage);\n  }, [missingUsers]);\n\n  const topListPeers = useMemo(() => {\n    const users = getGlobal().users.byId;\n    return invitableWithPremiumIds?.map((id) => users[id]);\n  }, [invitableWithPremiumIds]);\n\n  useEffect(() => {\n    setSelectedMemberIds(selectableIds);\n  }, [selectableIds]);\n\n  const handleClose = useLastCallback(() => closeInviteViaLinkModal());\n\n  const handleSendInviteLink = useCallback(() => {\n    sendInviteMessages({ chatId: chat!.id, userIds: selectedMemberIds! });\n    closeInviteViaLinkModal();\n  }, [selectedMemberIds, chat]);\n\n  const handleOpenPremiumModal = useCallback(() => {\n    openPremiumModal();\n  }, []);\n\n  const canSendInviteLink = useMemo(() => {\n    if (!chat) return undefined;\n    return Boolean(chat?.isCreator || chat?.adminRights?.inviteUsers);\n  }, [chat]);\n\n  const inviteSectionText = useMemo(() => {\n    return canSendInviteLink\n      ? lang(missingUsers?.length === 1 ? 'InviteBlockedOneMessage' : 'InviteBlockedManyMessage')\n      : lang('InviteRestrictedUsers2', missingUsers?.length);\n  }, [canSendInviteLink, lang, missingUsers?.length]);\n\n  const premiumSectionText = useMemo(() => {\n    if (!invitableWithPremiumIds?.length || !topListPeers?.length) return undefined;\n    const prefix = isEveryPremiumBlocksPm ? 'InviteMessagePremiumBlocked' : 'InvitePremiumBlocked';\n    let langKey = `${prefix}One`;\n    let params = [getUserFullName(topListPeers[0])];\n    if (invitableWithPremiumIds.length === 2) {\n      langKey = `${prefix}Two`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1])];\n    } else if (invitableWithPremiumIds.length === 3) {\n      langKey = `${prefix}Three`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1]), getUserFullName(topListPeers[2])];\n    } else if (invitableWithPremiumIds.length > 3) {\n      langKey = `${prefix}Many`;\n      params = [\n        getUserFullName(topListPeers[0]),\n        getUserFullName(topListPeers[1]),\n        (invitableWithPremiumIds!.length - 2).toString(),\n      ];\n    }\n\n    return lang(langKey, params, undefined, topListPeers.length);\n  }, [invitableWithPremiumIds, isEveryPremiumBlocksPm, lang, topListPeers]);\n\n  if (!userIds) return undefined;\n\n  const hasPremiumSection = Boolean(topListPeers?.length);\n  const hasSelectableSection = Boolean(selectableIds?.length);\n\n  return (\n    <Modal\n      isOpen={Boolean(userIds && chat)}\n      contentClassName={styles.content}\n      onClose={handleClose}\n      isSlim\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {premiumSectionText && (\n        <>\n          <AvatarList\n            className={styles.avatarList}\n            peers={topListPeers}\n            size=\"large\"\n          />\n          <h3 className={styles.title}>\n            {canSendInviteLink ? lang('InvitePremiumBlockedTitle') : lang('ChannelInviteViaLinkRestricted')}\n          </h3>\n          <p className={styles.contentText}>\n            {renderText(premiumSectionText, ['simple_markdown'])}\n          </p>\n          <Button\n            withPremiumGradient\n            isShiny\n            size=\"smaller\"\n            onClick={handleOpenPremiumModal}\n          >\n            {lang('InvitePremiumBlockedSubscribe')}\n          </Button>\n        </>\n      )}\n      {hasPremiumSection && hasSelectableSection && (\n        <Separator className={styles.separator}>\n          {lang('InvitePremiumBlockedOr')}\n        </Separator>\n      )}\n      {hasSelectableSection && (\n        <>\n          <h3 className={styles.title}>{lang('InviteBlockedTitle')}</h3>\n          <p className={styles.contentText}>\n            {inviteSectionText}\n          </p>\n          <Picker\n            className={styles.userPicker}\n            itemIds={userIds!}\n            selectedIds={selectedMemberIds}\n            lockedUnselectedIds={unselectableIds}\n            lockedUnselectedSubtitle={lang('InvitePremiumBlockedUser')}\n            onSelectedIdsChange={setSelectedMemberIds}\n            isViewOnly={!canSendInviteLink}\n            isRoundCheckbox\n          />\n          {canSendInviteLink && (\n            <Button\n              className={styles.sendInvites}\n              size=\"smaller\"\n              onClick={handleSendInviteLink}\n              disabled={!selectedMemberIds.length}\n            >\n              {lang('SendInviteLink.ActionInvite')}\n            </Button>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal?.chatId ? selectChat(global, modal.chatId) : undefined;\n\n    return {\n      chat,\n    };\n  },\n)(InviteViaLinkModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c3xMWwzW\",\"fade-in-opacity\":\"cHb04cFv\",\"fadeInOpacity\":\"cHb04cFv\",\"closing\":\"_0HkZ8ITm\",\"voice\":\"VLiJWMs0\",\"video\":\"ML2YEpGq\",\"footer\":\"VWy1qXJL\",\"closeBtn\":\"FfMrCmD9\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { isOwnMessage } from '../../../global/helpers';\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Audio from '../../common/Audio';\nimport RoundVideo from '../../middle/message/RoundVideo';\nimport Button from '../../ui/Button';\n\nimport styles from './OneTimeMediaModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['oneTimeMediaModal'];\n};\n\nconst OneTimeMediaModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    closeOneTimeMediaModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const message = useCurrentOrPrev(modal?.message, true);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(modal));\n\n  const handlePlayVoice = useLastCallback(() => {\n    return undefined;\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeOneTimeMediaModal();\n  });\n\n  if (!shouldRender || !message) {\n    return undefined;\n  }\n\n  const isOwn = isOwnMessage(message);\n  const theme = selectTheme(getGlobal());\n  const closeBtnTitle = isOwn ? lang('Chat.Voice.Single.Close') : lang('Chat.Voice.Single.DeleteAndClose');\n\n  function renderMedia() {\n    if (!message?.content) {\n      return undefined;\n    }\n    const { voice, video } = message.content;\n    if (voice) {\n      return (\n        <Audio\n          className={styles.voice}\n          theme={theme}\n          message={message}\n          origin={AudioOrigin.OneTimeModal}\n          autoPlay\n          onPlay={handlePlayVoice}\n          onPause={handleClose}\n        />\n      );\n    } else if (video?.isRound) {\n      return (\n        <RoundVideo\n          className={styles.video}\n          message={message}\n          origin=\"oneTimeModal\"\n          onStop={handleClose}\n        />\n      );\n    }\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, transitionClassNames)}>\n      {renderMedia()}\n      <div className={styles.footer}>\n        <Button\n          faded\n          onClick={handleClose}\n          pill\n          size=\"smaller\"\n          color={theme === 'dark' ? 'dark' : 'secondary'}\n          className={styles.closeBtn}\n        >\n          {closeBtnTitle}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(OneTimeMediaModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker);\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n"],"names":["getViewableMedia","params","type","media","mediaIndex","isSingle","length","avatar","avatarOwner","photos","action","document","photo","video","webPage","paidMedia","getMessageContent","message","isDocumentPhoto","isDocumentVideo","webPagePhoto","webPageVideo","extendedMedia","extendedPhoto","extendedVideo","isGif","createGhost","source","origin","ghost","createElement","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","ProfileAvatar","SettingsAvatar","profileInfo","querySelector","cloneNode","isMessageImageFullyVisible","container","imageEl","messageListElement","imgOffsetTop","offsetTop","closest","id","includes","parentElement","scrollTop","offsetHeight","getNodes","index","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","SharedMedia","SearchResult","MiddleHeaderAvatar","SuggestedAvatar","StarsTransaction","undefined","ScheduledInline","Inline","MESSAGE_CONTENT_SELECTOR","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","style","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","useMediaProps","_ref","isAvatar","delay","isVideoAvatar","mediaType","isVideo","isDocument","isRound","isPhoto","isFromSharedMedia","isFromSearch","getMediaOrAvatarHash","useMemo","isFull","getVideoAvatarMediaHash","getMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","BlobUrl","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","arguments","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","useEffect","onload","blurredDataUri","size","clear","set","window","setTimeout","useBlur","Boolean","useBlurSync","getMediaThumbUri","bestData","mediaSize","getMediaFileSize","isLocal","dimensions","VIDEO_AVATAR_FULL_DIMENSIONS","AVATAR_FULL_DIMENSIONS","getPhotoFullDimensions","getVideoDimensions","getZoomChange","setZoomChange","useZoomChange","memo","withGlobal","global","_ref4","isSchedule","threadId","selectCurrentMessageList","canDeleteForAll","selectAllowedMessageActions","chat","selectChat","chatId","contactName","isUserId","getUserFirstOrLastName","selectUser","getPrivateChatUserId","isChatWithBot","selectBot","willDeleteForCurrentUserOnly","isChatBasicGroup","willDeleteForAll","isChatSuperGroup","isOpen","album","onConfirm","onClose","deleteMessages","deleteScheduledMessages","getActions","handleDeleteMessageForAll","useCallback","messageIds","messages","map","_ref2","shouldDeleteForAll","handleDeleteMessageForSelf","_ref3","lang","useOldLang","React","Modal","onEnter","className","title","Button","color","isText","onClick","renderText","profileId","deleteProfilePhoto","deleteChatPhoto","handleDeletePhoto","item","canUpdateMedia","tabState","selectTabState","mediaViewer","avatarPhoto","currentMessageList","isProtected","selectIsMessageProtected","activeDownloads","selectActiveDownloads","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","isCurrentAvatar","avatarHash","canUpdate","messageListType","canReport","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","useFlag","isMobile","useAppLayout","downloadMedia","cancelMediaDownload","updateProfilePhoto","updateChatPhoto","openMediaViewer","isMessage","fileName","getMediaFilename","isDownloading","getIsDownloading","downloadProgress","handleDownloadClick","useLastCallback","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","isAvatarView","forceOnHeavyAnimation","MenuButton","onTrigger","round","ariaLabel","renderDeleteModals","DeleteMessageModal","DeleteProfilePhotoModal","menuItems","isForwardingAllowed","content","push","icon","children","Math","href","download","destructive","DropdownMenu","trigger","positionX","MenuItem","key","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","text","isForVideo","isForceMobileVersion","isMultiline","setIsMultiline","useState","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","classNames","buildClassName","e","stopPropagation","dir","getCurrentTime","setCurrentTime","useCurrentTimeSignal","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","forEach","connector","request","name","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","data","result","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","duration","bufferedRanges","isReady","posterSize","playbackRate","isActive","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","remaining","animateNumber","from","to","onUpdate","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","stopAnimation","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","styles","start","end","PLAYBACK_RATES","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","SeekLine","ripple","RangeSlider","bold","value","onChange","renderTime","formatFileSize","Menu","positionY","autoClose","rate","disabled","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","isUnsupported","useUnsupportedMedia","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransition","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onContextMenu","onDoubleClick","_extends","autoPlay","controlsList","playsInline","loop","onWaiting","onPlay","onEnded","onPause","onTimeUpdate","join","VideoPlayerControls","textMessage","withAnimation","isMoving","onFooterClick","toggleControlsOnMove","VideoPlayer","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","textParts","renderMessageText","forcePlayback","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","MediaViewerFooter","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelZoomAnimation","SwipeDirection","isLoadingMoreMedia","isSynced","loadMoreItemsIfNeeded","getNextItem","selectItem","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveItem","setActiveItem","activeItemRef","isScaled","activeItem","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectItemDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","useTimeout","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","cActiveItem","nextItem","timing","changeSlideOnClick","target","calculateOffsetBoundaries","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","max","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","min","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","event","captureEvent","cancelDrag","dragOffsetX","dragOffsetY","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","_ref5","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","prevItem","hasPrev","hasNext","MediaViewerContent","isRtl","toFixed","element","selector","matches","messageSender","selectSender","owner","fallbackAvatar","selectUserFullInfo","fallbackPhoto","isFallbackAvatar","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","subtitle","date","formattedDate","formatMediaDateTime","parts","isChannel","isChatChannel","isGroup","isChatGroup","senderTitle","getSenderTitle","Avatar","peer","shouldSkipHistoryAnimations","withDynamicLoading","standaloneMedia","selectPerformanceSettingsValue","currentUserId","isChatWithSelf","selectIsChatWithSelf","selectPeer","isChatAdmin","chatMessages","selectScheduledMessage","selectChatMessage","selectChatScheduledMessages","selectChatMessages","isOriginInline","isOriginAlbum","collectedMessageIds","currentSearch","selectCurrentChatMediaSearch","isLoading","foundIds","currentSegment","selectCurrentSharedMediaSearch","resultsByType","selectOutlyingListByMessageId","selectListedIds","openForwardMenu","searchChatMediaMessages","animationKey","senderId","prevSenderId","usePrevious","headerAnimation","isGhostAnimation","isReportModalOpen","openReportModal","closeReportModal","currentItem","getMediaViewerItem","messageMediaIds","getChatMediaMessageIds","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","prevMessage","prevIsHidden","prevOrigin","prevBestImageData","shouldAnimateOpening","dispatchHeavyAnimationEvent","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","handleFooterClick","handleForward","fromChatId","captureEscKeyListener","stopCurrentAudio","currentMediaMessageId","fromMedia","fromMediaIndex","nextIndex","fromAvatarOwner","fromMessage","getMessagePaidMedia","indexOf","nextMessageId","nextMessage","openMediaViewerItem","itemChatId","itemMessageId","itemStandaloneMedia","handleBeforeDelete","prevMedia","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","SenderInfo","MediaViewerActions","ReportModal","subject","peerId","MediaViewerSlides","avatarOwnerId","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","ctx","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","RADIUS","userId","getPeerStoryHtmlId","StoryViewerOrigin","StoryRibbon","storyRibbonStyles","root","ChatList","BASE_SCREEN_WIDTH","BASE_SCREEN_HEIGHT","BASE_ACTIVE_SLIDE_WIDTH","BASE_ACTIVE_SLIDE_HEIGHT","BASE_SLIDE_WIDTH","BASE_SLIDE_HEIGHT","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","slide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","story","isCurrentUserPremium","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","hasForwardInfo","forwardInfo","thumbnail","previewHash","getStoryMediaHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","canDownload","noForwards","downloadHash","downloadMediaData","storyViewer","isStealthModalOpen","stealthMode","stories","selectIsCurrentUserPremium","toggleStealthModal","activateStealthMode","showNotification","openPremiumModal","isOnCooldown","setIsOnCooldown","serverTime","getServerTime","cooldownUntil","handleTimerEnds","handleActivate","initialSection","contentClassName","isSlim","ListItem","multiline","inactive","leftElement","isShiny","withPremiumGradient","TextTimer","langKey","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","storyId","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","contactListIds","usersById","selectedIds","lockedIds","onSelect","searchQuery","setSearchQuery","displayedIds","contactIds","unique","filterUsersByName","Picker","itemIds","MEMO_EMPTY_ARRAY","lockedSelectedIds","filterValue","filterPlaceholder","searchInputId","isSearchable","forceShowSelf","onSelectedIdsChange","onFilterChange","saveCloseFriends","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","closeFriendIds","isCloseFriend","useEffectWithPrevDeps","prevIsActive","handleSelectedContactIdsChange","handleSubmit","userIds","Fragment","FloatingActionButton","isShown","OPTIONS","actions","Screens","selectPeerStory","visibility","contactList","users","byId","editStoryPrivacy","toggleStoryInProfile","isOpenModal","openModal","closeModal","privacy","setPrivacy","isPinned","setIsPinned","isInProfile","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","allowUserIds","selectedBlockedIds","blockUserIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","renderContent","storyLifeTime","seconds","hours","remainingSeconds","convertSecondsToHours","expireDate","section","list","option","checked","input","handleVisibilityChange","newVisibility","teactExperimentControlled","optionContent","option_name","tabIndex","role","closeFriends","denyList","handleActionClick","actionInner","getUserFullName","Switcher","label","footer","info","submit","renderPrivacyList","CloseFriends","AllowDenyList","modal","noBackdrop","onCloseAnimationEnd","header","closeButton","headerTitle","renderHeaderContent","slideClassName","scrollLockEl","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","scrollHeight","preventDefaultForScrollKeys","HTMLElement","tagName","toLowerCase","getAttribute","isTextBox","disableScrolling","el","_excludedClosestSelector","passive","onkeydown","enableScrolling","sender","fromPeerId","openStoryViewer","loadPeerStoriesByIds","openChat","storyIds","fromName","openOriginalStory","isDeleted","isSingleStory","handleMouseDown","useFastClick","getPeerColorClass","onMouseDown","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","renderTextContent","Icon","renderSender","isExpanded","onExpand","onFold","contentRef","textRef","showMoreButtonRef","renderingStory","useCurrentOrPrev","caption","hasOverflow","setHasOverflow","prevIsExpanded","usePrevDuringAnimation","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","requestMeasure","button","offsetWidth","setProperty","requestForcedReflow","textContainer","textOffsetTop","lineHeight","totalLines","calcTextLineHeightAndCount","isOverflowing","overflowShift","scrollTo","fullClassName","EmbeddedStoryForward","MessageText","messageOrStory","withTranslucentThumbs","openStoryViewModal","sendStoryReaction","views","isOut","sentReaction","viewsCount","forwardsCount","reactionsCount","isSentStoryReactionHeart","emoticon","HEART_REACTION","canForward","isPublic","containerId","getStoryKey","recentViewers","getGlobal","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","reaction","AvatarList","peers","nonInteractive","ReactionAnimatedEmoji","documentId","withEffectOnly","DEFAULT_STORY_DURATION_S","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","VIDEO_MIN_READY_STATE","IS_SAFARI","appConfig","user","viewModal","isPrivacyModalOpen","storyList","forwardMessages","forwardedStoryId","premiumModal","safeLinkModalUrl","mapModal","isPremiumModalOpen","shouldForcePause","reactionPicker","mediaAreas","forwardSenderId","find","area","channelId","forwardSender","withHeaderAnimation","fromPeer","fromId","orderedIds","storyIdsByPeerId","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","areChatSettingsLoaded","settings","isArchivedStories","isPrivateStories","getIsAnimating","onDelete","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openStoryPrivacyEditor","loadChatSettings","fetchChat","loadStoryViews","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","isUserStory","isChatStory","isChannelStory","canPinToProfile","canUnpinFromProfile","areViewsExpired","forwardSenderTitle","canCopyLink","usernames","canShare","canPlayStory","shouldShowComposer","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","thumbRef","useCanvasBlur","previewTransitionClassNames","useMediaTransition","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","shouldRenderCaption","captionAppearanceAnimationClassNames","isStreamingSupported","useStreaming","PRIMARY_VIDEO_MIME","useStoryPreloader","canWrite","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","onMouseLeave","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","onStart","isLongPressActive","isPressed","timerId","canProcessEvent","cancel","useLongPress","hasAllData","useBackgroundMode","load","keyCode","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleOpenChat","handleForwardPeerClick","handleFromPeerClick","handleOpenPrevStory","handleOpenNextStory","handleVideoStoryTimeUpdate","captureKeyboardListeners","onRight","onLeft","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","diff","handleDownload","StoryProgress","formatRelativeTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","Skeleton","OptimizedVideo","canPlay","isPriority","disableRemotePlayback","SECONDARY_VIDEO_MIME","MediaAreaOverlay","withStory","storyViewerMode","StoryFooter","StoryCaption","Composer","MAIN_THREAD_ID","getIsMobile","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","editableInputId","EDITABLE_STORY_INPUT_ID","inputId","inputPlaceholder","onFocus","onBlur","lastViewedByPeerIds","lastViewedId","storyIdsForViewer","peerStories","lastReadId","hasUnreadStories","previewIndexId","isLoaded","imageHash","thumbUrl","currentPeerId","currentStoryId","isSinglePeer","isPrivate","isArchive","byPeerId","orderedPeerIds","active","peerIds","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","rendersRef","setIsAnimating","setRef","renderingPeerIds","slice","renderingPeerPosition","currentPeerPosition","calculateTransformX","reduce","transformX","getCurrentStoryRef","composer","focusEditableElement","Object","entries","String","handleTransitionEnd","Story","onTransitionEnd","buildStyle","renderStory","StoryPreview","renderStoryPreview","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","DEFAULT_REACTION_SIZE","storyView","availableReactions","reactions","closeStoryViewer","unblockUser","blockUser","deleteContact","updateStoryView","closeStoryViewModal","contextActions","areStoriesBlocked","isUserBlocked","isContact","fullName","handler","isOnlyStories","statusIcon","shouldColorStatus","status","isModified","formatDateAtTime","opacityFadeIn","blocked","rightElement","ReactionStaticEmoji","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","PrivateChatInfo","withColoredStatus","noStatusOrTyping","GroupChatInfo","nextOffset","loadStoryViewList","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","query","setQuery","isExpired","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViews","sort","a","b","reactionA","reactionB","prepareComparator","placeholderCount","notAllAvailable","handleLoadMore","MoreMenuButton","isMenuOpen","fluid","sortButton","topButton","faded","iconSort","iconDown","viewsList","contactFilter","selected","check","SearchInput","search","topScrolled","onScroll","centeredInfo","InfiniteScroll","items","onLoadMore","view","additionalKeyId","StoryView","Array","_","i","PlaceholderChatInfo","bottomInfo","closeStoryPrivacyEditor","storyToDelete","setStoryToDelete","isPrevOpen","handleOpenDeleteModal","s","handleCloseDeleteModal","thumb","safeAreaBottom","getComputedStyle","documentElement","getPropertyValue","parseFloat","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StealthModeModal","StorySettings","TOPIC_ICON_SIZE","chatOrUserIds","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","topicIds","topics","chatsById","chats","chatFullInfoById","fullInfoById","topicsResult","searchTitle","values","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","handleTopicClick","topicId","InputText","onKeyDown","placeholder","withAbsolutePositioning","maxHeight","CHAT_HEIGHT_PX","clickArg","TopicIcon","letterClassName","Loading","listIds","orderedPinnedIds","activeListIds","archivedListIds","archived","pinnedIds","API_CHAT_TYPES","onSelectRecipient","setSearch","ids","priorityIds","chatIds","isDeletedUser","sorted","sortChatIds","filterChatsByName","filterChatIdsByType","renderingIds","ChatOrUserPicker","isForwarding","isManyMessages","isStory","openChatOrTopicWithReplyInDraft","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","isSelf","toChatId","getChatTitle","RecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","error","isSlowMode","hasErrorKey","dialogs","dismissDialog","acceptInviteConfirmation","sendMessage","isModalOpen","dialog","contactRequest","invite","hash","about","participantsCount","isRequestNeeded","participantsText","joinText","requestToJoinText","renderInviteHeader","handleJoinClick","renderInvite","handleConfirm","contact","pick","messageList","getReadableErrorText","withVideo","notifications","dismissNotification","localId","actionText","Notification","onDismiss","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","closeMapModal","point","geoPoint","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","openUrl","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","IS_MAC_OS","currentUser","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","isWriteAllowed","handleLoginChecked","Checkbox","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","padStart","formatDay","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","getHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleChangeHours","replace","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","handleDateSelect","inputMode","historyCalendarSelectedAt","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","timestamp","valueOf","CalendarModal","userStatus","selectUserStatus","phoneCodeList","countryList","phoneCodes","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","getUserStatus","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","attachBot","attachMenu","bots","selectCurrentChat","theme","selectTheme","isPaymentModalOpen","payment","isStarPaymentModalOpen","paymentStatus","closeWebApp","sendWebViewData","prolongWebView","toggleAttachBot","openTelegramLink","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","mainButton","setMainButton","isBackButtonVisible","setIsBackButtonVisible","isSettingsButtonVisible","setIsSettingsButtonVisible","backgroundColor","setBackgroundColor","headerColor","setHeaderColor","shouldConfirmClosing","setShouldConfirmClosing","isCloseModalOpen","openCloseModal","hideCloseModal","isRemoveModalOpen","openRemoveModal","hideRemoveModal","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequesingWriteAccess","setIsRequestingWriteAccess","unlockPopupsAt","handlePopupOpened","handlePopupClosed","sequentialLimit","resetAfter","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","themeParams","extractCurrentThemeParams","bg_color","frameRef","buttonText","queryId","replyInfo","isSimple","reloadFrame","sendEvent","sendViewport","sendTheme","useWebAppFrame","isSimpleView","onEvent","onLoad","openInvoice","isReloadSupported","reloadTimeout","ignoreEventsRef","lastFrameSizeRef","handleLoad","contentWindow","JSON","stringify","forceReloadFrame","once","eventType","isNonStable","eventData","is_expanded","is_state_stable","theme_params","sendCustomStyle","handleMessage","parse","scrollbarColor","reload_supported","req_id","slug","linkUrl","available","TME_LINK_PREFIX","path_full","is_visible","validateHexColor","color_key","newColor","button_color","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","need_confirmation","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","shouldShowMainButton","useInterval","handleMainButtonClick","handleSettingsButtonClick","handleRefreshClick","buttonId","button_id","handleAppPopupModalClose","prevIsPaymentModalOpen","handleRemoveAttachBot","isEnabled","handleToggleClick","handleBackClick","handleAcceptPhone","handleAcceptWriteAccess","openBotChat","backButtonClassName","headerTextVar","r","g","hexToRgb","luma","getColorLuma","prevMainButtonColor","prevMainButtonTextColor","prevMainButtonIsActive","prevMainButtonText","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideButton","setShouldHideButton","buttonChangeTimeout","shortName","isAttachBot","sandbox","allow","allowFullScreen","hasCloseButton","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","split","linkText","MINI_APP_TOS_URL","rel","isConfirmDisabled","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","COLORS","isFontIcon","count","newIndex","colorA","colorB","ceil","lerpRgb","buttonClassName","fontIcon","description","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","fill","isLast","isPreLast","isFirst","isPreFirst","isInvisible","leftValue","rightValue","floatingBadgeIcon","rightStyle","viewBox","COLOR_START","COLOR_END","colorStepProgress","lerp","PremiumLimitsCompare","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","AnimatedSticker","tgsUrl","play","isLowPriority","noLoop","stickers","premium","setOffset","setSize","renderedStickers","cycleRestrict","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","circleRef","dpr","useDevicePixelRatio","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","PremiumFeatureItem","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","saved_tags","last_seen","message_privacy","effects","PREMIUM_FEATURE_DESCRIPTIONS","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","recommendedChannels","LIMITS_DESCRIPTIONS","promo","isPremium","limits","premiumPromoOrder","subscriptionOption","onClickSubscribe","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","PREMIUM_FEATURE_SECTIONS","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","filteredSections","subscriptionButtonText","amount","months","currency","perMonthPrice","formatCurrency","handleLimitsScroll","scrollContainer","animateHorizontalScroll","then","handleSelectSlide","scrollLeft","scrollLeftOriginal","reverseIndex","prevElement","reverseElement","toString","toggleExtraClass","PREMIUM_LIMITS_ORDER","defaultLimit","premiumLimit","PremiumLimitPreview","PremiumFeaturePreviewStickers","PremiumFeaturePreviewStories","videoSections","PremiumFeaturePreviewVideo","videos","PREMIUM_BOTTOM_VIDEOS","SliderDots","fullMonthlyAmount","isGiveaway","perMonth","isUserCountPlural","discount","handleChange","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","PremiumTags","PremiumLastSeen","PremiumMessagePrivacy","PremiumEffects","fromUser","fromUserId","fromUserStatusEmoji","emojiStatus","customEmojis","fromUserStatusSet","selectStickerSet","stickerSetInfo","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","dialogRef","closePremiumModal","requestConfetti","loadStickers","openStickerSet","isHeaderHidden","setHeaderHidden","currentSection","setCurrentSection","selectedSubscriptionOption","setSubscriptionOption","handleOpenSection","handleResetSection","handleClickWithStartParam","handleChangeSubscriptionOption","foundOption","options","showConfetti","withStars","prevIsPremium","defaultOption","handleOpenStatusSet","stickerSetTitle","template","first","second","emoji","thumbCustomEmojiId","CustomEmoji","link","monthOption","subscribeButtonText","PremiumFeatureModal","isBig","PremiumLogo","PremiumSubscriptionOption","statusText","entities","statusEntities","renderFooterText","gifts","forUserIds","isCompleted","giftPremiumModal","boostPerSentGift","boostsPerSentGift","BOOST_PER_SENT_GIFT","closeGiftPremiumModal","selectedMonthOption","setSelectedMonthOption","selectedUserQuantity","giftingUserList","selectedGift","gift","filteredGifts","fullMonthlyGiftAmount","basicGift","handlePremiumClick","userNameList","modalDialog","avatars","headerText","center","part","subpart","boostIcon","subscriptionOptions","match","premiumFeatures","Link","isPrimary","renderPremiumFeaturesLink","selectionLimit","selectedCountryIds","setSelectedCountryIds","noPickerScrollRestore","country","iso2","handleSelectedIdsChange","newSelectedIds","pickerSelector","pickerTitle","main","picker","noScrollRestore","isCountryList","entityType","statusesById","userStatusesById","isSuperGroup","members","adminMembersById","chatFullInfo","selectChatFullInfo","isConfirmModalOpen","openConfirmModal","closeConfirmModal","setSelectedIds","pendingChannelId","setPendingChannelId","channelsIds","adminIds","memberIds","sortUserIds","displayedMembersIds","filteredContactIds","isUserBot","displayedChannelIds","foundChannelIds","contactId","handleSendIdList","confirmPrivateLinkChannelSelection","prevIds","handleSelectedMemberIdsChange","handleSelectedChannelIdsChange","privateLinkChannelId","isChatPublic","isLink","onClickAction","userNames","selectedMemberIds","displayText","GIVEAWAY_IMG_LIST","GiftGreenRound","GiftBlueRound","GiftRedRound","giveawayModal","selectedMemberList","selectedChannelList","selectedChannelIds","giveawayBoostPerPremiumLimit","giveawayBoostsPerPremium","userSelectionLimit","giveawayAddPeersMax","countrySelectionLimit","giveawayCountriesMax","general","prepaidGiveaway","GIVEAWAY_BOOST_PER_PREMIUM","GIVEAWAY_MAX_ADDITIONAL_COUNTRIES","GIVEAWAY_MAX_ADDITIONAL_USERS","closeGiveawayModal","launchPrepaidGiveaway","isCalendarOpened","openCalendar","closeCalendar","isCountryPickerModalOpen","openCountryPickerModal","closeCountryPickerModal","isEntityPickerModalOpen","openEntityPickerModal","closeEntityPickerModal","setEntityType","TYPE_OPTIONS","GiveawayUsersRound","customExpireDate","setCustomExpireDate","selectedUserCount","setSelectedUserCount","selectedGiveawayOption","setGiveawayOption","selectedSubscriberOption","setSelectedSubscriberOption","selectedUserIds","setSelectedUserIds","setSelectedChannelIds","selectedCountriesIds","setSelectedCountriesIds","shouldShowWinners","setShouldShowWinners","shouldShowPrizes","setShouldShowPrizes","prizeDescription","setPrizeDescription","dataPrepaidGiveaway","setDataPrepaidGiveaway","boostQuantity","isRandomUsers","SUBSCRIBER_OPTIONS","subLabel","monthQuantity","userCountOptions","uniqueUserCounts","Set","quantity","boostChannelId","additionalChannelIds","isOnlyForNewSubscribers","countries","areWinnersVisible","untilDate","confirmLaunchPrepaidGiveaway","giveawayId","paymentPurpose","handleUserCountChange","newValue","handlePrizeDescriptionChange","handleAdd","handleChangeSubscriberOption","handleChangeTypeOption","handleExpireDateChange","handleSetCountriesListChange","handleSetIdsListChange","handleShouldShowWinnersChange","handleShouldShowPrizesChange","onClickActionHandler","GiveawayTypeOption","RangeSliderWithMarks","rangeCount","marks","filteredChannelIds","deleteParticipantsHandler","iconClassName","RadioGroup","subLabelClassName","formatDateTimeToString","CountryPickerModal","AppendEntityPickerModal","GIVEAWAY_MAX_ADDITIONAL_CHANNELS","closePremiumGiftingModal","openGiftPremiumModal","displayedUserIds","handleSelectedUserIdsChange","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","savedDialogsPinned","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","closeLimitReachedModal","isClosing","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","currentIndex","stickerSetEl","isClose","animateScroll","stickerSet","STICKER_SIZE_PICKER_HEADER","observeIntersection","sharedCanvasRef","hasThumbnail","hasVideoThumb","hasAnimatedThumb","hasStaticThumb","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","useIsIntersecting","shouldPlay","shouldFallbackToStatic","IS_WEBM_SUPPORTED","staticHash","getStickerMediaHash","staticMediaData","mediaHash","coords","useCoordsInSharedCanvas","observeIntersectionForPlaying","selectIsAlwaysHighPriorityEmoji","sharedCanvas","sharedCanvasCoords","forceAlways","getFirstLetters","contentForStatusMenuContext","arg","noContextMenu","isSavedMessages","isStatusPicker","canViewSet","observeIntersectionForShowing","isSelected","shouldIgnorePremium","noShowPremium","withTranslucentThumb","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","isEffectEmoji","setEmojiStatus","menuRef","isFree","hasEffect","isCustomEmoji","isLocked","shouldLoad","isIntesectingForShowing","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","shouldRenderContextMenu","getTriggerElement","getRootElement","getMenuElement","transformOriginX","transformOriginY","menuStyle","useMenuPosition","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","expires","getServerTimeOffset","shouldShowCloseButton","contextMenuItems","preventMessageInputBlurWithBubbling","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","withSharedAnimation","noFastClick","loadAndPlay","sharedCanvasHqRef","isCustom","availableReaction","isSameReaction","staticIcon","animationId","selectAnimation","getDocumentMediaHash","EMOJI_SIZE_PICKER","AnimatedIconWithPreview","isNearActive","favoriteStickers","isReactionPicker","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isChatEmojiSet","isChatStickerSet","isTranslucent","noContextMenus","onReactionSelect","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","isLottie","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","accessHash","isInstalled","installedDate","isArchived","canCut","EFFECT_EMOJIS_SET_ID","EFFECT_STICKERS_SET_ID","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","withAddSetButton","addSetButtonText","pill","grey","reactionId","getReactionKey","ReactionEmoji","isHqEmoji","canvasRef","StickerButton","has","HEADER_BUTTON_WIDTH","DEFAULT_ID_PREFIX","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","setsById","stickerSetsById","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","defaultTags","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","chatEmojiSetId","emojiSet","defaultTagReactions","pickerListClassName","withDefaultTopicIcons","onCustomEmojiSelect","handleContentScroll","shouldHideTopBorder","pickTruthy","prefix","areAddedLoaded","allSets","defaultSets","TOP_SYMBOL_SET_ID","topReactionsSlice","cleanRecentReactions","some","topReaction","cleanAvailableReactions","isInactive","allRecentReactions","concat","defaultStatusIconsPack","defaultTopicIconsPack","userSetIds","unshift","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","useHorizontalScroll","newLeft","handleEmojiSelect","handleReactionSelect","pickerStyles","headerClassName","listClassName","firstSticker","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","isFaded","StickerSetCover","StickerSet","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","CustomEmojiPicker","getFirstAvailableBoost","myBoosts","boost","firstBoost","prevBoostedChat","applyBoost","closeBoostModal","loadFullChat","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","descriptionText","canBoostMore","boostStatus","hasMyBoost","areBoostsInDifferentChannels","every","boosts","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getBoostProgressInfo","hasBoost","moreBoosts","modalTitle","boostsLeftToUnrestrict","boostsToUnrestrict","boostsApplied","boostTimes","isBoostDisabled","isReplacingBoost","handleApplyBoost","slots","slot","handleProceedPremium","handleButtonClick","handleCloseClick","PremiumProgress","floatingBadgeText","isOnlyConfirm","formatDateInFuture","tableData","headerImageUrl","headerAvatarPeer","headerAvatarWebPhoto","noHeaderImage","onButtonClick","withAvatar","hasAbsoluteCloseButton","webPhoto","logo","table","row","cell","PickerSelectedItem","chatItem","chatMessage","closeGiftCodeModal","applyGiftCode","canUse","toId","usedAt","handleOpenGiveaway","giveawayMessageId","modalData","LinkField","isFromGiveaway","TableInfoModal","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","newChatsCount","badgeText","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","alreadyPeerIds","Badge","buttonBadge","isAlternateColor","suggestedPeerIds","leaveChatlist","joinedIds","isNotJoined","selectedCount","removal","selectChatFolder","renderingInfo","renderingFolderTitle","folderTabNumber","ChatlistAlready","ChatlistNew","ChatlistDelete","folderTitle","foldersWrapper","folders","badgeCount","isBadgeActive","balance","smallerText","balanceBottom","StarIcon","formatInteger","SingleMediaThumb","boughtMedia","mediaBlob","blurry","full","isTransactionPreview","arr","MediaSpoiler","noOutline","transaction","getStarsReceipt","stars","transactionPeer","useSelector","selectOptionalPeer","avatarPeer","CUSTOM_PEER_PREMIUM","customPeer","buildStarsTransactionCustomPeer","titleKey","subtitleKey","isRefund","hasFailed","isPending","PaidMediaThumb","formatStarsTransactionAmount","TRANSACTION_TYPES","TRANSACTION_TABS","StarTopupOption","starsCount","optionTop","stackedStars","stackedStar","optionBottom","originPayment","starsBalanceState","originPaymentBot","closeStarsBalanceModal","loadStarsTransactions","history","topupOptions","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","selectedTabIndex","setSelectedTabIndex","productStarsPrice","invoice","starsNeeded","originBotName","shouldShowTransactions","all","transactions","renderingOptions","canExtend","maxOption","forceShowAll","currentStackedStarsCount","canExtendOptions","isExtended","tosText","SafeLink","BalanceBlock","modalBalance","hiddenHeader","starHeaderText","StarLogo","logoBackground","StarsBackground","moreOptions","noForcedUpperCase","secondaryInfo","TabList","big","activeTab","tabs","onSwitchTab","renderCount","shouldRestoreHeight","noFastList","TransactionItem","messageInputInvoice","inputInvoice","isPaidMedia","paidMediaMessage","paidMediaChat","closePaymentModal","openStarsBalanceModal","sendStarPaymentForm","markLoading","unmarkLoading","botName","starsText","areAllPhotos","areAllVideos","mediaText","channelTitle","handlePayment","price","paymentContent","paymentImages","paymentPhoto","paymentImageBackground","paymentButton","paymentAmount","paymentButtonStar","isRevenueSharing","minLevelSignal","useSelectorSignal","channelRestrictAdsLevelMin","minLevelToRestrictAds","regularAdContent","revenueSharingAdContent","isStatic","Separator","reportSponsoredMessage","closeReportAdModal","openPreviousReportAdModal","transitionRef","handleOptionClick","randomId","renderingSection","renderingDepth","sectionDepth","sections","bottomText","hasSubtitle","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","narrow","secondaryIcon","isPrivateChat","canPinForAll","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","pinnedMessagesCount","onUnpin","selectedMessageIds","selectedMessages","selectCanDeleteSelectedMessages","exitMessageSelectMode","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","hasProtectedMessage","selectHasProtectedMessage","selectCanForwardMessages","isForwardModalOpen","isModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","useHotkeys","useCopySelectedMessages","handleExitMessageSelectMode","onBackspace","onEsc","handleCopy","prevSelectedMessagesCount","formattedMessagesCount","renderButton","DeleteSelectedMessageModal","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","leftId","rightId","handleCloseSeenByModal","CLOSE_ANIMATION_DURATION","isReadDate","privacySettingsNoticeModal","updateGlobalPrivacySettings","closePrivacySettingsNoticeModal","setPrivacyVisibility","loadUser","userName","handleShowReadTime","shouldHideReadMarks","handleShowLastSeen","privacyKey","onSuccess","handleOpenPremium","LOCAL_TGS_URLS","ReadTime","LastSeen","reactorModal","reactors","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","LoadMoreDirection","Backwards","formatIntegerCompact","flatMap","peerReactions","reactor","seenByUser","FullNameTitle","withEmojiStatus","addedDate","avatarSize","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","dispatchHeavyAnimationStop","effectHash","effectTgsUrl","startSize","isReversed","quality","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","requestMessageTranslation","closeChatLanguageModal","setSettingOption","requestChatTranslation","handleSelect","langCode","toLanguageCode","translationLanguage","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","highlight","closeCollectibleInfoModal","isUsername","handleOpenUrl","shouldSkipModal","formatUsername","collectible","copyTextToClipboard","formattedCollectible","purchaseDate","formatCurrencyAsString","cryptoCurrency","cryptoAmount","Mention","chip","createMapStateToProps","props","fetchingStatus","globalSearch","currentType","isVoice","byChatId","globalMessagesByChatId","searchChatId","shouldWarnAboutSvg","byKey","runThrottled","cb","searchMessagesGlobal","openAudioPlayer","foundMessages","handleMessageFocus","handlePlayAudio","canRenderContents","NothingFound","shouldDrawDateDivider","toYearMonth","formatMonthAndYear","Audio","AudioOrigin","Search","getSenderName","onDateClick","audio","buttonRef","activeElement","privateChatUserId","privateChatUser","mediaThumbnail","getMessageSticker","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","isRoundVideo","getMessageRoundVideo","shouldReplaceHistory","useSelectWithEnter","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","getMessageVideo","renderSummary","searchDate","suggestions","suggestion","currentDate","latestYear","getSuggestionsFromDate","foundTopicIds","dateSearchQuery","onSearchDateSelect","onReset","openThread","nothingFound","DateSuggest","LeftSearchResultTopic","ChatMessage","selectIsChatPinned","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canChangeFolder","chatFolders","withUsername","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","storyViewerOrigin","MuteChatModal","ChatFolderModal","topUserIds","topPeers","recentlyFoundChatIds","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","LeftSearchResultChat","isChannelList","globalResults","localResults","globalPeerIds","accountPeerIds","similarChannelIds","selectSimilarChannelIds","GLOBAL_SUGGESTED_CHANNELS_ID","suggestedChannelIds","setGlobalSearchChatId","loadChannelRecommendations","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","handleChatClick","handlePickerItemClick","startsWith","filteredChatIds","getOrderedIds","ALL_FOLDER_ID","localChatIds","contactIdsWithMe","localPeerIds","filteredIds","handleClickShowMoreLocal","handleClickShowMoreGlobal","noScrollRestoreOnTop","RecentContacts","CURRENT_TYPE","observeIntersectionForMedia","getMessageDocument","Document","withDate","datetime","smaller","WebLink","onMessageClick","handleSelectMedia","isMediaGrid","isMessageList","itemSelector","Media","TABS","GlobalSearchContent","ChannelList","Links","Files","Music","Voice","CHAT_TABS","currentContent","setGlobalSearchContent","setGlobalSearchDate","setActiveTab","parseDateString","handleSwitchTab","tab","handleSearchDateSelect","ChatMessageResults","ChatResults","MediaResults","LinkResults","FileResults","AudioResults","INITIAL_STATE","currentPassword","password","hint","email","twoFaReducer","state","payload","maxChats","selectCurrentLimit","mode","dispatch","onSaveFilter","openLimitReachedModal","chatFilter","selectedChatIds","selectedChatTypes","selectChatFilters","chatTypes","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","isTouched","setIsTouched","folderAllOrderedIds","useFolderManagerForOrderedIds","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","shouldHideChatTypes","isChatList","handleFilterChange","newFilter","includeFilters","includedChatIds","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","categories","selectedCategories","categoryPlaceholderKey","isRoundCheckbox","onSelectedCategoriesChange","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleCreateInviteClick","selectCanShareFolder","handleEditInviteClick","renderChats","visibleChatIds","leftChatsCount","clickHandler","chatType","INCLUDED_CHAT_TYPES","typeKey","EXCLUDED_CHAT_TYPES","renderChatType","AnimatedIcon","STICKER_SIZE_FOLDER_SETTINGS","FoldersNew","runThrottledForLoadRecommended","folderIds","foldersById","recommended","recommendedChatFolders","maxFolders","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","sortChatFolders","setState","orderedFolderIds","dragOrderIds","draggedIndex","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","getFolderDescriptionText","handleCreateFolderFromRecommended","handleDrag","translation","splice","handleDragEnd","canCreateNewFolder","FoldersAll","isBlocked","isDragged","draggedTop","Draggable","onDragEnd","knobStyle","allowSelection","shareFolderScreen","pinnedChatIds","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","unlockedIds","partition","selectCanInviteToChat","isFirstRenderRef","prevUrl","handleClickDisabled","chatsCount","FoldersShare","withShare","onRevoke","onDisabledClick","currentScreen","shownScreen","onScreenSelect","openShareChatFolderModal","editChatFolder","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsFoldersMain","SettingsFoldersEdit","SettingsFoldersChatFilters","SettingsShareChatlist","shouldDisablePasswordManager","expectedPassword","clearError","validationError","setValidationError","shouldShowPassword","setShouldShowPassword","newPassword","handleClearError","PasswordMonkey","isPasswordVisible","PasswordForm","shouldResetValue","onChangePasswordVisibility","fullReset","STICKER_SIZE_PASSCODE","Congratulations","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","passcode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeStart","SettingsPasscodeForm","SettingsPasscodeCongratulations","PasscodeEnabled","SettingsPasscodeEnabled","premiumSection","handleOpenPremiumModal","shouldNewNonContactPeersRequirePremium","selectNewNoncontactPeersRequirePremium","canLimitNewMessagesWithoutPremium","canChange","PrivacyLockedOption","hidden","PremiumStatusItem","getSessionIcon","session","platform","device","deviceModel","systemVersion","activeSessions","byHash","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","headerButton","SettingsActiveSession","iconDevice","dateActive","box","appName","appVersion","ip","region","getLocation","note","actionHeader","actionName","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","sessionHashes","sessionHash","areButtonsInColumn","activeWebSessions","terminateWebAuthorization","renderingBot","browser","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","SettingsActiveWebsite","handleCardClick","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","customEmojiSetIds","canPlayAnimatedEmojis","shouldSuggestCustomEmoji","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","customEmojiSets","StickerSetCard","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","isChecked","renderValue","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","language","doNotTranslate","displayedOptions","setDisplayedOptions","otherLanguages","unselected","newDoNotTranslate","v","filteredDisplayedOptions","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","orderedUsernames","dragOrderUsernames","handleCopyUsername","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","usernameData","LINK_PREFIX_REGEX","runDebouncedForCheckUsername","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","MIN_UPDATE_USERNAME_LENGTH","MAX_USERNAME_LENGTH","USERNAME_REGEX","test","handleUsernameChange","newUsername","isUsernameValid","success","readOnly","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","currentFirstName","currentLastName","currentUserFullInfo","currentAvatarHash","getChatAvatarHash","currentBio","bio","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","InProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","Complete","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","TextArea","maxLengthIndicator","UsernameInput","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","renderPurchaseLink","ManageUsernames","shouldShowLoginCodeInChatList","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","URL","createObjectURL","handleIsAutoUpdateEnabledChange","Experimental","IS_ELECTRON","TIME_FORMAT_OPTIONS","shouldUseSystemTheme","messageTextSize","messageSendKeyCombo","timeFormat","isMobileDevice","appearanceThemeOptions","keyboardSendOptions","handleMessageTextSizeChange","newSize","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","wallpaper","localMediaHash","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","background","isBlurred","themes","loadedWallpapers","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","patternColor","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","WallpaperTile","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","isDragging","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","callback","currentAmountRef","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","Notifications","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyBirthday","PrivacyForwarding","PrivacyVoiceMessages","PrivacyMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyPhoneNumberAllowedContacts","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyBirthdayAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyBirthdayDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","languages","canTranslate","canTranslateChats","loadLanguages","loadAttachBots","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","oldSetLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","buildOptions","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","rightIcon","onClickLabel","loadingOption","isGiveawayAvailable","selectIsGiveawayGiftsPurchaseAvailable","starsBalance","shouldDisplayStars","sessionCount","loadProfilePhotos","openSupportChat","openPremiumGiftingModal","isSupportDialogOpen","openSupportDialog","closeSupportDialog","handleOpenSupport","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","isInSettings","langName","FAQ_URL","PRIVACY_URL","hasPrivateChatsNotifications","hasPrivateChatsMessagePreview","hasGroupNotifications","hasGroupMessagePreview","hasBroadcastNotifications","hasBroadcastMessagePreview","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsSilent","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","prev","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","_ref6","_ref7","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","canDisplayChatInTitle","hasPasscode","blockedCount","totalCount","webAuthCount","canDisplayAutoarchiveSetting","canSetPasscode","selectCanSetPasscode","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","shouldAllowPremium","blockCount","blockChatIds","allowCount","allowChatIds","total","exceptionString","lastSeen","profilePhoto","birthday","forwards","phoneCall","allowDisabledClick","voiceMessages","chatInvite","blockedIds","localContactIds","userSearch","localUserIds","setUserSearchQuery","availableContactIds","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","userMainUsername","renderContact","BlockUserModal","getPrivacyKey","screen","PrivacyPhoneP2P","PrivacyAddByPhone","selectShouldHideReadMarks","canShowHideReadTime","handleChangeShouldHideReadMarks","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","PrivacySubsection","isPremiumRequired","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","prepareSubtitle","userIdsCount","chatIdsCount","allowedString","blockString","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","addByPhone","phoneP2P","secondaryScreen","SettingsPrivacyPublicProfilePhoto","SettingsPrivacyLastSeen","PREMIUM_CATEGORY","getCurrentPrivacySettings","isAllowList","withPremiumCategory","setPrivacySettings","selectedContactIds","selectedCategoryTypes","newSelectedCategoryTypes","setNewSelectedCategoryTypes","SERVICE_NOTIFICATIONS_USER_ID","filteredChats","handleSelectedCategoriesChange","updatedIds","isPremiumAllowed","config","selectedReaction","defaultReaction","setDefaultReaction","addedSetIds","shouldSuggestStickers","shouldUpdateStickerSetOrder","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","STICKER_SIZE_TWO_FA","animatedEmoji","selectAnimatedEmoji","codeLength","twoFaSettings","waitingEmailCodeLength","focusDelayTimeoutMs","setValue","handleInputChange","AnimatedIconFromSticker","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaStart","SettingsTwoFaPassword","SettingsTwoFaSkippableForm","SettingsTwoFaEmailCode","SettingsTwoFaCongratulations","SettingsTwoFaEnabled","TRANSITION_RENDER_COUNT","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_BIRTHDAY_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","_isFrom","_currentKey","SettingsHeader","activeScreen","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsMain","SettingsEditProfile","SettingsGeneral","SettingsQuickReaction","SettingsCustomEmoji","SettingsNotifications","SettingsDataStorage","SettingsPrivacy","SettingsLanguage","SettingsDoNotTranslate","SettingsStickers","SettingsExperimental","SettingsGeneralBackground","SettingsGeneralBackgroundColor","SettingsActiveSessions","SettingsActiveWebsites","SettingsPrivacyBlockedUsers","SettingsPrivacyVisibility","SettingsPrivacyVisibilityExceptionList","SettingsFolders","SettingsTwoFa","SettingsPasscode","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","withSwipeControl","openNewContactDialog","isSearching","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","foundContactIds","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","memberFirstNames","generatedChatName","handleTitleChange","handleDescriptionChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","onContentChange","newChatMemberIds","setNewChatMemberIds","NewChannelStep2","NewGroupStep2","isStepActive","NewChannelStep1","NewGroupStep1","NewChatStep1","NewChatStep2","isForumPanelOpen","archiveSettings","isStoryRibbonShown","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isStoryRibbonClosing","StoryToggler","canShow","folderType","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","idsToRemove","idsToAdd","CheckboxGroup","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","muteUntil","div","ALLOWED_QUOTE_ENTITIES","ApiMessageEntityTypes","Bold","Italic","Underline","Strike","Spoiler","getSelectionAsFormattedText","range","html","clonedSelection","cloneContents","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","currentElement","tag","wrapHtmlWithMarkupTags","innerHTML","getSelectionAsHtml","entity","stripEntitiesForQuote","parseHtmlAsFormattedText","PinMessageModal","useModuleLoader","Bundles","Extra","getCopyLabel","hasSelection","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","menuSeparatorSize","openPrivacySettingsNoticeModal","readDate","MenuSeparator","handleOpenModal","isReactionPickerOpen","enabledReactions","maxUniqueReactions","anchor","targetHref","canSendNow","canReschedule","canReply","canQuote","canEdit","noReplies","canPin","canUnpin","canFaveSticker","canUnfaveSticker","canCopy","canSelect","canSaveGif","canRevote","canClosePoll","canShowOriginal","canSelectLanguage","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","hasCustomEmoji","noTransition","isInSavedMessages","onReply","onOpenThread","onEdit","onPin","onFaveSticker","onUnfaveSticker","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onToggleReaction","onCopyMessages","onAboutAds","onSponsoredHide","onSponsorInfo","onSponsoredReport","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","openCustomEmojiSets","scrollableRef","withReactions","isSponsoredMessage","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","handleAfterCopy","handleOpenCustomEmojiSets","copyOptions","afterEffect","getMessageText","getMessagePhoto","getMessageWebPageVideo","getMessageWebPagePhoto","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","selection","getSelection","Promise","resolve","mediaLoader","copyImageToClipboard","anchorNode","parentNode","selectionParentNode","selectedMessageElement","checkMessageHasSelection","getMessageIdsForSelectedText","execCommand","clipboardText","shouldRenderAsHtml","copyHtmlToClipboard","getMessageTextWithSpoilers","getMessageCopyOptions","extraHeightAudioPlayer","pinnedElement","extraHeightPinned","extraPaddingX","extraTopPadding","extraMarginTop","menuElMinWidth","withScroll","handleOpenMessageReactionPicker","bubbleStyle","ReactionSelector","allAvailableReactions","currentReactions","onShowMore","messagesCount","withPreventDefaultOnMouseDown","inline","withWrap","sponsorInfo","ReadTimeMenuItem","detectedLanguage","seenByExpiresAt","seenByMaxChatMembers","readDateExpiresAt","noOptions","isOwn","isOwnMessage","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isScheduled","isMessageLocal","hasTtl","hasMessageTtl","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","canCopyNumber","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","translationRequestLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","isForbidden","hasFullInfo","canScheduleUntilOnline","selectCanScheduleUntilOnline","isMessageTranslated","selectIsReactionPickerOpen","updateDraftReplyInfo","setEditingId","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","loadSeenBy","openSeenByModal","openReactorListModal","copyMessagesByIds","saveGif","cancelPollVote","closePoll","toggleReaction","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","loadOutboxReadDate","copyMessageLink","setIsMenuOpen","setIsDeleteModalOpen","setIsReportModalOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","canQuoteSelection","setCanQuoteSelection","requestCalendar","calendar","useSchedule","uniqueReactors","PREVIEW_AVATAR_COUNT","msg","downloadableMedia","getMessageDownloadableMedia","selectionRange","getRangeAt","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","startOffset","endOffset","handleDelete","handleReport","closeMenu","closePinModal","handleReply","replyToMsgId","quoteText","replyToPeerId","handleOpenThread","handleEdit","handlePin","handleUnpin","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","scheduledAt","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","shouldIncludeGrouped","handleCopyNumber","handleSaveGif","gif","handleToggleReaction","shouldAddToRecent","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","scheduledMaxDate","MessageContextMenu","onReportAd","showDialog","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","handleReportSponsoredMessage","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","canSendStickers","shouldSchedule","selectShouldSchedule","prevStickerSet","renderingStickerSet","isAdded","isScheduleRequested","isPreloadedGlobally","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","sets","teactFastList","customEmojiSet","setCard","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","canReportChat","currentChatId","currentThreadId","chatBot","REPLIES_USER_ID","userFullInfo","fullInfo","canGiftPremium","premiumGifts","canCreateTopic","isCreator","isUserRightBanned","getHasAdminRight","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","savedDialog","getIsSavedDialog","isTopic","isForumAsMessages","canDeleteChat","getCanDeleteChat","hasLinkedChat","linkedChatId","botCommands","botInfo","commands","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","isBot","withExtraActions","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","canShowBoostModal","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","requestMasterAndRequestCall","toggleStatistics","openBoostStatistics","openThreadWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","setViewForumAsMessages","openBoostModal","shouldCloseFast","setShouldCloseFast","setIsMuteModalOpen","isViewGroupInfoShown","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleGiftPremiumClick","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","botButtons","cmd","deleteTitle","DeleteChatModal","isSavedDialog","runDebouncedForSearch","savedTag","selectCurrentTextSearch","savedTags","savedReactionTags","isHistoryCalendarOpen","searchTag","setLocalTextSearchQuery","setLocalTextSearchTag","searchTextMessagesLocal","closeLocalTextSearch","openHistoryCalendar","loadSavedReactionTags","tagsRef","focusedIndex","setFocusedIndex","hasQueryData","visualViewport","mainEl","pageTop","blur","tags","hasTags","areTagsDisabled","handleMessageSearchQueryChange","newQuery","handleTagClick","handleUp","newFocusIndex","handleDown","handleCloseLocalTextSearch","SavedTagButton","withCount","isChosen","getDayStartAt","recent","favorite","effect","chatStickerSetId","effectStickers","effectEmojis","recentStickers","selectShouldLoopStickers","isForEffects","loadRecentStickers","addRecentSticker","removeRecentSticker","sendMessageAction","useSendMessageAction","effectSets","existingAddedSetIds","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleMouseMove","handleRemoveRecentSticker","CHAT_STICKER_SET_ID","isTouchScreen","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","rowsCount","pickerMaxHeight","REACTION_SELECTOR_WIDTH","availableEffectById","storyPeerId","sendAsMessage","areSomeReactionsAllowed","areCustomReactionsAllowed","areCustomAllowed","withCustomReactions","closeReactionPicker","saveEffectInDraft","requestEffectInComposer","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","storedPosition","renderingPosition","isDense","deltaX","FULL_PICKER_SHIFT_DELTA","handleToggleCustomReaction","handleStoryReactionSelect","customEmojiMessage","buildCustomEmojiHtml","isReaction","availableEffects","effectId","effectStickerId","chosenOrder","backdropExcludedSelector","StickerPicker","ReactionPickerLimited","BLUR_CANVAS_SIZE","attachment","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_IMAGE_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","filename","extension","getFileExtension","previewData","shouldSkipGrouping","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","findInViewport","selectorOrElements","shouldContainBottom","isHorizontal","viewportY1","viewportY2","allElements","visibleIndexes","isFound","y2","setTooltipItemVisible","isFullyVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","shiftKey","isSelectionOutOfRange","onUp","onDown","onTab","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","member","selectedMentionIndex","prevChatMembers","renderedChatMembers","ATTACHMENT_MODAL_INPUT_ID","recentEmojis","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","keywords","customEmojiForEmoji","forEmoji","captionLimit","attachments","getHtml","editingMessage","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onCaptionUpdate","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","onEmojiSelect","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isEditing","isInAlbum","groupedId","notEditingFile","getAttachmentType","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","isInvertedMedia","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","setIsInvertedMedia","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","leftChars","leftCharsBeforeLimit","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","canInvertMedia","isBottomDividerShown","noBackdropClose","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","AttachmentModalItem","uniqueId","MentionTooltip","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","canSchedule","onSendSchedule","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","question","setQuestion","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","handleSolutionChange","focusInput","addNewOption","requestNextMutation","behavior","handleCreate","isNoCorrectOptionError","answers","correct","questionTrimmed","substring","optionsTrimmed","o","summary","multipleChoice","quiz","correctAnswers","solutionEntities","updateOption","newOptions","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","handleQuestionChange","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","noReplaceNewlines","native","IS_PACKAGED_ELECTRON","BASE_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","category","allEmojis","useOnIntersect","emojisPerRow","displayedEmoji","EmojiButton","ICONS_BY_CATEGORY","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","EmojiCategory","onUnsaveClick","getVideoMediaHash","withThumb","videoData","shouldRenderVideo","isVideoReady","handleUnsaveClick","handleContextDelete","preload","gifs","saved","canSendGifs","onGifSelect","loadSavedGifs","debounceMs","shouldUnsave","GifButton","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","GIFs","SYMBOL_MENU_TAB_ICONS","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","isMessageComposer","setRecentEmojis","setRecentCustomEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","recentCustomEmojisRef","handleCustomEmojiSelect","canUpdateStickerSetsOrder","isFrom","EmojiPicker","GifPicker","SymbolMenuFooter","mobileClassName","UnfreezableMenu","onMouseEnter","freezeWhenClosed","quickReplies","quickReplyMessages","self","sendQuickReply","handleSendCommand","handleSendQuickReply","quickReplyId","quickRepliesWithDescription","reply","topMessageId","shortcut","handleKeyboardSelect","selectedCommandIndex","isEmpty","ChatCommand","botCommand","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onSendWhenOnline","onRemoveEffect","withEffects","hasCurrentEffect","effectReactions","isInStoryViewer","openEffectPicker","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","oldLang","useLang","showItems","handleOpenMessageEffectsPicker","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","anchorPosition","selectedRange","setSelectedRange","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","EDITABLE_INPUT_ID","textFormat","restoreSelection","removeAllRanges","addRange","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollWidth","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","u","m","p","getKeyFromEvent","linkUrlConfirmClassName","autoComplete","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","CustomEmojiButton","thumbnailDataUrl","decoding","inlineResult","webThumbnail","BaseResult","_gif","isForGallery","STICKER_SIZE_INLINE_BOT_RESULT","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","GifResult","MediaResult","StickerResult","ArticleResult","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","messagesById","handleSearchTextMessagesLocal","viewportResults","originalSender","ANONYMOUS_USER_ID","selectForwardedSender","senderPeer","hiddenForwardTitle","hiddenUserName","foundResult","isOnTop","preloadBackwards","teactOrderKey","LastMessageMeta","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","loadFeaturedStickers","StickerSetResult","selectCurrentGifSearch","selectIsChatWithBot","canPostInChat","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","postStatistic","toggleMessageStatistics","StatisticsRecentPostMeta","toggleStoryStatistics","imgBlobUrl","withStorySolid","forceUnreadStorySolid","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","reactionsByEmotionGraph","storyInteractionsGraph","storyReactionsByEmotionGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","statistics","selectStatistics","dcId","statisticsDcId","storiesById","selectPeerStories","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","isPercentage","ensureLovelyChart","zoomToken","create","zoomOutLabel","StatisticsOverview","recentPosts","msgId","StatisticsRecentMessage","StatisticsRecentStory","openChatByUsername","GRAPH_TITLES","viewsGraph","reactionsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","loadMessagePublicForwards","publicForwards","publicForwardsData","STATISTICS_PUBLIC_FORWARDS_LIMIT","StatisticsMessagePublicForward","currentStory","loadStoryStatistics","loadStoryPublicForwards","StatisticsStoryPublicForward","answer","voters","offsets","pollResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","setIsLoading","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","ShowMoreButton","itemName","renderViewMoreButton","getMessagePoll","resultsByOption","buildCollectionByKey","PollAnswerResults","ICON_SIZE","createTopicPanel","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","shouldCleanup","noLoopLimit","editTopicPanel","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","ERROR_NAME_MISSING","management","setBotInfo","uploadContactProfilePhoto","startBotFatherConversation","isFieldTouched","markFieldTouched","unmarkProfileTouched","isAvatarTouched","markAvatarTouched","unmarkAvatarTouched","currentName","setName","ManagementProgress","handleNameChange","trimmedName","handleChangeEditIntro","handleChangeEditCommands","handleChangeSettings","isSuggestRef","handleSelectAvatar","isSuggest","CHANNEL_TITLE_EMPTY","isSignaturesShown","canChangeInfo","canInvite","exportedInvites","updateChat","toggleSignatures","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isRevoked","adminsCount","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleToggleSignatures","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","joinRequests","onChatMemberSelect","canAddNewAdmins","adminRights","addAdmins","adminMembers","isOwner","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","inviteLink","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleSave","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","loadMoreMembers","deleteChatMember","usersId","availableMemberIds","isAdmin","canDeleteMembers","removedMembers","updateChatMemberBannedRights","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","bannedRights","RemoveGroupUserModal","forDiscussionIds","linkedChat","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","canBanUsers","isChannelsPremiumLimitReached","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","defaultBannedRights","sendStickers","sendGifs","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","isNewAdmin","selectedUserId","updateChatAdmin","permissions","setPermissions","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handlePermissionChange","handleSavePermissions","handleDismissAdmin","getControlIsDisabled","memberStatus","handleCustomTitleChange","changeInfo","blocking","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","inviteUsers","pinMessages","manageCall","manageTopics","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","canAddMembers","globalUserIds","noAdmins","toggleParticipantsHidden","setNewChatMembersDialogState","deletingUserId","setDeletingUserId","usePeerStoriesPolling","shouldUseSearchResults","listedIds","ChatNewAdminRights","handleDeleteMembersModalClose","handleToggleParticipantsHidden","handleNewMemberDialogOpen","newChatMembersProgress","NewChatMembersProgress","memberId","DeleteMemberModal","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","havePermissionChanged","setHavePermissionChanged","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","checkMedia","mediaPermissions","sendMedia","assign","embedLinks","sendPlain","sendMessages","updateChatDefaultBannedRights","shouldDisablePermissionForPublicGroup","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","isMediaDropdownOpen","setIsMediaDropdownOpen","handleOpenMediaDropdown","handleDisabledClick","exceptionMembers","getMemberExceptions","getLangKeyForBannedRightKey","translatedString","sendPhotos","sendVideos","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","editExportedChatInvite","exportChatInvite","setIsRequestNeeded","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleSaveClick","formatFullDate","n","inviteInfo","importers","requesters","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","handleCopyClicked","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","formatCountdown","getInviteIconClass","prepareContextActions","editInvite","Invite","STICKER_SIZE_INVITES","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","JoinRequest","STICKER_SIZE_JOIN_REQUESTS","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","reactionsOptions","handleSaveReactions","availableActiveReactions","handleReactionsOptionChange","handleReactionChange","local","personalPhoto","notPersonalPhoto","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","managementType","selectCurrentManagementType","ManageBot","ManageUser","ManageGroup","GroupRecentActions","ManageChannel","ManageChatPrivacyType","ManageDiscussion","ManageGroupPermissions","ManageChatRemovedUsers","ManageGroupUserPermissionsCreate","ManageGroupUserPermissions","ManageChatAdministrators","ManageGroupAdminRights","ManageGroupMembers","ManageInvites","ManageInvite","ManageReactions","ManageInviteInfo","ManageJoinRequests","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","defaultName","prices","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","needAddress","hasShippingOptions","savedCredentials","isPaymentFormUrl","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","getWebDocumentHash","handleTipsClick","tips","handlePaymentMethodClick","step","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","shouldOmitFractions","invoiceInfo","renderCheckoutItem","customIcon","provider","langStringSplit","renderTosLink","tosCheckbox","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","noRedirect","onPaymentFormSubmit","passwordHint","onPasswordChange","clearPaymentError","cardName","shouldShowSubmit","onInputChange","useFocusAfterAnimation","animationDuration","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","CardInput","ExpiryInput","Select","hasArrow","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","savedInfo","invoiceContainer","nativeProvider","nativeParams","passwordMissing","confirmPaymentUrl","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","providerName","isProviderError","isNameRequested","isShippingAddressRequested","isPhoneRequested","isEmailRequested","shouldSendPhoneToProvider","shouldSendEmailToProvider","smartGlocalToken","stripeId","passwordValidUntil","validUntil","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","setSmartGlocalCardInfo","paymentState","paymentDispatch","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","ConfirmPayment","setStep","nextStep","Checkout","field","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","shippingOption","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","sendForm","shippingOptionId","handlePaymentFormSubmit","credentials","validateRequest","requestInfo","getRequestInfo","sendCredentials","expiryMonth","expiryYear","zip","getCredentials","ConfirmPassword","handleModalClose","modalHeader","isSubmitDisabled","getIsSubmitDisabled","isRecurring","cleanupOnlyKey","currentStep","SavedPaymentCredentials","PasswordConfirm","renderModalContent","renderError","optionId","ReceiptModalRegular","receipt","credentialsTitle","totalAmount","fullAddress","handleOpenMedia","starModalData","toName","getStarsPeerTitleKey","messageLink","getMessageLink","mediaAmount","transactionId","footerTextParts","sendInviteMessages","closeInviteViaLinkModal","missingUsers","setSelectedMemberIds","unselectableIds","selectableIds","requirePremiumIds","regularIds","isRequiringPremiumToMessage","invitableWithPremiumIds","isRequiringPremiumToInvite","isEveryPremiumBlocksPm","topListPeers","handleSendInviteLink","canSendInviteLink","inviteSectionText","premiumSectionText","hasPremiumSection","hasSelectableSection","lockedUnselectedIds","lockedUnselectedSubtitle","isViewOnly","closeOneTimeMediaModal","handlePlayVoice","closeBtnTitle","voice","OneTimeModal","RoundVideo","onStop","renderMedia","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","MonkeyClose","playSegment","MonkeyPeek","hardwareConcurrency","instances","IS_TEST","Worker","createConnector"],"sourceRoot":""}