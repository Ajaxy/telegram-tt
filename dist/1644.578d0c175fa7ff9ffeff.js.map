{"version":3,"file":"1644.578d0c175fa7ff9ffeff.js","mappings":"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CAlS,mBACA8G,SACA5oB,QACA+xB,gBACA8C,gBACAZ,2BACA1J,wBACA2J,yBACAzC,iBACAjI,kBACA0N,aACAiC,iBACAhC,sBACAE,sBACAkC,wBACA7Q,gBACA4B,0BACAqN,aACA9E,wBACA4E,0BACA+C,oBACAjD,uBACAK,oBACAG,uBACAE,mBACAvN,iBACAqI,eACAuG,gBACAlB,wBACAhG,yBACAC,4BACAK,qBACAC,iBACA0F,gBACAE,cACAE,sBACAE,eACApF,cACAC,cACAN,YACAmB,gBACAZ,kBACAE,uBACAmF,iBACA1X,cACA6X,sBACArK,sBACAnqB,SACA2vB,YACA9B,+BACAmI,4BACAC,mBACAC,WACA15B,aACA21B,sBACAC,gBACA4C,iBACAE,yBACApY,0BACAmT,qBACAoF,eACAD,uBACAG,sBACAC,gBACA9E,uBACArG,kBACAJ,aACAyL,2BACApY,qBACAgU,UACAE,mBACAT,uBACAE,iBACAE,oBACAO,oBACAf,mBACAwF,cACAC,WACAC,UACAC,aACAX,qCACA9D,gBACAI,+BAEA,MAAM,YACJsE,GAAW,WACXC,GAAU,WACVC,GAAU,cACVC,GAAa,eACbC,GAAc,qBACdC,GAAoB,WACpBC,GAAU,eACVC,GAAc,oBACdC,GAAmB,WACnBC,GAAU,uBACVC,GAAsB,cACtBC,GAAa,qBACbC,GAAoB,iBACpBrkB,GAAgB,oCAChBskB,GAAmC,wBACnCC,GAAuB,oBACvBC,GAAmB,kBACnBC,GAAiB,YACjBC,GAAW,yBACX5M,GAAwB,kBACxB6M,GAAiB,kBACjBC,GAAiB,qBACjBC,GAAoB,wBACpBC,KACEh7B,EAAAA,EAAAA,MAEEwjB,IAAUtjB,EAAAA,EAAAA,KACVD,IAAOwjB,EAAAA,EAAAA,KAGPwX,IAAWv1B,EAAAA,EAAAA,IAAuB,MAElCw1B,IAAax1B,EAAAA,EAAAA,IAAwB,MAGrCy1B,IAAmBz1B,EAAAA,EAAAA,IAA0B,OAE5CioB,GAASyN,KAAWC,EAAAA,EAAAA,IAAU,KAC9BC,GAAWC,KAAgBv1B,EAAAA,EAAAA,KAAS,GACrCw1B,IAAoBC,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ACAke,QACAg0E,gBACAE,yBACAtN,mBACAnpF,iBACD,GApOe7xB,EAn3CuBiqH,EACzCplH,UACAqlH,+BACAx2D,gCACA5B,gCACAqvC,QACAj8F,YACA8E,aACAu5G,iBACA4G,aACAzP,YACA0P,kBACAC,cACA5G,iBACAvlD,YACAosD,gBACAC,yBACA/G,yBACAl+G,kBACA+jH,mBACAmB,gBACA5lH,SACAo/G,mBACA56F,UACA86F,iBACAC,gBACAC,aACAG,eACAK,mBACAC,gBACAG,sBACAE,6BACAC,oBACAG,cACAF,kBACAG,eACA/9D,kBACAziD,kBACA8hH,qBACA8C,qBACA/gE,eACA6/D,mBACAhD,aACAE,kBACAK,gBACAH,oBACAI,wBACAH,uBACAj9F,gBACAc,kBACAmiC,iBACAE,uBACA30B,aACAwsF,WACArc,YACA4e,aACAx3C,iBACA23C,uBACAkB,sBACA+B,iBACAjiB,kBACAniG,cACAujH,mBACA5nG,YACAimG,mBACAjwF,sBACAkyF,mBACAhc,2BACAhrF,mBACA4mG,gBACA1hD,YACA9hE,iBACAksG,oBACAuX,oBACAC,sBACAxoE,yBACAi6D,qBACAyM,qBACAwD,wBACApG,qBACA+C,gBACAD,gBACA3zD,oBACAg0D,0BACA8B,4BACAhC,gCACA7zD,oCACAi2D,uBACA3F,gBACAtkB,eACAmI,yBACAlnD,sBACAgnE,gBACAqC,QACA9B,sBACAC,kBACAhyF,UACAke,QACAg0E,gBACAE,yBACAoC,4BACA1P,oBACAnpF,sBAEA,MAAM,uBACJ84E,GAAsB,qBACtBhkF,GAAoB,uBACpBgkG,GAAsB,sBACtBC,GAAqB,iBACrBpjD,GAAgB,iBAChBqjD,KACErpH,EAAAA,EAAAA,MAGEyB,IAAMiE,EAAAA,EAAAA,IAAuB,MAE7B4jH,IAAkB5jH,EAAAA,EAAAA,IAAuB,MAEzCwgG,IAAmBxgG,EAAAA,EAAAA,IAAuB,MAE1CzF,IAAOC,EAAAA,EAAAA,MAEN6D,GAAuBwlH,KAA0BvjH,EAAAA,EAAAA,KAAS,IAC1DwjH,GAAwBC,KAA6BzjH,EAAAA,E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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.module.scss?1d52","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/usePaidMessageConfirmation.ts","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSingularPaidMedia.ts","webpack://telegram-t/./src/components/middle/message/helpers/calculateAlbumLayout.ts","webpack://telegram-t/./src/util/languageDetection.ts","webpack://telegram-t/./src/components/middle/message/hooks/useDetectChatLanguage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOuterHandlers.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStory.tsx","webpack://telegram-t/./src/components/common/TopicChip.tsx","webpack://telegram-t/./src/components/common/TopicChip.module.scss?5208","webpack://telegram-t/./src/components/middle/message/hocs/withSelectControl.tsx","webpack://telegram-t/./src/components/middle/message/Album.tsx","webpack://telegram-t/./src/components/common/hooks/useAnimatedEmoji.ts","webpack://telegram-t/./src/components/middle/message/AnimatedCustomEmoji.tsx","webpack://telegram-t/./src/components/middle/message/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/middle/message/CommentButton.tsx","webpack://telegram-t/./src/components/middle/message/Contact.module.scss?fec1","webpack://telegram-t/./src/components/middle/message/Contact.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/FactCheck.module.scss?3842","webpack://telegram-t/./src/components/middle/message/FactCheck.tsx","webpack://telegram-t/./src/components/middle/message/Game.tsx","webpack://telegram-t/./src/components/middle/message/Giveaway.module.scss?9b0c","webpack://telegram-t/./src/components/middle/message/Giveaway.tsx","webpack://telegram-t/./src/components/middle/message/InlineButtons.tsx","webpack://telegram-t/./src/components/middle/message/Invoice.tsx","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.module.scss?19f6","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.tsx","webpack://telegram-t/./src/components/middle/message/Location.tsx","webpack://telegram-t/./src/components/middle/message/MessageMeta.tsx","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.module.scss?15a3","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.tsx","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.module.scss?e3d6","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.tsx","webpack://telegram-t/./src/components/middle/message/PollOption.tsx","webpack://telegram-t/./src/components/middle/message/Poll.tsx","webpack://telegram-t/./src/components/middle/message/Sticker.module.scss?30d0","webpack://telegram-t/./src/components/middle/message/Sticker.tsx","webpack://telegram-t/./src/components/middle/message/Story.tsx","webpack://telegram-t/./src/components/middle/message/StoryMention.tsx","webpack://telegram-t/./src/components/middle/message/Message.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useInnerHandlers.ts","webpack://telegram-t/./src/hooks/useTextLanguage.ts","webpack://telegram-t/./src/components/middle/message/helpers/buildContentClassName.ts","webpack://telegram-t/./src/components/middle/message/MessageAppendix.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.module.scss?8703","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/hooks/useMarkScrolled/useMarkScrolled.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/progressiveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isPlaying) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media!.duration) : formatMediaDuration(media!.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({\n        chatId,\n        messageIds: [editedMessage.id],\n        isSchedule: type === 'scheduled',\n      });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, MessageListType, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  paidMessagesStars?: number;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  canEditMedia,\n  editingMessage,\n  messageListType,\n  paidMessagesStars,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId\n          && bot.attachMenuPeerTypes && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>\n            {lang(messageListType === 'scheduled' && paidMessagesStars\n              ? 'DescriptionScheduledPaidMediaNotAllowed'\n              : 'DescriptionRestrictedMedia')}\n          </MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {oldLang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {oldLang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {oldLang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{oldLang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('composer-action-button bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId, WebPageMediaSize } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const hasMediaSizeOptions = webPagePreview?.hasLargeMedia;\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ChatInput.EditLink.LargerMedia')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang(('ChatInput.EditLink.SmallerMedia'))}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  GlobalState, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  ISettings,\n  MessageList,\n  MessageListType,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  DEFAULT_MAX_MESSAGE_LENGTH,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport { getChatNotifySettings } from '../../global/helpers/notifications';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectNoWebPage,\n  selectPeerPaidMessagesStars,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport usePaidMessageConfirmation from '../middle/composer/hooks/usePaidMessageConfirmation';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport AnimatedCounter from './AnimatedCounter';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport PaymentMessageConfirmDialog from './PaymentMessageConfirmDialog';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: TeactNode | string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    forwardedMessagesCount?: number;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    paidMessagesStars?: number;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n    shouldPaidMessageAutoApprove?: boolean;\n    isSilentPosting?: boolean;\n    isPaymentMessageConfirmDialogOpen: boolean;\n    starsBalance: number;\n    isStarsBalanceModalOpen: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  forwardedMessagesCount,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  paidMessagesStars,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n  isSilentPosting,\n  onDropHide,\n  onFocus,\n  onBlur,\n  onForward,\n  isPaymentMessageConfirmDialogOpen,\n  starsBalance,\n  isStarsBalanceModalOpen,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n    updateChatSilentPosting,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const counterRef = useRef<HTMLSpanElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    if (chatId && chat && !sendAsPeerIds && isReady && (isChatSuperGroup(chat) || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat,\n      chatFullInfo,\n      isChatWithBot,\n      isInStoryViewer,\n      paidMessagesStars,\n      isInScheduledList),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer, paidMessagesStars, isInScheduledList],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const messagesCount = useDerivedState(() => {\n    if (hasAttachments) return attachments.length;\n    const messagesInInput = (getHtml() || hasAttachments) ? 1 : 0;\n    if (!isForwarding || !forwardedMessagesCount) return messagesInInput || 1;\n    return forwardedMessagesCount + messagesInInput;\n  }, [getHtml, hasAttachments, attachments, isForwarding, forwardedMessagesCount]);\n  const starsForAllMessages = paidMessagesStars ? messagesCount * paidMessagesStars : 0;\n\n  const {\n    closeConfirmDialog: closeConfirmModalPayForMessage,\n    dialogHandler: paymentMessageConfirmDialogHandler,\n    shouldAutoApprove: shouldPaidMessageAutoApprove,\n    setAutoApprove: setShouldPaidMessageAutoApprove,\n    handleWithConfirmation: handleActionWithPaymentConfirmation,\n  } = usePaidMessageConfirmation(starsForAllMessages, isStarsBalanceModalOpen, starsBalance);\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: oldLang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: oldLang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: oldLang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const canSendAttachments = (attachmentsToSend: ApiAttachment[]): boolean => {\n    if (!currentMessageList && !storyId) {\n      return false;\n    }\n\n    const { text } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return false;\n    }\n    if (!validateTextLength(text, true)) return false;\n    if (!checkSlowMode()) return false;\n\n    return true;\n  };\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n    isSilent = isSilent || isSilentPosting;\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      if (editingMessage) {\n        sendAttachments({\n          attachments,\n          sendCompressed,\n          sendGrouped,\n          isInvertedMedia,\n        });\n        return;\n      }\n\n      handleActionWithPaymentConfirmation(sendAttachments, {\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      sendAttachments({\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isSilent,\n        scheduledAt,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendCore = useLastCallback(\n    (currentAttachments: ApiAttachment[], isSilent = false, scheduledAt?: number) => {\n      const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n      if (currentAttachments.length) {\n        if (canSendAttachments(currentAttachments)) {\n          sendAttachments({\n            attachments: currentAttachments,\n            scheduledAt,\n            isSilent,\n          });\n        }\n        return;\n      }\n\n      if (!text && !isForwarding) {\n        return;\n      }\n\n      if (!validateTextLength(text)) return;\n\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const effectId = effect?.id;\n\n      if (text || isForwarding) {\n        if (!checkSlowMode()) return;\n\n        const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n        if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n        sendMessage({\n          messageList: currentMessageList,\n          text,\n          entities,\n          scheduledAt,\n          isSilent,\n          shouldUpdateStickerSetOrder,\n          isInvertedMedia,\n          effectId,\n          webPageMediaSize: attachmentSettings.webPageMediaSize,\n          webPageUrl: hasWebPagePreview ? webPagePreview!.url : undefined,\n          isForwarding,\n        });\n      }\n\n      lastMessageSendTimeSeconds.current = getServerTime();\n      clearDraft({\n        chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n      });\n\n      if (IS_IOS && messageInput && messageInput === document.activeElement) {\n        applyIosAutoCapitalizationFix(messageInput);\n      }\n\n      // Wait until message animation starts\n      requestMeasure(() => {\n        resetComposer();\n      });\n    },\n  );\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    handleSendCore(currentAttachments, isSilent, scheduledAt);\n  });\n\n  const handleSendWithConfirmation = useLastCallback((isSilent = false, scheduledAt?: number) => {\n    handleActionWithPaymentConfirmation(handleSend, isSilent, scheduledAt);\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        chatId,\n        threadId,\n        queryId,\n        scheduledAt,\n        isSilent: isSilent || isSilentPosting,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(handleMessageSchedule, { gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendMessage, { messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule, { sticker, isSilent }, scheduledAt, currentMessageList!,\n        );\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        {\n          messageList: currentMessageList,\n          sticker,\n          isSilent,\n          shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n        },\n      );\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(handleMessageSchedule,\n          {\n            id: inlineResult.id,\n            queryId: inlineResult.queryId,\n            isSilent,\n          },\n          scheduledAt,\n          currentMessageList!);\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendInlineBotResult,\n        {\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          threadId,\n          chatId,\n          isSilent,\n        });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { poll },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n      closePollModal();\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, poll, isSilent: isSilentPosting },\n      );\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  const handleToggleSilentPosting = useLastCallback(() => {\n    const newValue = !isSilentPosting;\n    updateChatSilentPosting({ chatId, isEnabled: newValue });\n\n    showNotification({\n      localId: 'silentPosting',\n      icon: newValue ? 'mute' : 'unmute',\n      message: lang(`ComposerSilentPosting${newValue ? 'Enabled' : 'Disabled'}Tootlip`),\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const hasText = useDerivedState(() => Boolean(getHtml()), [getHtml]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage\n    && messageListType === 'thread';\n  const isBotMenuButtonOpen = withBotMenuButton && !hasText && !activeVoiceRecording;\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  const placeholder = useMemo(() => {\n    if (activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER) {\n      return '';\n    }\n\n    if (!isComposerBlocked) {\n      if (botKeyboardPlaceholder) return botKeyboardPlaceholder;\n      if (inputPlaceholder) return inputPlaceholder;\n      if (paidMessagesStars) {\n        return lang('ComposerPlaceholderPaidMessage', {\n          amount: formatStarsAsIcon(lang, paidMessagesStars, { asFont: true, className: 'placeholder-star-icon' }),\n        }, {\n          withNodes: true,\n        });\n      }\n      if (chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID) {\n        return replyToTopic\n          ? lang('ComposerPlaceholderTopic', { topic: replyToTopic.title })\n          : lang('ComposerPlaceholderTopicGeneral');\n      }\n      if (isChannel) {\n        return lang(isSilentPosting ? 'ComposerPlaceholderBroadcastSilent' : 'ComposerPlaceholderBroadcast');\n      }\n      return lang('ComposerPlaceholder');\n    }\n\n    if (isInStoryViewer) return lang('ComposerStoryPlaceholderLocked');\n\n    return lang('ComposerPlaceholderNoText');\n  }, [\n    activeVoiceRecording, botKeyboardPlaceholder, chat, inputPlaceholder, isChannel, isComposerBlocked,\n    isInStoryViewer, isSilentPosting, lang, replyToTopic, threadId, windowWidth, paidMessagesStars,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        handleSendWithConfirmation();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: oldLang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId, messageListType });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    handleActionWithPaymentConfirmation(sendMessage, { text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(sendSilent);\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(\n      handleMessageSchedule, {}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id,\n    );\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(handleMessageSchedule,\n          { sendCompressed, sendGrouped, isInvertedMedia },\n          scheduledAt,\n          currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      handleActionWithPaymentConfirmation(sendSilent, { sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSendWithConfirmation;\n    }\n  }, [mainButtonState, handleEditComplete, handleSendWithConfirmation]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  const shouldRenderPaidBadge = Boolean(paidMessagesStars && mainButtonState === MainButtonState.Send);\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={!paidMessagesStars && isInScheduledList}\n        canSchedule={!paidMessagesStars}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n        paidMessagesStars={paidMessagesStars}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName(\n                    'bot-commands', 'composer-action-button',\n                  )}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={oldLang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    'composer-action-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={placeholder}\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n            messageListType={messageListType}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              <Transition\n                className=\"composer-action-buttons-container\"\n                slideClassName=\"composer-action-buttons\"\n                activeKey={Number(hasText)}\n                direction=\"inverse\"\n                name=\"slideFadeAndroid\"\n              >\n                {!hasText && (\n                  <>\n                    {isChannel && (\n                      <Transition className=\"composer-action-button\" name=\"reveal\" activeKey={Number(isSilentPosting)}>\n                        <Button\n                          round\n                          faded\n                          className=\"composer-action-button\"\n                          color=\"translucent\"\n                          onClick={handleToggleSilentPosting}\n                          ariaLabel={lang(\n                            isSilentPosting ? 'AriaComposerSilentPostingDisable' : 'AriaComposerSilentPostingEnable',\n                          )}\n                        >\n                          <Icon name={isSilentPosting ? 'mute' : 'unmute'} />\n                        </Button>\n                      </Transition>\n                    )}\n                    {withScheduledButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button scheduled-button\"\n                        color=\"translucent\"\n                        onClick={handleAllScheduledClick}\n                        ariaLabel={lang('AriaComposerOpenScheduled')}\n                      >\n                        <Icon name=\"schedule\" />\n                      </Button>\n                    )}\n                    {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                      <ResponsiveHoverButton\n                        className={buildClassName('composer-action-button', isBotKeyboardOpen && 'activated')}\n                        round\n                        color=\"translucent\"\n                        onActivate={openBotKeyboard}\n                        ariaLabel={lang('AriaComposerBotKeyboard')}\n                      >\n                        <Icon name=\"bot-command\" />\n                      </ResponsiveHoverButton>\n                    )}\n                  </>\n                )}\n              </Transition>\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n              messageListType={messageListType}\n              paidMessagesStars={paidMessagesStars}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={oldLang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={oldLang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={oldLang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n        <Button\n          className={buildClassName('paidStarsBadge', shouldRenderPaidBadge && 'visible')}\n          nonInteractive\n          size=\"tiny\"\n          color=\"stars\"\n          pill\n          fluid\n        >\n          <div className=\"paidStarsBadgeText\">\n            <Icon name=\"star\" className={buildClassName('star-amount-icon', className)} />\n            <AnimatedCounter\n              ref={counterRef}\n              text={lang.number(starsForAllMessages)}\n            />\n          </div>\n        </Button>\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={!paidMessagesStars && isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n      <PaymentMessageConfirmDialog\n        isOpen={isPaymentMessageConfirmDialogOpen}\n        onClose={closeConfirmModalPayForMessage}\n        userName={chat ? getPeerTitle(lang, chat) : undefined}\n        messagePriceInStars={paidMessagesStars || 0}\n        messagesCount={messagesCount}\n        shouldAutoApprove={shouldPaidMessageAutoApprove}\n        setAutoApprove={setShouldPaidMessageAutoApprove}\n        confirmHandler={paymentMessageConfirmDialogHandler}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const paidMessagesStars = selectPeerPaidMessagesStars(global, chatId);\n\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n      shouldPaidMessageAutoApprove,\n    } = global.settings.byKey;\n    const {\n      forwardMessages: { messageIds: forwardMessageIds },\n    } = selectTabState(global);\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const isSilentPosting = chat && getChatNotifySettings(\n      chat,\n      selectNotifyDefaults(global),\n      selectNotifyException(global, chatId),\n    )?.isSilentPosting;\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n    const isForwarding = chatId === tabState.forwardMessages.toChatId;\n    const starsBalance = global.stars?.balance.amount || 0;\n    const isStarsBalanceModalOpen = Boolean(tabState.starsBalanceModal);\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n      paidMessagesStars,\n      shouldPaidMessageAutoApprove,\n      isSilentPosting,\n      isPaymentMessageConfirmDialogOpen: tabState.isPaymentMessageConfirmDialogOpen,\n      starsBalance,\n      isStarsBalanceModalOpen,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\",\"share\":\"Sbagy_Tm\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n          className={styles.share}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"eScpikxM\"};","import type { FC, StateHookSetter } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './PaymentMessageConfirmDialog.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  userName?: string;\n  messagePriceInStars: number;\n  messagesCount: number;\n  shouldAutoApprove: boolean;\n  setAutoApprove: StateHookSetter<boolean>;\n  confirmHandler: NoneToVoidFunction;\n};\n\nconst PaymentMessageConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  userName,\n  messagePriceInStars,\n  messagesCount,\n  shouldAutoApprove: shouldPaidMessageAutoApprove,\n  setAutoApprove: setShouldPaidMessageAutoApprove,\n  confirmHandler,\n}) => {\n  const lang = useLang();\n\n  const confirmPaymentMessage = messagesCount === 1 ? lang('ConfirmationModalPaymentForOneMessage', {\n    user: userName,\n    amount: messagePriceInStars,\n  }, {\n    withMarkdown: true,\n    withNodes: true,\n  }) : lang('ConfirmationModalPaymentForMessages', {\n    user: userName,\n    price: messagePriceInStars,\n    amount: messagePriceInStars * messagesCount,\n    count: messagesCount,\n  }, {\n    withMarkdown: true,\n    withNodes: true,\n  });\n\n  const confirmLabel = lang('ButtonPayForMessage', { count: messagesCount }, {\n    withNodes: true,\n  });\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleConfirmPayment')}\n      confirmLabel={confirmLabel}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {confirmPaymentMessage}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('DoNotAskAgain')}\n        checked={shouldPaidMessageAutoApprove}\n        onCheck={setShouldPaidMessageAutoApprove}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(PaymentMessageConfirmDialog);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  const hasAvatarMediaViewer = withMediaViewer && !isSavedMessages;\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={hasAvatarMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n    emojiStatusSlug?: string;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  emojiStatusSlug,\n  profilePhotos,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n    openUniqueGiftBySlug,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (emojiStatusSlug) {\n      openUniqueGiftBySlug({ slug: emojiStatusSlug });\n      return;\n    }\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n    const emojiStatusSlug = emojiStatus?.type === 'collectible' ? emojiStatus.slug : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      emojiStatusSlug,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message)?.text !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getPeerTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getPeerTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        asPreview: true,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <span className=\"embedded-sender-wrapper\">\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderForwardSender() {\n    return forwardSenderTitle && !areSendersSame && (\n      <span className=\"embedded-forward-sender-wrapper\">\n        <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n        <span className=\"forward-sender-title\">\n          {renderText(forwardSenderTitle)}\n        </span>\n      </span>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      peer={sender}\n      emojiIconClassName=\"EmbeddedMessage--background-icons\"\n      ref={ref}\n      shouldReset\n      noUserColors={noUserColors}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n        'no-selection',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {renderForwardSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        isMuted: !isMuted,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, isMuted: !isMuted });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (chat?.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      { hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  groupStatefulContent,\n  isUserId,\n  isUserOnline,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n    topics,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      isMuted: getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id)),\n      lastMessageSender,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { getServerTime } from '../../../util/serverTime';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => {\n    if (!isForum) {\n      return (topic || chat).unreadCount;\n    }\n\n    return topicsWithUnread?.length;\n  }, [chat, topic, topicsWithUnread, isForum]);\n\n  const shouldBeUnMuted = useMemo(() => {\n    if (!isForum) {\n      return !isMuted || topic?.notifySettings.mutedUntil === 0;\n    }\n\n    if (isMuted) {\n      return topicsWithUnread?.some((acc) => acc.notifySettings.mutedUntil === 0);\n    }\n\n    const isEveryUnreadMuted = topicsWithUnread?.every((acc) => (\n      acc.notifySettings.mutedUntil && acc.notifySettings.mutedUntil > getServerTime()\n    ));\n\n    return !isEveryUnreadMuted;\n  }, [isForum, isMuted, topicsWithUnread, topic?.notifySettings.mutedUntil]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    !shouldBeUnMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', !shouldBeUnMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', !shouldBeUnMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import type { RefObject } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n  sessionRef: RefObject<HTMLDivElement | null>;\n};\n\nconst UnconfirmedSession = ({ sessionRef, sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  const lang = useOldLang();\n\n  useResizeObserver(sessionRef, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={sessionRef}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  const {\n    ref: sessionRef,\n    shouldRender,\n  } = useShowTransition({\n    isOpen: shouldShowUnconfirmedSessions,\n    withShouldRender: true,\n  });\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldRender && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessionRef={sessionRef}\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { groupStatefulContent } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  lastMessageSender?: ApiPeer;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  isChatMuted,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed, notifySettings,\n  } = topic;\n  const isMuted = Boolean(notifySettings.mutedUntil || (notifySettings.mutedUntil === undefined && isChatMuted));\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    isChatMuted,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {Boolean(notifySettings.mutedUntil) && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    const isChatMuted = chat && getIsChatMuted(\n      chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id),\n    );\n\n    return {\n      chat,\n      lastMessage,\n      lastMessageSender,\n      typingStatus,\n      isChatMuted,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  isChatMuted,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, notifySettings, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((isChatMuted && notifySettings.mutedUntil === undefined) || notifySettings.mutedUntil)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, isChatMuted, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n} from '../../../../global/helpers';\nimport { getMessageSenderName } from '../../../../global/helpers/peers';\nimport buildClassName from '../../../../util/buildClassName';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  lastMessageTopic,\n  lastMessageSender,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const oldLang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(mediaContent) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(mediaContent, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{oldLang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            asPreview: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    const senderName = getMessageSenderName(oldLang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    chat, chatId, draft, isRoundVideo, isTopic, oldLang, lastMessage, lastMessageSender, lastMessageTopic,\n    mediaBlobUrl, mediaThumbnail, observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, undefined, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type {\n  IAnchorPosition, ISettings, MessageListType, ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: TeactNode | string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n  messageListType,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId, messageListType });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n  const placeholderAriaLabel = typeof placeholder === 'string' ? placeholder : undefined;\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={oldLang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholderAriaLabel}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {oldLang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'composer-action-button mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('composer-action-button symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport { filterPeersByQuery } from '../../../../global/helpers/peers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterPeersByQuery({\n      ids: unique([\n        ...((getWithInlineBots() && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]),\n      query: filter,\n      type: 'user',\n    });\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport { PAID_MESSAGES_PURPOSE } from '../../../../config';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePaidMessageConfirmation(\n  starsForAllMessages: number,\n  isStarsBalanceModeOpen: boolean,\n  starsBalance: number,\n) {\n  const {\n    shouldPaidMessageAutoApprove,\n  } = getGlobal().settings.byKey;\n\n  const [shouldAutoApprove,\n    setAutoApprove] = useState(Boolean(shouldPaidMessageAutoApprove));\n  const [isWaitingStarsTopup, setIsWaitingStarsTopup] = useState(false);\n  const confirmPaymentHandlerRef = useRef<NoneToVoidFunction | undefined>(undefined);\n\n  const closeConfirmDialog = useLastCallback(() => {\n    getActions().closePaymentMessageConfirmDialogOpen();\n  });\n\n  useEffect(() => {\n    if (isWaitingStarsTopup && !isStarsBalanceModeOpen) {\n      setIsWaitingStarsTopup(false);\n\n      if (starsBalance > starsForAllMessages) {\n        confirmPaymentHandlerRef?.current?.();\n      }\n    }\n  }, [isWaitingStarsTopup, isStarsBalanceModeOpen, starsBalance, starsForAllMessages]);\n\n  const handleStarsTopup = useLastCallback(() => {\n    getActions().openStarsBalanceModal({\n      topup: {\n        balanceNeeded: starsForAllMessages,\n        purpose: PAID_MESSAGES_PURPOSE,\n      },\n    });\n    setIsWaitingStarsTopup(true);\n  });\n\n  const dialogHandler = useLastCallback(() => {\n    if (starsForAllMessages > starsBalance) {\n      handleStarsTopup();\n    } else {\n      confirmPaymentHandlerRef?.current?.();\n    }\n    getActions().closePaymentMessageConfirmDialogOpen();\n    if (shouldAutoApprove) getActions().setPaidMessageAutoApprove();\n  });\n\n  const handleWithConfirmation = <T extends (...args: any[]) => void>(\n    handler: T,\n    ...args: Parameters<T>\n  ) => {\n    if (starsForAllMessages) {\n      confirmPaymentHandlerRef.current = () => handler(...args);\n      if (!shouldPaidMessageAutoApprove) {\n        getActions().openPaymentMessageConfirmDialogOpen();\n        return;\n      }\n\n      if (starsForAllMessages > starsBalance) {\n        handleStarsTopup();\n        return;\n      }\n    }\n\n    handler(...args);\n  };\n\n  return {\n    closeConfirmDialog,\n    handleWithConfirmation,\n    dialogHandler,\n    shouldAutoApprove,\n    setAutoApprove,\n  };\n}\n","import {\n  type RefObject,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n} : {\n  ref?: RefObject<RefType | null>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  // eslint-disable-next-line no-null/no-null\n  const localRef = useRef<RefType>(null);\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n    onStateChange?.({\n      height: 0,\n      isOpen: false,\n    });\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { ApiPaidMedia } from '../../../../api/types';\n\nexport default function getSingularPaidMedia(media?: ApiPaidMedia) {\n  if (!media || media.extendedMedia.length !== 1) {\n    return {\n      photo: undefined,\n      video: undefined,\n    };\n  }\n\n  const singularMedia = media.extendedMedia[0];\n  const isPreview = 'mediaType' in singularMedia;\n  const photo = isPreview ? (!singularMedia.duration ? singularMedia : undefined) : singularMedia.photo;\n  const video = isPreview ? (singularMedia.duration ? singularMedia : undefined) : singularMedia.video;\n\n  return { photo, video };\n}\n","/* eslint-disable no-bitwise */\n// Based on\n// https://github.com/telegramdesktop/tdesktop/blob/dev/Telegram/SourceFiles/ui/grouped_layout.cpp\n// https://github.com/overtake/TelegramSwift/blob/master/Telegram-Mac/GroupedLayout.swift#L83\n\nimport type { ApiDimensions, ApiMessage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { getMessageContent } from '../../../../global/helpers';\nimport { clamp } from '../../../../util/math';\nimport { getAvailableWidth } from '../../../common/helpers/mediaDimensions';\nimport { calculateMediaDimensions } from './mediaDimensions';\n\nexport const AlbumRectPart = {\n  None: 0,\n  Top: 1,\n  Right: 2,\n  Bottom: 4,\n  Left: 8,\n};\n\ntype IAttempt = {\n  lineCounts: number[];\n  heights: number[];\n};\nexport type IMediaDimensions = {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n};\ntype IMediaLayout = {\n  dimensions: IMediaDimensions;\n  sides: number;\n};\ntype ILayoutParams = {\n  ratios: number[];\n  proportions: string;\n  averageRatio: number;\n  maxWidth: number;\n  minWidth: number;\n  maxHeight: number;\n  spacing: number;\n};\nexport type IAlbumLayout = {\n  layout: IMediaLayout[];\n  containerStyle: ApiDimensions;\n};\n\nfunction getRatios(messages: ApiMessage[], isSingleMessage?: boolean, isMobile?: boolean) {\n  const isOutgoing = messages[0].isOutgoing;\n  const allMedia = (isSingleMessage\n    ? messages[0].content.paidMedia!.extendedMedia.map((media) => (\n      'mediaType' in media ? media : (media.photo || media.video)\n    ))\n    : messages.map((message) => (\n      getMessageContent(message).photo || getMessageContent(message).video\n    ))\n  ).filter(Boolean);\n  return allMedia.map(\n    (media) => {\n      const dimensions = calculateMediaDimensions({\n        media,\n        isOwn: isOutgoing,\n        isMobile,\n      }) as ApiDimensions;\n\n      return dimensions.width / dimensions.height;\n    },\n  );\n}\n\nfunction getProportions(ratios: number[]) {\n  return ratios.map((ratio) => (ratio > 1.2 ? 'w' : (ratio < 0.8 ? 'n' : 'q'))).join('');\n}\n\nfunction getAverageRatio(ratios: number[]) {\n  return ratios.reduce((result, ratio) => ratio + result, 1) / ratios.length;\n}\n\nfunction accumulate(list: number[], initValue: number) {\n  return list.reduce((accumulator, item) => accumulator + item, initValue);\n}\n\nfunction cropRatios(ratios: number[], averageRatio: number) {\n  return ratios.map((ratio) => {\n    return (averageRatio > 1.1 ? clamp(ratio, 1, 2.75) : clamp(ratio, 0.6667, 1));\n  });\n}\n\nfunction calculateContainerSize(layout: IMediaLayout[]) {\n  const styles: ApiDimensions = { width: 0, height: 0 };\n  layout.forEach(({\n    dimensions,\n    sides,\n  }) => {\n    if (sides & AlbumRectPart.Right) {\n      styles.width = dimensions.width + dimensions.x;\n    }\n    if (sides & AlbumRectPart.Bottom) {\n      styles.height = dimensions.height + dimensions.y;\n    }\n  });\n\n  return styles;\n}\n\nexport function calculateAlbumLayout(\n  isOwn: boolean,\n  noAvatars: boolean,\n  album: IAlbum,\n  isMobile?: boolean,\n): IAlbumLayout {\n  const spacing = 2;\n  const ratios = getRatios(album.messages, album.isPaidMedia, isMobile);\n  const proportions = getProportions(ratios);\n  const averageRatio = getAverageRatio(ratios);\n  const albumCount = ratios.length;\n  const forceCalc = ratios.some((ratio) => ratio > 2);\n  const maxWidth = getAvailableWidth(isOwn, false, noAvatars, isMobile);\n  const maxHeight = maxWidth;\n\n  let layout;\n\n  const params = {\n    ratios,\n    proportions,\n    averageRatio,\n    maxWidth,\n    minWidth: 100,\n    maxHeight,\n    spacing,\n  };\n\n  if (albumCount >= 5 || forceCalc) {\n    layout = layoutWithComplexLayouter(params);\n  } else if (albumCount === 2) {\n    layout = layoutTwo(params);\n  } else if (albumCount === 3) {\n    layout = layoutThree(params);\n  } else {\n    layout = layoutFour(params);\n  }\n\n  return {\n    layout,\n    containerStyle: calculateContainerSize(layout),\n  };\n}\n\nfunction layoutWithComplexLayouter({\n  ratios: originalRatios,\n  averageRatio,\n  maxWidth,\n  minWidth,\n  spacing,\n  maxHeight = (4 * maxWidth) / 3,\n}: ILayoutParams) {\n  const ratios = cropRatios(originalRatios, averageRatio);\n  const count = originalRatios.length;\n  const result = new Array(count);\n  const attempts: IAttempt[] = [];\n\n  const multiHeight = (offset: number, attemptCount: number) => {\n    const attemptRatios = ratios.slice(offset, offset + attemptCount);\n    const sum = accumulate(attemptRatios, 0);\n\n    return (maxWidth - (attemptCount - 1) * spacing) / sum;\n  };\n\n  const pushAttempt = (lineCounts: number[]) => {\n    const heights: number[] = [];\n    let offset = 0;\n    lineCounts.forEach((currentCount) => {\n      heights.push(multiHeight(offset, currentCount));\n      offset += currentCount;\n    });\n\n    attempts.push({\n      lineCounts,\n      heights,\n    });\n  };\n\n  for (let first = 1; first !== count; ++first) {\n    const second = count - first;\n    if (first <= 3 && second <= 3) {\n      pushAttempt([first, second]);\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      const third = count - first - second;\n      if (first <= 3 && second <= (averageRatio < 0.85 ? 4 : 3) && third <= 3) {\n        pushAttempt([first, second, third]);\n      }\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      for (let third = 1; third !== count - first - second; ++third) {\n        const fourth = count - first - second - third;\n        if (first <= 3 && second <= 3 && third <= 3 && fourth <= 4) {\n          pushAttempt([first, second, third, fourth]);\n        }\n      }\n    }\n  }\n\n  let optimalAttempt: IAttempt | undefined;\n  let optimalDiff = 0;\n  for (let i = 0; i < attempts.length; i++) {\n    const {\n      heights,\n      lineCounts,\n    } = attempts[i];\n    const lineCount = lineCounts.length;\n    const totalHeight = accumulate(heights, 0) + spacing * (lineCount - 1);\n    const minLineHeight = Math.min(...heights);\n    const bad1 = minLineHeight < minWidth ? 1.5 : 1;\n    const bad2 = (() => {\n      for (let line = 1; line !== lineCount; ++line) {\n        if (lineCounts[line - 1] > lineCounts[line]) {\n          return 1.5;\n        }\n      }\n\n      return 1;\n    })();\n    const diff = Math.abs(totalHeight - maxHeight) * bad1 * bad2;\n\n    if (!optimalAttempt || diff < optimalDiff) {\n      optimalAttempt = attempts[i];\n      optimalDiff = diff;\n    }\n  }\n\n  const optimalCounts = optimalAttempt!.lineCounts;\n  const optimalHeights = optimalAttempt!.heights;\n  const rowCount = optimalCounts.length;\n  let index = 0;\n  let y = 0;\n  for (let row = 0; row !== rowCount; ++row) {\n    const colCount = optimalCounts[row];\n    const lineHeight = optimalHeights[row];\n    const height = Math.round(lineHeight);\n    let x = 0;\n\n    for (let col = 0; col !== colCount; ++col) {\n      const sides = AlbumRectPart.None\n        | (row === 0 ? AlbumRectPart.Top : AlbumRectPart.None)\n        | (row === rowCount - 1 ? AlbumRectPart.Bottom : AlbumRectPart.None)\n        | (col === 0 ? AlbumRectPart.Left : AlbumRectPart.None)\n        | (col === colCount - 1 ? AlbumRectPart.Right : AlbumRectPart.None);\n      const ratio = ratios[index];\n      const width = col === colCount - 1 ? maxWidth - x : Math.round(ratio * lineHeight);\n      result[index] = {\n        dimensions: {\n          x,\n          y,\n          width,\n          height,\n        },\n        sides,\n      };\n      x += width + spacing;\n      ++index;\n    }\n    y += height + spacing;\n  }\n\n  return result;\n}\n\nfunction layoutTwo(params: ILayoutParams) {\n  const {\n    ratios,\n    proportions,\n    averageRatio,\n  } = params;\n  return proportions === 'ww' && averageRatio > 1.4 && ratios[1] - ratios[0] < 0.2\n    ? layoutTwoTopBottom(params)\n    : proportions === 'ww' || proportions === 'qq'\n      ? layoutTwoLeftRightEqual(params)\n      : layoutTwoLeftRight(params);\n}\n\nfunction layoutTwoTopBottom(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const height = Math.round(Math.min(maxWidth / ratios[0], Math.min(maxWidth / ratios[1], (maxHeight - spacing) / 2)));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: height + spacing,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutTwoLeftRightEqual(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const width = (maxWidth - spacing) / 2;\n  const height = Math.round(Math.min(width / ratios[0], Math.min(width / ratios[1], maxHeight)));\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: width + spacing,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutTwoLeftRight(params: ILayoutParams) {\n  const {\n    ratios,\n    minWidth,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const minimalWidth = Math.round(1.5 * minWidth);\n  const secondWidth = Math.min(\n    Math.round(\n      Math.max(\n        0.4 * (maxWidth - spacing),\n        (maxWidth - spacing) / ratios[0] / (1 / ratios[0] + 1 / ratios[1]),\n      ),\n    ),\n    maxWidth - spacing - minimalWidth,\n  );\n  const firstWidth = maxWidth - secondWidth - spacing;\n  const height = Math.min(maxHeight, Math.round(Math.min(firstWidth / ratios[0], secondWidth / ratios[1])));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: firstWidth + spacing,\n      y: 0,\n      width: secondWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutThree(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'n'\n    ? layoutThreeLeftAndOther(params)\n    : layoutThreeTopAndOther(params);\n}\n\nfunction layoutThreeLeftAndOther(params: ILayoutParams) {\n  const {\n    maxHeight,\n    spacing,\n    ratios,\n    maxWidth,\n    minWidth,\n  } = params;\n  const firstHeight = maxHeight;\n  const thirdHeight = Math.round(\n    Math.min(\n      (maxHeight - spacing) / 2,\n      (ratios[1] * (maxWidth - spacing)) / (ratios[2] + ratios[1]),\n    ),\n  );\n  const secondHeight = firstHeight - thirdHeight - spacing;\n  const rightWidth = Math.max(\n    minWidth,\n    Math.round(\n      Math.min(\n        (maxWidth - spacing) / 2,\n        Math.min(\n          thirdHeight * ratios[2],\n          secondHeight * ratios[1],\n        ),\n      ),\n    ),\n  );\n  const leftWidth = Math.min(Math.round(firstHeight * ratios[0]), maxWidth - spacing - rightWidth);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: leftWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: 0,\n      width: rightWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: secondHeight + spacing,\n      width: rightWidth,\n      height: thirdHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutThreeTopAndOther(params: ILayoutParams) {\n  const {\n    maxWidth,\n    ratios,\n    maxHeight,\n    spacing,\n  } = params;\n  const firstWidth = maxWidth;\n  const firstHeight = Math.round(Math.min(firstWidth / ratios[0], 0.66 * (maxHeight - spacing)));\n  const secondWidth = (maxWidth - spacing) / 2;\n  const secondHeight = Math.min(\n    maxHeight - firstHeight - spacing,\n    Math.round(Math.min(\n      secondWidth / ratios[1],\n      secondWidth / ratios[2],\n    )),\n  );\n  const thirdWidth = firstWidth - secondWidth - spacing;\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: firstHeight + spacing,\n      width: secondWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: secondWidth + spacing,\n      y: firstHeight + spacing,\n      width: thirdWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutFour(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'w'\n    ? layoutFourTopAndOther(params)\n    : layoutFourLeftAndOther(params);\n}\n\nfunction layoutFourTopAndOther({\n  maxWidth,\n  ratios,\n  spacing,\n  maxHeight,\n  minWidth,\n}: ILayoutParams) {\n  const w = maxWidth;\n  const h0 = Math.round(Math.min(w / ratios[0], 0.66 * (maxHeight - spacing)));\n  const h = Math.round((maxWidth - 2 * spacing) / (ratios[1] + ratios[2] + ratios[3]));\n  const w0 = Math.max(minWidth, Math.round(Math.min(0.4 * (maxWidth - 2 * spacing), h * ratios[1])));\n  const w2 = Math.round(Math.max(Math.max(minWidth, 0.33 * (maxWidth - 2 * spacing)), h * ratios[3]));\n  const w1 = w - w0 - w2 - 2 * spacing;\n  const h1 = Math.min(maxHeight - h0 - spacing, h);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w,\n      height: h0,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: h0 + spacing,\n      width: w0,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing + w1 + spacing,\n      y: h0 + spacing,\n      width: w2,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutFourLeftAndOther({\n  maxHeight,\n  ratios,\n  maxWidth,\n  spacing,\n  minWidth,\n}: ILayoutParams) {\n  const h = maxHeight;\n  const w0 = Math.round(Math.min(h * ratios[0], 0.6 * (maxWidth - spacing)));\n  const w = Math.round((maxHeight - 2 * spacing) / (1 / ratios[1] + 1 / ratios[2] + 1 / ratios[3]));\n  const h0 = Math.round(w / ratios[1]);\n  const h1 = Math.round(w / ratios[2]);\n  const h2 = h - h0 - h1 - 2 * spacing;\n  const w1 = Math.max(minWidth, Math.min(maxWidth - w0 - spacing, w));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w0,\n      height: h,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: 0,\n      width: w1,\n      height: h0,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + h1 + 2 * spacing,\n      width: w1,\n      height: h2,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n","import type { FastTextApi } from '../lib/fasttextweb/fasttext.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TRANSLATION_SUPPORTED } from './windowEnvironment';\n\nimport Deferred from './Deferred';\nimport { createConnector } from './PostMessageConnector';\n\nconst WORKER_INIT_DELAY = 4000;\n\nconst DEFAULT_THRESHOLD = 0.2;\nconst DEFAULT_LABELS_COUNT = 5;\n\nlet worker: Connector<FastTextApi> | undefined;\nconst initializationDeferred = new Deferred();\n\nif (IS_TRANSLATION_SUPPORTED) {\n  setTimeout(initWorker, WORKER_INIT_DELAY);\n}\n\nfunction initWorker() {\n  if (!worker) {\n    worker = createConnector<FastTextApi>(\n      new Worker(new URL('../lib/fasttextweb/fasttext.worker.ts', import.meta.url)),\n    );\n    initializationDeferred.resolve();\n  }\n}\n\nexport async function detectLanguage(text: string, threshold = DEFAULT_THRESHOLD) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguage', args: [text, threshold] });\n  return result;\n}\n\nexport async function detectLanguageProbability(\n  text: string, labelsCount = DEFAULT_LABELS_COUNT, threshold = DEFAULT_THRESHOLD,\n) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguageProbability', args: [text, labelsCount, threshold] });\n  return result;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport LimitedMap from '../../../../util/primitives/LimitedMap';\nimport { throttle } from '../../../../util/schedulers';\n\n// https://github.com/DrKLO/Telegram/blob/dfd74f809e97d1ecad9672fc7388cb0223a95dfc/TMessagesProj/src/main/java/org/telegram/messenger/TranslateController.java#L35\nconst MIN_MESSAGES_CHECKED = 8;\nconst MIN_TRANSLATABLE_RATIO = 0.3;\nconst MIN_DETECTABLE_RATIO = 0.6;\n\nconst THROTTLE_DELAY = 1000;\nconst MESSAGES_LIMIT = 150;\n\ntype MessageMetadata = {\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage: string | undefined;\n};\n\nconst CHAT_STATS = new Map<string, LimitedMap<number, MessageMetadata>>();\n\nexport default function useDetectChatLanguage(\n  message: ApiMessage, detectedLanguage?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>,\n) {\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    const isTranslatable = Boolean(message.content.text?.text.length);\n    processMessageMetadata(message.chatId, message.id, isTranslatable, detectedLanguage);\n  }, [message, detectedLanguage, isDisabled, getIsReady]);\n}\n\nconst throttledMakeChatDecision = throttle(makeChatDecision, THROTTLE_DELAY);\n\nfunction processMessageMetadata(chatId: string, id: number, isTranslatable: boolean, detectedLanguage?: string) {\n  const chatStats = CHAT_STATS.get(chatId) || new LimitedMap<number, MessageMetadata>(MESSAGES_LIMIT);\n\n  const previousMetadata = chatStats.get(id);\n  if (previousMetadata && previousMetadata.detectedLanguage === detectedLanguage\n    && previousMetadata.isTranslatable === isTranslatable\n  ) {\n    return;\n  }\n\n  chatStats.set(id, {\n    id,\n    isTranslatable,\n    detectedLanguage,\n  });\n\n  CHAT_STATS.set(chatId, chatStats);\n\n  throttledMakeChatDecision(chatId);\n}\n\nfunction makeChatDecision(chatId: string) {\n  const { updateChatDetectedLanguage } = getActions();\n  const chatStats = CHAT_STATS.get(chatId);\n  if (!chatStats) {\n    return;\n  }\n\n  const messagesChecked = chatStats.size;\n  if (messagesChecked < MIN_MESSAGES_CHECKED) {\n    return;\n  }\n\n  let translatableCount = 0;\n  let detectableCount = 0;\n  const languageOccurrences = new Map<string, number>();\n\n  for (const metadata of chatStats.values()) {\n    if (metadata.isTranslatable) {\n      translatableCount++;\n    }\n\n    if (metadata.detectedLanguage) {\n      detectableCount++;\n    }\n\n    const language = metadata.detectedLanguage;\n    if (language) {\n      const occurrences = languageOccurrences.get(language) || 0;\n      languageOccurrences.set(language, occurrences + 1);\n    }\n  }\n\n  const translatableRatio = translatableCount / messagesChecked;\n  const detectableRatio = detectableCount / messagesChecked;\n\n  if (translatableRatio < MIN_TRANSLATABLE_RATIO || detectableRatio < MIN_DETECTABLE_RATIO) {\n    return;\n  }\n\n  const mostFrequentLanguage = Array.from(languageOccurrences.entries())\n    .sort(([, a], [, b]) => b - a)[0][0];\n\n  updateChatDetectedLanguage({\n    chatId,\n    detectedLanguage: mostFrequentLanguage,\n  });\n}\n","import type { RefObject } from 'react';\nimport type React from '../../../../lib/teact/teact';\nimport { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { captureEvents, SwipeDirection } from '../../../../util/captureEvents';\nimport stopEvent from '../../../../util/stopEvent';\nimport { IS_ANDROID, IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport windowSize from '../../../../util/windowSize';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { preventMessageInputBlur } from '../../helpers/preventMessageInputBlur';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst ANDROID_KEYBOARD_HIDE_DELAY_MS = 350;\nconst SWIPE_ANIMATION_DURATION = 150;\nconst QUICK_REACTION_DOUBLE_TAP_DELAY = 200;\nconst QUICK_REACTION_AREA_WIDTH = 3 * REM;\nconst QUICK_REACTION_AREA_HEIGHT = Number(REM);\nconst GROUP_MESSAGE_HOVER_ATTRIBUTE = 'data-is-document-group-hover';\n\nexport default function useOuterHandlers(\n  selectMessage: (e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void,\n  containerRef: RefObject<HTMLDivElement>,\n  messageId: number,\n  isInSelectMode: boolean,\n  canReply: boolean,\n  isProtected: boolean,\n  onContextMenu: (e: React.MouseEvent) => void,\n  handleBeforeContextMenu: (e: React.MouseEvent) => void,\n  chatId: string,\n  isContextMenuShown: boolean,\n  quickReactionRef: RefObject<HTMLDivElement>,\n  shouldHandleMouseLeave: boolean,\n  getIsMessageListReady?: Signal<boolean>,\n) {\n  const { updateDraftReplyInfo, sendDefaultReaction } = getActions();\n\n  const [isQuickReactionVisible, markQuickReactionVisible, unmarkQuickReactionVisible] = useFlag();\n  const [isSwiped, markSwiped, unmarkSwiped] = useFlag();\n  const doubleTapTimeoutRef = useRef<NodeJS.Timeout>();\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  }\n\n  const handleMouseMove = useThrottledCallback((e: React.MouseEvent) => {\n    const quickReactionContainer = quickReactionRef.current;\n    if (!quickReactionContainer) return;\n\n    const { clientX, clientY } = e;\n    const {\n      x: quickReactionX, width: quickReactionWidth, y: quickReactionY, height: quickReactionHeight,\n    } = quickReactionContainer.getBoundingClientRect();\n    const x = quickReactionX + quickReactionWidth / 2;\n    const y = quickReactionY + quickReactionHeight / 2;\n\n    const isVisibleX = Math.abs(x - clientX) < QUICK_REACTION_AREA_WIDTH;\n    const isVisibleY = Math.abs(y - clientY) < QUICK_REACTION_AREA_HEIGHT;\n    if (isVisibleX && isVisibleY) {\n      markQuickReactionVisible();\n    } else {\n      unmarkQuickReactionVisible();\n    }\n  }, [quickReactionRef], requestMeasure);\n\n  function handleSendQuickReaction(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleTap(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      const target = e.target as HTMLDivElement;\n      if (!target.classList.contains('text-content') && !target.classList.contains('Message')) {\n        return;\n      }\n\n      if (windowSize.getIsKeyboardVisible()) {\n        setTimeout(() => {\n          onContextMenu(e);\n        }, ANDROID_KEYBOARD_HIDE_DELAY_MS);\n      } else {\n        onContextMenu(e);\n      }\n    }\n  }\n\n  function handleDoubleTap() {\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleClick(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (isInSelectMode) {\n      selectMessage(e);\n      return;\n    }\n\n    if (!IS_TOUCH_ENV) return;\n\n    if (doubleTapTimeoutRef.current) {\n      clearInterval(doubleTapTimeoutRef.current);\n      doubleTapTimeoutRef.current = undefined;\n      handleDoubleTap();\n      return;\n    }\n\n    doubleTapTimeoutRef.current = setTimeout(() => {\n      doubleTapTimeoutRef.current = undefined;\n      handleTap(e);\n    }, QUICK_REACTION_DOUBLE_TAP_DELAY);\n  }\n\n  function handleContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      if ((e.target as HTMLElement).matches('a[href]') || isContextMenuShown) {\n        return;\n      }\n\n      e.preventDefault();\n      selectMessage();\n    } else {\n      onContextMenu(e);\n    }\n  }\n\n  function handleContainerDoubleClick() {\n    if (IS_TOUCH_ENV || !canReply) return;\n\n    updateDraftReplyInfo({ replyToMsgId: messageId, replyToPeerId: undefined, quoteText: undefined });\n  }\n\n  function stopPropagation(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n  }\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV || isInSelectMode || !canReply || isContextMenuShown || !getIsMessageListReady?.()) {\n      return undefined;\n    }\n\n    let startedAt: number | undefined;\n    return captureEvents(containerRef.current!, {\n      selectorToPreventScroll: '.MessageList',\n      excludedClosestSelector: '.no-word-wrap',\n      onSwipe: ((e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          if (!startedAt) {\n            startedAt = Date.now();\n          }\n\n          markSwiped();\n\n          return true;\n        }\n\n        return false;\n      }),\n      onRelease: () => {\n        if (!startedAt || !canReply) {\n          return;\n        }\n\n        updateDraftReplyInfo({ replyToMsgId: messageId });\n\n        setTimeout(unmarkSwiped, Math.max(0, SWIPE_ANIMATION_DURATION - (Date.now() - startedAt)));\n        startedAt = undefined;\n      },\n    });\n  }, [\n    containerRef, isInSelectMode, messageId, markSwiped, unmarkSwiped, canReply, isContextMenuShown,\n    getIsMessageListReady,\n  ]);\n\n  function handleMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n    // Because `mousemove` event is throttled, we need to also throttle `mouseleave` event,\n    // so the order of events is preserved\n    requestMeasure(unmarkQuickReactionVisible);\n    if (shouldHandleMouseLeave) handleDocumentGroupMouseLeave(e);\n  }\n\n  return {\n    handleMouseDown: !isInSelectMode ? handleMouseDown : undefined,\n    handleClick,\n    handleContextMenu: !isInSelectMode ? handleContextMenu : (isProtected ? stopEvent : undefined),\n    handleDoubleClick: !isInSelectMode ? handleContainerDoubleClick : undefined,\n    handleContentDoubleClick: !IS_TOUCH_ENV ? stopPropagation : undefined,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  };\n}\n\nfunction handleDocumentGroupMouseEnter(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.setAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE, '');\n  }\n}\n\nfunction handleDocumentGroupMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.removeAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE);\n  }\n}\n\nfunction getLastElementInDocumentGroup(element: Element) {\n  let current: Element | null = element;\n\n  do {\n    current = current.nextElementSibling;\n  } while (current && !current.classList.contains('last-in-document-group'));\n\n  return current;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport {\n  getStoryMediaHash,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  story?: ApiTypeStory;\n  sender?: ApiPeer;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedStory: FC<OwnProps> = ({\n  story,\n  sender,\n  noUserColors,\n  isProtected,\n  observeIntersectionForLoading,\n  onClick,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isFullStory = story && 'content' in story;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const isVideoStory = isFullStory && Boolean(story.content.video);\n  const title = isFullStory ? 'Story' : (isExpiredStory ? 'ExpiredStory' : 'Loading');\n\n  const mediaBlobUrl = useMedia(isFullStory && getStoryMediaHash(story, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = isVideoStory ? story.content.video!.thumbnail?.dataUri : undefined;\n  const pictogramUrl = mediaBlobUrl || mediaThumbnail;\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : undefined;\n  const handleFastClick = useLastCallback(() => {\n    if (story && !isExpiredStory) {\n      onClick();\n    } else {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(handleFastClick);\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      peerColor={sender?.color}\n      noUserColors={noUserColors}\n      shouldReset\n      className={buildClassName(\n        'EmbeddedMessage',\n        pictogramUrl && 'with-thumb',\n      )}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {pictogramUrl && renderPictogram(pictogramUrl, isProtected)}\n      <div className=\"message-text with-message-color\">\n        <p className=\"embedded-text-wrapper\">\n          {isExpiredStory && (\n            <Icon name=\"story-expired\" className=\"embedded-origin-icon\" />\n          )}\n          {isFullStory && (\n            <Icon name=\"story-reply\" className=\"embedded-origin-icon\" />\n          )}\n          {lang(title)}\n        </p>\n        <div className=\"message-title\">{renderText(senderTitle || NBSP)}</div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  srcUrl: string,\n  isProtected?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  return (\n    <div className=\"embedded-thumb\">\n      <img\n        src={srcUrl}\n        width={width}\n        height={height}\n        alt=\"\"\n        className=\"pictogram\"\n        draggable={false}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedStory;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getTopicColorCssVariable } from '../../util/forumColors';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\n\nimport styles from './TopicChip.module.scss';\n\nimport blankSrc from '../../assets/blank.png';\n\ntype OwnProps = {\n  topic?: ApiTopic;\n  className?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst TOPIC_ICON_SIZE = 1.125 * REM;\n\nconst TopicChip: FC<OwnProps> = ({\n  topic,\n  className,\n  onClick,\n}) => {\n  const lang = useOldLang();\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={`--topic-button-accent-color: var(${getTopicColorCssVariable(topic?.iconColor)})`}\n      onClick={onClick}\n    >\n      {topic\n        ? <TopicIcon topic={topic} size={TOPIC_ICON_SIZE} />\n        : <img src={blankSrc} alt=\"\" draggable={false} />}\n      {topic?.title ? renderText(topic.title) : lang('Loading')}\n      {topic?.isClosed && <Icon name=\"lock\" />}\n      <Icon name=\"next\" />\n    </div>\n  );\n};\n\nexport default memo(TopicChip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JldIqqof\"};","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { OwnProps as PhotoProps } from '../Photo';\nimport type { OwnProps as VideoProps } from '../Video';\n\nimport {\n  selectIsInSelectMode,\n  selectIsMessageSelected,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Icon from '../../../common/icons/Icon';\n\ntype OwnProps<T> =\n  (PhotoProps<T> | VideoProps<T>) & {\n    clickArg: number;\n    noSelectControls?: boolean;\n  };\n\ntype StateProps = {\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n};\n\nexport default function withSelectControl(WrappedComponent: FC) {\n  // eslint-disable-next-line @typescript-eslint/comma-dangle\n  const ComponentWithSelectControl = <T,>(props: OwnProps<T> & StateProps) => {\n    const {\n      isInSelectMode,\n      isSelected,\n      dimensions,\n      clickArg,\n    } = props;\n    const { toggleMessageSelection } = getActions();\n\n    const handleMessageSelect = useLastCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n      e.stopPropagation();\n      toggleMessageSelection({ messageId: clickArg, withShift: e?.shiftKey });\n    });\n\n    const newProps = useMemo(() => {\n      const { dimensions: dims, onClick } = props;\n      return {\n        ...props,\n        isInSelectMode,\n        isSelected,\n        dimensions: {\n          ...dims,\n          x: 0,\n          y: 0,\n        },\n        onClick: isInSelectMode ? undefined : onClick,\n      };\n    }, [props, isInSelectMode, isSelected]);\n\n    return (\n      <div\n        className={buildClassName('album-item-select-wrapper', isSelected && 'is-selected')}\n        style={dimensions ? `left: ${dimensions.x}px; top: ${dimensions.y}px;` : ''}\n        onClick={isInSelectMode ? handleMessageSelect : undefined}\n      >\n        {isInSelectMode && (\n          <div className=\"message-select-control\">\n            {isSelected && (\n              <Icon name=\"select\" />\n            )}\n          </div>\n        )}\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n        <WrappedComponent {...newProps} />\n      </div>\n    );\n  };\n\n  return memo(withGlobal<OwnProps<unknown>>(\n    (global, ownProps) => {\n      const { clickArg, noSelectControls } = ownProps;\n      return {\n        isInSelectMode: !noSelectControls && selectIsInSelectMode(global),\n        isSelected: !noSelectControls && selectIsMessageSelected(global, clickArg),\n      };\n    },\n  )(ComponentWithSelectControl)) as typeof ComponentWithSelectControl;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IAlbum, ISettings } from '../../../types';\nimport type { IAlbumLayout } from './helpers/calculateAlbumLayout';\n\nimport {\n  getIsDownloading, getMessageContent, getMessageHtmlId, getMessagePhoto,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectTheme,\n} from '../../../global/selectors';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { AlbumRectPart } from './helpers/calculateAlbumLayout';\nimport withSelectControl from './hocs/withSelectControl';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './Album.scss';\n\nconst PhotoWithSelect = withSelectControl(Photo);\nconst VideoWithSelect = withSelectControl(Video);\n\ntype OwnProps = {\n  album: IAlbum;\n  observeIntersection: ObserveFn;\n  hasCustomAppendix?: boolean;\n  isOwn: boolean;\n  isProtected?: boolean;\n  albumLayout: IAlbumLayout;\n  onMediaClick: (messageId: number, index?: number) => void;\n};\n\ntype StateProps = {\n  theme: ISettings['theme'];\n  uploadsByKey: GlobalState['fileUploads']['byMessageKey'];\n  activeDownloads: TabState['activeDownloads'];\n};\n\nconst Album: FC<OwnProps & StateProps> = ({\n  album,\n  observeIntersection,\n  hasCustomAppendix,\n  isOwn,\n  isProtected,\n  albumLayout,\n  onMediaClick,\n  uploadsByKey,\n  activeDownloads,\n  theme,\n}) => {\n  const { cancelUploadMedia } = getActions();\n\n  const { content: { paidMedia } } = album.mainMessage;\n\n  const mediaCount = album.isPaidMedia ? paidMedia!.extendedMedia.length : album.messages.length;\n\n  const handlePaidMediaClick = useLastCallback((index: number) => {\n    onMediaClick(album.mainMessage.id, index);\n  });\n\n  const handleAlbumMessageClick = useLastCallback((messageId: number) => {\n    onMediaClick(messageId);\n  });\n\n  const handleCancelUpload = useLastCallback((messageId: number) => {\n    cancelUploadMedia({ chatId: album.mainMessage.chatId, messageId });\n  });\n\n  const messages = useMemo(() => {\n    if (album.isPaidMedia) {\n      return album.mainMessage.content.paidMedia!.extendedMedia.map(() => album.mainMessage);\n    }\n\n    return album.messages;\n  }, [album]);\n\n  function renderAlbumMessage(message: ApiMessage, index: number) {\n    const renderingPaidMedia = album.isPaidMedia ? message.content.paidMedia?.extendedMedia[index] : undefined;\n    const paidPhotoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.photo;\n    const paidVideoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.video;\n    const photo = paidPhotoOrPreview || getMessagePhoto(message);\n    const video = paidVideoOrPreview || getMessageContent(message).video;\n\n    const fileUpload = uploadsByKey[getMessageKey(message)];\n    const uploadProgress = fileUpload?.progress;\n    const { dimensions, sides } = albumLayout.layout[index];\n\n    // Ignoring global updates is a known drawback here\n    const canAutoLoad = selectCanAutoLoadMedia(getGlobal(), message);\n    const canAutoPlay = selectCanAutoPlayMedia(getGlobal(), message);\n\n    if (photo) {\n      const shouldAffectAppendix = hasCustomAppendix && (\n        // eslint-disable-next-line no-bitwise\n        (isOwn ? index === mediaCount - 1 : Boolean(sides & AlbumRectPart.Left && sides & AlbumRectPart.Bottom))\n      );\n\n      return (\n        <PhotoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id, album.isPaidMedia ? index : undefined)}`}\n          photo={photo}\n          isOwn={isOwn}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          shouldAffectAppendix={shouldAffectAppendix}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={photo.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, photo)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    } else if (video) {\n      return (\n        <VideoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id)}`}\n          video={video}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          canAutoPlay={canAutoPlay}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={video.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, video)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    }\n\n    return undefined;\n  }\n\n  const { width: containerWidth, height: containerHeight } = albumLayout.containerStyle;\n\n  return (\n    <div\n      className=\"Album\"\n      style={`width: ${containerWidth}px; height: ${containerHeight}px;`}\n    >\n      {messages.map(renderAlbumMessage)}\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const activeDownloads = selectActiveDownloads(global);\n\n    return {\n      theme,\n      uploadsByKey: global.fileUploads.byMessageKey,\n      activeDownloads,\n    };\n  },\n)(Album);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport buildStyle from '../../../util/buildStyle';\nimport safePlay from '../../../util/safePlay';\nimport { IS_ELECTRON } from '../../../util/windowEnvironment';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\n\nconst SIZE = 7 * REM;\nconst INTERACTION_BUNCH_TIME = 1000;\nconst MS_DIVIDER = 1000;\nconst TIME_DEFAULT = 0;\n\nexport default function useAnimatedEmoji(\n  chatId?: string,\n  messageId?: number,\n  soundId?: string,\n  activeEmojiInteractions?: ActiveEmojiInteraction[],\n  isOwn?: boolean,\n  emoji?: string,\n  preferredSize?: number,\n) {\n  const {\n    interactWithAnimatedEmoji, sendEmojiInteraction, sendWatchingEmojiInteraction,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const audioRef = useRef<HTMLAudioElement | undefined>(null);\n\n  const soundMediaData = useMedia(soundId ? `document${soundId}` : undefined, !soundId);\n\n  const size = preferredSize || SIZE;\n  const style = buildStyle(`width: ${size}px`, `height: ${size}px`, emoji && !IS_ELECTRON && 'cursor: pointer');\n\n  const interactions = useRef<number[] | undefined>(undefined);\n  const startedInteractions = useRef<number | undefined>(undefined);\n  const sendInteractionBunch = useLastCallback(() => {\n    const container = ref.current;\n\n    if (!container) return;\n\n    sendEmojiInteraction({\n      chatId: chatId!,\n      messageId: messageId!,\n      emoji: emoji!,\n      interactions: interactions.current!,\n    });\n    startedInteractions.current = undefined;\n    interactions.current = undefined;\n  });\n\n  const play = useLastCallback(() => {\n    const audio = audioRef.current;\n    if (soundMediaData) {\n      if (audio) {\n        audio.pause();\n        audio.remove();\n      }\n      audioRef.current = new Audio();\n      audioRef.current.src = soundMediaData;\n      safePlay(audioRef.current);\n      audioRef.current.addEventListener('ended', () => {\n        audioRef.current = undefined;\n      }, { once: true });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    play();\n\n    const container = ref.current;\n\n    if (!emoji || !container || !messageId || !chatId) {\n      return;\n    }\n\n    const { x, y } = container.getBoundingClientRect();\n\n    interactWithAnimatedEmoji({\n      emoji: emoji!,\n      x,\n      y,\n      startSize: size,\n      isReversed: !isOwn,\n    });\n\n    if (!interactions.current) {\n      interactions.current = [];\n      startedInteractions.current = performance.now();\n      setTimeout(sendInteractionBunch, INTERACTION_BUNCH_TIME);\n    }\n\n    interactions.current.push(startedInteractions.current\n      ? (performance.now() - startedInteractions.current) / MS_DIVIDER\n      : TIME_DEFAULT);\n  });\n\n  // Set an end anchor for remote activated interaction\n  useEffect(() => {\n    const container = ref.current;\n\n    if (!container || !activeEmojiInteractions) return;\n\n    activeEmojiInteractions.forEach(({\n      id,\n      startSize,\n      messageId: interactionMessageId,\n    }) => {\n      if (startSize || messageId !== interactionMessageId) {\n        return;\n      }\n\n      const { x, y } = container.getBoundingClientRect();\n\n      sendWatchingEmojiInteraction({\n        id,\n        chatId: chatId!,\n        emoticon: emoji!,\n        startSize: size,\n        x,\n        y,\n        isReversed: !isOwn,\n      });\n      play();\n    });\n  }, [activeEmojiInteractions, chatId, emoji, isOwn, messageId, play, sendWatchingEmojiInteraction, size]);\n\n  return {\n    ref,\n    size,\n    style,\n    handleClick,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n  selectCanPlayAnimatedEmojis,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\n\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  customEmojiId: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  observeIntersection?: ObserveFn;\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n  noPlay?: boolean;\n}\n\nconst AnimatedCustomEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  customEmojiId,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n  noPlay,\n  observeIntersection,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(\n    chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji, getCustomEmojiSize(1),\n  );\n\n  return (\n    <CustomEmoji\n      ref={ref}\n      documentId={customEmojiId}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      size={size}\n      isBig\n      noPlay={noPlay}\n      withSharedAnimation\n      forceOnHeavyAnimation={Boolean(effect && activeEmojiInteractions?.length)}\n      observeIntersectionForLoading={observeIntersection}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { customEmojiId, withEffects }) => {\n  const sticker = global.customEmojis.byId[customEmojiId];\n\n  return {\n    sticker,\n    effect: sticker?.emoji && withEffects ? selectAnimatedEmojiEffect(global, sticker.emoji) : undefined,\n    soundId: sticker?.emoji && selectAnimatedEmojiSound(global, sticker.emoji),\n    noPlay: !selectCanPlayAnimatedEmojis(global),\n  };\n})(AnimatedCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmoji,\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\n\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  emoji: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n}\n\nconst QUALITY = 1;\n\nconst AnimatedEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  observeIntersection,\n  forceLoadPreview,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji);\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  return (\n    <AnimatedIconFromSticker\n      sticker={sticker}\n      size={size}\n      quality={QUALITY}\n      noLoad={!isIntersecting}\n      forcePreview={forceLoadPreview}\n      play={isIntersecting}\n      forceAlways\n      ref={ref}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { emoji, withEffects }) => {\n  return {\n    sticker: selectAnimatedEmoji(global, emoji),\n    effect: withEffects ? selectAnimatedEmojiEffect(global, emoji) : undefined,\n    soundId: selectAnimatedEmojiSound(global, emoji),\n  };\n})(AnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiCommentsInfo } from '../../../api/types';\n\nimport { selectPeer } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Spinner from '../../ui/Spinner';\n\nimport './CommentButton.scss';\n\ntype OwnProps = {\n  threadInfo: ApiCommentsInfo;\n  disabled?: boolean;\n  isLoading?: boolean;\n  isCustomShape?: boolean;\n  asActionButton?: boolean;\n};\n\nconst SHOW_LOADER_DELAY = 450;\n\nconst CommentButton: FC<OwnProps> = ({\n  isCustomShape,\n  threadInfo,\n  disabled,\n  isLoading,\n  asActionButton,\n}) => {\n  const { openThread } = getActions();\n\n  const shouldRenderLoading = useAsyncRendering([isLoading], SHOW_LOADER_DELAY);\n\n  const lang = useOldLang();\n  const {\n    originMessageId, chatId, messagesCount, lastMessageId, lastReadInboxMessageId, recentReplierIds, originChannelId,\n  } = threadInfo;\n\n  const handleClick = useLastCallback(() => {\n    openThread({\n      isComments: true, chatId, originMessageId, originChannelId,\n    });\n  });\n\n  const recentRepliers = useMemo(() => {\n    if (!recentReplierIds?.length) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on chats and users, so we avoid them\n    const global = getGlobal();\n\n    return recentReplierIds.map((peerId) => {\n      return selectPeer(global, peerId);\n    }).filter(Boolean);\n  }, [recentReplierIds]);\n\n  if (messagesCount === undefined) {\n    return undefined;\n  }\n\n  function renderRecentRepliers() {\n    return (\n      Boolean(recentRepliers?.length) && (\n        <div className=\"recent-repliers\" dir={lang.isRtl ? 'rtl' : 'ltr'}>\n          {recentRepliers!.map((peer) => (\n            <Avatar\n              key={peer.id}\n              size=\"small\"\n              peer={peer}\n            />\n          ))}\n        </div>\n      )\n    );\n  }\n\n  const hasUnread = Boolean(lastReadInboxMessageId && lastMessageId && lastReadInboxMessageId < lastMessageId);\n\n  const commentsText = messagesCount ? (lang('CommentsCount', '%COMMENTS_COUNT%', undefined, messagesCount) as string)\n    .split('%')\n    .map((s) => {\n      return (s === 'COMMENTS_COUNT' ? <AnimatedCounter text={formatIntegerCompact(messagesCount)} /> : s);\n    })\n    : undefined;\n\n  return (\n    <div\n      data-cnt={formatIntegerCompact(messagesCount)}\n      className={buildClassName(\n        'CommentButton',\n        hasUnread && 'has-unread',\n        disabled && 'disabled',\n        isCustomShape && 'CommentButton-custom-shape',\n        isLoading && 'loading',\n        asActionButton && 'as-action-button',\n      )}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <Icon\n        name=\"comments-sticker\"\n        className={buildClassName(\n          'CommentButton_icon-comments',\n          isLoading && shouldRenderLoading && 'CommentButton_hidden',\n        )}\n      />\n      {!recentRepliers?.length && <Icon name=\"comments\" />}\n      {renderRecentRepliers()}\n      <div className=\"label\" dir=\"auto\">\n        {messagesCount ? commentsText : lang('LeaveAComment')}\n      </div>\n      <div className=\"CommentButton_right\">\n        {isLoading && (\n          <Spinner\n            className={buildClassName(\n              'CommentButton_loading',\n              !shouldRenderLoading && 'CommentButton_hidden',\n            )}\n            color={isCustomShape ? 'white' : 'blue'}\n          />\n        ) }\n        <Icon\n          name=\"next\"\n          className={buildClassName(\n            'CommentButton_icon-open',\n            isLoading && shouldRenderLoading && 'CommentButton_hidden',\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(CommentButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AAHWWWvU\",\"info-container\":\"tpDpg82n\",\"infoContainer\":\"tpDpg82n\",\"info\":\"fpYynE5s\",\"name\":\"_PNTJc_V\",\"phone\":\"JP_3wes8\",\"divider\":\"_OSJcuqH\",\"buttons\":\"Blui4M4G\",\"button\":\"ReDHhQHm\",\"disabled\":\"XAeKpuIZ\",\"emoji-icon-background\":\"SjZYi3sJ\",\"emojiIconBackground\":\"SjZYi3sJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiContact, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { getCanAddContact, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\n\nimport styles from './Contact.module.scss';\n\ntype OwnProps = {\n  contact: ApiContact;\n  noUserColors?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst UNREGISTERED_CONTACT_ID = '0';\n\nconst Contact: FC<OwnProps & StateProps> = ({\n  contact, user, phoneCodeList, noUserColors,\n}) => {\n  const lang = useOldLang();\n  const {\n    openChat, openAddContactDialog, showNotification, openChatWithInfo,\n  } = getActions();\n\n  const { phoneNumber, userId } = contact;\n  const isRegistered = userId !== UNREGISTERED_CONTACT_ID;\n  const canAddContact = isRegistered && user && getCanAddContact(user);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: userId });\n  });\n\n  const handleAddContact = useLastCallback(() => {\n    openAddContactDialog({ userId: user?.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (user) {\n      openChatWithInfo({ id: userId });\n    } else {\n      copyTextToClipboard(phoneNumber);\n      showNotification({ message: lang('PhoneCopied') });\n    }\n  });\n\n  return (\n    <PeerColorWrapper\n      noUserColors={noUserColors}\n      peer={user}\n      emojiIconClassName={styles.emojiIconBackground}\n      className={styles.root}\n    >\n      <div className={styles.infoContainer} onClick={handleClick}>\n        <Avatar size=\"medium\" peer={user} text={getContactName(contact)} />\n        <div className={styles.info}>\n          <div className={styles.name}>\n            {user ? getUserFullName(user) : getContactName(contact)}\n          </div>\n          <div className={styles.phone}>\n            {formatPhoneNumberWithCode(phoneCodeList, phoneNumber)}\n          </div>\n        </div>\n      </div>\n      {isRegistered && (\n        <>\n          <div className={styles.divider} />\n          <div className={styles.buttons}>\n            <Button\n              isText\n              color=\"translucent\"\n              ripple\n              size=\"tiny\"\n              onClick={handleOpenChat}\n              className={styles.button}\n            >\n              {lang('SharedContactMessage')}\n            </Button>\n            {canAddContact && (\n              <Button\n                isText\n                color=\"translucent\"\n                ripple\n                size=\"tiny\"\n                onClick={handleAddContact}\n                className={styles.button}\n              >\n                {lang('SharedContactAdd')}\n              </Button>\n            )}\n          </div>\n        </>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getContactName(contact: ApiContact) {\n  if (contact.firstName && contact.lastName) {\n    return `${contact.firstName} ${contact.lastName}`;\n  }\n\n  if (contact.firstName) {\n    return contact.firstName;\n  }\n\n  if (contact.lastName) {\n    return contact.lastName;\n  }\n\n  return '';\n}\n\nexport default withGlobal<OwnProps>((global, { contact }): StateProps => {\n  const {\n    countryList: { phoneCodes: phoneCodeList },\n  } = global;\n  const user = selectUser(global, contact.userId);\n\n  return {\n    user,\n    phoneCodeList,\n  };\n})(Contact);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HMB5LgeX\",\"title\":\"vZnCPl3t\",\"content\":\"k_dGolcu\",\"separator\":\"qRaSs5iA\",\"footnote\":\"EDmr0wJG\",\"collapsed\":\"hYzpXwTM\",\"cutoutWrapper\":\"nfCzKu78\",\"collapseIcon\":\"mxPizZpR\",\"clickable\":\"Cj2cLczd\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiFactCheck } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useCollapsibleLines from '../../../hooks/element/useCollapsibleLines';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Separator from '../../ui/Separator';\n\nimport styles from './FactCheck.module.scss';\n\ntype OwnProps = {\n  factCheck: ApiFactCheck;\n  isToggleDisabled?: boolean;\n};\n\nconst COLOR = {\n  color: 0,\n};\nconst MAX_LINES = 4;\n\nconst FactCheck = ({ factCheck, isToggleDisabled }: OwnProps) => {\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cutoutRef = useRef<HTMLDivElement>(null);\n  const {\n    isCollapsed, isCollapsible, setIsCollapsed,\n  } = useCollapsibleLines(ref, MAX_LINES, cutoutRef);\n\n  const countryLocalized = useMemo(() => {\n    if (!factCheck.countryCode || !lang.code) return undefined;\n\n    const displayNames = new Intl.DisplayNames([lang.code], { type: 'region' });\n    return displayNames.of(factCheck.countryCode);\n  }, [factCheck.countryCode, lang.code]);\n\n  const canExpand = !isToggleDisabled && isCollapsed;\n\n  const handleExpand = useLastCallback(() => {\n    setIsCollapsed(false);\n  });\n\n  const handleToggle = useLastCallback(() => {\n    setIsCollapsed((prev) => !prev);\n  });\n\n  if (!factCheck.text) {\n    return undefined;\n  }\n\n  return (\n    <PeerColorWrapper peerColor={COLOR} className={styles.root} onClick={canExpand ? handleExpand : undefined}>\n      <div\n        ref={cutoutRef}\n        className={buildClassName(styles.cutoutWrapper, isCollapsed && styles.collapsed)}\n      >\n        <div className={styles.title}>{lang('FactCheck')}</div>\n        <div ref={ref} className={styles.content}>\n          {renderTextWithEntities({\n            text: factCheck.text.text,\n            entities: factCheck.text.entities,\n          })}\n        </div>\n        <Separator className={styles.separator} />\n        <div className={styles.footnote}>{lang('FactCheckFooter', countryLocalized)}</div>\n      </div>\n      {isCollapsible && (\n        <div\n          className={buildClassName(styles.collapseIcon, !isToggleDisabled && styles.clickable)}\n          onClick={!isToggleDisabled ? handleToggle : undefined}\n          aria-hidden\n        >\n          <Icon name={isCollapsed ? 'down' : 'up'} />\n        </div>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(FactCheck);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getGamePreviewPhotoHash, getGamePreviewVideoHash, getMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Game.scss';\n\nconst DEFAULT_PREVIEW_DIMENSIONS = {\n  width: 480,\n  height: 270,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  canAutoLoadMedia?: boolean;\n};\n\nconst Game: FC<OwnProps> = ({\n  message,\n  canAutoLoadMedia,\n}) => {\n  const { clickBotInlineButton } = getActions();\n  const game = message.content.game!;\n  const {\n    title, description,\n  } = game;\n\n  const photoHash = getGamePreviewPhotoHash(game);\n  const videoHash = getGamePreviewVideoHash(game);\n  const photoBlobUrl = useMedia(photoHash, !canAutoLoadMedia);\n  const videoBlobUrl = useMedia(videoHash, !canAutoLoadMedia);\n\n  const handleGameClick = () => {\n    clickBotInlineButton({\n      chatId: message.chatId,\n      messageId: message.id,\n      button: message.inlineButtons![0][0],\n    });\n  };\n\n  return (\n    <div className=\"Game\">\n      <div\n        className=\"preview\"\n        style={`width: ${DEFAULT_PREVIEW_DIMENSIONS.width}px; height: ${DEFAULT_PREVIEW_DIMENSIONS.height}px`}\n        onClick={handleGameClick}\n      >\n        {!photoBlobUrl && !videoBlobUrl && (\n          <Skeleton className=\"skeleton preview-content\" />\n        )}\n        {photoBlobUrl && (\n          <img\n            className=\"preview-content\"\n            src={photoBlobUrl}\n            alt={title}\n            draggable={false}\n          />\n        )}\n        {videoBlobUrl && (\n          <video\n            className=\"preview-content\"\n            playsInline\n            muted\n            disablePictureInPicture\n            autoPlay\n            loop\n            src={videoBlobUrl}\n          />\n        )}\n      </div>\n      <div className=\"title\">{title}</div>\n      {!getMessageText(message) && <div className=\"description\">{description}</div>}\n    </div>\n  );\n};\n\nexport default memo(Game);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CbpKtOey\",\"title\":\"ogvcv3mr\",\"sticker\":\"hjjKhvVv\",\"resultSticker\":\"JEiR48jJ\",\"count\":\"n_QCMv_A\",\"section\":\"MSFa9BPf\",\"description\":\"HfZ6SuLI\",\"peers\":\"rPyyNYxK\",\"peer\":\"FV70u896\",\"button\":\"jMBw7STU\",\"result\":\"ZQ4aVVkI\",\"separator\":\"ao0x1YnS\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiGiveaway, ApiGiveawayInfo, ApiGiveawayResults, ApiMessage, ApiPeer, ApiSticker,\n} from '../../../api/types';\n\nimport {\n  getChatTitle, getUserFullName, isOwnMessage,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectForwardedSender,\n  selectGiftStickerForDuration,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateAtTime, formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { isoToEmoji } from '../../../util/emoji/emoji';\nimport { getServerTime } from '../../../util/serverTime';\nimport { callApi } from '../../../api/gramjs';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Separator from '../../ui/Separator';\n\nimport styles from './Giveaway.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  sender?: ApiPeer;\n  giftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst NBSP = '\\u00A0';\nconst GIFT_STICKER_SIZE = 175;\nconst RESULT_STICKER_SIZE = 150;\n\nconst Giveaway = ({\n  chat,\n  sender,\n  message,\n  canPlayAnimatedEmojis,\n  giftSticker,\n}: OwnProps & StateProps) => {\n  const { openChat } = getActions();\n\n  const isLoadingInfo = useRef(false);\n  const [giveawayInfo, setGiveawayInfo] = useState<ApiGiveawayInfo | undefined>();\n\n  const lang = useOldLang();\n  const { giveaway, giveawayResults } = message.content;\n  const isResults = Boolean(giveawayResults);\n  const {\n    months, untilDate, prizeDescription, stars,\n  } = (giveaway || giveawayResults)!;\n\n  const isOwn = isOwnMessage(message);\n\n  const quantity = isResults ? giveawayResults.winnersCount : giveaway!.quantity;\n\n  const hasEnded = getServerTime() > untilDate;\n\n  const countryList = useMemo(() => {\n    if (isResults) return undefined;\n    const translatedNames = new Intl.DisplayNames([lang.code!, 'en'].filter(Boolean), { type: 'region' });\n    return giveaway?.countries?.map((countryCode) => (\n      `${isoToEmoji(countryCode)}${NBSP}${translatedNames.of(countryCode)}`\n    )).join(', ');\n  }, [giveaway, isResults, lang.code]);\n\n  const handlePeerClick = useLastCallback((channelId: string) => {\n    openChat({ id: channelId });\n  });\n\n  const handleShowInfoClick = useLastCallback(async () => {\n    if (isLoadingInfo.current) return;\n\n    isLoadingInfo.current = true;\n    const result = await callApi('fetchGiveawayInfo', {\n      peer: chat,\n      messageId: message.id,\n    });\n    setGiveawayInfo(result);\n    isLoadingInfo.current = false;\n  });\n\n  const handleCloseInfo = useLastCallback(() => {\n    setGiveawayInfo(undefined);\n  });\n\n  const giveawayInfoTitle = useMemo(() => {\n    if (!giveawayInfo) return undefined;\n    return lang(giveawayInfo.type === 'results' ? 'BoostingGiveawayEnd' : 'BoostingGiveAwayAbout');\n  }, [giveawayInfo, lang]);\n\n  function renderGiveawayDescription(media: ApiGiveaway) {\n    const channelIds = media.channelIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayPrizes'), ['simple_markdown'])}\n          </strong>\n          {prizeDescription && (\n            <>\n              <p className={styles.description}>\n                {renderText(\n                  lang('BoostingGiveawayMsgPrizes', [quantity, prizeDescription], undefined, quantity),\n                  ['simple_markdown'],\n                )}\n              </p>\n              <Separator>{lang('BoostingGiveawayMsgWithDivider')}</Separator>\n            </>\n          )}\n          <p className={styles.description}>\n            {message?.content?.giveaway?.stars ? (\n              <>\n                {renderText(\n                  lang('Chat.Giveaway.Message.Stars.PrizeText', lang('Stars', message?.content?.giveaway?.stars)),\n                  ['simple_markdown'],\n                )}\n                <br />\n                {renderText(lang('AmongWinners', quantity), ['simple_markdown'])}\n              </>\n            ) : (\n              <>\n                {renderText(lang('Chat.Giveaway.Info.Subscriptions', quantity), ['simple_markdown'])}\n                <br />\n                {renderText(lang(\n                  'ActionGiftPremiumSubtitle',\n                  lang('Chat.Giveaway.Info.Months', months),\n                ), ['simple_markdown'])}\n              </>\n            )}\n          </p>\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayMsgParticipants'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayMsgAllSubsPlural', channelIds.length), ['simple_markdown'])}\n          </p>\n          <div className={styles.peers}>\n            {channelIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n          {countryList && (\n            <span>{renderText(lang('Chat.Giveaway.Message.CountriesFrom', countryList))}</span>\n          )}\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingWinnersDate'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {formatDateTimeToString(untilDate * 1000, lang.code, true)}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayResultsDescription(media: ApiGiveawayResults) {\n    const winnerIds = media.winnerIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersSelected'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersTitle', winnerIds.length), ['simple_markdown'])}\n          </p>\n          <strong className={styles.title}>\n            {lang('lng_prizes_results_winners')}\n          </strong>\n          <div className={styles.peers}>\n            {winnerIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <p className={styles.description}>\n            {lang('BoostingGiveawayResultsMsgAllWinnersReceivedLinks')}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayInfo() {\n    if (!sender || !giveawayInfo) return undefined;\n    const isResultsInfo = giveawayInfo.type === 'results';\n\n    const chatTitle = isApiPeerChat(sender) ? getChatTitle(lang, sender) : getUserFullName(sender);\n    const endDate = formatDateAtTime(lang, untilDate * 1000);\n    const otherChannelsCount = giveaway?.channelIds ? giveaway.channelIds.length - 1 : 0;\n    const otherChannelsString = lang('Chat.Giveaway.Info.OtherChannels', otherChannelsCount);\n    const isSeveral = otherChannelsCount > 0;\n\n    const firstKey = isResultsInfo ? 'BoostingGiveawayHowItWorksTextEnd' : 'BoostingGiveawayHowItWorksText';\n    const giveawayDuration = isResultsInfo ? lang('Chat.Giveaway.Info.Months', months) : lang('Stars', stars, 'i');\n    const firstParagraph = lang(firstKey, [chatTitle, quantity, giveawayDuration], undefined, quantity);\n\n    const additionalPrizes = prizeDescription\n      ? lang('BoostingGiveawayHowItWorksIncludeText', [chatTitle, quantity, prizeDescription], undefined, quantity)\n      : undefined;\n\n    let secondKey = '';\n    if (isResultsInfo) {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveralEnd' : 'BoostingGiveawayHowItWorksSubTextEnd';\n    } else {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveral' : 'BoostingGiveawayHowItWorksSubText';\n    }\n    let secondParagraph = lang(secondKey, [endDate, quantity, chatTitle, otherChannelsCount], undefined, quantity);\n    if (isResultsInfo && giveawayInfo.activatedCount) {\n      secondParagraph += ` ${lang('BoostingGiveawayUsedLinksPlural', giveawayInfo.activatedCount)}`;\n    }\n\n    let result = '';\n\n    if (isResultsInfo) {\n      if (giveawayInfo.isRefunded) {\n        result = lang('BoostingGiveawayCanceledByPayment');\n      } else {\n        result = lang(giveawayInfo.isWinner ? 'BoostingGiveawayYouWon' : 'BoostingGiveawayYouNotWon');\n      }\n    }\n\n    let lastParagraph = '';\n    if (isResultsInfo) {\n      // Nothing\n    } else if (giveawayInfo.disallowedCountry) {\n      lastParagraph = lang('BoostingGiveawayNotEligibleCountry');\n    } else if (giveawayInfo.adminDisallowedChatId) {\n      // Since rerenders are not expected, we can use the global state directly\n      const chatsById = getGlobal().chats.byId;\n      const disallowedChat = chatsById[giveawayInfo.adminDisallowedChatId];\n      const disallowedChatTitle = disallowedChat && getChatTitle(lang, disallowedChat);\n      lastParagraph = lang('BoostingGiveawayNotEligibleAdmin', disallowedChatTitle);\n    } else if (giveawayInfo.joinedTooEarlyDate) {\n      const joinedTooEarlyDate = formatDateAtTime(lang, giveawayInfo.joinedTooEarlyDate * 1000);\n      lastParagraph = lang('BoostingGiveawayNotEligible', joinedTooEarlyDate);\n    } else if (giveawayInfo.isParticipating) {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.ParticipatingMany', [chatTitle, otherChannelsCount])\n        : lang('Chat.Giveaway.Info.Participating', chatTitle);\n    } else {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.NotQualifiedMany', [chatTitle, otherChannelsString, endDate])\n        : lang('Chat.Giveaway.Info.NotQualified', [chatTitle, endDate]);\n    }\n\n    return (\n      <>\n        {result && (\n          <p className={styles.result}>\n            {renderText(result, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(firstParagraph, ['simple_markdown'])}\n        </p>\n        {additionalPrizes && (\n          <p>\n            {renderText(additionalPrizes, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(secondParagraph, ['simple_markdown'])}\n        </p>\n        {lastParagraph && (\n          <p>\n            {renderText(lastParagraph, ['simple_markdown'])}\n          </p>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.sticker, isResults && styles.resultSticker)}>\n        {isResults ? (\n          <AnimatedIconWithPreview\n            size={RESULT_STICKER_SIZE}\n            tgsUrl={LOCAL_TGS_URLS.PartyPopper}\n            nonInteractive\n            noLoop\n          />\n        ) : (\n          <AnimatedIconFromSticker\n            sticker={giftSticker}\n            play={canPlayAnimatedEmojis && hasEnded}\n            noLoop\n            nonInteractive\n            size={GIFT_STICKER_SIZE}\n          />\n        )}\n        <span className={styles.count}>\n          {`x${quantity}`}\n        </span>\n      </div>\n      {isResults ? renderGiveawayResultsDescription(giveawayResults) : renderGiveawayDescription(giveaway!)}\n      <Button\n        className={styles.button}\n        color=\"adaptive\"\n        size=\"smaller\"\n        onClick={handleShowInfoClick}\n      >\n        {lang('BoostingHowItWork')}\n      </Button>\n      <ConfirmDialog\n        isOpen={Boolean(giveawayInfo)}\n        isOnlyConfirm\n        title={giveawayInfoTitle}\n        confirmHandler={handleCloseInfo}\n        onClose={handleCloseInfo}\n      >\n        {renderGiveawayInfo()}\n      </ConfirmDialog>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): StateProps => {\n    const { giveaway } = message.content;\n    const chat = selectChat(global, message.chatId)!;\n    const sender = selectChat(global, giveaway?.channelIds[0]!)\n      || selectForwardedSender(global, message) || chat;\n\n    const sticker = giveaway && selectGiftStickerForDuration(global, giveaway.months);\n\n    return {\n      chat,\n      sender,\n      giftSticker: sticker,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(Giveaway));\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton, ApiMessage } from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\n\nimport { RE_TME_LINK } from '../../../config';\nimport renderKeyboardButtonText from '../composer/helpers/renderKeyboardButtonText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './InlineButtons.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  onClick: (payload: ActionPayloads['clickBotInlineButton']) => void;\n};\n\nconst InlineButtons: FC<OwnProps> = ({ message, onClick }) => {\n  const lang = useOldLang();\n\n  const renderIcon = (button: ApiKeyboardButton) => {\n    const { type } = button;\n    switch (type) {\n      case 'url': {\n        if (!RE_TME_LINK.test(button.url)) {\n          return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n        }\n        break;\n      }\n      case 'urlAuth':\n        return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n      case 'buy':\n      case 'receipt':\n        return <Icon className=\"corner-icon\" name=\"card\" />;\n      case 'switchBotInline':\n        return <Icon className=\"corner-icon\" name=\"share-filled\" />;\n      case 'webView':\n      case 'simpleWebView':\n        return <Icon className=\"corner-icon\" name=\"webapp\" />;\n      case 'copy':\n        return <Icon className=\"corner-icon\" name=\"copy\" />;\n    }\n    return undefined;\n  };\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message.inlineButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n    return texts;\n  }, [lang, message.inlineButtons]);\n\n  return (\n    <div className=\"InlineButtons\">\n      {message.inlineButtons!.map((row, i) => (\n        <div className=\"row\">\n          {row.map((button, j) => (\n            <Button\n              size=\"tiny\"\n              ripple\n              disabled={button.type === 'unsupported'}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onClick({ chatId: message.chatId, messageId: message.id, button })}\n            >\n              <span className=\"inline-button-text\">\n                {buttonTexts[i][j]}\n              </span>\n              {renderIcon(button)}\n            </Button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(InlineButtons);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageInvoice, getWebDocumentHash } from '../../../global/helpers';\nimport buildStyle from '../../../util/buildStyle';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\n\nimport useLang from '../../../hooks/useLang';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Invoice.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldAffectAppendix?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ISettings['theme'];\n  forcedWidth?: number;\n};\n\nconst Invoice: FC<OwnProps> = ({\n  message,\n  shouldAffectAppendix,\n  isInSelectMode,\n  isSelected,\n  theme,\n  forcedWidth,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const invoice = getMessageInvoice(message);\n\n  const {\n    title,\n    description,\n    amount,\n    currency,\n    isTest,\n    photo,\n  } = invoice!;\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n  const withBlurredBackground = Boolean(forcedWidth);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photoUrl, !withBlurredBackground);\n  const messageId = message.id;\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    if (photoUrl) {\n      const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n      getCustomAppendixBg(photoUrl, false, messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    }\n  }, [shouldAffectAppendix, photoUrl, isInSelectMode, isSelected, theme, messageId]);\n\n  const width = forcedWidth || photo?.dimensions?.width;\n\n  const style = buildStyle(\n    photo?.dimensions && `width: ${width}px`,\n    photo?.dimensions && `aspect-ratio: ${photo.dimensions.width} / ${photo.dimensions.height}`,\n    Boolean(!photo?.dimensions && forcedWidth) && `width: ${forcedWidth}px`,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className=\"Invoice\"\n    >\n      {title && (\n        <p className=\"title\">{renderText(title)}</p>\n      )}\n      {description && (\n        <div className=\"info\">{renderText(description, ['emoji', 'br'])}</div>\n      )}\n      <div className={`description ${photo ? 'has-image' : ''}`}>\n        {Boolean(photo) && (\n          <div className=\"invoice-image-container\">\n            {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n            {photoUrl && (\n              <img\n                className=\"invoice-image\"\n                src={photoUrl}\n                alt=\"\"\n                style={style}\n                crossOrigin=\"anonymous\"\n                draggable={false}\n              />\n            )}\n            {!photoUrl && photo && (\n              <Skeleton\n                width={width}\n                height={photo.dimensions?.height}\n                forceAspectRatio\n              />\n            )}\n          </div>\n        )}\n        <p className=\"description-text\">\n          {formatCurrency(lang, amount, currency, { iconClassName: 'invoice-currency-icon' })}\n          {isTest && <span className=\"test-invoice\">{oldLang('PaymentTestInvoice')}</span>}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Invoice);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dCK8GQ_8\",\"duration\":\"CWT8ZMwV\",\"buy\":\"C38zhCDM\",\"spoiler\":\"CG55VZP1\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getMessageInvoice } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './InvoiceMediaPreview.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  isConnected: boolean;\n};\n\nconst POLLING_INTERVAL = 30000;\n\nconst InvoiceMediaPreview: FC<OwnProps> = ({\n  message,\n  isConnected,\n}) => {\n  const { openInvoice, loadExtendedMedia } = getActions();\n  const lang = useOldLang();\n  const invoice = getMessageInvoice(message);\n\n  const { chatId, id } = message;\n\n  const refreshExtendedMedia = useLastCallback(() => {\n    loadExtendedMedia({ chatId, ids: [id] });\n  });\n\n  useInterval(refreshExtendedMedia, isConnected ? POLLING_INTERVAL : undefined);\n\n  const {\n    amount,\n    currency,\n    extendedMedia,\n  } = invoice!;\n\n  const {\n    width, height, thumbnail, duration,\n  } = extendedMedia!;\n\n  const handleClick = useLastCallback(() => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId: id,\n      isExtendedMedia: true,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, 'media-inner')}\n      onClick={handleClick}\n    >\n      <MediaSpoiler\n        thumbDataUri={thumbnail?.dataUri}\n        width={width}\n        height={height}\n        isVisible\n        className={styles.spoiler}\n      />\n      {Boolean(duration) && <div className={styles.duration}>{formatMediaDuration(duration)}</div>}\n      <div className={styles.buy}>\n        <Icon name=\"lock\" className={styles.lock} />\n        {lang('Checkout.PayPrice', formatCurrencyAsString(amount, currency))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InvoiceMediaPreview);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  buildStaticMapHash,\n  getMessageLocation,\n  isGeoLiveExpired,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCountdownShort, formatLocationLastUpdate } from '../../../util/dates/dateFormat';\nimport {\n  getMetersPerPixel, getVenueColor, getVenueIconUrl,\n} from '../../../util/map';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../common/Avatar';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Location.scss';\n\nimport mapPin from '../../../assets/map-pin.svg';\n\nconst TIMER_RADIUS = 12;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst MOVE_THRESHOLD = 0.0001; // ~11m\nconst DEFAULT_MAP_CONFIG = {\n  width: 400,\n  height: 300,\n  zoom: 16,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  peer?: ApiPeer;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ISettings['theme'];\n};\n\nconst Location: FC<OwnProps> = ({\n  message,\n  peer,\n}) => {\n  const { openMapModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const countdownRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const location = getMessageLocation(message)!;\n  const { mediaType, geo } = location;\n\n  const serverTime = getServerTime();\n  const isExpired = isGeoLiveExpired(message);\n  const secondsBeforeEnd = (mediaType === 'geoLive' && !isExpired) ? message.date + location.period - serverTime\n    : undefined;\n\n  const [point, setPoint] = useState(geo);\n\n  const shouldRenderText = mediaType === 'venue' || (mediaType === 'geoLive' && !isExpired);\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n\n  const mediaHash = buildStaticMapHash(point, width, height, zoom, dpr);\n  const mediaBlobUrl = useMedia(mediaHash);\n  const prevMediaBlobUrl = usePreviousDeprecated(mediaBlobUrl, true);\n  const mapBlobUrl = mediaBlobUrl || prevMediaBlobUrl;\n\n  const accuracyRadiusPx = useMemo(() => {\n    if (mediaType !== 'geoLive' || !point.accuracyRadius) {\n      return 0;\n    }\n\n    const { lat, accuracyRadius } = point;\n    return accuracyRadius / getMetersPerPixel(lat, zoom);\n  }, [mediaType, point, zoom]);\n\n  const handleClick = () => {\n    openMapModal({ geoPoint: point, zoom });\n  };\n\n  const updateCountdown = useLastCallback((countdownEl: HTMLDivElement) => {\n    if (mediaType !== 'geoLive') return;\n    const svgEl = countdownEl.lastElementChild!;\n    const timerEl = countdownEl.firstElementChild!;\n\n    const timeLeft = message.date + location.period - getServerTime();\n    const strokeDashOffset = (1 - timeLeft / location.period) * TIMER_CIRCUMFERENCE;\n    const text = formatCountdownShort(lang, timeLeft * 1000);\n    timerEl.textContent = text;\n    svgEl.firstElementChild!.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  });\n\n  useLayoutEffect(() => {\n    if (countdownRef.current) {\n      updateCountdown(countdownRef.current);\n    }\n  }, [updateCountdown]);\n\n  useEffect(() => {\n    // Prevent map refetching for slight location changes\n    if (Math.abs(geo.lat - point.lat) < MOVE_THRESHOLD && Math.abs(geo.long - point.long) < MOVE_THRESHOLD) {\n      if (point.accuracyRadius !== geo.accuracyRadius) {\n        setPoint({\n          ...point,\n          accuracyRadius: geo.accuracyRadius,\n        });\n      }\n      return;\n    }\n    setPoint(geo);\n  }, [geo, point]);\n\n  useTimeout(() => {\n    forceUpdate();\n  }, !isExpired ? (secondsBeforeEnd || 0) * 1000 : undefined);\n\n  useInterval(() => {\n    requestMutation(() => {\n      const countdownEl = countdownRef.current;\n      if (countdownEl) {\n        updateCountdown(countdownEl);\n      }\n    });\n  }, secondsBeforeEnd ? 1000 : undefined);\n\n  function renderInfo() {\n    if (!shouldRenderText) return undefined;\n    if (mediaType === 'venue') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">\n            {location.title}\n          </div>\n          <div className=\"location-info-subtitle\">\n            {location.address}\n          </div>\n        </div>\n      );\n    }\n    if (mediaType === 'geoLive') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">{lang('AttachLiveLocation')}</div>\n          <div className=\"location-info-subtitle\">\n            {formatLocationLastUpdate(lang, serverTime, message.editDate)}\n          </div>\n          {!isExpired && (\n            <div className=\"geo-countdown\" ref={countdownRef}>\n              <span className=\"geo-countdown-text\" />\n              <svg width=\"32px\" height=\"32px\">\n                <circle\n                  cx=\"16\"\n                  cy=\"16\"\n                  r={TIMER_RADIUS}\n                  className=\"geo-countdown-progress\"\n                  transform=\"rotate(-90, 16, 16)\"\n                  stroke-dasharray={TIMER_CIRCUMFERENCE}\n                  stroke-dashoffset=\"0\"\n                />\n              </svg>\n            </div>\n          )}\n        </div>\n      );\n    }\n    return undefined;\n  }\n\n  function renderMap() {\n    if (!mapBlobUrl) return <Skeleton width={width} height={height} />;\n    return (\n      <img\n        className=\"full-media map\"\n        src={mapBlobUrl}\n        alt=\"Location on a map\"\n        draggable={false}\n        style={`width: ${DEFAULT_MAP_CONFIG.width}px; height: ${DEFAULT_MAP_CONFIG.height}px;`}\n      />\n    );\n  }\n\n  function renderPin() {\n    const pinClassName = buildClassName(\n      'pin',\n      mediaType,\n      isExpired && 'expired',\n    );\n    if (mediaType === 'geoLive') {\n      return (\n        <div className={pinClassName}>\n          <PinSvg />\n          <Avatar peer={peer} className=\"location-avatar\" />\n          {location.heading !== undefined && (\n            <div className=\"direction\" style={`--direction: ${location.heading}deg`} />\n          )}\n        </div>\n      );\n    }\n\n    if (mediaType === 'venue') {\n      const color = getVenueColor(location.venueType);\n      const iconSrc = getVenueIconUrl(location.venueType);\n      if (iconSrc) {\n        return (\n          <div className={pinClassName} style={`--pin-color: ${color}`}>\n            <PinSvg />\n            <img src={iconSrc} draggable={false} className=\"venue-icon\" alt=\"\" />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <img className={pinClassName} draggable={false} src={mapPin} alt=\"\" />\n    );\n  }\n\n  function renderOverlay() {\n    if (!mapBlobUrl) return undefined;\n\n    return (\n      <>\n        {Boolean(accuracyRadiusPx) && !isExpired && (\n          <div\n            className=\"location-accuracy\"\n            style={`width: ${accuracyRadiusPx * 2}px; height: ${accuracyRadiusPx * 2}px`}\n          />\n        )}\n        {renderPin()}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className=\"Location media-inner interactive\"\n      onClick={handleClick}\n    >\n      <div className=\"map-wrapper\">\n        {renderMap()}\n        {renderOverlay()}\n      </div>\n      {renderInfo()}\n    </div>\n  );\n};\n\nfunction PinSvg() {\n  return (\n    <svg className=\"round-pin\" style=\"enable-background:new 0 0 64 64\" viewBox=\"0 0 64 64\">\n      <circle cx=\"32\" cy=\"32\" r=\"24.5\" />\n      <path d=\"M32 8c13.23 0 24 10.77 24 24S45.23 56 32 56 8 45.23 8 32 18.77 8 32 8m0-1C18.19 7 7 18.19 7 32s11.19 25 25 25 25-11.19 25-25S45.81 7 32 7z\" />\n      <path d=\"m29.38 57.67-1.98-1.59 3.02-1.66L32 51.54l1.58 2.88 3.02 1.66-1.91 1.53L32 60.73z\" />\n      <path d=\"m32 52.58 1.07 1.95.14.26.26.14 2.24 1.22-1.33 1.06-.07.06-.06.07L32 59.96l-2.24-2.61-.06-.07-.07-.06-1.33-1.06 2.24-1.22.26-.14.14-.26L32 52.58m0-2.08-1.94 3.56L26.5 56l2.5 2 3 3.5 3-3.5 2.5-2-3.56-1.94L32 50.5z\" />\n    </svg>\n  );\n}\n\nexport default memo(Location);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiMessage, ApiMessageOutgoingStatus, ApiThreadInfo,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString, formatPastTimeShort, formatTime } from '../../../util/dates/dateFormat';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport MessageOutgoingStatus from '../../common/MessageOutgoingStatus';\n\nimport './MessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  withReactionOffset?: boolean;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  signature?: string;\n  availableReactions?: ApiAvailableReaction[];\n  noReplies?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  isTranslated?: boolean;\n  isPinned?: boolean;\n  withFullDate?: boolean;\n  effectEmoji?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onTranslationClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onEffectClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  renderQuickReactionButton?: () => TeactNode | undefined;\n  onOpenThread: NoneToVoidFunction;\n  paidMessageStars?: number;\n};\n\nconst MessageMeta: FC<OwnProps> = ({\n  message,\n  outgoingStatus,\n  signature,\n  withReactionOffset,\n  repliesThreadInfo,\n  renderQuickReactionButton,\n  noReplies,\n  isTranslated,\n  isPinned,\n  withFullDate,\n  effectEmoji,\n  onClick,\n  onTranslationClick,\n  onEffectClick,\n  onOpenThread,\n  paidMessageStars,\n}) => {\n  const { showNotification } = getActions();\n\n  const [isActivated, markActivated] = useFlag();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleImportedClick(e: React.MouseEvent) {\n    e.stopPropagation();\n\n    showNotification({\n      message: {\n        key: 'ImportedInfo',\n      },\n    });\n  }\n\n  function handleOpenThread(e: React.MouseEvent) {\n    e.stopPropagation();\n    onOpenThread();\n  }\n\n  const dateTitle = useMemo(() => {\n    if (!isActivated) return undefined;\n    const createDateTime = formatDateTimeToString(message.date * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const editDateTime = message.isEdited\n      && formatDateTimeToString(message.editDate! * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const forwardedDateTime = message.forwardInfo\n      && formatDateTimeToString(\n        (message.forwardInfo.savedDate || message.forwardInfo.date) * 1000,\n        oldLang.code,\n        undefined,\n        oldLang.timeFormat,\n      );\n\n    let text = createDateTime;\n    if (editDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipEditedDate', { date: editDateTime });\n    }\n    if (forwardedDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipForwardedDate', { date: forwardedDateTime });\n    }\n\n    return text;\n    // We need to listen to timeformat change\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [isActivated, oldLang, message, oldLang.timeFormat]);\n\n  const viewsTitle = useMemo(() => {\n    if (!message.viewsCount) return undefined;\n    let text = lang('MessageTooltipViews', { count: message.viewsCount }, { pluralValue: message.viewsCount });\n    if (message.forwardsCount) {\n      text += '\\n';\n      text += lang('MessageTooltipForwards', { count: message.forwardsCount }, { pluralValue: message.forwardsCount });\n    }\n\n    return text;\n  }, [lang, message.forwardsCount, message.viewsCount]);\n\n  const repliesTitle = useMemo(() => {\n    const count = repliesThreadInfo?.messagesCount;\n    if (!count) return undefined;\n    return lang('MessageTooltipReplies', { count }, { pluralValue: count });\n  }, [lang, repliesThreadInfo]);\n\n  const date = useMemo(() => {\n    const time = formatTime(oldLang, message.date * 1000);\n    if (!withFullDate) {\n      return time;\n    }\n\n    return formatPastTimeShort(oldLang, (message.forwardInfo?.date || message.date) * 1000, true);\n  }, [oldLang, message.date, message.forwardInfo?.date, withFullDate]);\n\n  const fullClassName = buildClassName(\n    'MessageMeta',\n    withReactionOffset && 'reactions-offset',\n    message.forwardInfo?.isImported && 'is-imported',\n  );\n\n  return (\n    <span\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n      onClick={onClick}\n      data-ignore-on-paste\n    >\n      {effectEmoji && (\n        <span className=\"message-effect-icon\" onClick={onEffectClick}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {isTranslated && (\n        <Icon name=\"language\" className=\"message-translated\" onClick={onTranslationClick} />\n      )}\n      {Boolean(message.viewsCount) && (\n        <>\n          <span className=\"message-views\" title={viewsTitle}>\n            {formatIntegerCompact(message.viewsCount!)}\n          </span>\n          <Icon name=\"channelviews\" />\n        </>\n      )}\n      {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n        <span onClick={handleOpenThread} className=\"message-replies-wrapper\" title={repliesTitle}>\n          <span className=\"message-replies\">\n            <AnimatedCounter text={formatIntegerCompact(repliesThreadInfo!.messagesCount!)} />\n          </span>\n          <Icon name=\"reply-filled\" />\n        </span>\n      )}\n      {isPinned && (\n        <Icon name=\"pinned-message\" className=\"message-pinned\" />\n      )}\n      {signature && (\n        <span className=\"message-signature\">{renderText(signature)}</span>\n      )}\n      {paidMessageStars && (\n        <span className=\"message-price\">{\n          formatStarsAsIcon(lang, paidMessageStars, {\n            asFont: true,\n            className: 'message-price-star-icon',\n            containerClassName: 'message-price-stars-container',\n          })\n        }\n        </span>\n      )}\n      <span className=\"message-time\" title={dateTitle} onMouseEnter={markActivated}>\n        {message.forwardInfo?.isImported && (\n          <>\n            <span className=\"message-imported\" onClick={handleImportedClick}>\n              {formatDateTimeToString(message.forwardInfo.date * 1000, lang.code, true)}\n            </span>\n            <span className=\"message-imported\" onClick={handleImportedClick}>{lang('MessageMetaImported')}</span>\n          </>\n        )}\n        {message.isEdited && `${lang('MessageMetaEdited')} `}\n        {message.isVideoProcessingPending && `${lang('MessageMetaApproximate')} `}\n        {date}\n      </span>\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      {renderQuickReactionButton && renderQuickReactionButton()}\n    </span>\n  );\n};\n\nexport default memo(MessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wqsZyy8u\",\"button\":\"NGmo4ADz\",\"info\":\"iFn6m6hd\",\"reason\":\"l8QfocIQ\",\"arrow\":\"ONmpzmUS\",\"incoming\":\"BfgDXljM\",\"missed\":\"Alra_BWu\",\"canceled\":\"J7xsuCAm\",\"meta\":\"rF5tkx92\",\"duration\":\"kKPKwFzu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ApiMessageActionPhoneCall } from '../../../api/types/messageActions';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatTimeDuration } from '../../../util/dates/dateFormat';\nimport { ARE_CALLS_SUPPORTED } from '../../../util/windowEnvironment';\nimport { getCallMessageKey } from './helpers/messageActions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MessagePhoneCall.module.scss';\n\ntype OwnProps = {\n  phoneCall: ApiMessageActionPhoneCall;\n  message: ApiMessage;\n  chatId: string;\n};\n\nconst MessagePhoneCall: FC<OwnProps> = ({\n  phoneCall,\n  message,\n  chatId,\n}) => {\n  const { requestMasterAndRequestCall } = getActions();\n\n  const lang = useOldLang();\n  const {\n    isVideo, reason, duration,\n  } = phoneCall;\n  const isOutgoing = message.isOutgoing;\n  const isMissed = reason === 'missed';\n  const isCancelled = reason === 'busy' || duration === undefined;\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ isVideo, userId: chatId });\n  });\n\n  const formattedDuration = useMemo(() => {\n    return phoneCall.duration ? formatTimeDuration(lang, phoneCall.duration) : undefined;\n  }, [lang, phoneCall.duration]);\n\n  const timeFormatted = formatTime(lang, message.date * 1000);\n  return (\n    <div className={styles.root}>\n      <Button\n        size=\"smaller\"\n        color=\"translucent\"\n        round\n        ripple\n        onClick={handleCall}\n        className={styles.button}\n        disabled={!ARE_CALLS_SUPPORTED}\n        ariaLabel={lang(isOutgoing ? 'CallAgain' : 'CallBack')}\n      >\n        <Icon name={isVideo ? 'video-outlined' : 'phone'} />\n      </Button>\n      <div className={styles.info}>\n        <div className={styles.reason}>{lang(getCallMessageKey(phoneCall, message.isOutgoing))}</div>\n        <div className={styles.meta}>\n          <Icon\n            name=\"arrow-right\"\n            className={buildClassName(\n              styles.arrow,\n              isMissed && styles.missed,\n              isCancelled && styles.canceled,\n              !isOutgoing && styles.incoming,\n            )}\n          />\n          <span className={styles.duration}>\n            {formattedDuration ? lang('CallMessageWithDuration', [timeFormatted, formattedDuration]) : timeFormatted}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MessagePhoneCall);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mVaSjZRJ\",\"buyButton\":\"GnKGu6D9\",\"boughtStatus\":\"IGXW5hWr\",\"star\":\"ywiOugiH\",\"buttonText\":\"gLaaVQXr\"};","import React, { memo, type TeactNode, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPaidMedia } from '../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { replaceWithTeact } from '../../../util/replaceWithTeact';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './PaidMediaOverlay.module.scss';\n\ntype OwnProps = {\n  paidMedia: ApiPaidMedia;\n  chatId: string;\n  messageId: number;\n  isOutgoing?: boolean;\n  children?: TeactNode;\n};\n\nconst PaidMediaOverlay = ({\n  paidMedia,\n  chatId,\n  messageId,\n  isOutgoing,\n  children,\n}: OwnProps) => {\n  const { openInvoice } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isClickable = !paidMedia.isBought;\n\n  const buttonText = useMemo(() => {\n    const value = oldLang('UnlockPaidContent', paidMedia.starsAmount);\n\n    return replaceWithTeact(\n      value, STARS_ICON_PLACEHOLDER, <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />,\n    );\n  }, [oldLang, paidMedia]);\n\n  const handleClick = useLastCallback((e: React.MouseEvent) => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId,\n    });\n    stopEvent(e);\n  });\n\n  return (\n    <div\n      className={styles.root}\n      onClick={isClickable ? handleClick : undefined}\n    >\n      {children}\n      {isClickable && (\n        <Button\n          className={styles.buyButton}\n          color=\"dark\"\n          size=\"tiny\"\n          fluid\n          pill\n        >\n          <span className={styles.buttonText}>{buttonText}</span>\n        </Button>\n      )}\n      {paidMedia.isBought && (\n        <div className={buildClassName('message-paid-media-status', styles.boughtStatus)}>\n          {isOutgoing\n            ? formatStarsAsIcon(lang, paidMedia.starsAmount)\n            : oldLang('Chat.PaidMedia.Purchased')}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(PaidMediaOverlay);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPollAnswer, ApiPollResult } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './PollOption.scss';\n\ntype OwnProps = {\n  answer: ApiPollAnswer;\n  voteResults?: ApiPollResult[];\n  totalVoters?: number;\n  maxVotersCount?: number;\n  correctResults: string[];\n  shouldAnimate: boolean;\n};\n\nconst PollOption: FC<OwnProps> = ({\n  answer,\n  voteResults,\n  totalVoters,\n  maxVotersCount,\n  correctResults,\n  shouldAnimate,\n}) => {\n  const lang = useLang();\n  const result = voteResults && voteResults.find((r) => r.option === answer.option);\n  const correctAnswer = correctResults.length === 0 || correctResults.indexOf(answer.option) !== -1;\n  const showIcon = (correctResults.length > 0 && correctAnswer) || (result?.isChosen);\n  const answerPercent = result ? getPercentage(result.votersCount, totalVoters || 0) : 0;\n  const [finalPercent, setFinalPercent] = useState(shouldAnimate ? 0 : answerPercent);\n  const lineWidth = result ? getPercentage(result.votersCount, maxVotersCount || 0) : 0;\n  const isAnimationDoesNotStart = finalPercent !== answerPercent;\n\n  useEffect(() => {\n    if (shouldAnimate) {\n      setFinalPercent(answerPercent);\n    }\n  }, [shouldAnimate, answerPercent]);\n\n  if (!voteResults || !result) {\n    return undefined;\n  }\n\n  const lineStyle = `width: ${lineWidth}%; transform:scaleX(${isAnimationDoesNotStart ? 0 : 1})`;\n\n  return (\n    <div className=\"PollOption\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className={`poll-option-share ${answerPercent === '100' ? 'limit-width' : ''}`}>\n        {answerPercent}%\n        {showIcon && (\n          <span className={buildClassName(\n            'poll-option-chosen',\n            !correctAnswer && 'wrong',\n            shouldAnimate && 'animate',\n          )}\n          >\n            <Icon name={correctAnswer ? 'check' : 'close'} className=\"poll-option-icon\" />\n          </span>\n        )}\n      </div>\n      <div className=\"poll-option-right\">\n        <div className=\"poll-option-text\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: answer.text.text,\n            entities: answer.text.entities,\n          })}\n        </div>\n        <div className={buildClassName('poll-option-answer', showIcon && !correctAnswer && 'wrong')}>\n          {shouldAnimate && (\n            <svg\n              className=\"poll-line\"\n              style={!isAnimationDoesNotStart ? 'stroke-dasharray: 100% 200%; stroke-dashoffset: -44' : ''}\n            >\n              <path d=\"M4.47 5.33v13.6a9 9 0 009 9h13\" />\n            </svg>\n          )}\n          <div\n            className=\"poll-option-line\"\n            style={lineStyle}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default PollOption;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPoll, ApiPollAnswer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { selectPeer } from '../../../global/selectors';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PollOption from './PollOption';\n\nimport './Poll.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  poll: ApiPoll;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onSendVote: (options: string[]) => void;\n};\n\nconst SOLUTION_CONTAINER_ID = '#middle-column-portals';\nconst SOLUTION_DURATION = 5000;\nconst TIMER_RADIUS = 6;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst TIMER_UPDATE_INTERVAL = 1000;\nconst NBSP = '\\u00A0';\n\nconst Poll: FC<OwnProps> = ({\n  message,\n  poll,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onSendVote,\n}) => {\n  const {\n    loadMessage, openPollResults, requestConfetti, showNotification,\n  } = getActions();\n\n  const { id: messageId, chatId } = message;\n  const { summary, results } = poll;\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [chosenOptions, setChosenOptions] = useState<string[]>([]);\n  const [wasSubmitted, setWasSubmitted] = useState<boolean>(false);\n  const [closePeriod, setClosePeriod] = useState<number>(\n    !summary.closed && summary.closeDate && summary.closeDate > 0\n      ? Math.min(summary.closeDate - getServerTime(), summary.closePeriod!)\n      : 0,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const countdownRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const timerCircleRef = useRef<SVGCircleElement>(null);\n  const { results: voteResults, totalVoters } = results;\n  const hasVoted = voteResults && voteResults.some((r) => r.isChosen);\n  const canVote = !summary.closed && !hasVoted;\n  const canViewResult = !canVote && summary.isPublic && Number(results.totalVoters) > 0;\n  const isMultiple = canVote && summary.multipleChoice;\n  const recentVoterIds = results.recentVoterIds;\n  const maxVotersCount = voteResults ? Math.max(...voteResults.map((r) => r.votersCount)) : totalVoters;\n  const correctResults = useMemo(() => {\n    return voteResults?.filter((r) => r.isCorrect).map((r) => r.option) || [];\n  }, [voteResults]);\n  const answers = useMemo(() => summary.answers.map((a) => ({\n    label: renderTextWithEntities({\n      text: a.text.text,\n      entities: a.text.entities,\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    }),\n    value: a.option,\n    hidden: Boolean(summary.quiz && summary.closePeriod && closePeriod <= 0),\n  })), [\n    closePeriod, observeIntersectionForLoading, observeIntersectionForPlaying,\n    summary.answers, summary.closePeriod, summary.quiz,\n  ]);\n\n  useEffect(() => {\n    const chosen = poll.results.results?.find((result) => result.isChosen);\n    if (isSubmitting && chosen) {\n      if (chosen.isCorrect) {\n        requestConfetti({});\n      }\n      setIsSubmitting(false);\n    }\n  }, [isSubmitting, poll.results.results, requestConfetti]);\n\n  useLayoutEffect(() => {\n    if (closePeriod > 0) {\n      setTimeout(() => setClosePeriod(closePeriod - 1), TIMER_UPDATE_INTERVAL);\n    }\n    if (!timerCircleRef.current) return;\n\n    if (closePeriod <= 5) {\n      countdownRef.current!.classList.add('hurry-up');\n    }\n\n    const strokeDashOffset = ((summary.closePeriod! - closePeriod) / summary.closePeriod!) * TIMER_CIRCUMFERENCE;\n    timerCircleRef.current.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  }, [closePeriod, summary.closePeriod]);\n\n  useEffect(() => {\n    if (summary.quiz && (closePeriod <= 0 || (hasVoted && !summary.closed))) {\n      loadMessage({ chatId, messageId });\n    }\n  }, [chatId, closePeriod, hasVoted, loadMessage, messageId, summary.closed, summary.quiz]);\n\n  // If the client time is not synchronized, the poll must be updated after the closePeriod time has expired.\n  useEffect(() => {\n    let timer: number | undefined;\n\n    if (summary.quiz && !summary.closed && summary.closePeriod && summary.closePeriod > 0) {\n      timer = window.setTimeout(() => {\n        loadMessage({ chatId, messageId });\n      }, summary.closePeriod * 1000);\n    }\n\n    return () => {\n      if (timer) {\n        window.clearTimeout(timer);\n      }\n    };\n  }, [canVote, chatId, loadMessage, messageId, summary.closePeriod, summary.closed, summary.quiz]);\n\n  const recentVoters = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const global = getGlobal();\n    return recentVoterIds ? recentVoterIds.reduce((result: ApiPeer[], id) => {\n      const peer = selectPeer(global, id);\n      if (peer) {\n        result.push(peer);\n      }\n\n      return result;\n    }, []) : [];\n  }, [recentVoterIds]);\n\n  const handleRadioChange = useLastCallback((option: string) => {\n    setChosenOptions([option]);\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote([option]);\n  });\n\n  const handleCheckboxChange = useLastCallback((options: string[]) => {\n    setChosenOptions(options);\n  });\n\n  const handleVoteClick = useLastCallback(() => {\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote(chosenOptions);\n  });\n\n  const handleViewResultsClick = useLastCallback(() => {\n    openPollResults({ chatId, messageId });\n  });\n\n  const showSolution = useLastCallback(() => {\n    showNotification({\n      localId: getMessageKey(message),\n      message: renderTextWithEntities({ text: poll.results.solution!, entities: poll.results.solutionEntities }),\n      duration: SOLUTION_DURATION,\n      containerSelector: SOLUTION_CONTAINER_ID,\n    });\n  });\n\n  // Show the solution to quiz if the answer was incorrect\n  useEffect(() => {\n    if (wasSubmitted && hasVoted && summary.quiz && results.results && poll.results.solution) {\n      const correctResult = results.results.find((r) => r.isChosen && r.isCorrect);\n      if (!correctResult) {\n        showSolution();\n      }\n    }\n  }, [hasVoted, wasSubmitted, results.results, summary.quiz, poll.results.solution]);\n\n  const lang = useOldLang();\n\n  function renderResultOption(answer: ApiPollAnswer) {\n    return (\n      <PollOption\n        key={answer.option}\n        shouldAnimate={wasSubmitted || !canVote}\n        answer={answer}\n        voteResults={voteResults}\n        totalVoters={totalVoters}\n        maxVotersCount={maxVotersCount}\n        correctResults={correctResults}\n      />\n    );\n  }\n\n  function renderRecentVoters() {\n    return (\n      recentVoters.length > 0 && (\n        <div className=\"poll-recent-voters\">\n          <AvatarList\n            size=\"micro\"\n            peers={recentVoters}\n          />\n        </div>\n      )\n    );\n  }\n\n  return (\n    <div className=\"Poll\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"poll-question\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n          observeIntersectionForLoading,\n          observeIntersectionForPlaying,\n        })}\n      </div>\n      <div className=\"poll-type\">\n        {lang(getPollTypeString(summary))}\n        {renderRecentVoters()}\n        {closePeriod > 0 && canVote && (\n          <div ref={countdownRef} className=\"poll-countdown\">\n            <span>{formatMediaDuration(closePeriod)}</span>\n            <svg width=\"16px\" height=\"16px\">\n              <circle\n                ref={timerCircleRef}\n                cx=\"8\"\n                cy=\"8\"\n                r={TIMER_RADIUS}\n                className=\"poll-countdown-progress\"\n                transform=\"rotate(-90, 8, 8)\"\n                stroke-dasharray={TIMER_CIRCUMFERENCE}\n                stroke-dashoffset=\"0\"\n              />\n            </svg>\n          </div>\n        )}\n        {summary.quiz && poll.results.solution && !canVote && (\n          <Button\n            round\n            size=\"tiny\"\n            color=\"translucent\"\n            className=\"poll-quiz-help\"\n            onClick={showSolution}\n            ariaLabel=\"Show Solution\"\n          >\n            <Icon name=\"lamp\" />\n          </Button>\n        )}\n      </div>\n      {canVote && (\n        <div\n          className=\"poll-answers\"\n          onClick={stopPropagation}\n        >\n          {isMultiple\n            ? (\n              <CheckboxGroup\n                options={answers}\n                onChange={handleCheckboxChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOptions={isSubmitting ? chosenOptions : undefined}\n                isRound\n              />\n            )\n            : (\n              <RadioGroup\n                name={`poll-${messageId}`}\n                options={answers}\n                onChange={handleRadioChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOption={isSubmitting ? chosenOptions[0] : undefined}\n              />\n            )}\n        </div>\n      )}\n      {!canVote && (\n        <div className=\"poll-results\">\n          {summary.answers.map(renderResultOption)}\n        </div>\n      )}\n      {!canViewResult && !isMultiple && (\n        <div className=\"poll-voters-count\">{getReadableVotersCount(lang, summary.quiz, results.totalVoters)}</div>\n      )}\n      {isMultiple && (\n        <Button\n          isText\n          disabled={chosenOptions.length === 0}\n          size=\"tiny\"\n          onClick={handleVoteClick}\n        >\n          {lang('PollSubmitVotes')}\n        </Button>\n      )}\n      {canViewResult && (\n        <Button\n          isText\n          size=\"tiny\"\n          onClick={handleViewResultsClick}\n        >\n          {lang('PollViewResults')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nfunction getPollTypeString(summary: ApiPoll['summary']) {\n  // When we just created the poll, some properties don't exist.\n  if (typeof summary.isPublic === 'undefined') {\n    return NBSP;\n  }\n\n  if (summary.closed) {\n    return 'FinalResults';\n  }\n\n  if (summary.quiz) {\n    return summary.isPublic ? 'QuizPoll' : 'AnonymousQuizPoll';\n  }\n\n  return summary.isPublic ? 'PublicPoll' : 'AnonymousPoll';\n}\n\nfunction getReadableVotersCount(lang: OldLangFn, isQuiz: true | undefined, count?: number) {\n  if (!count) {\n    return lang(isQuiz ? 'Chat.Quiz.TotalVotesEmpty' : 'Chat.Poll.TotalVotesResultEmpty');\n  }\n\n  return lang(isQuiz ? 'Answer' : 'Vote', count, 'i');\n}\n\nfunction stopPropagation(e: React.MouseEvent<HTMLDivElement>) {\n  e.stopPropagation();\n}\n\nexport default memo(Poll);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FPceNkgD\",\"inactive\":\"hruUWBuj\",\"mirrored\":\"GydRBA08\",\"effect\":\"WMMaWlOL\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\nimport { getStickerDimensions } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport StickerView from '../../common/StickerView';\nimport Portal from '../../ui/Portal';\n\nimport styles from './Sticker.module.scss';\n\n// https://github.com/telegramdesktop/tdesktop/blob/master/Telegram/SourceFiles/history/view/media/history_view_sticker.cpp#L42\nconst EFFECT_SIZE_MULTIPLIER = 1 + 0.245 * 2;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection: ObserveFn;\n  observeIntersectionForPlaying: ObserveFn;\n  shouldLoop?: boolean;\n  shouldPlayEffect?: boolean;\n  withEffect?: boolean;\n  onStopEffect?: VoidFunction;\n};\n\nconst Sticker: FC<OwnProps> = ({\n  message, observeIntersection, observeIntersectionForPlaying, shouldLoop,\n  shouldPlayEffect, withEffect, onStopEffect,\n}) => {\n  const { showNotification, openStickerSet } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const effectRef = useRef<HTMLDivElement>(null);\n\n  const sticker = message.content.sticker!;\n  const { stickerSetInfo, isVideo, hasEffect } = sticker;\n  const isMirrored = !message.isOutgoing;\n\n  const mediaHash = sticker.isPreloadedGlobally ? undefined : (\n    getStickerMediaHash(sticker, isVideo && !IS_WEBM_SUPPORTED ? 'pictogram' : 'inline')!\n  );\n\n  const canLoad = useIsIntersecting(ref, observeIntersection);\n  const canPlay = useIsIntersecting(ref, observeIntersectionForPlaying);\n  const mediaHashEffect = `sticker${sticker.id}?size=f`;\n  const effectBlobUrl = useMedia(\n    mediaHashEffect,\n    !canLoad || !hasEffect || !withEffect,\n    ApiMediaFormat.BlobUrl,\n  );\n  const [isPlayingEffect, startPlayingEffect, stopPlayingEffect] = useFlag();\n\n  const handleEffectEnded = useLastCallback(() => {\n    stopPlayingEffect();\n    onStopEffect?.();\n  });\n\n  useEffect(() => {\n    if (hasEffect && withEffect && canPlay && shouldPlayEffect) {\n      startPlayingEffect();\n    }\n  }, [hasEffect, canPlay, shouldPlayEffect, startPlayingEffect, withEffect]);\n\n  const shouldRenderEffect = hasEffect && withEffect && effectBlobUrl && isPlayingEffect;\n  useOverlayPosition({\n    anchorRef: ref,\n    overlayRef: effectRef,\n    isMirrored,\n    isDisabled: !shouldRenderEffect,\n  });\n\n  const openModal = useLastCallback(() => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (hasEffect) {\n      if (isPlayingEffect || !withEffect) {\n        showNotification({\n          message: lang('PremiumStickerTooltip'),\n          action: {\n            action: 'openStickerSet',\n            payload: {\n              stickerSetInfo: sticker.stickerSetInfo,\n            },\n          },\n          actionText: lang('ViewAction'),\n        });\n        return;\n      } else if (withEffect) {\n        startPlayingEffect();\n        return;\n      }\n    }\n    openModal();\n  });\n\n  const isMemojiSticker = 'isMissing' in stickerSetInfo;\n  const { width, height } = getStickerDimensions(sticker, isMobile);\n  const className = buildClassName(\n    'media-inner',\n    styles.root,\n    isMemojiSticker && styles.inactive,\n    hasEffect && isMirrored && styles.mirrored,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      style={`width: ${width}px; height: ${height}px;`}\n      onClick={!isMemojiSticker ? handleClick : undefined}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        fullMediaHash={mediaHash}\n        fullMediaClassName=\"full-media\"\n        size={width}\n        shouldLoop={shouldLoop}\n        noLoad={!canLoad}\n        noPlay={!canPlay}\n        withSharedAnimation\n      />\n      {shouldRenderEffect && (\n        <Portal>\n          <AnimatedSticker\n            ref={effectRef}\n            key={mediaHashEffect}\n            className={buildClassName(styles.effect, isMirrored && styles.mirrored)}\n            tgsUrl={effectBlobUrl}\n            size={width * EFFECT_SIZE_MULTIPLIER}\n            play\n            isLowPriority\n            noLoop\n            onEnded={handleEffectEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nexport default Sticker;\n","import React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiTypeStory,\n} from '../../../api/types';\n\nimport { selectPeerStory } from '../../../global/selectors';\n\nimport BaseStory from './BaseStory';\n\ninterface OwnProps {\n  message: ApiMessage;\n  isProtected?: boolean;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  isConnected?: boolean;\n}\n\nfunction Story({\n  message, story, isProtected, isConnected,\n}: OwnProps & StateProps) {\n  const { storyData } = message.content;\n\n  return (\n    <BaseStory\n      story={story || storyData}\n      isProtected={isProtected}\n      isConnected={isConnected}\n    />\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    isConnected: global.connectionState === 'connectionStateReady',\n  };\n})(Story));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiTypeStory, ApiUser,\n} from '../../../api/types';\n\nimport { getStoryMediaHash, getUserFirstOrLastName } from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectPeer,\n  selectPeerStories,\n  selectPeerStory,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\ninterface OwnProps {\n  message: ApiMessage;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  peer?: ApiPeer;\n  targetUser?: ApiUser;\n  isUnread?: boolean;\n}\n\nfunction StoryMention({\n  message, story, peer, isUnread, targetUser,\n}: OwnProps & StateProps) {\n  const { openStoryViewer } = getActions();\n\n  const lang = useOldLang();\n\n  const { storyData } = message.content;\n\n  const handleClick = useLastCallback(() => {\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  const isDeleted = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded\n    ? getStoryMediaHash(story, 'pictogram')\n    : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  useEnsureStory(storyData!.peerId, storyData!.id, story);\n\n  function getTitle() {\n    if (peer && 'isSelf' in peer && peer.isSelf) {\n      return isDeleted\n        ? lang('ExpiredStoryMentioned', getUserFirstOrLastName(targetUser))\n        : lang('StoryYouMentionedTitle', getUserFirstOrLastName(targetUser));\n    }\n\n    return isDeleted\n      ? lang('ExpiredStoryMention')\n      : lang('StoryMentionedTitle', getPeerTitle(lang, peer!));\n  }\n\n  return (\n    <div\n      className={buildClassName('action-message-story-mention', isUnread && 'is-unread', isLoaded && 'with-preview')}\n      tabIndex={0}\n      role=\"button\"\n      onClick={isLoaded ? handleClick : undefined}\n    >\n      {isLoaded && (\n        <span className=\"story-media-wrapper\">\n          {thumbUrl && (\n            <img src={thumbUrl} alt=\"\" className=\"story-media\" />\n          )}\n        </span>\n      )}\n\n      <span className=\"story-title\">{renderText(getTitle(), ['emoji', 'simple_markdown'])}</span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n  const lastReadId = selectPeerStories(global, peerId)?.lastReadId;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    peer: selectPeer(global, peerId),\n    targetUser: selectUser(global, message.chatId),\n    isUnread: Boolean(lastReadId && lastReadId < id),\n  };\n})(StoryMention));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatMember,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n  ApiThreadInfo,\n  ApiTopic,\n  ApiTypeStory,\n  ApiUser,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ActiveEmojiInteraction,\n  ChatTranslatedMessages,\n  FocusDirection,\n  IAlbum,\n  ISettings,\n  MessageListType,\n  ScrollTargetPosition,\n  ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport type { OnIntersectPinnedMessage } from '../hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { EMOJI_STATUS_LOOP_LIMIT, MESSAGE_APPEARANCE_DELAY } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getIsDownloading,\n  getMessageContent,\n  getMessageCustomShape,\n  getMessageDownloadableMedia,\n  getMessageHtmlId,\n  getMessageSingleCustomEmoji,\n  getMessageSingleRegularEmoji,\n  hasMessageText,\n  hasMessageTtl,\n  isAnonymousForwardsChat,\n  isAnonymousOwnMessage,\n  isChatChannel,\n  isChatGroup,\n  isChatPublic,\n  isGeoLiveExpired,\n  isMessageLocal,\n  isMessageTranslatable,\n  isOwnMessage,\n  isReplyToMessage,\n  isSystemBot,\n  isUserId,\n} from '../../../global/helpers';\nimport { getPeerFullTitle } from '../../../global/helpers/peers';\nimport { getMessageReplyInfo, getStoryReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectActiveDownloads,\n  selectAnimatedEmoji,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectCanReplyToMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatTranslations,\n  selectCurrentMiddleSearch,\n  selectDefaultReaction,\n  selectForwardedSender,\n  selectIsChatProtected,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsDocumentGroupSelected,\n  selectIsInSelectMode,\n  selectIsMessageFocused,\n  selectIsMessageProtected,\n  selectIsMessageSelected,\n  selectMessageIdsByGroupId,\n  selectMessageLastPlaybackTimestamp,\n  selectMessageTimestampableDuration,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectPollFromMessage,\n  selectReplyMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSender,\n  selectSenderFromHeader,\n  selectShouldDetectChatLanguage,\n  selectShouldLoopStickers,\n  selectTabState,\n  selectTheme,\n  selectThreadInfo,\n  selectTopicFromMessage,\n  selectUploadProgress,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport stopEvent from '../../../util/stopEvent';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport { IS_ANDROID, IS_ELECTRON, IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\nimport { calculateDimensionsForMessageMedia, getStickerDimensions, REM } from '../../common/helpers/mediaDimensions';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\nimport renderText from '../../common/helpers/renderText';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\nimport { buildContentClassName } from './helpers/buildContentClassName';\nimport { calculateAlbumLayout } from './helpers/calculateAlbumLayout';\nimport getSingularPaidMedia from './helpers/getSingularPaidMedia';\nimport { calculateMediaDimensions, getMinMediaWidth, MIN_MEDIA_WIDTH_WITH_TEXT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useFlag from '../../../hooks/useFlag';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useMessageResizeObserver from '../../../hooks/useResizeMessageObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useTextLanguage from '../../../hooks/useTextLanguage';\nimport useDetectChatLanguage from './hooks/useDetectChatLanguage';\nimport useFocusMessage from './hooks/useFocusMessage';\nimport useInnerHandlers from './hooks/useInnerHandlers';\nimport useMessageTranslation from './hooks/useMessageTranslation';\nimport useOuterHandlers from './hooks/useOuterHandlers';\n\nimport Audio from '../../common/Audio';\nimport Avatar from '../../common/Avatar';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Document from '../../common/Document';\nimport DotAnimation from '../../common/DotAnimation';\nimport EmbeddedMessage from '../../common/embedded/EmbeddedMessage';\nimport EmbeddedStory from '../../common/embedded/EmbeddedStory';\nimport FakeIcon from '../../common/FakeIcon';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport MessageText from '../../common/MessageText';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport TopicChip from '../../common/TopicChip';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Button from '../../ui/Button';\nimport Album from './Album';\nimport AnimatedCustomEmoji from './AnimatedCustomEmoji';\nimport AnimatedEmoji from './AnimatedEmoji';\nimport CommentButton from './CommentButton';\nimport Contact from './Contact';\nimport ContextMenuContainer from './ContextMenuContainer.async';\nimport FactCheck from './FactCheck';\nimport Game from './Game';\nimport Giveaway from './Giveaway';\nimport InlineButtons from './InlineButtons';\nimport Invoice from './Invoice';\nimport InvoiceMediaPreview from './InvoiceMediaPreview';\nimport Location from './Location';\nimport MessageAppendix from './MessageAppendix';\nimport MessageEffect from './MessageEffect';\nimport MessageMeta from './MessageMeta';\nimport MessagePhoneCall from './MessagePhoneCall';\nimport PaidMediaOverlay from './PaidMediaOverlay';\nimport Photo from './Photo';\nimport Poll from './Poll';\nimport Reactions from './reactions/Reactions';\nimport RoundVideo from './RoundVideo';\nimport Sticker from './Sticker';\nimport Story from './Story';\nimport StoryMention from './StoryMention';\nimport Video from './Video';\nimport WebPage from './WebPage';\n\nimport './Message.scss';\n\ntype MessagePositionProperties = {\n  isFirstInGroup: boolean;\n  isLastInGroup: boolean;\n  isFirstInDocumentGroup: boolean;\n  isLastInDocumentGroup: boolean;\n  isLastInList: boolean;\n};\n\ntype OwnProps =\n  {\n    message: ApiMessage;\n    observeIntersectionForBottom?: ObserveFn;\n    observeIntersectionForLoading?: ObserveFn;\n    observeIntersectionForPlaying?: ObserveFn;\n    album?: IAlbum;\n    noAvatars?: boolean;\n    withAvatar?: boolean;\n    withSenderName?: boolean;\n    threadId: ThreadId;\n    messageListType: MessageListType;\n    noComments: boolean;\n    noReplies: boolean;\n    appearanceOrder: number;\n    isJustAdded: boolean;\n    memoFirstUnreadIdRef?: { current: number | undefined };\n    getIsMessageListReady?: Signal<boolean>;\n    onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n  }\n  & MessagePositionProperties;\n\ntype StateProps = {\n  theme: ISettings['theme'];\n  forceSenderName?: boolean;\n  sender?: ApiPeer;\n  canShowSender: boolean;\n  originSender?: ApiPeer;\n  botSender?: ApiUser;\n  isThreadTop?: boolean;\n  shouldHideReply?: boolean;\n  replyMessage?: ApiMessage;\n  replyMessageSender?: ApiPeer;\n  replyMessageForwardSender?: ApiPeer;\n  replyMessageChat?: ApiChat;\n  isReplyPrivate?: boolean;\n  replyStory?: ApiTypeStory;\n  storySender?: ApiPeer;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  uploadProgress?: number;\n  isInDocumentGroup: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  focusedQuote?: string;\n  noFocusHighlight?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n  isResizingContainer?: boolean;\n  isForwarding?: boolean;\n  isChatWithSelf?: boolean;\n  isRepliesChat?: boolean;\n  isAnonymousForwards?: boolean;\n  isChannel?: boolean;\n  isGroup?: boolean;\n  canReply?: boolean;\n  highlight?: string;\n  animatedEmoji?: string;\n  animatedCustomEmoji?: string;\n  hasActiveReactions?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  isGroupSelected?: boolean;\n  isDownloading?: boolean;\n  threadId?: ThreadId;\n  isPinnedList?: boolean;\n  isPinned?: boolean;\n  canAutoLoadMedia?: boolean;\n  canAutoPlayMedia?: boolean;\n  hasLinkedChat?: boolean;\n  shouldLoopStickers?: boolean;\n  autoLoadFileMaxSizeMb: number;\n  repliesThreadInfo?: ApiThreadInfo;\n  reactionMessage?: ApiMessage;\n  availableReactions?: ApiAvailableReaction[];\n  defaultReaction?: ApiReaction;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  hasUnreadReaction?: boolean;\n  isTranscribing?: boolean;\n  transcribedText?: string;\n  isTranscriptionError?: boolean;\n  isPremium: boolean;\n  senderAdminMember?: ApiChatMember;\n  messageTopic?: ApiTopic;\n  hasTopicChip?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  areTranslationsEnabled?: boolean;\n  shouldDetectChatLanguage?: boolean;\n  requestedTranslationLanguage?: string;\n  requestedChatTranslationLanguage?: string;\n  withAnimatedEffects?: boolean;\n  webPageStory?: ApiTypeStory;\n  isConnected: boolean;\n  isLoadingComments?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  senderBoosts?: number;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  canTranscribeVoice?: boolean;\n  viaBusinessBot?: ApiUser;\n  effect?: ApiAvailableEffect;\n  poll?: ApiPoll;\n  maxTimestamp?: number;\n  lastPlaybackTimestamp?: number;\n  paidMessageStars?: number;\n  isChatWithUser?: boolean;\n};\n\ntype MetaPosition =\n  'in-text'\n  | 'standalone'\n  | 'none';\ntype ReactionsPosition =\n  'inside'\n  | 'outside'\n  | 'none';\ntype QuickReactionPosition =\n  'in-content'\n  | 'in-meta';\n\nconst NBSP = '\\u00A0';\nconst NO_MEDIA_CORNERS_THRESHOLD = 18;\nconst QUICK_REACTION_SIZE = 1.75 * REM;\nconst EXTRA_SPACE_FOR_REACTIONS = 2.25 * REM;\n\nconst Message: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForBottom,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  album,\n  noAvatars,\n  withAvatar,\n  withSenderName,\n  noComments,\n  noReplies,\n  appearanceOrder,\n  isJustAdded,\n  isFirstInGroup,\n  isPremium,\n  isLastInGroup,\n  isFirstInDocumentGroup,\n  isLastInDocumentGroup,\n  isTranscribing,\n  transcribedText,\n  isLastInList,\n  theme,\n  forceSenderName,\n  sender,\n  canShowSender,\n  originSender,\n  botSender,\n  isThreadTop,\n  shouldHideReply,\n  replyMessage,\n  replyMessageSender,\n  replyMessageForwardSender,\n  replyMessageChat,\n  replyStory,\n  isReplyPrivate,\n  storySender,\n  outgoingStatus,\n  uploadProgress,\n  isInDocumentGroup,\n  isLoadingComments,\n  isProtected,\n  isChatProtected,\n  isFocused,\n  focusDirection,\n  focusedQuote,\n  noFocusHighlight,\n  scrollTargetPosition,\n  isResizingContainer,\n  isForwarding,\n  isChatWithSelf,\n  isRepliesChat,\n  isAnonymousForwards,\n  isChannel,\n  isGroup,\n  canReply,\n  highlight,\n  animatedEmoji,\n  animatedCustomEmoji,\n  hasActiveReactions,\n  hasLinkedChat,\n  isInSelectMode,\n  isSelected,\n  isGroupSelected,\n  threadId,\n  reactionMessage,\n  availableReactions,\n  defaultReaction,\n  activeEmojiInteractions,\n  messageListType,\n  isPinnedList,\n  isPinned,\n  isDownloading,\n  canAutoLoadMedia,\n  canAutoPlayMedia,\n  shouldLoopStickers,\n  autoLoadFileMaxSizeMb,\n  repliesThreadInfo,\n  hasUnreadReaction,\n  memoFirstUnreadIdRef,\n  senderAdminMember,\n  messageTopic,\n  hasTopicChip,\n  chatTranslations,\n  areTranslationsEnabled,\n  shouldDetectChatLanguage,\n  requestedTranslationLanguage,\n  requestedChatTranslationLanguage,\n  withAnimatedEffects,\n  webPageStory,\n  isConnected,\n  getIsMessageListReady,\n  shouldWarnAboutSvg,\n  senderBoosts,\n  tags,\n  canTranscribeVoice,\n  viaBusinessBot,\n  effect,\n  poll,\n  maxTimestamp,\n  lastPlaybackTimestamp,\n  onIntersectPinnedMessage,\n  paidMessageStars,\n  isChatWithUser,\n}) => {\n  const {\n    toggleMessageSelection,\n    clickBotInlineButton,\n    disableContextMenuHint,\n    animateUnreadReaction,\n    focusLastMessage,\n    markMentionsRead,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const bottomMarkerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const quickReactionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [isTranscriptionHidden, setTranscriptionHidden] = useState(false);\n  const [isPlayingSnapAnimation, setIsPlayingSnapAnimation] = useState(false);\n  const [isPlayingDeleteAnimation, setIsPlayingDeleteAnimation] = useState(false);\n  const [shouldPlayEffect, requestEffect, hideEffect] = useFlag();\n  const { isMobile, isTouchScreen } = useAppLayout();\n\n  useOnIntersect(bottomMarkerRef, observeIntersectionForBottom);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    contextMenuTarget,\n    handleBeforeContextMenu,\n    handleContextMenu: onContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(\n    ref,\n    isTouchScreen && isInSelectMode,\n    !IS_ELECTRON,\n    IS_ANDROID,\n    getIsMessageListReady,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      disableContextMenuHint();\n    }\n  }, [isContextMenuOpen, disableContextMenuHint]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * MESSAGE_APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  useShowTransition({\n    ref,\n    isOpen: isShown || isJustAdded,\n    noMountTransition: noAppearanceAnimation && !isJustAdded,\n    className: false,\n  });\n\n  const {\n    id: messageId, chatId, forwardInfo, viaBotId, isTranscriptionError, factCheck,\n  } = message;\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      const id = album ? album.mainMessage.id : messageId;\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [id] });\n    }\n  });\n\n  const isLocal = isMessageLocal(message);\n  const isOwn = isOwnMessage(message);\n  const isScheduled = messageListType === 'scheduled' || message.isScheduled;\n  const hasMessageReply = isReplyToMessage(message) && !shouldHideReply;\n\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo, audio,\n    voice, document, sticker, contact,\n    webPage, invoice, location,\n    action, game, storyData, giveaway,\n    giveawayResults,\n  } = getMessageContent(message);\n\n  const messageReplyInfo = getMessageReplyInfo(message);\n  const storyReplyInfo = getStoryReplyInfo(message);\n\n  const withVoiceTranscription = Boolean(!isTranscriptionHidden && (isTranscriptionError || transcribedText));\n\n  const hasStoryReply = Boolean(storyReplyInfo);\n  const hasThread = Boolean(repliesThreadInfo) && messageListType === 'thread';\n  const isCustomShape = !withVoiceTranscription && getMessageCustomShape(message);\n  const hasAnimatedEmoji = isCustomShape && (animatedEmoji || animatedCustomEmoji);\n  const hasReactions = reactionMessage?.reactions && !areReactionsEmpty(reactionMessage.reactions);\n  const asForwarded = (\n    forwardInfo\n    && (!isChatWithSelf || isScheduled)\n    && !isRepliesChat\n    && !forwardInfo.isLinkedChannelPost\n    && !isAnonymousForwards\n    && !botSender\n  ) || Boolean(storyData && !storyData.isMention);\n  const canShowSenderBoosts = Boolean(senderBoosts) && !asForwarded && isFirstInGroup;\n  const isStoryMention = storyData?.isMention;\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isAlbum = Boolean(album)\n    && (\n      (album.isPaidMedia && paidMedia!.extendedMedia.length > 1)\n      || album.messages.length > 1\n    ) && !album.messages.some((msg) => Object.keys(msg.content).length === 0);\n  const isInDocumentGroupNotFirst = isInDocumentGroup && !isFirstInDocumentGroup;\n  const isInDocumentGroupNotLast = isInDocumentGroup && !isLastInDocumentGroup;\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n  const canShowActionButton = (\n    !(isContextMenuShown || isInSelectMode || isForwarding)\n    && !isInDocumentGroupNotLast\n    && !isStoryMention\n    && !((sticker || hasAnimatedEmoji) && asForwarded)\n  );\n  const canForward = isChannel && !isScheduled && message.isForwardingAllowed\n  && !isChatProtected;\n  const canFocus = Boolean(isPinnedList\n    || (forwardInfo\n      && (forwardInfo.isChannelPost || isChatWithSelf || isRepliesChat || isAnonymousForwards)\n      && forwardInfo.fromMessageId\n    ));\n\n  const hasFactCheck = Boolean(factCheck?.text);\n\n  const hasForwardedCustomShape = asForwarded && isCustomShape;\n  const hasSubheader = hasTopicChip || hasMessageReply || hasStoryReply || hasForwardedCustomShape;\n\n  const selectMessage = useLastCallback((e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => {\n    toggleMessageSelection({\n      messageId,\n      groupedId,\n      ...(e?.shiftKey && { withShift: true }),\n      ...(isAlbum && { childMessageIds: album!.messages.map(({ id }) => id) }),\n    });\n  });\n\n  const messageSender = canShowSender ? sender : undefined;\n\n  const shouldPreferOriginSender = forwardInfo\n    && (isChatWithSelf || isRepliesChat || isAnonymousForwards || !messageSender);\n  const avatarPeer = shouldPreferOriginSender ? originSender : messageSender;\n\n  const messageColorPeer = asForwarded ? originSender : sender;\n  const noUserColors = isOwn && !isCustomShape;\n\n  const senderPeer = (forwardInfo || storyData) ? originSender : messageSender;\n  const hasTtl = hasMessageTtl(message);\n\n  const {\n    handleMouseDown,\n    handleClick,\n    handleContextMenu,\n    handleDoubleClick,\n    handleContentDoubleClick,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  } = useOuterHandlers(\n    selectMessage,\n    ref,\n    messageId,\n    Boolean(isInSelectMode),\n    Boolean(canReply),\n    Boolean(isProtected),\n    onContextMenu,\n    handleBeforeContextMenu,\n    chatId,\n    isContextMenuShown,\n    quickReactionRef,\n    isInDocumentGroupNotLast,\n    getIsMessageListReady,\n  );\n\n  const {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleMediaClick,\n    handleDocumentClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll,\n    handleTopicChipClick,\n    handleStoryClick,\n  } = useInnerHandlers({\n    lang,\n    selectMessage,\n    message,\n    chatId,\n    threadId,\n    isInDocumentGroup,\n    asForwarded,\n    isScheduled,\n    album,\n    avatarPeer,\n    senderPeer,\n    botSender,\n    messageTopic,\n    isTranslatingChat: Boolean(requestedChatTranslationLanguage),\n    story: replyStory && 'content' in replyStory ? replyStory : undefined,\n    isReplyPrivate,\n    isRepliesChat,\n    isSavedMessages: isChatWithSelf,\n    lastPlaybackTimestamp,\n  });\n\n  const handleEffectClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    requestEffect();\n  });\n\n  useEffect(() => {\n    if (!isLastInList) {\n      return;\n    }\n\n    if (withVoiceTranscription && transcribedText) {\n      focusLastMessage();\n    }\n  }, [focusLastMessage, isLastInList, transcribedText, withVoiceTranscription]);\n\n  useEffect(() => {\n    const element = ref.current;\n    const isPartialAlbumDelete = message.isInAlbum && album?.messages.some((msg) => !msg.isDeleting);\n    if (message.isDeleting && element && !isPartialAlbumDelete) {\n      if (animateSnap(element)) {\n        setIsPlayingSnapAnimation(true);\n      } else {\n        setIsPlayingDeleteAnimation(true);\n      }\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- Only start animation on `isDeleting` change\n  }, [message.isDeleting]);\n\n  const textMessage = album?.hasMultipleCaptions ? undefined : (album?.captionMessage || message);\n  const hasTextContent = textMessage && hasMessageText(textMessage);\n  const hasText = hasTextContent || hasFactCheck;\n\n  const containerClassName = buildClassName(\n    'Message message-list-item',\n    isFirstInGroup && 'first-in-group',\n    isProtected && 'hide-on-print',\n    isProtected && !hasTextContent ? 'is-protected' : 'allow-selection',\n    isLastInGroup && 'last-in-group',\n    isFirstInDocumentGroup && 'first-in-document-group',\n    isLastInDocumentGroup && 'last-in-document-group',\n    isLastInList && 'last-in-list',\n    isOwn && 'own',\n    Boolean(message.viewsCount) && 'has-views',\n    message.isEdited && 'was-edited',\n    hasMessageReply && 'has-reply',\n    isContextMenuOpen && 'has-menu-open',\n    isFocused && !noFocusHighlight && 'focused',\n    isForwarding && 'is-forwarding',\n    isPlayingDeleteAnimation && 'is-deleting',\n    isPlayingSnapAnimation && 'is-dissolving',\n    isInDocumentGroup && 'is-in-document-group',\n    isAlbum && 'is-album',\n    message.hasUnreadMention && 'has-unread-mention',\n    isSelected && 'is-selected',\n    isInSelectMode && 'is-in-selection-mode',\n    isThreadTop && !withAvatar && 'is-thread-top',\n    Boolean(message.inlineButtons) && 'has-inline-buttons',\n    isSwiped && 'is-swiped',\n    isJustAdded && 'is-just-added',\n    (hasActiveReactions || shouldPlayEffect) && 'has-active-effect',\n    isStoryMention && 'is-story-mention',\n    !canShowActionButton && 'no-action-button',\n  );\n\n  const text = textMessage && getMessageContent(textMessage).text;\n  const isInvertedMedia = Boolean(message.isInvertedMedia);\n\n  const { replyToMsgId, replyToPeerId, isQuote } = messageReplyInfo || {};\n  const { peerId: storyReplyPeerId, storyId: storyReplyId } = storyReplyInfo || {};\n\n  useEffect(() => {\n    if ((sticker?.hasEffect || effect) && ((\n      memoFirstUnreadIdRef?.current && messageId >= memoFirstUnreadIdRef.current\n    ) || isLocal)) {\n      requestEffect();\n    }\n  }, [effect, isLocal, memoFirstUnreadIdRef, messageId, sticker?.hasEffect]);\n\n  const detectedLanguage = useTextLanguage(\n    text?.text,\n    !(areTranslationsEnabled || shouldDetectChatLanguage),\n    getIsMessageListReady,\n  );\n  useDetectChatLanguage(message, detectedLanguage, !shouldDetectChatLanguage, getIsMessageListReady);\n\n  const shouldTranslate = isMessageTranslatable(message, !requestedChatTranslationLanguage);\n  const { isPending: isTranslationPending, translatedText } = useMessageTranslation(\n    chatTranslations, chatId, shouldTranslate ? messageId : undefined, requestedTranslationLanguage,\n  );\n  // Used to display previous result while new one is loading\n  const previousTranslatedText = usePreviousDeprecated(translatedText, Boolean(shouldTranslate));\n\n  const currentTranslatedText = translatedText || previousTranslatedText;\n\n  const phoneCall = action?.type === 'phoneCall' ? action : undefined;\n\n  const isMediaWithCommentButton = (repliesThreadInfo || (hasLinkedChat && isChannel && isLocal))\n    && !isInDocumentGroupNotLast\n    && messageListType === 'thread'\n    && !noComments;\n  const withCommentButton = repliesThreadInfo?.isCommentsInfo\n    && !isInDocumentGroupNotLast && messageListType === 'thread'\n    && !noComments;\n  const withQuickReactionButton = !isTouchScreen && !phoneCall && !isInSelectMode && defaultReaction\n    && !isInDocumentGroupNotLast && !isStoryMention && !hasTtl;\n\n  const hasOutsideReactions = !withVoiceTranscription && hasReactions\n    && (isCustomShape || ((photo || video || storyData || (location?.mediaType === 'geo')) && !hasText));\n\n  const contentClassName = buildContentClassName(message, album, {\n    poll,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread: hasThread && !noComments,\n    forceSenderName,\n    hasCommentCounter: hasThread && repliesThreadInfo.messagesCount > 0,\n    hasCommentButton: withCommentButton,\n    hasActionButton: canForward || canFocus,\n    hasReactions,\n    isGeoLiveActive: location?.mediaType === 'geoLive' && !isGeoLiveExpired(message),\n    withVoiceTranscription,\n    peerColorClass: getPeerColorClass(messageColorPeer, noUserColors, true),\n    hasOutsideReactions,\n  });\n\n  const withAppendix = contentClassName.includes('has-appendix');\n  const emojiSize = getCustomEmojiSize(message.emojiOnlyCount);\n\n  const paidMessageStarsInMeta = !isChatWithUser\n    ? (isAlbum && paidMessageStars ? album.messages.length * paidMessageStars : paidMessageStars)\n    : undefined;\n\n  let metaPosition!: MetaPosition;\n  if (phoneCall) {\n    metaPosition = 'none';\n  } else if (isInDocumentGroupNotLast) {\n    metaPosition = 'none';\n  } else if (hasText && !webPage && !emojiSize && !isInvertedMedia) {\n    metaPosition = 'in-text';\n  } else if (isInvertedMedia && !emojiSize && (hasFactCheck || webPage)) {\n    metaPosition = 'in-text';\n  } else {\n    metaPosition = 'standalone';\n  }\n\n  let reactionsPosition!: ReactionsPosition;\n  if (hasReactions) {\n    if (hasOutsideReactions) {\n      reactionsPosition = 'outside';\n    } else if (asForwarded) {\n      metaPosition = 'standalone';\n      reactionsPosition = 'inside';\n    } else {\n      reactionsPosition = 'inside';\n    }\n  } else {\n    reactionsPosition = 'none';\n  }\n\n  const quickReactionPosition: QuickReactionPosition = isCustomShape ? 'in-meta' : 'in-content';\n\n  useEnsureMessage(\n    replyToPeerId || chatId,\n    replyToMsgId,\n    replyMessage,\n    message.id,\n    shouldHideReply || isQuote || isReplyPrivate,\n  );\n\n  useEnsureStory(\n    storyReplyPeerId || chatId,\n    storyReplyId,\n    replyStory,\n  );\n\n  useFocusMessage({\n    elementRef: ref,\n    chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isResizingContainer,\n    isJustAdded,\n    isQuote: Boolean(focusedQuote),\n    scrollTargetPosition,\n  });\n\n  const viaBusinessBotTitle = viaBusinessBot ? getPeerFullTitle(lang, viaBusinessBot) : undefined;\n\n  const canShowPostAuthor = !message.senderId;\n  const signature = viaBusinessBotTitle || (canShowPostAuthor && message.postAuthorTitle)\n    || ((asForwarded || isChatWithSelf) && forwardInfo?.postAuthorTitle)\n    || undefined;\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    const bottomMarker = bottomMarkerRef.current;\n    if (!bottomMarker || !isElementInViewport(bottomMarker)) return;\n\n    if (hasUnreadReaction) {\n      animateUnreadReaction({ messageIds: [messageId] });\n    }\n\n    let unreadMentionIds: number[] = [];\n    if (message.hasUnreadMention) {\n      unreadMentionIds = [messageId];\n    }\n\n    if (album) {\n      unreadMentionIds = album.messages.filter((msg) => msg.hasUnreadMention).map((msg) => msg.id);\n    }\n\n    if (unreadMentionIds.length) {\n      markMentionsRead({ chatId, messageIds: unreadMentionIds });\n    }\n  }, [hasUnreadReaction, album, chatId, messageId, animateUnreadReaction, message.hasUnreadMention]);\n\n  const albumLayout = useMemo(() => {\n    return isAlbum\n      ? calculateAlbumLayout(isOwn, Boolean(noAvatars), album!, isMobile)\n      : undefined;\n  }, [isAlbum, isOwn, noAvatars, album, isMobile]);\n\n  const extraPadding = asForwarded && !isCustomShape ? 28 : 0;\n\n  const sizeCalculations = useMemo(() => {\n    let calculatedWidth;\n    let contentWidth: number | undefined;\n    let noMediaCorners = false;\n    let style = '';\n    let reactionsMaxWidth;\n\n    if (!isAlbum && (photo || video || invoice?.extendedMedia)) {\n      let width: number | undefined;\n      if (photo || video) {\n        const media = (photo || video);\n        if (media && !isRoundVideo) {\n          width = calculateMediaDimensions({\n            media,\n            isOwn,\n            asForwarded,\n            noAvatars,\n            isMobile,\n          }).width;\n        }\n      } else if (invoice?.extendedMedia && (\n        invoice.extendedMedia.width && invoice.extendedMedia.height\n      )) {\n        const { width: previewWidth, height: previewHeight } = invoice.extendedMedia;\n        width = calculateDimensionsForMessageMedia({\n          width: previewWidth,\n          height: previewHeight,\n          fromOwnMessage: isOwn,\n          asForwarded,\n          noAvatars,\n          isMobile,\n        }).width;\n      }\n\n      if (width) {\n        if (width < MIN_MEDIA_WIDTH_WITH_TEXT) {\n          contentWidth = width;\n        }\n        calculatedWidth = Math.max(getMinMediaWidth(text?.text, isMediaWithCommentButton), width);\n        if (!asForwarded && invoice?.extendedMedia && calculatedWidth - width > NO_MEDIA_CORNERS_THRESHOLD) {\n          noMediaCorners = true;\n        }\n      }\n    } else if (albumLayout) {\n      calculatedWidth = Math.max(\n        getMinMediaWidth(text?.text, isMediaWithCommentButton), albumLayout.containerStyle.width,\n      );\n      if (calculatedWidth - albumLayout.containerStyle.width > NO_MEDIA_CORNERS_THRESHOLD) {\n        noMediaCorners = true;\n      }\n    }\n\n    if (calculatedWidth) {\n      style = `width: ${calculatedWidth}px`;\n      reactionsMaxWidth = calculatedWidth + EXTRA_SPACE_FOR_REACTIONS;\n    } else if (sticker && !hasSubheader) {\n      const { width } = getStickerDimensions(sticker, isMobile);\n      style = `width: ${width + extraPadding}px`;\n      reactionsMaxWidth = width + EXTRA_SPACE_FOR_REACTIONS;\n    }\n\n    return {\n      contentWidth, noMediaCorners, style, reactionsMaxWidth,\n    };\n  }, [\n    albumLayout, asForwarded, extraPadding, hasSubheader, invoice?.extendedMedia, isAlbum, isMediaWithCommentButton,\n    isMobile, isOwn, noAvatars, photo, sticker, text?.text, video, isRoundVideo,\n  ]);\n\n  const {\n    contentWidth, noMediaCorners, style, reactionsMaxWidth,\n  } = sizeCalculations;\n\n  function renderMessageText(isForAnimation?: boolean) {\n    if (!textMessage) return undefined;\n    return (\n      <MessageText\n        messageOrStory={textMessage}\n        translatedText={requestedTranslationLanguage ? currentTranslatedText : undefined}\n        isForAnimation={isForAnimation}\n        focusedQuote={focusedQuote}\n        emojiSize={emojiSize}\n        highlight={highlight}\n        isProtected={isProtected}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        withTranslucentThumbs={isCustomShape}\n        isInSelectMode={isInSelectMode}\n        canBeEmpty={hasFactCheck}\n        maxTimestamp={maxTimestamp}\n        threadId={threadId}\n      />\n    );\n  }\n\n  const renderQuickReactionButton = useCallback(() => {\n    if (!defaultReaction) return undefined;\n\n    return (\n      <div\n        className={buildClassName('quick-reaction', isQuickReactionVisible && !hasActiveReactions && 'visible')}\n        onClick={handleSendQuickReaction}\n        ref={quickReactionRef}\n      >\n        <ReactionStaticEmoji\n          reaction={defaultReaction}\n          size={QUICK_REACTION_SIZE}\n          availableReactions={availableReactions}\n          observeIntersection={observeIntersectionForPlaying}\n        />\n      </div>\n    );\n  }, [\n    hasActiveReactions, availableReactions, defaultReaction, handleSendQuickReaction, isQuickReactionVisible,\n    observeIntersectionForPlaying,\n  ]);\n\n  function renderReactionsAndMeta() {\n    const meta = (\n      <MessageMeta\n        message={message}\n        isPinned={isPinned}\n        withFullDate={isChatWithSelf && !isOwn}\n        noReplies={noReplies}\n        repliesThreadInfo={repliesThreadInfo}\n        outgoingStatus={outgoingStatus}\n        signature={signature}\n        withReactionOffset={reactionsPosition === 'inside'}\n        renderQuickReactionButton={\n          withQuickReactionButton && quickReactionPosition === 'in-meta' ? renderQuickReactionButton : undefined\n        }\n        availableReactions={availableReactions}\n        isTranslated={Boolean(requestedTranslationLanguage ? currentTranslatedText : undefined)}\n        effectEmoji={effect?.emoticon}\n        onClick={handleMetaClick}\n        onEffectClick={handleEffectClick}\n        onTranslationClick={handleTranslationClick}\n        onOpenThread={handleOpenThread}\n        paidMessageStars={paidMessageStarsInMeta}\n      />\n    );\n\n    if (reactionsPosition !== 'inside') {\n      return meta;\n    }\n\n    return (\n      <Reactions\n        message={reactionMessage!}\n        threadId={threadId}\n        metaChildren={meta}\n        observeIntersection={observeIntersectionForPlaying}\n        noRecentReactors={isChannel}\n        tags={tags}\n        isCurrentUserPremium={isPremium}\n      />\n    );\n  }\n\n  function renderContent() {\n    const className = buildClassName(\n      'content-inner',\n      asForwarded && 'forwarded-message',\n      hasForwardedCustomShape && 'forwarded-custom-shape',\n      hasSubheader && 'with-subheader',\n      noMediaCorners && 'no-media-corners',\n    );\n    const hasCustomAppendix = isLastInGroup\n      && (!hasText || (isInvertedMedia && !hasFactCheck && !hasReactions)) && !withCommentButton;\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n    const shouldReadMedia = !hasTtl || !isOwn || isChatWithSelf;\n\n    return (\n      <div className={className} onDoubleClick={handleContentDoubleClick} dir=\"auto\">\n        {!asForwarded && shouldRenderSenderName() && renderSenderName()}\n        {hasSubheader && (\n          <div className=\"message-subheader\">\n            {hasTopicChip && (\n              <TopicChip\n                topic={messageTopic}\n                onClick={handleTopicChipClick}\n                className=\"message-topic\"\n              />\n            )}\n            {hasForwardedCustomShape && (\n              <div className=\"forward-custom-shape-subheader\">\n                <div className=\"message-title\">\n                  {renderForwardTitle()}\n                </div>\n                {renderSenderName(true, true)}\n              </div>\n            )}\n            {hasMessageReply && (\n              <EmbeddedMessage\n                message={replyMessage}\n                replyInfo={messageReplyInfo}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                sender={replyMessageSender}\n                senderChat={replyMessageChat}\n                forwardSender={replyMessageForwardSender}\n                chatTranslations={chatTranslations}\n                requestedChatTranslationLanguage={requestedChatTranslationLanguage}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                observeIntersectionForPlaying={observeIntersectionForPlaying}\n                onClick={handleReplyClick}\n              />\n            )}\n            {hasStoryReply && (\n              <EmbeddedStory\n                story={replyStory}\n                sender={storySender}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                onClick={handleStoryClick}\n              />\n            )}\n          </div>\n        )}\n        {sticker && observeIntersectionForLoading && observeIntersectionForPlaying && (\n          <Sticker\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            shouldLoop={shouldLoopStickers}\n            shouldPlayEffect={shouldPlayEffect}\n            withEffect={withAnimatedEffects}\n            onStopEffect={hideEffect}\n          />\n        )}\n        {hasAnimatedEmoji && animatedCustomEmoji && (\n          <AnimatedCustomEmoji\n            customEmojiId={animatedCustomEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {hasAnimatedEmoji && animatedEmoji && (\n          <AnimatedEmoji\n            emoji={animatedEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {withAnimatedEffects && effect && !isLocal && (\n          <MessageEffect\n            shouldPlay={shouldPlayEffect}\n            messageId={message.id}\n            isMirrored={!message.isOutgoing}\n            effect={effect}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onStop={hideEffect}\n          />\n        )}\n        {phoneCall && (\n          <MessagePhoneCall\n            message={message}\n            phoneCall={phoneCall}\n            chatId={chatId}\n          />\n        )}\n        {!isAlbum && isRoundVideo && !withVoiceTranscription && (\n          <RoundVideo\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            isDownloading={isDownloading}\n            onReadMedia={shouldReadMedia ? handleReadMedia : undefined}\n            onHideTranscription={setTranscriptionHidden}\n            isTranscriptionError={isTranscriptionError}\n            isTranscribed={Boolean(transcribedText)}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribing={isTranscribing}\n          />\n        )}\n        {(audio || voice || withVoiceTranscription) && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            noAvatars={noAvatars}\n            onPlay={handleAudioPlay}\n            onReadMedia={voice && shouldReadMedia ? handleReadMedia : undefined}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            isTranscribing={isTranscribing}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribed={Boolean(transcribedText)}\n            isTranscriptionError={isTranscriptionError}\n            canDownload={!isProtected}\n            onHideTranscription={setTranscriptionHidden}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            onMediaClick={handleDocumentClick}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {storyData && !isStoryMention && (\n          <Story\n            message={message}\n            isProtected={isProtected}\n          />\n        )}\n        {isStoryMention && <StoryMention message={message} />}\n        {contact && (\n          <Contact contact={contact} noUserColors={isOwn} />\n        )}\n        {poll && (\n          <Poll message={message} poll={poll} onSendVote={handleVoteSend} />\n        )}\n        {(giveaway || giveawayResults) && (\n          <Giveaway message={message} />\n        )}\n        {game && (\n          <Game\n            message={message}\n            canAutoLoadMedia={canAutoLoadMedia}\n          />\n        )}\n        {invoice?.extendedMedia && (\n          <InvoiceMediaPreview\n            message={message}\n            isConnected={isConnected}\n          />\n        )}\n\n        {withVoiceTranscription && (\n          <p\n            className={buildClassName(\n              'transcription',\n              !isTranscriptionHidden && isTranscriptionError && 'transcription-error',\n            )}\n            dir=\"auto\"\n          >\n            {(isTranscriptionError ? lang('NoWordsRecognized') : (\n              isTranscribing && transcribedText ? <DotAnimation content={transcribedText} /> : transcribedText\n            ))}\n          </p>\n        )}\n\n        {isInvertedMedia && renderInvertedMediaContent(hasCustomAppendix)}\n\n        {!isInvertedMedia && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {hasText && !hasAnimatedEmoji && (\n              <div className={textContentClass} dir=\"auto\">\n                {renderMessageText()}\n                {isTranslationPending && (\n                  <div className=\"translation-animation\">\n                    <div className=\"text-loading\">\n                      {renderMessageText(true)}\n                    </div>\n                  </div>\n                )}\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {metaPosition === 'in-text' && renderReactionsAndMeta()}\n              </div>\n            )}\n            {renderWebPage()}\n          </>\n        )}\n\n        {invoice && !invoice.extendedMedia && (\n          <Invoice\n            message={message}\n            shouldAffectAppendix={hasCustomAppendix && !hasReactions}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            forcedWidth={contentWidth}\n          />\n        )}\n        {location && (\n          <Location\n            message={message}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            peer={sender}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderInvertedMediaContent(hasCustomAppendix: boolean) {\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n    );\n    const footerClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n\n    const hasMediaAfterText = isAlbum || (!isAlbum && photo) || (!isAlbum && video && !isRoundVideo);\n    const hasContentAfterText = hasMediaAfterText || (!hasAnimatedEmoji && hasFactCheck);\n    const isMetaInText = metaPosition === 'in-text';\n\n    return (\n      <>\n        {renderWebPage()}\n        {hasText && !hasAnimatedEmoji && (\n          <div className={textContentClass} dir=\"auto\">\n            {renderMessageText()}\n            {isTranslationPending && (\n              <div className=\"translation-animation\">\n                <div className=\"text-loading\">\n                  {renderMessageText(true)}\n                </div>\n              </div>\n            )}\n            {!hasContentAfterText && isMetaInText && renderReactionsAndMeta()}\n          </div>\n        )}\n\n        {hasContentAfterText && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {!hasAnimatedEmoji && (\n              <div className={footerClass} dir=\"auto\">\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {isMetaInText && renderReactionsAndMeta()}\n              </div>\n            )}\n          </>\n        )}\n\n      </>\n    );\n  }\n\n  function renderWebPage() {\n    return webPage && (\n      <WebPage\n        message={message}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        noAvatars={noAvatars}\n        canAutoLoad={canAutoLoadMedia}\n        canAutoPlay={canAutoPlayMedia}\n        asForwarded={asForwarded}\n        isDownloading={isDownloading}\n        isProtected={isProtected}\n        theme={theme}\n        story={webPageStory}\n        isConnected={isConnected}\n        lastPlaybackTimestamp={lastPlaybackTimestamp}\n        backgroundEmojiId={messageColorPeer?.color?.backgroundEmojiId}\n        shouldWarnAboutSvg={shouldWarnAboutSvg}\n        autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n        onAudioPlay={handleAudioPlay}\n        onMediaClick={handleMediaClick}\n        onDocumentClick={handleDocumentClick}\n        onCancelMediaTransfer={handleCancelUpload}\n      />\n    );\n  }\n\n  function renderInvertibleMediaContent(hasCustomAppendix: boolean) {\n    const content = (\n      <>\n        {isAlbum && observeIntersectionForLoading && (\n          <Album\n            album={album!}\n            albumLayout={albumLayout!}\n            observeIntersection={observeIntersectionForLoading}\n            isOwn={isOwn}\n            isProtected={isProtected}\n            hasCustomAppendix={hasCustomAppendix}\n            onMediaClick={handleAlbumMediaClick}\n          />\n        )}\n        {!isAlbum && photo && (\n          <Photo\n            messageText={text?.text}\n            photo={photo}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            uploadProgress={uploadProgress}\n            shouldAffectAppendix={hasCustomAppendix}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            theme={theme}\n            forcedWidth={contentWidth}\n            onClick={handlePhotoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n        {!isAlbum && video && !isRoundVideo && (\n          <Video\n            video={video}\n            isOwn={isOwn}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            forcedWidth={contentWidth}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            canAutoPlay={canAutoPlayMedia}\n            uploadProgress={uploadProgress}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            lastPlaybackTimestamp={lastPlaybackTimestamp}\n            onClick={handleVideoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n      </>\n    );\n\n    if (paidMedia) {\n      return (\n        <PaidMediaOverlay chatId={chatId} messageId={messageId} paidMedia={paidMedia} isOutgoing={isOwn}>\n          {content}\n        </PaidMediaOverlay>\n      );\n    }\n\n    return content;\n  }\n\n  function shouldRenderSenderName() {\n    const media = photo || video || location || paidMedia;\n    return !(isCustomShape && !viaBotId) && (\n      (withSenderName && (!media || hasTopicChip)) || asForwarded || viaBotId || forceSenderName\n    ) && !isInDocumentGroupNotFirst && !(hasMessageReply && isCustomShape);\n  }\n\n  function renderForwardTitle() {\n    return (\n      <span className=\"forward-title-container\">\n        {asForwarded && (\n          <Icon name={forwardInfo?.hiddenUserName ? 'forward' : 'share-filled'} />\n        )}\n        {asForwarded && (\n          <span className=\"forward-title\">\n            {lang('ForwardedFrom')}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderSenderName(shouldSkipRenderForwardTitle:boolean = false, shouldSkipRenderAdminTitle: boolean = false) {\n    let senderTitle;\n    let senderColor;\n    if (senderPeer && !(isCustomShape && viaBotId)) {\n      senderTitle = getPeerFullTitle(lang, senderPeer);\n    } else if (forwardInfo?.hiddenUserName) {\n      senderTitle = forwardInfo.hiddenUserName;\n    } else if (storyData && originSender) {\n      senderTitle = getPeerFullTitle(lang, originSender!);\n    }\n    const senderEmojiStatus = senderPeer && 'emojiStatus' in senderPeer && senderPeer.emojiStatus;\n    const senderIsPremium = senderPeer && 'isPremium' in senderPeer && senderPeer.isPremium;\n\n    const shouldRenderForwardAvatar = asForwarded && senderPeer;\n    const hasBotSenderUsername = botSender?.usernames?.length;\n    return (\n      <div className=\"message-title\" dir=\"ltr\">\n        {(senderTitle || asForwarded) ? (\n          <span\n            className={buildClassName(\n              'message-title-name-container',\n              forwardInfo?.hiddenUserName ? 'sender-hidden' : 'interactive',\n              senderColor,\n            )}\n            dir=\"ltr\"\n          >\n            {!shouldSkipRenderForwardTitle && renderForwardTitle()}\n            <span className=\"message-title-name\">\n              {storyData && <Icon name=\"play-story\" />}\n              {shouldRenderForwardAvatar && (\n                <Avatar\n                  className=\"forward-avatar\"\n                  peer={senderPeer}\n                  size=\"micro\"\n                />\n              )}\n              <span\n                className=\"sender-title\"\n                onClick={handleSenderClick}\n              >\n                {senderTitle ? renderText(senderTitle) : (asForwarded ? NBSP : undefined)}\n              </span>\n              {!asForwarded && senderEmojiStatus && (\n                <CustomEmoji\n                  documentId={senderEmojiStatus.documentId}\n                  className=\"no-selection\"\n                  loopLimit={EMOJI_STATUS_LOOP_LIMIT}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                />\n              )}\n              {!asForwarded && !senderEmojiStatus && senderIsPremium && <StarIcon />}\n              {senderPeer?.fakeType && <FakeIcon fakeType={senderPeer.fakeType} />}\n            </span>\n          </span>\n        ) : !botSender ? (\n          NBSP\n        ) : undefined}\n        {botSender?.usernames?.length && (\n          <span className=\"interactive\">\n            <span className=\"via\">{lang('ViaBot')}</span>\n            <span\n              className=\"sender-title\"\n              onClick={handleViaBotClick}\n            >\n              {renderText(`@${botSender.usernames[0].username}`)}\n            </span>\n          </span>\n        )}\n        <div className=\"title-spacer\" />\n        {!shouldSkipRenderAdminTitle && !hasBotSenderUsername ? (forwardInfo?.isLinkedChannelPost ? (\n          <span className=\"admin-title\" dir=\"auto\">{lang('DiscussChannel')}</span>\n        ) : message.postAuthorTitle && isGroup && !asForwarded ? (\n          <span className=\"admin-title\" dir=\"auto\">{message.postAuthorTitle}</span>\n        ) : senderAdminMember && !asForwarded && !viaBotId ? (\n          <span className=\"admin-title\" dir=\"auto\">\n            {senderAdminMember.customTitle || lang(\n              senderAdminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin',\n            )}\n          </span>\n        ) : undefined) : undefined}\n        {canShowSenderBoosts && (\n          <span className=\"sender-boosts\" aria-hidden>\n            <Icon name={senderBoosts > 1 ? 'boosts' : 'boost'} />\n            {senderBoosts > 1 ? senderBoosts : undefined}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  const forwardAuthor = isGroup && asForwarded ? message.postAuthorTitle : undefined;\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={containerClassName}\n      data-message-id={messageId}\n      onCopy={isProtected ? stopEvent : undefined}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={isInDocumentGroupNotLast ? handleDocumentGroupMouseEnter : undefined}\n      onMouseMove={withQuickReactionButton ? handleMouseMove : undefined}\n      onMouseLeave={(withQuickReactionButton || isInDocumentGroupNotLast) ? handleMouseLeave : undefined}\n    >\n      <div\n        ref={bottomMarkerRef}\n        className=\"bottom-marker\"\n        data-message-id={messageId}\n        data-last-message-id={album ? album.messages[album.messages.length - 1].id : undefined}\n        data-album-main-id={album ? album.mainMessage.id : undefined}\n        data-has-unread-mention={message.hasUnreadMention || undefined}\n        data-has-unread-reaction={hasUnreadReaction || undefined}\n        data-is-pinned={isPinned || undefined}\n        data-should-update-views={message.viewsCount !== undefined}\n      />\n      {!isInDocumentGroup && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {isLastInDocumentGroup && (\n        <div\n          className={buildClassName(\n            'message-select-control group-select no-selection', isGroupSelected && 'is-selected',\n          )}\n          onClick={handleDocumentGroupSelectAll}\n        >\n          {isGroupSelected && (\n            <Icon name=\"select\" />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('message-content-wrapper',\n          contentClassName.includes('text') && 'can-select-text',\n          contentClassName.includes('giveaway') && 'giveaway-result-content')}\n      >\n        <div\n          className={contentClassName}\n          style={style}\n          dir=\"auto\"\n        >\n          {asForwarded && !isInDocumentGroupNotFirst && (\n            <>\n              {shouldRenderSenderName() && renderSenderName()}\n              {forwardAuthor && <span className=\"admin-title\" dir=\"auto\">{forwardAuthor}</span>}\n            </>\n          )}\n          {renderContent()}\n          {!isInDocumentGroupNotLast && metaPosition === 'standalone' && !isStoryMention && renderReactionsAndMeta()}\n          {canShowActionButton && (\n            <div className={buildClassName(\n              'message-action-buttons',\n              isLoadingComments && 'message-action-buttons-shown',\n            )}\n            >\n              {withCommentButton && isCustomShape && (\n                <CommentButton\n                  threadInfo={repliesThreadInfo}\n                  disabled={noComments}\n                  isLoading={isLoadingComments}\n                  isCustomShape\n                  asActionButton\n                />\n              )}\n              {canForward && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel={lang('lng_context_forward_msg')}\n                  onClick={isLastInDocumentGroup ? handleGroupForward : handleForward}\n                >\n                  <Icon name=\"share-filled\" />\n                </Button>\n              )}\n              {canFocus && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel=\"Focus message\"\n                  onClick={isPinnedList ? handleFocus : handleFocusForwarded}\n                >\n                  <Icon name=\"arrow-right\" />\n                </Button>\n              )}\n            </div>\n          )}\n          {withCommentButton && !(canShowActionButton && isCustomShape) && (\n            <CommentButton\n              threadInfo={repliesThreadInfo}\n              disabled={noComments}\n              isLoading={isLoadingComments}\n            />\n          )}\n          {withAppendix && <MessageAppendix isOwn={isOwn} />}\n          {withQuickReactionButton && quickReactionPosition === 'in-content' && renderQuickReactionButton()}\n        </div>\n        {message.inlineButtons && (\n          <InlineButtons message={message} onClick={clickBotInlineButton} />\n        )}\n        {reactionsPosition === 'outside' && !isStoryMention && (\n          <Reactions\n            message={reactionMessage!}\n            threadId={threadId}\n            isOutside\n            isCurrentUserPremium={isPremium}\n            maxWidth={reactionsMaxWidth}\n            observeIntersection={observeIntersectionForPlaying}\n            noRecentReactors={isChannel}\n            tags={tags}\n          />\n        )}\n      </div>\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          targetHref={contextMenuTarget?.matches('a[href]') ? (contextMenuTarget as HTMLAnchorElement).href : undefined}\n          message={message}\n          album={album}\n          messageListType={messageListType}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          repliesThreadInfo={repliesThreadInfo}\n          noReplies={noReplies}\n          detectedLanguage={detectedLanguage}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): StateProps => {\n    const {\n      focusedMessage, forwardMessages, activeReactions, activeEmojiInteractions,\n      loadingThread,\n    } = selectTabState(global);\n    const {\n      message, album, withSenderName, withAvatar, threadId, messageListType, isLastInDocumentGroup, isFirstInGroup,\n    } = ownProps;\n    const {\n      id, chatId, viaBotId, isOutgoing, forwardInfo, transcriptionId, isPinned, viaBusinessBotId, effectId,\n      paidMessageStars,\n    } = message;\n\n    const isChatWithUser = isUserId(chatId);\n\n    const chat = selectChat(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isSystemBotChat = isSystemBot(chatId);\n    const isAnonymousForwards = isAnonymousForwardsChat(chatId);\n    const isChannel = chat && isChatChannel(chat);\n    const isGroup = chat && isChatGroup(chat);\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const webPageStoryData = message.content.webPage?.story;\n    const webPageStory = webPageStoryData\n      ? selectPeerStory(global, webPageStoryData.peerId, webPageStoryData.id)\n      : undefined;\n\n    const isForwarding = forwardMessages.messageIds && forwardMessages.messageIds.includes(id);\n    const forceSenderName = !isChatWithSelf && isAnonymousOwnMessage(message);\n    const canShowSender = withSenderName || withAvatar || forceSenderName;\n    const sender = selectSender(global, message);\n    const originSender = selectForwardedSender(global, message);\n    const botSender = viaBotId ? selectUser(global, viaBotId) : undefined;\n    const senderAdminMember = sender?.id && isGroup\n      ? chatFullInfo?.adminMembersById?.[sender?.id]\n      : undefined;\n\n    const isThreadTop = message.id === threadId;\n\n    const { replyToMsgId, replyToPeerId, replyFrom } = getMessageReplyInfo(message) || {};\n    const { peerId: storyReplyPeerId, storyId: storyReplyId } = getStoryReplyInfo(message) || {};\n\n    const shouldHideReply = replyToMsgId && replyToMsgId === threadId;\n    const replyMessage = selectReplyMessage(global, message);\n    const forwardHeader = forwardInfo || replyFrom;\n    const replyMessageSender = replyMessage ? selectSender(global, replyMessage)\n      : forwardHeader && !isSystemBotChat && !isAnonymousForwards\n        ? selectSenderFromHeader(global, forwardHeader) : undefined;\n    const replyMessageForwardSender = replyMessage && selectForwardedSender(global, replyMessage);\n    const replyMessageChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n    const isReplyPrivate = !isSystemBotChat && !isAnonymousForwards && replyMessageChat\n      && !isChatPublic(replyMessageChat)\n      && (replyMessageChat.isNotJoined || replyMessageChat.isRestricted);\n    const isReplyToTopicStart = replyMessage?.content.action?.type === 'topicCreate';\n    const replyStory = storyReplyId && storyReplyPeerId\n      ? selectPeerStory(global, storyReplyPeerId, storyReplyId)\n      : undefined;\n    const storySender = storyReplyPeerId ? selectPeer(global, storyReplyPeerId) : undefined;\n\n    const uploadProgress = selectUploadProgress(global, message);\n    const isFocused = messageListType === 'thread' && (\n      album\n        ? album.messages.some((m) => selectIsMessageFocused(global, m, threadId))\n        : selectIsMessageFocused(global, message, threadId)\n    );\n\n    const {\n      direction: focusDirection, noHighlight: noFocusHighlight, isResizingContainer,\n      quote: focusedQuote, scrollTargetPosition,\n    } = (isFocused && focusedMessage) || {};\n\n    const middleSearch = selectCurrentMiddleSearch(global);\n    const highlight = middleSearch?.results?.query\n      && `${middleSearch.isHashtag ? '#' : ''}${middleSearch.results.query}`;\n\n    const singleEmoji = getMessageSingleRegularEmoji(message);\n    const animatedEmoji = singleEmoji && selectAnimatedEmoji(global, singleEmoji) ? singleEmoji : undefined;\n    const animatedCustomEmoji = getMessageSingleCustomEmoji(message);\n\n    let isSelected: boolean;\n    if (album?.messages) {\n      isSelected = album.messages.every(({ id: messageId }) => selectIsMessageSelected(global, messageId));\n    } else {\n      isSelected = selectIsMessageSelected(global, id);\n    }\n\n    const canReply = messageListType === 'thread' && selectCanReplyToMessage(global, message, threadId);\n    const activeDownloads = selectActiveDownloads(global);\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    const isDownloading = downloadableMedia && getIsDownloading(activeDownloads, downloadableMedia);\n\n    const repliesThreadInfo = selectThreadInfo(global, chatId, album?.commentsMessage?.id || id);\n\n    const isInDocumentGroup = Boolean(message.groupedId) && !message.isInAlbum;\n    const documentGroupFirstMessageId = isInDocumentGroup\n      ? selectMessageIdsByGroupId(global, chatId, message.groupedId!)![0]\n      : undefined;\n    const reactionMessage = isInDocumentGroup ? (\n      isLastInDocumentGroup ? selectChatMessage(global, chatId, documentGroupFirstMessageId!) : undefined\n    ) : message;\n\n    const hasUnreadReaction = chat?.unreadReactions?.includes(message.id);\n\n    const hasTopicChip = threadId === MAIN_THREAD_ID && chat?.isForum && isFirstInGroup;\n    const messageTopic = hasTopicChip ? selectTopicFromMessage(global, message) : undefined;\n\n    const chatTranslations = selectChatTranslations(global, chatId);\n\n    const requestedTranslationLanguage = selectRequestedMessageTranslationLanguage(global, chatId, message.id);\n    const requestedChatTranslationLanguage = selectRequestedChatTranslationLanguage(global, chatId);\n\n    const areTranslationsEnabled = IS_TRANSLATION_SUPPORTED && global.settings.byKey.canTranslate\n      && !requestedChatTranslationLanguage; // Stop separate language detection if chat translation is requested\n\n    const isConnected = global.connectionState === 'connectionStateReady';\n\n    const hasActiveReactions = Boolean(reactionMessage && activeReactions[getMessageKey(reactionMessage)]?.length);\n\n    const isPremium = selectIsCurrentUserPremium(global);\n    const senderBoosts = sender && selectIsChatWithSelf(global, sender.id)\n      ? (chatFullInfo?.boostsApplied ?? message.senderBoosts) : message.senderBoosts;\n\n    const chatLevel = chat?.boostLevel || 0;\n    const transcribeMinLevel = global.appConfig?.groupTranscribeLevelMin;\n    const canTranscribeVoice = isPremium || Boolean(transcribeMinLevel && chatLevel >= transcribeMinLevel);\n\n    const viaBusinessBot = viaBusinessBotId ? selectUser(global, viaBusinessBotId) : undefined;\n\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n\n    const poll = selectPollFromMessage(global, message);\n\n    const maxTimestamp = selectMessageTimestampableDuration(global, message);\n\n    const lastPlaybackTimestamp = selectMessageLastPlaybackTimestamp(global, chatId, message.id);\n\n    return {\n      theme: selectTheme(global),\n      forceSenderName,\n      sender,\n      canShowSender,\n      originSender,\n      botSender,\n      shouldHideReply: shouldHideReply || isReplyToTopicStart,\n      isThreadTop,\n      replyMessage,\n      replyMessageSender,\n      replyMessageForwardSender,\n      replyMessageChat,\n      replyStory,\n      isReplyPrivate,\n      storySender,\n      isInDocumentGroup,\n      isProtected: selectIsMessageProtected(global, message),\n      isChatProtected: selectIsChatProtected(global, chatId),\n      isFocused,\n      isForwarding,\n      reactionMessage,\n      isChatWithSelf,\n      isRepliesChat: isSystemBotChat,\n      isAnonymousForwards,\n      isChannel,\n      isGroup,\n      canReply,\n      highlight,\n      animatedEmoji,\n      animatedCustomEmoji,\n      isInSelectMode: selectIsInSelectMode(global),\n      isSelected,\n      isGroupSelected: (\n        Boolean(message.groupedId)\n        && !message.isInAlbum\n        && selectIsDocumentGroupSelected(global, chatId, message.groupedId)\n      ),\n      threadId,\n      isDownloading,\n      isPinnedList: messageListType === 'pinned',\n      isPinned,\n      canAutoLoadMedia: selectCanAutoLoadMedia(global, message),\n      canAutoPlayMedia: selectCanAutoPlayMedia(global, message),\n      autoLoadFileMaxSizeMb: global.settings.byKey.autoLoadFileMaxSizeMb,\n      shouldLoopStickers: selectShouldLoopStickers(global),\n      repliesThreadInfo,\n      availableReactions: global.reactions.availableReactions,\n      defaultReaction: isMessageLocal(message) || messageListType === 'scheduled'\n        ? undefined : selectDefaultReaction(global, chatId),\n      hasActiveReactions,\n      activeEmojiInteractions,\n      hasUnreadReaction,\n      isTranscribing: transcriptionId !== undefined && global.transcriptions[transcriptionId]?.isPending,\n      transcribedText: transcriptionId !== undefined ? global.transcriptions[transcriptionId]?.text : undefined,\n      isPremium,\n      senderAdminMember,\n      messageTopic,\n      hasTopicChip,\n      chatTranslations,\n      areTranslationsEnabled,\n      shouldDetectChatLanguage: selectShouldDetectChatLanguage(global, chatId),\n      requestedTranslationLanguage,\n      requestedChatTranslationLanguage,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      withAnimatedEffects: selectPerformanceSettingsValue(global, 'stickerEffects'),\n      webPageStory,\n      isConnected,\n      isLoadingComments: repliesThreadInfo?.isCommentsInfo\n        && loadingThread?.loadingChatId === repliesThreadInfo?.originChannelId\n        && loadingThread?.loadingMessageId === repliesThreadInfo?.originMessageId,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n      ...(isOutgoing && { outgoingStatus: selectOutgoingStatus(global, message, messageListType === 'scheduled') }),\n      ...(typeof uploadProgress === 'number' && { uploadProgress }),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n        isResizingContainer,\n        focusedQuote,\n        scrollTargetPosition,\n      }),\n      senderBoosts,\n      tags: global.savedReactionTags?.byKey,\n      canTranscribeVoice,\n      viaBusinessBot,\n      effect,\n      poll,\n      maxTimestamp,\n      lastPlaybackTimestamp,\n      paidMessageStars,\n      isChatWithUser,\n    };\n  },\n)(Message));\n","import { getActions } from '../../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiStory, ApiTopic, ApiUser,\n} from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IAlbum, ThreadId } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMessagePhoto, getMessageWebPagePhoto } from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport { tryParseDeepLink } from '../../../../util/deepLinkParser';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useInnerHandlers({\n  lang,\n  selectMessage,\n  message,\n  chatId,\n  threadId,\n  isInDocumentGroup,\n  asForwarded,\n  isScheduled,\n  album,\n  senderPeer,\n  botSender,\n  messageTopic,\n  isTranslatingChat,\n  story,\n  isReplyPrivate,\n  isRepliesChat,\n  isSavedMessages,\n  lastPlaybackTimestamp,\n}: {\n  lang: OldLangFn;\n  selectMessage: (e: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void;\n  message: ApiMessage;\n  chatId: string;\n  threadId: ThreadId;\n  isInDocumentGroup: boolean;\n  asForwarded?: boolean;\n  isScheduled?: boolean;\n  album?: IAlbum;\n  avatarPeer?: ApiPeer;\n  senderPeer?: ApiPeer;\n  botSender?: ApiUser;\n  messageTopic?: ApiTopic;\n  isTranslatingChat?: boolean;\n  story?: ApiStory;\n  isReplyPrivate?: boolean;\n  isRepliesChat?: boolean;\n  isSavedMessages?: boolean;\n  lastPlaybackTimestamp?: number;\n}) {\n  const {\n    openChat, showNotification, focusMessage, openMediaViewer, openAudioPlayer,\n    markMessagesRead, cancelUploadMedia, sendPollVote, openForwardMenu,\n    openChatLanguageModal, openThread, openStoryViewer, searchChatMediaMessages,\n  } = getActions();\n\n  const {\n    id: messageId, forwardInfo, groupedId, content: { paidMedia, video, webPage },\n  } = message;\n\n  const {\n    replyToMsgId, replyToPeerId, replyToTopId, isQuote, quoteText,\n  } = getMessageReplyInfo(message) || {};\n\n  const handleSenderClick = useLastCallback(() => {\n    if (!senderPeer) {\n      showNotification({ message: lang('HidAccount') });\n\n      return;\n    }\n\n    if (asForwarded && forwardInfo?.channelPostId) {\n      focusMessage({ chatId: senderPeer.id, messageId: forwardInfo.channelPostId });\n    } else {\n      openChat({ id: senderPeer.id });\n    }\n  });\n\n  const handleViaBotClick = useLastCallback(() => {\n    if (!botSender) {\n      return;\n    }\n\n    openChat({ id: botSender.id });\n  });\n\n  const handleReplyClick = useLastCallback((): void => {\n    if (!replyToMsgId || isReplyPrivate) {\n      showNotification({\n        message: isQuote ? lang('QuotePrivate') : lang('ReplyPrivate'),\n      });\n      return;\n    }\n\n    if (isRepliesChat && replyToPeerId && replyToTopId) {\n      openThread({\n        isComments: true,\n        originChannelId: replyToPeerId,\n        originMessageId: replyToTopId,\n        focusMessageId: replyToMsgId,\n      });\n      return;\n    }\n\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: isRepliesChat ? replyToTopId : threadId, // Open comments from Replies bot, otherwise, keep current thread\n      messageId: replyToMsgId,\n      replyMessageId: replyToPeerId ? undefined : messageId,\n      noForumTopicPanel: !replyToPeerId, // Open topic panel for cross-chat replies\n      ...(isQuote && { quote: quoteText?.text }),\n    });\n  });\n\n  const handleDocumentClick = useLastCallback((): void => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n    });\n  });\n\n  const openMediaViewerWithPhotoOrVideo = useLastCallback((withDynamicLoading: boolean): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n    if (withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    }\n\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage.url);\n\n    const videoContent = video || webPage?.video;\n    const webpageTimestamp = parsedLink && 'timestamp' in parsedLink ? parsedLink.timestamp : undefined;\n\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n      timestamp: lastPlaybackTimestamp || videoContent?.timestamp || webpageTimestamp,\n      withDynamicLoading,\n    });\n  });\n  const handlePhotoMediaClick = useLastCallback((): void => {\n    const withDynamicLoading = !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n  const handleVideoMediaClick = useLastCallback(() => {\n    const isGif = message.content?.video?.isGif;\n    const withDynamicLoading = !isGif && !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n\n  const handleMediaClick = useLastCallback((): void => {\n    const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n    if (photo) {\n      handlePhotoMediaClick();\n    }\n\n    handleVideoMediaClick();\n  });\n\n  const handleAudioPlay = useLastCallback((): void => {\n    openAudioPlayer({ chatId, messageId });\n  });\n\n  const handleAlbumMediaClick = useLastCallback((albumMessageId: number, albumIndex?: number): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n\n    searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId: albumMessageId,\n      mediaIndex: albumIndex,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledAlbum : MediaViewerOrigin.Album,\n      withDynamicLoading: !paidMedia,\n    });\n  });\n\n  const handleReadMedia = useLastCallback((): void => {\n    markMessagesRead({ messageIds: [messageId] });\n  });\n\n  const handleCancelUpload = useLastCallback(() => {\n    cancelUploadMedia({ chatId, messageId });\n  });\n\n  const handleVoteSend = useLastCallback((options: string[]) => {\n    sendPollVote({ chatId, messageId, options });\n  });\n\n  const handleGroupForward = useLastCallback(() => {\n    openForwardMenu({ fromChatId: chatId, groupedId });\n  });\n\n  const handleForward = useLastCallback(() => {\n    if (album && album.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: chatId, messageIds: [messageId] });\n    }\n  });\n\n  const handleFocus = useLastCallback(() => {\n    focusMessage({\n      chatId, threadId: MAIN_THREAD_ID, messageId,\n    });\n  });\n\n  const handleFocusForwarded = useLastCallback(() => {\n    const originalChatId = (isSavedMessages && forwardInfo!.savedFromPeerId) || forwardInfo!.fromChatId!;\n\n    if (isInDocumentGroup) {\n      focusMessage({\n        chatId: originalChatId, groupedId, groupedChatId: chatId, messageId: forwardInfo!.fromMessageId!,\n      });\n      return;\n    }\n\n    if (replyToPeerId && replyToTopId) {\n      if (isRepliesChat) {\n        openThread({\n          isComments: true,\n          originChannelId: replyToPeerId,\n          originMessageId: replyToTopId,\n          focusMessageId: forwardInfo!.fromMessageId!,\n        });\n      } else {\n        focusMessage({\n          chatId: replyToPeerId,\n          threadId: replyToTopId,\n          messageId: forwardInfo!.fromMessageId!,\n        });\n      }\n    } else {\n      focusMessage({\n        chatId: originalChatId, messageId: forwardInfo!.fromMessageId!,\n      });\n    }\n  });\n\n  const selectWithGroupedId = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    selectMessage(e, groupedId);\n  });\n\n  const handleTranslationClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    openChatLanguageModal({ chatId, messageId: !isTranslatingChat ? messageId : undefined });\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n  });\n\n  const handleTopicChipClick = useLastCallback(() => {\n    if (!messageTopic) return;\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: messageTopic.id,\n      messageId,\n    });\n  });\n\n  const handleStoryClick = useLastCallback(() => {\n    if (!story) return;\n    openStoryViewer({\n      peerId: story.peerId,\n      storyId: story.id,\n      isSingleStory: true,\n    });\n  });\n\n  return {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleDocumentClick,\n    handleMediaClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick: selectWithGroupedId,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll: selectWithGroupedId,\n    handleTopicChipClick,\n    handleStoryClick,\n  };\n}\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { detectLanguage } from '../util/languageDetection';\n\nexport default function useTextLanguage(text?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>) {\n  const [language, setLanguage] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    if (text) {\n      detectLanguage(text).then(setLanguage);\n    } else {\n      setLanguage(undefined);\n    }\n  }, [isDisabled, text, getIsReady]);\n\n  return language;\n}\n","import type { ApiMessage, ApiPoll } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { EMOJI_SIZES, MESSAGE_CONTENT_CLASS_NAME } from '../../../../config';\nimport { getMessageContent } from '../../../../global/helpers';\nimport getSingularPaidMedia from './getSingularPaidMedia';\n\nexport function buildContentClassName(\n  message: ApiMessage,\n  album?: IAlbum,\n  {\n    poll,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread,\n    forceSenderName,\n    hasCommentCounter,\n    hasCommentButton,\n    hasActionButton,\n    hasReactions,\n    isGeoLiveActive,\n    withVoiceTranscription,\n    peerColorClass,\n    hasOutsideReactions,\n  }: {\n    poll?: ApiPoll;\n    hasSubheader?: boolean;\n    isCustomShape?: boolean | number;\n    isLastInGroup?: boolean;\n    asForwarded?: boolean;\n    hasThread?: boolean;\n    forceSenderName?: boolean;\n    hasCommentCounter?: boolean;\n    hasCommentButton?: boolean;\n    hasActionButton?: boolean;\n    hasReactions?: boolean;\n    isGeoLiveActive?: boolean;\n    withVoiceTranscription?: boolean;\n    peerColorClass?: string;\n    hasOutsideReactions?: boolean;\n  } = {},\n) {\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const content = getMessageContent(message);\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo,\n    audio, voice, document, webPage, contact, location, invoice, storyData,\n    giveaway, giveawayResults,\n  } = content;\n  const text = album?.hasMultipleCaptions ? undefined : getMessageContent(album?.captionMessage || message).text;\n  const hasFactCheck = Boolean(message.factCheck?.text);\n\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isInvertedMedia = message.isInvertedMedia;\n  const isInvertibleMedia = photo || (video && !isRoundVideo) || album || webPage;\n\n  const classNames = [MESSAGE_CONTENT_CLASS_NAME];\n  const isMedia = storyData || photo || video || location || invoice?.extendedMedia || paidMedia;\n  const hasText = text || location?.mediaType === 'venue' || isGeoLiveActive || hasFactCheck;\n  const isMediaWithNoText = isMedia && !hasText;\n  const hasInlineKeyboard = Boolean(message.inlineButtons);\n  const isViaBot = Boolean(message.viaBotId);\n\n  const hasFooter = (() => {\n    if (isInvertedMedia && isInvertibleMedia) {\n      if (hasReactions && !hasOutsideReactions) return true;\n      if (hasFactCheck) return true;\n      if (webPage && hasText) return true;\n      return false;\n    }\n    return hasText;\n  })();\n\n  if (peerColorClass) {\n    classNames.push(peerColorClass);\n  }\n\n  if (!isMedia && message.emojiOnlyCount) {\n    classNames.push('emoji-only');\n    if (message.emojiOnlyCount <= EMOJI_SIZES) {\n      classNames.push(`emoji-only-${message.emojiOnlyCount}`);\n    }\n  } else if (hasText) {\n    classNames.push('text');\n  } else {\n    classNames.push('no-text');\n  }\n\n  if (!Object.keys(content).length) {\n    classNames.push('unsupported');\n  }\n\n  if (hasActionButton) {\n    classNames.push('has-action-button');\n  }\n\n  if (isCustomShape) {\n    classNames.push('custom-shape');\n\n    if (isRoundVideo) {\n      classNames.push('round');\n    }\n\n    if (hasCommentCounter) {\n      classNames.push('has-comment-counter');\n    }\n  }\n  if (isMedia && !withVoiceTranscription) {\n    classNames.push('media');\n  } else if (video) {\n    classNames.push('video');\n  } else if (audio) {\n    classNames.push('audio');\n  } else if (voice) {\n    classNames.push('voice');\n    if (withVoiceTranscription) {\n      classNames.push('with-voice-transcription');\n    }\n  } else if (document) {\n    classNames.push('document');\n  } else if (contact) {\n    classNames.push('contact');\n  } else if (poll) {\n    classNames.push('poll');\n  } else if (giveaway || giveawayResults) {\n    classNames.push('giveaway');\n  } else if (webPage) {\n    classNames.push('web-page');\n\n    if (webPage.photo || webPage.video) {\n      classNames.push('media');\n    }\n\n    if (webPage.document) {\n      classNames.push('document');\n    }\n\n    if (webPage.gift) {\n      classNames.push('gift');\n    }\n  }\n\n  if (invoice && !invoice.extendedMedia) {\n    classNames.push('invoice');\n  }\n\n  if (invoice && invoice.photo) {\n    classNames.push('has-photo');\n  }\n\n  if (storyData) {\n    classNames.push('story');\n  }\n\n  if (asForwarded) {\n    classNames.push('is-forwarded');\n  }\n\n  if (hasSubheader) {\n    classNames.push('has-subheader');\n  }\n\n  if (hasThread) {\n    classNames.push('has-replies');\n  }\n\n  if (hasReactions) {\n    classNames.push('has-reactions');\n  }\n\n  if (hasOutsideReactions) {\n    classNames.push('has-outside-reactions');\n  }\n\n  if (isViaBot) {\n    classNames.push('is-via-bot');\n  }\n\n  if (forceSenderName) {\n    classNames.push('force-sender-name');\n  }\n\n  if (!isCustomShape) {\n    classNames.push('has-shadow');\n\n    if (isMedia && hasThread) {\n      classNames.push('has-background');\n    }\n\n    if (hasSubheader || asForwarded || isViaBot || !isMediaWithNoText\n      || forceSenderName || hasFactCheck || withVoiceTranscription) {\n      classNames.push('has-solid-background');\n    }\n\n    if (hasFactCheck) {\n      classNames.push('has-fact-check');\n    }\n\n    if (isLastInGroup && !hasInlineKeyboard && (photo || !isMediaWithNoText || hasCommentButton)) {\n      classNames.push('has-appendix');\n    }\n  }\n\n  if (isInvertibleMedia && isInvertedMedia) {\n    classNames.push('is-inverted-media');\n  }\n\n  if (hasFooter) {\n    classNames.push('has-footer');\n  } else {\n    classNames.push('no-footer');\n  }\n\n  return classNames.join(' ');\n}\n","import React from '../../../lib/teact/teact';\n\ninterface OwnProps {\n  isOwn?: boolean;\n}\n\nfunction MessageAppendix({ isOwn } : OwnProps) {\n  const path = isOwn\n    ? 'M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z'\n    : 'M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z';\n  return (\n    <svg width=\"9\" height=\"20\" className=\"svg-appendix\">\n      <defs>\n        <filter x=\"-50%\" y=\"-14.7%\" width=\"200%\" height=\"141.2%\" filterUnits=\"objectBoundingBox\" id=\"messageAppendix\">\n          <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n          <feColorMatrix\n            values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n            in=\"shadowBlurOuter1\"\n          />\n        </filter>\n      </defs>\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <path d={path} fill=\"#000\" filter=\"url(#messageAppendix)\" />\n        <path d={path} fill={isOwn ? '#EEFFDE' : 'FFF'} className=\"corner\" />\n      </g>\n    </svg>\n  );\n}\n\nexport default MessageAppendix;\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n  const isMediaUnread = message.isMediaUnread;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isActivated) {\n      onReadMedia();\n    }\n  }, [isActivated, isMediaUnread, onReadMedia]);\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            defaultMuted\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div\n          className={buildClassName(\n            'message-media-duration', isMediaUnread && 'unread',\n          )}\n        >\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type {\n  ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  message: ApiSponsoredMessage;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenu: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = message.sponsorInfo || !shouldSkipAbout || message.canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {message.sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(message.canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {message.canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredMessageContextMenu from './SponsoredMessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsoredMessage,\n    hideSponsoredMessages,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({ chatId: message.chatId });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsoredMessages();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsoredMessage({ peerId: message.chatId, randomId: message.randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredMessageContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        message={message}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  lastPlaybackTimestamp?: number;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  lastPlaybackTimestamp,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !shouldHidePreview);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          defaultMuted\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n      {Boolean(lastPlaybackTimestamp) && (\n        <div\n          className=\"message-media-last-progress\"\n          style={`--_progress: ${Math.floor((lastPlaybackTimestamp / duration) * 100)}%`}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LaOdPURl\",\"backgroundWrapper\":\"zDnMa37m\",\"background\":\"EdXfeKWY\",\"stickerWrapper\":\"o_DYZEMV\"};","import React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiStarGiftUnique } from '../../../api/types';\n\nimport { getGiftAttributes } from '../../common/helpers/gifts';\n\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport StickerView from '../../common/StickerView';\n\nimport styles from './WebPageUniqueGift.module.scss';\n\ntype OwnProps = {\n  gift: ApiStarGiftUnique;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPageUniqueGift = ({\n  gift,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const stickerRef = useRef<HTMLDivElement>(null);\n  const {\n    backdrop, model, pattern,\n  } = getGiftAttributes(gift)!;\n\n  const backgroundColors = [backdrop!.centerColor, backdrop!.edgeColor];\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.backgroundWrapper}>\n        <RadialPatternBackground\n          className={styles.background}\n          backgroundColors={backgroundColors}\n          patternColor={backdrop!.patternColor}\n          patternIcon={pattern!.sticker}\n        />\n      </div>\n      <div ref={stickerRef} className={styles.stickerWrapper}>\n        <StickerView\n          containerRef={stickerRef}\n          sticker={model!.sticker}\n          size={STAR_GIFT_STICKER_SIZE}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WebPageUniqueGift);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { tryParseDeepLink } from '../../../util/deepLinkParser';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\nimport WebPageUniqueGift from './WebPageUniqueGift';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  lastPlaybackTimestamp?: number;\n  isEditing?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onDocumentClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  message,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  lastPlaybackTimestamp,\n  isEditing,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onMediaClick,\n  onDocumentClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    if (!webPage) return;\n\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, undefined, !hasCustomColor);\n\n  const linkTimestamp = useMemo(() => {\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage?.url);\n    if (!parsedLink || !('timestamp' in parsedLink)) return undefined;\n    return parsedLink.timestamp;\n  }, [webPage?.url]);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n    mediaSize,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const resultType = stickers?.isEmoji ? 'telegram_emojiset' : type;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonLangKey(resultType) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = (width === height || mediaSize === 'small') && mediaSize !== 'large';\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && !inPreview && (\n          <WebPageUniqueGift\n            gift={webPage.gift!}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onClick={handleOpenTelegramLink}\n          />\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', !inPreview && 'WebPage-text_interactive')}\n            onClick={!inPreview ? () => openUrl({ url, shouldSkipModal: true }) : undefined}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {(!inPreview || isGift) && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            lastPlaybackTimestamp={lastPlaybackTimestamp || linkTimestamp}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={onDocumentClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{oldLang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_emojiset':\n      return 'ViewButtonEmojiset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n  ApiChannelStatistics |\n  ApiGroupStatistics |\n  ApiPostStatistics |\n  ApiBoostStatistics |\n  ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}<span className={styles.decimalPart}>.{decimalTonPart}</span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ ${integerUsdPart}<span className={styles.decimalUsdPart}>.{decimalUsdPart}</span>\n        </span>\n        <h3 className={styles.tableHeading}>{lang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n  const { balances, usdRate } = (statistics as ApiChannelMonetizationStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { isUserId } from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getPeerTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n\n            callbacks.delete(cb);\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n\n          callbacks.delete(cb);\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressiveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element!.clientWidth!);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","import type { ApiLimitType } from '../../api/types';\nimport type { GlobalState } from '../types';\n\nimport { DEFAULT_LIMITS } from '../../config';\nimport { selectIsCurrentUserPremium } from './users';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: { text: action.payload },\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiTopic, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  topics,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  topics?: Record<number, ApiTopic>;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      markChatMessagesRead,\n      markChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (\n      chat.unreadCount || chat.hasUnreadMark || Object.values(topics || {}).some(({ unreadCount }) => unreadCount)\n    ) ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => markChatMessagesRead({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => markChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview, topics,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useCallback, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  }, [onStart, threshold]);\n\n  const cancel = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd, onClick]);\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import type { RefObject } from '../../lib/teact/teact';\nimport { useEffect } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { throttle } from '../../util/schedulers';\n\nconst THROTTLE_DELAY = 100;\n\nconst useMarkScrolled = ({\n  containerRef, selector,\n}: {\n  containerRef: RefObject<HTMLDivElement | null>;\n  selector: string;\n}, deps: unknown[]) => {\n  useEffect(() => {\n    const elements = containerRef?.current?.querySelectorAll(selector);\n    if (!elements?.length) return undefined;\n\n    const handleScroll = throttle((event: Event) => {\n      const target = event.target as HTMLElement;\n      const isScrolled = target.scrollTop > 0;\n      requestMutation(() => {\n        target.classList.toggle('scrolled', isScrolled);\n      });\n    }, THROTTLE_DELAY);\n\n    elements.forEach((el) => el.addEventListener('scroll', handleScroll, { passive: true }));\n    // Trigger the scroll handler immediately to apply the current state\n    elements.forEach((el) => el.dispatchEvent(new Event('scroll', { bubbles: false })));\n\n    return () => {\n      elements.forEach((el) => el.removeEventListener('scroll', handleScroll));\n    };\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n};\n\nexport default useMarkScrolled;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressiveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/windowEnvironment';\n\ntype ElementType = HTMLElement;\ntype RefType = {\n  current: ElementType | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: ElementType) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","GroupCallTopPane","className","onPaneStateChange","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","filter","useEffect","subscribed","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","isRendering","ref","shouldRender","useHeaderPane","isOpen","onStateChange","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","start","end","style","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","mediaSource","isVoice","isSeeking","useRef","isRtl","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","useMedia","ApiMediaFormat","BlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","useLastCallback","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","i","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","current","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","originMessage","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","Icon","name","ripple","color","ariaLabel","backgroundImage","nonInteractive","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","add","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","VALID_TARGET_IDS","Set","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","target","closest","has","preventDefault","activeElement","pastedText","getData","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","getFilesFromDataTransferItems","textToPaste","entities","text","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","setTimeout","pause","props","AttachmentModal","useModuleLoader","Bundles","Extra","AttachMenu","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","canEditMedia","editingMessage","messageListType","paidMessagesStars","isAttachMenuOpen","openAttachMenu","closeAttachMenu","useFlag","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","includes","oldLang","useLang","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","BotMenuButton","isDisabled","textRef","textEl","scrollWidth","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","selectCanAnimateInterface","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","WebPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","isSmallerMedia","webPageMediaSize","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","hasMediaSizeOptions","hasLargeMedia","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","storyId","chatBot","isSystemBot","selectBot","isChatWithBot","isChatWithUser","isUserId","userFullInfo","selectUserFullInfo","selectPeerPaidMessagesStars","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","shouldPaidMessageAutoApprove","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","peer","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","isSilentPosting","getChatNotifySettings","selectNotifyDefaults","selectNotifyException","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","starsBalance","stars","balance","amount","isStarsBalanceModalOpen","starsBalanceModal","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","isPaymentMessageConfirmDialogOpen","Composer","dropAreaState","isReady","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onDropHide","onFocus","onBlur","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","updateChatSilentPosting","inputRef","counterRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePreviousDeprecated","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","messagesCount","messagesInInput","starsForAllMessages","closeConfirmDialog","closeConfirmModalPayForMessage","dialogHandler","paymentMessageConfirmDialogHandler","shouldAutoApprove","setAutoApprove","setShouldPaidMessageAutoApprove","handleWithConfirmation","handleActionWithPaymentConfirmation","usePaidMessageConfirmation","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","limit","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","substring","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","canSendAttachments","attachmentsToSend","sendAttachments","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSendCore","currentAttachments","webPageUrl","handleSend","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","handleSendWithConfirmation","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","handleToggleSilentPosting","localId","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholder","formatStarsAsIcon","asFont","withNodes","topic","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","emoticon","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","shouldRenderPaidBadge","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","canSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","Avatar","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","Transition","slideClassName","activeKey","direction","formatVoiceRecordDuration","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","allowDisabledClick","noFastClick","pill","fluid","AnimatedCounter","number","MessageEffect","shouldPlay","onStop","CustomSendMenu","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","PaymentMessageConfirmDialog","userName","getPeerTitle","messagePriceInStars","confirmHandler","isSavedDialog","isPrivateChat","user","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","DeleteChatModal","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","thumbDataUri","getMediaThumbUri","localBlobUrl","previewBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","Checkbox","checked","label","onCheck","DotAnimation","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","src","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","selectTopic","selectThreadMessagesCount","GroupChatInfo","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","TypingStatus","shouldRestoreHeight","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","Media","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","Keys","NothingFound","description","confirmPaymentMessage","withMarkdown","price","count","confirmLabel","forceShowSelf","isSynced","userStatus","selectUserStatus","isSelf","PrivateChatInfo","customPeer","noFake","noVerified","adminMember","iconElement","rightElement","loadFullUser","hasAvatarMediaViewer","useIntervalForceUpdate","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","ProfilePhoto","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","currentTime","specialIcon","role","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","emojiStatusSlug","slug","ProfileInfo","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","openUniqueGiftBySlug","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","styles","selectorToPreventScroll","onSwipe","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isSystemBotChat","isReadDateRestrictedByMe","membersCount","renderStatus","iconEmojiId","observeIntersectionForPlaying","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","NBSP","EmbeddedMessage","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","PeerColorWrapper","emojiIconClassName","shouldReset","blobUrl","isFullVideo","getPictogramDimensions","srcUrl","shouldRenderVideo","renderPictogram","renderTextWithEntities","asPreview","emojiSize","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","BusinessHours","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","ListItem","iconClassName","multiline","isStatic","narrow","withColorTransition","tabIndex","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","openGiftModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","buildCollectionByKey","split","digit","effectSticker","randomEffect","random","hash","getStickerMediaHash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","forUserId","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","containerRef","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","countryList","phoneCodes","phoneCodeList","botAppPermissions","selectBotAppPermissions","isMuted","getIsChatMuted","botVerification","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","isBotCanManageEmojiStatus","ChatExtra","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","toggleUserEmojiStatusPermission","toggleUserLocationPermission","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","prevPeerId","dpr","useDevicePixelRatio","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","Switcher","inactive","iconId","usernameList","otherUsernames","usernameLinks","s","ChatFolderModal","MuteChatModal","ChatCallStatus","lastMessageId","selectChatLastMessageId","lastMessage","selectChatLastMessage","isOutgoing","savedDialogSender","fromId","messageSender","lastMessageSender","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","topicsInfo","selectTopicsInfo","lastMessageStory","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","listedTopicIds","topics","topicsById","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","useEnsureMessage","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatefulContent","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","handleReport","contextActions","useChatContextActions","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","hasMiniApp","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeUnMuted","notifySettings","mutedUntil","isEveryUnreadMuted","every","hasUnreadMark","isSignal","isUnread","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","miniAppButton","visiblePinnedElement","elements","renderContent","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","isMinimized","handler","actionExpand","actionHide","isHidden","compact","root","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","UnconfirmedSession","sessionRef","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","useResizeObserver","entry","borderBoxSize","blockSize","contentRect","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useShowTransition","withShouldRender","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","rect","currentTarget","clientY","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","event","container","scrollHeight","deltaY","passive","useTopOverscroll","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onLoadMore","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","selectTopics","isChatMuted","canDelete","selectCanDeleteTopic","Topic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","ForumPanel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","beginHeavyAnimation","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","opacity","ANIMATION_END_DELAY","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","senderId","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","scrollX","scrollY","innerWidth","innerHeight","seed","filterId","SNAP_EFFECT_ID","generateUniqueId","component","ghost","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","slope","intercept","attributeName","dur","in2","operator","xChannelSelector","yChannelSelector","createFilter","elementContainer","svg","jsxToHtml","foreignObject","computedStyle","getComputedStyle","clone","getPropertyValue","snapContainer","once","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","screen","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","path","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","withPortal","CustomSend","DropTarget","isQuick","isGeneric","svgRef","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","handleResize","baseVal","useEffectOnce","onDrop","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","clearTimeout","AbsoluteVideo","constructor","videoUrl","options","_defineProperty","this","load","recalculatePositionAndSize","play","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","customColor","useDynamicColorListener","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","isLottie","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","r","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","then","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","placeholderAriaLabel","onChange","onKeyDown","isComposing","altKey","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onLoad","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","mimeType","quick","shouldSendAsFile","img","preloadImage","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","STARS_ICON_PLACEHOLDER","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterPeersByQuery","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isStarsBalanceModeOpen","isWaitingStarsTopup","setIsWaitingStarsTopup","confirmPaymentHandlerRef","closePaymentMessageConfirmDialogOpen","handleStarsTopup","openStarsBalanceModal","topup","balanceNeeded","purpose","PAID_MESSAGES_PURPOSE","openPaymentMessageConfirmDialogOpen","setPaidMessageAutoApprove","CLOSE_DURATION","RESIZE_THROTTLE","providedRef","withResizeObserver","setShouldRender","localRef","lastHeightRef","reset","useUnmountCleanup","handleUpdate","applyAnimationState","list","noTransition","cumulativeHeight","state","shiftPx","apply","setExtraStyles","zIndex","String","transition","isPanelOpen","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","getSingularPaidMedia","extendedMedia","singularMedia","AlbumRectPart","Top","Bottom","accumulate","initValue","accumulator","calculateContainerSize","layout","dimensions","sides","calculateAlbumLayout","album","ratios","messages","isSingleMessage","paidMedia","getMessageContent","calculateMediaDimensions","getRatios","isPaidMedia","proportions","ratio","getProportions","averageRatio","getAverageRatio","albumCount","forceCalc","maxWidth","getAvailableWidth","params","minWidth","spacing","originalRatios","clamp","cropRatios","attempts","pushAttempt","lineCounts","heights","currentCount","multiHeight","attemptCount","sum","first","second","third","fourth","optimalAttempt","optimalDiff","lineCount","totalHeight","bad1","bad2","line","optimalCounts","optimalHeights","rowCount","colCount","lineHeight","col","layoutWithComplexLayouter","layoutTwoTopBottom","layoutTwoLeftRightEqual","minimalWidth","secondWidth","firstWidth","layoutTwoLeftRight","layoutTwo","firstHeight","thirdHeight","secondHeight","rightWidth","leftWidth","layoutThreeLeftAndOther","thirdWidth","layoutThreeTopAndOther","layoutThree","w","h0","h","w0","w2","w1","h1","layoutFourTopAndOther","h2","layoutFourLeftAndOther","layoutFour","containerStyle","worker","initializationDeferred","Deferred","IS_TRANSLATION_SUPPORTED","createConnector","Worker","CHAT_STATS","throttledMakeChatDecision","throttle","updateChatDetectedLanguage","chatStats","messagesChecked","translatableCount","detectableCount","languageOccurrences","isTranslatable","occurrences","QUICK_REACTION_AREA_WIDTH","QUICK_REACTION_AREA_HEIGHT","GROUP_MESSAGE_HOVER_ATTRIBUTE","useOuterHandlers","selectMessage","isInSelectMode","canReply","isContextMenuShown","quickReactionRef","shouldHandleMouseLeave","getIsMessageListReady","sendDefaultReaction","isQuickReactionVisible","markQuickReactionVisible","unmarkQuickReactionVisible","isSwiped","markSwiped","unmarkSwiped","doubleTapTimeoutRef","handleMouseMove","quickReactionContainer","quickReactionX","quickReactionWidth","quickReactionY","quickReactionHeight","isVisibleX","isVisibleY","excludedClosestSelector","preventMessageInputBlur","clearInterval","contains","getIsKeyboardVisible","handleTap","handleDoubleClick","handleContentDoubleClick","handleSendQuickReaction","lastGroupElement","getLastElementInDocumentGroup","handleDocumentGroupMouseLeave","handleDocumentGroupMouseEnter","nextElementSibling","EmbeddedStory","isFullStory","isExpiredStory","isVideoStory","pictogramUrl","handleFastClick","peerColor","TopicChip","getTopicColorCssVariable","blankSrc","withSelectControl","WrappedComponent","ownProps","clickArg","noSelectControls","selectIsMessageSelected","toggleMessageSelection","handleMessageSelect","withShift","newProps","dims","PhotoWithSelect","Photo","VideoWithSelect","Video","activeDownloads","selectActiveDownloads","uploadsByKey","fileUploads","byMessageKey","Album","hasCustomAppendix","albumLayout","cancelUploadMedia","mainMessage","mediaCount","handlePaidMediaClick","handleAlbumMessageClick","handleCancelUpload","containerWidth","containerHeight","renderingPaidMedia","paidPhotoOrPreview","paidVideoOrPreview","fileUpload","getMessageKey","selectCanAutoLoadMedia","canAutoPlay","selectCanAutoPlayMedia","shouldAffectAppendix","mediaType","getIsDownloading","useAnimatedEmoji","soundId","activeEmojiInteractions","preferredSize","interactWithAnimatedEmoji","sendEmojiInteraction","sendWatchingEmojiInteraction","audioRef","soundMediaData","buildStyle","IS_ELECTRON","interactions","startedInteractions","sendInteractionBunch","startSize","isReversed","performance","interactionMessageId","customEmojiId","selectAnimatedEmojiEffect","selectAnimatedEmojiSound","noPlay","AnimatedCustomEmoji","getCustomEmojiSize","LIKE_STICKER_ID","isBig","withSharedAnimation","AnimatedEmoji","forceLoadPreview","quality","noLoad","forcePreview","CommentButton","isCustomShape","asActionButton","shouldRenderLoading","useAsyncRendering","originMessageId","recentReplierIds","originChannelId","isComments","recentRepliers","hasUnread","commentsText","getContactName","contact","firstName","lastName","Contact","openAddContactDialog","isRegistered","canAddContact","getCanAddContact","handleOpenChat","handleAddContact","ContextMenuContainer","COLOR","FactCheck","factCheck","isToggleDisabled","cutoutRef","isCollapsible","setIsCollapsed","useCollapsibleLines","countryLocalized","countryCode","canExpand","handleExpand","handleToggle","prev","Separator","Game","canAutoLoadMedia","game","getGamePreviewPhotoHash","getGamePreviewVideoHash","videoBlobUrl","handleGameClick","inlineButtons","giveaway","channelIds","giftSticker","selectGiftStickerForDuration","months","Giveaway","isLoadingInfo","giveawayInfo","setGiveawayInfo","giveawayResults","isResults","untilDate","prizeDescription","quantity","winnersCount","hasEnded","translatedNames","countries","isoToEmoji","handlePeerClick","channelId","handleShowInfoClick","callApi","handleCloseInfo","giveawayInfoTitle","AnimatedIconWithPreview","PartyPopper","winnerIds","PeerChip","withPeerColors","renderGiveawayResultsDescription","formatDateTimeToString","renderGiveawayDescription","isOnlyConfirm","isResultsInfo","isApiPeerChat","endDate","formatDateAtTime","otherChannelsCount","otherChannelsString","isSeveral","firstKey","giveawayDuration","firstParagraph","additionalPrizes","secondKey","secondParagraph","activatedCount","isRefunded","isWinner","lastParagraph","disallowedCountry","adminDisallowedChatId","disallowedChat","disallowedChatTitle","joinedTooEarlyDate","isParticipating","renderGiveawayInfo","InlineButtons","RE_TME_LINK","renderIcon","Invoice","forcedWidth","invoice","getMessageInvoice","currency","isTest","photoUrl","getWebDocumentHash","withBlurredBackground","useBlurredMediaThumbRef","prevShouldAffectAppendix","contentEl","MESSAGE_CONTENT_SELECTOR","getCustomAppendixBg","appendixBg","CUSTOM_APPENDIX_ATTRIBUTE","crossOrigin","forceAspectRatio","formatCurrency","InvoiceMediaPreview","openInvoice","loadExtendedMedia","refreshExtendedMedia","isExtendedMedia","spoiler","buy","lock","formatCurrencyAsString","TIMER_CIRCUMFERENCE","TIMER_RADIUS","PI","MOVE_THRESHOLD","PinSvg","cx","cy","Location","countdownRef","location","getMessageLocation","serverTime","isGeoLiveExpired","secondsBeforeEnd","period","point","setPoint","shouldRenderText","prevMediaBlobUrl","mapBlobUrl","accuracyRadiusPx","accuracyRadius","lat","getMetersPerPixel","updateCountdown","countdownEl","svgEl","lastElementChild","timerEl","firstElementChild","timeLeft","strokeDashOffset","formatCountdownShort","long","pinClassName","heading","getVenueColor","venueType","iconSrc","getVenueIconUrl","mapPin","renderPin","renderOverlay","formatLocationLastUpdate","editDate","renderInfo","MessageMeta","signature","withReactionOffset","repliesThreadInfo","renderQuickReactionButton","noReplies","isTranslated","withFullDate","onTranslationClick","onEffectClick","onOpenThread","paidMessageStars","markActivated","handleImportedClick","dateTitle","createDateTime","timeFormat","editDateTime","isEdited","forwardedDateTime","savedDate","viewsTitle","viewsCount","pluralValue","forwardsCount","repliesTitle","time","isImported","containerClassName","isVideoProcessingPending","MessagePhoneCall","phoneCall","reason","isMissed","isCancelled","handleCall","formattedDuration","formatTimeDuration","timeFormatted","getCallMessageKey","PaidMediaOverlay","children","isClickable","isBought","starsAmount","getPercentage","total","toFixed","PollOption","answer","voteResults","totalVoters","maxVotersCount","correctResults","option","correctAnswer","showIcon","isChosen","answerPercent","votersCount","finalPercent","setFinalPercent","lineWidth","isAnimationDoesNotStart","lineStyle","Poll","onSendVote","loadMessage","openPollResults","summary","isSubmitting","setIsSubmitting","chosenOptions","setChosenOptions","wasSubmitted","setWasSubmitted","closePeriod","setClosePeriod","closed","closeDate","timerCircleRef","hasVoted","canVote","canViewResult","isPublic","isMultiple","multipleChoice","recentVoterIds","isCorrect","answers","hidden","quiz","chosen","timer","recentVoters","handleRadioChange","handleCheckboxChange","handleVoteClick","handleViewResultsClick","showSolution","solution","solutionEntities","question","getPollTypeString","CheckboxGroup","loadingOptions","isRound","RadioGroup","loadingOption","getReadableVotersCount","Sticker","withEffect","onStopEffect","effectRef","hasEffect","isMirrored","IS_WEBM_SUPPORTED","canLoad","mediaHashEffect","effectBlobUrl","isPlayingEffect","startPlayingEffect","stopPlayingEffect","handleEffectEnded","shouldRenderEffect","useOverlayPosition","anchorRef","overlayRef","openModal","isMemojiSticker","getStickerDimensions","fullMediaHash","fullMediaClassName","AnimatedSticker","onEnded","connectionState","BaseStory","lastReadId","selectPeerStories","targetUser","thumbUrl","QUICK_REACTION_SIZE","EXTRA_SPACE_FOR_REACTIONS","focusedMessage","activeReactions","loadingThread","withSenderName","isLastInDocumentGroup","isFirstInGroup","viaBotId","transcriptionId","viaBusinessBotId","isGroup","webPageStoryData","webPageStory","forceSenderName","isAnonymousOwnMessage","canShowSender","originSender","botSender","senderAdminMember","adminMembersById","isThreadTop","getMessageReplyInfo","storyReplyPeerId","storyReplyId","getStoryReplyInfo","shouldHideReply","replyMessage","selectReplyMessage","forwardHeader","replyMessageSender","selectSenderFromHeader","replyMessageForwardSender","replyMessageChat","isReplyPrivate","isChatPublic","replyStory","storySender","selectUploadProgress","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","isResizingContainer","quote","focusedQuote","scrollTargetPosition","middleSearch","selectCurrentMiddleSearch","highlight","isHashtag","getMessageSingleRegularEmoji","animatedCustomEmoji","getMessageSingleCustomEmoji","selectCanReplyToMessage","downloadableMedia","getMessageDownloadableMedia","commentsMessage","isInDocumentGroup","documentGroupFirstMessageId","selectMessageIdsByGroupId","reactionMessage","hasUnreadReaction","unreadReactions","hasTopicChip","messageTopic","selectChatTranslations","requestedTranslationLanguage","selectRequestedMessageTranslationLanguage","areTranslationsEnabled","hasActiveReactions","senderBoosts","boostsApplied","chatLevel","boostLevel","transcribeMinLevel","appConfig","groupTranscribeLevelMin","canTranscribeVoice","viaBusinessBot","selectPollFromMessage","maxTimestamp","selectMessageTimestampableDuration","lastPlaybackTimestamp","selectMessageLastPlaybackTimestamp","selectIsMessageProtected","isChatProtected","selectIsChatProtected","isGroupSelected","selectIsDocumentGroupSelected","isPinnedList","canAutoPlayMedia","shouldLoopStickers","selectShouldLoopStickers","defaultReaction","selectDefaultReaction","transcriptions","isPending","transcribedText","shouldDetectChatLanguage","selectShouldDetectChatLanguage","hasLinkedChat","linkedChatId","withAnimatedEffects","isLoadingComments","isCommentsInfo","loadingChatId","loadingMessageId","tags","savedReactionTags","Message","observeIntersectionForBottom","noComments","appearanceOrder","isJustAdded","isLastInGroup","isFirstInDocumentGroup","isLastInList","memoFirstUnreadIdRef","onIntersectPinnedMessage","disableContextMenuHint","animateUnreadReaction","markMentionsRead","bottomMarkerRef","setTranscriptionHidden","isPlayingSnapAnimation","setIsPlayingSnapAnimation","isPlayingDeleteAnimation","setIsPlayingDeleteAnimation","requestEffect","hideEffect","contextMenuTarget","noAppearanceAnimation","markShown","MESSAGE_APPEARANCE_DELAY","noMountTransition","viewportPinnedIdsToRemove","hasMessageReply","isReplyToMessage","paidMediaPhoto","paidMediaVideo","messageReplyInfo","storyReplyInfo","withVoiceTranscription","hasStoryReply","hasThread","getMessageCustomShape","hasAnimatedEmoji","hasReactions","areReactionsEmpty","asForwarded","isLinkedChannelPost","isMention","canShowSenderBoosts","isStoryMention","isAlbum","msg","isInDocumentGroupNotFirst","isInDocumentGroupNotLast","canShowActionButton","canForward","isForwardingAllowed","canFocus","fromMessageId","hasFactCheck","hasForwardedCustomShape","hasSubheader","childMessageIds","avatarPeer","messageColorPeer","senderPeer","handleSenderClick","handleViaBotClick","handleReplyClick","handleMediaClick","handleDocumentClick","handleAudioPlay","handleAlbumMediaClick","handlePhotoMediaClick","handleVideoMediaClick","handleMetaClick","handleTranslationClick","handleOpenThread","handleReadMedia","handleVoteSend","handleGroupForward","handleForward","handleFocus","handleFocusForwarded","handleDocumentGroupSelectAll","handleTopicChipClick","handleStoryClick","isTranslatingChat","openAudioPlayer","markMessagesRead","sendPollVote","openForwardMenu","searchChatMediaMessages","replyToTopId","channelPostId","focusMessageId","replyMessageId","ScheduledInline","openMediaViewerWithPhotoOrVideo","withDynamicLoading","currentMediaMessageId","videoContent","webpageTimestamp","albumMessageId","albumIndex","ScheduledAlbum","originalChatId","savedFromPeerId","groupedChatId","selectWithGroupedId","useInnerHandlers","handleEffectClick","isPartialAlbumDelete","isDeleting","textMessage","hasMultipleCaptions","captionMessage","hasTextContent","hasMessageText","hasUnreadMention","getIsReady","setLanguage","threshold","promise","request","detectLanguage","useTextLanguage","LimitedMap","previousMetadata","processMessageMetadata","useDetectChatLanguage","isTranslationPending","previousTranslatedText","currentTranslatedText","isMediaWithCommentButton","withCommentButton","withQuickReactionButton","hasOutsideReactions","hasCommentCounter","hasCommentButton","hasActionButton","isGeoLiveActive","peerColorClass","isInvertibleMedia","classNames","MESSAGE_CONTENT_CLASS_NAME","isMedia","isMediaWithNoText","hasInlineKeyboard","isViaBot","hasFooter","emojiOnlyCount","EMOJI_SIZES","gift","buildContentClassName","withAppendix","paidMessageStarsInMeta","metaPosition","reactionsPosition","quickReactionPosition","useFocusMessage","viaBusinessBotTitle","getPeerFullTitle","canShowPostAuthor","postAuthorTitle","useMessageResizeObserver","bottomMarker","isElementInViewport","unreadMentionIds","extraPadding","sizeCalculations","calculatedWidth","contentWidth","reactionsMaxWidth","noMediaCorners","previewWidth","previewHeight","calculateDimensionsForMessageMedia","fromOwnMessage","MIN_MEDIA_WIDTH_WITH_TEXT","getMinMediaWidth","renderMessageText","isForAnimation","MessageText","messageOrStory","canBeEmpty","ReactionStaticEmoji","renderReactionsAndMeta","meta","Reactions","metaChildren","noRecentReactors","renderWebPage","backgroundEmojiId","onAudioPlay","onDocumentClick","onCancelMediaTransfer","renderInvertibleMediaContent","messageText","shouldRenderSenderName","renderForwardTitle","renderSenderName","shouldSkipRenderForwardTitle","shouldSkipRenderAdminTitle","senderEmojiStatus","senderIsPremium","shouldRenderForwardAvatar","hasBotSenderUsername","senderColor","EMOJI_STATUS_LOOP_LIMIT","fakeType","FakeIcon","forwardAuthor","onCopy","onDoubleClick","onMouseMove","textContentClass","shouldReadMedia","RoundVideo","Story","StoryMention","footerClass","hasContentAfterText","isMetaInText","renderInvertedMediaContent","MessageAppendix","isOutside","targetHref","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","isForMessageEffect","effectClassName","isInWebPage","isPaidPreview","useMediaTransition","showSpoiler","wasLoadDisabled","spinnerRef","downloadButtonRef","shouldRenderDownloadButton","isAllowed","isSmall","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","withAnimation","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","stopPrevious","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","defaultMuted","isPriority","onTimeUpdate","SponsoredMessageContextMenu","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","sponsorInfo","canReport","SponsoredMessageContextMenuContainer","onItemClick","openAboutAdsModal","reportSponsoredMessage","hideSponsoredMessages","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","handleReportSponsoredMessage","randomId","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","isFullMediaPreloaded","hasThumb","isInline","isUnsupported","useUnsupportedMedia","previewMediaHash","isPreviewPreloaded","canLoadPreview","shouldHidePreview","previewRef","playButtonRef","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","WebPageUniqueGift","stickerRef","backdrop","model","pattern","getGiftAttributes","backgroundColors","centerColor","edgeColor","RadialPatternBackground","patternColor","patternIcon","openUrl","openTelegramLink","stickersRef","handleContainerClick","handleOpenTelegramLink","hasCustomColor","isWithTextColor","documents","linkTimestamp","mediaSize","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","isEmoji","quickButtonTitle","isArticle","isSquarePhoto","isMediaInteractive","EmojiIconBackground","emojiDocumentId","shouldSkipModal","caption","isRectangular","noForcedUpperCase","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","requestMediaWorker","MAX_WORKERS","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","RADIUS_RATIO","lastWorkerIndex","thumbData","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","ceil","transferables","useOffscreenCanvasBlur","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","anchorCenterY","anchorBottomY","messagesContainer","selectCurrentChat","DeleteMemberModal","deleteChatMember","handleDeleteChatMember","textParts","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderBalanceCell","usdRate","integerTonPart","decimalTonPart","integerUsdPart","decimalUsdPart","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","part","percentage","renderOverviewItemValue","change","isChangeNegative","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","active","archived","isClosing","closing","useHorizontalScroll","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","avatar","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","drawImage","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","isArray","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideos","getPreloadMediaHashes","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","effectSize","shouldPause","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","temperatureC","backgroundColor","convertToRGBA","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","withTranslucentThumb","navigator","formatTemperature","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","coordinates","pixelRadius","pixelWidth","pixelHeight","isStoryPlaying","closeStoryViewer","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","handleMediaAreaClick","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","adminId","selectCanInviteToActiveGroupCall","DEFAULT_LIMITS","limits","selectPremiumLimit","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","interval","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","audioProxy","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","markChatMessagesRead","markChatUnread","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","loadStoryThrottled","throttled","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","isLongPressActive","isPressed","timerId","canProcessEvent","touches","cancel","onMouseUp","onTouchStart","onTouchEnd","useMarkScrolled","selector","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","ConnectorClass","channel","throttleWithTickEnd","payloads","pendingPayloads","pendingTransferables","postMessage","postMessageOnTickEnd","messageData","requestStates","requestStatesByCallback","restMessageData","requestState","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","postMessagesOnTickEnd","connector","handleMessage","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","parseMessageKey","splitTrackId","messageKey","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","click","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","LUMA_THRESHOLD","outputType","Image","onload","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","averageColor","getAverageColor","fillColor","getColorLuma","res","ctx2D","fillRect","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","globalCompositeOperation","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","providerUrl","cos","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","cloneContents","caretRange","endContainer","endOffset","Node","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}