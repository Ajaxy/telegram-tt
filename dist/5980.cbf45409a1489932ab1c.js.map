{"version":3,"file":"5980.cbf45409a1489932ab1c.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/PeerColorWrapper.tsx","webpack://telegram-t/./src/components/common/PeerColorWrapper.module.scss?b340","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useInterval.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/emoji/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressieveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media!.duration) : formatMediaDuration(media!.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"size-micro\":\"bnYA0Wm9\",\"sizeMicro\":\"bnYA0Wm9\",\"size-mini\":\"ZGpPX4Wb\",\"sizeMini\":\"ZGpPX4Wb\",\"size-tiny\":\"ufyZRVf5\",\"sizeTiny\":\"ufyZRVf5\",\"size-small\":\"UA2exR6e\",\"sizeSmall\":\"UA2exR6e\",\"size-small-mobile\":\"PTbjjZjF\",\"sizeSmallMobile\":\"PTbjjZjF\",\"size-medium\":\"jncPG8PA\",\"sizeMedium\":\"jncPG8PA\",\"size-large\":\"pd70AQAO\",\"sizeLarge\":\"pd70AQAO\",\"size-huge\":\"ceLzD19m\",\"sizeHuge\":\"ceLzD19m\",\"size-jumbo\":\"KpwfP5mr\",\"sizeJumbo\":\"KpwfP5mr\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { ApiDraft, MessageListType } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({ isSchedule: type === 'scheduled', message: editedMessage });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  canEditMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useOldLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType } from '../../../global/types';\nimport type { ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState, WebPageMediaSize } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const hasMediaSizeOptions = webPagePreview?.hasLargeMedia;\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ChatInput.EditLink.LargerMedia')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang(('ChatInput.EditLink.SmallerMedia'))}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList, MessageListType, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition, InlineBotSettings, ISettings, ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNoWebPage,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    if (chatId && chat && !sendAsPeerIds && isReady && (isChatSuperGroup(chat) || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    const effectId = effect?.id;\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n      if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        isInvertedMedia,\n        effectId,\n        webPageMediaSize: attachmentSettings.webPageMediaSize,\n        webPageUrl: hasWebPagePreview ? webPagePreview!.url : undefined,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n    clearDraft({\n      chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n    });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ sendCompressed, sendGrouped, isInvertedMedia }, scheduledAt, currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      sendSilent({ sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : isInStoryViewer ? lang('StoryRepliesLocked') : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <Icon name=\"schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiPeerColor } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getApiPeerColorClass, getPeerColorClass } from './helpers/peerColor';\n\nimport EmojiIconBackground from './embedded/EmojiIconBackground';\n\nimport styles from './PeerColorWrapper.module.scss';\n\ninterface OwnProps extends React.HTMLAttributes<HTMLDivElement> {\n  peer?: ApiPeer;\n  peerColor?: ApiPeerColor;\n  noUserColors?: boolean;\n  shoudReset?: boolean;\n  className?: string;\n  emojiIconClassName?: string;\n  children: React.ReactNode;\n}\n\nfunction PeerColorWrapper({\n  peer, peerColor, noUserColors, shoudReset, className, emojiIconClassName, children, ...otherProps\n}: OwnProps) {\n  const color = peerColor || peer?.color;\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        peer && getPeerColorClass(peer, noUserColors, shoudReset),\n        peerColor && getApiPeerColorClass(peerColor),\n        className,\n      )}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    >\n      {color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          className={emojiIconClassName}\n          emojiDocumentId={color.backgroundEmojiId}\n        />\n      )}\n      {children}\n    </div>\n  );\n}\n\nexport default memo(PeerColorWrapper);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nRjVJOQv\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  profilePhotos,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ChatTranslatedMessages } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getSenderTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getSenderTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { useThrottleForHeavyAnimation } from '../../../hooks/useHeavyAnimation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useOldLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerMediaHash(customEmoji, 'preview') : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  const preloadAfterHeavyAnimation = useThrottleForHeavyAnimation(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  useEffect(() => {\n    preloadAfterHeavyAnimation();\n  }, [preloadAfterHeavyAnimation]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  const updateCanvasAfterHeavyAnimation = useThrottleForHeavyAnimation(updateCanvas, [updateCanvas]);\n\n  useEffect(() => {\n    updateCanvasAfterHeavyAnimation();\n  }, [emojiImage, lang.isRtl, customColor, updateCanvasAfterHeavyAnimation]);\n\n  const updateCanvasSize = useThrottleForHeavyAnimation((parentWidth: number, parentHeight: number) => {\n    requestMutation(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      canvas.width = parentWidth * dpr;\n      canvas.height = parentHeight * dpr;\n\n      canvas.style.width = `${parentWidth}px`;\n      canvas.style.height = `${parentHeight}px`;\n\n      updateCanvas();\n    });\n  }, [dpr]);\n\n  const handleResize = useThrottleForHeavyAnimation((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: OldLangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"sectionInfo\":\"IrqRJFxm\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUserFullInfo, ApiUsername,\n} from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { debounce } from '../../../util/schedulers';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    if (!chat) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      { hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n    };\n  },\n)(ChatExtra));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  groupStatetefulContent,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatetefulContent({ story: lastMessageStory }),\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { senderId, isOutgoing, forwardInfo } = lastMessage || {};\n    const actualSenderId = isSavedDialog ? forwardInfo?.fromId : senderId;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = actualSenderId ? selectPeer(global, actualSenderId) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = topics\n      && Object.values(topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (topics && !hasUnmutedUnreadTopics);\n  }, [topics, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction, groupStatetefulContent } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatetefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../global/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const oldLang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(mediaContent) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(mediaContent, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{oldLang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(oldLang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            oldLang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(oldLang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, oldLang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport generateUniqueId from '../../../util/generateUniqueId';\nimport { SVG_NAMESPACE } from '../../../util/svgController';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const svg = document.createElementNS(SVG_NAMESPACE, 'svg');\n  svg.setAttribute('class', styles.ghost);\n  svg.setAttribute('width', `${width}px`);\n  svg.setAttribute('height', `${height}px`);\n  svg.setAttribute('style', `left: ${x}px; top: ${y}px;`);\n  svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\n\n  const defs = document.createElementNS(SVG_NAMESPACE, 'defs');\n  svg.appendChild(defs);\n\n  const filter = createFilter(Math.min(width, height), seed);\n  filter.setAttribute('id', filterId);\n  defs.appendChild(filter);\n\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  g.setAttribute('filter', `url(#${filterId})`);\n  svg.appendChild(g);\n\n  const foreignObject = document.createElementNS(SVG_NAMESPACE, 'foreignObject');\n  foreignObject.setAttribute('class', styles.elementContainer);\n  foreignObject.setAttribute('width', `${width}px`);\n  foreignObject.setAttribute('height', `${height}px`);\n  g.appendChild(foreignObject);\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(smallestSide: number, baseSeed: number = 42) {\n  const filter = document.createElementNS(SVG_NAMESPACE, 'filter');\n  filter.setAttribute('x', '-150%');\n  filter.setAttribute('y', '-150%');\n  filter.setAttribute('width', '400%');\n  filter.setAttribute('height', '400%');\n  filter.setAttribute('color-interpolation-filters', 'sRGB');\n\n  const feTurbulence = document.createElementNS(SVG_NAMESPACE, 'feTurbulence');\n  feTurbulence.setAttribute('type', 'fractalNoise');\n  feTurbulence.setAttribute('baseFrequency', '0.5');\n  feTurbulence.setAttribute('numOctaves', '1');\n  feTurbulence.setAttribute('result', 'dustNoise');\n  feTurbulence.setAttribute('seed', baseSeed.toString());\n  filter.appendChild(feTurbulence);\n\n  const feComponentTransfer = document.createElementNS(SVG_NAMESPACE, 'feComponentTransfer');\n  feComponentTransfer.setAttribute('in', 'dustNoise');\n  feComponentTransfer.setAttribute('result', 'dustNoiseMask');\n  filter.appendChild(feComponentTransfer);\n\n  const feFuncA = document.createElementNS(SVG_NAMESPACE, 'feFuncA');\n  feFuncA.setAttribute('type', 'linear');\n  feFuncA.setAttribute('slope', '5');\n  feFuncA.setAttribute('intercept', '0');\n  feComponentTransfer.appendChild(feFuncA);\n\n  const feFuncAAnimate = document.createElementNS(SVG_NAMESPACE, 'animate');\n  feFuncAAnimate.setAttribute('attributeName', 'slope');\n  feFuncAAnimate.setAttribute('values', '5; 2; 1; 0');\n  feFuncAAnimate.setAttribute('dur', `${DURATION}ms`);\n  feFuncAAnimate.setAttribute('fill', 'freeze');\n  feFuncA.appendChild(feFuncAAnimate);\n\n  const feComposite = document.createElementNS(SVG_NAMESPACE, 'feComposite');\n  feComposite.setAttribute('in', 'SourceGraphic');\n  feComposite.setAttribute('in2', 'dustNoiseMask');\n  feComposite.setAttribute('operator', 'in');\n  feComposite.setAttribute('result', 'dustySource');\n  filter.appendChild(feComposite);\n\n  const feTurbulence2 = document.createElementNS(SVG_NAMESPACE, 'feTurbulence');\n  feTurbulence2.setAttribute('type', 'fractalNoise');\n  feTurbulence2.setAttribute('baseFrequency', '0.015');\n  feTurbulence2.setAttribute('numOctaves', '1');\n  feTurbulence2.setAttribute('result', 'displacementNoice1');\n  feTurbulence2.setAttribute('seed', (baseSeed + 1).toString());\n  filter.appendChild(feTurbulence2);\n\n  const feTurbulence3 = document.createElementNS(SVG_NAMESPACE, 'feTurbulence');\n  feTurbulence3.setAttribute('type', 'fractalNoise');\n  feTurbulence3.setAttribute('baseFrequency', '1');\n  feTurbulence3.setAttribute('numOctaves', '2');\n  feTurbulence3.setAttribute('result', 'displacementNoice2');\n  feTurbulence3.setAttribute('seed', (baseSeed + 2).toString());\n  filter.appendChild(feTurbulence3);\n\n  const feMerge = document.createElementNS(SVG_NAMESPACE, 'feMerge');\n  feMerge.setAttribute('result', 'combinedNoise');\n  filter.appendChild(feMerge);\n\n  const feMergeNode1 = document.createElementNS(SVG_NAMESPACE, 'feMergeNode');\n  feMergeNode1.setAttribute('in', 'displacementNoice1');\n  feMerge.appendChild(feMergeNode1);\n\n  const feMergeNode2 = document.createElementNS(SVG_NAMESPACE, 'feMergeNode');\n  feMergeNode2.setAttribute('in', 'displacementNoice2');\n  feMerge.appendChild(feMergeNode2);\n\n  const feDisplacementMap = document.createElementNS(SVG_NAMESPACE, 'feDisplacementMap');\n  feDisplacementMap.setAttribute('in', 'dustySource');\n  feDisplacementMap.setAttribute('in2', 'combinedNoise');\n  feDisplacementMap.setAttribute('scale', '0');\n\n  feDisplacementMap.setAttribute('xChannelSelector', 'R');\n  feDisplacementMap.setAttribute('yChannelSelector', 'G');\n  filter.appendChild(feDisplacementMap);\n\n  const feDisplacementMapAnimate = document.createElementNS(SVG_NAMESPACE, 'animate');\n  feDisplacementMapAnimate.setAttribute('attributeName', 'scale');\n  feDisplacementMapAnimate.setAttribute('values', `0; ${smallestSide * 3}`);\n  feDisplacementMapAnimate.setAttribute('dur', `${DURATION}ms`);\n  feDisplacementMapAnimate.setAttribute('fill', 'freeze');\n  feDisplacementMap.appendChild(feDisplacementMapAnimate);\n\n  return filter;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {lang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import {\n  type RefObject,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n} : {\n  ref?: RefObject<RefType | null>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  // eslint-disable-next-line no-null/no-null\n  const localRef = useRef<RefType>(null);\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <i ref={downloadButtonRef} className=\"icon icon-download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <i className=\"icon icon-download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type {\n  ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  message: ApiSponsoredMessage;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenu: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = message.sponsorInfo || !shouldSkipAbout || message.canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {message.sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(message.canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {message.canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredMessageContextMenu from './SponsoredMessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsoredMessage,\n    hideSponsoredMessages,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({ chatId: message.chatId });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsoredMessages();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsoredMessage({ peerId: message.chatId, randomId: message.randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredMessageContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        message={message}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !shouldHidePreview);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i ref={playButtonRef} className=\"icon icon-large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n  isEditing?: boolean;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n  isEditing,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, !hasCustomColor);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n    mediaSize,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = (width === height || mediaSize === 'small') && mediaSize !== 'large';\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', !inPreview && 'WebPage-text_interactive')}\n            onClick={!inPreview ? () => openUrl({ url, shouldSkipModal: true }) : undefined}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{lang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'lng_view_button_boost';\n    case 'telegram_stickerset':\n      return 'lng_view_button_stickerset';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <i className=\"icon icon-down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n  ApiChannelStatistics |\n  ApiGroupStatistics |\n  ApiPostStatistics |\n  ApiBoostStatistics |\n  ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}<span className={styles.decimalPart}>.{decimalTonPart}</span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ ${integerUsdPart}<span className={styles.decimalUsdPart}>.{decimalUsdPart}</span>\n        </span>\n        <h3 className={styles.tableHeading}>{lang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n  const { balances, usdRate } = (statistics as ApiChannelMonetizationStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressieveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element!.clientWidth!);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url': {\n            const isShiny = isActive && (mediaArea.type !== 'channelPost');\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","import type { ApiLimitType, GlobalState } from '../types';\n\nimport { DEFAULT_LIMITS } from '../../config';\nimport { selectIsCurrentUserPremium } from './users';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useInterval(callback: NoneToVoidFunction, delay?: number, noFirst = false) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (delay === undefined) {\n      return undefined;\n    }\n\n    const id = setInterval(() => savedCallback(), delay);\n    if (!noFirst) savedCallback();\n\n    return () => clearInterval(id);\n  }, [delay, noFirst]);\n}\n\nexport default useInterval;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useCallback, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  }, [onStart, threshold]);\n\n  const cancel = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd, onClick]);\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressieveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/windowEnvironment';\n\ntype ElementType = HTMLElement;\ntype RefType = {\n  current: ElementType | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: ElementType) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import EMOJI_REGEX from '../../lib/twemojiRegex';\nimport fixNonStandardEmoji from './fixNonStandardEmoji';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 code points per one emoji.\n\nexport default function parseEmojiOnlyString(text: string): number | false {\n  const standardizedText = fixNonStandardEmoji(text);\n  const lines = standardizedText.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const totalCount = countIfEmojiOnly(textWithoutNewlines);\n  if (!totalCount || totalCount > DETECT_UP_TO) {\n    return false;\n  }\n\n  // Calculate max emoji count per column or line. Used in UI to determine the size of the emoji.\n  let max = lines.length;\n  for (const line of lines) {\n    const count = countIfEmojiOnly(line);\n    if (count === false) {\n      return false;\n    }\n    if (count > max) {\n      max = count;\n    }\n  }\n\n  return max;\n}\n\nfunction countIfEmojiOnly(line: string): false | number {\n  const iterator = line.matchAll(EMOJI_REGEX);\n  let count = 0;\n  let currentIndex = 0;\n\n  for (const match of iterator) {\n    if (match.index !== currentIndex) {\n      return false;\n    }\n\n    count++;\n    currentIndex = match.index + match[0].length;\n  }\n\n  if (currentIndex !== line.length) {\n    return false;\n  }\n\n  return count;\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","onPaneStateChange","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","isRendering","ref","shouldRender","useHeaderPane","isOpen","onStateChange","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","start","end","style","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","mediaSource","isVoice","isSeeking","useRef","isRtl","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","useMedia","ApiMediaFormat","BlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","useLastCallback","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","i","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","current","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","originMessage","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","ariaLabel","backgroundImage","nonInteractive","Icon","name","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","DEFAULT_LIMIT","limit","badgeText","renderingBadgeText","styles","root","peer","Avatar","avatar","badge","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","add","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","substring","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","text","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","Set","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","setTimeout","pause","props","AttachmentModal","useModuleLoader","Bundles","Extra","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","canEditMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","useFlag","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","selectCanAnimateInterface","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","oldLang","useLang","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","isSmallerMedia","webPageMediaSize","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","hasMediaSizeOptions","hasLargeMedia","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","_ref5","storyId","chatBot","isSystemBot","selectBot","isChatWithBot","isChatWithUser","isUserId","userFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePreviousDeprecated","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","useDraft","resetComposer","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","has","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","webPageUrl","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","_ref4","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","shouldPreserveInput","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","emoticon","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","BotMenuButton","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","allowDisabledClick","noFastClick","MessageEffect","shouldPlay","onStop","CustomSendMenu","canSchedule","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","isSavedDialog","isPrivateChat","user","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","thumbDataUri","getMediaThumbUri","localBlobUrl","previewBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","src","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","selectTopic","messagesCount","selectThreadMessagesCount","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","DotAnimation","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","Keys","DEFAULT_TEXT","description","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","peerColor","noUserColors","shoudReset","emojiIconClassName","children","otherProps","_extends","getApiPeerColorClass","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","forceShowSelf","isSynced","userStatus","selectUserStatus","isSelf","customPeer","noFake","noVerified","adminMember","iconElement","rightElement","loadFullUser","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","currentTime","specialIcon","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","count","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isSystemBotChat","isReadDateRestrictedByMe","membersCount","renderStatus","ProfilePhoto","iconEmojiId","observeIntersectionForPlaying","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","NBSP","EmbeddedMessage","forwardSender","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","isFullVideo","getPictogramDimensions","srcUrl","shouldRenderVideo","renderPictogram","renderTextWithEntities","noLineBreaks","emojiSize","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","getStickerMediaHash","previewUrl","customColor","useDynamicColorListener","preloadAfterHeavyAnimation","useThrottleForHeavyAnimation","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasAfterHeavyAnimation","updateCanvasSize","parentWidth","parentHeight","handleResize","entry","contentRect","useResizeObserver","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","ListItem","iconClassName","multiline","isStatic","narrow","withColorTransition","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","birthday","isInSettings","openGiftModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","buildCollectionByKey","split","digit","effectSticker","randomEffect","random","hash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","forUserId","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","runDebounced","debounce","chatOrUserId","countryList","phoneCodes","phoneCodeList","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","areNotificationsEnabled","setAreNotificationsEnabled","prevPeerId","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","newAreNotificationsEnabled","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","withNodes","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","UserBirthday","Switcher","inactive","BusinessHours","usernameList","otherUsernames","usernameLinks","s","particleSize","onEnded","stickerHash","getStickerHashById","previewMediaData","paths","generateRandomDropPath","buildStyle","path","withSharedAnimation","onAnimationEnd","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","genericEffects","effectSize","shouldPause","stopActiveReaction","isCustom","availableReaction","r","centerIconId","centerIcon","assignedEffectId","aroundAnimation","assignedId","available","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","noVideoOnMobile","AnimatedSticker","animatedIcon","roundToNearestEven","play","onLoad","CustomEmojiEffect","withIconHeart","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","blankUrl","ChatFolderModal","MuteChatModal","lastMessageId","selectChatLastMessageId","lastMessage","selectChatLastMessage","senderId","isOutgoing","actualSenderId","fromId","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","topicsInfo","selectTopicsInfo","lastMessageStory","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","listedTopicIds","topics","topicsById","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","useEnsureMessage","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatetefulContent","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","handleReport","contextActions","useChatContextActions","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","ChatCallStatus","LastMessageMeta","hasMiniApp","DeleteChatModal","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","miniAppButton","pill","visiblePinnedElement","elements","renderContent","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","isMinimized","handler","actionExpand","actionHide","isHidden","compact","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","fluid","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","rect","currentTarget","clientY","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","deltaY","passive","useTopOverscroll","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onLoadMore","onDragLeave","UnconfirmedSession","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","EmptyFolder","canManageTopics","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","selectTopics","canDelete","selectCanDeleteTopic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","beginHeavyAnimation","waitForTransitionEnd","transform","onTransitionEnd","GroupChatInfo","HeaderActions","canExpandActions","isForForum","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","scrollX","scrollY","innerWidth","innerHeight","seed","filterId","SNAP_EFFECT_ID","generateUniqueId","svg","createElementNS","SVG_NAMESPACE","ghost","defs","smallestSide","baseSeed","feTurbulence","feComponentTransfer","feFuncA","feFuncAAnimate","feComposite","feTurbulence2","feTurbulence3","feMerge","feMergeNode1","feMergeNode2","feDisplacementMap","feDisplacementMapAnimate","createFilter","g","foreignObject","elementContainer","computedStyle","getComputedStyle","clone","getPropertyValue","snapContainer","once","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","screen","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","AttachBotIcon","shortName","isDisclaimerNeeded","withPortal","CustomSend","isQuick","isGeneric","svgRef","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","baseVal","useEffectOnce","onDrop","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","clearTimeout","DropTarget","AbsoluteVideo","constructor","videoUrl","options","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","onKeyDown","isComposing","altKey","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","mimeType","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","STARS_ICON_PLACEHOLDER","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","CLOSE_DURATION","RESIZE_THROTTLE","providedRef","withResizeObserver","setShouldRender","localRef","lastHeightRef","reset","useUnmountCleanup","handleUpdate","applyAnimationState","list","noTransition","cumulativeHeight","state","shiftPx","apply","setExtraStyles","zIndex","String","transition","isPanelOpen","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isMirrored","anchorRef","canLoad","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","useOverlayPosition","overlayRef","isForMessageEffect","effectClassName","messageText","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","isInWebPage","clickArg","isPaidPreview","mediaType","withBlurredBackground","useBlurredMediaThumbRef","useMediaTransition","showSpoiler","wasLoadDisabled","spinnerRef","useShowTransition","noMountTransition","withShouldRender","downloadButtonRef","shouldRenderDownloadButton","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","withAnimation","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","isPriority","onTimeUpdate","cx","cy","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","sponsorInfo","canReport","onItemClick","openAboutAdsModal","reportSponsoredMessage","hideSponsoredMessages","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","handleReportSponsoredMessage","randomId","SponsoredMessageContextMenu","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isInline","isUnsupported","useUnsupportedMedia","isPreviewPreloaded","canLoadPreview","shouldHidePreview","previewRef","playButtonRef","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","onAudioPlay","onCancelMediaTransfer","openUrl","openTelegramLink","stickersRef","handleMediaClick","handleContainerClick","handleQuickButtonClick","hasCustomColor","isWithTextColor","documents","mediaSize","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","PeerColorWrapper","BaseStory","shouldSkipModal","Photo","Video","Audio","Document","isEmoji","isRectangular","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","requestMediaWorker","MAX_WORKERS","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","RADIUS_RATIO","lastWorkerIndex","thumbData","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","ceil","transferables","useOffscreenCanvasBlur","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","anchorCenterY","anchorBottomY","messagesContainer","REACTION_SIZE","chosen","noAppearAnimation","isLocked","onSendPaidReaction","onShowPaidReactionModal","StarReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isForEffects","isWithPaidReaction","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortedReactions","sortReactions","unshift","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","hintText","parts","isPrimary","ReactionSelectorReaction","ReactionSelectorCustomReaction","submitText","initialValue","setText","handleTextChange","handleSubmit","isSlim","InputText","teactExperimentControlled","tag","isChosen","chosenClassName","withCount","withContextMenu","onRemove","editSavedReactionTag","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","handleRemoveClick","handleRenameTag","newTitle","shouldAvoidNegativePosition","own","tagText","tail","tailFill","PromptDialog","selectCurrentChat","deleteChatMember","handleDeleteChatMember","textParts","useAsyncRendering","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","statistics","isToncoin","renderBalanceCell","balance","usdRate","integerTonPart","decimalTonPart","toFixed","integerUsdPart","decimalUsdPart","period","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","part","percentage","change","isChangeNegative","renderOverviewItemValue","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","useHorizontalScroll","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideos","getPreloadMediaHashes","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","ownProps","restrictedEmoji","selectRestrictedEmoji","temperatureC","backgroundColor","convertToRGBA","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","withTranslucentThumb","navigator","formatTemperature","STORY_ASPECT_RATIO","prepareStyle","mediaWidth","rotation","coordinates","pixelRadius","pixelWidth","pixelHeight","isStoryPlaying","closeStoryViewer","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","channelId","handleMediaAreaClick","MediaAreaSuggestedReaction","MediaAreaWeather","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","phoneCall","adminId","selectCanInviteToActiveGroupCall","appConfig","DEFAULT_LIMITS","limits","selectPremiumLimit","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","noFirst","savedCallback","setInterval","clearInterval","resolver","deps","msOrSchedulerFn","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","DEFAULT_THRESHOLD","threshold","isLongPressActive","isPressed","timerId","canProcessEvent","touches","cancel","onMouseUp","onTouchStart","onTouchEnd","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","noLoad","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","ConnectorClass","channel","throttleWithTickEnd","payloads","pendingPayloads","pendingTransferables","postMessage","_len","_key","postMessageOnTickEnd","request","messageData","requestStates","requestStatesByCallback","restMessageData","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","postMessagesOnTickEnd","createConnector","worker","connector","handleMessage","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","click","DETECT_UP_TO","MAX_LENGTH","lines","fixNonStandardEmoji","textWithoutNewlines","countIfEmojiOnly","line","iterator","matchAll","EMOJI_REGEX","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","Image","onload","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","averageColor","getAverageColor","fillColor","getColorLuma","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","isElementInViewport","windowHeight","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","Worker","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}