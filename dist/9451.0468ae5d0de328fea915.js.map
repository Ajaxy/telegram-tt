{"version":3,"file":"9451.0468ae5d0de328fea915.js","mappings":"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","sources":["webpack://telegram-t/./src/components/mediaViewer/helpers/getViewableMedia.ts","webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/common/ReportAvatarModal.tsx","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedStoryForward.tsx","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/components/common/pickers/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/hooks/useDraggable.ts","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.module.scss?a30f","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/WebAppGridItem.module.scss?b350","webpack://telegram-t/./src/components/modals/webApp/WebAppGridItem.tsx","webpack://telegram-t/./src/components/modals/webApp/MoreAppsTabContent.module.scss?8058","webpack://telegram-t/./src/components/modals/webApp/MoreAppsTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.module.scss?c843","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.module.scss?b798","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/common/pickers/ItemPicker.tsx","webpack://telegram-t/./src/components/common/CountryPickerModal.module.scss?d5e6","webpack://telegram-t/./src/components/common/CountryPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayChannelPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.module.scss?6d7c","webpack://telegram-t/./src/components/main/premium/GiveawayUserPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayModal.module.scss?ac86","webpack://telegram-t/./src/components/main/premium/GiveawayModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.module.scss?9dc8","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/modals/suggestedStatus/SuggestedStatusModal.module.scss?77cd","webpack://telegram-t/./src/components/modals/suggestedStatus/SuggestedStatusModal.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.module.scss?1c77","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.module.scss?5f0b","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.tsx","webpack://telegram-t/./src/components/modals/aboutAds/AboutAdsModal.module.scss?b66d","webpack://telegram-t/./src/components/modals/aboutAds/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/AboutMonetizationModal.module.scss?2ca6","webpack://telegram-t/./src/components/common/AboutMonetizationModal.tsx","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.module.scss?bb6b","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.tsx","webpack://telegram-t/./src/components/modals/emojiStatusAccess/EmojiStatusAccessModal.module.scss?4803","webpack://telegram-t/./src/components/modals/emojiStatusAccess/EmojiStatusAccessModal.tsx","webpack://telegram-t/./src/components/modals/locationAccess/LocationAccessModal.tsx","webpack://telegram-t/./src/components/modals/locationAccess/LocationAccessModal.module.scss?843e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.module.scss?b26e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.tsx","webpack://telegram-t/./src/components/modals/reportModal/ReportModal.module.scss?3c2e","webpack://telegram-t/./src/components/modals/reportModal/ReportModal.tsx","webpack://telegram-t/./src/components/modals/preparedMessage/PreparedMessageModal.module.scss?94bc","webpack://telegram-t/./src/components/modals/preparedMessage/PreparedMessageModal.tsx","webpack://telegram-t/./src/components/modals/sharePreparedMessage/SharePreparedMessageModal.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/main/PermissionCheckboxList.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.module.scss?fbca","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.module.scss?a8aa","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.tsx","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.module.scss?68c3","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.module.scss?497f","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.tsx","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/BotAppResults.tsx","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultSponsored.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/common/paidMessage/PaidMessageSlider.tsx","webpack://telegram-t/./src/components/common/paidMessage/PaidMessagePrice.tsx","webpack://telegram-t/./src/components/left/settings/PremiumStatusItem.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.module.scss?16a3","webpack://telegram-t/./src/components/left/settings/PrivacyMessages.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsAcceptedGift.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyLastSeen.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.module.scss?6993","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.module.scss?f0ab","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearch.module.scss?725f","webpack://telegram-t/./src/components/middle/search/MiddleSearch.tsx","webpack://telegram-t/./src/hooks/events/useOutsideClick.ts","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.module.scss?0536","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.module.scss?695a","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/util/visibility/isFullyVisible.ts","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommand.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.module.scss?f347","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPost.module.scss?fea0","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPostMeta.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentStory.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.module.scss?96a0","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.module.scss?bbd6","webpack://telegram-t/./src/components/right/statistics/StatisticsMessagePublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsStoryPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/StoryStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageBot.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.ts","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.module.scss?717b","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.tsx","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.module.scss?de6c","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.tsx","webpack://telegram-t/./src/components/main/WebAppsCloseConfirmationModal.tsx","webpack://telegram-t/./src/components/modals/frozenAccount/FrozenAccountModal.tsx","webpack://telegram-t/./src/components/modals/frozenAccount/FrozenAccountModal.module.scss?86e3","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/components/common/PeerBadge.module.scss?732c","webpack://telegram-t/./src/components/common/PeerBadge.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.module.scss?7af2","webpack://telegram-t/./src/components/modals/common/TableAboutModal.module.scss?0459","webpack://telegram-t/./src/components/modals/common/TableAboutModal.tsx","webpack://telegram-t/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://telegram-t/./src/components/modals/common/TableInfoModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.module.scss?22c9","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.tsx"],"sourcesContent":["import type {\n  ApiMessage, ApiPeer, ApiPeerPhotos, ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { MediaViewerMedia } from '../../../types';\n\nimport { getMessageContent, isDocumentPhoto, isDocumentVideo } from '../../../global/helpers';\n\nexport type MediaViewerItem = {\n  type: 'message';\n  message: ApiMessage;\n  mediaIndex?: number;\n} | {\n  type: 'avatar';\n  avatarOwner: ApiPeer;\n  profilePhotos: ApiPeerPhotos;\n  mediaIndex: number;\n} | {\n  type: 'standalone';\n  media: MediaViewerMedia[];\n  mediaIndex: number;\n} | {\n  type: 'sponsoredMessage';\n  message: ApiSponsoredMessage;\n  mediaIndex?: number;\n};\n\ntype ViewableMedia = {\n  media: MediaViewerMedia;\n  isSingle?: boolean;\n};\n\nexport function getMediaViewerItem({\n  message, avatarOwner, profilePhotos, standaloneMedia, mediaIndex, sponsoredMessage,\n}: {\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  standaloneMedia?: MediaViewerMedia[];\n  sponsoredMessage?: ApiSponsoredMessage;\n  mediaIndex?: number;\n}): MediaViewerItem | undefined {\n  if (avatarOwner && profilePhotos) {\n    return {\n      type: 'avatar',\n      avatarOwner,\n      profilePhotos,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (standaloneMedia) {\n    return {\n      type: 'standalone',\n      media: standaloneMedia!,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (message) {\n    return {\n      type: 'message',\n      message,\n      mediaIndex,\n    };\n  }\n\n  if (sponsoredMessage) {\n    return {\n      type: 'sponsoredMessage',\n      message: sponsoredMessage,\n      mediaIndex,\n    };\n  }\n\n  return undefined;\n}\n\nexport default function getViewableMedia(params?: MediaViewerItem): ViewableMedia | undefined {\n  if (!params) return undefined;\n\n  if (params.type === 'standalone') {\n    return {\n      media: params.media[params.mediaIndex],\n      isSingle: params.media.length === 1,\n    };\n  }\n\n  if (params.type === 'avatar') {\n    const avatar = params.profilePhotos?.photos[params.mediaIndex];\n    if (avatar) {\n      return {\n        media: avatar,\n      };\n    }\n    return undefined;\n  }\n\n  const {\n    action, document, photo, video, webPage, paidMedia,\n  } = getMessageContent(params.message);\n\n  if (action?.type === 'chatEditPhoto' || action?.type === 'suggestProfilePhoto') {\n    return {\n      media: action.photo!,\n      isSingle: true,\n    };\n  }\n\n  if (document && (isDocumentPhoto(document) || isDocumentVideo(document))) {\n    return {\n      media: document,\n    };\n  }\n\n  if (webPage) {\n    const { photo: webPagePhoto, video: webPageVideo, document: webPageDocument } = webPage;\n    const isDocumentMedia = webPageDocument && (isDocumentPhoto(webPageDocument) || isDocumentVideo(webPageDocument));\n    const mediaDocument = isDocumentMedia ? webPageDocument : undefined;\n    const media = webPageVideo || mediaDocument || webPagePhoto;\n    if (media) {\n      return {\n        media,\n        isSingle: true,\n      };\n    }\n  }\n\n  if (paidMedia) {\n    const extendedMedia = paidMedia.extendedMedia[params.mediaIndex || 0];\n    if (!('mediaType' in extendedMedia)) {\n      const { photo: extendedPhoto, video: extendedVideo } = extendedMedia;\n      return {\n        media: (extendedPhoto || extendedVideo)!,\n      };\n    }\n  }\n\n  const media = video || photo;\n\n  if (media) {\n    return {\n      media,\n      isSingle: video?.isGif,\n    };\n  }\n\n  return undefined;\n}\n","import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport stopEvent from '../../../util/stopEvent';\nimport getOffsetToContainer from '../../../util/visibility/getOffsetToContainer';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n  mediaIndex?: number,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message, mediaIndex);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage, mediaIndex?: number,\n) {\n  const { container, mediaEl: toImage } = getNodes(origin, message, mediaIndex);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [\n      MediaViewerOrigin.Inline,\n      MediaViewerOrigin.ScheduledInline,\n      MediaViewerOrigin.Album,\n      MediaViewerOrigin.ScheduledAlbum,\n    ].includes(origin)\n    && !isMessageImageFullyVisible(toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n\n  const { top } = getOffsetToContainer(imageEl, messageListElement);\n\n  return top > messageListElement.scrollTop\n    && top + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage, index?: number) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      // eslint-disable-next-line max-len\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.PreviewMedia:\n      containerSelector = `#preview-media${index}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ChannelAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.StarsTransaction:\n      containerSelector = '.transaction-media-preview';\n      mediaSelector = index === 0 ? `.stars-transaction-media-${index} :is(img, video)` : undefined;\n      break;\n\n    case MediaViewerOrigin.SponsoredMessage:\n      containerSelector = '.Transition_slide-active > .MessageList .sponsored-media-preview';\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = mediaSelector\n    ? container?.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector) : undefined;\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.StarsTransaction:\n    case MediaViewerOrigin.PreviewMedia:\n    case MediaViewerOrigin.ChannelAvatar:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { IS_IOS, IS_PWA } from '../util/browser/windowEnvironment';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type { MediaViewerMedia } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getMediaFileSize,\n  getMediaFormat,\n  getMediaHash,\n  getMediaThumbUri,\n  getPhotoFullDimensions,\n  getProfilePhotoMediaHash,\n  getVideoDimensions,\n  getVideoProfilePhotoMediaHash,\n  isDocumentPhoto,\n  isDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\nconst FALLBACK_DIMENSIONS = AVATAR_FULL_DIMENSIONS;\n\ntype UseMediaProps = {\n  media?: MediaViewerMedia;\n  isAvatar?: boolean;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  media,\n  isAvatar,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const isPhotoAvatar = isAvatar && media?.mediaType === 'photo' && !media.isVideo;\n  const isVideoAvatar = isAvatar && media?.mediaType === 'photo' && media.isVideo;\n  const isDocument = media?.mediaType === 'document';\n  const isVideo = (media?.mediaType === 'video' && !media.isRound) || (isDocument && isDocumentVideo(media));\n  const isPhoto = media?.mediaType === 'photo' || (isDocument && isDocumentPhoto(media));\n  const isGif = media?.mediaType === 'video' && media.isGif;\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaOrAvatarHash = useMemo(() => (isFull?: boolean) => {\n    if (!media) return undefined;\n\n    if ((isPhotoAvatar || isVideoAvatar) && !isFull) {\n      return getProfilePhotoMediaHash(media);\n    }\n\n    if (isVideoAvatar && isFull) {\n      return getVideoProfilePhotoMediaHash(media);\n    }\n\n    return getMediaHash(media, isFull ? 'full' : 'preview');\n  }, [isVideoAvatar, isPhotoAvatar, media]);\n\n  const pictogramBlobUrl = useMedia(\n    media\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocument)\n    && getMediaHash(media, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaOrAvatarHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaOrAvatarHash(true),\n    undefined,\n    media && getMediaFormat(media, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = media && 'blobUrl' in media ? media.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && media && getMediaThumbUri(media));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    (!isVideoAvatar && !isVideo) ? (previewBlobUrl || pictogramBlobUrl || bestImageData) : undefined\n  );\n\n  const mediaSize = media && getMediaFileSize(media);\n\n  const isLocal = Boolean(localBlobUrl);\n\n  const dimensions = useMemo(() => {\n    if (isAvatar) {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n\n    if (isDocument) {\n      return media.mediaSize!;\n    }\n\n    if (isPhoto) {\n      return getPhotoFullDimensions(media);\n    }\n\n    if (isVideo) {\n      return getVideoDimensions(media);\n    }\n\n    return FALLBACK_DIMENSIONS;\n  }, [isAvatar, isDocument, isPhoto, isVideo, isVideoAvatar, media]);\n\n  return {\n    getMediaHash: getMediaOrAvatarHash,\n    media,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocument,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    mediaSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  peerId?: string;\n  photo?: ApiPhoto;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportAvatarModal: FC<OwnProps> = ({\n  isOpen,\n  peerId,\n  photo,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { reportProfilePhoto } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    reportProfilePhoto({\n      chatId: peerId, photo, reason: selectedReason, description,\n    });\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useOldLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (!peerId || !photo) {\n    return undefined;\n  }\n\n  const title = lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"narrow\"\n      title={title}\n    >\n      <RadioGroup\n        className=\"dialog-checkbox-group\"\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAvatarModal);\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useUnmountCleanup(() => {\n    setZoomChange(1);\n  });\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ActiveDownloads, MediaViewerOrigin, MessageListType } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport type { MenuItemProps } from '../ui/MenuItem';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getIsDownloading,\n  getMediaFilename,\n  getMediaFormat,\n  getMediaHash,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow, selectCurrentChat,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsMessageProtected,\n  selectTabState,\n} from '../../global/selectors';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  activeDownloads: ActiveDownloads;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  chat?: ApiChat;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  origin?: MediaViewerOrigin;\n};\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  mediaData?: string;\n  isVideo: boolean;\n  canUpdateMedia?: boolean;\n  canReportAvatar?: boolean;\n  activeDownloads?: ActiveDownloads;\n  onReportAvatar: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  item,\n  mediaData,\n  isVideo,\n  chat,\n  isChatProtected,\n  isProtected,\n  canReportAvatar,\n  canDelete,\n  canUpdate,\n  messageListType,\n  activeDownloads,\n  origin,\n  onReportAvatar: onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMedia,\n    cancelMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n    openMediaViewer,\n    openDeleteMessageModal,\n  } = getActions();\n\n  const isMessage = item?.type === 'message';\n\n  const { media } = getViewableMedia(item) || {};\n  const fileName = media && getMediaFilename(media);\n  const isDownloading = media && getIsDownloading(activeDownloads, media);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    media && getMediaHash(media, 'download'),\n    !isDownloading,\n    media && getMediaFormat(media, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (!media) return;\n\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      const message = item?.type === 'message' ? item.message : undefined;\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (item?.type !== 'avatar') return;\n    const { avatarOwner, profilePhotos, mediaIndex } = item;\n    const avatarPhoto = profilePhotos?.photos[mediaIndex]!;\n    if (isUserId(avatarOwner.id)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwner.id, photo: avatarPhoto });\n    }\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: avatarOwner.id,\n      mediaIndex: 0,\n      isAvatarView: true,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const lang = useOldLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModal() {\n    return (item?.type === 'avatar') ? (\n      <DeleteProfilePhotoModal\n        isOpen={isDeleteModalOpen}\n        onClose={closeDeleteModal}\n        onConfirm={onBeforeDelete}\n        profileId={item.avatarOwner.id}\n        photo={item.profilePhotos.photos[item.mediaIndex!]}\n      />\n    ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected || item?.type === 'standalone') {\n      return undefined;\n    }\n\n    return item?.type !== 'sponsoredMessage' && (isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <Icon name=\"download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <Icon name=\"download\" />\n      </Button>\n    ));\n  }\n\n  const openDeleteModalHandler = useLastCallback(() => {\n    if (item?.type === 'message' && chat) {\n      openDeleteMessageModal({\n        chatId: chat?.id,\n        messageIds: [item.message.id],\n        isSchedule: messageListType === 'scheduled',\n        onConfirm: onBeforeDelete,\n      });\n    } else {\n      openDeleteModal();\n    }\n  });\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (isMessage && item.message.isForwardingAllowed && !item.message.content.action && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReportAvatar) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModalHandler,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon as IconName}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModal()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {isMessage && item.message.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <Icon name=\"zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <Icon name=\"zoom-in\" />\n      </Button>\n      {canReportAvatar && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <Icon name=\"flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <Icon name=\"copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModalHandler}\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      {canDelete && renderDeleteModal()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    item, canUpdateMedia,\n  }): StateProps => {\n    const tabState = selectTabState(global);\n    const { origin } = tabState.mediaViewer;\n\n    const message = item?.type === 'message' ? item.message : undefined;\n    const avatarOwner = item?.type === 'avatar' ? item.avatarOwner : undefined;\n    const avatarPhoto = item?.type === 'avatar' && item.profilePhotos.photos[item.mediaIndex];\n\n    const chat = selectCurrentChat(global);\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isProtected = selectIsMessageProtected(global, message);\n    const activeDownloads = selectActiveDownloads(global);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarPhotoId);\n    const canDeleteAvatar = canUpdateMedia && Boolean(avatarPhoto);\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && Boolean(avatarPhoto) && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      activeDownloads,\n      isProtected,\n      chat,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      origin,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import { useUnmountCleanup } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useUnmountCleanup(() => {\n    setCurrentTime(0);\n  });\n\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  buttonText?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', buttonText, isForVideo, onClick, handleSponsoredClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const onButtonClick = useLastCallback(() => {\n    handleSponsoredClick();\n  });\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n      {Boolean(buttonText) && (\n        <Button\n          className={buildClassName('media-viewer-footer-content', 'media-viewer-button')}\n          size=\"default\"\n          color=\"primary\"\n          isRectangular\n          onClick={onButtonClick}\n        >\n          {buttonText}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useUnmountCleanup(() => {\n    setIsVideoWaiting(false);\n  });\n\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport { IS_ANDROID, IS_IOS } from '../../util/browser/windowEnvironment';\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => {\n    videoPreview?.destroy();\n    videoPreview = undefined;\n  };\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ingarEvU\",\"preview\":\"TqpEWfl3\",\"previewCanvas\":\"fKVz2lln\",\"previewTime\":\"bGiNvx5D\",\"previewTimeText\":\"mnkqvOMR\",\"track\":\"Od9ZSc1U\",\"buffered\":\"ANe2DKfp\",\"played\":\"igaGLblf\",\"seeking\":\"beUP6SqY\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { clamp, round } from '../../util/math';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useSignal,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { IconName } from '../../types/icons';\n\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useOldLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon: IconName = useMemo(() => {\n    if (volume === 0 || isMuted) return 'muted';\n    if (volume < 0.3) return 'volume-1';\n    if (volume < 0.6) return 'volume-2';\n    return 'volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <Icon name={isPlaying ? 'pause' : 'play'} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <Icon name={volumeIcon} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <Icon name=\"pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <Icon name={isFullscreen ? 'smallscreen' : 'fullscreen'} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/browser/windowEnvironment';\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useFullscreen from '../../hooks/window/useFullscreen';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  isClickDisabled?: boolean;\n  isSponsoredMessage?: boolean;\n  timestamp?: number;\n  handleSponsoredClick?: (isFromMedia?: boolean) => void;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n  isSponsoredMessage,\n  timestamp,\n  handleSponsoredClick,\n  onClose,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX <= bounds.left || e.clientX >= bounds.right\n      || e.clientY <= bounds.top || e.clientY >= bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(\n    !isBuffered && !isUnsupported, undefined, undefined, 'slow',\n  );\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransitionDeprecated(\n    IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow',\n  );\n\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  useEffect(() => {\n    if (!timestamp) return;\n    videoRef.current!.currentTime = timestamp;\n    setCurrentTime(timestamp);\n  }, [setCurrentTime, timestamp]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isSponsoredMessage) {\n      handleSponsoredClick?.(true);\n      onClose(e);\n    }\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, bufferingHandlers);\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseLeave={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <Icon name=\"play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isSponsoredMessage && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage, ApiSponsoredMessage,\n} from '../../api/types';\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION } from '../../config';\nimport {\n  selectIsMessageProtected, selectMessageTimestampableDuration, selectTabState,\n} from '../../global/selectors';\nimport { ARE_WEBCODECS_SUPPORTED } from '../../util/browser/globalEnvironment';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalEffect } from '../../hooks/useSignalEffect';\nimport useThrottledCallback from '../../hooks/useThrottledCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  item: MediaViewerItem;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  isMoving?: boolean;\n  onClose: () => void;\n  onFooterClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: () => void;\n};\n\ntype StateProps = {\n  textMessage?: ApiMessage | ApiSponsoredMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  threadId?: ThreadId;\n  timestamp?: number;\n  maxTimestamp?: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\nconst PLAYBACK_SAVE_INTERVAL = 1000;\n\nconst MediaViewerContent = ({\n  item,\n  isActive,\n  textMessage,\n  origin,\n  withAnimation,\n  isProtected,\n  volume,\n  playbackRate,\n  isMuted,\n  isHidden,\n  isMoving,\n  threadId,\n  timestamp,\n  maxTimestamp,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}: OwnProps & StateProps) => {\n  const { updateLastPlaybackTimestamp } = getActions();\n\n  const lang = useOldLang();\n\n  const isAvatar = item.type === 'avatar';\n  const isSponsoredMessage = item.type === 'sponsoredMessage';\n  const { media } = getViewableMedia(item) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    mediaSize,\n    loadProgress,\n  } = useMediaProps({\n    media, isAvatar, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n  const [getCurrentTime] = useCurrentTimeSignal();\n\n  const isOpen = Boolean(media);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const updatePlaybackTimestamp = useThrottledCallback(() => {\n    if (!isActive || !textMessage || media?.mediaType !== 'video') return;\n    if (media.duration < MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION) return;\n\n    const message = 'id' in textMessage ? textMessage : undefined;\n    const currentTime = getCurrentTime();\n    if (!currentTime || !message || message.isInAlbum) return;\n\n    // Reset timestamp if we are close to the end of the video\n    const newTimestamp = media.duration - currentTime > PLAYBACK_SAVE_INTERVAL / 1000 ? currentTime : undefined;\n    updateLastPlaybackTimestamp({ chatId: message.chatId, messageId: message.id, timestamp: newTimestamp });\n  }, [getCurrentTime, isActive, media, textMessage], PLAYBACK_SAVE_INTERVAL);\n\n  useSignalEffect(updatePlaybackTimestamp, [getCurrentTime]);\n\n  if (!media) return undefined;\n\n  if (item.type === 'avatar') {\n    if (!isVideoAvatar) {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={media.id}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={mediaSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n            isSponsoredMessage={isSponsoredMessage}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        </div>\n      );\n    }\n  }\n\n  const textParts = textMessage && (textMessage.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({\n      message: textMessage, maxTimestamp, threadId, forcePlayback: true, isForMediaViewer: true,\n    }));\n  const buttonText = textMessage && 'buttonText' in textMessage ? textMessage.buttonText : undefined;\n  const hasFooter = Boolean(textParts);\n  const posterSize = calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={media.id}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={mediaSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n          isSponsoredMessage={isSponsoredMessage}\n          handleSponsoredClick={handleSponsoredClick}\n          timestamp={timestamp}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          buttonText={buttonText}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n      origin,\n      timestamp,\n      threadId,\n    } = selectTabState(global).mediaViewer;\n    const message = item.type === 'message' ? item.message : undefined;\n    const sponsoredMessage = item.type === 'sponsoredMessage' ? item.message : undefined;\n    const textMessage = message || sponsoredMessage;\n\n    const maxTimestamp = message && selectMessageTimestampableDuration(global, message, true);\n\n    return {\n      origin,\n      textMessage,\n      isProtected: message && selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n      threadId,\n      timestamp,\n      maxTimestamp,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport { useFullscreenStatus } from '../../hooks/window/useFullscreen';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  chatId?: string;\n  threadId?: ThreadId;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  getNextItem: (from: MediaViewerItem, direction: number) => MediaViewerItem | undefined;\n  selectItem: (item: MediaViewerItem) => void;\n  loadMoreItemsIfNeeded: (item: MediaViewerItem) => void;\n  onFooterClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  onClose: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  item,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  isLoadingMoreMedia,\n  isSynced,\n  loadMoreItemsIfNeeded,\n  getNextItem,\n  selectItem,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveItem, setActiveItem] = useSignal<MediaViewerItem | undefined>(item);\n  const activeItemRef = useSignalRef(getActiveItem);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeItem = useDerivedState(getActiveItem);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectItemDebounced = useDebouncedCallback(selectItem, [selectItem], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveItem(item);\n    }\n  }, [item, setActiveItem, transformRef]);\n\n  useEffect(() => {\n    if (!isSynced || !activeItem || isLoadingMoreMedia) return;\n    loadMoreItemsIfNeeded(activeItem);\n  }, [activeItem, loadMoreItemsIfNeeded, isSynced, isLoadingMoreMedia]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeItemRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const cActiveItem = activeItemRef.current;\n      if (cActiveItem === undefined) return false;\n      const nextItem = getNextItem(cActiveItem, direction);\n      if (nextItem !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const cActiveItem = activeItemRef.current;\n      const nextItem = cActiveItem && getNextItem(cActiveItem, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (nextItem !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    activeItemRef,\n    clearSwipeDirectionDebounced,\n    clickXThreshold,\n    getNextItem,\n    isFullscreen,\n    isHidden,\n    onClose,\n    selectItemDebounced,\n    setActiveItem,\n    setIsActiveDebounced,\n    setTransform,\n    shouldCloseOnVideo,\n    transformRef,\n    windowHeight,\n    windowWidth,\n    withAnimation,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  const [prevItem, nextItem] = useMemo(() => {\n    if (activeItem === undefined) return [undefined, undefined];\n    return [getNextItem(activeItem, -1), getNextItem(activeItem, 1)];\n  }, [activeItem, getNextItem]);\n\n  if (activeItem === undefined) return undefined;\n\n  const hasPrev = prevItem !== undefined;\n  const hasNext = nextItem !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={prevItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          item={activeItem}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n          onClose={onClose}\n          onFooterClick={onFooterClick}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={nextItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiPeer } from '../../api/types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  isChatChannel, isChatGroup, isUserId,\n} from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectSender,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dates/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n};\n\ntype StateProps = {\n  owner?: ApiPeer;\n};\n\nconst BULLET = '\\u2022';\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  owner,\n  item,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (item?.type !== 'message') return;\n\n    const message = item.message;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId: message.chatId, messageId: message.id });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId: message.chatId, messageId: message.id });\n    }\n  });\n\n  const lang = useOldLang();\n\n  const subtitle = useMemo(() => {\n    if (!item || item.type === 'standalone') return undefined;\n\n    const avatarOwner = item.type === 'avatar' ? item.avatarOwner : undefined;\n    const profilePhotos = item.type === 'avatar' ? item.profilePhotos : undefined;\n    const avatar = profilePhotos?.photos[item.mediaIndex!];\n    const isFallbackAvatar = avatar?.id === profilePhotos?.fallbackPhoto?.id;\n    const isPersonalAvatar = avatar?.id === profilePhotos?.personalPhoto?.id;\n    const date = item.type === 'message' ? item.message.date : avatar?.date;\n    if (!date) return undefined;\n\n    const formattedDate = formatMediaDateTime(lang, date * 1000, true);\n    const count = profilePhotos?.count\n      && (profilePhotos.count + (profilePhotos?.fallbackPhoto ? 1 : 0));\n    const currentIndex = item.mediaIndex! + 1 + (profilePhotos?.personalPhoto ? -1 : 0);\n    const countText = count && lang('Of', [currentIndex, count]);\n\n    const parts: string[] = [];\n    if (avatar) {\n      const chat = !isUserId(avatarOwner!.id) ? avatarOwner as ApiChat : undefined;\n      const isChannel = chat && isChatChannel(chat);\n      const isGroup = chat && isChatGroup(chat);\n      parts.push(lang(\n        isPersonalAvatar ? 'lng_mediaview_profile_photo_by_you'\n          : isFallbackAvatar ? 'lng_mediaview_profile_public_photo'\n            : isChannel ? 'lng_mediaview_channel_photo'\n              : isGroup ? 'lng_mediaview_group_photo' : 'lng_mediaview_profile_photo',\n      ));\n    }\n\n    if (countText && !isPersonalAvatar && !isFallbackAvatar) {\n      parts.push(countText);\n    }\n\n    parts.push(formattedDate);\n\n    return parts.join(` ${BULLET} `);\n  }, [item, lang]);\n\n  if (!owner) {\n    return undefined;\n  }\n\n  const senderTitle = getPeerTitle(lang, owner);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={owner.id} size=\"medium\" peer={owner} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {subtitle}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const message = item?.type === 'message' ? item.message : undefined;\n    const messageSender = message && selectSender(global, message);\n\n    const owner = item?.type === 'avatar' ? item.avatarOwner : messageSender;\n\n    return {\n      owner,\n    };\n  },\n)(SenderInfo);\n","import React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPeer,\n  ApiPeerPhotos,\n  ApiPhoto,\n  ApiSponsoredMessage,\n} from '../../api/types';\nimport { type MediaViewerMedia, MediaViewerOrigin, type ThreadId } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getChatMediaMessageIds, getMessagePaidMedia, isChatAdmin, isUserId,\n} from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentChatMediaSearch,\n  selectCurrentSharedMediaSearch,\n  selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPeer,\n  selectPeerPhotos,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage, selectSponsoredMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia, { getMediaViewerItem, type MediaViewerItem } from './helpers/getViewableMedia';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Icon from '../common/icons/Icon';\nimport ReportAvatarModal from '../common/ReportAvatarModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: ThreadId;\n  messageId?: number;\n  message?: ApiMessage;\n  collectedMessageIds?: number[];\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatar?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  chatMessages?: Record<number, ApiMessage>;\n  sponsoredMessage?: ApiSponsoredMessage;\n  standaloneMedia?: MediaViewerMedia[];\n  mediaIndex?: number;\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  withDynamicLoading?: boolean;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\nconst AVATAR_LOAD_TRIGGER = 4;\n\nconst MediaViewer = ({\n  chatId,\n  threadId,\n  messageId,\n  message,\n  collectedMessageIds,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatar,\n  avatarOwner,\n  profilePhotos,\n  chatMessages,\n  sponsoredMessage,\n  standaloneMedia,\n  mediaIndex,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n  withDynamicLoading,\n  isLoadingMoreMedia,\n  isSynced,\n}: StateProps) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n    searchChatMediaMessages,\n    loadMoreProfilePhotos,\n    clickSponsored,\n    openUrl,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || message || standaloneMedia || sponsoredMessage);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const senderId = message?.senderId || avatarOwner?.id || message?.chatId;\n  const prevSenderId = usePreviousDeprecated<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportAvatarModalOpen, openReportAvatarModal, closeReportAvatarModal] = useFlag();\n\n  const currentItem = getMediaViewerItem({\n    message, avatarOwner, standaloneMedia, profilePhotos, mediaIndex, sponsoredMessage,\n  });\n  const { media, isSingle } = getViewableMedia(currentItem) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n  } = useMediaProps({\n    media, isAvatar: Boolean(avatarOwner), origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReportAvatar = (() => {\n    if (isChatWithSelf) return false;\n    if (currentItem?.type !== 'avatar' || !avatarOwner) return false;\n    const info = currentItem.profilePhotos;\n    if (media === info.personalPhoto) return false;\n    return true;\n  })();\n  const isVisible = !isHidden && isOpen;\n\n  const messageMediaIds = useMemo(() => {\n    return withDynamicLoading\n      ? collectedMessageIds\n      : getChatMediaMessageIds(chatMessages || {}, collectedMessageIds || [], isFromSharedMedia);\n  }, [chatMessages, collectedMessageIds, isFromSharedMedia, withDynamicLoading]);\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || animationKey.current === undefined)) {\n    animationKey.current = isSingle ? 0 : (messageId || mediaIndex);\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      requestMutation(() => {\n        document.body.classList.toggle('is-media-viewer-open', isOpen);\n      });\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    mql.addEventListener('change', forceUpdate);\n\n    return () => {\n      mql.removeEventListener('change', forceUpdate);\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePreviousDeprecated<ApiMessage | undefined>(message);\n  const prevIsHidden = usePreviousDeprecated<boolean | undefined>(isHidden);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const prevItem = usePreviousDeprecated(currentItem);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevItem !== currentItem;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (shouldAnimateOpening || !prevItem)) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message, mediaIndex);\n    }\n\n    if (isGhostAnimation && !isOpen && prevItem) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage, prevItem?.mediaIndex);\n    }\n  }, [\n    bestImageData, dimensions, hasFooter, isGhostAnimation, isOpen, isVideo, message, origin,\n    prevBestImageData, prevItem, prevMessage, prevOrigin, shouldAnimateOpening, mediaIndex,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const handleFooterClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (e.target instanceof HTMLElement && e.target.closest('a')) return; // Prevent closing on timestamp click\n\n    handleClose();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId });\n    }\n  });\n\n  const handleSponsoredClick = useLastCallback((isFromMedia?: boolean) => {\n    if (!sponsoredMessage || !chatId) return;\n\n    clickSponsored({ isMedia: isFromMedia, isFullscreen: true, randomId: sponsoredMessage.randomId });\n    openUrl({ url: sponsoredMessage!.url });\n    closeMediaViewer();\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [messageId!],\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const loadMoreItemsIfNeeded = useLastCallback((item?: MediaViewerItem) => {\n    if (!item || isLoadingMoreMedia) return;\n\n    if (item.type === 'avatar') {\n      const isNearEnd = item.mediaIndex >= item.profilePhotos.photos.length - AVATAR_LOAD_TRIGGER;\n      if (!isNearEnd) return;\n      loadMoreProfilePhotos({ peerId: item.avatarOwner.id });\n    }\n\n    if (item.type === 'message' && withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: item.message.id });\n    }\n  });\n\n  const getNextItem = useLastCallback((from: MediaViewerItem, direction: number): MediaViewerItem | undefined => {\n    if (direction === 0 || isSingle) return undefined;\n\n    if (from.type === 'standalone') {\n      const { media: fromMedia, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && nextIndex < fromMedia.length) {\n        return { type: 'standalone', media: fromMedia, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'avatar') {\n      const { avatarOwner: fromAvatarOwner, profilePhotos: fromProfilePhotos, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && fromProfilePhotos && nextIndex < fromProfilePhotos.photos.length) {\n        return {\n          type: 'avatar',\n          avatarOwner: fromAvatarOwner,\n          profilePhotos: fromProfilePhotos,\n          mediaIndex: nextIndex,\n        };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'sponsoredMessage') {\n      const { message: fromSponsoredMessage, mediaIndex: fromSponsoredMessageIndex } = from;\n      const nextIndex = fromSponsoredMessageIndex! + direction;\n      if (nextIndex >= 0 && fromSponsoredMessage) {\n        return { type: 'sponsoredMessage', message: fromSponsoredMessage, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    const { message: fromMessage, mediaIndex: fromMediaIndex } = from;\n\n    const paidMedia = getMessagePaidMedia(fromMessage);\n    if (paidMedia) {\n      const nextIndex = fromMediaIndex! + direction;\n\n      if (nextIndex >= 0 && nextIndex < paidMedia.extendedMedia.length) {\n        return { type: 'message', message: fromMessage, mediaIndex: nextIndex };\n      }\n    }\n\n    const index = messageMediaIds?.indexOf(fromMessage.id);\n    if (index === undefined) return undefined;\n    const nextIndex = index + direction;\n    const nextMessageId = messageMediaIds![nextIndex];\n    const nextMessage = chatMessages?.[nextMessageId];\n    if (nextMessage) {\n      return { type: 'message', message: nextMessage };\n    }\n\n    return undefined;\n  });\n\n  const openMediaViewerItem = useLastCallback((item?: MediaViewerItem) => {\n    if (!item) {\n      handleClose();\n      return;\n    }\n\n    const itemChatId = item.type === 'avatar'\n      ? item.avatarOwner.id : item.type === 'message'\n        ? item.message.chatId : undefined;\n    const itemMessageId = item.type === 'message' ? item.message.id : undefined;\n    const itemStandaloneMedia = item.type === 'standalone' ? item.media : undefined;\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: itemChatId,\n      messageId: itemMessageId,\n      standaloneMedia: itemStandaloneMedia,\n      mediaIndex: item.mediaIndex,\n      isAvatarView: item.type === 'avatar',\n      withDynamicLoading,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    const mediaCount = profilePhotos?.photos.length\n      || standaloneMedia?.length || messageMediaIds?.length || 0;\n    if (mediaCount <= 1 || !currentItem) {\n      handleClose();\n      return;\n    }\n    // Before deleting, select previous media\n    const prevMedia = getNextItem(currentItem, -1);\n    if (prevMedia) {\n      openMediaViewerItem(prevMedia);\n      return;\n    }\n\n    if ((currentItem.type === 'avatar' && isUserId(currentItem.avatarOwner.id)) || currentItem.type === 'standalone') {\n      // Keep current item, it'll update when indexes shift\n      return;\n    }\n\n    handleClose();\n  });\n\n  const lang = useOldLang();\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          <SenderInfo\n            key={media?.id}\n            item={currentItem}\n          />\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          item={currentItem}\n          canUpdateMedia={canUpdateMedia}\n          canReportAvatar={canReportAvatar}\n          onBeforeDelete={handleBeforeDelete}\n          onReportAvatar={openReportAvatarModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportAvatarModal\n          isOpen={isReportAvatarModalOpen}\n          onClose={closeReportAvatarModal}\n          photo={avatar}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        item={currentItem}\n        loadMoreItemsIfNeeded={loadMoreItemsIfNeeded}\n        isLoadingMoreMedia={isLoadingMoreMedia}\n        isSynced={isSynced}\n        getNextItem={getNextItem}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectItem={openMediaViewerItem}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n        handleSponsoredClick={handleSponsoredClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      messageId,\n      origin,\n      isHidden,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isAvatarView,\n      isSponsoredMessage,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId, isSynced } = global;\n    const isChatWithSelf = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    if (isAvatarView) {\n      const peer = selectPeer(global, chatId!);\n      let canUpdateMedia = false;\n      if (peer) {\n        canUpdateMedia = isUserId(peer.id) ? peer.id === currentUserId : isChatAdmin(peer as ApiChat);\n      }\n\n      const profilePhotos = selectPeerPhotos(global, chatId!);\n\n      return {\n        profilePhotos,\n        avatar: profilePhotos?.photos[mediaIndex!],\n        avatarOwner: peer,\n        isLoadingMoreMedia: profilePhotos?.isLoading,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n        standaloneMedia,\n        mediaIndex,\n        isSynced,\n      };\n    }\n\n    let message: ApiMessage | undefined;\n    if (chatId && messageId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        message = selectScheduledMessage(global, chatId, messageId);\n      } else {\n        message = selectChatMessage(global, chatId, messageId);\n      }\n    }\n\n    let sponsoredMessage: ApiSponsoredMessage | undefined;\n    if (isSponsoredMessage && chatId) {\n      if (origin === MediaViewerOrigin.SponsoredMessage) {\n        sponsoredMessage = selectSponsoredMessage(global, chatId);\n      }\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (chatId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        chatMessages = selectChatScheduledMessages(global, chatId);\n      } else {\n        chatMessages = selectChatMessages(global, chatId);\n      }\n    }\n\n    let isLoadingMoreMedia = false;\n    const isOriginInline = origin === MediaViewerOrigin.Inline;\n    const isOriginAlbum = origin === MediaViewerOrigin.Album;\n    let collectedMessageIds: number[] | undefined;\n\n    if (chatId && threadId && messageId) {\n      if (withDynamicLoading && (isOriginInline || isOriginAlbum)) {\n        const currentSearch = selectCurrentChatMediaSearch(global);\n        isLoadingMoreMedia = Boolean(currentSearch?.isLoading);\n        const { foundIds } = (currentSearch?.currentSegment) || {};\n        collectedMessageIds = foundIds;\n      } else if (origin === MediaViewerOrigin.SharedMedia) {\n        const currentSearch = selectCurrentSharedMediaSearch(global);\n        const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n        collectedMessageIds = foundIds;\n      } else if (isOriginInline || isOriginAlbum) {\n        const outlyingList = selectOutlyingListByMessageId(global, chatId, threadId, messageId);\n        collectedMessageIds = outlyingList || selectListedIds(global, chatId, threadId);\n      }\n    }\n\n    return {\n      chatId,\n      threadId,\n      messageId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      sponsoredMessage,\n      collectedMessageIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isLoadingMoreMedia,\n      isSynced,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"bu_hGbaa\",\"fullSize\":\"W9A8SEMl\",\"backdrop\":\"OFh6u50Q\",\"captionBackdrop\":\"Jd1DYS6Y\",\"backdropNonInteractive\":\"xe67dhtF\",\"close\":\"Mye8Dwxa\",\"wrapper\":\"gLHHo5k8\",\"slideAnimation\":\"GJVwqV9e\",\"slideAnimationToActive\":\"_Yn4SWUB\",\"content\":\"hGCH03qc\",\"slideAnimationFromActive\":\"ZecqXqKy\",\"storyHeader\":\"e7HHuS1g\",\"composer\":\"FXineBYO\",\"caption\":\"RKedwa0I\",\"captionGradient\":\"sHNAfxzf\",\"media\":\"PVZ8TOWS\",\"mediaPreview\":\"lQfkulvp\",\"contentInner\":\"Wi0DXPH2\",\"name\":\"Ka1CGfzq\",\"slide\":\"urTtSsk9\",\"mobileSlide\":\"AjXOHOgE\",\"slidePreview\":\"Sef28wEh\",\"activeSlide\":\"uAlXNXJN\",\"slideInner\":\"g8ypsnnC\",\"mediaWrapper\":\"YiuvOPgT\",\"forward\":\"pGKsAszF\",\"storyIndicators\":\"jGDd2sza\",\"sender\":\"eMYhXF_X\",\"senderInfoTransition\":\"PXnfXZur\",\"senderInfo\":\"WpyVfrsc\",\"senderMeta\":\"jmKI_lhC\",\"senderName\":\"H1uod43o\",\"storyMetaRow\":\"zimpR8Hz\",\"storyMeta\":\"hGTnZuar\",\"closeButton\":\"WlLsjJ2Z\",\"actions\":\"GrsJNw3y\",\"active\":\"q756IpZB\",\"visibilityButton\":\"prxptFFf\",\"visibilityButtonSelf\":\"_MVsZpgB\",\"button\":\"TkphaPyQ\",\"buttonMenu\":\"K0_xAdzf\",\"captionInner\":\"D_5mWNmi\",\"captionContent\":\"ilyTRZtw\",\"captionText\":\"hmFA5qb1\",\"hasOverflow\":\"e1gyTmKe\",\"expanded\":\"HIMnUViv\",\"animate\":\"CvnxnCxN\",\"withShowMore\":\"Vq8pl_kQ\",\"captionShowMore\":\"bM5rlQtM\",\"navigate\":\"nZ30pf4g\",\"prev\":\"SXpRZiax\",\"next\":\"twOBFwUE\",\"modal\":\"nLPOogqS\",\"thumbnail\":\"MnNC7VHS\",\"ghost\":\"fME2l_yv\",\"ghost2\":\"TYicp2_K\",\"ghostImage\":\"HjoURJRK\",\"forwardHeader\":\"JJFtefb9\",\"clickable\":\"BsqMBS2I\",\"headerTitle\":\"G8OgmMDJ\",\"forwardInfo\":\"_M8CgT7s\",\"fromPeer\":\"nJr8QgYX\"};","import type { IDimensions } from '../../../types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport stopEvent from '../../../util/stopEvent';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n\n    const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--safe-area-bottom');\n    if (safeAreaBottom) {\n      toHeight -= parseFloat(safeAreaBottom);\n    }\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.mobileSlide} .${styles.media}, .${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch--container';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nexport const BASE_STORY_WIDTH = 720;\nexport const BASE_STORY_HEIGHT = 1280;\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n  const hasForwardInfo = isLoadedStory && Boolean(story.forwardInfo);\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GrE47IXS\",\"closeButton\":\"NlWSF1pA\",\"stealthIcon\":\"qKi5jsGM\",\"title\":\"BFctFGoT\",\"description\":\"fZIJH4IG\",\"listItem\":\"RGD70uBt\",\"icon\":\"HCYfPccW\",\"button\":\"AM_sxoXP\",\"subtitle\":\"L8oRQyKb\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useOldLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <Icon name=\"eye-crossed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<Icon name=\"stealth-past\" className={styles.icon} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<Icon name=\"stealth-future\" className={styles.icon} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterPeersByQuery({ ids: [...selectedIds || [], ...contactIds], query: searchQuery, type: 'user' }));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds]);\n\n  return (\n    <PeerPicker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedSelectedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      withDefaultPadding\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n      allowMultiple\n      withStatus\n      itemInputType=\"checkbox\"\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"BDK_pgpt\",\"active\":\"N8ujSwlC\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useOldLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterPeersByQuery({ ids: [...closeFriendIds, ...contactIds], query: searchQuery, type: 'user' }));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <PeerPicker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        withDefaultPadding\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        withStatus\n        itemInputType=\"checkbox\"\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <Icon name=\"check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"hz7SomkK\",\"header\":\"NV6Rt2g9\",\"closeButton\":\"SN1GFS6L\",\"headerTitle\":\"gi0Y6Ns6\",\"content\":\"sTaVDkiD\",\"section\":\"eUiuPoEC\",\"title\":\"iPPiw9DI\",\"list\":\"OUP1Ss0W\",\"option\":\"JL33Sa3b\",\"checked\":\"qVPo_cVL\",\"input\":\"zsDaUk0i\",\"icon\":\"AfYCVlys\",\"action\":\"njMeBBwY\",\"optionContent\":\"TUAAnG2w\",\"footer\":\"r24Qz2bf\",\"info\":\"ljeRVBOm\",\"submit\":\"RwNLN_rH\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPrivacySettings, ApiStory, ApiUser, PrivacyVisibility,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getHours } from '../../util/dates/units';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryInProfile } = getActions();\n\n  const lang = useOldLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isInProfile);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isInProfile !== isPinned) {\n      toggleStoryInProfile({ peerId: story!.peerId, storyId: story!.id, isInProfile: isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getPeerTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? getHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <Icon name={option.icon} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <Icon name=\"next\" />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStoryForwardInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  isUserId,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport { selectPeer, selectPeerStory } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  forwardInfo: ApiStoryForwardInfo;\n  className?: string;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  story?: ApiTypeStory;\n};\n\nconst EmbeddedStoryForward: FC<OwnProps & StateProps> = ({\n  className,\n  forwardInfo,\n  sender,\n  story,\n}) => {\n  const { openStoryViewer, loadPeerStoriesByIds, openChat } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!story && forwardInfo.fromPeerId && forwardInfo.storyId) {\n      loadPeerStoriesByIds({\n        peerId: forwardInfo.fromPeerId,\n        storyIds: [forwardInfo.storyId],\n      });\n    }\n  }, [forwardInfo, story]);\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : forwardInfo.fromName;\n\n  const openOriginalStory = useLastCallback(() => {\n    const { fromPeerId, storyId } = forwardInfo;\n    if (!fromPeerId) return;\n\n    const isStoryReady = story && !('isDeleted' in story && story.isDeleted);\n\n    if (isStoryReady) {\n      openStoryViewer({\n        peerId: fromPeerId,\n        storyId,\n        isSingleStory: true,\n      });\n    } else {\n      openChat({ id: fromPeerId });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(openOriginalStory);\n\n  function renderTextContent() {\n    if (story && 'content' in story && story.content.text) {\n      return (\n        <p className=\"embedded-text-wrapper\">\n          {renderTextWithEntities(story.content.text)}\n        </p>\n      );\n    }\n\n    return undefined;\n  }\n\n  function renderSender() {\n    if (!sender || !senderTitle) {\n      return undefined;\n    }\n\n    const icon: IconName | undefined = !isUserId(sender.id) ? 'channel-filled' : 'user-filled';\n\n    return (\n      <>\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {senderTitle && renderText(senderTitle)}\n      </>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, true, true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        {renderTextContent()}\n        <div className=\"message-title\">\n          {renderSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { forwardInfo }): StateProps => {\n    const sender = forwardInfo.fromPeerId ? selectPeer(global, forwardInfo.fromPeerId) : undefined;\n    const story = forwardInfo.storyId && forwardInfo.fromPeerId\n      ? selectPeerStory(global, forwardInfo.fromPeerId, forwardInfo.storyId) : undefined;\n    return {\n      sender,\n      story,\n    };\n  },\n)(EmbeddedStoryForward));\n","import React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport calcTextLineHeightAndCount from '../../util/element/calcTextLineHeightAndCount';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport EmbeddedStoryForward from '../common/embedded/EmbeddedStoryForward';\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst LINES_TO_SHOW = 3;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n  const renderingStory = useCurrentOrPrev(story, true);\n\n  const caption = renderingStory?.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransitionDeprecated(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useLayoutEffect(() => {\n    requestMeasure(() => {\n      if (!showMoreButtonRef.current) {\n        return;\n      }\n\n      const button = showMoreButtonRef.current;\n\n      const { offsetWidth } = button;\n\n      requestMutation(() => {\n        button.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n      });\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      if (!contentRef.current || !textRef.current) {\n        return undefined;\n      }\n\n      const container = contentRef.current;\n      const textContainer = textRef.current;\n\n      const textOffsetTop = textContainer.offsetTop;\n      const { lineHeight, totalLines } = calcTextLineHeightAndCount(textContainer);\n      const isOverflowing = totalLines > LINES_TO_SHOW;\n      const overflowShift = textOffsetTop + lineHeight * LINES_TO_SHOW;\n\n      return () => {\n        if (isOverflowing) {\n          addExtraClass(container, styles.hasOverflow);\n          setHasOverflow(true);\n        }\n\n        container.style.setProperty('--_overflow-shift', `${overflowShift}px`);\n      };\n    });\n  }, [caption]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          {renderingStory?.forwardInfo && (\n            <EmbeddedStoryForward\n              forwardInfo={renderingStory.forwardInfo}\n              className={styles.forwardInfo}\n            />\n          )}\n          {renderingStory && (\n            <div ref={textRef} className={styles.captionText}>\n              <MessageText\n                messageOrStory={renderingStory}\n                withTranslucentThumbs\n                forcePlayback\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YVD19vOP\",\"viewInfo\":\"cknL5COh\",\"interactive\":\"pJAyeGkG\",\"avatars\":\"Vz_VtJ16\",\"spacer\":\"kKoeDk3Z\",\"reactionCount\":\"sf3u_6Vh\",\"reactionCountHeart\":\"Er2XKRqi\",\"footerItem\":\"vJRk_UUk\",\"views\":\"nIv3YAnZ\",\"viewIcon\":\"WyBiNM6e\",\"reactionButton\":\"lpDXVIuf\",\"reactionHeart\":\"twgMDT1y\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport {\n  getReactionKey, getStoryKey, isSameReaction, isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useOldLang();\n\n  const {\n    views, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const { viewsCount, forwardsCount, reactionsCount } = views || {};\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && isSameReaction(sentReaction, HEART_REACTION);\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = views && 'recentViewerIds' in views ? views.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [views]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n          className={styles.footerItem}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <>\n          {Boolean(forwardsCount) && (\n            <div className={styles.footerItem}>\n              <Button\n                round\n                color=\"translucent\"\n                size=\"smaller\"\n                nonInteractive\n                ariaLabel={lang('PublicShares')}\n              >\n                <Icon name=\"loop\" />\n              </Button>\n              <span>{forwardsCount}</span>\n            </div>\n          )}\n          <div className={styles.footerItem}>\n            <Button\n              round\n              className={styles.reactionButton}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleLikeStory}\n              ariaLabel={lang('AccDescrLike')}\n            >\n              {sentReaction && (\n                <ReactionAnimatedEmoji\n                  key={getReactionKey(sentReaction)}\n                  containerId={containerId}\n                  reaction={sentReaction}\n                  withEffectOnly={isSentStoryReactionHeart}\n                />\n              )}\n              {(!sentReaction || isSentStoryReactionHeart) && (\n                <Icon\n                  name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                  className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n                />\n              )}\n            </Button>\n            {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c1fbGgcx\",\"viewed\":\"xwOKghO2\",\"active\":\"ZuByYcIx\",\"inner\":\"qyBCpJct\",\"progress\":\"XY98E7VM\",\"paused\":\"n9V6B7hP\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMediaAreaChannelPost,\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { isChatChannel, isUserId } from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectChat,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectPeerPaidMessagesStars,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { IS_SAFARI } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativePastTime } from '../../util/dates/dateFormat';\nimport download from '../../util/download';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { round } from '../../util/math';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\nimport { BASE_STORY_HEIGHT, BASE_STORY_WIDTH } from './helpers/dimensions';\nimport { PRIMARY_VIDEO_MIME, SECONDARY_VIDEO_MIME } from './helpers/videoFormats';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStreaming } from '../../hooks/useStreaming';\nimport useBackgroundMode from '../../hooks/window/useBackgroundMode';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport Transition from '../ui/Transition';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  forwardSender?: ApiPeer;\n  fromPeer?: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  arePeerSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n  withHeaderAnimation?: boolean;\n  paidMessagesStars?: number;\n  isAccountFrozen?: boolean;\n}\n\nconst VIDEO_MIN_READY_STATE = IS_SAFARI ? 4 : 3;\nconst SPACEBAR_CODE = 32;\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  forwardSender,\n  fromPeer,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  arePeerSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  withHeaderAnimation,\n  onDelete,\n  onClose,\n  onReport,\n  paidMessagesStars,\n  isAccountFrozen,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryInProfile,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadPeerSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n  const isChangelog = peerId === storyChangelogUserId;\n  const isUserStory = isUserId(peerId);\n  const isChatStory = !isUserStory;\n  const isChannelStory = isChatStory && isChatChannel(peer as ApiChat);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isInProfile : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isInProfile : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n\n  const forwardSenderTitle = forwardSender ? getPeerTitle(oldLang, forwardSender)\n    : (isLoadedStory && story.forwardInfo?.fromName);\n\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const duration = isLoadedStory && story.content.video?.duration\n    ? story.content.video.duration\n    : undefined;\n\n  const shouldShowComposer = !(isOut && isUserStory) && !isChangelog && !isChannelStory && !isAccountFrozen;\n  const shouldShowFooter = isLoadedStory && !shouldShowComposer && (isOut || isChannelStory);\n  const headerAnimation = isMobile && withHeaderAnimation ? 'slideFade' : 'none';\n\n  const {\n    shouldRender: shouldRenderSkeleton,\n    transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransitionDeprecated(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransitionDeprecated(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldShowComposer);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransitionDeprecated(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransitionDeprecated(true);\n  const {\n    shouldRender: shouldRenderCaption,\n    transitionClassNames: captionAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(hasText || hasForwardInfo);\n\n  const isStreamingSupported = useStreaming(videoRef, fullMediaData, PRIMARY_VIDEO_MIME);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !arePeerSettingsLoaded) {\n      loadPeerSettings({ peerId });\n    }\n  }, [arePeerSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress({\n    onStart: handleLongPressStart,\n    onEnd: handleLongPressEnd,\n  });\n\n  const isUnsupported = useUnsupportedMedia(\n    videoRef,\n    undefined,\n    !isVideo || !fullMediaData || isStreamingSupported,\n  );\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => {\n    if (hasAllData && !isUnsupported) handlePlayStory();\n  }, [hasAllData, isUnsupported]);\n\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isLoadedStory || isDeletedStory || areViewsExpired) return;\n\n    if (!isOut && !isChannelStory) return;\n\n    // Refresh counters each time\n    loadStoryViews({ peerId, storyId });\n  }, [isDeletedStory, areViewsExpired, isLoadedStory, peerId, storyId, isOut, isChannelStory]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) {\n      return;\n    }\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleForwardPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: forwardSender!.id });\n  });\n\n  const handleFromPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: fromPeer!.id });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    openNextStory();\n  });\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      markStoryPlaying();\n    } else {\n      unmarkStoryPlaying();\n    }\n    if (duration && round(video.currentTime, 2) >= round(duration, 2)) {\n      handleOpenNextStory();\n    }\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getPeerTitle(oldLang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = oldLang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = oldLang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = oldLang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: oldLang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: oldLang('StealthModeOn'),\n        message: oldLang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: oldLang('StoryNotFound'),\n    });\n  }, [oldLang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={oldLang('AccDescrOpenMenu2')}\n        >\n          <Icon name=\"more\" />\n        </Button>\n      );\n    };\n  }, [isMobile, oldLang]);\n\n  function renderStoriesTabs() {\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (!isUserStory) return undefined;\n\n    let privacyIcon: IconName = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <Icon name={privacyIcon} />\n        {isOut && <Icon name=\"next\" />}\n      </div>\n    );\n  }\n\n  function renderSenderInfo() {\n    return (\n      <div className={styles.senderInfo}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderMeta}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getPeerTitle(oldLang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {forwardSenderTitle && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.forwardHeader, forwardSender && styles.clickable,\n                )}\n                onClick={forwardSender ? handleForwardPeerClick : undefined}\n              >\n                <Icon name=\"loop\" />\n                <span className={styles.headerTitle}>\n                  {renderText(forwardSenderTitle)}\n                </span>\n              </span>\n            )}\n            {fromPeer && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.fromPeer,\n                )}\n                onClick={handleFromPeerClick}\n              >\n                <Avatar peer={fromPeer} size=\"micro\" />\n                <span className={styles.headerTitle}>\n                  {renderText(getPeerTitle(oldLang, fromPeer) || '')}\n                </span>\n              </span>\n            )}\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativePastTime(oldLang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{oldLang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Transition activeKey={Number(peerId)} name={headerAnimation} className={styles.senderInfoTransition}>\n          {renderSenderInfo()}\n        </Transition>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={oldLang('Volume')}\n            >\n              <Icon name={(isMuted || noSound) ? 'speaker-muted-story' : 'speaker-story'} />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{oldLang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>\n                {oldLang(isUserStory ? 'StorySave' : 'SaveToPosts')}\n              </MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>\n                {oldLang(isUserStory ? 'ArchiveStory' : 'RemoveFromPosts')}\n              </MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {oldLang('lng_media_download')}\n              </MenuItem>\n            )}\n            {!isOut && isUserStory && (\n              <MenuItem icon=\"eye-crossed-outline\" onClick={handleOpenStealthModal}>\n                {oldLang('StealthMode')}\n              </MenuItem>\n            )}\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{oldLang('lng_report_story')}</MenuItem>}\n            {isOut && (\n              <MenuItem\n                icon=\"delete\"\n                destructive\n                onClick={handleDeleteStoryClick}\n              >{oldLang('Delete')}\n              </MenuItem>\n            )}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={oldLang('Close')}\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  const inputPlaceholder = paidMessagesStars\n    ? lang('ComposerPlaceholderPaidReply', {\n      amount: formatStarsAsIcon(lang, paidMessagesStars, { asFont: true, className: 'placeholder-star-icon' }),\n    }, {\n      withNodes: true,\n    })\n    : oldLang(isChatStory ? 'ReplyToGroupStory' : 'ReplyPrivately');\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            key={`preview-${storyId}`}\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, styles.mediaPreview, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            key={`video-${storyId}`}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            width={BASE_STORY_WIDTH}\n            height={BASE_STORY_HEIGHT}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            disableRemotePlayback\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={oldLang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={oldLang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay\n            key={`area-overlay-${storyId}-${peerId}`}\n            story={story}\n            isActive\n            isStoryPlaying={isDropdownMenuOpen}\n          />\n        )}\n        {!isMobile && (\n          <div className={styles.content}>\n            <div className={styles.contentInner}>\n              <Avatar\n                peer={peer}\n                withStory\n                storyViewerMode=\"disabled\"\n              />\n              <div className={styles.name}>{renderText(getPeerTitle(oldLang, peer) || '')}</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={oldLang('Close')}\n        />\n      )}\n      {hasText && <div className={buildClassName(styles.captionGradient, captionAppearanceAnimationClassNames)} />}\n      {shouldRenderCaption && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={captionAppearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={inputPlaceholder}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId,\n  storyId,\n  isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const userFullInfo = selectUserFullInfo(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n      storyList,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n    reportModal,\n    giftInfoModal,\n    isPaymentMessageConfirmDialogOpen,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const isLoadedStory = story && 'content' in story;\n  const shouldForcePause = Boolean(\n    isPaymentMessageConfirmDialogOpen\n    || viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || reportModal || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal || giftInfoModal,\n  );\n\n  const forwardInfo = isLoadedStory ? story.forwardInfo : undefined;\n  const mediaAreas = isLoadedStory ? story.mediaAreas : undefined;\n  const forwardSenderId = forwardInfo?.fromPeerId\n    || mediaAreas?.find((area): area is ApiMediaAreaChannelPost => area.type === 'channelPost')?.channelId;\n  const forwardSender = forwardSenderId ? selectPeer(global, forwardSenderId) : undefined;\n  const withHeaderAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  const fromPeer = isLoadedStory && story.fromId ? selectPeer(global, story.fromId) : undefined;\n  const paidMessagesStars = selectPeerPaidMessagesStars(global, peerId);\n  const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n  return {\n    peer: (user || chat)!,\n    forwardSender,\n    fromPeer,\n    story,\n    orderedIds: storyList?.storyIdsByPeerId[peerId],\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    arePeerSettingsLoaded: Boolean(userFullInfo?.settings),\n    stealthMode: global.stories.stealthMode,\n    withHeaderAnimation,\n    paidMessagesStars,\n    isAccountFrozen,\n  };\n})(Story));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getStoryMediaHash } from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n  storyIdsForViewer?: number[];\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, storyIdsForViewer, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useOldLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId && storyIdsForViewer?.includes(lastViewedId)\n      ? lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1)\n      : -1;\n    const resultId = byId[previewIndexId]?.id || storyIdsForViewer?.[0] || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories, storyIdsForViewer]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <div className={styles.contentInner}>\n          <Avatar\n            peer={peer}\n            withStory\n            storyViewerMode=\"disabled\"\n          />\n          <div className={styles.name}>{renderText(getPeerTitle(lang, peer) || '')}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n      storyList,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n    storyIdsForViewer: peer?.id ? storyList?.storyIdsByPeerId[peer.id] : undefined,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeer,\n  selectTabState,\n} from '../../global/selectors';\nimport { IS_IOS } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePreviousDeprecated(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    if (!isMobile) return;\n\n    // If animation disabled, set rendering peer id to current peer\n    setRenderingPeerId(currentPeerId);\n  }, [currentPeerId, isMobile]);\n\n  // Handling the flipping of stories from a current user\n  useEffect(() => {\n    if (renderingPeerId === currentPeerId && currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n  }, [currentPeerId, currentStoryId, renderingPeerId, renderingStoryId]);\n\n  useEffect(() => {\n    if (isMobile) return undefined;\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n    }\n\n    return () => {\n      setIsAnimating(false);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, isMobile]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      withWheelDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${offsetY * (isMobile ? 1 : -1)}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, onClose, windowWidth, windowHeight, isMobile, renderingPeerId]);\n\n  useLayoutEffect(() => {\n    if (isMobile) return;\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n        current.style.setProperty('--slide-content-scale', String(slideSizes.toActiveScale));\n\n        return;\n      }\n\n      const getScale = () => {\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, slideSizes, isMobile]);\n\n  const handleTransitionEnd = useLastCallback((event: React.TransitionEvent<HTMLDivElement>) => {\n    // It is `target` that is needed here, not `currentTarget`\n    const target = event.target as HTMLDivElement | null;\n\n    if (!target || !target.classList.contains(styles.activeSlide)) return;\n\n    if (renderingPeerId !== currentPeerId) {\n      setRenderingPeerId(currentPeerId);\n      setRenderingStoryId(currentStoryId);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n    setIsAnimating(false);\n  });\n\n  if (isMobile) {\n    return (\n      <div className={styles.wrapper} ref={containerRef}>\n        <div\n          className={styles.mobileSlide}\n          ref={(ref) => setRef(ref, renderingPeerId!)}\n        >\n          <Story\n            peerId={renderingPeerId!}\n            storyId={renderingStoryId!}\n            onDelete={onDelete}\n            dimensions={slideSizes.activeSlide}\n            isPrivateStories={renderingIsPrivate}\n            isArchivedStories={renderingIsArchive}\n            isDeleteModalOpen={isDeleteModalOpen}\n            isSingleStory={isSingleStory}\n            getIsAnimating={getIsAnimating}\n            onClose={onClose}\n            onReport={onReport}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = isMobile ? undefined : buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n      onTransitionEnd={handleTransitionEnd}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive, storyList,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { active } } = global.stories;\n\n  return {\n    byPeerId,\n    peerIds: storyList?.peerIds ?? active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"gpDY8bos\",\"viewsList\":\"gpDY8bos\",\"views-list-loading\":\"vuRAfQ5v\",\"viewsListLoading\":\"vuRAfQ5v\",\"info\":\"AOSUIChK\",\"centeredInfo\":\"oGLhkkS7\",\"view-reaction\":\"MLaabS6n\",\"viewReaction\":\"MLaabS6n\",\"header\":\"d3N2bktu\",\"content\":\"QmRA3HZK\",\"top-button\":\"Dkv8GAxf\",\"topButton\":\"Dkv8GAxf\",\"contact-filter\":\"YpB_9VxE\",\"contactFilter\":\"YpB_9VxE\",\"selected\":\"DoUlpdZJ\",\"sort\":\"axDpgq9G\",\"sort-button\":\"Bm5VA66f\",\"sortButton\":\"Bm5VA66f\",\"icon-sort\":\"YVQiH93R\",\"iconSort\":\"YVQiH93R\",\"icon-down\":\"NXP9aMD0\",\"iconDown\":\"NXP9aMD0\",\"search\":\"QQQqBLK6\",\"bottom-info\":\"_CSv6suH\",\"bottomInfo\":\"_CSv6suH\",\"scrolled\":\"RYQ0liYe\",\"footer\":\"dUK7rP37\",\"closeButton\":\"abPzLiCH\",\"opacity-fade-in\":\"cX8oY3zb\",\"opacityFadeIn\":\"cX8oY3zb\",\"fadeIn\":\"Sx_aeh1o\",\"blocked\":\"L82sciL8\",\"check\":\"UqGBKwjg\",\"menuBubble\":\"dRqemuTA\",\"with-colored-status\":\"GQ96fta9\",\"withColoredStatus\":\"GQ96fta9\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiPeer, ApiTypeStoryView, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName, isUserId } from '../../global/helpers';\nimport { selectPeer } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiTypeStoryView;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\nconst BULLET = '\\u2022';\n\nconst StoryView = ({\n  storyView,\n  peer,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat,\n    closeStoryViewer,\n    unblockUser,\n    blockUser,\n    deleteContact,\n    updateStoryView,\n    focusMessage,\n    openStoryViewer,\n    closeStoryViewModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleClick = useLastCallback(() => {\n    const { type } = storyView;\n\n    if (type === 'repost') {\n      closeStoryViewModal();\n      openStoryViewer({\n        peerId: storyView.peerId,\n        storyId: storyView.storyId,\n      });\n      return;\n    }\n\n    closeStoryViewer();\n\n    setTimeout(() => {\n      if (type === 'user') {\n        openChat({ id: storyView.peerId });\n      } else if (type === 'forward') {\n        focusMessage({ chatId: storyView.peerId, messageId: storyView.messageId });\n      }\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    if (!isUserId(storyView.peerId)) return undefined;\n    const { peerId, areStoriesBlocked, isUserBlocked } = storyView;\n    const user = peer as ApiUser;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId: peerId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: false });\n          } else {\n            blockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, peer]);\n\n  const statusIcon: IconName = storyView.type === 'user' ? 'message-read'\n    : storyView.type === 'forward' ? 'forward' : 'loop';\n  const shouldColorStatus = storyView.type === 'forward' || storyView.type === 'repost';\n\n  const status = useMemo(() => {\n    const isModified = storyView.type === 'repost' && storyView.story.forwardInfo?.isModified;\n    const parts = [formatDateAtTime(lang, storyView.date * 1000)];\n    if (isModified) {\n      parts.push(lang('lng_edited'));\n    }\n\n    return parts.join(` ${BULLET} `);\n  }, [lang, storyView]);\n\n  return (\n    <ListItem\n      key={storyView.peerId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      onClick={handleClick}\n      rightElement={storyView.type === 'user' && storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      {isUserId(storyView.peerId) ? (\n        <PrivateChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          userId={storyView.peerId}\n          noStatusOrTyping\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n          forceShowSelf\n        />\n      ) : (\n        <GroupChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          chatId={storyView.peerId}\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const peer = selectPeer(global, storyView.peerId);\n\n  return {\n    peer,\n    availableReactions: global.reactions.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiTypeStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  views?: ApiTypeStoryView[];\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  views,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViewList, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const { viewsCount = 0, reactionsCount = 0 } = story?.views || {};\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViews = useMemo(() => {\n    return views?.sort(prepareComparator(areReactionsFirst));\n  }, [areReactionsFirst, views]);\n\n  const placeholderCount = !sortedViews?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViews?.length) && sortedViews!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViewList({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <Icon name={areReactionsFirst ? 'heart-outline' : 'recent'} className={styles.iconSort} />\n        <Icon name=\"down\" className={styles.iconDown} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <Icon name=\"check\" className={styles.check} />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <Icon name=\"check\" className={styles.check} />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViews?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViews?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViews}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViews?.map((view) => {\n            const additionalKeyId = view.type === 'forward' ? view.messageId\n              : view.type === 'repost' ? view.storyId : 'user';\n            return (\n              <StoryView key={`${view.peerId}-${view.date}-${additionalKeyId}`} storyView={view} />\n            );\n          })}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiTypeStoryView, b: ApiTypeStoryView) => {\n    if (areReactionsFirst) {\n      const reactionA = a.type === 'user' && a.reaction;\n      const reactionB = b.type === 'user' && b.reaction;\n      if (reactionA && !reactionB) {\n        return -1;\n      }\n      if (!reactionA && reactionB) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, views, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    views,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.reactions.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  beginHeavyAnimation,\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor, reportStory } = getActions();\n\n  const lang = useOldLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePreviousDeprecated(isOpen);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const prevPeerId = usePreviousDeprecated(peerId);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useLastCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  });\n\n  const handleCloseDeleteModal = useLastCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  });\n\n  const openMessageReport = useLastCallback(() => {\n    if (!storyId) return;\n    reportStory({ storyId, peerId });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openMessageReport}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    },\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\n\nimport { PEER_PICKER_ITEM_HEIGHT_PX } from '../../../config';\nimport {\n  getCanPostInChat, getGroupStatus, getUserStatus, isUserOnline,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectTopics, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport useSelector from '../../../hooks/data/useSelector';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport TopicIcon from '../TopicIcon';\nimport PickerItem from './PickerItem';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  isLowStackPriority?: boolean;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\nconst ITEM_CLASS_NAME = 'ChatOrUserPicker-item';\nconst TOPIC_ITEM_HEIGHT_PX = 56;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n  isLowStackPriority,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const selectTopicsById = useLastCallback((global: GlobalState) => {\n    if (!forumId) {\n      return undefined;\n    }\n\n    return selectTopics(global, forumId);\n  });\n\n  const forumTopicsById = useSelector(selectTopicsById);\n\n  const [topicIds, topics] = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chat = chatsById[forumId!];\n\n    if (!chat || !forumTopicsById) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = forumTopicsById\n      ? Object.values(forumTopicsById).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chat, topic, undefined, chatFullInfoById[forumId!])\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : forumTopicsById;\n\n    return [Object.keys(result).map(Number), result];\n  }, [forumId, topicSearch, forumTopicsById]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatsById = getGlobal().chats.byId;\n\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById[chatId];\n      if (chat?.isForum) {\n        if (!forumTopicsById) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleClick = useLastCallback((chatId: string) => {\n    const chatsById = getGlobal().chats.byId;\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!forumTopicsById) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const renderChatItem = useCallback((id: string, index: number) => {\n    const global = getGlobal();\n    const peer = selectPeer(global, id);\n    if (!peer) {\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? peer.isSelf : undefined;\n\n    function getSubtitle() {\n      if (!peer) return undefined;\n      if (peer.id === currentUserId) return [lang('SavedMessagesInfo')];\n      if (isApiPeerChat(peer)) {\n        return [getGroupStatus(lang, peer)];\n      }\n\n      const userStatus = selectUserStatus(global, peer.id);\n      return [\n        getUserStatus(lang, peer, userStatus),\n        buildClassName(isUserOnline(peer, userStatus, true) && 'online'),\n      ];\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={ITEM_CLASS_NAME}\n        title={<FullNameTitle peer={peer} isSavedMessages={isSelf} />}\n        avatarElement={(\n          <Avatar\n            peer={peer}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        ripple\n        style={`top: ${(viewportOffset + index) * PEER_PICKER_ITEM_HEIGHT_PX}px;`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleClick(id)}\n      />\n    );\n  }, [currentUserId, lang, viewportOffset]);\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <Icon name=\"arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={(topicIds?.length || 0) * TOPIC_ITEM_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {!topicIds && <Loading />}\n          {topicIds?.map((topicId, i) => (\n            <PickerItem\n              key={`${forumId}_${topicId}`}\n              className={ITEM_CLASS_NAME}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onSelectChatOrUser(forumId!, topicId)}\n              style={`top: ${(viewportOffset + i) * TOPIC_ITEM_HEIGHT_PX}px;`}\n              avatarElement={(\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n              )}\n              title={renderText(topics[topicId].title)}\n            />\n          ))}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            itemSelector={`.${ITEM_CLASS_NAME}`}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * PEER_PICKER_ITEM_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map(renderChatItem)}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      isLowStackPriority={isLowStackPriority}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChatType } from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  getCanPostInChat,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { filterPeersByQuery } from '../../global/helpers/peers';\nimport {\n  filterChatIdsByType, selectChat, selectChatFullInfo, selectUser,\n} from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from './helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\n\nimport ChatOrUserPicker from './pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  isLowStackPriority?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n  isLowStackPriority,\n}) => {\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n\n    const peerIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = selectChat(global, id);\n      const user = selectUser(global, id);\n      if (user && !isDeletedUser(user)) return true;\n\n      const chatFullInfo = selectChatFullInfo(global, id);\n\n      return chat && (!chatFullInfo || getCanPostInChat(chat, undefined, undefined, chatFullInfo));\n    });\n\n    const sorted = sortChatIds(\n      filterPeersByQuery({\n        ids: unique([\n          ...(currentUserId ? [currentUserId] : []),\n          ...peerIds,\n          ...(contactIds || []),\n        ]),\n        query: search,\n      }),\n      undefined,\n      priorityIds,\n      currentUserId,\n    );\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      currentUserId={currentUserId}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      isLowStackPriority={isLowStackPriority}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ThreadId } from '../../types';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n  isForwarding?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n  isForwarding,\n}) => {\n  const {\n    openChatOrTopicWithReplyInDraft,\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingIsStory = usePreviousDeprecated(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      const chatId = recipientId;\n      const topicId = threadId ? Number(threadId) : undefined;\n      if (isForwarding) {\n        setForwardChatOrTopic({ chatId, topicId });\n      } else {\n        openChatOrTopicWithReplyInDraft({ chatId, topicId });\n      }\n    }\n  }, [currentUserId, isManyMessages, isStory, lang, isForwarding]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang(isForwarding ? 'ForwardTo' : 'ReplyToDialog')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  const isForwarding = (messageIds && messageIds.length > 0);\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n    isForwarding,\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\nimport type { ThreadId } from '../../types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError,\n} from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    sendMessage,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: contactRequest,\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiContact) => {\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map((notification) => (\n        <Notification key={notification.localId} notification={notification} />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/browser/url';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    if (!url) {\n      return;\n    }\n\n    window.open(ensureProtocol(url), '_blank', 'noopener noreferrer');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlText', { url: renderingUrl }, { withNodes: true, withMarkdown: true }))}\n      confirmLabel={lang('OpenUrlConfirm')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VJDwJpsF\",\"buttons\":\"aYO2C2Hx\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { IS_IOS, IS_MAC_OS } from '../../../util/browser/windowEnvironment';\nimport { prepareMapUrl } from '../../../util/map';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['mapModal'];\n};\n\nconst OpenMapModal = ({ modal }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const { point: geoPoint, zoom } = modal || {};\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          OpenStreetMap\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { ensureProtocol } from '../../../util/browser/url';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal?: TabState['urlAuth'];\n};\n\ntype StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst UrlAuthModal: FC<OwnProps & StateProps> = ({\n  modal, currentUser,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(modal, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    if (modal?.url && isLoginChecked) {\n      const acceptAction = modal.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else if (currentAuth?.url) {\n      window.open(ensureProtocol(currentAuth.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    modal, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(modal?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, getUserFullName(currentUser)]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    return {\n      currentUser,\n    };\n  },\n)(UrlAuthModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { OldLangFn } from '../../hooks/useOldLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dates/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useOldLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  const isDisabled = (isFutureMode && selectedDate.getTime() < minDate.getTime())\n    || (isPastMode && selectedDate.getTime() > maxDate.getTime());\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    if (isFutureMode && selectedDate < minDate) {\n      onSubmit(minDate);\n    } else if (isPastMode && selectedDate > maxDate) {\n      onSubmit(maxDate);\n    } else {\n      onSubmit(selectedDate);\n    }\n  }, [isFutureMode, isPastMode, minDate, maxDate, onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <Icon name=\"previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <Icon name=\"next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <div className=\"footer\">\n          <Button\n            onClick={handleSubmit}\n            disabled={isDisabled}\n          >\n            {submitLabel}\n          </Button>\n          {secondButtonLabel && (\n            <Button onClick={onSecondButtonClick} isText>\n              {secondButtonLabel}\n            </Button>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: OldLangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.getTime() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useOldLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useOldLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text NewContactModal__help-text__negative\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import type { RefObject } from 'react';\nimport {\n  useEffect, useSignal, useState,\n} from '../lib/teact/teact';\n\nimport type { Point, Size } from '../types';\n\nimport { RESIZE_HANDLE_SELECTOR } from '../config';\nimport buildStyle from '../util/buildStyle';\nimport { captureEvents } from '../util/captureEvents';\nimport useFlag from './useFlag';\nimport useLastCallback from './useLastCallback';\n\nexport enum ResizeHandleType {\n  Top,\n  Bottom,\n  Left,\n  Right,\n  TopLeft,\n  TopRight,\n  BottomLeft,\n  BottomRight,\n}\n\ntype ResizeHandleSelectorType = 'top' | 'bottom' | 'left'\n| 'right' | 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n\nconst resizeHandleSelectorsMap: Record<ResizeHandleSelectorType, ResizeHandleType> = {\n  top: ResizeHandleType.Top,\n  bottom: ResizeHandleType.Bottom,\n  left: ResizeHandleType.Left,\n  right: ResizeHandleType.Right,\n  topLeft: ResizeHandleType.TopLeft,\n  topRight: ResizeHandleType.TopRight,\n  bottomLeft: ResizeHandleType.BottomLeft,\n  bottomRight: ResizeHandleType.BottomRight,\n};\n\nconst resizeHandleSelectors = Object.keys(resizeHandleSelectorsMap) as ResizeHandleSelectorType[];\n\nlet resizeTimeout: number | undefined;\nconst FULLSCREEN_POSITION = { x: 0, y: 0 };\n\nexport default function useDraggable(\n  ref: RefObject<HTMLElement>,\n  dragHandleElementRef: RefObject<HTMLElement>,\n  isDragEnabled: boolean = true,\n  originalSize: Size,\n  isFullscreen: boolean = false,\n  minimumSize: Size = { width: 0, height: 0 },\n  cachedPosition?: Point,\n) {\n  const [elementCurrentPosition, setElementCurrentPosition] = useState<Point | undefined>(cachedPosition);\n  const [elementCurrentSize, setElementCurrentSize] = useState<Size | undefined>(undefined);\n\n  const [getElementPositionOnStartTransform, setElementPositionOnStartTransform] = useSignal({ x: 0, y: 0 });\n  const [getElementSizeOnStartTransform, setElementSizeOnStartTransform] = useSignal({ width: 0, height: 0 });\n  const [getTransformStartPoint, setTransformStartPoint] = useSignal({ x: 0, y: 0 });\n\n  const elementPositionOnStartTransform = getElementPositionOnStartTransform();\n  const transformStartPoint = getTransformStartPoint();\n\n  const element = ref.current;\n  const dragHandleElement = dragHandleElementRef.current;\n\n  const [isInitiated, setIsInitiated] = useFlag(false);\n  const [wasElementShown, setWasElementShown] = useFlag(false);\n  const [isDragging, startDragging, stopDragging] = useFlag(false);\n  const [isResizing, startResizing, stopResizing] = useFlag(false);\n  const [isWindowsResizing, startWindowResizing, stopWindowResizing] = useFlag(false);\n\n  const [hitResizeHandle, setHitResizeHandle] = useState<ResizeHandleType | undefined>(undefined);\n\n  function getVisibleArea() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n  }\n\n  const updateCurrentPosition = useLastCallback((position: Point) => {\n    if (!isFullscreen) setElementCurrentPosition({ x: position.x, y: position.y });\n  });\n\n  const getActualPosition = useLastCallback(() => {\n    return isFullscreen ? FULLSCREEN_POSITION : elementCurrentPosition;\n  });\n\n  const getCenteredPosition = useLastCallback(() => {\n    if (!elementCurrentSize) return undefined;\n    const { width, height } = elementCurrentSize;\n\n    const visibleArea = getVisibleArea();\n    const viewportWidth = visibleArea.width;\n    const viewportHeight = visibleArea.height;\n\n    const centeredX = (viewportWidth - width) / 2;\n    const centeredY = (viewportHeight - height) / 2;\n\n    return { x: centeredX, y: centeredY };\n  });\n\n  useEffect(() => {\n    if (element) setWasElementShown();\n  }, [element]);\n\n  useEffect(() => {\n    if (!isInitiated && elementCurrentSize) {\n      const centeredPosition = getCenteredPosition();\n      if (!centeredPosition) return;\n\n      updateCurrentPosition(centeredPosition);\n      setIsInitiated();\n    }\n  }, [elementCurrentSize, isInitiated, element]);\n\n  const handleStartDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (event instanceof MouseEvent && event.button !== 0) {\n      return;\n    }\n\n    const targetElement = event.target as HTMLElement;\n    if (targetElement.closest('.no-drag') || !element) {\n      return;\n    }\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const { left, top } = element.getBoundingClientRect();\n    setElementPositionOnStartTransform({ x: left, y: top });\n    setTransformStartPoint({ x: pageX, y: pageY });\n\n    startDragging();\n  });\n\n  function getResizeHandleFromTarget(targetElement: HTMLElement) {\n    const closest = (selector: string) => targetElement.closest(selector);\n\n    if (!closest(RESIZE_HANDLE_SELECTOR)) return undefined;\n    for (const selector of resizeHandleSelectors) {\n      if (closest(`.${selector}`)) { return resizeHandleSelectorsMap[selector]; }\n    }\n    return undefined;\n  }\n\n  const handleStartResize = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (event instanceof MouseEvent && event.button !== 0) {\n      return;\n    }\n\n    const targetElement = event.target as HTMLElement;\n    if (!element || !targetElement) {\n      return;\n    }\n    const resizeHandle = getResizeHandleFromTarget(targetElement);\n\n    if (resizeHandle === undefined) return;\n    setHitResizeHandle(resizeHandle);\n\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const {\n      left, right, top, bottom,\n    } = element.getBoundingClientRect();\n    setElementPositionOnStartTransform({ x: left, y: top });\n    setElementSizeOnStartTransform({ width: right - left, height: bottom - top });\n    setTransformStartPoint({ x: pageX, y: pageY });\n\n    startResizing();\n  });\n\n  const handleDragRelease = useLastCallback(() => {\n    stopDragging();\n  });\n\n  const handleResizeRelease = useLastCallback(() => {\n    stopResizing();\n  });\n\n  useEffect(() => {\n    if (!isDragEnabled) {\n      stopDragging();\n    }\n  }, [isDragEnabled]);\n\n  const ensurePositionInVisibleArea = (x: number, y: number) => {\n    const visibleArea = getVisibleArea();\n\n    const visibleAreaWidth = visibleArea.width;\n    const visibleAreaHeight = visibleArea.height;\n\n    const componentWidth = elementCurrentSize!.width;\n    const componentHeight = elementCurrentSize!.height;\n\n    let newX = x;\n    let newY = y;\n\n    if (newX < 0) newX = 0;\n    if (newY < 0) newY = 0;\n    if (newX + componentWidth > visibleAreaWidth) newX = visibleAreaWidth - componentWidth;\n    if (newY + componentHeight > visibleAreaHeight) newY = visibleAreaHeight - componentHeight;\n\n    return { x: newX, y: newY };\n  };\n\n  const adjustPositionWithinBounds = useLastCallback(() => {\n    if (isFullscreen) return;\n    const position = !wasElementShown && !cachedPosition ? getCenteredPosition() : elementCurrentPosition;\n    if (!elementCurrentSize || !position) return;\n    const newPosition = ensurePositionInVisibleArea(position.x, position.y);\n    updateCurrentPosition(newPosition);\n  });\n\n  const ensureSizeInVisibleArea = useLastCallback((sizeForCheck: Size) => {\n    const newSize = sizeForCheck;\n\n    const visibleArea = getVisibleArea();\n\n    const originalWidth = originalSize.width;\n    const originalHeight = originalSize.height;\n    newSize.width = Math.min(visibleArea.width, Math.max(originalWidth, newSize.width));\n    newSize.height = Math.min(visibleArea.height, Math.max(originalHeight, newSize.height));\n\n    return newSize;\n  });\n\n  useEffect(() => {\n    if (isResizing) return;\n    const newSize = ensureSizeInVisibleArea({ width: originalSize.width, height: originalSize.height });\n    if (newSize) setElementCurrentSize(newSize);\n  }, [originalSize, isResizing]);\n\n  const adjustSizeWithinBounds = useLastCallback(() => {\n    if (!elementCurrentSize || isResizing) return;\n    const newSize = ensureSizeInVisibleArea(elementCurrentSize);\n    if (newSize) setElementCurrentSize(newSize);\n  });\n\n  useEffect(() => {\n    if (isResizing) return;\n    adjustPositionWithinBounds();\n  }, [elementCurrentSize, isResizing]);\n\n  useEffect(() => {\n    const handleWindowResize = () => {\n      startWindowResizing();\n      adjustSizeWithinBounds();\n      adjustPositionWithinBounds();\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = undefined;\n      }\n      resizeTimeout = window.setTimeout(() => {\n        resizeTimeout = undefined;\n        stopWindowResizing();\n      }, 250);\n    };\n\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      clearTimeout(resizeTimeout);\n      resizeTimeout = undefined;\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, [adjustPositionWithinBounds]);\n\n  const handleDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isDragging || !element) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const offsetX = pageX - transformStartPoint.x;\n    const offsetY = pageY - transformStartPoint.y;\n\n    const newX = elementPositionOnStartTransform.x + offsetX;\n    const newY = elementPositionOnStartTransform.y + offsetY;\n\n    if (elementCurrentSize) setElementCurrentPosition(ensurePositionInVisibleArea(newX, newY));\n  });\n\n  const handleResize = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isResizing || !element || hitResizeHandle === undefined) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n    const sizeOnStartTransform = getElementSizeOnStartTransform();\n\n    const pageVisibleX = Math.min(Math.max(0, pageX), getVisibleArea().width);\n    const pageVisibleY = Math.min(Math.max(0, pageY), getVisibleArea().height);\n\n    const offsetX = pageVisibleX - transformStartPoint.x;\n    const offsetY = pageVisibleY - transformStartPoint.y;\n\n    const maxX = elementPositionOnStartTransform.x + sizeOnStartTransform.width - minimumSize.width;\n    const maxY = elementPositionOnStartTransform.y + sizeOnStartTransform.height - minimumSize.height;\n\n    const originalBounds = {\n      x: elementPositionOnStartTransform.x,\n      y: elementPositionOnStartTransform.y,\n      width: sizeOnStartTransform.width,\n      height: sizeOnStartTransform.height,\n    };\n\n    const newBounds = { ...originalBounds };\n\n    if (hitResizeHandle === ResizeHandleType.Left\n    || hitResizeHandle === ResizeHandleType.TopLeft\n    || hitResizeHandle === ResizeHandleType.BottomLeft\n    ) {\n      newBounds.width = Math.max(sizeOnStartTransform.width - offsetX, minimumSize.width);\n      newBounds.x = Math.min(newBounds.x + offsetX, maxX);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Right\n    || hitResizeHandle === ResizeHandleType.TopRight\n    || hitResizeHandle === ResizeHandleType.BottomRight\n    ) {\n      newBounds.width = Math.max(sizeOnStartTransform.width + offsetX, minimumSize.width);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Top\n    || hitResizeHandle === ResizeHandleType.TopLeft\n    || hitResizeHandle === ResizeHandleType.TopRight\n    ) {\n      newBounds.height = Math.max(sizeOnStartTransform.height - offsetY, minimumSize.height);\n      newBounds.y = Math.min(newBounds.y + offsetY, maxY);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Bottom\n    || hitResizeHandle === ResizeHandleType.BottomLeft\n    || hitResizeHandle === ResizeHandleType.BottomRight\n    ) {\n      newBounds.height = Math.max(sizeOnStartTransform.height + offsetY, minimumSize.height);\n    }\n\n    setElementCurrentSize({ width: newBounds.width, height: newBounds.height });\n    setElementCurrentPosition({ x: newBounds.x, y: newBounds.y });\n  });\n\n  useEffect(() => {\n    let cleanup: NoneToVoidFunction | undefined;\n    if (dragHandleElement && isDragEnabled) {\n      cleanup = captureEvents(dragHandleElement, {\n        onCapture: handleStartDrag,\n        onDrag: handleDrag,\n        onRelease: handleDragRelease,\n        onClick: handleDragRelease,\n        onDoubleClick: handleDragRelease,\n      });\n    }\n    return cleanup;\n  }, [isDragEnabled, dragHandleElement]);\n\n  useEffect(() => {\n    const cleanups: NoneToVoidFunction[] = [];\n    if (element && isDragEnabled) {\n      for (const selector of resizeHandleSelectors) {\n        const resizeHandler = element.querySelector(`.resizeHandle.${selector}`) as HTMLElement;\n\n        if (resizeHandler) {\n          const cleanup = captureEvents(resizeHandler, {\n            onCapture: handleStartResize,\n            onDrag: handleResize,\n            onRelease: handleResizeRelease,\n            onClick: handleResizeRelease,\n            onDoubleClick: handleResizeRelease,\n          });\n\n          if (cleanup) {\n            cleanups.push(cleanup);\n          }\n        }\n      }\n    }\n\n    return () => {\n      cleanups.forEach((cleanup) => cleanup());\n    };\n  }, [isDragEnabled, element]);\n\n  const cursorStyle = isDragging ? 'cursor: grabbing !important; ' : '';\n\n  const actualPosition = getActualPosition();\n\n  if (!isInitiated || !elementCurrentSize || !actualPosition) {\n    return {\n      isDragging: false,\n      style: cursorStyle,\n    };\n  }\n\n  const style = buildStyle(\n    `left: ${actualPosition.x}px;`,\n    `top: ${actualPosition.y}px;`,\n    !isFullscreen && `max-width: ${elementCurrentSize.width}px;`,\n    !isFullscreen && `max-height: ${elementCurrentSize.height}px;`,\n    'position: fixed;',\n    (isDragging || isResizing || isWindowsResizing) && 'transition: none !important;',\n    cursorStyle,\n  );\n\n  return {\n    position: elementCurrentPosition,\n    size: elementCurrentSize,\n    isDragging,\n    isResizing,\n    style,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kUZmBlnN\",\"window-state-button\":\"Rax9j_TK\",\"windowStateButton\":\"Rax9j_TK\",\"button\":\"SMRJmUuE\",\"avatars\":\"GP17QhNN\",\"state-icon\":\"sdbTXCxq\",\"stateIcon\":\"sdbTXCxq\",\"icon\":\"P0P4gW6a\",\"title\":\"TZFjRaG4\"};","import React, {\n  memo, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { WebApp } from '../../../types/webapp';\n\nimport { selectActiveWebApp, selectTabState, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MinimizedWebAppModal.module.scss';\n\ntype StateProps = {\n  activeTabBot?: ApiUser;\n  isMinimizedState?: boolean;\n  openedWebApps?: Record<string, WebApp>;\n};\n\nconst MinimizedWebAppModal = ({\n  activeTabBot, isMinimizedState, openedWebApps,\n}: StateProps) => {\n  const {\n    changeWebAppModalState,\n    closeWebAppModal,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const openedWebAppsValues = useMemo(() => {\n    return openedWebApps && Object.values(openedWebApps);\n  }, [openedWebApps]);\n\n  const openedTabsCount = openedWebAppsValues?.length;\n\n  const peers = useMemo(() => {\n    if (!openedTabsCount) return [];\n\n    const global = getGlobal();\n    const activeTabBotId = activeTabBot?.id;\n    const openedApps = unique([activeTabBotId, ...openedWebAppsValues.map((app) => app.botId)]);\n    const bots = openedApps.map((id) => id && selectUser(global, id)).filter(Boolean).slice(0, 3);\n    return bots;\n  }, [openedTabsCount, activeTabBot, openedWebAppsValues]);\n\n  const handleCloseClick = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleExpandClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'maximized' });\n  });\n\n  if (!isMinimizedState) return undefined;\n\n  function renderTitle() {\n    const activeTabName = peers.length > 0 && peers[0]?.firstName;\n    const title = openedTabsCount && activeTabName && openedTabsCount > 1\n      ? `${lang('MiniAppsMoreTabs',\n        {\n          botName: activeTabName,\n          count: openedTabsCount - 1,\n        },\n        {\n          pluralValue: openedTabsCount - 1,\n        })}`\n      : activeTabName;\n\n    return (\n      <div className={styles.title}>\n        {title}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n      )}\n    >\n      <Button\n        className={styles.button}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        ariaLabel={oldLang('Close')}\n        onClick={handleCloseClick}\n      >\n        <Icon className={styles.icon} name=\"close\" />\n      </Button>\n      <AvatarList className={styles.avatars} size=\"mini\" peers={peers} />\n      {renderTitle()}\n      <Button\n        className={buildClassName(\n          styles.windowStateButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleExpandClick}\n      >\n        <Icon className={styles.stateIcon} name=\"expand-modal\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const webApps = tabState.webApps;\n\n    const { botId } = selectActiveWebApp(global) || {};\n    const { modalState, openedWebApps } = webApps || {};\n    const isMinimizedState = modalState === 'minimized';\n    const activeTabBot = botId ? selectUser(global, botId) : undefined;\n\n    return {\n      activeTabBot,\n      isMinimizedState,\n      openedWebApps,\n    };\n  },\n)(MinimizedWebAppModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RFg0Ey2I\",\"user-count-badge\":\"UZtJ6ZXb\",\"userCountBadge\":\"UZtJ6ZXb\",\"user-badge-icon\":\"pTiZFhsG\",\"userBadgeIcon\":\"pTiZFhsG\",\"name\":\"TzA5nqCC\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport PeerBadge from '../../common/PeerBadge';\n\nimport styles from './WebAppGridItem.module.scss';\n\nexport type OwnProps = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  chatId: string;\n  isPopularApp?: boolean;\n};\n\nexport type StateProps = {\n  user?: ApiUser;\n};\n\nfunction WebAppGridItem({ user, isPopularApp }: OwnProps & StateProps) {\n  const {\n    requestMainWebView,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleClick = useLastCallback(() => {\n    if (!user) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n    });\n  });\n\n  if (!user) return undefined;\n\n  // eslint-disable-next-line no-null/no-null\n\n  const title = user?.firstName;\n  const activeUserCount = user?.botActiveUsers;\n  const badgeText = activeUserCount && isPopularApp ? formatIntegerCompact(lang, activeUserCount) : undefined;\n\n  return (\n    <div\n      className={styles.container}\n      onClick={handleClick}\n    >\n      <PeerBadge\n        className={buildClassName(styles.avatarContainer, isPopularApp && 'PopularAppGridItem')}\n        textClassName={styles.name}\n        badgeClassName={styles.userCountBadge}\n        badgeIconClassName={styles.userBadgeIcon}\n        peer={user}\n        text={title}\n        badgeText={badgeText}\n        badgeIcon=\"user-filled\"\n      />\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const user = selectUser(global, chatId);\n\n    return {\n      user,\n    };\n  },\n)(WebAppGridItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BJV09FsC\",\"search\":\"bdi8G7GR\",\"section-title\":\"ex3kxgWX\",\"sectionTitle\":\"ex3kxgWX\",\"section-content\":\"uIZzLhEh\",\"sectionContent\":\"uIZzLhEh\",\"showMoreLink\":\"h_Zs9ypA\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback,\n  useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport WebAppGridItem from './WebAppGridItem';\n\nimport styles from './MoreAppsTabContent.module.scss';\n\nconst POPULAR_APPS_SLICE = 30;\n\nexport type OwnProps = {\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\nconst LESS_GRID_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MoreAppsTabContent: FC<OwnProps & StateProps> = ({\n  foundIds,\n  recentBotIds,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n  const {\n    searchPopularBotApps,\n  } = getActions();\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n\n    return filterPeersByQuery({ ids: foundIds, query: searchQuery, type: 'user' });\n  }, [foundIds, searchQuery]);\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleSearchInputReset = useCallback(() => {\n    setSearchQuery('');\n  }, []);\n\n  return (\n    <InfiniteScroll\n      className={buildClassName(styles.root, 'custom-scroll')}\n      items={filteredFoundIds}\n      onLoadMore={handleLoadMore}\n      itemSelector=\".PopularAppGridItem\"\n      noFastList\n      preloadBackwards={POPULAR_APPS_SLICE}\n    >\n      <SearchInput\n        className={styles.search}\n        value={searchQuery}\n        onChange={setSearchQuery}\n        onReset={handleSearchInputReset}\n        placeholder={lang('SearchApps')}\n      />\n      {recentBotIds && !searchQuery && (\n        <div className={styles.section}>\n          <div className={styles.sectionTitle}>\n            <span>{oldLang('SearchAppsMine')}</span>\n            <span className={styles.showMoreLink} onClick={handleToggleShowMoreMine}>\n              {oldLang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n            </span>\n          </div>\n          <div className={styles.sectionContent}>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_GRID_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <WebAppGridItem\n                  chatId={id}\n                />\n              );\n            })}\n          </div>\n        </div>\n      )}\n      <div className={styles.section}>\n        <div className={styles.sectionTitle}>\n          {searchQuery ? lang('Apps') : lang('PopularApps')}\n        </div>\n        <div className={styles.sectionContent}>\n          {filteredFoundIds && filteredFoundIds.map((id) => {\n            return (\n              <WebAppGridItem\n                chatId={id}\n                isPopularApp={!searchQuery}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(MoreAppsTabContent));\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebApp, WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { getWebAppKey } from '../../../../global/helpers';\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst RELOAD_TIMEOUT = 500;\nconst FULLSCREEN_BUTTONS_AREA_HEIGHT = 3.675 * REM;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isFullscreen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  webApp?: WebApp,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n    openSuggestedStatusModal,\n    updateWebApp,\n  } = getActions();\n\n  const isReloadSupported = useRef<boolean>(false);\n  const reloadTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const sendFullScreenChanged = useCallback((value: boolean) => {\n    sendEvent({\n      eventType: 'fullscreen_changed',\n      eventData: {\n        is_fullscreen: value,\n      },\n    });\n  }, [sendEvent]);\n\n  const forceReloadFrame = useLastCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  });\n\n  const reloadFrame = useCallback((url: string) => {\n    if (isReloadSupported.current) {\n      sendEvent({\n        eventType: 'reload_iframe',\n      });\n      reloadTimeout.current = setTimeout(() => {\n        forceReloadFrame(url);\n      }, RELOAD_TIMEOUT);\n      return;\n    }\n\n    forceReloadFrame(url);\n  }, [sendEvent]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendSafeArea = useCallback(() => {\n    if (!ref.current) {\n      return;\n    }\n    sendEvent({\n      eventType: 'safe_area_changed',\n      eventData: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n      },\n    });\n\n    sendEvent({\n      eventType: 'content_safe_area_changed',\n      eventData: {\n        left: 0,\n        right: 0,\n        top: isFullscreen ? FULLSCREEN_BUTTONS_AREA_HEIGHT : 0,\n        bottom: 0,\n      },\n    });\n  }, [sendEvent, isFullscreen, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n    const contentWindow = ref.current?.contentWindow;\n    const sourceWindow = event.source as Window;\n\n    if (contentWindow !== sourceWindow) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        if (webApp) {\n          const key = getWebAppKey(webApp);\n          closeWebApp({ key, skipClosingConfirmation: true });\n        }\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_safe_area') {\n        sendSafeArea();\n      }\n\n      if (eventType === 'web_app_request_content_safe_area') {\n        sendSafeArea();\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n        isReloadSupported.current = Boolean(eventData.reload_supported);\n      }\n\n      if (eventType === 'iframe_will_reload') {\n        clearTimeout(reloadTimeout.current);\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          type: 'slug',\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      if (eventType === 'web_app_biometry_get_info') {\n        sendEvent({\n          eventType: 'biometry_info_received',\n          eventData: {\n            available: false,\n          },\n        });\n      }\n\n      if (eventType === 'web_app_device_storage_clear'\n        || eventType === 'web_app_device_storage_get_key'\n        || eventType === 'web_app_device_storage_save_key') {\n        const { req_id } = eventData;\n        sendEvent({\n          eventType: 'device_storage_failed',\n          eventData: {\n            req_id,\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_secure_storage_clear'\n        || eventType === 'web_app_secure_storage_get_key'\n        || eventType === 'web_app_secure_storage_restore_key'\n        || eventType === 'web_app_secure_storage_save_key') {\n        const { req_id } = eventData;\n        sendEvent({\n          eventType: 'secure_storage_failed',\n          eventData: {\n            req_id,\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_start_accelerometer') {\n        sendEvent({\n          eventType: 'accelerometer_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_start_gyroscope') {\n        sendEvent({\n          eventType: 'gyroscope_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_start_device_orientation') {\n        sendEvent({\n          eventType: 'device_orientation_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_add_to_home_screen') {\n        sendEvent({\n          eventType: 'home_screen_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_check_home_screen') {\n        sendEvent({\n          eventType: 'home_screen_checked',\n          eventData: {\n            status: 'unsupported',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_set_emoji_status') {\n        const { custom_emoji_id, duration } = eventData;\n\n        if (!custom_emoji_id || typeof custom_emoji_id !== 'string') {\n          sendEvent({\n            eventType: 'emoji_status_failed',\n            eventData: {\n              error: 'SUGGESTED_EMOJI_INVALID',\n            },\n          });\n          return;\n        }\n\n        if (duration) {\n          try {\n            BigInt(duration);\n          } catch (e) {\n            sendEvent({\n              eventType: 'emoji_status_failed',\n              eventData: {\n                error: 'DURATION_INVALID',\n              },\n            });\n            return;\n          }\n        }\n\n        if (!webApp) {\n          sendEvent({\n            eventType: 'emoji_status_failed',\n            eventData: {\n              error: 'UNKNOWN_ERROR',\n            },\n          });\n          return;\n        }\n\n        openSuggestedStatusModal({\n          webAppKey: getWebAppKey(webApp),\n          customEmojiId: custom_emoji_id,\n          duration: Number(duration),\n          botId: webApp.botId,\n        });\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [\n    isSimpleView, sendEvent, onEvent, sendCustomStyle, webApp,\n    sendTheme, sendViewport, sendSafeArea, onLoad, windowSize.isResizing,\n    ref,\n  ]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, sendSafeArea, windowSize]);\n\n  useEffect(() => {\n    if (!webApp?.plannedEvents?.length) return;\n    const events = webApp.plannedEvents;\n    events.forEach((event) => {\n      sendEvent(event);\n    });\n\n    updateWebApp({\n      key: getWebAppKey(webApp),\n      update: {\n        plannedEvents: [],\n      },\n    });\n  }, [sendEvent, webApp]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage, ref]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      sendSafeArea();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, isFullscreen, sendViewport, sendSafeArea, ref]);\n\n  return {\n    sendEvent, sendFullScreenChanged, reloadFrame, sendViewport, sendSafeArea, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LeeJZdwH\",\"multi-tab\":\"ESsGT5OD\",\"multiTab\":\"ESsGT5OD\",\"loadingPlaceholder\":\"jEAibDyh\",\"placeholderPath\":\"Gx1BIECZ\",\"fadeOpacityBreath\":\"N5Blieah\",\"defaultPlaceholderGrid\":\"Ig_t1R7i\",\"placeholderSquare\":\"ablUg8HU\",\"hide\":\"Wrl63uWL\",\"frame\":\"OmY14FFl\",\"with-button\":\"liDRl1xT\",\"withButton\":\"liDRl1xT\",\"hidden\":\"vOFiAq3l\",\"secondary-button\":\"ypxiUCFQ\",\"secondaryButton\":\"ypxiUCFQ\",\"main-button\":\"U_ggDKn1\",\"mainButton\":\"U_ggDKn1\",\"visible\":\"KwI4XdkC\",\"buttons-container\":\"mR_hsBdT\",\"buttonsContainer\":\"mR_hsBdT\",\"one-row\":\"YfQO314y\",\"oneRow\":\"YfQO314y\",\"two-rows\":\"gUldkEoy\",\"twoRows\":\"gUldkEoy\",\"left-to-right\":\"ntESqwQ_\",\"leftToRight\":\"ntESqwQ_\",\"right-to-left\":\"q6IUFEL0\",\"rightToLeft\":\"q6IUFEL0\",\"top-to-bottom\":\"gb4iHJ9H\",\"topToBottom\":\"gb4iHJ9H\",\"bottom-to-top\":\"R_bh3GF8\",\"bottomToTop\":\"R_bh3GF8\",\"hide-horizontal\":\"oYaRA7u4\",\"hideHorizontal\":\"oYaRA7u4\",\"secondary-button-spinner\":\"NYV0yA2J\",\"secondaryButtonSpinner\":\"NYV0yA2J\",\"main-button-spinner\":\"oq6HKJur\",\"mainButtonSpinner\":\"oq6HKJur\",\"web-app-popup\":\"YEOURXza\",\"webAppPopup\":\"YEOURXza\",\"without-title\":\"gvljUzY9\",\"withoutTitle\":\"gvljUzY9\",\"closeIcon\":\"BvNtfigU\",\"state-back\":\"rC2wkMIk\",\"stateBack\":\"rC2wkMIk\",\"backIconContainer\":\"JXsuZ01s\",\"moreIcon\":\"T58ozRyW\",\"headerPanel\":\"eYrhewMy\",\"icon\":\"a0AI_he5\",\"headerSplitButton\":\"Tl4_05AQ\",\"headerButton\":\"MvCwTbk_\",\"left\":\"emOpAMBm\",\"right\":\"z4C5VD5o\",\"buttonCaptionContainer\":\"dpZR3YT7\",\"backButtonCaption\":\"dWDprnWa\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachBot, ApiBotAppSettings, ApiUser,\n} from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { BotAppPermissions, ThemeKey } from '../../../types';\nimport type {\n  PopupOptions,\n  WebApp,\n  WebAppInboundEvent,\n  WebAppModalStateType,\n  WebAppOutboundEvent,\n} from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectBotAppPermissions,\n  selectTabState,\n  selectTheme,\n  selectUser,\n  selectUserFullInfo,\n  selectWebApp,\n} from '../../../global/selectors';\nimport { getGeolocationStatus, IS_GEOLOCATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport download from '../../../util/download';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\nimport renderText from '../../common/helpers/renderText';\n\nimport { getIsWebAppsFullscreenSupported } from '../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport useFullscreen, { checkIfFullscreen } from '../../../hooks/window/useFullscreen';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\nimport Transition from '../../ui/Transition';\n\nimport styles from './WebAppModalTabContent.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n  position?: 'left' | 'right' | 'top' | 'bottom';\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n  webApp?: WebApp;\n  registerSendEventCallback: (callback: (event: WebAppOutboundEvent) => void) => void;\n  registerReloadFrameCallback: (callback: (url: string) => void) => void;\n  onContextMenuButtonClick: (e: React.MouseEvent) => void;\n  isTransforming?: boolean;\n  isMultiTabSupported? : boolean;\n  modalHeight: number;\n};\n\ntype StateProps = {\n  bot?: ApiUser;\n  currentUser?: ApiUser;\n  botAppSettings?: ApiBotAppSettings;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n  isPremium?: boolean;\n  modalState?: WebAppModalStateType;\n  botAppPermissions?: BotAppPermissions;\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst ANIMATION_WAIT = 400;\nconst COLLAPSING_WAIT = 350;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst APP_NAME_DISPLAY_DURATION = 3800;\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModalTabContent: FC<OwnProps & StateProps> = ({\n  modal,\n  webApp,\n  bot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n  registerSendEventCallback,\n  registerReloadFrameCallback,\n  isTransforming,\n  modalState,\n  isMultiTabSupported,\n  onContextMenuButtonClick,\n  botAppPermissions,\n  botAppSettings,\n  modalHeight,\n}) => {\n  const {\n    closeActiveWebApp,\n    sendWebViewData,\n    toggleAttachBot,\n    openTelegramLink,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n    updateWebApp,\n    resetPaymentStatus,\n    openChatWithInfo,\n    showNotification,\n    openEmojiStatusAccessModal,\n    openLocationAccessModal,\n    changeWebAppModalState,\n    closeWebAppModal,\n    openPreparedInlineMessageModal,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [secondaryButton, setSecondaryButton] = useState<WebAppButton | undefined>();\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequestingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const [requestedFileDownload, setRequestedFileDownload] = useState<{ url: string; fileName: string } | undefined>();\n  const [bottomBarColor, setBottomBarColor] = useState<string | undefined>();\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerButtonRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerButtonCaptionRef = useRef<HTMLDivElement>(null);\n\n  const isFullscreen = modalState === 'fullScreen';\n  const isMinimizedState = modalState === 'minimized';\n\n  const exitFullScreenCallback = useLastCallback(() => {\n    setTimeout(() => { changeWebAppModalState({ state: 'maximized' }); }, COLLAPSING_WAIT);\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const fullscreenElementRef = useRef<HTMLElement | null>(null);\n\n  useEffect(() => {\n    fullscreenElementRef.current = document.querySelector('#portals') as HTMLElement;\n  }, []);\n\n  const [, setFullscreen, exitFullscreen] = useFullscreen(fullscreenElementRef, exitFullScreenCallback);\n\n  const activeWebApp = modal?.activeWebAppKey ? modal.openedWebApps[modal.activeWebAppKey] : undefined;\n  const activeWebAppName = activeWebApp?.appName;\n  const {\n    url, buttonText, isBackButtonVisible,\n  } = webApp || {};\n\n  const {\n    placeholderPath,\n  } = botAppSettings || {};\n\n  const isCloseModalOpen = Boolean(webApp?.isCloseModalOpen);\n  const isRemoveModalOpen = Boolean(webApp?.isRemoveModalOpen);\n\n  const webAppKey = webApp && getWebAppKey(webApp);\n  const activeWebAppKey = activeWebApp && getWebAppKey(activeWebApp);\n\n  const isActive = (activeWebApp && webApp) && activeWebAppKey === webAppKey;\n\n  const isAvailable = IS_GEOLOCATION_SUPPORTED;\n  const isAccessRequested = botAppPermissions?.geolocation !== undefined;\n  const isAccessGranted = Boolean(botAppPermissions?.geolocation);\n\n  const updateCurrentWebApp = useLastCallback((updatedPartialWebApp: Partial<WebApp>) => {\n    if (!webAppKey) return;\n    updateWebApp({ key: webAppKey, update: updatedPartialWebApp });\n  });\n\n  const themeParams = useMemo(() => {\n    return extractCurrentThemeParams();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [theme]);\n\n  useEffect(() => {\n    setBottomBarColor(themeParams.secondary_bg_color);\n  }, [themeParams]);\n\n  const themeBackgroundColor = themeParams.bg_color;\n  const [backgroundColorFromEvent, setBackgroundColorFromEvent] = useState<string | undefined>();\n  const backgroundColorFromSettings = theme === 'light' ? botAppSettings?.backgroundColor\n    : botAppSettings?.backgroundDarkColor;\n\n  useEffect(() => {\n    const color = backgroundColorFromEvent || backgroundColorFromSettings || themeBackgroundColor;\n\n    updateCurrentWebApp({ backgroundColor: color });\n  }, [themeBackgroundColor, backgroundColorFromEvent, backgroundColorFromSettings]);\n\n  const themeHeaderColor = themeParams.bg_color;\n  const [headerColorFromEvent, setHeaderColorFromEvent] = useState<string | undefined>();\n  const headerColorFromSettings = theme === 'light' ? botAppSettings?.headerColor\n    : botAppSettings?.headerDarkColor;\n\n  useEffect(() => {\n    const color = headerColorFromEvent || headerColorFromSettings || themeHeaderColor;\n\n    updateCurrentWebApp({ headerColor: color });\n  }, [themeHeaderColor, headerColorFromEvent, headerColorFromSettings]);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const isOpen = modal?.isModalOpen || false;\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendFullScreenChanged, sendViewport, sendSafeArea, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isFullscreen, isSimple, handleEvent, webApp, markLoaded);\n\n  useEffect(() => {\n    if (isActive) registerSendEventCallback(sendEvent);\n  }, [sendEvent, registerSendEventCallback, isActive]);\n\n  useEffect(() => {\n    if (isActive) registerReloadFrameCallback(reloadFrame);\n  }, [reloadFrame, registerReloadFrameCallback, isActive]);\n\n  const isMainButtonVisible = isLoaded && mainButton?.isVisible && mainButton.text.trim().length > 0;\n  const isSecondaryButtonVisible = isLoaded && secondaryButton?.isVisible && secondaryButton.text.trim().length > 0;\n\n  const handleHideCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ isCloseModalOpen: false });\n  });\n  const handleConfirmCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ shouldConfirmClosing: false, isCloseModalOpen: false });\n    setTimeout(() => {\n      closeActiveWebApp();\n    }, ANIMATION_WAIT);\n  });\n\n  const handleHideRemoveModal = useLastCallback(() => {\n    updateCurrentWebApp({ isRemoveModalOpen: false });\n  });\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleSecondaryButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'secondary_button_pressed',\n    });\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  const sendThemeCallback = useLastCallback(() => {\n    sendTheme();\n  });\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendThemeCallback();\n    }, ANIMATION_WAIT);\n  }, [theme]);\n\n  const setFullscreenCallback = useLastCallback(() => {\n    if (!checkIfFullscreen() && isActive) {\n      setFullscreen?.();\n    }\n  });\n\n  const exitIfFullscreenCallback = useLastCallback(() => {\n    if (checkIfFullscreen() && isActive) {\n      exitFullscreen?.();\n    }\n  });\n\n  const sendFullScreenChangedCallback = useLastCallback(\n    (value: boolean) => { if (isActive) sendFullScreenChanged(value); },\n  );\n\n  useEffect(() => {\n    if (isFullscreen) {\n      setFullscreenCallback();\n      sendFullScreenChangedCallback(true);\n    } else {\n      exitIfFullscreenCallback();\n      sendFullScreenChangedCallback(false);\n    }\n  }, [isFullscreen]);\n\n  const visibilityChangedCallBack = useLastCallback((visibility: boolean) => {\n    sendEvent({\n      eventType: 'visibility_changed',\n      eventData: {\n        is_visible: visibility,\n      },\n    });\n  });\n\n  useEffect(() => {\n    if (isLoaded) {\n      visibilityChangedCallBack(Boolean(isActive));\n    }\n  }, [isActive, isLoaded]);\n\n  useEffectWithPrevDeps(([prevModalState]) => {\n    if (modalState === 'minimized') {\n      visibilityChangedCallBack(false);\n    }\n    if (modalState && prevModalState === 'minimized') {\n      visibilityChangedCallBack(true);\n    }\n  }, [modalState]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (webApp?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: webApp.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n      resetPaymentStatus();\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, webApp?.slug]);\n\n  const handleRemoveAttachBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: false,\n    });\n    closeActiveWebApp();\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectFileDownload = useLastCallback((shouldCloseActive?: boolean) => {\n    if (shouldCloseActive) {\n      setRequestedFileDownload(undefined);\n      handlePopupClosed();\n    }\n\n    sendEvent({\n      eventType: 'file_download_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    if (!bot) return;\n    const result = await callApi('allowBotSendMessages', { bot });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    if (!bot) return;\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleCheckDownloadFile(fileUrl: string, fileName: string) {\n    const canDownload = await callApi('checkBotDownloadFileParams', {\n      bot: bot!,\n      url: fileUrl,\n      fileName,\n    });\n\n    if (!canDownload) {\n      sendEvent({\n        eventType: 'file_download_requested',\n        eventData: {\n          status: 'cancelled',\n        },\n      });\n      return;\n    }\n\n    setRequestedFileDownload({ url: fileUrl, fileName });\n    handlePopupOpened();\n  }\n\n  const handleDownloadFile = useLastCallback(() => {\n    if (!requestedFileDownload) return;\n    setRequestedFileDownload(undefined);\n    handlePopupClosed();\n\n    download(requestedFileDownload.url, requestedFileDownload.fileName);\n    sendEvent({\n      eventType: 'file_download_requested',\n      eventData: {\n        status: 'downloading',\n      },\n    });\n  });\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  useEffect(() => {\n    if (!isOpen) {\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      setSecondaryButton(undefined);\n      updateCurrentWebApp({\n        isSettingsButtonVisible: false,\n        shouldConfirmClosing: false,\n        isBackButtonVisible: false,\n        isCloseModalOpen: false,\n        isRemoveModalOpen: false,\n      });\n      markUnloaded();\n    }\n  }, [isOpen]);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChatWithInfo({ id: bot!.id });\n  });\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n\n    if (eventType === 'web_app_request_fullscreen') {\n      if (getIsWebAppsFullscreenSupported()) {\n        changeWebAppModalState({ state: 'fullScreen' });\n      } else {\n        sendEvent({\n          eventType: 'fullscreen_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n    }\n\n    if (eventType === 'web_app_exit_fullscreen') {\n      exitIfFullscreenCallback();\n    }\n\n    if (eventType === 'web_app_open_tg_link') {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl, shouldIgnoreCache: eventData.force_request });\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      updateCurrentWebApp({ isBackButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_setup_settings_button') {\n      updateCurrentWebApp({ isSettingsButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      setBackgroundColorFromEvent(validateHexColor(eventData.color) ? eventData.color : undefined);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      const key = eventData.color_key;\n      setHeaderColorFromEvent(eventData.color || (key ? themeParams[key] : undefined));\n    }\n\n    if (eventType === 'web_app_set_bottom_bar_color') {\n      setBottomBarColor(eventData.color);\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeActiveWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const color = eventData.color;\n      const textColor = eventData.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text,\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_secondary_button') {\n      const color = eventData.color;\n      const textColor = eventData.text_color;\n      setSecondaryButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text,\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n        position: eventData.position,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      updateCurrentWebApp({ shouldConfirmClosing: true });\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n        || eventData.buttons.length > 3 || isRequestingPhone || isRequestingWriteAccess\n        || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequestingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n\n    if (eventType === 'web_app_request_file_download') {\n      if (requestedFileDownload || unlockPopupsAt > Date.now()) {\n        handleRejectFileDownload();\n        return;\n      }\n      handleCheckDownloadFile(eventData.url, eventData.file_name);\n    }\n\n    if (eventType === 'web_app_send_prepared_message') {\n      if (!bot || !webAppKey) return;\n      const { id } = eventData;\n      openPreparedInlineMessageModal({ botId: bot.id, messageId: id, webAppKey });\n    }\n\n    if (eventType === 'web_app_request_emoji_status_access') {\n      if (!bot) return;\n      openEmojiStatusAccessModal({ bot, webAppKey });\n    }\n\n    if (eventType === 'web_app_check_location') {\n      const handleGeolocationCheck = () => {\n        sendEvent({\n          eventType: 'location_checked',\n          eventData: {\n            available: isAvailable,\n            access_requested: isAccessRequested,\n            access_granted: isAccessGranted,\n          },\n        });\n      };\n\n      handleGeolocationCheck();\n    }\n\n    if (eventType === 'web_app_request_location') {\n      const handleRequestLocation = async () => {\n        const geolocationData = await getGeolocationStatus();\n        const { accessRequested, accessGranted, geolocation } = geolocationData;\n\n        if (!accessGranted || !accessRequested) {\n          sendEvent({\n            eventType: 'location_requested',\n            eventData: {\n              available: false,\n            },\n          });\n          showNotification({ message: oldLang('PermissionNoLocationPosition') });\n          handleAppPopupClose(undefined);\n          return;\n        }\n\n        if (isAvailable) {\n          if (isAccessRequested) {\n            sendEvent({\n              eventType: 'location_requested',\n              eventData: {\n                available: botAppPermissions?.geolocation!,\n                latitude: geolocation?.latitude,\n                longitude: geolocation?.longitude,\n                altitude: geolocation?.altitude,\n                course: geolocation?.heading,\n                speed: geolocation?.speed,\n                horizontal_accuracy: geolocation?.accuracy,\n                vertical_accuracy: geolocation?.altitudeAccuracy,\n              },\n            });\n          } else {\n            openLocationAccessModal({ bot, webAppKey });\n          }\n        } else {\n          showNotification({ message: oldLang('PermissionNoLocationPosition') });\n          handleAppPopupClose(undefined);\n        }\n      };\n\n      handleRequestLocation();\n    }\n\n    if (eventType === 'web_app_open_location_settings') {\n      handleOpenChat();\n    }\n  }\n\n  const mainButtonCurrentColor = useCurrentOrPrev(mainButton?.color, true);\n  const mainButtonCurrentTextColor = useCurrentOrPrev(mainButton?.textColor, true);\n  const mainButtonCurrentIsActive = useCurrentOrPrev(mainButton && Boolean(mainButton.isActive), true);\n  const mainButtonCurrentText = useCurrentOrPrev(mainButton?.text, true);\n\n  const secondaryButtonCurrentPosition = useCurrentOrPrev(secondaryButton?.position, true);\n  const secondaryButtonCurrentColor = useCurrentOrPrev(secondaryButton?.color, true);\n  const secondaryButtonCurrentTextColor = useCurrentOrPrev(secondaryButton?.textColor, true);\n  const secondaryButtonCurrentIsActive = useCurrentOrPrev(secondaryButton && Boolean(secondaryButton.isActive), true);\n  const secondaryButtonCurrentText = useCurrentOrPrev(secondaryButton?.text, true);\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideMainButton, setShouldHideMainButton] = useState(true);\n  const [shouldHideSecondaryButton, setShouldHideSecondaryButton] = useState(true);\n  const [shouldShowMainButton, setShouldShowMainButton] = useState(false);\n  const [shouldShowSecondaryButton, setShouldShowSecondaryButton] = useState(false);\n\n  const [shouldShowAppNameInFullscreen, setShouldShowAppNameInFullscreen] = useState(false);\n\n  const [backButtonTextWidth, setBackButtonTextWidth] = useState(0);\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n      sendSafeArea();\n    }, isTransforming ? 0 : ANIMATION_WAIT);\n  }, [shouldShowSecondaryButton, shouldHideSecondaryButton,\n    shouldShowMainButton, shouldShowMainButton,\n    secondaryButton?.position, sendViewport, isTransforming, modalHeight,\n    sendSafeArea]);\n\n  const isVerticalLayout = secondaryButtonCurrentPosition === 'top' || secondaryButtonCurrentPosition === 'bottom';\n  const isHorizontalLayout = !isVerticalLayout;\n\n  const rowsCount = (isVerticalLayout && shouldShowMainButton && shouldShowSecondaryButton) ? 2\n    : shouldShowMainButton || shouldShowSecondaryButton ? 1 : 0;\n\n  const hideDirection = (isHorizontalLayout\n    && (!shouldHideMainButton && !shouldHideSecondaryButton)) ? 'horizontal' : 'vertical';\n\n  const mainButtonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const mainButtonFastTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const secondaryButtonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const secondaryButtonFastTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const appNameDisplayTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (isFullscreen && isOpen && Boolean(activeWebAppName)) {\n      setShouldShowAppNameInFullscreen(true);\n\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n      }\n\n      appNameDisplayTimeout.current = setTimeout(() => {\n        setShouldShowAppNameInFullscreen(false);\n        appNameDisplayTimeout.current = undefined;\n      }, APP_NAME_DISPLAY_DURATION);\n    } else {\n      setShouldShowAppNameInFullscreen(false);\n\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n        appNameDisplayTimeout.current = undefined;\n      }\n    }\n\n    return () => {\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n      }\n    };\n  }, [isFullscreen, isOpen, activeWebAppName]);\n\n  useEffect(() => {\n    if (mainButtonChangeTimeout.current) clearTimeout(mainButtonChangeTimeout.current);\n    if (mainButtonFastTimeout.current) clearTimeout(mainButtonFastTimeout.current);\n\n    if (isMainButtonVisible) {\n      mainButtonFastTimeout.current = setTimeout(() => {\n        setShouldShowMainButton(true);\n      }, 35);\n      setShouldHideMainButton(false);\n      mainButtonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n\n    if (!isMainButtonVisible) {\n      setShouldShowMainButton(false);\n      mainButtonChangeTimeout.current = setTimeout(() => {\n        setShouldHideMainButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [isMainButtonVisible]);\n\n  useEffect(() => {\n    if (secondaryButtonChangeTimeout.current) clearTimeout(secondaryButtonChangeTimeout.current);\n    if (secondaryButtonFastTimeout.current) clearTimeout(secondaryButtonFastTimeout.current);\n\n    if (isSecondaryButtonVisible) {\n      secondaryButtonFastTimeout.current = setTimeout(() => {\n        setShouldShowSecondaryButton(true);\n      }, 35);\n      setShouldHideSecondaryButton(false);\n      secondaryButtonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n\n    if (!isSecondaryButtonVisible) {\n      setShouldShowSecondaryButton(false);\n      secondaryButtonChangeTimeout.current = setTimeout(() => {\n        setShouldHideSecondaryButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [isSecondaryButtonVisible]);\n\n  useEffect(() => {\n    if (!shouldShowSecondaryButton && !shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowSecondaryButton, shouldShowMainButton]);\n\n  const frameStyle = isTransforming ? 'pointer-events: none;' : '';\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      exitIfFullscreenCallback();\n      sendFullScreenChanged(false);\n      changeWebAppModalState({ state: 'maximized' });\n      closeWebAppModal();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    exitIfFullscreenCallback();\n  });\n\n  const handleShowContextMenu = useLastCallback((e: React.MouseEvent) => {\n    onContextMenuButtonClick(e);\n  });\n\n  const backIconClass = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n  const backButtonCaption = shouldShowAppNameInFullscreen ? activeWebAppName\n    : oldLang(isBackButtonVisible ? 'Back' : 'Close');\n\n  const hasHeaderElement = headerButtonCaptionRef?.current;\n\n  useEffect(() => {\n    const width = headerButtonCaptionRef?.current?.clientWidth || 0;\n    setBackButtonTextWidth(width);\n  }, [backButtonCaption, hasHeaderElement]);\n\n  function getBackButtonActiveKey() {\n    if (shouldShowAppNameInFullscreen) return 0;\n    return isBackButtonVisible ? 1 : 2;\n  }\n\n  function renderFullscreenBackButtonCaption() {\n    return (\n      <span\n        className={styles.buttonCaptionContainer}\n        style={\n          `width: ${backButtonTextWidth}px;`\n        }\n      >\n        <Transition\n          activeKey={getBackButtonActiveKey()}\n          name=\"slideFade\"\n        >\n          <div\n            ref={headerButtonCaptionRef}\n            className={styles.backButtonCaption}\n          >\n            {backButtonCaption}\n          </div>\n        </Transition>\n      </span>\n    );\n  }\n\n  function renderFullscreenHeaderPanel() {\n    return (\n      <div className={styles.headerPanel}>\n        <div ref={headerButtonRef} className={styles.headerButton} onClick={handleBackClick}>\n          <div className={styles.backIconContainer}>\n            <div className={backIconClass} />\n          </div>\n          {renderFullscreenBackButtonCaption()}\n        </div>\n        <div className={styles.headerSplitButton}>\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.left,\n            )}\n            tabIndex={0}\n            role=\"button\"\n            aria-label={lang('WebAppCollapse')}\n            onClick={handleCollapseClick}\n          >\n            <Icon\n              name=\"down\"\n              className={styles.icon}\n            />\n          </div>\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.right,\n            )}\n            tabIndex={0}\n            role=\"button\"\n            aria-haspopup=\"menu\"\n            aria-label={lang('AriaMoreButton')}\n            onClick={handleShowContextMenu}\n          >\n            <Icon\n              name=\"more\"\n              className={buildClassName(\n                styles.icon,\n                styles.moreIcon,\n              )}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderDefaultPlaceholder() {\n    const className = buildClassName(styles.loadingPlaceholder, styles.defaultPlaceholderGrid, isLoaded && styles.hide);\n    return (\n      <div className={className}>\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n      </div>\n    );\n  }\n\n  function renderPlaceholder() {\n    if (!placeholderPath) {\n      return renderDefaultPlaceholder();\n    }\n    return (\n      <svg\n        className={buildClassName(styles.loadingPlaceholder, isLoaded && styles.hide)}\n        viewBox=\"0 0 512 512\"\n      >\n        <path className={styles.placeholderPath} d={placeholderPath} />\n      </svg>\n    );\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(\n        styles.root,\n        !isActive && styles.hidden,\n        isMultiTabSupported && styles.multiTab,\n      )}\n    >\n      {isFullscreen && getIsWebAppsFullscreenSupported() && renderFullscreenHeaderPanel()}\n      {!isMinimizedState && renderPlaceholder()}\n      <iframe\n        className={buildClassName(\n          styles.frame,\n          shouldDecreaseWebFrameSize && styles.withButton,\n          !isLoaded && styles.hide,\n        )}\n        style={frameStyle}\n        src={url}\n        title={`${bot?.firstName} Web App`}\n        sandbox={SANDBOX_ATTRIBUTES}\n        allow=\"camera; microphone; geolocation; clipboard-write;\"\n        allowFullScreen\n        ref={frameRef}\n      />\n      {!isMinimizedState && (\n        <div\n          style={`background-color: ${bottomBarColor};`}\n          className={buildClassName(\n            styles.buttonsContainer,\n            secondaryButtonCurrentPosition === 'left' && styles.leftToRight,\n            secondaryButtonCurrentPosition === 'right' && styles.rightToLeft,\n            secondaryButtonCurrentPosition === 'top' && styles.topToBottom,\n            secondaryButtonCurrentPosition === 'bottom' && styles.bottomToTop,\n            hideDirection === 'horizontal' && styles.hideHorizontal,\n            rowsCount === 1 && styles.oneRow,\n            rowsCount === 2 && styles.twoRows,\n          )}\n        >\n          <Button\n            className={buildClassName(\n              styles.secondaryButton,\n              shouldShowSecondaryButton && !shouldHideSecondaryButton && styles.visible,\n              shouldHideSecondaryButton && styles.hidden,\n            )}\n            fluid\n            style={`background-color: ${secondaryButtonCurrentColor}; color: ${secondaryButtonCurrentTextColor}`}\n            disabled={!secondaryButtonCurrentIsActive && !secondaryButton?.isProgressVisible}\n            nonInteractive={secondaryButton?.isProgressVisible}\n            onClick={handleSecondaryButtonClick}\n            size=\"smaller\"\n          >\n            {!secondaryButton?.isProgressVisible && secondaryButtonCurrentText}\n            {secondaryButton?.isProgressVisible\n              && <Spinner className={styles.mainButtonSpinner} color=\"blue\" />}\n          </Button>\n          <Button\n            className={buildClassName(\n              styles.mainButton,\n              shouldShowMainButton && !shouldHideMainButton && styles.visible,\n              shouldHideMainButton && styles.hidden,\n            )}\n            fluid\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive && !mainButton?.isProgressVisible}\n            nonInteractive={mainButton?.isProgressVisible}\n            onClick={handleMainButtonClick}\n            size=\"smaller\"\n          >\n            {!mainButton?.isProgressVisible && mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n          </Button>\n        </div>\n      ) }\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || oldLang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={oldLang('ShareYouPhoneNumberTitle')}\n        text={oldLang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={oldLang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequestingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={oldLang('lng_bot_allow_write_title')}\n        text={oldLang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={oldLang('lng_bot_allow_write_confirm')}\n      />\n      <ConfirmDialog\n        isOpen={Boolean(requestedFileDownload)}\n        title={oldLang('BotDownloadFileTitle')}\n        textParts={lang('BotDownloadFileDescription', {\n          bot: bot?.firstName,\n          filename: requestedFileDownload?.fileName,\n        }, {\n          withNodes: true,\n          withMarkdown: true,\n        })}\n        confirmLabel={oldLang('BotDownloadFileButton')}\n        onClose={handleRejectFileDownload}\n        confirmHandler={handleDownloadFile}\n      />\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={handleHideCloseModal}\n        title={oldLang('lng_bot_close_warning_title')}\n        text={oldLang('lng_bot_close_warning')}\n        confirmHandler={handleConfirmCloseModal}\n        confirmIsDestructive\n        confirmLabel={oldLang('lng_bot_close_warning_sure')}\n      />\n      <ConfirmDialog\n        isOpen={isRemoveModalOpen}\n        onClose={handleHideRemoveModal}\n        title={oldLang('BotRemoveFromMenuTitle')}\n        textParts={renderText(oldLang('BotRemoveFromMenu', bot?.firstName), ['simple_markdown'])}\n        confirmHandler={handleRemoveAttachBot}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const activeWebApp = modal?.activeWebAppKey ? selectWebApp(global, modal.activeWebAppKey) : undefined;\n    const { botId: activeBotId } = activeWebApp || {};\n    const modalState = modal?.modalState;\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const userFullInfo = activeBotId ? selectUserFullInfo(global, activeBotId) : undefined;\n    const botAppSettings = userFullInfo?.botInfo?.appSettings;\n    const currentUser = global.currentUserId ? selectUser(global, global.currentUserId) : undefined;\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status: regularPaymentStatus } = selectTabState(global).payment;\n    const { status: starsPaymentStatus, inputInvoice: starsInputInvoice } = selectTabState(global).starsPayment;\n    const botAppPermissions = bot ? selectBotAppPermissions(global, bot.id) : undefined;\n\n    const paymentStatus = starsPaymentStatus || regularPaymentStatus;\n\n    return {\n      attachBot,\n      bot,\n      currentUser,\n      theme,\n      isPaymentModalOpen: isPaymentModalOpen || Boolean(starsInputInvoice),\n      paymentStatus,\n      modalState,\n      botAppPermissions,\n      botAppSettings,\n    };\n  },\n)(WebAppModalTabContent));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"XWfkIDLY\",\"multi-tab\":\"gBVR7Hec\",\"multiTab\":\"gBVR7Hec\",\"close-icon\":\"RuJ3d9N6\",\"closeIcon\":\"RuJ3d9N6\",\"minimized\":\"dJ1Ld_PX\",\"fullScreen\":\"ciSTWz16\",\"tabs\":\"X18WbDa5\",\"tool-bar\":\"qK4q0Sat\",\"toolBar\":\"qK4q0Sat\",\"tab-button-wrapper\":\"oHX2d8Or\",\"tabButtonWrapper\":\"oHX2d8Or\",\"tab-button\":\"O4NxErFX\",\"tabButton\":\"O4NxErFX\",\"tab-right-mask\":\"dgdyQDsZ\",\"tabRightMask\":\"dgdyQDsZ\",\"tab-close-button\":\"xGefqS93\",\"tabCloseButton\":\"xGefqS93\",\"tab-button-curve-path\":\"bOuMHiVw\",\"tabButtonCurvePath\":\"bOuMHiVw\",\"tab-button-left-curve\":\"f7EicoVH\",\"tabButtonLeftCurve\":\"f7EicoVH\",\"tab-button-right-curve\":\"s6pBIYMI\",\"tabButtonRightCurve\":\"s6pBIYMI\",\"more-apps-tab-icon\":\"Obu3ui67\",\"moreAppsTabIcon\":\"Obu3ui67\",\"avatar-container\":\"z39ojrWc\",\"avatarContainer\":\"z39ojrWc\",\"web-app-tab-more-menu\":\"txS0KiU0\",\"webAppTabMoreMenu\":\"txS0KiU0\",\"more-button\":\"kKPD09tc\",\"moreButton\":\"kKPD09tc\",\"tab-more-button\":\"gkji2_RB\",\"tabMoreButton\":\"gkji2_RB\",\"more-apps-button\":\"cEuW1_hJ\",\"moreAppsButton\":\"cEuW1_hJ\",\"window-state-button\":\"XpHR_yo0\",\"windowStateButton\":\"XpHR_yo0\",\"header-button\":\"GE5AkJOU\",\"headerButton\":\"GE5AkJOU\",\"fullscreenButton\":\"otlJULGy\",\"tab-close-icon\":\"DoeOewUR\",\"tabCloseIcon\":\"DoeOewUR\",\"state-icon\":\"YRMGpqUS\",\"stateIcon\":\"YRMGpqUS\",\"icon\":\"b13oE9uA\",\"tab-avatar\":\"tI6TE6HP\",\"tabAvatar\":\"tI6TE6HP\",\"state-back\":\"IWA50OWU\",\"stateBack\":\"IWA50OWU\",\"loading-spinner\":\"ZvO65ZK4\",\"loadingSpinner\":\"ZvO65ZK4\",\"hide\":\"_90e04Jo\",\"frame\":\"zA1w1IOq\",\"with-button\":\"XsPaFD9G\",\"withButton\":\"XsPaFD9G\",\"main-button\":\"Os96PEjQ\",\"mainButton\":\"Os96PEjQ\",\"visible\":\"C8aMayAw\",\"hidden\":\"GllU9an9\",\"main-button-spinner\":\"nYSFrf_X\",\"mainButtonSpinner\":\"nYSFrf_X\",\"web-app-popup\":\"cTVKrIjM\",\"webAppPopup\":\"cTVKrIjM\",\"without-title\":\"d0DG1SkF\",\"withoutTitle\":\"d0DG1SkF\"};","import { type MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo, useRef,\n  useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { Point, Size, ThemeKey } from '../../../types';\nimport type { WebApp, WebAppOutboundEvent } from '../../../types/webapp';\n\nimport { RESIZE_HANDLE_CLASS_NAME } from '../../../config';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectCurrentChat, selectTheme, selectUser,\n  selectWebApp,\n} from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\nimport windowSize from '../../../util/windowSize';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDraggable from '../../../hooks/useDraggable';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport MinimizedWebAppModal from './MinimizedWebAppModal';\nimport MoreAppsTabContent from './MoreAppsTabContent';\nimport WebAppModalTabContent from './WebAppModalTabContent';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppModalTab = {\n  bot?: ApiUser;\n  webApp: WebApp;\n  isOpen: boolean;\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  cachedSize?: Size;\n  cachedPosition?: Point;\n};\n\nconst PROLONG_INTERVAL = 45000; // 45s\nconst LUMA_THRESHOLD = 128;\n\nconst MINIMIZED_STATE_SIZE = { width: 300, height: 40 };\nconst DEFAULT_MAXIMIZED_STATE_SIZE = { width: 420, height: 730 };\nconst MAXIMIZED_STATE_MINIMUM_SIZE = { width: 300, height: 300 };\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n  bot,\n  attachBot,\n  theme,\n  cachedSize,\n  cachedPosition,\n}) => {\n  const {\n    closeActiveWebApp,\n    closeWebAppModal,\n    prolongWebView,\n    toggleAttachBot,\n    openChat,\n    changeWebAppModalState,\n    openWebAppTab,\n    updateWebApp,\n    openMoreAppsTab,\n    closeMoreAppsTab,\n    updateMiniAppCachedPosition,\n    updateMiniAppCachedSize,\n  } = getActions();\n\n  const [getMaximizedStateSize, setMaximizedStateSize] = useSignal(cachedSize || DEFAULT_MAXIMIZED_STATE_SIZE);\n\n  function getSize() {\n    if (modal?.modalState === 'fullScreen') return windowSize.get();\n    if (modal?.modalState === 'maximized') return getMaximizedStateSize();\n    return MINIMIZED_STATE_SIZE;\n  }\n  function getMinimumSize() {\n    if (modal?.modalState === 'maximized') return MAXIMIZED_STATE_MINIMUM_SIZE;\n    return undefined;\n  }\n\n  const {\n    openedWebApps, activeWebAppKey, openedOrderedKeys, sessionKeys, isMoreAppsTabActive,\n  } = modal || {};\n  const activeWebApp = activeWebAppKey ? openedWebApps?.[activeWebAppKey] : undefined;\n  const {\n    isBackButtonVisible, headerColor, backgroundColor, isSettingsButtonVisible,\n  } = activeWebApp || {};\n\n  const tabs = useMemo(() => {\n    return openedOrderedKeys?.map((key) => {\n      const webApp = openedWebApps![key];\n      return {\n        bot: getGlobal().users.byId[webApp.botId],\n        webApp,\n        isOpen: Boolean(activeWebApp && (key === getWebAppKey(activeWebApp))),\n      };\n    });\n  }, [openedOrderedKeys, openedWebApps, activeWebApp]);\n\n  const { isMobile } = useAppLayout();\n  const isOpen = modal?.isModalOpen || false;\n  const isMaximizedState = modal?.modalState === 'maximized';\n  const isMinimizedState = modal?.modalState === 'minimized';\n  const isFullScreen = modal?.modalState === 'fullScreen';\n\n  const supportMultiTabMode = !isMobile;\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const getTriggerElement = useLastCallback(() => ref.current!);\n\n  const getRootElement = useLastCallback(\n    () => ref.current!,\n  );\n\n  const getMenuElement = useLastCallback(\n    () => menuRef.current!,\n  );\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const [isDraggingEnabled, setIsDraggingEnabled] = useState(false);\n\n  const headerElement = headerRef.current;\n  const containerElement = ref.current;\n\n  useEffect(() => {\n    setIsDraggingEnabled(Boolean(supportMultiTabMode && headerElement && containerElement && !isFullScreen));\n  }, [supportMultiTabMode, headerElement, containerElement, isFullScreen]);\n\n  useEffect(() => {\n    changeWebAppModalState({ state: 'maximized' });\n  }, [supportMultiTabMode]);\n\n  const {\n    isDragging,\n    isResizing,\n    style: draggableStyle,\n    size,\n    position,\n  } = useDraggable(\n    ref,\n    headerRef,\n    isDraggingEnabled,\n    getSize(),\n    isFullScreen,\n    getMinimumSize(),\n    cachedPosition,\n  );\n\n  const x = position?.x;\n  const y = position?.y;\n  useEffect(() => {\n    if (!isDragging && x !== undefined && y !== undefined) {\n      updateMiniAppCachedPosition({ position: { x, y } });\n    }\n  }, [isDragging, x, y]);\n\n  useEffect(() => {\n    if (!isDragging && size && isMaximizedState) { updateMiniAppCachedSize({ size }); }\n  }, [isDragging, isMaximizedState, size]);\n\n  const currentSize = size || getSize();\n\n  const currentWidth = currentSize.width;\n  const currentHeight = currentSize.height;\n\n  useEffect(() => {\n    if (isResizing) {\n      setMaximizedStateSize({ width: currentWidth, height: currentHeight });\n    }\n  }, [currentHeight, currentWidth, isResizing, setMaximizedStateSize]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    queryId,\n  } = activeWebApp || {};\n\n  const openTabsCount = openedWebApps ? Object.values(openedWebApps).length : 0;\n\n  useInterval(() => {\n    if (!openedWebApps) return;\n    Object.keys(openedWebApps).forEach((key) => {\n      const webApp = openedWebApps[key];\n      if (webApp.queryId) {\n        prolongWebView({\n          botId: webApp.botId,\n          queryId: webApp.queryId,\n          peerId: webApp.peerId || chat!.id,\n          replyInfo: webApp.replyInfo,\n        });\n      }\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  // eslint-disable-next-line no-null/no-null\n  const sendEventCallback = useRef<((event: WebAppOutboundEvent) => void) | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const reloadFrameCallback = useRef<((url: string) => void) | null>(null);\n\n  const registerSendEventCallback = useLastCallback((callback: (event: WebAppOutboundEvent) => void) => {\n    sendEventCallback.current = callback;\n  });\n\n  const sendEvent = useLastCallback((event: WebAppOutboundEvent) => {\n    if (sendEventCallback.current) {\n      sendEventCallback.current(event);\n    }\n  });\n\n  const registerReloadFrameCallback = useLastCallback((callback: (url: string) => void) => {\n    reloadFrameCallback.current = callback;\n  });\n\n  const reloadFrame = useLastCallback((url: string) => {\n    if (reloadFrameCallback.current) {\n      reloadFrameCallback.current(url);\n    }\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(activeWebApp!.url);\n  });\n\n  const handleModalClose = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleCloseMoreAppsTab = useLastCallback(() => {\n    closeMoreAppsTab();\n  });\n\n  const handleTabClose = useLastCallback(() => {\n    if (openTabsCount > 1) {\n      closeActiveWebApp();\n    } else {\n      closeWebAppModal();\n    }\n  });\n\n  const handleToggleClick = useLastCallback(() => {\n    if (attachBot) {\n      const key = getWebAppKey(activeWebApp!);\n      updateWebApp({\n        key,\n        update: {\n          isRemoveModalOpen: true,\n        },\n      });\n      return;\n    }\n\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: true,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleModalClose();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'minimized' });\n  });\n\n  const handleFullscreenClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'fullScreen' });\n  });\n\n  const handleOpenMoreAppsTabClick = useLastCallback(() => {\n    openMoreAppsTab();\n  });\n\n  const handleTabClick = useLastCallback((tab: WebAppModalTab) => {\n    openWebAppTab({ webApp: tab.webApp });\n  });\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n  });\n\n  const MoreMenuButton:\n  FC<{ onTrigger: (e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        className={\n          buildClassName(\n            supportMultiTabMode ? styles.tabMoreButton : styles.moreButton,\n            isMenuOpen && 'active',\n          )\n        }\n        round\n        ripple={!isMobile}\n        size={supportMultiTabMode ? 'tiny' : 'smaller'}\n        color=\"translucent\"\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, supportMultiTabMode]);\n\n  function renderMenuItems() {\n    return (\n      <>\n        {chat && bot && chat.id !== bot.id && (\n          <MenuItem icon=\"bots\" onClick={openBotChat}>{oldLang('BotWebViewOpenBot')}</MenuItem>\n        )}\n        <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{oldLang('WebApp.ReloadPage')}</MenuItem>\n        {isSettingsButtonVisible && (\n          <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n            {oldLang('Settings')}\n          </MenuItem>\n        )}\n        {bot?.isAttachBot && (\n          <MenuItem\n            icon={attachBot ? 'stop' : 'install'}\n            onClick={handleToggleClick}\n            destructive={Boolean(attachBot)}\n          >\n            {oldLang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n          </MenuItem>\n        )}\n      </>\n    );\n  }\n\n  function renderMoreMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        ref={menuRef}\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        getTriggerElement={getTriggerElement}\n        getMenuElement={getMenuElement}\n        getRootElement={getRootElement}\n        autoClose\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n      >\n        {renderMenuItems()}\n      </Menu>\n    );\n  }\n\n  function renderDropdownMoreMenu() {\n    return (\n      <DropdownMenu\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        trigger={MoreMenuButton}\n        positionX={supportMultiTabMode ? 'left' : 'right'}\n      >\n        {renderMenuItems()}\n      </DropdownMenu>\n    );\n  }\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (isMoreAppsTabActive) return 'color-text';\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme, isMoreAppsTabActive]);\n\n  function renderTabCurveBorder(className: string) {\n    return (\n      <svg\n        className={className}\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 16 16\"\n        fill=\"none\"\n      >\n        <path\n          className={styles.tabButtonCurvePath}\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M16 16V0C16 12 12 16 0 16H16Z\"\n        />\n      </svg>\n    );\n  }\n\n  function renderActiveTab() {\n    const style = buildStyle(\n      headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n      headerColor && `--active-tab-background: ${headerColor}`,\n    );\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n        style={style}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.avatarContainer}>\n            <Avatar\n              size=\"mini\"\n              peer={bot}\n            />\n            <MoreMenuButton onTrigger={handleContextMenu} isOpen={isContextMenuOpen} />\n          </div>\n          {attachBot?.shortName ?? bot?.firstName}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={oldLang('Close')}\n            onClick={handleTabClose}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  function renderMoreAppsTab() {\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.moreAppsTabIcon}>\n            <Icon className={styles.icon} name=\"add\" />\n          </div>\n          {lang('OpenApp')}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={oldLang('Close')}\n            onClick={handleCloseMoreAppsTab}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  function renderMoreAppsButton() {\n    return (\n      <Button\n        className={buildClassName(\n          styles.moreAppsButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleOpenMoreAppsTabClick}\n      >\n        <Icon className={styles.icon} name=\"add\" />\n      </Button>\n    );\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  useHorizontalScroll(containerRef, !isOpen || isMinimizedState || !(containerRef.current));\n\n  function renderTabs() {\n    return (\n      <div\n        className={styles.tabs}\n        ref={containerRef}\n      >\n        {tabs?.map((tab) => (\n          tab.isOpen ? (\n            renderActiveTab()\n          ) : (\n            <Avatar\n              className={styles.tabAvatar}\n              size=\"mini\"\n              peer={tab.bot}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleTabClick(tab)}\n            />\n          )\n        ))}\n        {isMoreAppsTabActive && renderMoreAppsTab()}\n      </div>\n    );\n  }\n\n  function renderHeader() {\n    return (\n      <div\n        ref={headerRef}\n      >\n        {!supportMultiTabMode\n          ? renderSinglePageModeHeader()\n          : (isMaximizedState ? renderMultiTabHeader() : <MinimizedWebAppModal />)}\n      </div>\n    );\n  }\n\n  function renderMultiTabHeader() {\n    return (\n      <div\n        className={buildClassName(\n          'modal-header',\n          'multiTab',\n        )}\n        style={buildStyle(\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          className={styles.headerButton}\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n          ariaLabel={oldLang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        {renderTabs()}\n        {renderMoreMenu()}\n\n        <div className={styles.toolBar}>\n          {!isMoreAppsTabActive && renderMoreAppsButton()}\n\n          {!isMoreAppsTabActive && (\n            <Button\n              className={buildClassName(\n                styles.windowStateButton,\n                styles.fullscreenButton,\n                'no-drag',\n              )}\n              round\n              color=\"translucent\"\n              size=\"tiny\"\n              onClick={handleFullscreenClick}\n            >\n              <Icon className={styles.stateIcon} name=\"expand-modal\" />\n            </Button>\n          )}\n\n          <Button\n            className={buildClassName(\n              styles.windowStateButton,\n              'no-drag',\n            )}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            onClick={handleCollapseClick}\n          >\n            <Icon className={styles.stateIcon} name=\"collapse-modal\" />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSinglePageModeHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={oldLang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{attachBot?.shortName ?? bot?.firstName}</div>\n        {!isMoreAppsTabActive && renderDropdownMoreMenu()}\n      </div>\n    );\n  }\n\n  function buildResizeHandleClass(handleClassName: string) {\n    return buildClassName(RESIZE_HANDLE_CLASS_NAME, handleClassName);\n  }\n\n  function renderResizeHandles() {\n    return (\n      <>\n        <div className={buildResizeHandleClass('top')} />\n        <div className={buildResizeHandleClass('bottom')} />\n        <div className={buildResizeHandleClass('left')} />\n        <div className={buildResizeHandleClass('right')} />\n        <div className={buildResizeHandleClass('topLeft')} />\n        <div className={buildResizeHandleClass('topRight')} />\n        <div className={buildResizeHandleClass('bottomLeft')} />\n        <div className={buildResizeHandleClass('bottomRight')} />\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={ref}\n      className={buildClassName(\n        styles.root,\n        supportMultiTabMode && styles.multiTab,\n        isMinimizedState && styles.minimized,\n        isFullScreen && styles.fullScreen,\n      )}\n      dialogStyle={supportMultiTabMode ? draggableStyle : undefined}\n      dialogContent={isDraggingEnabled && !isMinimizedState ? renderResizeHandles() : undefined}\n      isOpen={isOpen}\n      isLowStackPriority\n      onClose={handleModalClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor || 'var(--color-background)'}`}\n      noBackdrop\n      noBackdropClose\n    >\n      {isFullScreen && renderMoreMenu()}\n      {openedWebApps && sessionKeys?.map((key) => (\n        <WebAppModalTabContent\n          key={key}\n          modal={modal}\n          registerSendEventCallback={registerSendEventCallback}\n          registerReloadFrameCallback={registerReloadFrameCallback}\n          webApp={openedWebApps[key]}\n          isTransforming={isDragging || isResizing}\n          onContextMenuButtonClick={handleContextMenu}\n          isMultiTabSupported={supportMultiTabMode}\n          modalHeight={currentHeight}\n        />\n      ))}\n      { isMoreAppsTabActive && (<MoreAppsTabContent />)}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const activeWebApp = modal?.activeWebAppKey ? selectWebApp(global, modal.activeWebAppKey) : undefined;\n    const { botId: activeBotId } = activeWebApp || {};\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { miniAppsCachedPosition, miniAppsCachedSize } = selectSharedSettings(global);\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      cachedPosition: miniAppsCachedPosition,\n      cachedSize: miniAppsCachedSize,\n    };\n  },\n)(WebAppModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useOldLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['requestedAttachBotInstall'];\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  modal,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const bot = modal?.bot;\n\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useOldLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wn7D2H1e\",\"text\":\"IQ1U2TrZ\",\"header\":\"F6qqXRvD\",\"description\":\"ILLaH6qQ\",\"icon\":\"DzGwbpu5\",\"font-icon\":\"Pa9h5mh3\",\"fontIcon\":\"Pa9h5mh3\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps<T> = {\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  section: T;\n  onClick?: (section: T) => void;\n} & ({\n  icon: IconName;\n  isFontIcon: true;\n} | {\n  icon: string;\n  isFontIcon?: false;\n});\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PremiumFeatureItem = <T,>({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  section,\n  onClick,\n}: OwnProps<T>) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(section);\n  });\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={handleClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <Icon name={icon} className={styles.fontIcon} style={`--item-color: rgb(${r},${g},${b})`} />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HmY1pYD9\",\"arrow\":\"cqNhvdib\",\"right\":\"hIgQCprt\",\"arrow-hidden\":\"wDzTWXzO\",\"arrowHidden\":\"wDzTWXzO\",\"dot\":\"Ac0pMX9w\",\"medium\":\"yDo_8Y7X\",\"small\":\"bhODNwmU\",\"invisible\":\"O9pyrgj0\",\"active\":\"NYDxCNdz\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <Icon name=\"previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst || isInvisible) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <Icon name=\"next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u84X0r2z\",\"floating-badge\":\"hPi4fICJ\",\"floatingBadge\":\"hPi4fICJ\",\"floating-badge-triangle\":\"jufjjcX9\",\"floatingBadgeTriangle\":\"jufjjcX9\",\"floating-badge-icon\":\"XkiOXdMP\",\"floatingBadgeIcon\":\"XkiOXdMP\",\"text\":\"YaiSoFKE\",\"floating-badge-value\":\"iC3LJrvy\",\"floatingBadgeValue\":\"iC3LJrvy\",\"left-text\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"leftText\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"right-text\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"rightText\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"right-value\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"rightValue\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"left-value\":\"RJosx238 YaiSoFKE\",\"leftValue\":\"RJosx238 YaiSoFKE\",\"line\":\"Hy5kWx0p\",\"left\":\"scGr4JS9\",\"right\":\"nPaUalQf\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZXp65Wgy\",\"title\":\"W1xG3pjS\",\"description\":\"b_CBXIkT\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O1fqNCy0\",\"sticker\":\"ogaoEAcn\",\"effect-sticker\":\"Stdz4UIW ogaoEAcn\",\"effectSticker\":\"Stdz4UIW ogaoEAcn\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: (index: number) => void;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useLastCallback(() => {\n    onClick(realIndex);\n  });\n\n  const handleEnded = useLastCallback(() => {\n    inanimate();\n    onEnded(realIndex);\n  });\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useLastCallback((i: number) => {\n    setOffset(-i);\n  });\n\n  const handleEnded = useLastCallback((i: number) => {\n    const displayIndex = cycleRestrict(renderedStickers.length, i + offset);\n    if (displayIndex !== 0) return;\n\n    setTimeout(() => {\n      setOffset((current) => {\n        return cycleRestrict(renderedStickers.length, current + 1);\n      });\n    }, ENDED_DELAY);\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((sticker, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={sticker}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mFElmm7a\",\"header\":\"Jjbochk6\",\"circle\":\"ChteQ9C3\",\"title\":\"d2ayix6L\",\"features\":\"ensyCeMe\",\"mobile\":\"DFbZJafh\",\"scrolled\":\"iN1T0a2Y\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useOldLang from '../../../../hooks/useOldLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar, { AVATAR_SIZES } from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS: Record<string, IconName> = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-crossed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = AVATAR_SIZES.giant + 0.25 * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const dpr = useDevicePixelRatio();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE * dpr,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n      dpr,\n    });\n  }, [dpr]);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n              section={section}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ot0dA1yZ\",\"wrapper\":\"yxSAGAc1\",\"down\":\"Jcy6cDoc\",\"frame\":\"Vn81yTTJ\",\"video\":\"rrVJClLL\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oyUTEj8I\",\"button\":\"EPfM7AgT\",\"button-content\":\"GysZk2mF\",\"buttonContent\":\"GysZk2mF\",\"back-button\":\"njYoMrKM\",\"backButton\":\"njYoMrKM\",\"white-back-button\":\"SB4pczOo\",\"whiteBackButton\":\"SB4pczOo\",\"content\":\"sJubG84j\",\"frame\":\"a7IoUtQG\",\"slide\":\"gubS9KP1\",\"limits\":\"U7ePgVBR\",\"stories\":\"J1M6fEdo\",\"limits-content\":\"n_rowVPI\",\"limitsContent\":\"n_rowVPI\",\"header\":\"mz2Hmd83\",\"no-header-border\":\"AgmNOqi7\",\"noHeaderBorder\":\"AgmNOqi7\",\"preview\":\"dIVBSdWi\",\"title\":\"iZLwcL8v\",\"description\":\"A7YHY8qF\",\"footer\":\"yN2611rA\",\"no-footer-border\":\"rCHMABcD\",\"noFooterBorder\":\"rCHMABcD\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { toggleExtraClass } from '../../../lib/teact/teact-dom';\n\nimport type {\n  ApiLimitTypeForPromo,\n  ApiPremiumPromo,\n  ApiPremiumSection,\n  ApiPremiumSubscriptionOption,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { PREMIUM_BOTTOM_VIDEOS, PREMIUM_FEATURE_SECTIONS, PREMIUM_LIMITS_ORDER } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n  saved_tags: 'PremiumPreviewTags2',\n  last_seen: 'PremiumPreviewLastSeen',\n  message_privacy: 'PremiumPreviewMessagePrivacy',\n  effects: 'Premium.MessageEffects',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n  saved_tags: 'PremiumPreviewTagsDescription2',\n  last_seen: 'PremiumPreviewLastSeenDescription',\n  message_privacy: 'PremiumPreviewMessagePrivacyDescription',\n  effects: 'Premium.MessageEffectsInfo',\n};\n\nconst LIMITS_TITLES: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n  recommendedChannels: 'SimilarChannelsLimitTitle',\n  moreAccounts: 'ConnectedAccountsLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n  recommendedChannels: 'SimilarChannelsLimitSubtitle',\n  moreAccounts: 'ConnectedAccountsLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  initialSection: ApiPremiumSection;\n  promo: ApiPremiumPromo;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumPromoOrder?: ApiPremiumSection[];\n  subscriptionOption?: ApiPremiumSubscriptionOption;\n  onBack: VoidFunction;\n  onClickSubscribe: (startParam?: string) => void;\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  isPremium,\n  limits,\n  premiumPromoOrder,\n  subscriptionOption,\n  onBack,\n  onClickSubscribe,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePreviousDeprecated(initialSection);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  const subscriptionButtonText = useMemo(() => {\n    if (!subscriptionOption) return undefined;\n\n    const { amount, months, currency } = subscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n\n    return isPremium\n      ? lang('OK')\n      : lang('SubscribeToPremium', { price: formatCurrency(lang, perMonthPrice, currency) }, { withNodes: true });\n  }, [isPremium, lang, subscriptionOption]);\n\n  const handleClick = useLastCallback(() => {\n    onClickSubscribe(initialSection);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const target = e.currentTarget;\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = target;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex}`);\n\n    requestMutation(() => {\n      target.style.setProperty('--scroll-progress', progress.toString());\n      target.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n\n      if (prevElement) toggleExtraClass(prevElement, 'reverse', false);\n      if (reverseElement) toggleExtraClass(reverseElement, 'reverse', true);\n    });\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = filteredSections.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, filteredSections, initialSection, prevInitialSection]);\n\n  const handleSelectSlide = useLastCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  });\n\n  const currentSection = filteredSections[currentSlideIndex];\n  const hasHeaderBackdrop = currentSection !== 'double_limits' && currentSection !== 'stories';\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, hasHeaderBackdrop && styles.whiteBackButton)}\n        color={hasHeaderBackdrop ? 'translucent-white' : 'translucent'}\n        onClick={onBack}\n        ariaLabel={oldLang('Back')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {filteredSections.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {oldLang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {PREMIUM_LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={oldLang(LIMITS_TITLES[limit])}\n                        description={oldLang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (PREMIUM_LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {oldLang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(oldLang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {oldLang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(oldLang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        {subscriptionButtonText && (\n          <Button\n            className={buildClassName(styles.button)}\n            isShiny={!isPremium}\n            withPremiumGradient={!isPremium}\n            onClick={isPremium ? onBack : handleClick}\n          >\n            {subscriptionButtonText}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiPremiumGiftCodeOption, ApiPremiumSubscriptionOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './PremiumSubscriptionOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumSubscriptionOption | ApiPremiumGiftCodeOption;\n  isGiveaway?: boolean;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  className?: string;\n  onChange: (month: number) => void;\n};\n\nconst PremiumSubscriptionOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount,\n  onChange, className, isGiveaway,\n}) => {\n  const oldLang = useOldLang();\n\n  const {\n    months, amount, currency,\n  } = option;\n  const users = 'users' in option ? option.users : undefined;\n  const perMonth = Math.floor(amount / months);\n  const isUserCountPlural = users ? users > 1 : undefined;\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label\n      className={buildClassName(\n        isGiveaway ? styles.giveawayWrapper : styles.wrapper,\n        (checked && !isGiveaway) && styles.active,\n        className,\n      )}\n      dir={oldLang.isRtl ? 'rtl' : undefined}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"subscription_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>\n          {Boolean(discount) && (\n            <span\n              className={buildClassName(styles.giveawayDiscount, styles.discount)}\n              title={oldLang('GiftDiscount')}\n            > &minus;{discount}%\n            </span>\n          )}\n          {oldLang('Months', months)}\n        </div>\n        <div className={styles.perMonth}>\n          {(isGiveaway || isUserCountPlural) ? `${formatCurrencyAsString(amount, currency, oldLang.code)} x ${users!}`\n            : oldLang('PricePerMonth', formatCurrencyAsString(perMonth, currency, oldLang.code))}\n        </div>\n        <div className={styles.amount}>\n          {formatCurrencyAsString(amount, currency, oldLang.code)}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(PremiumSubscriptionOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"qZA6S2kc\",\"giveawayWrapper\":\"PkseWxFK\",\"active\":\"EJOQwnRj\",\"input\":\"WOEkhx6R\",\"content\":\"BHUCScsU\",\"month\":\"DfYCMUkL\",\"perMonth\":\"poxOXJ2o\",\"amount\":\"IGMrERf_\",\"discount\":\"uqDlP3Zt\",\"giveawayDiscount\":\"ublijP0j\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sfbpMFHM\",\"transition\":\"ELNkgPve\",\"button\":\"c1tMxuFH\",\"main\":\"ZpOIPrhp\",\"logo\":\"mlMezt6b\",\"status-emoji\":\"mQwvY9LA\",\"statusEmoji\":\"mQwvY9LA\",\"header-text\":\"y71v6ECL\",\"headerText\":\"y71v6ECL\",\"description\":\"cUcKXV3j\",\"list\":\"c3Ee2oSo\",\"no-button\":\"yWEHoJOL\",\"noButton\":\"yWEHoJOL\",\"header\":\"Bc_F0RKb\",\"hidden-header\":\"ltXo0Xi7\",\"hiddenHeader\":\"ltXo0Xi7\",\"close-button\":\"XyN3eWog\",\"closeButton\":\"XyN3eWog\",\"premium-header-text\":\"xysPdANX\",\"premiumHeaderText\":\"xysPdANX\",\"footer-text\":\"yKm9hKQP\",\"footerText\":\"yKm9hKQP\",\"primary-footer-text\":\"l1WlNpmu\",\"primaryFooterText\":\"l1WlNpmu\",\"footer\":\"nCnlO9UZ\",\"stickerSetText\":\"xw_GbDj7\",\"stickerSetLink\":\"FLzl2ng5\",\"stickerSetLinkIcon\":\"Y0jTcadE\",\"subscriptionOptions\":\"xZC_Oajr\",\"subscriptionOption\":\"gygsbDbE\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiPremiumSection, ApiPremiumSubscriptionOption, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { PREMIUM_FEATURE_SECTIONS, TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEffects from '../../../assets/premium/PremiumEffects.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLastSeen from '../../../assets/premium/PremiumLastSeen.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumMessagePrivacy from '../../../assets/premium/PremiumMessagePrivacy.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTags from '../../../assets/premium/PremiumTags.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<ApiPremiumSection, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n  saved_tags: PremiumTags,\n  last_seen: PremiumLastSeen,\n  message_privacy: PremiumMessagePrivacy,\n  effects: PremiumEffects,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: ApiPremiumSection;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: ApiPremiumSection[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<ApiPremiumSection | undefined>(initialSection);\n  const [selectedSubscriptionOption, setSubscriptionOption] = useState<ApiPremiumSubscriptionOption>();\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setCurrentSection(undefined);\n    }\n  }, [isOpen]);\n\n  const handleOpenSection = useLastCallback((section: ApiPremiumSection) => {\n    setCurrentSection(section);\n  });\n\n  const handleResetSection = useLastCallback(() => {\n    setCurrentSection(undefined);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClickWithStartParam = useLastCallback((startParam?: string) => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        type: 'slug',\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (selectedSubscriptionOption) {\n      handleClickWithStartParam(String(selectedSubscriptionOption.months));\n    } else {\n      handleClickWithStartParam();\n    }\n  });\n\n  const handleChangeSubscriptionOption = useLastCallback((months: number) => {\n    const foundOption = promo?.options.find((option) => option.months === months);\n    setSubscriptionOption(foundOption);\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  useEffect(() => {\n    const [defaultOption] = promo?.options ?? [];\n    setSubscriptionOption(defaultOption);\n  }, [promo]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const fullMonthlyAmount = useMemo(() => {\n    const monthOption = promo?.options.find((option) => option.months === 1);\n    if (!monthOption) {\n      return undefined;\n    }\n    return Number(monthOption.amount);\n  }, [promo]);\n\n  const subscribeButtonText = useMemo(() => {\n    if (!selectedSubscriptionOption) {\n      return undefined;\n    }\n    const { amount, months, currency } = selectedSubscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n    return formatCurrency(\n      lang,\n      perMonthPrice,\n      currency,\n    );\n  }, [selectedSubscriptionOption, lang]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  function getHeaderText() {\n    if (isGift) {\n      return renderText(\n        fromUser?.id === currentUserId\n          ? oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n          : oldLang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]),\n        ['simple_markdown', 'emoji'],\n      );\n    }\n\n    if (fromUserStatusSet && fromUser) {\n      const template = oldLang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n      const [first, second] = template.split('{link}');\n\n      const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n        <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n      ) : undefined;\n      const link = (\n        <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n          {emoji}{renderText(fromUserStatusSet.title)}\n        </span>\n      );\n      return [renderText(first), link, renderText(second)];\n    }\n\n    return renderText(\n      fromUser\n        ? oldLang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n        : oldLang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium'),\n      ['simple_markdown', 'emoji'],\n    );\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : oldLang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return oldLang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? oldLang('TelegramPremiumUserDialogSubtitle')\n      : oldLang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={oldLang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {promo?.options\n          .map((option) => (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={option.amount}\n              option={option}\n              onChange={handleChangeSubscriptionOption}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={selectedSubscriptionOption?.months === option.months}\n            />\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={closePremiumModal}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={oldLang('Close')}\n            >\n              <Icon name=\"close\" />\n            </Button>\n            {(fromUserStatusEmoji && !isGift) ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            )}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {getHeaderText()}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            {!isPremium && !isGift && renderSubscriptionOptions()}\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {oldLang('TelegramPremium')}\n              </h2>\n            </div>\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={oldLang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? oldLang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : oldLang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    section={section}\n                    onClick={handleOpenSection}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={oldLang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(oldLang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(oldLang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && selectedSubscriptionOption && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {oldLang('SubscribeToPremium', subscribeButtonText)}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleResetSection}\n            promo={promo}\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n            premiumPromoOrder={premiumPromoOrder}\n            subscriptionOption={selectedSubscriptionOption}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","import type { TeactNode } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Icon from '../icons/Icon';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\nexport type ItemPickerOption = {\n  label: TeactNode;\n  subLabel?: string;\n  disabled?: boolean;\n  isLoading?: boolean;\n  value: string;\n};\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedValue?: string;\n  selectedValues?: never; // Help TS to throw an error if this is passed\n  onSelectedValueChange?: (value: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedValue?: never;\n  selectedValues: string[];\n  lockedSelectedValues?: string[];\n  lockedUnselectedValues?: string[];\n  onSelectedValuesChange?: (values: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  isSearchable?: boolean;\n  searchInputId?: string;\n  items: ItemPickerOption[];\n  itemClassName?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isViewOnly?: boolean;\n  withDefaultPadding?: boolean;\n  forceRenderAllItems?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (value: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst ITEM_CLASS_NAME = 'ItemPickerItem';\n\nconst ItemPicker = ({\n  className,\n  isSearchable,\n  searchInputId,\n  items,\n  filterValue,\n  notFoundText,\n  isLoading,\n  noScrollRestore,\n  filterPlaceholder,\n  isViewOnly,\n  itemInputType,\n  itemClassName,\n  withDefaultPadding,\n  forceRenderAllItems,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedValues = allowMultiple ? optionalProps.lockedSelectedValues : undefined;\n  const lockedUnselectedValues = allowMultiple ? optionalProps.lockedUnselectedValues : undefined;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const selectedValues = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedValues;\n    }\n\n    return optionalProps.selectedValue ? [optionalProps.selectedValue] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedValue, optionalProps.selectedValues]);\n\n  const lockedSelectedValuesSet = useMemo(() => new Set(lockedSelectedValues), [lockedSelectedValues]);\n  const lockedUnselectedValuesSet = useMemo(() => new Set(lockedUnselectedValues), [lockedUnselectedValues]);\n\n  const sortedItemValuesList = useMemo(() => {\n    if (filterValue) {\n      return items.map((item) => item.value);\n    }\n\n    const lockedSelectedBucket: ItemPickerOption[] = [];\n    const unlockedBucket: ItemPickerOption[] = [];\n    const lockedUnselectableBucket: ItemPickerOption[] = [];\n\n    items.forEach((item) => {\n      if (lockedSelectedValuesSet.has(item.value)) {\n        lockedSelectedBucket.push(item);\n      } else if (lockedUnselectedValuesSet.has(item.value)) {\n        lockedUnselectableBucket.push(item);\n      } else {\n        unlockedBucket.push(item);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket).map((item) => item.value);\n  }, [filterValue, items, lockedSelectedValuesSet, lockedUnselectedValuesSet]);\n\n  const handleItemClick = useLastCallback((value: string) => {\n    if (allowMultiple) {\n      const newSelectedValues = selectedValues.slice();\n      const index = newSelectedValues.indexOf(value);\n      if (index >= 0) {\n        newSelectedValues.splice(index, 1);\n      } else {\n        newSelectedValues.push(value);\n      }\n\n      optionalProps.onSelectedValuesChange?.(newSelectedValues);\n      return;\n    }\n\n    optionalProps.onSelectedValueChange?.(value);\n  });\n\n  const [viewportValuesList, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemValuesList, Boolean(forceRenderAllItems || filterValue),\n  );\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const renderItem = useCallback((value: string) => {\n    const item = items.find((itemOption) => itemOption.value === value);\n    if (!item) return undefined;\n\n    const { label, subLabel, isLoading: isItemLoading } = item;\n    const isAlwaysUnselected = lockedUnselectedValuesSet.has(value);\n    const isAlwaysSelected = lockedSelectedValuesSet.has(value);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = selectedValues.includes(value);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      return undefined;\n    }\n\n    return (\n      <PickerItem\n        key={value}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={label}\n        subtitle={subLabel}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(value)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(value, isAlwaysSelected))}\n      />\n    );\n  }, [\n    items, lockedUnselectedValuesSet, lockedSelectedValuesSet, selectedValues, isViewOnly, onDisabledClick,\n    itemInputType, itemClassName,\n  ]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('Search')}\n          />\n        </div>\n      )}\n\n      {viewportValuesList?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportValuesList}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportValuesList.map((value) => renderItem(value))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportValuesList && !viewportValuesList.length ? (\n        <p className={styles.noResults}>{notFoundText || lang('SearchEmptyViewTitle')}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ItemPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wzzA3MFh\",\"pickerSelector\":\"xhujrq9i\",\"pickerTitle\":\"YuRK4e7S\",\"picker\":\"YF9nLkCK\",\"footer\":\"ATCZ2Q5G\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport ItemPicker from './pickers/ItemPicker';\n\nimport styles from './CountryPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (value: string[]) => void;\n  countryList: ApiCountry[];\n  selectionLimit?: number | undefined;\n};\n\nconst CountryPickerModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  countryList,\n  selectionLimit,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[]>([]);\n  const prevSelectedCountryIds = usePreviousDeprecated(selectedCountryIds);\n  const noPickerScrollRestore = prevSelectedCountryIds === selectedCountryIds;\n\n  const displayedIds = useMemo(() => {\n    if (!countryList) {\n      return [];\n    }\n\n    return countryList.filter((country) => !country.isHidden && country.iso2 !== 'FT')\n      .map(({\n        iso2, defaultName,\n      }) => ({\n        value: iso2,\n        label: defaultName,\n      }));\n  }, [countryList]);\n\n  const handleSelectedIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (selectionLimit && newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningCountries', selectionLimit),\n      });\n      return;\n    }\n    setSelectedCountryIds(newSelectedIds);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(selectedCountryIds);\n    onClose();\n  });\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleSubmit}\n    >\n      <div className={styles.container}>\n        <div className={styles.pickerSelector}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4 className={styles.pickerTitle}>\n            {lang('BoostingSelectCountry')}\n          </h4>\n        </div>\n      </div>\n\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedIds}\n          selectedValues={selectedCountryIds}\n          onSelectedValuesChange={handleSelectedIdsChange}\n          noScrollRestore={noPickerScrollRestore}\n          allowMultiple\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <div className={styles.footer}>\n        <Button\n          size=\"smaller\"\n          onClick={handleSubmit}\n        >\n          {lang('SelectCountries.OK')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(CountryPickerModal);\n","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport {\n  isChatChannel, isChatPublic, isChatSuperGroup,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\nconst GiveawayChannelPickerModal = ({\n  isOpen,\n  giveawayChatId,\n  selectionLimit,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [pendingChannelId, setPendingChannelId] = useState<string | undefined>(undefined);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const channelIds = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const { active, archived } = global.chats.listIds;\n    const ids = (active || []).concat(archived || []);\n\n    return unique(ids).map((id) => chatsById[id])\n      .filter((chat) => (\n        chat && (\n          isChatChannel(chat) || isChatSuperGroup(chat)\n        ) && chat.id !== giveawayChatId\n      )).map((chat) => chat.id);\n  }, [giveawayChatId]);\n\n  const displayedChannelIds = useMemo(() => {\n    const foundChannelIds = channelIds ? filterPeersByQuery({ ids: channelIds, query: searchQuery, type: 'chat' }) : [];\n\n    return sortChatIds(foundChannelIds,\n      false,\n      selectedIds);\n  }, [channelIds, searchQuery, selectedIds]);\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    const chatsById = getGlobal().chats.byId;\n    const newlyAddedIds = newSelectedIds.filter((id) => !selectedIds.includes(id));\n    const privateLinkChannelId = newlyAddedIds.find((id) => {\n      const chat = chatsById[id];\n      return chat && !isChatPublic(chat);\n    });\n\n    if (selectedIds?.length >= selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningChannelsPlural', selectionLimit),\n      });\n      return;\n    }\n\n    if (privateLinkChannelId) {\n      setPendingChannelId(privateLinkChannelId);\n      openConfirmModal();\n    } else {\n      setSelectedIds(newSelectedIds);\n    }\n  });\n\n  const confirmPrivateLinkChannelSelection = useLastCallback(() => {\n    if (pendingChannelId) {\n      setSelectedIds(unique([...selectedIds, pendingChannelId]));\n    }\n    closeConfirmModal();\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('RequestPeer.ChooseChannelTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedChannelIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedChannelIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n      <ConfirmDialog\n        title={lang('BoostingGiveawayPrivateChannel')}\n        text={lang('BoostingGiveawayPrivateChannelWarning')}\n        confirmLabel={lang('Add')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmPrivateLinkChannelSelection}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(GiveawayChannelPickerModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './GiveawayTypeOption.module.scss';\n\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\n\ntype OwnProps = {\n  option: ApiGiveawayType;\n  name: string;\n  text: string;\n  img: string;\n  checked?: boolean;\n  isLink: boolean;\n  className?: string;\n  onChange: (value: ApiGiveawayType) => void;\n  onClickAction?: () => void;\n  userNames?: string;\n  selectedMemberIds?: string[];\n};\n\nconst GiveawayTypeOption: FC<OwnProps> = ({\n  option, checked,\n  name, text, img,\n  isLink, onChange, onClickAction, className,\n  userNames, selectedMemberIds,\n}) => {\n  const lang = useOldLang();\n\n  let displayText: string | undefined = lang(text);\n  if (isLink && selectedMemberIds?.length) {\n    displayText = selectedMemberIds.length > 2 ? `${selectedMemberIds.length}` : userNames;\n  }\n\n  const handleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(option);\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    onClickAction?.();\n  });\n\n  return (\n    <label\n      className={buildClassName(styles.wrapper, className)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"giveaway_option\"\n        value={option}\n        checked={checked}\n        onChange={handleChange}\n        onClick={(e) => e.stopPropagation()}\n      />\n      <div className={styles.content}>\n        <img className={styles.optionImg} src={img} alt=\"\" draggable={false} />\n        <div className={styles.giveaway}>\n          <h3 className={styles.title}>\n            {lang(`${name}`)}\n          </h3>\n          {isLink ? (\n            <div className={styles.link} onClick={handleClick}>\n              <span>{displayText}</span>\n              <Icon name=\"next\" />\n            </div>\n          ) : (\n            <span className={styles.contentText}>{displayText}</span>\n          )}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiveawayTypeOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"w3OGYFKn\",\"input\":\"xy4AclZa\",\"content\":\"TTgSI7Xh\",\"notChecked\":\"JDcXsByU\",\"giveaway\":\"sEt7TF59\",\"title\":\"u4NzVBBi\",\"link\":\"y7XfPOoG\",\"optionImg\":\"lGhZJbMF\",\"contentText\":\"kt2ZKZ6j\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember } from '../../../api/types';\n\nimport {\n  isUserBot,\n  sortUserIds,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChatFullInfo } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst GiveawayUserPickerModal = ({\n  isOpen,\n  selectionLimit,\n  members,\n  adminMembersById,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps & StateProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const memberIds = useMemo(() => {\n    const global = getGlobal();\n    const { byId, statusesById } = global.users;\n    if (!members?.length) {\n      return [];\n    }\n\n    const adminIdsSet = adminMembersById && new Set(Object.keys(adminMembersById));\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      byId,\n      statusesById,\n    );\n\n    return adminIdsSet ? userIds.filter((userId) => !adminIdsSet.has(userId)) : userIds;\n  }, [adminMembersById, members]);\n\n  const displayedMemberIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredUserIds = memberIds\n      ? filterPeersByQuery({ ids: memberIds, query: searchQuery, type: 'user' }) : [];\n\n    return sortChatIds(unique(filteredUserIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user);\n    }));\n  }, [memberIds, searchQuery]);\n\n  const handleSelectedMemberIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningUsers', selectionLimit),\n      });\n      return;\n    }\n    setSelectedIds(newSelectedIds);\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('BoostingAwardSpecificUsers')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedMemberIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedMemberIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { giveawayChatId }): StateProps => {\n  const chatFullInfo = giveawayChatId ? selectChatFullInfo(global, giveawayChatId) : undefined;\n  if (!chatFullInfo) {\n    return {};\n  }\n\n  return {\n    members: chatFullInfo.members,\n    adminMembersById: chatFullInfo.adminMembersById,\n  };\n})(GiveawayUserPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"P0kLOw15\",\"button\":\"ILuhBsJG\",\"main\":\"SqiN63Ef\",\"logo\":\"Me2hCsMs\",\"header-text\":\"UVDnB0Wq\",\"headerText\":\"UVDnB0Wq\",\"description\":\"v5yGzV6v\",\"header\":\"U6XNIToQ\",\"hidden-header\":\"tDZc21ZC\",\"hiddenHeader\":\"tDZc21ZC\",\"close-button\":\"OX6_HqAd\",\"closeButton\":\"OX6_HqAd\",\"premium-header-text\":\"v6hiGpEn\",\"premiumHeaderText\":\"v6hiGpEn\",\"primary-footer-text\":\"YGbiSd3e\",\"primaryFooterText\":\"YGbiSd3e\",\"section\":\"rZRDMqUL\",\"types\":\"sQ5PkKEs\",\"footer\":\"hD_AEzjd\",\"options\":\"JjDLNrKG\",\"giveawayTitle\":\"p5Hn4Q6E\",\"subscription\":\"rniPcuiP\",\"starSubscription\":\"bzRAETfR\",\"subscriptionOption\":\"ggZrgZnv\",\"status\":\"q1y2qUTn\",\"info\":\"IsT38nlq\",\"titleInfo\":\"nmsfBLut\",\"month\":\"TsGuei3B\",\"quantity\":\"G9H3tm6D\",\"floatingBadge\":\"xKl2UeV8\",\"floatingBadgeColor\":\"HLx3wTBD\",\"floatingBadgeButtonColor\":\"JLH0MExt\",\"floatingBadgeIcon\":\"Ftr7zf2v\",\"floatingBadgeValue\":\"Ce0Ob2tg\",\"subscriptionFooter\":\"rDFQAfTt\",\"premiumFeatures\":\"eNQ_nrKr\",\"dateButton\":\"GeKqKRgP\",\"title\":\"LZ3vPzak\",\"checkboxSection\":\"Z9QJQ6IS\",\"prizesSection\":\"eQVP0Nx8\",\"prizesInput\":\"qMYNwiUZ\",\"subLabelClassName\":\"txXJxVFu\",\"prepaidImg\":\"ldn4mh2T\",\"addButton\":\"sOXvh85b\",\"addChannel\":\"aGbyR60s\",\"removeChannel\":\"UZdErfVI\",\"starOptions\":\"cLhNkYPB\",\"transition\":\"vEI2Wewt\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiCountry,\n  ApiPremiumGiftCodeOption,\n  ApiPrepaidGiveaway,\n  ApiPrepaidStarsGiveaway,\n  ApiStarGiveawayOption,\n  ApiTypePrepaidGiveaway,\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  GIVEAWAY_BOOST_PER_PREMIUM,\n  GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  GIVEAWAY_MAX_ADDITIONAL_USERS,\n  STARS_CURRENCY_CODE,\n} from '../../../config';\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { unique } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport CountryPickerModal from '../../common/CountryPickerModal';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport StarTopupOptionList from '../../modals/stars/StarTopupOptionList';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSliderWithMarks from '../../ui/RangeSliderWithMarks';\nimport Switcher from '../../ui/Switcher';\nimport GiveawayChannelPickerModal from './GiveawayChannelPickerModal';\nimport GiveawayTypeOption from './GiveawayTypeOption';\nimport GiveawayUserPickerModal from './GiveawayUserPickerModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiveawayModal.module.scss';\n\nimport GiftBlueRound from '../../../assets/premium/GiftBlueRound.svg';\nimport GiftGreenRound from '../../../assets/premium/GiftGreenRound.svg';\nimport GiftRedRound from '../../../assets/premium/GiftRedRound.svg';\nimport GiftStar from '../../../assets/premium/GiftStar.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  userIds?: string[];\n};\n\ntype StateProps = {\n  chatId?: string;\n  gifts?: ApiPremiumGiftCodeOption[];\n  isOpen?: boolean;\n  fromUser?: ApiUser;\n  selectedMemberList?: string[] | undefined;\n  selectedChannelList?: string[] | undefined;\n  giveawayBoostPerPremiumLimit?: number;\n  userSelectionLimit?: number;\n  countryList: ApiCountry[];\n  prepaidGiveaway?: ApiTypePrepaidGiveaway;\n  countrySelectionLimit: number | undefined;\n  isChannel?: boolean;\n  isStarsGiftEnabled?: boolean;\n  starsGiftOptions?: ApiStarGiveawayOption[] | undefined;\n};\n\ntype GiveawayAction = 'createPremiumGiveaway' | 'createStarsGiveaway';\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\ntype SubscribersType = 'all' | 'new';\n\ninterface TypeOption {\n  name: string;\n  text: string;\n  value: ApiGiveawayType;\n  img: string;\n  actions?: GiveawayAction;\n  isLink: boolean;\n  onClickAction?: () => void;\n}\n\nconst DEFAULT_CUSTOM_EXPIRE_DATE = 86400 * 3 * 1000; // 3 days\nconst MAX_ADDITIONAL_CHANNELS = 9;\nconst DEFAULT_BOOST_COUNT = 5;\n\nconst GIVEAWAY_IMG_LIST: { [key: number]: string } = {\n  3: GiftGreenRound,\n  6: GiftBlueRound,\n  12: GiftRedRound,\n};\n\nconst GiveawayModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  gifts,\n  isOpen,\n  isChannel,\n  selectedMemberList,\n  selectedChannelList,\n  giveawayBoostPerPremiumLimit = GIVEAWAY_BOOST_PER_PREMIUM,\n  countryList,\n  prepaidGiveaway,\n  countrySelectionLimit = GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_USERS,\n  isStarsGiftEnabled,\n  starsGiftOptions,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closeGiveawayModal, openInvoice, openPremiumModal,\n    launchPrepaidGiveaway, launchPrepaidStarsGiveaway,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isCountryPickerModalOpen, openCountryPickerModal, closeCountryPickerModal] = useFlag();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [isUserPickerModalOpen, openUserPickerModal, closeUserPickerModal] = useFlag();\n  const [isChannelPickerModalOpen, openChannelPickerModal, closeChannelPickerModal] = useFlag();\n\n  const TYPE_OPTIONS: TypeOption[] = [{\n    name: 'Premium.Title',\n    text: 'BoostingWinnersRandomly',\n    value: 'premium_giveaway',\n    img: GiftBlueRound,\n    actions: 'createPremiumGiveaway',\n    isLink: true,\n    onClickAction: () => {\n      openUserPickerModal();\n    },\n  }];\n\n  if (isStarsGiftEnabled) {\n    TYPE_OPTIONS.push({\n      name: 'TelegramStars',\n      text: 'BoostingWinnersRandomly',\n      value: 'stars_giveaway',\n      img: GiftStar,\n      actions: 'createStarsGiveaway',\n      isLink: false,\n    });\n  }\n\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedRandomUserCount, setSelectedRandomUserCount] = useState<number>(DEFAULT_BOOST_COUNT);\n  const [selectedGiveawayOption, setGiveawayOption] = useState<ApiGiveawayType>(TYPE_OPTIONS[0].value);\n  const [selectedStarOption, setSelectedStarOption] = useState<ApiStarGiveawayOption | undefined>();\n  const [selectedSubscriberOption, setSelectedSubscriberOption] = useState<SubscribersType>('all');\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [selectedChannelIds, setSelectedChannelIds] = useState<string[]>([]);\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[] | undefined>([]);\n  const [shouldShowWinners, setShouldShowWinners] = useState<boolean>(false);\n  const [shouldShowPrizes, setShouldShowPrizes] = useState<boolean>(false);\n  const [prizeDescription, setPrizeDescription] = useState<string | undefined>(undefined);\n  const [dataPrepaidGiveaway, setDataPrepaidGiveaway] = useState<ApiPrepaidGiveaway | undefined>(undefined);\n  const [\n    dataStarsPrepaidGiveaway, setDataStarsPrepaidGiveaway,\n  ] = useState<ApiPrepaidStarsGiveaway | undefined>(undefined);\n\n  const isPremiumGiveaway = selectedGiveawayOption === 'premium_giveaway';\n  const isStarsGiveaway = selectedGiveawayOption === 'stars_giveaway';\n  const selectedUserCount = isPremiumGiveaway\n  && !selectedUserIds.length ? selectedRandomUserCount : selectedUserIds.length;\n  const boostQuantity = selectedUserCount * giveawayBoostPerPremiumLimit;\n  const boostStarsQuantity = selectedStarOption?.yearlyBoosts;\n\n  const SUBSCRIBER_OPTIONS = useMemo(() => [\n    {\n      value: 'all',\n      label: lang(isChannel ? 'BoostingAllSubscribers' : 'BoostingAllMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n    {\n      value: 'new',\n      label: lang(isChannel ? 'BoostingNewSubscribers' : 'BoostingNewMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n  ], [isChannel, lang, selectedCountryIds]);\n\n  const monthQuantity = lang('Months', selectedMonthOption);\n  const isStarsPrepaidGiveaway = prepaidGiveaway?.type === 'starsGiveaway';\n  const isPremiumPrepaidGiveaway = prepaidGiveaway?.type === 'giveaway';\n\n  const selectedGift = useMemo(() => {\n    return gifts?.find((gift) => gift.months === selectedMonthOption && gift.users === selectedUserCount);\n  }, [gifts, selectedMonthOption, selectedUserCount]);\n\n  const selectedStarsGift = useMemo(() => {\n    return starsGiftOptions?.find((gift) => {\n      return isStarsPrepaidGiveaway && gift.stars === (dataStarsPrepaidGiveaway?.stars);\n    });\n  }, [dataStarsPrepaidGiveaway, starsGiftOptions, isStarsPrepaidGiveaway]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users === selectedUserCount && gift.currency !== STARS_CURRENCY_CODE);\n  }, [gifts, selectedUserCount]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const basicGift = filteredGifts?.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    }, filteredGifts[0]);\n\n    return basicGift && Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const userCountOptions = useMemo(() => {\n    return unique((gifts?.filter((gift) => gift.currency !== STARS_CURRENCY_CODE)\n      ?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [gifts]);\n\n  const winnerCountOptions = useMemo(() => {\n    return unique((selectedStarOption?.winners?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [selectedStarOption]);\n\n  useEffect(() => {\n    if (isOpen && gifts?.length && !isStarsPrepaidGiveaway) {\n      setSelectedMonthOption(gifts?.[0].months);\n    }\n  }, [isOpen, gifts, isStarsPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && starsGiftOptions?.length && !isPremiumPrepaidGiveaway) {\n      setSelectedStarOption(starsGiftOptions?.[0]);\n    }\n  }, [isOpen, starsGiftOptions, isPremiumPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isStarsPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataStarsPrepaidGiveaway(prepaidGiveaway);\n    }\n  }, [isOpen, isStarsPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isPremiumPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataPrepaidGiveaway(prepaidGiveaway);\n      setSelectedMonthOption(prepaidGiveaway.months);\n    }\n  }, [isOpen, isPremiumPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (selectedMemberList) {\n      setSelectedUserIds(selectedMemberList);\n    }\n  }, [selectedMemberList]);\n\n  useEffect(() => {\n    if (selectedChannelList) {\n      setSelectedChannelIds(selectedChannelList);\n    }\n  }, [selectedChannelList]);\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    setDataStarsPrepaidGiveaway(undefined);\n    setDataPrepaidGiveaway(undefined);\n    setSelectedStarOption(undefined);\n    setSelectedMonthOption(undefined);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n    closeGiveawayModal();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isPremiumGiveaway) {\n      if (selectedUserIds?.length) {\n        openInvoice({\n          type: 'giftcode',\n          boostChannelId: chatId!,\n          userIds: selectedUserIds,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      } else {\n        openInvoice({\n          type: 'giveaway',\n          chatId: chatId!,\n          additionalChannelIds: selectedChannelIds,\n          isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n          countries: selectedCountryIds,\n          areWinnersVisible: shouldShowWinners,\n          prizeDescription,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      }\n    } else {\n      openInvoice({\n        type: 'starsgiveaway',\n        chatId: chatId!,\n        additionalChannelIds: selectedChannelIds,\n        isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n        countries: selectedCountryIds,\n        areWinnersVisible: shouldShowWinners,\n        prizeDescription,\n        untilDate: customExpireDate / 1000,\n        currency: selectedStarOption!.currency,\n        amount: selectedStarOption!.amount,\n        stars: selectedStarOption!.stars,\n        users: selectedRandomUserCount,\n      });\n    }\n\n    handleClose();\n  });\n\n  const confirmLaunchPrepaidGiveaway = useLastCallback(() => {\n    if (isStarsPrepaidGiveaway) {\n      launchPrepaidStarsGiveaway({\n        chatId: chatId!,\n        giveawayId: dataStarsPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          stars: dataStarsPrepaidGiveaway!.stars,\n          currency: selectedStarsGift!.currency,\n          amount: selectedStarsGift!.amount,\n          users: dataStarsPrepaidGiveaway!.quantity,\n        },\n      });\n    } else {\n      launchPrepaidGiveaway({\n        chatId: chatId!,\n        giveawayId: dataPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n        },\n      });\n    }\n\n    closeConfirmModal();\n    handleClose();\n  });\n\n  const handleRandomUserCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handleWinnerCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handlePrizeDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setPrizeDescription(e.target.value);\n  });\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return selectedUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [selectedUserIds]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleChangeSubscriberOption = useLastCallback((value) => {\n    setSelectedSubscriberOption(value);\n  });\n\n  const handleChangeTypeOption = useLastCallback((value: ApiGiveawayType) => {\n    setGiveawayOption(value);\n    setSelectedUserIds([]);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n  });\n\n  const handleExpireDateChange = useLastCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  });\n\n  const handleSetCountriesListChange = useLastCallback((value: string[]) => {\n    setSelectedCountryIds(value);\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedUserIds(newSelectedIds);\n    if (!newSelectedIds.length) {\n      setGiveawayOption('premium_giveaway');\n    }\n  });\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedChannelIds(newSelectedIds);\n  });\n\n  const handleShouldShowWinnersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowWinners(e.target.checked);\n  });\n\n  const handleShouldShowPrizesChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowPrizes(e.target.checked);\n  });\n\n  const onClickActionHandler = useLastCallback(() => {\n    openCountryPickerModal();\n  });\n\n  const handleStarClick = useLastCallback((option) => {\n    setSelectedStarOption(option);\n  });\n\n  function renderTypeOptions() {\n    return (\n      <div className={styles.options}>\n        {TYPE_OPTIONS.map((option) => {\n          return (\n            <GiveawayTypeOption\n              key={option.name}\n              name={option.name}\n              text={option.text}\n              option={option.value}\n              img={option.img}\n              onChange={handleChangeTypeOption}\n              checked={selectedGiveawayOption === option.value}\n              isLink={option.isLink}\n              userNames={userNames}\n              selectedMemberIds={selectedUserIds}\n              onClickAction={option.onClickAction}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscribersOptions() {\n    return (\n      <div className={styles.options}>\n        <RadioGroup\n          name=\"subscribers\"\n          options={SUBSCRIBER_OPTIONS}\n          selected={selectedSubscriberOption}\n          onChange={handleChangeSubscriberOption}\n          onClickAction={onClickActionHandler}\n          subLabelClassName={styles.subLabelClassName}\n          isLink\n        />\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.options}>\n        {filteredGifts?.map((gift) => (\n          <PremiumSubscriptionOption\n            isGiveaway\n            key={gift.months}\n            option={gift}\n            fullMonthlyAmount={fullMonthlyAmount!}\n            checked={gift.months === selectedMonthOption}\n            onChange={setSelectedMonthOption}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function deleteParticipantsHandler(id: string) {\n    const filteredChannelIds = selectedChannelIds.filter((channelId) => channelId !== id);\n    setSelectedChannelIds(filteredChannelIds);\n  }\n\n  function renderStarOptionList() {\n    return (\n      <StarTopupOptionList\n        className={styles.starOptions}\n        options={starsGiftOptions}\n        selectedStarCount={selectedRandomUserCount}\n        selectedStarOption={selectedStarOption}\n        onClick={handleStarClick}\n      />\n    );\n  }\n\n  function renderGiveawayOptionList() {\n    return (\n      <>\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingChannelsGroupsIncludedGiveaway')}\n          </h2>\n\n          <ListItem\n            inactive\n            className=\"chat-item-clickable contact-list-item\"\n          >\n            <GroupChatInfo\n              chatId={chatId!}\n              status={lang(isChannel ? 'BoostingChannelWillReceiveBoost'\n                : 'BoostingGroupWillReceiveBoost', boostQuantity || boostStarsQuantity, 'i')}\n            />\n          </ListItem>\n\n          {selectedChannelIds?.map((channelId) => {\n            return (\n              <ListItem\n                ripple\n                key={channelId}\n                className=\"chat-item-clickable contact-list-item\"\n                /* eslint-disable-next-line react/jsx-no-bind */\n                onClick={() => deleteParticipantsHandler(channelId)}\n                rightElement={(<Icon name=\"close\" className={styles.removeChannel} />)}\n              >\n                <GroupChatInfo\n                  chatId={channelId.toString()}\n                />\n              </ListItem>\n            );\n          })}\n\n          {selectedChannelIds.length < MAX_ADDITIONAL_CHANNELS && (\n            <ListItem\n              icon=\"add\"\n              ripple\n              onClick={openChannelPickerModal}\n              className={styles.addButton}\n              iconClassName={styles.addChannel}\n            >\n              {lang('BoostingAddChannelOrGroup')}\n            </ListItem>\n          )}\n        </div>\n\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingEligibleUsers')}\n          </h2>\n\n          {renderSubscribersOptions()}\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang(isChannel ? 'BoostGift.LimitSubscribersInfo' : 'lng_giveaway_users_about_group'))}\n        </div>\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayAdditionalPrizes')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowPrizes}\n              onChange={handleShouldShowPrizesChange}\n            />\n          </div>\n\n          {shouldShowPrizes && (\n            <div className={styles.prizesSection}>\n              <h2 className={styles.title}>\n                {selectedRandomUserCount}\n              </h2>\n              <InputText\n                className={styles.prizesInput}\n                value={prizeDescription}\n                onChange={handlePrizeDescriptionChange}\n                label={lang('BoostingGiveawayEnterYourPrize')}\n              />\n            </div>\n          )}\n        </div>\n\n        {shouldShowPrizes ? (\n          !isStarsGiveaway && !isStarsPrepaidGiveaway ? (\n            <div className={styles.subscription}>\n              {prizeDescription?.length ? renderText(lang('BoostingGiveawayAdditionPrizeCountNameHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, prizeDescription, monthQuantity]\n                  : [selectedUserCount, prizeDescription, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown']) : renderText(lang('BoostingGiveawayAdditionPrizeCountHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, monthQuantity]\n                  : [selectedUserCount, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown'])}\n            </div>\n          ) : undefined\n        ) : (\n          <div className={styles.subscription}>\n            {renderText(lang('BoostingGiveawayAdditionPrizeHint'))}\n          </div>\n        )}\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayShowWinners')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowWinners}\n              onChange={handleShouldShowWinnersChange}\n            />\n          </div>\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang('BoostingGiveawayShowWinnersHint'))}\n        </div>\n\n        <div className={buildClassName(styles.section,\n          (dataPrepaidGiveaway || dataStarsPrepaidGiveaway || isStarsGiveaway) && styles.subscriptionFooter)}\n        >\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingDateWhenGiveawayEnds')}\n          </h2>\n\n          <Button\n            ariaLabel={lang('BoostGift.DateEnds')}\n            className={buildClassName(styles.dateButton, 'expire-limit')}\n            isText\n            onClick={openCalendar}\n          >\n            <h3 className={styles.title}>\n              {lang('BoostGift.DateEnds')}\n            </h3>\n            {formatDateTimeToString(customExpireDate, lang.code)}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={handleClose}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n      onEnter={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n        <h2 className={styles.headerText}>\n          {renderText(lang('BoostingBoostsViaGifts'))}\n        </h2>\n        <div className={styles.description}>\n          {renderText(lang(isChannel ? 'BoostingGetMoreBoost' : 'BoostingGetMoreBoostsGroup'))}\n        </div>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.premiumHeaderText}>\n            {lang('BoostingBoostsViaGifts')}\n          </h2>\n        </div>\n        {(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? (\n          <div className={styles.status}>\n            <div>\n              {dataStarsPrepaidGiveaway ? (\n                <img className={styles.prepaidImg} src={GiftStar} alt=\"\" />\n              ) : (\n                <img className={styles.prepaidImg} src={GIVEAWAY_IMG_LIST[dataPrepaidGiveaway!.months]} alt=\"\" />\n              )}\n            </div>\n            <div className={styles.info}>\n              <h3 className={styles.title}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Title', dataStarsPrepaidGiveaway?.stars)\n                  : lang('BoostingTelegramPremiumCountPlural', dataPrepaidGiveaway!.quantity)}\n              </h3>\n              <p className={styles.month}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Desc', dataStarsPrepaidGiveaway?.quantity)\n                  : lang('PrepaidGiveawayMonths', dataPrepaidGiveaway?.months)}\n              </p>\n            </div>\n            <div className={styles.quantity}>\n              <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {dataStarsPrepaidGiveaway ? dataStarsPrepaidGiveaway?.boosts\n                    : dataPrepaidGiveaway!.quantity * (giveawayBoostPerPremiumLimit ?? GIVEAWAY_BOOST_PER_PREMIUM)}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className={buildClassName(styles.section, styles.types)}>\n            {renderTypeOptions()}\n          </div>\n        )}\n\n        {isPremiumGiveaway && !selectedUserIds?.length && (\n          <>\n            {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingQuantityPrizes')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedUserCount}\n                    marks={userCountOptions}\n                    onChange={handleRandomUserCountChange}\n                  />\n                </div>\n\n                <div className={styles.subscription}>\n                  {renderText(lang('BoostingChooseHowMany'))}\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {isStarsGiveaway && (\n          <>\n            {!dataStarsPrepaidGiveaway && !dataPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingStarsOptions')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostStarsQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  {renderStarOptionList()}\n                </div>\n\n                <div className={buildClassName(styles.subscription, styles.starSubscription)}>\n                  {renderText(lang('BoostGift.Stars.Info'))}\n                </div>\n\n                <div className={styles.section}>\n                  <h2 className={styles.giveawayTitle}>\n                    {lang('BoostingStarsQuantityPrizes')}\n                  </h2>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedRandomUserCount}\n                    marks={winnerCountOptions}\n                    onChange={handleWinnerCountChange}\n                  />\n\n                  <div className={styles.subscription}>\n                    {renderText(lang('BoostingStarsQuantityPrizesInfo'))}\n                  </div>\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && isPremiumGiveaway && (\n          <>\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingDurationOfPremium')}\n              </h2>\n\n              {renderSubscriptionOptions()}\n            </div>\n\n            <div className={buildClassName(styles.subscription, styles.subscriptionFooter)}>\n              {renderPremiumFeaturesLink()}\n            </div>\n          </>\n        )}\n\n        {selectedGiveawayOption && (\n          <div className={styles.footer}>\n            <Button\n              className={styles.button}\n              onClick={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n            >\n              {lang('BoostingStartGiveaway')}\n            </Button>\n          </div>\n        )}\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n      <CountryPickerModal\n        isOpen={isCountryPickerModalOpen}\n        onClose={closeCountryPickerModal}\n        countryList={countryList}\n        onSubmit={handleSetCountriesListChange}\n        selectionLimit={countrySelectionLimit}\n      />\n      <GiveawayUserPickerModal\n        isOpen={isUserPickerModalOpen}\n        onClose={closeUserPickerModal}\n        onSelectedIdsConfirmed={handleSelectedUserIdsChange}\n        initialSelectedIds={selectedUserIds}\n        selectionLimit={userSelectionLimit}\n        giveawayChatId={chatId}\n      />\n      <GiveawayChannelPickerModal\n        isOpen={isChannelPickerModalOpen}\n        onClose={closeChannelPickerModal}\n        initialSelectedIds={selectedChannelIds}\n        onSelectedIdsConfirmed={handleSelectedChannelIdsChange}\n        selectionLimit={GIVEAWAY_MAX_ADDITIONAL_CHANNELS}\n        giveawayChatId={chatId}\n      />\n      <ConfirmDialog\n        title={lang('BoostingStartGiveawayConfirmTitle')}\n        text={lang('BoostingStartGiveawayConfirmText')}\n        confirmLabel={lang('Start')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmLaunchPrepaidGiveaway}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    giveawayModal,\n  } = selectTabState(global);\n  const chatId = giveawayModal?.chatId;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const isChannel = chat && isChatChannel(chat);\n\n  return {\n    chatId,\n    gifts: giveawayModal?.gifts,\n    selectedMemberList: giveawayModal?.selectedMemberIds,\n    selectedChannelList: giveawayModal?.selectedChannelIds,\n    giveawayBoostPerPremiumLimit: global.appConfig?.giveawayBoostsPerPremium,\n    isStarsGiftEnabled: global.appConfig?.isStarsGiftEnabled,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n    countrySelectionLimit: global.appConfig?.giveawayCountriesMax,\n    countryList: global.countryList.general,\n    prepaidGiveaway: giveawayModal?.prepaidGiveaway,\n    isChannel,\n    starsGiftOptions: giveawayModal?.starOptions,\n  };\n})(GiveawayModal));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogs',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n  savedDialogsPinned: 'pin-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: OldLangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: OldLangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useOldLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QAs_iFxO\",\"limit-compare\":\"k0O6Rnjh\",\"limitCompare\":\"k0O6Rnjh\",\"limit-badge\":\"Q5d_7bB4\",\"limitBadge\":\"Q5d_7bB4\",\"limit-value\":\"ArEy3hhB\",\"limitValue\":\"ArEy3hhB\",\"limit-icon\":\"rbnU7JVX\",\"limitIcon\":\"rbnU7JVX\",\"dialog-buttons\":\"RVM_RSap\",\"dialogButtons\":\"RVM_RSap\",\"x2\":\"esB1OhAF\",\"button-icon\":\"ydpxmYS3\",\"buttonIcon\":\"ydpxmYS3\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll({\n        container: containerRef.current!,\n        element: stickerSetEl,\n        position: 'start',\n        margin: FOCUS_MARGIN,\n        maxDistance: isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      });\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"m6XpTzQX\",\"video\":\"OZHqKbDL\",\"image\":\"enA6c8gc\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport { IS_WEBM_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, hasVideoThumb, hasAnimatedThumb, hasStaticThumb, thumbCustomEmojiId,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, undefined, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const shouldFallbackToSticker = !hasThumbnail\n    || (hasVideoThumb && !IS_WEBM_SUPPORTED && !hasAnimatedThumb && !hasStaticThumb);\n  const firstStickerHash = shouldFallbackToSticker && stickerSet.stickers?.[0]\n    && getStickerMediaHash(stickerSet.stickers[0], 'preview');\n  const firstStickerMediaData = useMedia(firstStickerHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !firstStickerHash) || hasAnimatedThumb) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = thumbCustomEmojiId || mediaData || firstStickerMediaData;\n  const transitionClassNames = useMediaTransitionDeprecated(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: stickerSet,\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, 'sticker-set-cover')}\n      style={`--_size: ${size}px`}\n    >\n      {isReady ? (\n        thumbCustomEmojiId ? (\n          <CustomEmoji\n            documentId={thumbCustomEmojiId}\n            size={size}\n            observeIntersectionForPlaying={observeIntersection}\n            noPlay={noPlay}\n          />\n        ) : hasAnimatedThumb ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (hasVideoThumb && !shouldFallbackToSticker) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || firstStickerMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\nimport Sparkles from './Sparkles';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldIgnorePremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n  isEffectEmoji?: boolean;\n  withSparkles?: boolean;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  shouldIgnorePremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  isEffectEmoji,\n  withSparkles,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, undefined, !hasCustomColor);\n\n  const {\n    id, stickerSetInfo,\n  } = sticker;\n\n  const isPremium = (!sticker.isFree && isEffectEmoji) || sticker.hasEffect;\n  const isCustomEmoji = sticker.isCustomEmoji || isEffectEmoji;\n  const isLocked = !isCurrentUserPremium && isPremium && !shouldIgnorePremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuAnchor);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true }));\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      if (isEffectEmoji) {\n        openPremiumModal({ initialSection: 'effects' });\n      } else {\n        openPremiumModal({ initialSection: 'premium_stickers' });\n      }\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: { type: 'regular', documentId: sticker.id, until: getServerTime() + duration },\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    isEffectEmoji && 'effect-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {withSparkles && <Sparkles preset=\"button\" /> }\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          noVideoOnMobile\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <Icon name=\"lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <Icon name=\"star\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AVrrYEbM\",\"selected\":\"QkdO_lz1\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReactionWithPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIconWithPreview from '../AnimatedIconWithPreview';\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionWithPaid;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReactionWithPaid) => void;\n  onContextMenu?: (reaction: ApiReactionWithPaid) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n  onContextMenu,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = reaction.type === 'custom';\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation, 'full') : undefined,\n    !animationId,\n  );\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenu?.(reaction);\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onContextMenu, handleContextMenuHide, isContextMenuOpen, reaction]);\n\n  const tgsUrl = reaction.type === 'paid' ? LOCAL_TGS_URLS.StarReaction : mediaData;\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={tgsUrl}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiEmojiStatusType, ApiReactionWithPaid, ApiSticker,\n} from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  COLLECTIBLE_STATUS_SET_ID,\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Icon from './icons/Icon';\nimport ReactionEmoji from './reactions/ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isChatEmojiSet?: boolean;\n  isChatStickerSet?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  collectibleStatuses?: ApiEmojiStatusType[];\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps & StateProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isChatEmojiSet,\n  isChatStickerSet,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onReactionContext,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  collectibleStatuses,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransitionDeprecated(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isStatusCollectible = stickerSet.id === COLLECTIBLE_STATUS_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isCurrentUserPremium && isPremiumSet && !isChatEmojiSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID\n    && stickerSet.id !== POPULAR_SYMBOL_SET_ID && stickerSet.id !== EFFECT_EMOJIS_SET_ID\n    && stickerSet.id !== EFFECT_STICKERS_SET_ID && !isChatEmojiSet && !isChatStickerSet;\n\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = (withDefaultTopicIcon || withDefaultStatusIcon) ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const collectibleEmojiIdsSet = useMemo(() => (\n    collectibleStatuses ? new Set(collectibleStatuses.map(({ documentId }) => documentId)) : undefined\n  ), [collectibleStatuses]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && !isStatusCollectible\n   && isEmoji && !isPopular && !isChatEmojiSet\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-title', withAddSetButton && 'symbol-set-title-external')}>\n            {isLocked && <Icon name=\"lock-badge\" className=\"symbol-set-locked-icon\" />}\n            <span className=\"symbol-set-name\">{stickerSet.title}</span>\n            {(isChatEmojiSet || isChatStickerSet) && (\n              <span className=\"symbol-set-chat\">{lang(isChatEmojiSet ? 'GroupEmoji' : 'GroupStickers')}</span>\n            )}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <Icon className=\"symbol-set-remove\" name=\"close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(\n          'symbol-set-container shared-canvas-container',\n          transitionClassNames,\n          stickerSet.id === EFFECT_EMOJIS_SET_ID && 'effect-emojis',\n        )}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <Icon name=\"star\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              onContextMenu={onReactionContext}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            const withSparkles = sticker.id === COLLECTIBLE_STATUS_SET_ID\n            || collectibleEmojiIdsSet?.has(sticker.id);\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                shouldIgnorePremium={isChatEmojiSet}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n                isEffectEmoji={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n                noShowPremium={isCurrentUserPremium\n                  && (stickerSet.id === EFFECT_STICKERS_SET_ID || stickerSet.id === EFFECT_EMOJIS_SET_ID)}\n                withSparkles={withSparkles}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const collectibleStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    return { collectibleStatuses };\n  },\n)(StickerSet));\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lq8BD6Hc\",\"main\":\"p7c8y0LH\",\"hasHeader\":\"zTGriBHY\",\"main_customEmoji\":\"U0BL1VvK\",\"mainCustomEmoji\":\"U0BL1VvK\",\"header\":\"Qn3lBUNs\",\"headerWithBorder\":\"HMspKpNp\",\"stickerCover\":\"YKO0Obwy\",\"activated\":\"y02WwQk6\",\"pickerDisabled\":\"BZfaP1GD\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiEmojiStatusType,\n  ApiReaction, ApiReactionWithPaid, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  COLLECTIBLE_STATUS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChatFullInfo,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique, uniqueByField } from '../../util/iteratees';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  collectibleStatuses?: ApiEmojiStatusType[];\n  chatEmojiSetId?: string;\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  isWithPaidReaction?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst RECENT_DEFAULT_STATUS_COUNT = 7;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  collectibleStatuses,\n  stickerSetsById,\n  chatEmojiSetId,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  defaultTagReactions,\n  isWithPaidReaction,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onReactionContext,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const collectibleStatusEmojis = useMemo(() => {\n    const collectibleStatusEmojiIds = collectibleStatuses?.map((status) => status.documentId);\n    return customEmojisById && collectibleStatusEmojiIds?.map((id) => customEmojisById[id]).filter(Boolean);\n  }, [customEmojisById, collectibleStatuses]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const canLoadAndPlay = usePrevDuringAnimation(loadAndPlay || undefined, SLIDE_TRANSITION_DURATION);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker && isSavedMessages) {\n      if (defaultTagReactions?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang('PremiumPreviewTags'),\n          reactions: defaultTagReactions,\n          count: defaultTagReactions.length,\n          isEmoji: true,\n        });\n      }\n    }\n\n    if (isReactionPicker && !isSavedMessages) {\n      const topReactionsSlice: ApiReactionWithPaid[] = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (isWithPaidReaction) {\n        topReactionsSlice.unshift({ type: 'paid' });\n      }\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .filter(({ isInactive }) => !isInactive)\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = uniqueByField(defaultStatusIconsPack.stickers\n          .slice(0, RECENT_DEFAULT_STATUS_COUNT)\n          .concat(recentCustomEmojis || []), 'id');\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: oldLang('RecentStickers'),\n          isEmoji: true,\n        });\n      }\n      if (collectibleStatusEmojis?.length) {\n        defaultSets.push({\n          id: COLLECTIBLE_STATUS_SET_ID,\n          accessHash: '',\n          count: collectibleStatusEmojis.length,\n          stickers: collectibleStatusEmojis,\n          title: lang('CollectibleStatusesCategory'),\n          isEmoji: true,\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: oldLang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: oldLang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const userSetIds = [...(addedCustomEmojiIds || [])];\n    if (chatEmojiSetId) {\n      userSetIds.unshift(chatEmojiSetId);\n    }\n\n    const setIdsToDisplay = unique(userSetIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, oldLang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId, isSavedMessages, defaultTagReactions, chatEmojiSetId,\n    isWithPaidReaction, collectibleStatusEmojis, lang,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <Icon name=\"recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !canLoadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !canLoadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{oldLang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n    pickerStyles.hasHeader,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n          const isChatEmojiSet = stickerSet.id === chatEmojiSetId;\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && canLoadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isChatEmojiSet={isChatEmojiSet}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={onReactionSelect}\n              onReactionContext={onReactionContext}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      reactions: {\n        availableReactions,\n        recentReactions,\n        topReactions,\n        defaultTags,\n      },\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const collectibleStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    return {\n      customEmojisById,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      collectibleStatuses: isStatusPicker ? collectibleStatuses : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      chatEmojiSetId: chatFullInfo?.emojiSet?.id,\n      isWithPaidReaction: isReactionPicker && chatFullInfo?.isPaidReactionAvailable,\n      availableReactions: isReactionPicker ? availableReactions : undefined,\n      defaultTagReactions: isReactionPicker ? defaultTags : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qk9PEGRE\",\"activated\":\"WYeuJNQx\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"hRzvfaRb\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"C9sWDINB\",\"topEmoji\":\"gdG3oY21\",\"description\":\"p7S4AH8A\",\"title\":\"KVpsce1g\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { formatShortDuration } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SuggestedStatusModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['suggestedStatusModal'];\n};\n\ntype StateProps = {\n  bot?: ApiUser;\n  currentUser?: ApiUser;\n};\n\nconst CUSTOM_EMOJI_SIZE = 6 * REM;\n\nconst SuggestedStatusModal = ({ modal, currentUser, bot }: OwnProps & StateProps) => {\n  const { setEmojiStatus, closeSuggestedStatusModal, sendWebAppEvent } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const mockPeerWithStatus = useMemo(() => {\n    if (!currentUser || !renderingModal) return undefined;\n    return {\n      ...currentUser,\n      emojiStatus: {\n        type: 'regular',\n        documentId: renderingModal.customEmojiId,\n      },\n    } satisfies ApiUser;\n  }, [currentUser, renderingModal]);\n\n  const description = useMemo(() => {\n    if (!renderingModal || !bot) return undefined;\n\n    const botName = getUserFullName(bot);\n\n    if (renderingModal.duration) {\n      return lang('BotSuggestedStatusFor', {\n        bot: botName,\n        duration: formatShortDuration(lang, renderingModal.duration),\n      }, {\n        withNodes: true,\n        withMarkdown: true,\n      });\n    }\n\n    return lang('BotSuggestedStatus', { bot: botName }, { withNodes: true, withMarkdown: true });\n  }, [bot, lang, renderingModal]);\n\n  const handleClose = useLastCallback(() => {\n    const webAppKey = renderingModal?.webAppKey;\n\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'emoji_status_failed',\n          eventData: {\n            error: 'USER_DECLINED',\n          },\n        },\n      });\n    }\n\n    closeSuggestedStatusModal();\n  });\n\n  const handleSetStatus = useLastCallback(() => {\n    if (!renderingModal) return;\n\n    const expires = renderingModal.duration ? getServerTime() + renderingModal.duration : undefined;\n\n    setEmojiStatus({\n      referrerWebAppKey: renderingModal.webAppKey,\n      emojiStatus: { type: 'regular', documentId: renderingModal.customEmojiId, until: expires },\n    });\n    closeSuggestedStatusModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      isSlim\n      onClose={handleClose}\n    >\n      {renderingModal && (\n        <CustomEmoji\n          className={styles.topEmoji}\n          documentId={renderingModal.customEmojiId}\n          size={CUSTOM_EMOJI_SIZE}\n          loopLimit={1}\n          forceAlways\n        />\n      )}\n      <div>\n        <h3 className={styles.title}>{lang('BotSuggestedStatusTitle')}</h3>\n        <p className={styles.description}>{description}</p>\n      </div>\n      {mockPeerWithStatus && (\n        <PeerChip\n          mockPeer={mockPeerWithStatus}\n          withEmojiStatus\n        />\n      )}\n      <Button size=\"smaller\" onClick={handleSetStatus}>\n        {lang('GeneralConfirm')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    const bot = modal?.botId ? selectUser(global, modal.botId) : undefined;\n\n    return {\n      currentUser,\n      bot,\n    };\n  },\n)(SuggestedStatusModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"pUyNTysT\",\"modal\":\"IK2mBqbm\",\"loading\":\"zjXCH3pT\",\"description\":\"j6xEoljc\",\"bold\":\"hAA6B1lc\",\"chip\":\"smWR78pO\",\"replaceModal\":\"GIFAjZPY\",\"replaceModalContent\":\"Jxyz9TaL\",\"avatarContainer\":\"OKp6HS1U\",\"arrow\":\"WSJdWV7L\",\"boostedWrapper\":\"NU9itcIm\",\"boostedMark\":\"upXvhNRY\"};","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiMyBoost } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle, isChatAdmin, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatShortDuration } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  boost?: ApiMyBoost;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n  canBoostMore?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  modal: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  prevBoostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  modal,\n  chat,\n  chatFullInfo,\n  prevBoostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n    loadFullChat,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isChannel = chat && isChatChannel(chat);\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (chat && !chatFullInfo) {\n      loadFullChat({ chatId: chat.id });\n    }\n  }, [chat, chatFullInfo]);\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(oldLang, chat);\n  }, [chat, oldLang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!prevBoostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(oldLang, prevBoostedChat);\n  }, [prevBoostedChat, oldLang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    boost,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n    canBoostMore,\n  }: BoostInfo = useMemo(() => {\n    if (!modal?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: oldLang('Loading'),\n      };\n    }\n\n    const {\n      hasMyBoost,\n    } = modal.boostStatus;\n\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, chat.id);\n    const areBoostsInDifferentChannels = modal?.myBoosts && !areAllBoostsInChannel(modal.myBoosts, chat.id);\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n      isMaxLevel,\n    } = getBoostProgressInfo(modal.boostStatus, true);\n\n    const hasBoost = hasMyBoost;\n\n    const left = oldLang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? oldLang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = oldLang('ChannelBoost.MoreBoosts', remainingBoosts);\n\n    const modalTitle = isChannel ? oldLang('BoostChannel') : oldLang('BoostGroup');\n\n    const boostsLeftToUnrestrict = (chatFullInfo?.boostsToUnrestrict || 0) - (chatFullInfo?.boostsApplied || 0);\n\n    let description: string | undefined;\n    if (isMaxLevel) {\n      description = oldLang('BoostsMaxLevelReached');\n    } else if (boostsLeftToUnrestrict > 0 && !isChatAdmin(chat)) {\n      const boostTimes = oldLang('GroupBoost.BoostToUnrestrict.Times', boostsLeftToUnrestrict);\n      description = oldLang('GroupBoost.BoostToUnrestrict', [boostTimes, chatTitle]);\n    } else {\n      description = oldLang('ChannelBoost.MoreBoostsNeeded.Text', [chatTitle, moreBoosts]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      boost: firstBoost,\n      isBoosted: hasBoost,\n      canBoostMore: areBoostsInDifferentChannels && !isMaxLevel,\n    };\n  }, [chat, chatTitle, modal, oldLang, chatFullInfo, isChannel]);\n\n  const isBoostDisabled = !modal?.myBoosts?.length && isCurrentUserPremium;\n  const isReplacingBoost = boost?.chatId && boost.chatId !== modal?.chatId;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id, slots: [boost!.slot] });\n    requestConfetti({});\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!boost) {\n      if (!isCurrentUserPremium) {\n        openPremiumDialog();\n        return;\n      }\n\n      closeBoostModal();\n      return;\n    }\n\n    if (!canBoostMore) {\n      closeBoostModal();\n      return;\n    }\n\n    if (boost.cooldownUntil) {\n      openWaitDialog();\n      return;\n    }\n\n    if (isReplacingBoost) {\n      openReplaceModal();\n      return;\n    }\n\n    handleApplyBoost();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        {isBoosted && (\n          <div className={buildClassName(styles.description, styles.bold)}>\n            {oldLang('ChannelBoost.YouBoostedChannelText', chatTitle)}\n          </div>\n        )}\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {canBoostMore ? (\n              <>\n                <Icon name=\"boost\" />\n                {oldLang(isChannel ? 'ChannelBoost.BoostChannel' : 'GroupBoost.BoostGroup')}\n              </>\n            ) : oldLang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {oldLang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {isReplacingBoost && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={prevBoostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(\n              oldLang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'],\n            )}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {oldLang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {oldLang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {Boolean(boost?.cooldownUntil) && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={oldLang('OK')}\n          title={oldLang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            oldLang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatShortDuration(lang, boost!.cooldownUntil - getServerTime()),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={oldLang('Common.Yes')}\n          title={oldLang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(oldLang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nfunction getFirstAvailableBoost(myBoosts: ApiMyBoost[], chatId?: string) {\n  return myBoosts.find((boost) => !boost.chatId)\n    || myBoosts.filter((b) => chatId && b.chatId !== chatId)\n      .sort((a, b) => a.date - b.date)[0];\n}\n\nfunction areAllBoostsInChannel(myBoosts: ApiMyBoost[], chatId: string) {\n  return myBoosts.every((boost) => boost.chatId === chatId);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal && selectChat(global, modal?.chatId);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, modal.chatId);\n    const boostedChat = firstBoost?.chatId ? selectChat(global, firstBoost?.chatId) : undefined;\n\n    return {\n      chat,\n      chatFullInfo,\n      prevBoostedChat: boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"clickable\":\"IzcASdzD\",\"centered\":\"xVLGjLub\",\"logo\":\"Mtx4SWww\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { selectChatMessage, selectSender } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport TableInfoModal, { type TableData } from '../common/TableInfoModal';\n\nimport styles from './GiftCodeModal.module.scss';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  modal: TabState['giftCodeModal'];\n};\n\nexport type StateProps = {\n  currentUserId?: string;\n  messageSender?: ApiPeer;\n};\n\nconst GIFTCODE_PATH = 'giftcode';\n\nconst GiftCodeModal = ({\n  currentUserId,\n  modal,\n  messageSender,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftCodeModal, applyGiftCode, focusMessage,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const canUse = (!modal?.info.toId || modal?.info.toId === currentUserId) && !modal?.info.usedAt;\n\n  const handleOpenGiveaway = useLastCallback(() => {\n    if (!modal || !modal.info.giveawayMessageId) return;\n    focusMessage({\n      chatId: modal.info.fromId!,\n      messageId: modal.info.giveawayMessageId,\n    });\n    closeGiftCodeModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (canUse) {\n      applyGiftCode({ slug: modal!.slug });\n      return;\n    }\n    closeGiftCodeModal();\n  });\n\n  const modalData = useMemo(() => {\n    if (!modal) return undefined;\n    const { slug, info } = modal;\n\n    const fromId = info.fromId || messageSender?.id;\n\n    const header = (\n      <>\n        <img src={PremiumLogo} alt=\"\" className={styles.logo} />\n        <p className={styles.centered}>{renderText(lang('lng_gift_link_about'), ['simple_markdown'])}</p>\n        <LinkField title=\"BoostingGiftLink\" link={`${TME_LINK_PREFIX}/${GIFTCODE_PATH}/${slug}`} />\n      </>\n    );\n\n    const tableData = [\n      [lang('BoostingFrom'), fromId ? { chatId: fromId } : lang('BoostingNoRecipient')],\n      [lang('BoostingTo'), info.toId ? { chatId: info.toId } : lang('BoostingNoRecipient')],\n      [lang('BoostingGift'), lang('BoostingTelegramPremiumFor', lang('Months', info.months, 'i'))],\n      [lang('BoostingReason'), (\n        <span className={buildClassName(info.giveawayMessageId && styles.clickable)} onClick={handleOpenGiveaway}>\n          {info.isFromGiveaway && !info.toId ? lang('BoostingIncompleteGiveaway')\n            : lang(info.isFromGiveaway ? 'BoostingGiveaway' : 'BoostingYouWereSelected')}\n        </span>\n      )],\n      [lang('BoostingDate'), formatDateTimeToString(info.date * 1000, lang.code, true)],\n    ] satisfies TableData;\n\n    const footer = (\n      <span className={styles.centered}>\n        {renderText(\n          info.usedAt ? lang('BoostingUsedLinkDate', formatDateTimeToString(info.usedAt * 1000, lang.code, true))\n            : lang('BoostingSendLinkToAnyone'),\n          ['simple_markdown'],\n        )}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [lang, messageSender?.id, modal]);\n\n  if (!modalData) return undefined;\n\n  return (\n    <TableInfoModal\n      isOpen={isOpen}\n      title={lang('lng_gift_link_title')}\n      tableData={modalData.tableData}\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={canUse ? lang('BoostingUseLink') : lang('Close')}\n      onButtonClick={handleButtonClick}\n      onClose={closeGiftCodeModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { message } = modal || {};\n    const chatMessage = message && selectChatMessage(global, message.chatId, message.messageId);\n    const sender = chatMessage && selectSender(global, chatMessage);\n\n    return {\n      currentUserId: global.currentUserId,\n      messageSender: sender,\n    };\n  },\n)(GiftCodeModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"dl10exNi\",\"picker-wrapper\":\"gxWY5c6x\",\"pickerWrapper\":\"gxWY5c6x\",\"picker-header\":\"h8N7eyob\",\"pickerHeader\":\"h8N7eyob\",\"picker-header-info\":\"Rth2Qu07\",\"pickerHeaderInfo\":\"Rth2Qu07\",\"selection-toggle\":\"B6eAugx8\",\"selectionToggle\":\"B6eAugx8\",\"foldersWrapper\":\"mwcvgD2S\",\"folders\":\"LKavx8ww\",\"folder\":\"qglLx5Dn\",\"button-text\":\"bgaRuEMs\",\"buttonText\":\"bgaRuEMs\",\"button-badge\":\"rTe14Z22\",\"buttonBadge\":\"rTe14Z22\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const isNew = invite.alreadyPeerIds.length === 0;\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = isNew ? lang('FolderLinkSubtitleNew')\n    : newChatsCount ? lang('FolderLinkSubtitleAdd', {\n      chats: lang('FolderLinkSubtitleAddCount', { count: newChatsCount }, { pluralValue: newChatsCount }),\n      title: renderTextWithEntities({\n        text: folder.title.text,\n        entities: folder.title.entities,\n        noCustomEmojiPlayback: folder.noTitleAnimations,\n      }),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    }) : lang('FolderLinkSubtitleAlready');\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {oldLang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length\n                  ? oldLang('DeselectAll') : oldLang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {oldLang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.alreadyPeerIds}\n          lockedSelectedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && oldLang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {oldLang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>([]);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {lang('FolderLinkSubtitleNew')}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {oldLang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? oldLang('DeselectAll') : oldLang('SelectAll')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.peerIds}\n          lockedSelectedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkAddFolder')}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  modal,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(modal);\n  const renderingInfo = usePreviousDeprecated(modal) || modal;\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) {\n      return renderTextWithEntities({\n        text: renderingFolder.title.text,\n        entities: renderingFolder.title.entities,\n        noCustomEmojiPlayback: renderingFolder.noTitleAnimations,\n      });\n    }\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) {\n      return renderTextWithEntities({\n        text: renderingInfo.invite.title.text,\n        entities: renderingInfo.invite.title.entities,\n        noCustomEmojiPlayback: renderingInfo.invite.noTitleAnimations,\n      });\n    }\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: TeactNode) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab\n            className={styles.folder}\n            isActive\n            badgeCount={folderTabNumber}\n            isBadgeActive\n            title={folderTitle}\n          />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { invite, removal } = modal || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MZ0RCecx\",\"title\":\"ar8XeydN\",\"participantCount\":\"un00TXYY\",\"participants\":\"YvkZ6c2D\",\"participant\":\"DHJSBDeE\",\"buttons\":\"KFtrPtNr\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { getCustomPeerFromInvite, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport PeerBadge from '../../common/PeerBadge';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './ChatInviteModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['chatInviteModal'];\n};\n\nconst ChatInviteModal = ({ modal }: OwnProps) => {\n  const { acceptChatInvite, closeChatInviteModal, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const participantsRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const prevModal = usePrevious(modal);\n  const { hash, inviteInfo } = modal || prevModal || {};\n  const {\n    about, isBroadcast, participantIds, participantsCount, photo, isRequestNeeded,\n  } = inviteInfo || {};\n\n  const handleClose = useLastCallback(() => {\n    closeChatInviteModal();\n  });\n\n  const handleAccept = useLastCallback(() => {\n    acceptChatInvite({ hash: hash! });\n\n    showNotification({\n      message: isBroadcast ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n    });\n\n    handleClose();\n  });\n\n  const acceptLangKey = isBroadcast ? 'ProfileJoinChannel' : 'JoinGroup';\n  const requestToJoinLangKey = isBroadcast ? 'MemberRequests.RequestToJoinChannel'\n    : 'MemberRequests.RequestToJoinGroup';\n\n  const customPeer = useMemo(() => {\n    if (!inviteInfo) return undefined;\n\n    return getCustomPeerFromInvite(inviteInfo);\n  }, [inviteInfo]);\n\n  const participants = useMemo(() => {\n    if (!participantIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return participantIds.map((id) => selectUser(global, id)).filter(Boolean);\n  }, [participantIds]);\n\n  useHorizontalScroll(participantsRef, !modal || !participants);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      contentClassName={styles.content}\n      isSlim\n      onClose={handleClose}\n      onEnter={handleAccept}\n    >\n      {customPeer && <Avatar size=\"jumbo\" photo={photo} peer={customPeer} withVideo />}\n      {customPeer && <FullNameTitle className={styles.title} peer={customPeer} />}\n      {about && <p className={styles.about}>{about}</p>}\n      <p className={styles.participantCount}>\n        {lang(isBroadcast ? 'Subscribers' : 'Members', participantsCount, 'i')}\n      </p>\n      {participants && (\n        <div ref={participantsRef} className={buildClassName(styles.participants, 'no-scrollbar')}>\n          {participants.map((participant) => (\n            <PeerBadge className={styles.participant} peer={participant} text={getUserFullName(participant)} />\n          ))}\n        </div>\n      )}\n      <div className={buildClassName('dialog-buttons', styles.buttons)}>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleAccept}>\n          {lang(isRequestNeeded ? requestToJoinLangKey : acceptLangKey)}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ChatInviteModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LFkgLoAk\",\"title\":\"La4sUYaq\",\"description\":\"Bn5kz5br\",\"moreButton\":\"JdN5pGTw\",\"secondary\":\"hbsLlXSH\",\"content\":\"TZE15Pt_\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport type { TableAboutData } from '../common/TableAboutModal';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport SponsoredMessageContextMenuContainer from '../../middle/message/SponsoredContextMenuContainer';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport TableAboutModal from '../common/TableAboutModal';\n\nimport styles from './AboutAdsModal.module.scss';\n\nexport type OwnProps = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  modal: TabState['aboutAdsModal'];\n};\n\ntype StateProps = {\n  minLevelToRestrictAds?: number;\n};\n\nconst AboutAdsModal = ({ modal, minLevelToRestrictAds }: OwnProps & StateProps) => {\n  const { closeAboutAdsModal } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const moreMenuRef = useRef<HTMLButtonElement>(null);\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n  const {\n    canReport, randomId, additionalInfo, sponsorInfo,\n  } = renderingModal || {};\n  const isMonetizationSharing = canReport;\n\n  const renderingIsNewDesign = useCurrentOrPrev(isMonetizationSharing);\n\n  const oldLang = useOldLang();\n\n  const regularAdContent = useMemo(() => {\n    return (\n      <>\n        <h3>{oldLang('SponsoredMessageInfoScreen.Title')}</h3>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n        <p>\n          <SafeLink\n            url={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n            text={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n          />\n        </p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      </>\n    );\n  }, [oldLang]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleContextMenu, handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(moreMenuRef, !renderingIsNewDesign);\n\n  const handleClose = useLastCallback(() => {\n    closeAboutAdsModal();\n    handleContextMenuClose();\n    handleContextMenuHide();\n  });\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <>\n        <h3 className={styles.title}>{oldLang('AboutRevenueSharingAds')}</h3>\n        <p className={buildClassName(styles.description, styles.secondary)}>\n          {oldLang('RevenueSharingAdsAlertSubtitle')}\n        </p>\n        <Button\n          ref={moreMenuRef}\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          className={styles.moreButton}\n          onClick={handleContextMenu}\n        >\n          <Icon name=\"more\" />\n        </Button>\n      </>\n    );\n\n    const listItemData = [\n      ['lock', oldLang('RevenueSharingAdsInfo1Title'),\n        renderText(oldLang('RevenueSharingAdsInfo1Subtitle'), ['simple_markdown'])],\n      ['revenue-split', oldLang('RevenueSharingAdsInfo2Title'),\n        renderText(oldLang('RevenueSharingAdsInfo2Subtitle'), ['simple_markdown'])],\n      ['nochannel', oldLang('RevenueSharingAdsInfo3Title'),\n        renderText(oldLang('RevenueSharingAdsInfo3Subtitle', minLevelToRestrictAds), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{renderText(oldLang('RevenueSharingAdsInfo4Title'), ['simple_markdown'])}</h3>\n        <p className={styles.description}>\n          {renderText(oldLang('RevenueSharingAdsInfo4Subtitle2', ''), ['simple_markdown'])}\n          <SafeLink\n            url={oldLang('PromoteUrl')}\n            text={oldLang('LearnMoreArrow')}\n          />\n        </p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, handleContextMenu, minLevelToRestrictAds]);\n\n  if (renderingIsNewDesign) {\n    return (\n      <>\n        <TableAboutModal\n          isOpen={isOpen}\n          listItemData={modalData?.listItemData}\n          headerIconName=\"channel\"\n          withSeparator\n          header={modalData?.header}\n          footer={modalData?.footer}\n          buttonText={oldLang('RevenueSharingAdsUnderstood')}\n          onClose={handleClose}\n        />\n        {contextMenuAnchor && randomId && (\n          <SponsoredMessageContextMenuContainer\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            triggerRef={moreMenuRef}\n            randomId={randomId}\n            additionalInfo={additionalInfo}\n            canReport={canReport}\n            sponsorInfo={sponsorInfo}\n            shouldSkipAbout\n            onItemClick={handleClose}\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={handleClose}\n    >\n      {regularAdContent}\n      <Button\n        size=\"smaller\"\n        onClick={handleClose}\n      >\n        {oldLang('RevenueSharingAdsUnderstood')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const minLevelToRestrictAds = global.appConfig?.channelRestrictAdsLevelMin;\n\n    return {\n      minLevelToRestrictAds,\n    };\n  },\n)(AboutAdsModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"t9iZUzOj\",\"description\":\"mjveZmdr\",\"toncoin\":\"ATkOSqJ7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { TableAboutData } from '../modals/common/TableAboutModal';\n\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TableAboutModal from '../modals/common/TableAboutModal';\nimport Icon from './icons/Icon';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutMonetizationModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const blockchainText = useMemo(() => {\n    const linkText = oldLang('LearnMore');\n    return lang(\n      'ChannelEarnLearnCoinAbout',\n      {\n        link: (\n          <SafeLink url={oldLang('MonetizationInfoTONLink')} text={linkText}>\n            {linkText}\n            <Icon name=\"next\" />\n          </SafeLink>\n        ),\n      },\n      {\n        withNodes: true,\n      },\n    );\n  }, [lang, oldLang]);\n\n  const monetizationTitle = useMemo(() => {\n    return lang(\n      'MonetizationInfoTONTitle',\n      undefined,\n      {\n        withNodes: true,\n        specialReplacement: { '💎': <Icon className={styles.toncoin} name=\"toncoin\" /> },\n      },\n    );\n  }, [lang]);\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <h3 className={styles.title}>{oldLang('lng_channel_earn_learn_title')}</h3>\n    );\n\n    const listItemData = [\n      ['channel', oldLang('lng_channel_earn_learn_in_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_in_about'), ['simple_markdown'])],\n      ['revenue-split', oldLang('lng_channel_earn_learn_split_subtitle'),\n        renderText(oldLang('Monetization.Intro.Split.Text'), ['simple_markdown'])],\n      ['cash-circle', oldLang('lng_channel_earn_learn_out_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_out_about'), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{monetizationTitle}</h3>\n        <p className={styles.description}>{blockchainText}</p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, monetizationTitle, blockchainText]);\n\n  if (!modalData) {\n    return undefined;\n  }\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      listItemData={modalData.listItemData}\n      headerIconName=\"cash-circle\"\n      withSeparator\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={oldLang('RevenueSharingAdsUnderstood')}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(AboutMonetizationModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WqeWhMAS\",\"content\":\"oofoCYlu\"};","import React, {\n  memo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Modal from '../ui/Modal';\nimport PasswordForm from './PasswordForm';\n\nimport styles from './VerificationMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['monetizationVerificationModal'];\n};\n\ntype StateProps = {\n  passwordHint?: string;\n};\n\nconst VerificationMonetizationModal = ({\n  modal,\n  passwordHint,\n}: OwnProps & StateProps) => {\n  const {\n    closeMonetizationVerificationModal, clearMonetizationVerificationError, processMonetizationRevenueWithdrawalUrl,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const lang = useLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useLastCallback((password: string) => {\n    if (!renderingModal) return;\n    processMonetizationRevenueWithdrawalUrl({\n      peerId: renderingModal.chatId,\n      currentPassword: password,\n    });\n  });\n\n  const handleClearError = useLastCallback(() => {\n    clearMonetizationVerificationError();\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeMonetizationVerificationModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('CheckPasswordTitle')}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={handleClose}\n    >\n      <div className={buildClassName(styles.content, 'settings-content password-form custom-scroll')}>\n        <div className=\"settings-item pt-0\">\n          <PasswordForm\n            shouldShowSubmit\n            placeholder={lang('CheckPasswordPlaceholder')}\n            error={renderingModal?.errorKey && lang.withRegular(renderingModal.errorKey)}\n            description={lang('CheckPasswordDescription')}\n            clearError={handleClearError}\n            isLoading={renderingModal?.isLoading}\n            hint={passwordHint}\n            isPasswordVisible={shouldShowPassword}\n            shouldResetValue={isOpen}\n            onChangePasswordVisibility={setShouldShowPassword}\n            onSubmit={handleSubmit}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      twoFaSettings: {\n        hint: passwordHint,\n      },\n    } = global;\n\n    return {\n      passwordHint,\n    };\n  },\n)(VerificationMonetizationModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MKdSUg2P\",\"chatItem\":\"qEIwBtp0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStickerSet, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserFrozen, selectIsCurrentUserPremium, selectStickerSet, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './EmojiStatusAccessModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['emojiStatusAccessModal'];\n};\n\nexport type StateProps = {\n  currentUser?: ApiUser;\n  stickerSet?: ApiStickerSet;\n  isPremium?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst INTERVAL = 3200;\n\nconst EmojiStatusAccessModal: FC<OwnProps & StateProps> = ({\n  modal,\n  currentUser,\n  stickerSet,\n  isPremium,\n  isAccountFrozen,\n}) => {\n  const {\n    closeEmojiStatusAccessModal,\n    toggleUserEmojiStatusPermission,\n    sendWebAppEvent,\n    openPremiumModal,\n    loadDefaultStatusIcons,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [currentStatusIndex, setCurrentStatusIndex] = useState<number>(0);\n\n  useEffect(() => {\n    if (isOpen && !stickerSet?.stickers && !isAccountFrozen) {\n      loadDefaultStatusIcons();\n    }\n  }, [isOpen, stickerSet, isAccountFrozen]);\n\n  const mockPeerWithStatus = useMemo(() => {\n    if (!currentUser || !stickerSet?.stickers) return undefined;\n    return {\n      ...currentUser,\n      emojiStatus: {\n        type: 'regular',\n        documentId: stickerSet.stickers[currentStatusIndex].id,\n      },\n    } satisfies ApiUser;\n  }, [currentUser, stickerSet, currentStatusIndex]);\n\n  const totalCount = stickerSet?.stickers?.length;\n  useInterval(\n    () => {\n      if (!totalCount) return;\n      setCurrentStatusIndex((prevIndex) => (prevIndex + 1) % totalCount);\n    },\n    totalCount ? INTERVAL : undefined,\n  );\n\n  const renderPickerItem = useLastCallback(() => {\n    return (\n      <PeerChip\n        withEmojiStatus\n        className={styles.chatItem}\n        itemClassName={styles.itemName}\n        mockPeer={mockPeerWithStatus}\n      />\n    );\n  });\n\n  const confirmHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeEmojiStatusAccessModal();\n    if (modal?.webAppKey) {\n      if (isPremium) {\n        sendWebAppEvent({\n          webAppKey: modal.webAppKey,\n          event: {\n            eventType: 'emoji_status_access_requested',\n            eventData: {\n              status: 'allowed',\n            },\n          },\n        });\n        toggleUserEmojiStatusPermission({ botId: modal.bot.id, isEnabled: true, isBotAccessEmojiGranted: true });\n      } else {\n        openPremiumModal();\n        sendWebAppEvent({\n          webAppKey: modal.webAppKey,\n          event: {\n            eventType: 'emoji_status_access_requested',\n            eventData: {\n              status: 'cancelled',\n            },\n          },\n        });\n      }\n    }\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeEmojiStatusAccessModal();\n    if (modal?.webAppKey) {\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'emoji_status_access_requested',\n          eventData: {\n            status: 'cancelled',\n          },\n        },\n      });\n    }\n    if (isPremium) {\n      toggleUserEmojiStatusPermission({ botId: modal.bot.id, isEnabled: false });\n    }\n  });\n\n  const renderStatusText = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return lang('EmojiStatusAccessText', {\n      name: getUserFullName(modal?.bot!),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    });\n  });\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      contentClassName={styles.content}\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n    >\n      {renderPickerItem()}\n      <div>\n        {renderStatusText()}\n        <div\n          className=\"dialog-buttons mt-2\"\n          ref={containerRef}\n        >\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={confirmHandler}\n            color=\"primary\"\n          >\n            {oldLang('lng_bot_allow_write_confirm')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={onCloseHandler}\n          >\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    const isPremium = selectIsCurrentUserPremium(global);\n    const stickerSet = global.defaultStatusIconsId ? selectStickerSet(global, global.defaultStatusIconsId) : undefined;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      currentUser,\n      stickerSet,\n      isPremium,\n      isAccountFrozen,\n    };\n  },\n)(EmojiStatusAccessModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { getGeolocationStatus } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './LocationAccessModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['locationAccessModal'];\n};\n\nexport type StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst LocationAccessModal: FC<OwnProps & StateProps> = ({\n  modal,\n  currentUser,\n}) => {\n  const {\n    closeLocationAccessModal, toggleUserLocationPermission, sendWebAppEvent,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const confirmHandler = useLastCallback(async () => {\n    const geolocationData = await getGeolocationStatus();\n    const { geolocation } = geolocationData;\n    if (!modal?.bot?.id) return;\n    closeLocationAccessModal();\n    if (modal?.webAppKey) {\n      toggleUserLocationPermission({\n        botId: modal.bot.id,\n        isAccessGranted: true,\n      });\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'location_requested',\n          eventData: {\n            available: true,\n            latitude: geolocation?.latitude,\n            longitude: geolocation?.longitude,\n            altitude: geolocation?.altitude,\n            course: geolocation?.heading,\n            speed: geolocation?.speed,\n            horizontal_accuracy: geolocation?.accuracy,\n            vertical_accuracy: geolocation?.accuracy,\n          },\n        },\n      });\n    }\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeLocationAccessModal();\n    if (modal?.webAppKey) {\n      toggleUserLocationPermission({\n        botId: modal.bot.id,\n        isAccessGranted: false,\n      });\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'location_requested',\n          eventData: {\n            available: false,\n          },\n        },\n      });\n    }\n  });\n\n  const renderInfo = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return (\n      <div className={styles.avatars}>\n        <Avatar\n          size=\"large\"\n          peer={currentUser}\n        />\n        <Icon name=\"next\" className={styles.arrow} />\n        <Avatar\n          size=\"large\"\n          peer={modal.bot}\n        />\n      </div>\n    );\n  });\n\n  const renderStatusText = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return lang('LocationPermissionText', {\n      name: getUserFullName(modal?.bot!),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    });\n  });\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n    >\n      {renderInfo()}\n      <div>\n        {renderStatusText()}\n        <div\n          className=\"dialog-buttons mt-2\"\n          ref={containerRef}\n        >\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={confirmHandler}\n            color=\"primary\"\n          >\n            {oldLang('lng_bot_allow_write_confirm')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={onCloseHandler}\n          >\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n\n    return {\n      currentUser,\n    };\n  },\n)(LocationAccessModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatars\":\"CGPoDaLo\",\"arrow\":\"pzERgD5x\"};","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"qJDgUtjV\",\"root\":\"njPBcVYr\",\"modalTitle\":\"ZAdG13Ah\",\"optionText\":\"oWujoaSC\",\"option\":\"aFbjDzNo\",\"optionButton\":\"VbE0HzDs\",\"sectionTitle\":\"jrA2dOiw\",\"description\":\"k71Zrc_P\",\"title\":\"mMmY6YR4\",\"titleMultiline\":\"lVVyV0py\",\"subtitle\":\"gSkAFc4u\",\"transition\":\"HjsGIG6e\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportAdModal.module.scss';\n\nconst ADDED_PADDING = 56;\n\nexport type OwnProps = {\n  modal: TabState['reportAdModal'];\n};\n\nconst ReportAdModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportSponsored, closeReportAdModal, openPreviousReportAdModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const { chatId, randomId } = modal!;\n    reportSponsored({ peerId: chatId, randomId, option });\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    if (!renderingDepth) {\n      closeReportAdModal();\n      return;\n    }\n\n    openPreviousReportAdModal();\n  });\n\n  const bottomText = useMemo(() => {\n    if (!modal) return undefined;\n    const template = lang('lng_report_sponsored_reported_learn');\n    const parts = template.split('{link}');\n    return [\n      parts[0],\n      <SafeLink\n        text={lang('lng_report_sponsored_reported_link')}\n        url={lang('ReportAd.Help_URL')}\n      />,\n      parts[1],\n    ];\n  }, [lang, modal]);\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(renderingDepth ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <Icon name={renderingDepth ? 'arrow-left' : 'close'} />\n        </Button>\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={styles.title}>{lang('ReportAd')}</h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.subtitle]);\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      className={styles.root}\n      header={header}\n      onClose={closeReportAdModal}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3>\n          {renderingSection?.options.map((option) => (\n            <ListItem\n              narrow\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n        </div>\n        <p className={styles.description}>{bottomText}</p>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAdModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"kq9LwNTZ\",\"root\":\"E1bGWeON\",\"content\":\"tNysQgHL\",\"modalTitle\":\"Lj_ezEWU\",\"header\":\"AlMDkK7c\",\"optionText\":\"FU8m6NUU\",\"option\":\"RoxwMzvA\",\"optionButton\":\"Z6skYdvb\",\"sectionTitle\":\"GSfUuTet\",\"description\":\"zwfjNhF9\",\"title\":\"QawchdxB\",\"hasDepth\":\"CV7kzv9H\",\"titleMultiline\":\"OYFbu8fQ\",\"subtitle\":\"OUFckTb7\",\"transition\":\"n2VxPirU\",\"block\":\"KpptZ3Mk\",\"optionInfo\":\"yc3szGcx\",\"reportIcon\":\"kO8JC4gK\"};","import type { ChangeEvent } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport TextArea from '../../ui/TextArea';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportModal.module.scss';\n\nconst MAX_DESCRIPTION = 512;\nconst ADDED_PADDING = 20;\n\nexport type OwnProps = {\n  modal: TabState['reportModal'];\n};\n\nconst ReportModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportMessages, reportStory, closeReportModal, openPreviousReportModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const [text, setText] = useState('');\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const {\n      messageIds, subject, peerId, chatId,\n    } = modal!;\n    if (!messageIds) return;\n    switch (subject) {\n      case 'message':\n        reportMessages({ chatId: chatId!, messageIds, option });\n        break;\n      case 'story':\n        reportStory({\n          storyId: messageIds[0], peerId: peerId!, option,\n        });\n        break;\n    }\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal?.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    openPreviousReportModal();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeReportModal();\n  });\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        {renderingDepth ? (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Back')}\n            onClick={handleBackClick}\n          >\n            <Icon name=\"arrow-left\" />\n          </Button>\n        ) : (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={handleCloseClick}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={buildClassName(styles.title, renderingDepth && styles.hasDepth)}>\n            {renderingSection?.options\n              ? lang(modal?.subject === 'story' ? 'ReportStory' : 'Report') : renderingSection?.title}\n          </h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.options, renderingSection?.subtitle, renderingSection?.title]);\n\n  const handleTextChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n  });\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  const closeReportMessageModalHandler = useLastCallback(() => {\n    setText('');\n    closeReportModal();\n  });\n\n  const sendMessageReportHandler = useLastCallback(() => {\n    const {\n      messageIds, subject, peerId, chatId,\n    } = modal!;\n    switch (subject) {\n      case 'message':\n        reportMessages({\n          chatId: chatId!, messageIds, option: renderingSection?.option, description: text,\n        });\n        break;\n      case 'story':\n        reportStory({\n          storyId: messageIds?.[0], peerId: peerId!, option: renderingSection?.option, description: text,\n        });\n        break;\n    }\n    closeReportMessageModalHandler();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      header={header}\n      onClose={closeReportMessageModalHandler}\n      contentClassName={styles.content}\n      className={buildClassName(styles.root, modal?.subject === 'story' && 'component-theme-dark')}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          {renderingSection?.options\n            ? <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3> : undefined}\n          {renderingSection?.options?.map((option) => (\n            <ListItem\n              narrow\n              nonInteractive\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n          {renderingSection?.option ? (\n            <div className={styles.block}>\n              <AnimatedIconWithPreview\n                tgsUrl={LOCAL_TGS_URLS.Report}\n                size={100}\n                className={styles.reportIcon}\n                nonInteractive\n                forceAlways\n                noLoop={false}\n              />\n              <TextArea\n                id=\"option\"\n                className={styles.optionInfo}\n                label={renderingSection.isOptional ? lang('Report2CommentOptional') : lang('Report2Comment')}\n                onChange={handleTextChange}\n                value={text}\n                maxLength={MAX_DESCRIPTION}\n                maxLengthIndicator={(MAX_DESCRIPTION - text.length).toString()}\n                noReplaceNewlines\n              />\n              <Button\n                size=\"smaller\"\n                onClick={sendMessageReportHandler}\n                disabled={!renderingSection.isOptional ? !text.length : undefined}\n              >{lang('ReportSend')}\n              </Button>\n            </div>\n          ) : undefined}\n        </div>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Rzj2LMLf\",\"content\":\"Ve4u2KVI\",\"modalTitle\":\"E42tgAwD\",\"container\":\"pNSCKAVN\",\"header\":\"P1fPh6h8\",\"actionMessageView\":\"McJgXCtB\",\"info\":\"xWnXsG7q\",\"background\":\"_6w75ldP\",\"customBgImage\":\"CZkpv8n0\",\"customBgColor\":\"VJAYrDF_\",\"withTransition\":\"lElCwweL\",\"blurred\":\"m8xzfVvU\",\"withRightColumn\":\"rJCyBVMB\"};","import React, {\n  type FC,\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { getMockPreparedMessageFromResult, getUserFullName } from '../../../global/helpers';\nimport { selectTheme, selectThemeValues, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useCustomBackground from '../../../hooks/useCustomBackground';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Message from '../../middle/message/Message';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PreparedMessageModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['preparedMessageModal'];\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n  isBackgroundBlurred?: boolean;\n  patternColor?: string;\n  customBackground?: string;\n  backgroundColor?: string;\n  bot?: ApiUser;\n};\n\nconst PreparedMessageModal: FC<OwnProps & StateProps> = ({\n  modal,\n  theme,\n  isBackgroundBlurred,\n  patternColor,\n  customBackground,\n  backgroundColor,\n  bot,\n}) => {\n  const {\n    closePreparedInlineMessageModal, sendWebAppEvent, openSharePreparedMessageModal,\n  } = getActions();\n  const lang = useLang();\n  const isOpen = Boolean(modal);\n\n  const { webAppKey, message, botId } = modal || {};\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const customBackgroundValue = useCustomBackground(theme, customBackground);\n\n  const handleOpenClick = useLastCallback(() => {\n    if (webAppKey && botId && message) {\n      openSharePreparedMessageModal({\n        webAppKey,\n        message,\n      });\n      closePreparedInlineMessageModal();\n    }\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closePreparedInlineMessageModal();\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_failed',\n          eventData: { error: 'USER_DECLINED' },\n        },\n      });\n    }\n  });\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.header}>\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang('Close')}\n          onClick={handleCloseClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <h3 className={buildClassName('modal-title', styles.modalTitle)}>\n          {lang('BotShareMessage')}\n        </h3>\n      </div>\n    );\n  }, [lang, modal]);\n\n  const localMessage = useMemo(() => {\n    if (!botId || !message || !webAppKey) return undefined;\n    return getMockPreparedMessageFromResult(botId, message);\n  }, [botId, message, webAppKey]);\n\n  const bgClassName = buildClassName(\n    styles.background,\n    styles.withTransition,\n    customBackground && styles.customBgImage,\n    backgroundColor && styles.customBgColor,\n    customBackground && isBackgroundBlurred && styles.blurred,\n  );\n\n  return (\n    <Modal\n      dialogRef={containerRef}\n      isOpen={isOpen}\n      header={header}\n      onClose={handleCloseClick}\n      className={styles.root}\n      contentClassName={styles.content}\n    >\n      <div\n        className={buildClassName(styles.actionMessageView, 'MessageList')}\n        // @ts-ignore -- FIXME: Find a way to disable interactions but keep a11y\n        inert\n        style={buildStyle(\n          `--pattern-color: ${patternColor}`,\n          backgroundColor && `--theme-background-color: ${backgroundColor}`,\n        )}\n      >\n        <div\n          className={bgClassName}\n          style={customBackgroundValue ? `--custom-background: ${customBackgroundValue}` : undefined}\n        />\n        {localMessage && (\n          <Message\n            key={botId}\n            message={localMessage}\n            threadId={MAIN_THREAD_ID}\n            messageListType=\"thread\"\n            noComments\n            noReplies\n            appearanceOrder={0}\n            isJustAdded={false}\n            isFirstInGroup\n            isLastInGroup\n            isLastInList={false}\n            isFirstInDocumentGroup={false}\n            isLastInDocumentGroup={false}\n          />\n        )}\n      </div>\n      <div className={styles.container}>\n        <p className={styles.info}>\n          {lang('WebAppShareMessageInfo', { user: getUserFullName(bot) })}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={handleOpenClick}\n        >\n          {lang('BotShareMessageShare')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }) => {\n    const theme = selectTheme(global);\n    const {\n      isBlurred: isBackgroundBlurred,\n      patternColor,\n      background: customBackground,\n      backgroundColor,\n    } = selectThemeValues(global, theme) || {};\n    const bot = modal ? selectUser(global, modal?.botId) : undefined;\n\n    return {\n      theme,\n      isBackgroundBlurred,\n      patternColor,\n      customBackground,\n      backgroundColor,\n      bot,\n      currentUserId: global.currentUserId,\n    };\n  },\n)(PreparedMessageModal));\n","import React, {\n  type FC,\n  memo, useEffect,\n} from '../../../lib/teact/teact';\nimport {\n  getActions, getGlobal, withGlobal,\n} from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectPeer, selectTabState,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePaidMessageConfirmation from '../../middle/composer/hooks/usePaidMessageConfirmation';\n\nimport PaymentMessageConfirmDialog from '../../common/PaymentMessageConfirmDialog';\nimport RecipientPicker from '../../common/RecipientPicker';\n\nexport type OwnProps = {\n  modal: TabState['sharePreparedMessageModal'];\n};\n\ntype StateProps = {\n  isPaymentMessageConfirmDialogOpen: boolean;\n  starsBalance: number;\n  isStarsBalanceModalOpen: boolean;\n};\n\nexport type SendParams = {\n  peerName?: string;\n  starsForSendMessage: number;\n};\n\nconst SharePreparedMessageModal: FC<OwnProps & StateProps> = ({\n  modal, isPaymentMessageConfirmDialogOpen, isStarsBalanceModalOpen, starsBalance,\n}) => {\n  const {\n    closeSharePreparedMessageModal,\n    sendInlineBotResult,\n    sendWebAppEvent,\n    showNotification,\n    updateSharePreparedMessageModalSendArgs,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const {\n    message, filter, webAppKey, pendingSendArgs,\n  } = modal || {};\n\n  const {\n    starsForSendMessage,\n  } = pendingSendArgs || {};\n\n  const {\n    closeConfirmDialog: closeConfirmModalPayForMessage,\n    dialogHandler: paymentMessageConfirmDialogHandler,\n    shouldAutoApprove: shouldPaidMessageAutoApprove,\n    setAutoApprove: setShouldPaidMessageAutoApprove,\n    handleWithConfirmation: handleActionWithPaymentConfirmation,\n  } = usePaidMessageConfirmation(starsForSendMessage || 0, isStarsBalanceModalOpen, starsBalance);\n\n  const handleClose = useLastCallback(() => {\n    closeSharePreparedMessageModal();\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_failed',\n          eventData: { error: 'USER_DECLINED' },\n        },\n      });\n    }\n  });\n\n  const handleSend = useLastCallback((id: string, threadId?: ThreadId) => {\n    if (message && webAppKey) {\n      const global = getGlobal();\n      const peer = selectPeer(global, id);\n      sendInlineBotResult({\n        chatId: id,\n        threadId: threadId || MAIN_THREAD_ID,\n        id: message.result.id,\n        queryId: message.result.queryId,\n      });\n      if (!starsForSendMessage) {\n        showNotification({\n          message: lang('BotSharedToOne', getPeerTitle(lang, peer!)),\n        });\n      }\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_sent',\n        },\n      });\n      closeSharePreparedMessageModal();\n      updateSharePreparedMessageModalSendArgs({ args: undefined });\n    }\n  });\n\n  const handleSelectRecipient = useLastCallback((id: string, threadId?: ThreadId) => {\n    updateSharePreparedMessageModalSendArgs({ args: { peerId: id, threadId } });\n  });\n\n  const handleSendWithPaymentConfirmation = useLastCallback(() => {\n    if (pendingSendArgs) {\n      handleActionWithPaymentConfirmation(handleSend, pendingSendArgs.peerId, pendingSendArgs.threadId);\n    }\n  });\n\n  const handleClosePaymentMessageConfirmDialog = useLastCallback(() => {\n    closeConfirmModalPayForMessage();\n    updateSharePreparedMessageModalSendArgs({ args: undefined });\n  });\n\n  useEffect(() => {\n    if (pendingSendArgs) {\n      handleSendWithPaymentConfirmation();\n    }\n  }, [pendingSendArgs]);\n\n  const global = getGlobal();\n  const peer = pendingSendArgs ? selectPeer(global, pendingSendArgs.peerId) : undefined;\n  const peerName = peer ? getPeerTitle(lang, peer) : undefined;\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <>\n      <RecipientPicker\n        isOpen={isOpen}\n        searchPlaceholder={lang('Search')}\n        filter={filter}\n        onSelectRecipient={handleSelectRecipient}\n        onClose={handleClose}\n        onCloseAnimationEnd={unmarkIsShown}\n        isLowStackPriority\n      />\n      <PaymentMessageConfirmDialog\n        isOpen={isPaymentMessageConfirmDialogOpen}\n        onClose={handleClosePaymentMessageConfirmDialog}\n        userName={peerName}\n        messagePriceInStars={starsForSendMessage || 0}\n        messagesCount={1}\n        shouldAutoApprove={shouldPaidMessageAutoApprove}\n        setAutoApprove={setShouldPaidMessageAutoApprove}\n        confirmHandler={paymentMessageConfirmDialogHandler}\n      />\n    </>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { isPaymentMessageConfirmDialogOpen } = tabState;\n    const starsBalance = global.stars?.balance.amount || 0;\n    const isStarsBalanceModalOpen = Boolean(tabState.starsBalanceModal);\n    return {\n      isPaymentMessageConfirmDialogOpen,\n      starsBalance,\n      isStarsBalanceModalOpen,\n    };\n  },\n)(SharePreparedMessageModal));\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  const resetPermissions = useCallback(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n  }, [defaultPermissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n    resetPermissions,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatBannedRights } from '../../api/types';\n\nimport { isChatPublic } from '../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\n\nexport type OwnProps = {\n  chatId?: string;\n  handlePermissionChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  permissions: ApiChatBannedRights;\n  isMediaDropdownOpen: boolean;\n  setIsMediaDropdownOpen: (open: boolean) => void;\n  className?: string;\n  shiftedClassName?: string;\n  dropdownClassName?: string;\n  withCheckbox?: boolean;\n  permissionGroup?: boolean;\n  getControlIsDisabled?: (key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => boolean | undefined;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasLinkedChat?: boolean;\n};\n\nconst permissionKeyList: (keyof ApiChatBannedRights)[] = [\n  'sendPhotos', 'sendVideos', 'sendStickers',\n  'sendAudios', 'sendDocs', 'sendVoices', 'sendRoundvideos', 'embedLinks', 'sendPolls',\n];\n\nconst PermissionCheckboxList: FC<OwnProps & StateProps> = ({\n  chat,\n  isMediaDropdownOpen,\n  setIsMediaDropdownOpen,\n  hasLinkedChat,\n  permissions,\n  handlePermissionChange,\n  className,\n  shiftedClassName,\n  dropdownClassName,\n  withCheckbox,\n  getControlIsDisabled,\n  permissionGroup,\n}) => {\n  const {\n    showNotification,\n  } = getActions();\n\n  const { isForum } = chat || {};\n\n  const lang = useOldLang();\n\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  const countCheckedPermissions = useMemo(() => {\n    return permissionKeyList.reduce((count, key) => {\n      if (!permissions[key]) {\n        count += 1;\n      }\n      return count;\n    }, 0);\n  }, [permissions]);\n\n  const handleOpenMediaDropdown = useLastCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  });\n\n  const handleDisabledClick = useLastCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  });\n\n  return (\n    <>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendPlain\"\n          checked={!permissions.sendPlain}\n          label={lang('UserRestrictionsSend')}\n          blocking\n          permissionGroup={permissionGroup}\n          onChange={handlePermissionChange}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendPlain')}\n        />\n      </div>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendMedia\"\n          checked={!permissions.sendMedia}\n          label={lang('UserRestrictionsSendMedia')}\n          labelText={`${countCheckedPermissions}/${permissionKeyList.length}`}\n          blocking\n          permissionGroup={permissionGroup}\n          rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n          onChange={handlePermissionChange}\n          onClickLabel={handleOpenMediaDropdown}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendMedia')}\n        />\n      </div>\n      <div className={dropdownClassName}>\n        <div\n          className={className}\n        >\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPhotos\"\n              checked={!permissions.sendPhotos}\n              label={lang('UserRestrictionsSendPhotos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPhotos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVideos\"\n              checked={!permissions.sendVideos}\n              label={lang('UserRestrictionsSendVideos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendStickers\"\n              checked={!permissions.sendStickers && !permissions.sendGifs}\n              label={lang('UserRestrictionsSendStickers')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendStickers')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendAudios\"\n              checked={!permissions.sendAudios}\n              label={lang('UserRestrictionsSendMusic')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendAudios')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendDocs\"\n              checked={!permissions.sendDocs}\n              label={lang('UserRestrictionsSendFiles')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendDocs')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVoices\"\n              checked={!permissions.sendVoices}\n              label={lang('UserRestrictionsSendVoices')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVoices')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendRoundvideos\"\n              checked={!permissions.sendRoundvideos}\n              label={lang('UserRestrictionsSendRound')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendRoundvideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"embedLinks\"\n              checked={!permissions.embedLinks}\n              label={lang('UserRestrictionsEmbedLinks')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('embedLinks')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPolls\"\n              checked={!permissions.sendPolls}\n              label={lang('UserRestrictionsSendPolls')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPolls')}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={shiftedClassName}>\n        <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n          <Checkbox\n            name=\"inviteUsers\"\n            checked={!permissions.inviteUsers}\n            label={lang('UserRestrictionsInviteUsers')}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n            disabled={getControlIsDisabled && getControlIsDisabled('inviteUsers')}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"pinMessages\"\n            checked={!permissions.pinMessages}\n            label={lang('UserRestrictionsPinMessages')}\n            disabled={getControlIsDisabled ? getControlIsDisabled('pinMessages')\n              : shouldDisablePermissionForPublicGroup}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"changeInfo\"\n            checked={!permissions.changeInfo}\n            label={lang('UserRestrictionsChangeInfo')}\n            blocking\n            permissionGroup={permissionGroup}\n            disabled={getControlIsDisabled ? getControlIsDisabled('changeInfo')\n              : shouldDisablePermissionForPublicGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        {isForum && (\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"manageTopics\"\n              checked={!permissions.manageTopics}\n              label={lang('CreateTopicsPermission')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('manageTopics')}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const fullInfo = chat && selectChatFullInfo(global, chat.id);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      hasLinkedChat,\n    };\n  },\n)(PermissionCheckboxList));\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"_YNfwDqt\",\"root\":\"SeaF_shb\",\"container\":\"axa67kqo\",\"title\":\"U4IFhV0a\",\"singleTitle\":\"qd6OFHiG\",\"actionTitle\":\"yGhFKTl5\",\"restrictionTitle\":\"t3KOsBfm\",\"button\":\"goI3MITH\",\"options\":\"b6847Kh3\",\"dropdownList\":\"czTjjKim\",\"dialogButtons\":\"JTT_DIRv\",\"proceedButtons\":\"L4YzeG91\",\"restrictionContainer\":\"iv0u9Zw6\",\"restrictionContainerOpen\":\"qCQftA04\",\"dropdownListOpen\":\"Ifpyv7Jp\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../api/types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport {\n  getHasAdminRight,\n  getPrivateChatUserId,\n  getUserFirstOrLastName, isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  getSendersFromSelectedMessages,\n  selectBot,\n  selectCanDeleteSelectedMessages,\n  selectChat,\n  selectChatFullInfo, selectIsChatWithBot,\n  selectSenderFromMessage,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByCallback, unique } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\nimport AvatarList from './AvatarList';\nimport Icon from './icons/Icon';\n\nimport styles from './DeleteMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isChannel?: boolean;\n  isSuperGroup?: boolean;\n  messageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  currentUserId?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  chatBot?: boolean;\n  isSchedule?: boolean;\n  onConfirm?: NoneToVoidFunction;\n  canBanUsers?: boolean;\n  isCreator?: boolean;\n  linkedChatId?: string;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isSuperGroup,\n  isSchedule,\n  currentUserId,\n  messageIds,\n  isCreator,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  chatBot,\n  adminMembersById,\n  canBanUsers,\n  linkedChatId,\n}) => {\n  const {\n    closeDeleteMessageModal,\n    deleteMessages,\n    reportChannelSpam,\n    deleteChatMember,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n    updateChatMemberBannedRights,\n    deleteParticipantHistory,\n  } = getActions();\n\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [peerIdsToDeleteAll, setPeerIdsToDeleteAll] = useState<string[] | undefined>(undefined);\n  const [peerIdsToBan, setPeerIdsToBan] = useState<string[] | undefined>(undefined);\n  const [peerIdsToReportSpam, setPeerIdsToReportSpam] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n  const [shouldDeleteForAll, setShouldDeleteForAll] = useState(true);\n\n  const peerList = useMemo(() => {\n    if (isChannel || !messageIds || !chat) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n    const senderArray = getSendersFromSelectedMessages(global, chat.id, messageIds);\n    return senderArray ? unique(senderArray)\n      .filter((peer) => peer?.id !== chat?.id && peer?.id !== linkedChatId) : MEMO_EMPTY_ARRAY;\n  }, [chat, isChannel, linkedChatId, messageIds]);\n\n  const buildNestedOptionListWithAvatars = useLastCallback(() => {\n    return peerList.map((member) => {\n      return {\n        value: `${member.id}`,\n        label: getPeerTitle(lang, member) || '',\n        leftElement: <Avatar size=\"small\" peer={member} />,\n      };\n    });\n  });\n\n  const peerListToDeleteAll = useMemo(() => {\n    return peerList.filter((peer) => peer.id !== linkedChatId && peer.id !== currentUserId);\n  }, [peerList, currentUserId, linkedChatId]);\n\n  const peerListToReportSpam = useMemo(() => {\n    return peerList.filter((peer) => peer.id !== currentUserId && peer.id !== linkedChatId);\n  }, [peerList, currentUserId, linkedChatId]);\n\n  const peerListToBan = useMemo(() => {\n    const isCurrentUserInList = peerList.some((peer) => peer.id === currentUserId);\n    const shouldReturnEmpty = !canBanUsers || isCurrentUserInList;\n\n    if (shouldReturnEmpty) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return peerList.filter((peer) => {\n      const isAdmin = adminMembersById?.[peer.id];\n      return isCreator || !isAdmin;\n    });\n  }, [peerList, isCreator, currentUserId, canBanUsers, adminMembersById]);\n\n  const shouldShowAdditionalOptions = useMemo(() => {\n    return Boolean(peerListToDeleteAll.length || peerListToReportSpam.length || peerListToBan.length);\n  }, [peerListToDeleteAll, peerListToReportSpam, peerListToBan]);\n\n  const shouldShowOption = shouldShowAdditionalOptions\n    && !canDeleteForAll && !isSchedule && isSuperGroup;\n\n  const peerNames = useMemo(() => {\n    if (!peerList || isSchedule) return {};\n    return buildCollectionByCallback(peerList, (peer) => [peer.id, getPeerTitle(lang, peer)]);\n  }, [isSchedule, lang, peerList]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'spam' : peerList?.[0]?.id,\n        label: oldLang('ReportSpamTitle'),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars().filter((opt) => opt.value !== linkedChatId\n            && opt.value !== currentUserId),\n        ] : undefined,\n      },\n    ];\n  }, [messageIds, peerList, oldLang, linkedChatId, currentUserId]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'delete_all' : peerList?.[0]?.id,\n        label: messageIds && peerList.length >= 2\n          ? oldLang('DeleteAllFromUsers')\n          : oldLang('DeleteAllFrom', Object.values(peerNames)[0]),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars().filter((opt) => opt.value !== linkedChatId\n            && opt.value !== currentUserId),\n        ] : undefined,\n      },\n    ];\n  }, [messageIds, peerList, oldLang, peerNames, linkedChatId, currentUserId]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'ban' : peerList?.[0]?.id,\n        label: messageIds && peerList.length >= 2\n          ? (isAdditionalOptionsVisible ? oldLang('DeleteRestrictUsers') : oldLang('DeleteBanUsers'))\n          : (isAdditionalOptionsVisible ? oldLang('KickFromSupergroup')\n            : oldLang('DeleteBan', Object.values(peerNames)[0])),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars(),\n        ] : undefined,\n      },\n    ];\n  }, [isAdditionalOptionsVisible, oldLang, messageIds, peerList, peerNames]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible((prev) => !prev);\n  });\n\n  const filterMessageIdByPeerId = useLastCallback((peerIds: string[], selectedMessageIdList: number[]) => {\n    if (!chat) return MEMO_EMPTY_ARRAY;\n    const global = getGlobal();\n    return selectedMessageIdList.filter((msgId) => {\n      const sender = selectSenderFromMessage(global, chat.id, msgId);\n      return sender && peerIds.includes(sender.id);\n    });\n  });\n\n  const handleReportSpam = useLastCallback((userMessagesMap: Record<string, number[]>) => {\n    Object.entries(userMessagesMap).forEach(([userId, messageIdList]) => {\n      if (messageIdList.length) {\n        reportChannelSpam({\n          participantId: userId,\n          chatId: chat!.id,\n          messageIds: messageIdList,\n        });\n      }\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n  });\n\n  const handleDeleteAllPeerMessages = useLastCallback((peerIdList: string[]) => {\n    if (!chat) return;\n    peerIdList.forEach((peerId) => {\n      deleteParticipantHistory({ peerId, chatId: chat.id });\n    });\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageList = useLastCallback(() => {\n    if (!chat || !messageIds) return;\n\n    onConfirm?.();\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else if (shouldShowOption) {\n      if (peerIdsToReportSpam) {\n        const global = getGlobal();\n        const peerIdList = peerIdsToReportSpam.filter((option) => !Number.isNaN(Number(option)));\n        const messageList = messageIds!.reduce<Record<string, number[]>>((acc, msgId) => {\n          const peer = selectSenderFromMessage(global, chat.id, msgId);\n          if (peer && peerIdList.includes(peer.id)) {\n            if (!acc[peer.id]) {\n              acc[peer.id] = [];\n            }\n            acc[peer.id].push(Number(msgId));\n          }\n          return acc;\n        }, {});\n\n        handleReportSpam(messageList);\n      }\n\n      if (peerIdsToDeleteAll) {\n        const peerIdList = peerIdsToDeleteAll.filter((option) => !Number.isNaN(Number(option)));\n        handleDeleteAllPeerMessages(peerIdList);\n      }\n\n      if (peerIdsToBan && !havePermissionChanged) {\n        const peerIdList = peerIdsToBan.filter((option) => !Number.isNaN(Number(option)));\n        handleDeleteMember(peerIdList);\n        const filteredMessageIdList = filterMessageIdByPeerId(peerIdList, messageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (peerIdsToBan && havePermissionChanged) {\n        const peerIdList = peerIdsToBan.filter((option) => !Number.isNaN(Number(option)));\n        handleUpdateChatMemberBannedRights(peerIdList);\n      }\n\n      if (!peerIdsToReportSpam || !peerIdsToDeleteAll || !peerIdsToBan) {\n        deleteMessages({ messageIds, shouldDeleteForAll });\n      }\n    } else {\n      deleteMessages({ messageIds, shouldDeleteForAll });\n    }\n\n    closeDeleteMessageModal();\n    exitMessageSelectMode();\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    closeDeleteMessageModal();\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      setPeerIdsToReportSpam(undefined);\n      setPeerIdsToDeleteAll(undefined);\n      setPeerIdsToBan(undefined);\n      setShouldDeleteForAll(true);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div\n        className={shouldShowOption && styles.container}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowOption && (\n          <AvatarList\n            size=\"small\"\n            peers={peerList}\n          />\n        )}\n        <h3 className={buildClassName(shouldShowOption ? styles.title : styles.singleTitle)}>\n          {oldLang('Chat.DeleteMessagesConfirmation', messageIds?.length)}\n        </h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={setPeerIdsToReportSpam}\n          selected={peerIdsToReportSpam}\n          nestedCheckbox={messageIds && peerList.length >= 2}\n        />\n        {peerListToDeleteAll?.length > 0 && (\n          <CheckboxGroup\n            options={ACTION_DELETE_OPTION}\n            onChange={setPeerIdsToDeleteAll}\n            selected={peerIdsToDeleteAll}\n            nestedCheckbox={messageIds && peerList.length >= 2}\n          />\n        )}\n        {peerListToBan?.length > 0 && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={setPeerIdsToBan}\n            selected={peerIdsToBan}\n            nestedCheckbox={messageIds && peerList.length >= 2}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {oldLang('UserRestrictionsCanDoUsers', peerList.length)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(\n            styles.dropdownList,\n            isMediaDropdownOpen && styles.dropdownListOpen,\n          )}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageList}\n      className={styles.root}\n    >\n      <div className={styles.main}>\n        {renderHeader()}\n        {shouldShowOption && (\n          <>\n            <p className={styles.actionTitle}>{oldLang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              peerIdsToBan && canBanUsers ? (\n                <ListItem\n                  narrow\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {oldLang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {(canDeleteForAll || chatBot || !shouldShowOption) && (\n          <>\n            <p>{messageIds && messageIds.length > 1\n              ? lang('AreYouSureDeleteFewMessages') : lang('AreYouSureDeleteSingleMessage')}\n            </p>\n            {willDeleteForCurrentUserOnly && (\n              <p>{oldLang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n            )}\n            {willDeleteForAll && (\n              <p>{oldLang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n            )}\n          </>\n        )}\n        {canDeleteForAll && (\n          <Checkbox\n            className=\"dialog-checkbox\"\n            label={contactName ? renderText(oldLang('DeleteMessagesOptionAlso', contactName))\n              : oldLang('Conversation.DeleteMessagesForEveryone')}\n            checked={shouldDeleteForAll}\n            onCheck={setShouldDeleteForAll}\n          />\n        )}\n        <div className={buildClassName('dialog-buttons',\n          isMediaDropdownOpen ? styles.dialogButtons : styles.proceedButtons)}\n        >\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageList}>\n            {shouldShowOption ? oldLang('DeleteProceedBtn') : lang('Delete')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onCloseHandler}>{oldLang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      deleteMessageModal,\n    } = selectTabState(global);\n    const messageIds = deleteMessageModal?.messageIds;\n    const chatId = deleteMessageModal?.chatId;\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global, messageIds);\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const linkedChatId = chatFullInfo?.linkedChatId;\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const isSchedule = deleteMessageModal?.isSchedule;\n    const onConfirm = deleteMessageModal?.onConfirm;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const chatBot = Boolean(chat && !isSystemBot(chat.id) && selectBot(global, chat.id));\n    const adminMembersById = chatFullInfo?.adminMembersById;\n    const canBanUsers = chat && getHasAdminRight(chat, 'banUsers');\n    const isCreator = chat?.isCreator;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && (isChatSuperGroup(chat) || isChannel);\n\n    return {\n      chat,\n      isChannel,\n      isSuperGroup,\n      messageIds,\n      currentUserId: global.currentUserId,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      adminMembersById,\n      chatBot,\n      canBanUsers,\n      linkedChatId,\n      isSchedule,\n      isCreator,\n      onConfirm,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false,\n    });\n    onClose();\n  }, [chatId, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [chatId, messageId, onClose]);\n\n  const lang = useOldLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(useMemo(() => (isActive ? {\n    'Mod+C': handleCopy,\n  } : undefined), [isActive]));\n};\n\nexport default useCopySelectedMessages;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { MessageListType } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages, selectCurrentChat,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport { selectSharedSettings } from '../../global/selectors/sharedState';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n  shouldWarnAboutSvg?: boolean;\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  chat,\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n    reportMessages,\n    openDeleteMessageModal,\n    setSharedSettingOption,\n  } = getActions();\n  const lang = useOldLang();\n\n  useCopySelectedMessages(isActive);\n\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (!selectedMessageIds || !chat) return;\n    openDeleteMessageModal({\n      chatId: chat.id,\n      messageIds: selectedMessageIds,\n      isSchedule,\n    });\n  });\n\n  useEffect(() => {\n    return isActive && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? handleDelete : undefined,\n        onDelete: canDeleteMessages ? handleDelete : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, handleDelete, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const handleMessageDownload = useLastCallback(() => {\n    if (shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSharedSettingOption({ shouldWarnAboutSvg: false });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const prevSelectedMessagesCount = usePreviousDeprecated(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const openMessageReport = useLastCallback(() => {\n    if (!selectedMessageIds || !chat) return;\n    reportMessages({\n      chatId: chat.id,\n      messageIds: selectedMessageIds,\n    });\n    exitMessageSelectMode();\n  });\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n        aria-label={label}\n      >\n        <Icon name={icon} />\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <div className={className}>\n        <div className=\"MessageSelectToolbar-inner\">\n          <Button\n            color=\"translucent\"\n            round\n            onClick={handleExitMessageSelectMode}\n            ariaLabel=\"Exit select mode\"\n          >\n            <Icon name=\"close\" />\n          </Button>\n          <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n            {formattedMessagesCount}\n          </span>\n\n          {Boolean(selectedMessagesCount) && (\n            <div className=\"MessageSelectToolbar-actions\">\n              {messageListType !== 'scheduled' && canForwardMessages && (\n                renderButton(\n                  'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n                )\n              )}\n              {canReportMessages && (\n                renderButton('flag', lang('Conversation.ReportMessages'), openMessageReport)\n              )}\n              {canDownloadMessages && !hasProtectedMessage && (\n                renderButton('download', lang('lng_media_download'), handleMessageDownload)\n              )}\n              {!hasProtectedMessage && (\n                renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n              )}\n              {canDeleteMessages && (\n                renderButton('delete', lang('EditAdminGroupDeleteMessages'), handleDelete, true)\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { shouldWarnAboutSvg } = selectSharedSettings(global);\n    const chat = selectCurrentChat(global);\n\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isShareMessageModalOpen = tabState.isShareMessageModalShown;\n    const isAnyModalOpen = Boolean(isShareMessageModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall || tabState.reportModal\n      || tabState.deleteMessageModal);\n\n    return {\n      chat,\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n      shouldWarnAboutSvg,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"slqA9gR2\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tauadiDm\",\"icon\":\"i4wZg_0J\",\"header\":\"MQxuEIRA\",\"desc\":\"AEAN1Au4\",\"separator\":\"sXXb5yOS\",\"button\":\"F7owtTHj\",\"closeButton\":\"i6iFv9YE\"};","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectTabState, selectUser } from '../../global/selectors';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal, { ANIMATION_DURATION } from '../ui/Modal';\nimport Separator from '../ui/Separator';\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport Icon from './icons/Icon';\n\nimport styles from './PrivacySettingsNoticeModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isReadDate?: boolean;\n};\n\nconst CLOSE_ANIMATION_DURATION = ANIMATION_DURATION + ANIMATION_END_DELAY;\n\nconst PrivacySettingsNoticeModal = ({ isOpen, isReadDate, user }: OwnProps & StateProps) => {\n  const lang = useOldLang();\n  const {\n    updateGlobalPrivacySettings,\n    openPremiumModal,\n    closePrivacySettingsNoticeModal,\n    showNotification,\n    setPrivacyVisibility,\n    loadUser,\n  } = getActions();\n  const userName = getUserFirstOrLastName(user);\n\n  const handleShowReadTime = useLastCallback(() => {\n    updateGlobalPrivacySettings({ shouldHideReadMarks: false });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumReadSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleShowLastSeen = useLastCallback(() => {\n    setPrivacyVisibility({\n      privacyKey: 'lastSeen',\n      visibility: 'everybody',\n      onSuccess: () => loadUser({ userId: user!.id }),\n    });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumLastSeenSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleOpenPremium = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      openPremiumModal({ initialSection: 'last_seen' });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n  });\n\n  return (\n    <Modal isSlim isOpen={isOpen} onClose={handleClose}>\n      <div className={styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className={styles.closeButton}\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={handleClose}\n          ariaLabel=\"Close\"\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <AnimatedIconWithPreview\n          tgsUrl={isReadDate ? LOCAL_TGS_URLS.ReadTime : LOCAL_TGS_URLS.LastSeen}\n          size={84}\n          className={styles.icon}\n          nonInteractive\n          noLoop\n        />\n        <h2 className={styles.header}>\n          {lang(isReadDate ? 'PremiumReadHeader1' : 'PremiumLastSeenHeader1')}\n        </h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(\n              isReadDate ? 'PremiumReadText1' : 'PremiumLastSeenText1Locked',\n              userName,\n            ),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={isReadDate ? handleShowReadTime : handleShowLastSeen}\n          className={styles.button}\n        >\n          {lang(isReadDate ? 'PremiumReadButton1' : 'PremiumLastSeenButton1')}\n        </Button>\n        <Separator className={styles.separator}>{lang('PremiumOr')}</Separator>\n        <h2 className={styles.header}>{lang('PremiumReadHeader2')}</h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(isReadDate ? 'PremiumReadText2' : 'PremiumLastSeenText2', userName),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          withPremiumGradient\n          size=\"smaller\"\n          onClick={handleOpenPremium}\n          className={styles.button}\n        >\n          {lang('PremiumLastSeenButton2')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global): StateProps => {\n    const { chatId, isReadDate } = selectTabState(global).privacySettingsNoticeModal || {};\n    const user = chatId ? selectUser(global, chatId) : undefined;\n\n    return { user, isReadDate };\n  })(PrivacySettingsNoticeModal),\n);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport Icon from '../common/icons/Icon';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={oldLang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <Icon name=\"heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(lang, reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(lang, count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={oldLang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <Icon name=\"heart-outline\" className=\"status-icon\" />\n                          {formatDateAtTime(oldLang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(oldLang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {oldLang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport { IS_ANDROID } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const endHeavyAnimation = beginHeavyAnimation();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      endHeavyAnimation();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useOldLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aMjNU9gm\",\"list-item\":\"T3An6Hoz\",\"listItem\":\"T3An6Hoz\",\"title\":\"dQ9wwFu1\",\"subtitle\":\"m_J41YYl\",\"languages\":\"r3YNWDQr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"WEJIbFQj\",\"closeButton\":\"_vwPuDEM\",\"icon\":\"BUiGM8qZ\",\"title\":\"Q3NhXpNI\",\"description\":\"frZbGQ0G\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiCountryCode } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './CollectibleInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['collectibleInfoModal'];\n};\n\ntype StateProps = {\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst TOP_ICON_SIZE = 60;\n\nconst CollectibleInfoModal: FC<OwnProps & StateProps> = ({\n  modal,\n  phoneCodeList,\n}) => {\n  const {\n    closeCollectibleInfoModal,\n    openChat,\n    openUrl,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const isUsername = modal?.type === 'username';\n\n  const handleClose = useLastCallback(() => {\n    closeCollectibleInfoModal();\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: modal!.peerId });\n    handleClose();\n  });\n\n  const handleOpenUrl = useLastCallback(() => {\n    openUrl({\n      url: modal!.url,\n      shouldSkipModal: true,\n    });\n    handleClose();\n  });\n\n  const handleCopy = useLastCallback(() => {\n    const text = isUsername ? formatUsername(modal!.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal!.collectible);\n    copyTextToClipboard(text);\n    showNotification({\n      message: lang(isUsername ? 'UsernameCopied' : 'PhoneCopied'),\n    });\n    handleClose();\n  });\n\n  const title = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameTitle' : 'FragmentPhoneTitle';\n    const formattedCollectible = isUsername\n      ? formatUsername(modal.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal.collectible);\n    return lang(key, formattedCollectible);\n  }, [modal, isUsername, phoneCodeList, lang]);\n\n  const description = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameMessage' : 'FragmentPhoneMessage';\n    const date = formatDateAtTime(lang, modal.purchaseDate * 1000);\n    const currency = formatCurrencyAsString(modal.amount, modal.currency, lang.code);\n    const cryptoCurrency = formatCurrencyAsString(modal.cryptoAmount, modal.cryptoCurrency, lang.code);\n    const paid = `${cryptoCurrency} (${currency})`;\n    return lang(key, [date, paid]);\n  }, [modal, isUsername, lang]);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      isSlim\n      contentClassName={styles.content}\n      onClose={closeCollectibleInfoModal}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.icon}>\n        <AnimatedIconWithPreview\n          tgsUrl={isUsername ? LOCAL_TGS_URLS.Mention : LOCAL_TGS_URLS.Fragment}\n          size={TOP_ICON_SIZE}\n        />\n      </div>\n      <h3 className={styles.title}>\n        {title && renderText(title, ['simple_markdown'])}\n      </h3>\n      <PeerChip\n        className={styles.chip}\n        peerId={modal?.peerId}\n        forceShowSelf\n        clickArg={modal?.peerId}\n        onClick={handleOpenChat}\n      />\n      <p className={styles.description}>\n        {description && renderText(description, ['simple_markdown'])}\n      </p>\n      <div className=\"dialog-buttons dialog-buttons-centered\">\n        <Button className=\"confirm-dialog-button\" onClick={handleOpenUrl}>\n          {lang('FragmentUsernameOpen')}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleCopy}>\n          {lang(isUsername ? 'FragmentUsernameCopy' : 'FragmentPhoneCopy')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { countryList } = global;\n\n    return {\n      phoneCodeList: countryList.phoneCodes,\n    };\n  },\n)(CollectibleInfoModal));\n","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ThemeKey } from '../../../../types';\nimport type { SearchResultKey } from '../../../../util/keys/searchResultKey';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\nimport { selectSharedSettings } from '../../../../global/selectors/sharedState';\n\nexport type StateProps = {\n  theme: ThemeKey;\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: SearchResultKey[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    const { shouldWarnAboutSvg } = selectSharedSettings(global);\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDownloadableMedia } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useOldLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n\n      const media = getMessageDownloadableMedia(message)!;\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Audio\n              key={message.id}\n              theme={theme}\n              message={message}\n              origin={AudioOrigin.Search}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              date={message.date}\n              className=\"scroll-item\"\n              onPlay={handlePlayAudio}\n              onDateClick={handleMessageFocus}\n              canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n              isDownloading={getIsDownloading(activeDownloads, media)}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { isUserId } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyDefaults, selectNotifyException, selectUser,\n} from '../../../global/selectors';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  withOpenAppButton?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  withOpenAppButton,\n  onClick,\n}) => {\n  const { requestMainWebView } = getActions();\n  const oldLang = useOldLang();\n\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useLastCallback(() => {\n    onClick(chatId);\n  });\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chatId,\n      peerId: chatId,\n      theme,\n    });\n  });\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"medium\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"medium\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {withOpenAppButton && user?.hasMainMiniApp && (\n        <Button\n          className=\"ChatBadge miniapp\"\n          pill\n          fluid\n          size=\"tiny\"\n          onClick={handleOpenApp}\n        >\n          {oldLang('BotOpen')}\n        </Button>\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\n\nconst LESS_LIST_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst BotAppResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  foundIds,\n  recentBotIds,\n}) => {\n  const {\n    searchPopularBotApps,\n    openChatWithInfo,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n    const recentSet = new Set(recentBotIds);\n    const withoutRecent = foundIds.filter((id) => !recentSet.has(id));\n\n    return filterPeersByQuery({ ids: withoutRecent, query: searchQuery, type: 'user' });\n  }, [foundIds, recentBotIds, searchQuery]);\n\n  const handleChatClick = useLastCallback((id: string) => {\n    openChatWithInfo({ id, shouldReplaceHistory: true });\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll\"\n        items={canRenderContents ? filteredFoundIds : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && !filteredFoundIds?.length && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && !searchQuery && Boolean(recentBotIds?.length) && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">\n              {recentBotIds.length > LESS_LIST_ITEMS_AMOUNT && (\n                <Link className=\"Link\" onClick={handleToggleShowMoreMine}>\n                  {lang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n                </Link>\n              )}\n              {lang('SearchAppsMine')}\n            </h3>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_LIST_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                  withOpenAppButton\n                />\n              );\n            })}\n          </div>\n        )}\n        {canRenderContents && filteredFoundIds?.length && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">{lang('SearchAppsPopular')}</h3>\n            {filteredFoundIds.map((id) => {\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                  withOpenAppButton\n                />\n              );\n            })}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(BotAppResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useOldLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: OldLangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dates/dateFormat';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <Icon name=\"calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectTopic } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const topic = selectTopic(global, chatId, topicId);\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openThread } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      if (!searchChatId) return;\n      openThread({ chatId: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredPeer } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { isUserId } from '../../../global/helpers';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { type ObserveFn, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport BadgeButton from '../../common/BadgeButton';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport SponsoredMessageContextMenuContainer from '../../middle/message/SponsoredContextMenuContainer';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  sponsoredPeer: ApiSponsoredPeer;\n  observeIntersection?: ObserveFn;\n};\n\nconst LeftSearchResultSponsored: FC<OwnProps> = ({\n  sponsoredPeer,\n  observeIntersection,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const { clickSponsored, viewSponsored, openChat } = getActions();\n  const lang = useLang();\n\n  const {\n    peerId, randomId, additionalInfo, sponsorInfo,\n  } = sponsoredPeer;\n\n  useOnIntersect(ref, observeIntersection, (entry) => {\n    if (entry.intersectionRatio === 1) {\n      viewSponsored({ randomId });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    clickSponsored({ randomId });\n    openChat({ id: peerId });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const {\n    handleClick: handleBadgeClick,\n    handleMouseDown: handleBadgeMouseDown,\n  } = useFastClick((e: React.MouseEvent) => {\n    e.stopPropagation();\n    handleContextMenu(e);\n  });\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  return (\n    <ListItem\n      ref={ref}\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      buttonRef={buttonRef}\n    >\n      {isUserId(peerId) ? (\n        <PrivateChatInfo\n          userId={peerId}\n          withUsername\n          withStory\n          avatarSize=\"medium\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={peerId}\n          withUsername\n          avatarSize=\"medium\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      <BadgeButton className=\"search-sponsored-badge\" onMouseDown={handleBadgeMouseDown} onClick={handleBadgeClick}>\n        {lang('SponsoredPeerBadge')}\n        <Icon name=\"more\" />\n      </BadgeButton>\n      {contextMenuAnchor && (\n        <SponsoredMessageContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          triggerRef={ref}\n          randomId={randomId}\n          additionalInfo={additionalInfo}\n          canReport\n          sponsorInfo={sponsorInfo}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(LeftSearchResultSponsored);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useOldLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              className=\"clear-recent-chats\"\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel={lang('Clear')}\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <Icon name=\"close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              withOpenAppButton\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiMessageSearchContext, ApiSponsoredPeer } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { ALL_FOLDER_ID, GLOBAL_SUGGESTED_CHANNELS_ID } from '../../../config';\nimport {\n  isChatChannel,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectSimilarChannelIds, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport { unique } from '../../../util/iteratees';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PeerChip from '../../common/PeerChip';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Transition from '../../ui/Transition';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport LeftSearchResultSponsored from './LeftSearchResultSponsored';\nimport RecentContacts from './RecentContacts';\n\nimport './ChatResults.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  isChannelList?: boolean;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  contactIds?: string[];\n  accountPeerIds?: string[];\n  globalPeerIds?: string[];\n  foundIds?: SearchResultKey[];\n  sponsoredPeer?: ApiSponsoredPeer;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  suggestedChannelIds?: string[];\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  isChannelList,\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  contactIds,\n  accountPeerIds,\n  globalPeerIds,\n  foundIds,\n  globalMessagesByChatId,\n  fetchingStatus,\n  suggestedChannelIds,\n  sponsoredPeer,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal,\n    setGlobalSearchChatId, loadChannelRecommendations,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n  const [searchContext, setSearchContext] = useState<ApiMessageSearchContext>('all');\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffectOnce(() => {\n    if (isChannelList) loadChannelRecommendations({});\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: isChannelList ? 'channels' : 'text',\n          context: searchContext,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery, searchContext]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  function getSearchContextCaption(context: ApiMessageSearchContext) {\n    if (context === 'users') return lang('PrivateChatsSearchContext');\n    if (context === 'groups') return lang('GroupChatsSearchContext');\n    if (context === 'channels') return lang('ChannelsSearchContext');\n    return lang('AllChatsSearchContext');\n  }\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.chatResultsContextMenu .bubble'));\n  const getTriggerElement = useLastCallback(() => ref.current!.querySelector('.menuTrigger'));\n\n  const handleClickContext = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const itemPlaceholderClass = buildClassName('icon', 'iconPlaceholder');\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"chatResultsContextMenu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          <MenuItem\n            icon={searchContext === 'all' ? 'check' : undefined}\n            customIcon={searchContext !== 'all' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('all')}\n          >\n            {getSearchContextCaption('all')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'users' ? 'check' : undefined}\n            customIcon={searchContext !== 'users' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('users')}\n          >\n            {getSearchContextCaption('users')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'groups' ? 'check' : undefined}\n            customIcon={searchContext !== 'groups' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('groups')}\n          >\n            {getSearchContextCaption('groups')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'channels' ? 'check' : undefined}\n            customIcon={searchContext !== 'channels' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('channels')}\n          >\n            {getSearchContextCaption('channels')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  const localResults = useMemo(() => {\n    if (!isChannelList && (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2))) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const orderedChatIds = getOrderedIds(ALL_FOLDER_ID) ?? [];\n    const filteredChatIds = orderedChatIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n    const localChatIds = filterPeersByQuery({ ids: filteredChatIds, query: searchQuery, type: 'chat' });\n\n    if (isChannelList) return localChatIds;\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(contactIds || []),\n    ];\n\n    const localContactIds = filterPeersByQuery({\n      ids: contactIdsWithMe, query: searchQuery, type: 'user',\n    });\n\n    const localPeerIds = [\n      ...localContactIds,\n      ...localChatIds,\n    ];\n\n    return unique([\n      ...sortChatIds(localPeerIds, undefined, currentUserId ? [currentUserId] : undefined),\n      ...sortChatIds(accountPeerIds || []),\n    ]);\n  }, [searchQuery, currentUserId, contactIds, accountPeerIds, isChannelList]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length || isChannelList, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalPeerIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const filteredIds = globalPeerIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n\n    return sortChatIds(filteredIds, true);\n  }, [globalPeerIds, isChannelList, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n        const chat = chatsById[chatId];\n        if (!chat) return undefined;\n        if (isChannelList && !isChatChannel(chat)) return undefined;\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean);\n  }, [searchQuery, searchDate, foundIds, isChannelList, globalMessagesByChatId]);\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    searchMessagesGlobal({\n      type: isChannelList ? 'channels' : 'text',\n      context: searchContext,\n      shouldResetResultsByType: true,\n      shouldCheckFetchingMessagesStatus: true,\n    });\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [searchContext]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const chatsById = getGlobal().chats.byId;\n\n    const text = renderMessageSummary(oldLang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const actualFoundIds = foundMessages;\n\n  const nothingFound = searchContext === 'all' && fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !actualFoundIds.length;\n  const isMessagesFetching = fetchingStatus?.messages;\n\n  const shouldRenderTopPeers = !searchQuery && !searchDate && !isChannelList;\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n    isDisabled: !shouldRenderTopPeers,\n  });\n\n  if (shouldRenderTopPeers) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  const shouldRenderMessagesSection = searchContext === 'all' ? Boolean(actualFoundIds.length) : true;\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className=\"LeftSearch--content custom-scroll\"\n      items={actualFoundIds}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={oldLang('ChatList.Search.NoResults')}\n          description={oldLang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && !isChannelList && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={oldLang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PeerChip\n              peerId={id}\n              className=\"left-search-local-suggestion\"\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {oldLang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {oldLang(isChannelList ? 'SearchMyChannels' : 'DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                withOpenAppButton\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {oldLang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {oldLang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {sponsoredPeer && (\n            <LeftSearchResultSponsored sponsoredPeer={sponsoredPeer} observeIntersection={observe} />\n          )}\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(suggestedChannelIds?.length) && !searchQuery && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {oldLang('SearchRecommendedChannels')}\n          </h3>\n          {suggestedChannelIds.map((id) => {\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      <div className=\"menuOwner\" ref={ref}>\n        {renderContextMenu()}\n        {shouldRenderMessagesSection && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n              {!isChannelList && (\n                <Link className=\"Link menuTrigger dropDownLink\" onClick={handleClickContext}>\n                  {lang('SearchContextCaption', {\n                    type: getSearchContextCaption(searchContext),\n                  }, {\n                    withNodes: true,\n                  })}\n\n                  <Transition\n                    name=\"fade\"\n                    shouldCleanup\n                    activeKey={Number(isMessagesFetching)}\n                    className=\"iconContainer\"\n                    slideClassName=\"iconContainerSlide\"\n                  >\n                    {isMessagesFetching && (<Loading />)}\n                    {!isMessagesFetching && <Icon name=\"down\" />}\n                  </Transition>\n                </Link>\n              )}\n              {oldLang('SearchMessages')}\n            </h3>\n            {actualFoundIds.map(renderFoundMessage)}\n          </div>\n        )}\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isChannelList }): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!contactIds) {\n      return {};\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType, sponsoredPeer,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: accountPeerIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.[isChannelList ? 'channels' : 'text']?.foundIds;\n    const { similarChannelIds } = selectSimilarChannelIds(global, GLOBAL_SUGGESTED_CHANNELS_ID) || {};\n\n    return {\n      currentUserId,\n      contactIds,\n      accountPeerIds,\n      globalPeerIds,\n      foundIds,\n      globalMessagesByChatId,\n      fetchingStatus,\n      sponsoredPeer,\n      suggestedChannelIds: similarChannelIds,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDocument } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n      const message = globalMessagesByChatId[chatId]?.byId[messageId];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              key={message.date}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Document\n              document={getMessageDocument(message)!}\n              message={message}\n              withDate\n              datetime={message.date}\n              smaller\n              sender={getSenderName(lang, message, chatsById, usersById)}\n              className=\"scroll-item\"\n              isDownloading={getIsDownloading(activeDownloads, message.content.document!)}\n              shouldWarnAboutSvg={shouldWarnAboutSvg}\n              observeIntersection={observeIntersectionForMedia}\n              onDateClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            key={message.id}\n          >\n            <WebLink\n              key={message.id}\n              message={message}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              isProtected={isChatProtected || message.isProtected}\n              observeIntersection={observeIntersectionForMedia}\n              onMessageClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      messageId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content LeftSearch--media\">\n      <InfiniteScroll\n        className={classNames}\n        items={canRenderContents ? foundMessages : undefined}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { RegularLangKey } from '../../../types/language';\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dates/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport AudioResults from './AudioResults';\nimport BotAppResults from './BotAppResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\ntype TabInfo = {\n  type: GlobalSearchContent;\n  key: RegularLangKey;\n};\n\nconst TABS: TabInfo[] = [\n  { type: GlobalSearchContent.ChatList, key: 'SearchTabChats' },\n  { type: GlobalSearchContent.ChannelList, key: 'SearchTabChannels' },\n  { type: GlobalSearchContent.BotApps, key: 'SearchTabApps' },\n  { type: GlobalSearchContent.Media, key: 'SearchTabMedia' },\n  { type: GlobalSearchContent.Links, key: 'SearchTabLinks' },\n  { type: GlobalSearchContent.Files, key: 'SearchTabFiles' },\n  { type: GlobalSearchContent.Music, key: 'SearchTabMusic' },\n  { type: GlobalSearchContent.Voice, key: 'SearchTabVoice' },\n];\n\nconst CHAT_TABS: TabInfo[] = [\n  { type: GlobalSearchContent.ChatList, key: 'SearchTabMessages' },\n  ...TABS.slice(3), // Skip ChatList, ChannelList and BotApps, replaced with All Messages\n];\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const tabs = useMemo(() => {\n    const arr = chatId ? CHAT_TABS : TABS;\n    return arr.map((tab) => ({\n      ...tab,\n      title: lang(tab.key),\n    }));\n  }, [chatId, lang]);\n\n  const handleSwitchTab = useLastCallback((index: number) => {\n    const tab = tabs[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  });\n\n  const handleSearchDateSelect = useLastCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={tabs} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={tabs.length}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n            case GlobalSearchContent.ChannelList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  isChannelList={currentContent === GlobalSearchContent.ChannelList}\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.BotApps:\n              return (\n                <BotAppResults\n                  key=\"botApps\"\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterPeersByQuery } from '../../../../global/helpers/peers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { unique } from '../../../../util/iteratees';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Loading from '../../../ui/Loading';\n\ntype StateProps = {\n  maxChats: number;\n};\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps & StateProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n  maxChats,\n}) => {\n  const lang = useOldLang();\n\n  const { openLimitReachedModal } = getActions();\n\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = useMemo(() => selectChatFilters(state, mode, true), [mode, state]);\n  const chatTypes = mode === 'included' ? CUSTOM_PEER_INCLUDED_CHAT_TYPES : CUSTOM_PEER_EXCLUDED_CHAT_TYPES;\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  const displayedIds = useMemo(() => {\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...filterPeersByQuery({ ids: chatIds, query: chatFilter, type: 'chat' }),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, chatFilter]);\n\n  const handleFilterChange = useLastCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n    setIsTouched(true);\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    if (mode === 'included') {\n      if (ids.length >= maxChats) {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  const handleSelectedChatTypesChange = useLastCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"Picker settings-folders-chat-list\">\n      <PeerPicker\n        categories={shouldHideChatTypes ? undefined : chatTypes}\n        itemIds={displayedIds}\n        selectedIds={selectedChatIds}\n        selectedCategories={selectedChatTypes}\n        filterValue={chatFilter}\n        filterPlaceholder={lang('Search')}\n        categoryPlaceholderKey=\"FilterChatTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        withDefaultPadding\n        withPeerTypes\n        allowMultiple\n        itemInputType=\"checkbox\"\n        onSelectedIdsChange={handleSelectedIdsChange}\n        onSelectedCategoriesChange={handleSelectedChatTypesChange}\n        onFilterChange={handleFilterChange}\n      />\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatFilters));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatlistExportedInvite } from '../../../../api/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport Icon from '../../../common/icons/Icon';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'included'), [state]);\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'excluded'), [state]);\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? CUSTOM_PEER_INCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key)\n      : CUSTOM_PEER_EXCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.type}\n        className=\"settings-folders-list-item mb-1\"\n        narrow\n        inactive\n      >\n        <PrivateChatInfo\n          avatarSize=\"small\"\n          customPeer={chatType}\n        />\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ListItem\n            key=\"load-more\"\n            className=\"settings-folders-list-item\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n            icon=\"down\"\n          >\n            {lang('FilterShowMoreChats', leftChatsCount, 'i')}\n          </ListItem>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIconWithPreview\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title.text}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary\"\n            icon=\"add\"\n            narrow\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item\"\n              icon=\"link\"\n              narrow\n              multiline\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 56;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePreviousDeprecated(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: {\n            text: lang('FilterAllChats'),\n            entities: [],\n          },\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n        noTitleAnimations: folder.noTitleAnimations,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIconWithPreview\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"settings-button with-icon\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <Icon name=\"add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                    allowSelection\n                  >\n                    <span className=\"title\">\n                      {renderTextWithEntities({\n                        text: folder.title.text,\n                        entities: folder.title.entities,\n                        noCustomEmojiPlayback: folder.noTitleAnimations,\n                      })}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderTextWithEntities({\n                      text: folder.title.text,\n                      entities: folder.title.entities,\n                      noCustomEmojiPlayback: folder.noTitleAnimations,\n                    })}\n                    {isBlocked && <Icon name=\"lock-badge\" className=\"settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <Icon name=\"link\" className=\"mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">\n                    {renderTextWithEntities({\n                      text: folder.title.text,\n                      entities: folder.title.entities,\n                      noCustomEmojiPlayback: folder.noTitleAnimations,\n                    })}\n                  </span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: folderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Icon from '../../../common/icons/Icon';\nimport LinkField from '../../../common/LinkField';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  folder?: ApiChatFolder;\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  folder,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (folder?.includedChatIds || []).concat(folder?.pinnedChatIds || []);\n  }, [folder?.includedChatIds, folder?.pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        {folder && (\n          <p className=\"settings-item-description mb-3\" dir=\"auto\">\n            {lang('FolderLinkTitleDescription', {\n              folder: renderTextWithEntities({\n                text: folder.title.text,\n                entities: folder.title.entities,\n                noCustomEmojiPlayback: folder.noTitleAnimations,\n              }),\n              chats: lang('FolderLinkTitleDescriptionChats', { count: chatsCount }, { pluralValue: chatsCount }),\n            }, {\n              withMarkdown: true,\n              withNodes: true,\n            })}\n          </p>\n        )}\n      </div>\n\n      <LinkField\n        className=\"settings-item\"\n        link={!url ? oldLang('Loading') : url}\n        withShare\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-picker\">\n        <PeerPicker\n          itemIds={itemIds}\n          lockedUnselectedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      folder,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n    openSettingsScreen,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        openSettingsScreen({ screen: SettingsScreens.FoldersCreateFolder });\n      } else {\n        openSettingsScreen({ screen: SettingsScreens.FoldersEditFolder });\n      }\n      return;\n    }\n\n    onReset();\n  }, [state.mode, dispatch, currentScreen, onReset]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    openSettingsScreen({ screen: SettingsScreens.FoldersCreateFolder });\n  }, [dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    openSettingsScreen({ screen: SettingsScreens.FoldersEditFolder });\n  }, [dispatch]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    openSettingsScreen({\n      screen: currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n        ? SettingsScreens.FoldersIncludedChatsFromChatList\n        : SettingsScreens.FoldersIncludedChats,\n    });\n  }, [currentScreen, dispatch]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    openSettingsScreen({\n      screen: currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n        ? SettingsScreens.FoldersExcludedChatsFromChatList\n        : SettingsScreens.FoldersExcludedChats,\n    });\n  }, [currentScreen, dispatch]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    openSettingsScreen({ screen: SettingsScreens.FoldersShare });\n  }, [dispatch, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    openSettingsScreen({ screen: SettingsScreens.FoldersShare });\n  }, [state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useOldLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const { openSettingsScreen } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.PasscodeChangePasscodeCurrent })}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.PasscodeTurnOff })}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n    openSettingsScreen,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    openSettingsScreen({ screen: SettingsScreens.PasscodeNewPasscode });\n  }, [onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    openSettingsScreen({ screen: SettingsScreens.PasscodeNewPasscodeConfirm });\n  }, [onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    openSettingsScreen({ screen: SettingsScreens.PasscodeCongratulations });\n  }, [onSetPasscode, passcode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      openSettingsScreen({ screen: SettingsScreens.PasscodeChangePasscodeNew });\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onSetPasscode]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    openSettingsScreen({ screen: SettingsScreens.PasscodeChangePasscodeConfirm });\n  }, [onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      openSettingsScreen({ screen: SettingsScreens.Privacy });\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsText } from '../../../util/localization/format';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../icons/Icon';\n\ntype OwnProps = {\n  min?: number;\n  max: number;\n  value: number;\n  disabled?: boolean;\n  readOnly?: boolean;\n  bold?: boolean;\n  className?: string;\n  defaultValue: number;\n  onChange: (value: number) => void;\n  canChangeChargeForMessages?: boolean;\n};\n\nconst DEFAULT_POINTS = [50, 100, 500, 1000, 2000, 5000, 10000];\n\nconst PaidMessageSlider: FC<OwnProps> = ({\n  min = 0,\n  max,\n  value,\n  disabled,\n  readOnly,\n  bold,\n  className,\n  defaultValue,\n  onChange,\n  canChangeChargeForMessages,\n}) => {\n  const lang = useLang();\n\n  const points = useMemo(() => {\n    const result = [];\n    for (let i = 0; i < DEFAULT_POINTS.length; i++) {\n      if (DEFAULT_POINTS[i] < max) {\n        result.push(DEFAULT_POINTS[i]);\n      }\n\n      if (DEFAULT_POINTS[i] >= max) {\n        result.push(max);\n        break;\n      }\n    }\n\n    return result;\n  }, [max]);\n\n  const handleChange = useLastCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = Number(event.currentTarget.value);\n    onChange(getValue(points, newValue));\n  });\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    readOnly && 'readOnly',\n    bold && 'bold',\n  );\n\n  function renderTopRow() {\n    return (\n      <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"value-min\" dir=\"auto\">{lang.number(min)}</span>\n        <span className=\"settings-range-value\">\n          {!canChangeChargeForMessages && (<Icon name=\"lock-badge\" />)}\n          {formatStarsAsText(lang, getValue(points, getProgress(points, value)))}\n        </span>\n        <span className=\"value-max\" dir=\"auto\">{lang.number(max)}</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className={mainClassName}>\n      {renderTopRow()}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${(getProgress(points, value) / points.length) * 100}%`}\n        />\n        <input\n          min={0}\n          max={points.length}\n          defaultValue={getProgress(points, defaultValue)}\n          step=\"any\"\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nfunction getProgress(points: number[], value: number) {\n  const pointIndex = points.findIndex((point) => value <= point);\n  const prevPoint = points[pointIndex - 1] || 1;\n  const nextPoint = points[pointIndex] || points[points.length - 1];\n  const progress = (value - prevPoint) / (nextPoint - prevPoint);\n  return pointIndex + progress;\n}\n\nfunction getValue(points: number[], progress: number) {\n  const pointIndex = Math.floor(progress);\n  const prevPoint = points[pointIndex - 1] || 1;\n  const nextPoint = points[pointIndex] || points[points.length - 1];\n  const pointValue = prevPoint + (nextPoint - prevPoint) * (progress - pointIndex);\n  return pointValue < 100 ? Math.round(pointValue) : Math.round(pointValue / 10) * 10;\n}\n\nexport default memo(PaidMessageSlider);\n","import React, {\n  memo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  DEFAULT_MAXIMUM_CHARGE_FOR_MESSAGES,\n  MINIMUM_CHARGE_FOR_MESSAGES,\n} from '../../../config';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPercent } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport Icon from '../icons/Icon';\nimport PaidMessageSlider from './PaidMessageSlider';\n\ntype OwnProps = {\n  chargeForMessages: number;\n  canChangeChargeForMessages?: boolean;\n  isGroupChat?: boolean;\n  onChange: (value: number) => void;\n};\n\ntype StateProps = {\n  starsUsdWithdrawRate: number;\n  starsPaidMessageAmountMax: number;\n  starsPaidMessageCommissionPermille: number;\n};\n\nfunction PaidMessagePrice({\n  starsUsdWithdrawRate,\n  starsPaidMessageAmountMax,\n  starsPaidMessageCommissionPermille,\n  canChangeChargeForMessages,\n  isGroupChat,\n  chargeForMessages,\n  onChange,\n}: OwnProps & StateProps) {\n  const { openPremiumModal } = getActions();\n\n  const lang = useLang();\n\n  const handleChargeForMessagesChange = useLastCallback((value: number) => {\n    onChange?.(value);\n  });\n\n  const handleUnlockWithPremium = useLastCallback(() => {\n    openPremiumModal({ initialSection: 'message_privacy' });\n  });\n\n  return (\n    <>\n      <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('SectionTitleStarsForForMessages')}\n      </h4>\n      <PaidMessageSlider\n        defaultValue={chargeForMessages}\n        min={MINIMUM_CHARGE_FOR_MESSAGES}\n        max={starsPaidMessageAmountMax}\n        value={chargeForMessages}\n        onChange={handleChargeForMessagesChange}\n        canChangeChargeForMessages={canChangeChargeForMessages}\n        readOnly={!canChangeChargeForMessages}\n      />\n      {!canChangeChargeForMessages && (\n        <Button\n          color=\"primary\"\n          fluid\n          size=\"smaller\"\n          noForcedUpperCase\n          className=\"settings-unlock-button\"\n          onClick={handleUnlockWithPremium}\n        >\n          <span className=\"settings-unlock-button-title\">\n            {lang('UnlockButtonTitle')}\n            <Icon name=\"lock-badge\" className=\"settings-unlock-button-icon\" />\n          </span>\n        </Button>\n      )}\n      {canChangeChargeForMessages && (\n        <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang(isGroupChat ? 'SetPriceGroupDescription' : 'SectionDescriptionStarsForForMessages', {\n            percent: formatPercent(starsPaidMessageCommissionPermille * 100),\n            amount: formatCurrencyAsString(\n              chargeForMessages * starsUsdWithdrawRate * starsPaidMessageCommissionPermille,\n              'USD',\n              lang.code,\n            ),\n          }, {\n            withNodes: true,\n          })}\n        </p>\n      )}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const starsUsdWithdrawRateX1000 = global.appConfig?.starsUsdWithdrawRateX1000;\n    const starsUsdWithdrawRate = starsUsdWithdrawRateX1000 ? starsUsdWithdrawRateX1000 / 1000 : 1;\n    const configStarsPaidMessageCommissionPermille = global.appConfig?.starsPaidMessageCommissionPermille;\n    const starsPaidMessageCommissionPermille = configStarsPaidMessageCommissionPermille\n      ? configStarsPaidMessageCommissionPermille / 1000 : 100;\n\n    return {\n      starsPaidMessageCommissionPermille,\n      starsUsdWithdrawRate,\n      starsPaidMessageAmountMax: global.appConfig?.starsPaidMessageAmountMax || DEFAULT_MAXIMUM_CHARGE_FOR_MESSAGES,\n    };\n  },\n)(PaidMessagePrice));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPremiumSection } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  premiumSection?: ApiPremiumSection;\n};\n\nfunction PremiumStatusItem({ premiumSection }: OwnProps) {\n  const { openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal({ initialSection: premiumSection }));\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n        onClick={handleOpenPremiumModal}\n      >\n        {lang('PrivacyLastSeenPremium')}\n      </ListItem>\n      <p\n        className=\"settings-item-description-larger premium-info\"\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {lang('lng_messages_privacy_premium_about')}\n      </p>\n    </div>\n  );\n}\n\nexport default memo(PremiumStatusItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './PrivacyLockedOption.module.scss';\n\ntype OwnProps = {\n  label: string;\n  isChecked?: boolean;\n};\n\nfunction PrivacyLockedOption({ label, isChecked }: OwnProps) {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isChecked && styles.checked,\n      )}\n      onClick={() => showNotification({ message: lang('OptionPremiumRequiredMessage') })}\n    >\n      <span>{label}</span>\n      <Icon name=\"lock-badge\" className={styles.lockIcon} />\n    </div>\n  );\n}\n\nexport default memo(PrivacyLockedOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sBptmiga\",\"lock-icon\":\"jWxrRbkh\",\"lockIcon\":\"jWxrRbkh\",\"checked\":\"U_6O1ebL\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport {\n  DEFAULT_CHARGE_FOR_MESSAGES,\n} from '../../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectNewNoncontactPeersRequirePremium,\n  selectNonContactPeersPaidStars,\n} from '../../../global/selectors';\n\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PaidMessagePrice from '../../common/paidMessage/PaidMessagePrice';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  shouldChargeForMessages?: boolean;\n  canLimitNewMessagesWithoutPremium?: boolean;\n  canChargeForMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  nonContactPeersPaidStars: number;\n  noPaidReactionsForUsersCount: number;\n};\n\nfunction PrivacyMessages({\n  isActive,\n  canLimitNewMessagesWithoutPremium,\n  canChargeForMessages,\n  shouldNewNonContactPeersRequirePremium,\n  shouldChargeForMessages,\n  nonContactPeersPaidStars,\n  isCurrentUserPremium,\n  noPaidReactionsForUsersCount,\n  onReset,\n}: OwnProps & StateProps) {\n  const { updateGlobalPrivacySettings, openSettingsScreen } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const canChangeForContactsAndPremium = isCurrentUserPremium || canLimitNewMessagesWithoutPremium;\n  const canChangeChargeForMessages = isCurrentUserPremium && canChargeForMessages;\n  const [chargeForMessages, setChargeForMessages] = useState<number>(nonContactPeersPaidStars);\n\n  const selectedValue = useMemo(() => {\n    if (shouldChargeForMessages) return 'charge_for_messages';\n    if (shouldNewNonContactPeersRequirePremium) return 'contacts_and_premium';\n    return 'everybody';\n  }, [shouldChargeForMessages, shouldNewNonContactPeersRequirePremium]);\n\n  const options = useMemo(() => {\n    return [\n      { value: 'everybody', label: oldLang('P2PEverybody') },\n      {\n        value: 'contacts_and_premium',\n        label: canChangeForContactsAndPremium ? (\n          oldLang('PrivacyMessagesContactsAndPremium')\n        ) : (\n          <PrivacyLockedOption\n            label={oldLang('PrivacyMessagesContactsAndPremium')}\n            isChecked={selectedValue === 'contacts_and_premium'}\n          />\n        ),\n        hidden: !canChangeForContactsAndPremium,\n        isCanCheckedInDisabled: true,\n      },\n      {\n        value: 'charge_for_messages',\n        label: canChangeChargeForMessages ? (\n          lang('PrivacyChargeForMessages')\n        ) : (\n          <PrivacyLockedOption\n            label={lang('PrivacyChargeForMessages')}\n            isChecked={selectedValue === 'charge_for_messages'}\n          />\n        ),\n        hidden: !canChangeChargeForMessages,\n        isCanCheckedInDisabled: true,\n      },\n    ];\n  }, [oldLang, lang, canChangeForContactsAndPremium, canChangeChargeForMessages, selectedValue]);\n\n  const handleChange = useLastCallback((privacy: string) => {\n    updateGlobalPrivacySettings({\n      shouldNewNonContactPeersRequirePremium: privacy === 'contacts_and_premium',\n      // eslint-disable-next-line no-null/no-null\n      nonContactPeersPaidStars: privacy === 'charge_for_messages' ? chargeForMessages : null,\n    });\n  });\n\n  const updateGlobalPrivacySettingsWithDebounced = useDebouncedCallback((value: number) => {\n    updateGlobalPrivacySettings({\n      nonContactPeersPaidStars: value,\n    });\n  }, [updateGlobalPrivacySettings], 300, true);\n\n  const handleChargeForMessagesChange = useCallback((value: number) => {\n    setChargeForMessages(value);\n    updateGlobalPrivacySettingsWithDebounced(value);\n  }, [setChargeForMessages, updateGlobalPrivacySettingsWithDebounced]);\n\n  function renderSectionNoPaidMessagesForUsers() {\n    const itemSubtitle = !noPaidReactionsForUsersCount ? lang('SubtitlePrivacyAddUsers')\n      : oldLang('Users', noPaidReactionsForUsersCount, 'i');\n\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {lang('RemoveFeeTitle')}\n        </h4>\n        <ListItem\n          narrow\n          icon=\"delete-user\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => {\n            openSettingsScreen({ screen: SettingsScreens.PrivacyNoPaidMessages });\n          }}\n        >\n          <div className=\"multiline-item full-size\">\n            <span className=\"title\">{lang('ExceptionTitlePrivacyChargeForMessages')}</span>\n            <span className=\"subtitle\">{\n              itemSubtitle\n            }\n            </span>\n          </div>\n        </ListItem>\n      </div>\n    );\n  }\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const privacyDescription = useMemo(() => {\n    if (shouldChargeForMessages) return lang('PrivacyDescriptionChargeForMessages');\n    return lang('PrivacyDescriptionMessagesContactsAndPremium');\n  }, [shouldChargeForMessages, lang]);\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {oldLang('PrivacyMessagesTitle')}\n        </h4>\n        <RadioGroup\n          name=\"privacy-messages\"\n          options={options}\n          onChange={handleChange}\n          selected={selectedValue}\n        />\n        <p className=\"settings-item-description-larger\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {privacyDescription}\n        </p>\n      </div>\n      {selectedValue === 'charge_for_messages' && (\n        <div className=\"settings-item fluid-container\">\n          <PaidMessagePrice\n            canChangeChargeForMessages={canChangeChargeForMessages}\n            chargeForMessages={chargeForMessages}\n            onChange={handleChargeForMessagesChange}\n          />\n        </div>\n      )}\n      {canChangeChargeForMessages && selectedValue === 'charge_for_messages' && renderSectionNoPaidMessagesForUsers()}\n      {!isCurrentUserPremium && selectedValue !== 'charge_for_messages'\n      && <PremiumStatusItem premiumSection=\"message_privacy\" />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const nonContactPeersPaidStars = selectNonContactPeersPaidStars(global);\n\n  const noPaidReactionsForUsersCount = global.settings.privacy.noPaidMessages?.allowUserIds.length || 0;\n\n  return {\n    shouldNewNonContactPeersRequirePremium: selectNewNoncontactPeersRequirePremium(global),\n    shouldChargeForMessages: Boolean(nonContactPeersPaidStars),\n    nonContactPeersPaidStars: nonContactPeersPaidStars || DEFAULT_CHARGE_FOR_MESSAGES,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    canLimitNewMessagesWithoutPremium: global.appConfig?.canLimitNewMessagesWithoutPremium,\n    canChargeForMessages: global.appConfig?.starsPaidMessagesAvailable,\n    noPaidReactionsForUsersCount,\n  };\n})(PrivacyMessages));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"M84mrPgu\",\"settingsActiveSession\":\"M84mrPgu\",\"iconDevice\":\"Add8P_K4\",\"iconDevice__android\":\"onkXVGY4\",\"iconDeviceAndroid\":\"onkXVGY4\",\"iconDevice__apple\":\"xw13aT8u\",\"iconDeviceApple\":\"xw13aT8u\",\"iconDevice__brave\":\"HESrGUdv\",\"iconDeviceBrave\":\"HESrGUdv\",\"iconDevice__chrome\":\"Vpej7wm7\",\"iconDeviceChrome\":\"Vpej7wm7\",\"iconDevice__edge\":\"ueWE77x9\",\"iconDeviceEdge\":\"ueWE77x9\",\"iconDevice__firefox\":\"_lMTmvya\",\"iconDeviceFirefox\":\"_lMTmvya\",\"iconDevice__linux\":\"cDVfvyG_\",\"iconDeviceLinux\":\"cDVfvyG_\",\"iconDevice__opera\":\"nWqlTxZt\",\"iconDeviceOpera\":\"nWqlTxZt\",\"iconDevice__safari\":\"ldFLp1Gf\",\"iconDeviceSafari\":\"ldFLp1Gf\",\"iconDevice__samsung\":\"VHNORBGL\",\"iconDeviceSamsung\":\"VHNORBGL\",\"iconDevice__ubuntu\":\"QBVivtdu\",\"iconDeviceUbuntu\":\"QBVivtdu\",\"iconDevice__unknown\":\"GbjIgrwU\",\"iconDeviceUnknown\":\"GbjIgrwU\",\"iconDevice__vivaldi\":\"yieVnjoI\",\"iconDeviceVivaldi\":\"yieVnjoI\",\"iconDevice__windows\":\"_0dnTFOE\",\"iconDeviceWindows\":\"_0dnTFOE\",\"iconDevice__xbox\":\"fbCjjDpU\",\"iconDeviceXbox\":\"fbCjjDpU\",\"title\":\"c6edjhlh\",\"note\":\"lRqTZAYn\",\"date\":\"oLnN6crs\",\"box\":\"wVEXuPlZ\",\"actionHeader\":\"olQS2T1n\",\"actionName\":\"KuX1APpO\",\"headerButton\":\"VT8pZfMu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p className=\"settings-item-description-larger\">{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wd0fmiSY\",\"avatar\":\"OhZHdRsP\",\"title\":\"EQ7__xGn\",\"note\":\"YRYk96ki\",\"box\":\"kmCTIfvf\",\"action-header\":\"qkq5Fa0V\",\"actionHeader\":\"qkq5Fa0V\",\"action-name\":\"zFYUiy13\",\"actionName\":\"zFYUiy13\",\"header-button\":\"lUf0RJ2h\",\"headerButton\":\"lUf0RJ2h\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"v0wP46TR\",\"clear-help\":\"WnnxcARX\",\"clearHelp\":\"WnnxcARX\",\"subtitle\":\"uEUfjByC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { CHAT_HEIGHT_PX, STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useLastCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  });\n\n  if (!stickerSet?.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      className={buildClassName('StickerSetCard', 'chat-item-clickable small-icon', className)}\n      style={`height: ${CHAT_HEIGHT_PX}px;`}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { AccountSettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<AccountSettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AccountSettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<AccountSettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', {\n      limit: lang('FileSizeMB', { count: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] }),\n    });\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettingsContacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsPrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsGroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsChannels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadFilesTitle'),\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ys1i4ssl\",\"item\":\"skaVPMTF\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AccountSettings } from '../../../types';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<AccountSettings, 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n  const language = lang.code || 'en';\n  const [displayedOptions, setDisplayedOptions] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedOptionList: ItemPickerOption[] = useMemo(() => {\n    const options = SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).filter(Boolean).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n\n    if (!searchQuery.trim()) {\n      const currentLanguageOption = options.find((option) => option.value === language);\n      const otherOptionList = options.filter((option) => option.value !== language);\n      return currentLanguageOption ? [currentLanguageOption, ...otherOptionList] : options;\n    }\n\n    return options?.filter((option) => option.label.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [language, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive, prevLanguage]) => {\n    if (prevIsActive === isActive && prevLanguage?.find((option) => option === language)) return;\n    const [selected] = partition(displayedOptionList, (option) => doNotTranslate.includes(option.value));\n    setDisplayedOptions([...selected.map((option) => option.value)]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, displayedOptionList]);\n\n  const handleChange = useLastCallback((newSelectedIds: string[]) => {\n    setDisplayedOptions(newSelectedIds);\n    setSettingOption({\n      doNotTranslate: newSelectedIds,\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content infinite-scroll')}>\n      <div className={buildClassName(styles.item)}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedOptionList}\n          selectedValues={displayedOptions}\n          onSelectedValuesChange={handleChange}\n          filterValue={searchQuery}\n          onFilterChange={setSearchQuery}\n          isSearchable\n          allowMultiple\n          withDefaultPadding\n          itemInputType=\"checkbox\"\n          searchInputId=\"lang-picker-search\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 56;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useOldLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePreviousDeprecated(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PaO1MMi5\",\"header\":\"wSswdVkR\",\"description\":\"oiJc22Aj\",\"sortableContainer\":\"lAeeBh9K\",\"item\":\"l04OwRBg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\nimport {\n  isUsernameValid, MAX_USERNAME_LENGTH, MIN_UPDATE_USERNAME_LENGTH, USERNAME_REGEX,\n} from '../../util/username';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useOldLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_UPDATE_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = newUsername === '' ? true : isUsernameValid(newUsername, true);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-item\">\n          <div className=\"settings-input\">\n            <AvatarEditable\n              currentAvatarBlobUrl={currentAvatarBlobUrl}\n              onChange={handlePhotoChange}\n              title=\"Edit your profile photo\"\n              disabled={isLoading}\n            />\n            <InputText\n              value={firstName}\n              onChange={handleFirstNameChange}\n              label={lang('FirstName')}\n              disabled={isLoading}\n              error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n            />\n            <InputText\n              value={lastName}\n              onChange={handleLastNameChange}\n              label={lang('LastName')}\n              disabled={isLoading}\n            />\n            <TextArea\n              value={bio}\n              onChange={handleBioChange}\n              label={lang('UserBio')}\n              disabled={isLoading}\n              maxLength={maxBioLength}\n              maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n            />\n          </div>\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <div className=\"settings-input\">\n            <UsernameInput\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n          </div>\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport {\n  IS_ELECTRON,\n  IS_SNAP_EFFECT_SUPPORTED,\n  IS_WAVE_TRANSFORM_SUPPORTED,\n} from '../../../util/browser/windowEnvironment';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSharedSettingOption, requestWave } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const snapButtonRef = useRef<HTMLDivElement>(null);\n  const [isSnapButtonAnimating, setIsSnapButtonAnimating] = useState(false);\n\n  const lang = useOldLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  const handleRequestWave = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    requestWave({ startX: e.clientX, startY: e.clientY });\n  });\n\n  const handleRequestConfetti = useLastCallback(() => {\n    requestConfetti({ withStars: true });\n  });\n\n  const handleSnap = useLastCallback(() => {\n    const button = snapButtonRef.current;\n    if (!button) return;\n\n    if (animateSnap(button)) {\n      setIsSnapButtonAnimating(true);\n      // Manual reset for debug\n      setTimeout(() => {\n        setIsSnapButtonAnimating(false);\n      }, 1500);\n    }\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          onClick={handleRequestConfetti}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n        <ListItem\n          onClick={handleRequestWave}\n          icon=\"story-expired\"\n          disabled={!IS_WAVE_TRANSFORM_SUPPORTED}\n        >\n          <div className=\"title\">Start wave</div>\n        </ListItem>\n        <ListItem\n          ref={snapButtonRef}\n          onClick={handleSnap}\n          icon=\"spoiler\"\n          disabled={!IS_SNAP_EFFECT_SUPPORTED}\n          style={isSnapButtonAnimating ? 'visibility: hidden' : ''}\n        >\n          <div className=\"title\">Vaporize this button</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSharedSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSharedSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSharedSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSharedSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      shouldForceHttpTransport,\n      shouldAllowHttpTransport,\n      shouldCollectDebugLogs,\n      shouldDebugExportedSenders,\n    } = selectSharedSettings(global);\n\n    return {\n      shouldForceHttpTransport,\n      shouldAllowHttpTransport,\n      shouldCollectDebugLogs,\n      shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { SharedSettings, ThemeKey, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/browser/windowEnvironment';\nimport { setTimeFormat } from '../../../util/oldLangProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<SharedSettings, (\n    'messageTextSize' |\n    'messageSendKeyCombo' |\n    'timeFormat' |\n    'theme' |\n    'shouldUseSystemTheme'\n  )>;\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n  onReset,\n}) => {\n  const {\n    setSharedSettingOption, openSettingsScreen,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const timeFormatOptions: IRadioOption[] = [{\n    label: lang('SettingsTimeFormat12'),\n    value: '12h',\n  }, {\n    label: lang('SettingsTimeFormat24'),\n    value: '24h',\n  }];\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChatAppearanceLight'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChatAppearanceDark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChatAppearanceSystem'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('SettingsSendEnter'), subLabel: lang('SettingsSendEnterDescription') },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'SettingsSendCmdenter' : 'SettingsSendCtrlenter'),\n      subLabel: lang('SettingsSendPlusEnterDescription'),\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSharedSettingOption({ messageTextSize: newSize });\n  }, []);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ThemeKey;\n\n    setSharedSettingOption({ theme: newTheme });\n    setSharedSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, []);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSharedSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSharedSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, []);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSharedSettingOption({ messageSendKeyCombo: newCombo as SharedSettings['messageSendKeyCombo'] });\n  }, []);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Settings')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.GeneralChatBackground })}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('SettingsTray')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsTimeFormat')}\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={timeFormatOptions}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SettingsKeyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      theme,\n      shouldUseSystemTheme,\n      messageSendKeyCombo,\n      messageTextSize,\n      timeFormat,\n    } = selectSharedSettings(global);\n\n    return {\n      messageSendKeyCombo,\n      messageTextSize,\n      timeFormat,\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransitionDeprecated(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransitionDeprecated(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme, selectThemeValues } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n    openSettingsScreen,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    openSettingsScreen({ screen: SettingsScreens.GeneralChatBackgroundColor });\n  }, []);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = selectThemeValues(global, theme) || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme, selectThemeValues } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = selectThemeValues(global, theme) || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useMultiClick from '../../../hooks/useMultiClick';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n    openSettingsScreen,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    openSettingsScreen({ screen: SettingsScreens.Experimental });\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{oldLang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{oldLang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{oldLang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{oldLang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{oldLang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{oldLang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{oldLang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{oldLang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{oldLang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{oldLang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{oldLang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{oldLang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{oldLang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{oldLang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{oldLang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{oldLang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{oldLang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyBirthday:\n        return <h3>{oldLang('PrivacyBirthday')}</h3>;\n      case SettingsScreens.PrivacyGifts:\n        return <h3>{lang('PrivacyGifts')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{oldLang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{oldLang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyMessages:\n        return <h3>{oldLang('PrivacyMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{oldLang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{oldLang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return <h3>{oldLang('AlwaysShareWith')}</h3>;\n\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return <h3>{oldLang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyGiftsAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{oldLang('AlwaysAllow')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyGiftsDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{oldLang('NeverAllow')}</h3>;\n\n      case SettingsScreens.PrivacyNoPaidMessages:\n        return <h3>{lang('RemoveFeeTitle')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('MenuAnimations')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{oldLang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{oldLang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{oldLang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{oldLang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{oldLang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{oldLang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{oldLang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{oldLang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{oldLang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{oldLang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{oldLang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{oldLang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{oldLang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{oldLang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{oldLang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{oldLang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{oldLang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{oldLang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {oldLang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {oldLang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {oldLang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openSettingsScreen({ screen: SettingsScreens.EditProfile })}\n              ariaLabel={oldLang('lng_settings_information')}\n            >\n              <Icon name=\"edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{oldLang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={oldLang('AccDescrGoBack')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={oldLang('lng_sure_logout')}\n        confirmLabel={oldLang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AccountSettings, LangCode, SharedSettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport { oldSetLanguage } from '../../../util/oldLangProvider';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n} & Pick<AccountSettings, 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>\n& Pick<SharedSettings, 'language' | 'languages'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    setSettingOption,\n    setSharedSettingOption,\n    openPremiumModal,\n    openSettingsScreen,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void oldSetLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSharedSettingOption({ language: langCode as LangCode });\n    });\n  });\n\n  const options = useMemo(() => {\n    if (!languages) return undefined;\n    const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n    const shortLangCode = currentLangCode.substr(0, 2);\n\n    return languages.map(({ langCode, nativeName, name }) => ({\n      value: langCode,\n      label: nativeName,\n      subLabel: name,\n      isLoading: langCode === selectedLanguage && isLoading,\n    } satisfies ItemPickerOption)).sort((a) => {\n      return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n    });\n  }, [isLoading, languages, selectedLanguage]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    openSettingsScreen({ screen: SettingsScreens.DoNotTranslate });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              narrow\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item settings-item-picker\">\n        <h4 className=\"settings-item-header\">\n          {lang('Localization.InterfaceLanguage')}\n        </h4>\n        {options ? (\n          <ItemPicker\n            items={options}\n            selectedValue={selectedLanguage}\n            forceRenderAllItems\n            onSelectedValueChange={handleChange}\n            itemInputType=\"radio\"\n            className=\"settings-picker\"\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n    const { language, languages } = selectSharedSettings(global);\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStarsAmount } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport { formatStarsAmount } from '../../../global/helpers/payments';\nimport {\n  selectIsGiveawayGiftsPurchaseAvailable,\n  selectIsPremiumPurchaseBlocked,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ChatExtra from '../../common/profile/ChatExtra';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n  isGiveawayAvailable?: boolean;\n  starsBalance?: ApiStarsAmount;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n  isGiveawayAvailable,\n  starsBalance,\n  onReset,\n}) => {\n  const {\n    loadMoreProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n    openGiftRecipientPicker,\n    openStarsBalanceModal,\n    openSettingsScreen,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadMoreProfilePhotos({ peerId: currentUserId, isPreload: true });\n    }\n  }, [currentUserId]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu self-profile\">\n        {currentUserId && (\n          <ProfileInfo\n            peerId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            isInSettings\n          />\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"settings\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.General })}\n        >\n          {lang('TelegramGeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.Performance })}\n        >\n          {lang('MenuAnimations')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.Notifications })}\n        >\n          {lang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.DataStorage })}\n        >\n          {lang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.Privacy })}\n        >\n          {lang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.Folders })}\n        >\n          {lang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.ActiveSessions })}\n        >\n          {lang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.Language })}\n        >\n          {lang('Language')}\n          <span className=\"settings-item__current-value\">{lang.languageInfo.nativeName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.Stickers })}\n        >\n          {lang('MenuStickers')}\n        </ListItem>\n      </div>\n      <div className=\"settings-main-menu\">\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {lang('TelegramPremium')}\n          </ListItem>\n        )}\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"gold\" size=\"big\" />}\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openStarsBalanceModal({})}\n        >\n          {lang('MenuStars')}\n          {Boolean(starsBalance) && (\n            <span className=\"settings-item__current-value\">\n              {formatStarsAmount(lang, starsBalance)}\n            </span>\n          )}\n        </ListItem>\n        {isGiveawayAvailable && (\n          <ListItem\n            icon=\"gift\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openGiftRecipientPicker()}\n          >\n            {lang('MenuSendGift')}\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"ask-support\"\n          narrow\n          onClick={openSupportDialog}\n        >\n          {lang('AskAQuestion')}\n        </ListItem>\n        <ListItem\n          icon=\"help\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: FAQ_URL })}\n        >\n          {lang('MenuTelegramFaq')}\n        </ListItem>\n        <ListItem\n          icon=\"privacy-policy\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: PRIVACY_URL })}\n        >\n          {lang('MenuPrivacyPolicy')}\n        </ListItem>\n      </div>\n      <ConfirmDialog\n        isOpen={isSupportDialogOpen}\n        confirmLabel={lang('OK')}\n        title={lang('AskAQuestion')}\n        textParts={lang('MenuAskText', undefined, { withNodes: true, renderTextFilters: ['br'] })}\n        confirmHandler={handleOpenSupport}\n        onClose={closeSupportDialog}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const isGiveawayAvailable = selectIsGiveawayGiftsPurchaseAvailable(global);\n    const starsBalance = global.stars?.balance;\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isGiveawayAvailable,\n      starsBalance,\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiNotifyPeerType, ApiPeerNotifySettings } from '../../../api/types';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  notifyDefaults?: Record<ApiNotifyPeerType, ApiPeerNotifySettings>;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  notifyDefaults,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: ApiNotifyPeerType,\n    setting: 'mute' | 'showPreviews',\n  ) => {\n    const currentIsMuted = Boolean(notifyDefaults?.[peerType]?.mutedUntil);\n    const currentShouldShowPreviews = Boolean(notifyDefaults?.[peerType]?.shouldShowPreviews);\n\n    updateNotificationSettings({\n      peerType,\n      isMuted: setting === 'mute' ? !e.target.checked : currentIsMuted,\n      shouldShowPreviews: setting === 'showPreviews' ? e.target.checked : currentShouldShowPreviews,\n    });\n  }, [notifyDefaults]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'users', 'mute');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'users', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'groups', 'mute');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'groups', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'channels', 'mute');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'channels', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('NotificationsWeb')}\n        </h4>\n        <Checkbox\n          label={lang('NotificationsWeb')}\n          subLabel={lang(hasWebNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label={lang('NotificationsOffline')}\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          subLabel={areOfflineNotificationsSupported\n            ? lang(hasPushNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')\n            : lang('SettingsOfflineNotificationUnsupported')}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label={lang('NotificationsSound')}\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          subLabel={lang(notifyDefaults?.users?.mutedUntil\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.users?.mutedUntil)}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!notifyDefaults?.users?.mutedUntil}\n          subLabel={lang(notifyDefaults?.users?.shouldShowPreviews\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.users?.shouldShowPreviews)}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(notifyDefaults?.groups?.mutedUntil\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.groups?.mutedUntil)}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!notifyDefaults?.groups?.mutedUntil}\n          subLabel={lang(notifyDefaults?.groups?.shouldShowPreviews\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.groups?.shouldShowPreviews)}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          subLabel={lang(notifyDefaults?.channels?.mutedUntil\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.channels?.mutedUntil)}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!notifyDefaults?.channels?.mutedUntil}\n          subLabel={lang(notifyDefaults?.channels?.shouldShowPreviews\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.channels?.shouldShowPreviews)}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\nimport type { RegularLangKey } from '../../../types/language';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED, IS_SNAP_EFFECT_SUPPORTED } from '../../../util/browser/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [RegularLangKey, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: RegularLangKey;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS: RegularLangKey[] = [\n  'SettingsPerformanceSliderLow',\n  'SettingsPerformanceSliderMedium',\n  'SettingsPerformanceSliderHigh',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS: RegularLangKey[] = [\n  'SettingsPerformanceSliderLow',\n  'SettingsPerformanceSliderCustom',\n  'SettingsPerformanceSliderHigh',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['SettingsPerformanceInterfaceAnimations', [\n    { key: 'pageTransitions', label: 'SettingsPerformancePageTransitions' },\n    { key: 'messageSendingAnimations', label: 'SettingsPerformanceSending' },\n    { key: 'mediaViewerAnimations', label: 'SettingsPerformanceMediaViewer' },\n    { key: 'messageComposerAnimations', label: 'SettingsPerformanceComposer' },\n    { key: 'contextMenuAnimations', label: 'SettingsPerformanceContextAnimation' },\n    { key: 'contextMenuBlur', label: 'SettingsPerformanceContextBlur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'SettingsPerformanceRightColumn' },\n    { key: 'snapEffect', label: 'SettingsPerformanceThanos' },\n  ]],\n  ['SettingsPerformanceStickers', [\n    { key: 'animatedEmoji', label: 'SettingsPerformanceAnimatedEmoji' },\n    { key: 'loopAnimatedStickers', label: 'SettingsPerformanceLoopStickers' },\n    { key: 'reactionEffects', label: 'SettingsPerformanceReactionEffects' },\n    { key: 'stickerEffects', label: 'SettingsPerformanceStickerEffects' },\n  ]],\n  ['SettingsPerformanceMediaAutoplay', [\n    { key: 'autoplayGifs', label: 'SettingsPerformanceAutoplayGif' },\n    { key: 'autoplayVideos', label: 'SettingsPerformanceAutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSharedSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n\n  const animationLevelOptions = useMemo(() => {\n    const options = animationLevelState === ANIMATION_LEVEL_CUSTOM\n      ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n      : ANIMATION_LEVEL_OPTIONS;\n\n    return options.map((option) => lang(option));\n  }, [animationLevelState, lang]);\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSharedSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, []);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsPerformanceSliderTitle')}\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsPerformanceSliderSubtitle')}\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => {\n                    if (key === 'snapEffect' && !IS_SNAP_EFFECT_SUPPORTED) return undefined;\n                    return (\n                      <Checkbox\n                        key={key}\n                        name={key}\n                        checked={performanceSettings[key]}\n                        label={lang(label)}\n                        disabled={disabled}\n                        onChange={handlePropertyChange}\n                      />\n                    );\n                  })}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport { SettingsScreens } from '../../../types';\n\nimport {\n  selectCanSetPasscode, selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n} from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  shouldChargeForMessages: boolean;\n  canDisplayChatInTitle?: boolean;\n  isCurrentUserFrozen?: boolean;\n  privacy: GlobalState['settings']['privacy'];\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  shouldNewNonContactPeersRequirePremium,\n  shouldChargeForMessages,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacy,\n  onReset,\n  isCurrentUserFrozen,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    setSharedSettingOption,\n    openSettingsScreen,\n  } = getActions();\n\n  useEffect(() => {\n    if (!isCurrentUserFrozen) {\n      loadBlockedUsers();\n      loadPrivacySettings();\n      loadContentSettings();\n      loadWebAuthorizations();\n    }\n  }, [isCurrentUserFrozen]);\n\n  useEffect(() => {\n    if (isActive && !isCurrentUserFrozen) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, isCurrentUserFrozen, loadGlobalPrivacySettings]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSharedSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    if (!setting) return oldLang('Loading');\n\n    const { visibility, shouldAllowPremium, botsPrivacy } = setting;\n\n    const isAllowBots = botsPrivacy === 'allow';\n    const isVisibilityEverybody = visibility === 'everybody';\n    const shouldShowBotsString = isAllowBots && !isVisibilityEverybody;\n\n    const blockCount = setting.blockChatIds.length + setting.blockUserIds.length;\n    const allowCount = setting.allowChatIds.length + setting.allowUserIds.length;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount && !isVisibilityEverybody) total.push(`+${allowCount}`);\n\n    const botPrivacyString = shouldShowBotsString ? lang('PrivacyValueBots') : '';\n    const totalString = lang.conjunction(total);\n\n    const exceptionString = [botPrivacyString, totalString].filter(Boolean).join(' ');\n    if (shouldShowBotsString && !isVisibilityEverybody) return exceptionString;\n\n    if (shouldAllowPremium) {\n      return oldLang(exceptionString ? 'ContactsAndPremium' : 'PrivacyPremium');\n    }\n\n    switch (visibility) {\n      case 'everybody':\n        return `${oldLang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${oldLang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${oldLang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"delete-user\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.PrivacyBlockedUsers })}\n        >\n          {oldLang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openSettingsScreen({\n              screen: hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            })}\n          >\n            <div className=\"multiline-item\">\n              <span className=\"title\">{oldLang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {oldLang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({\n            screen: hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          })}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {oldLang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openSettingsScreen({ screen: SettingsScreens.ActiveWebsites })}\n          >\n            {oldLang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>{oldLang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.PrivacyPhoneNumber })}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.PrivacyLastSeen })}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.lastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.PrivacyProfilePhoto })}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.profilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.PrivacyBio })}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.bio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.PrivacyBirthday })}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyBirthday')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.birthday)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.PrivacyGifts })}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{lang('PrivacyGifts')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.gifts)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.PrivacyForwarding })}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.forwards)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.PrivacyPhoneCall })}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          allowDisabledClick\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.PrivacyVoiceMessages })}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.voiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.PrivacyMessages })}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {shouldChargeForMessages ? lang('PrivacyPaidMessagesValue')\n                : shouldNewNonContactPeersRequirePremium\n                  ? oldLang('PrivacyMessagesContactsAndPremium')\n                  : oldLang('P2PEverybody')}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.PrivacyGroupChats })}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.chatInvite)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={oldLang('lng_settings_sensitive_disable_filtering')}\n            subLabel={oldLang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={oldLang('ArchiveAndMute')}\n            subLabel={oldLang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {oldLang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={oldLang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          shouldNewNonContactPeersRequirePremium, nonContactPeersPaidStars,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    const { canDisplayChatInTitle } = selectSharedSettings(global);\n    const shouldChargeForMessages = Boolean(nonContactPeersPaidStars);\n    const isCurrentUserFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      shouldNewNonContactPeersRequirePremium,\n      shouldChargeForMessages,\n      privacy,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n      isCurrentUserFrozen,\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterPeersByQuery({ ids: availableContactIds, query: search, type: 'user' })\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useOldLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        className=\"block-user-button\"\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <Icon name=\"add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../api/types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyBirthday:\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return 'birthday';\n    case SettingsScreens.PrivacyGifts:\n    case SettingsScreens.PrivacyGiftsAllowedContacts:\n    case SettingsScreens.PrivacyGiftsDeniedContacts:\n      return 'gifts';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n    case SettingsScreens.PrivacyNoPaidMessages:\n      return 'noPaidMessages';\n  }\n\n  return undefined;\n}\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiDisallowedGiftsSettings } from '../../../api/types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\nimport Switcher from '../../ui/Switcher';\n\ntype StateProps = {\n  disallowedGifts?: ApiDisallowedGiftsSettings;\n  isCurrentUserPremium: boolean;\n};\n\nconst SettingsAcceptedGift = ({\n  disallowedGifts, isCurrentUserPremium,\n}: StateProps) => {\n  const { showNotification, updateGlobalPrivacySettings } = getActions();\n\n  const lang = useLang();\n\n  const handleOpenTelegramPremiumModal = useLastCallback(() => {\n    showNotification({\n      message: lang('PrivacySubscribeToTelegramPremium'),\n      action: {\n        action: 'openPremiumModal',\n        payload: {},\n      },\n      actionText: { key: 'Open' },\n      icon: 'star',\n    });\n  });\n\n  const handleLimitedEditionChange = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      handleOpenTelegramPremiumModal();\n      return;\n    }\n\n    updateGlobalPrivacySettings({\n      disallowedGifts: {\n        ...disallowedGifts,\n        shouldDisallowLimitedStarGifts: !disallowedGifts?.shouldDisallowLimitedStarGifts || undefined,\n      },\n    });\n  });\n\n  const handleUnlimitedEditionChange = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      handleOpenTelegramPremiumModal();\n      return;\n    }\n    updateGlobalPrivacySettings({\n      disallowedGifts: {\n        ...disallowedGifts,\n        shouldDisallowUnlimitedStarGifts: !disallowedGifts?.shouldDisallowUnlimitedStarGifts || undefined,\n      },\n    });\n  });\n\n  const handleUniqueChange = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      handleOpenTelegramPremiumModal();\n      return;\n    }\n    updateGlobalPrivacySettings({\n      disallowedGifts: {\n        ...disallowedGifts,\n        shouldDisallowUniqueStarGifts: !disallowedGifts?.shouldDisallowUniqueStarGifts || undefined,\n      },\n    });\n  });\n\n  const handlePremiumSubscriptionChange = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      handleOpenTelegramPremiumModal();\n      return;\n    }\n    updateGlobalPrivacySettings({\n      disallowedGifts: {\n        ...disallowedGifts,\n        shouldDisallowPremiumGifts: !disallowedGifts?.shouldDisallowPremiumGifts || undefined,\n      },\n    });\n  });\n\n  return (\n    <div className=\"settings-item\">\n      <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('PrivacyAcceptedGiftTitle')}\n      </h4>\n      <ListItem onClick={handleLimitedEditionChange}>\n        <span>{lang('PrivacyGiftLimitedEdition')}</span>\n        <Switcher\n          id=\"limited_edition\"\n          label={disallowedGifts?.shouldDisallowLimitedStarGifts ? lang('PrivacyDisableLimitedEditionStarGifts')\n            : lang('PrivacyEnableLimitedEditionStarGifts')}\n          disabled={!isCurrentUserPremium}\n          checked={!isCurrentUserPremium ? true : !disallowedGifts?.shouldDisallowLimitedStarGifts}\n        />\n      </ListItem>\n      <ListItem onClick={handleUnlimitedEditionChange}>\n        <span>{lang('PrivacyGiftUnlimited')}</span>\n        <Switcher\n          id=\"unlimited\"\n          label={disallowedGifts?.shouldDisallowUnlimitedStarGifts ? lang('PrivacyDisableUnlimitedStarGifts')\n            : lang('PrivacyEnableUnlimitedStarGifts')}\n          disabled={!isCurrentUserPremium}\n          checked={!isCurrentUserPremium ? true : !disallowedGifts?.shouldDisallowUnlimitedStarGifts}\n        />\n      </ListItem>\n      <ListItem onClick={handleUniqueChange}>\n        <span>{lang('PrivacyGiftUnique')}</span>\n        <Switcher\n          id=\"unique\"\n          label={disallowedGifts?.shouldDisallowUniqueStarGifts ? lang('PrivacyDisableUniqueStarGifts')\n            : lang('PrivacyEnableUniqueStarGifts')}\n          disabled={!isCurrentUserPremium}\n          checked={!isCurrentUserPremium ? true : !disallowedGifts?.shouldDisallowUniqueStarGifts}\n        />\n      </ListItem>\n      <ListItem onClick={handlePremiumSubscriptionChange}>\n        <span>{lang('PrivacyGiftPremiumSubscription')}</span>\n        <Switcher\n          id=\"premium_subscription\"\n          label={disallowedGifts?.shouldDisallowPremiumGifts ? lang('PrivacyDisablePremiumGifts')\n            : lang('PrivacyEnablePremiumGifts')}\n          disabled={!isCurrentUserPremium}\n          checked={!isCurrentUserPremium ? true : !disallowedGifts?.shouldDisallowPremiumGifts}\n        />\n      </ListItem>\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('PrivacyAcceptedGiftInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          disallowedGifts,\n        },\n      },\n    } = global;\n\n    return {\n      disallowedGifts,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsAcceptedGift));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { PrivacyVisibility } from '../../../api/types';\n\nimport { selectIsCurrentUserPremium, selectShouldHideReadMarks } from '../../../global/selectors';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  visibility?: PrivacyVisibility;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  shouldHideReadMarks: boolean;\n};\n\nconst SettingsPrivacyLastSeen = ({\n  isCurrentUserPremium, shouldHideReadMarks, visibility,\n}: OwnProps & StateProps) => {\n  const { updateGlobalPrivacySettings, openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const canShowHideReadTime = visibility === 'nobody' || visibility === 'contacts';\n\n  const handleChangeShouldHideReadMarks = useLastCallback(\n    (isEnabled) => updateGlobalPrivacySettings({ shouldHideReadMarks: isEnabled }),\n  );\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    openPremiumModal({\n      initialSection: 'last_seen',\n    });\n  });\n\n  return (\n    <>\n      {canShowHideReadTime && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('HideReadTime')}\n            checked={shouldHideReadMarks}\n            onCheck={handleChangeShouldHideReadMarks}\n          />\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('HideReadTimeInfo'), ['br'])}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n          onClick={handleOpenPremiumModal}\n        >\n          {isCurrentUserPremium ? lang('PrivacyLastSeenPremiumForPremium') : lang('PrivacyLastSeenPremium')}\n        </ListItem>\n        <p\n          className=\"settings-item-description-larger premium-info\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n        >\n          {isCurrentUserPremium\n            ? lang('PrivacyLastSeenPremiumInfoForPremium')\n            : lang('PrivacyLastSeenPremiumInfo')}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldHideReadMarks: Boolean(selectShouldHideReadMarks(global)),\n    };\n  },\n)(SettingsPrivacyLastSeen));\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"Qvhl9Jjv\",\"fallbackPhoto\":\"Qvhl9Jjv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        narrow\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          narrow\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiPrivacySettings, BotsPrivacyType } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Switcher from '../../ui/Switcher';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\nimport SettingsAcceptedGift from './SettingsAcceptedGift';\nimport SettingsPrivacyLastSeen from './SettingsPrivacyLastSeen';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n  shouldDisplayGiftsButton?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  isPremiumRequired,\n  onReset,\n  shouldDisplayGiftsButton,\n  isCurrentUserPremium,\n}) => {\n  const { updateGlobalPrivacySettings, showNotification } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleShowGiftIconInChats = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('PrivacySubscribeToTelegramPremium'),\n        action: {\n          action: 'openPremiumModal',\n          payload: {},\n        },\n        actionText: { key: 'Open' },\n        icon: 'star',\n      });\n      return;\n    }\n    updateGlobalPrivacySettings({\n      shouldDisplayGiftsButton: !shouldDisplayGiftsButton,\n    });\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {screen === SettingsScreens.PrivacyGifts && (\n        <div className=\"settings-item\">\n          <ListItem onClick={handleShowGiftIconInChats}>\n            <span>{lang('PrivacyDisplayGiftsButton')}</span>\n            <Switcher\n              id=\"gift\"\n              disabled={!isCurrentUserPremium}\n              label={shouldDisplayGiftsButton ? lang('HideGiftsButton') : lang('DisplayGiftsButton')}\n              checked={shouldDisplayGiftsButton}\n            />\n          </ListItem>\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('PrivacyDisplayGiftIconInChats', {\n              icon: <Icon name=\"gift\" className=\"gift-icon\" />,\n              gift: lang('PrivacyDisplayGift'),\n            }, {\n              withNodes: true,\n            })}\n          </p>\n        </div>\n      )}\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        isPremiumRequired={isPremiumRequired}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {screen === SettingsScreens.PrivacyLastSeen && (\n        <SettingsPrivacyLastSeen visibility={primaryPrivacy?.visibility} />\n      )}\n      {screen === SettingsScreens.PrivacyGifts && (\n        <SettingsAcceptedGift />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  isPremiumRequired,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n}) {\n  const { setPrivacyVisibility, openSettingsScreen } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: oldLang('P2PEverybody') },\n      {\n        value: 'contacts',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={oldLang('P2PContacts')} />\n        ) : (\n          oldLang('P2PContacts')\n        ),\n        hidden: isPremiumRequired,\n      },\n    ];\n\n    if (hasNobody) {\n      options.push({\n        value: 'nobody',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={oldLang('P2PNobody')} />\n        ) : (\n          oldLang('P2PNobody')\n        ),\n        hidden: isPremiumRequired,\n      });\n    }\n    return options;\n  }, [oldLang, screen, isPremiumRequired]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyGifts:\n        return lang('PrivacyGiftsInfo');\n      case SettingsScreens.PrivacyLastSeen:\n        return oldLang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? oldLang('PrivacyPhoneInfo') : oldLang('PrivacyPhoneInfo3');\n      }\n      case SettingsScreens.PrivacyVoiceMessages:\n        return oldLang('PrivacyVoiceMessagesInfo');\n      default:\n        return undefined;\n    }\n  }, [oldLang, lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return oldLang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return oldLang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return oldLang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return oldLang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return oldLang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyBirthday:\n        return oldLang('PrivacyBirthdayTitle');\n      case SettingsScreens.PrivacyGifts:\n        return lang('PrivacyGiftsTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return oldLang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return oldLang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return oldLang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return oldLang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return oldLang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [oldLang, lang, screen]);\n\n  const prepareSubtitle = useLastCallback(\n    (userIds?: string[], chatIds?: string[], shouldAllowPremium?: boolean, botsPrivacy?: BotsPrivacyType) => {\n      const userIdsCount = userIds?.length || 0;\n      const chatIdsCount = chatIds?.length || 0;\n      const isAllowBots = botsPrivacy === 'allow';\n      const hasPeers = userIdsCount || chatIdsCount;\n\n      if (!hasPeers && !isAllowBots) {\n        return shouldAllowPremium ? oldLang('PrivacyPremium') : oldLang('EditAdminAddUsers');\n      } else if (shouldAllowPremium) {\n        return oldLang('ContactsAndPremium');\n      }\n\n      const userCountString = userIdsCount > 0 ? oldLang('Users', userIdsCount) : undefined;\n      const chatCountString = chatIdsCount > 0 ? oldLang('Chats', chatIdsCount) : undefined;\n\n      const botPrivacyString = isAllowBots ? lang('PrivacyValueBots') : '';\n      const peersString = lang.conjunction([userCountString, chatCountString].filter(Boolean));\n\n      return [botPrivacyString, peersString].filter(Boolean).join(' ');\n    },\n  );\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(\n      privacy?.allowUserIds,\n      privacy?.allowChatIds,\n      privacy?.shouldAllowPremium,\n      privacy?.botsPrivacy,\n    );\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayAllowedContacts;\n      case SettingsScreens.PrivacyGifts:\n        return SettingsScreens.PrivacyGiftsAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayDeniedContacts;\n      case SettingsScreens.PrivacyGifts:\n        return SettingsScreens.PrivacyGiftsDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={oldLang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {!isPremiumRequired && (primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                openSettingsScreen({ screen: allowedContactsScreen });\n              }}\n            >\n              <div className=\"multiline-item full-size\">\n                <span className=\"title\">{oldLang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                openSettingsScreen({ screen: deniedContactsScreen });\n              }}\n            >\n              <div className=\"multiline-item full-size\">\n                <span className=\"title\">{oldLang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n      {isPremiumRequired && <PremiumStatusItem />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: {\n        privacy,\n        byKey: {\n          shouldDisplayGiftsButton,\n        },\n      },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyBirthday:\n        primaryPrivacy = privacy.birthday;\n        break;\n\n      case SettingsScreens.PrivacyGifts:\n        primaryPrivacy = privacy.gifts;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      isPremiumRequired: screen === SettingsScreens.PrivacyVoiceMessages && !selectIsCurrentUserPremium(global),\n      shouldDisplayGiftsButton,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  isChatChannel, isDeletedUser,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport { CUSTOM_PEER_PREMIUM } from '../../../util/objects/customPeer';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  withPremiumCategory?: boolean;\n  withMiniAppsCategory?: boolean;\n  usersOnly?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst PREMIUM_CATEGORY = [CUSTOM_PEER_PREMIUM];\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  withPremiumCategory,\n  withMiniAppsCategory,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  usersOnly = false,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const customPeerBots : UniqueCustomPeer = useMemo(() => {\n    return {\n      isCustomPeer: true,\n      type: 'bots',\n      title: lang('PrivacyValueBots'),\n      avatarIcon: 'bots',\n      isAvatarSquare: true,\n      peerColorId: 6,\n    };\n  }, [lang]);\n\n  const miniAppsCategory = useMemo(() => {\n    return [customPeerBots];\n  }, [customPeerBots]);\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const selectedCategoryTypes = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n    if (settings.shouldAllowPremium) { return [CUSTOM_PEER_PREMIUM.type]; }\n    if (settings.botsPrivacy === 'allow' && isAllowList) { return [customPeerBots.type]; }\n    return [];\n  }, [settings, isAllowList, customPeerBots]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n  const [newSelectedCategoryTypes, setNewSelectedCategoryTypes] = useState<CustomPeerType[]>(selectedCategoryTypes);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) {\n      setNewSelectedContactIds(selectedContactIds);\n      setNewSelectedCategoryTypes(selectedCategoryTypes);\n    }\n  }, [isActive, selectedCategoryTypes, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => {\n        const chat = chatsById[chatId];\n        const user = usersById[chatId];\n        const isDeleted = user && isDeletedUser(user);\n        const isChannel = chat && isChatChannel(chat);\n        return (!usersOnly || user)\n          && chatId !== currentUserId\n          && chatId !== SERVICE_NOTIFICATIONS_USER_ID\n          && !isChannel && !isDeleted;\n      });\n\n    const filteredChats = filterPeersByQuery({ ids: chatIds, query: searchQuery });\n\n    // Show only relevant items\n    if (searchQuery) return filteredChats;\n\n    return unique([\n      ...selectedContactIds,\n      ...chatIds,\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, searchQuery, currentUserId, usersOnly]);\n\n  const handleSelectedCategoriesChange = useCallback((value: CustomPeerType[]) => {\n    setNewSelectedCategoryTypes(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n      isPremiumAllowed: newSelectedCategoryTypes.includes(CUSTOM_PEER_PREMIUM.type) || undefined,\n      botsPrivacy: (!withMiniAppsCategory) ? 'none'\n        : (newSelectedCategoryTypes.includes(customPeerBots.type) ? 'allow' : 'disallow'),\n    });\n\n    onReset();\n  }, [\n    isAllowList,\n    withMiniAppsCategory,\n    newSelectedCategoryTypes,\n    newSelectedContactIds,\n    onReset,\n    screen,\n    customPeerBots,\n  ]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function getCustomCategory() {\n    if (withPremiumCategory) return PREMIUM_CATEGORY;\n    if (withMiniAppsCategory && isAllowList) return miniAppsCategory;\n    return undefined;\n  }\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <PeerPicker\n        categories={getCustomCategory()}\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        selectedCategories={newSelectedCategoryTypes}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? oldLang('AlwaysAllowPlaceholder') : oldLang('NeverAllowPlaceholder')}\n        categoryPlaceholderKey=\"PrivacyUserTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onSelectedCategoriesChange={handleSelectedCategoriesChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        itemInputType=\"checkbox\"\n        withDefaultPadding\n        withStatus\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? oldLang('AlwaysAllow') : oldLang('NeverAllow')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return privacy.birthday;\n    case SettingsScreens.PrivacyGiftsAllowedContacts:\n    case SettingsScreens.PrivacyGiftsDeniedContacts:\n      return privacy.gifts;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n    case SettingsScreens.PrivacyNoPaidMessages:\n      return privacy.noPaidMessages;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { type: 'emoji', emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n        withIcon\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { config, reactions } = global;\n\n    return {\n      availableReactions: reactions.availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { AccountSettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<AccountSettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n    openSettingsScreen,\n  } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.CustomEmoji })}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openSettingsScreen({ screen: SettingsScreens.QuickReaction })}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.reactions.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const { openSettingsScreen } = getActions();\n  const lang = useOldLang();\n\n  const handleClick = useLastCallback(() => {\n    openSettingsScreen({ screen: SettingsScreens.Privacy });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji, selectTabState } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n  recoveryEmail: string;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n  recoveryEmail,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n        {recoveryEmail && (\n          <p className=\"settings-item-description mb-3\" dir=\"auto\">\n            {lang('TwoStepAuth.ConfirmEmailDescription', recoveryEmail)}\n          </p>\n        )}\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const tabState = selectTabState(global);\n  const recoveryEmail = tabState.recoveryEmail;\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n    recoveryEmail,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const { openSettingsScreen } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.TwoFaChangePasswordCurrent })}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.TwoFaTurnOff })}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openSettingsScreen({ screen: SettingsScreens.TwoFaRecoveryEmailCurrentPassword })}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n        {type === 'email' && (\n          <p className=\"settings-item-description mb-3\" dir=\"auto\">\n            {lang('RecoveryEmailSubtitle')}\n          </p>\n        )}\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useLang from '../../../../hooks/useLang';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  errorKey,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n    openSettingsScreen,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        openSettingsScreen({ screen: SettingsScreens.TwoFaNewPasswordEmailCode });\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        openSettingsScreen({ screen: SettingsScreens.TwoFaRecoveryEmailCode });\n      }\n    }\n  }, [currentScreen, waitingEmailCodeLength, openSettingsScreen]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    openSettingsScreen({ screen: SettingsScreens.TwoFaNewPassword });\n  }, [dispatch, openSettingsScreen]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    openSettingsScreen({ screen: SettingsScreens.TwoFaNewPasswordConfirm });\n  }, [dispatch, openSettingsScreen]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    openSettingsScreen({ screen: SettingsScreens.TwoFaNewPasswordHint });\n  }, [openSettingsScreen]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    openSettingsScreen({ screen: SettingsScreens.TwoFaNewPasswordEmail });\n  }, [dispatch, openSettingsScreen]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        openSettingsScreen({ screen: SettingsScreens.TwoFaCongratulations });\n      },\n    });\n  }, [dispatch, state, updatePassword, openSettingsScreen]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        openSettingsScreen({ screen: SettingsScreens.TwoFaChangePasswordNew });\n      },\n    });\n  }, [checkPassword, dispatch, openSettingsScreen]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    openSettingsScreen({ screen: SettingsScreens.TwoFaChangePasswordConfirm });\n  }, [dispatch, openSettingsScreen]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    openSettingsScreen({ screen: SettingsScreens.TwoFaChangePasswordHint });\n  }, [openSettingsScreen]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        openSettingsScreen({ screen: SettingsScreens.TwoFaCongratulations });\n      },\n    });\n  }, [dispatch, state, updatePassword, openSettingsScreen]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        openSettingsScreen({ screen: SettingsScreens.Privacy });\n      },\n    });\n  }, [clearPassword, openSettingsScreen]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        openSettingsScreen({ screen: SettingsScreens.TwoFaRecoveryEmail });\n      },\n    });\n  }, [checkPassword, dispatch, openSettingsScreen]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        openSettingsScreen({ screen: SettingsScreens.TwoFaCongratulations });\n      },\n    });\n  }, [dispatch, state, updateRecoveryEmail, openSettingsScreen]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={oldLang('PleaseEnterPassword')}\n          submitLabel={oldLang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={oldLang('PleaseReEnterPassword')}\n          submitLabel={oldLang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={oldLang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          placeholder={oldLang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={oldLang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={oldLang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={oldLang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={oldLang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/browser/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMarkScrolled from '../../../hooks/useMarkScrolled/useMarkScrolled';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport PrivacyMessages from './PrivacyMessages';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_BIRTHDAY_SCREENS = [\n  SettingsScreens.PrivacyBirthdayAllowedContacts,\n  SettingsScreens.PrivacyBirthdayDeniedContacts,\n];\n\nconst PRIVACY_GIFTS_SCREENS = [\n  SettingsScreens.PrivacyGiftsAllowedContacts,\n  SettingsScreens.PrivacyGiftsDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nconst PRIVACY_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyNoPaidMessages,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal, openSettingsScreen } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  useMarkScrolled({\n    containerRef,\n    selector: '.settings-content',\n  }, [currentScreen]);\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        openSettingsScreen({ screen: SettingsScreens.FoldersCreateFolder });\n      } else {\n        openSettingsScreen({ screen: SettingsScreens.FoldersEditFolder });\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, activeScreen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBirthday]: PRIVACY_BIRTHDAY_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGifts]: PRIVACY_GIFTS_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyMessages]: PRIVACY_MESSAGES_SCREENS.includes(activeScreen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(activeScreen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(activeScreen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(activeScreen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(activeScreen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).map(Number).includes(activeScreen)\n      || Object.values(privacyAllowScreens).includes(true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            isActive={isScreenActive\n              || activeScreen === SettingsScreens.GeneralChatBackgroundColor\n              || activeScreen === SettingsScreens.GeneralChatBackground\n              || activeScreen === SettingsScreens.QuickReaction\n              || activeScreen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || activeScreen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            isActive={isScreenActive || activeScreen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyBirthday:\n      case SettingsScreens.PrivacyGifts:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyGiftsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      case SettingsScreens.PrivacyNoPaidMessages:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            usersOnly={currentScreen === SettingsScreens.PrivacyNoPaidMessages}\n            withPremiumCategory={currentScreen === SettingsScreens.PrivacyGroupChatsAllowedContacts}\n            withMiniAppsCategory={currentScreen === SettingsScreens.PrivacyGiftsAllowedContacts}\n            screen={currentScreen}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyGiftsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyMessages:\n        return (\n          <PrivacyMessages\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={activeScreen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(\n    isScreenActive: boolean,\n    _isFrom: boolean,\n    _currentKey: SettingsScreens,\n    activeKey: SettingsScreens,\n  ) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, activeKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      ref={containerRef}\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { sortUserIds } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterPeersByQuery({ ids: contactIds, query: filter, type: 'user' });\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <Icon name=\"add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { isUserBot } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localPeerIds?: string[];\n  globalPeerIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localPeerIds,\n  globalPeerIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds\n      ? filterPeersByQuery({ ids: localContactIds, query: searchQuery, type: 'user' }) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localPeerIds || []),\n        ...(globalPeerIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n\n        return user && !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, searchQuery, localPeerIds, globalPeerIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <PeerPicker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n          withDefaultPadding\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <Icon name=\"arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: localPeerIds } = localResults || {};\n\n    return {\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalPeerIds,\n      localPeerIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst MAX_MEMBERS_FOR_GENERATE_CHAT_NAME = 4;\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  useEffect(() => {\n    if (isChannel) {\n      return;\n    }\n    if (!memberIds.length || memberIds.length > MAX_MEMBERS_FOR_GENERATE_CHAT_NAME) {\n      setTitle('');\n      return;\n    }\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const memberFirstNames = [global.currentUserId!, ...memberIds]\n      .map((userId) => getUserFirstOrLastName(usersById[userId]))\n      .filter(Boolean);\n    const generatedChatName = memberFirstNames.slice(0, -1).join(', ')\n      + lang('CreateGroup.PeersTitleLastDelimeter')\n      + memberFirstNames[memberFirstNames.length - 1];\n    setTitle(generatedChatName);\n  }, [isChannel, memberIds, lang]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/browser/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onReset,\n}) => {\n  const { openLeftColumnContent } = getActions();\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    openLeftColumnContent({\n      contentKey: isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2,\n    });\n  }, [isChannel]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport Icon from '../common/icons/Icon';\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  foldersDispatch: FolderEditDispatch;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransitionDeprecated(!isForumPanelOpen, undefined, undefined, false);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransitionDeprecated(\n    isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY,\n  );\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          isMainList\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatFolderModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useOldLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID)\n      .map((folderId) => {\n        const folder = foldersById ? foldersById[folderId] : undefined;\n        const label = folder ? renderTextWithEntities({\n          text: folder.title.text,\n          entities: folder.title.entities,\n          noCustomEmojiPlayback: folder.noTitleAnimations,\n        }) : '';\n        return {\n          label,\n          value: String(folderId),\n        };\n      }) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className={buildClassName(styles.root, 'delete')}\n      contentClassName={styles.modalContent}\n      title={lang('FilterAddTo')}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <CheckboxGroup\n          options={folders}\n          selected={selectedFolderIds}\n          onChange={setSelectedFolderIds}\n        />\n      </div>\n      <div className={styles.footer}>\n        <div className=\"dialog-buttons\">\n          <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n            {lang('FilterAddTo')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContent\":\"EG5lPWY1\",\"root\":\"_fJBBCCE\",\"main\":\"heYMHiUt\",\"footer\":\"_jtqAaUU\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useOldLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let mutedUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      mutedUntil = MAX_INT_32;\n    } else {\n      mutedUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, mutedUntil });\n    } else {\n      updateChatMutedState({ chatId, mutedUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        className=\"dialog-checkbox-group\"\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeerPaidMessagesStars,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePreviousDeprecated(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat, chatFullInfo) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n        && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n    const paidMessagesStars = chatId ? selectPeerPaidMessagesStars(global, chatId) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: !paidMessagesStars && selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nZYT4vJ3\",\"sets\":\"JzkmXjFF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiSticker } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSetIds,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useOldLang();\n\n  const customEmojiSets = useMemo(() => {\n    return customEmojiSetIds?.map((id) => getGlobal().stickers.setsById[id]);\n  }, [customEmojiSetIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePreviousDeprecated(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useLastCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => {\n          return (\n            <StickerSetCard\n              key={customEmojiSet.id}\n              className={styles.setCard}\n              stickerSet={customEmojiSet}\n              onClick={handleSetClick}\n              observeIntersection={observeIntersectionForCovers}\n              noPlay={!canPlayAnimatedEmojis}\n            />\n          );\n        })}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiBotCommand, ApiChat, ApiDisallowedGifts,\n} from '../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  getIsSavedDialog,\n  isChatChannel,\n  isChatGroup,\n  isSystemBot,\n  isUserId,\n  isUserRightBanned,\n} from '../../global/helpers';\nimport { getIsChatMuted } from '../../global/helpers/notifications';\nimport {\n  selectBot,\n  selectCanGift,\n  selectCanManage,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsRightColumnShown,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTabState,\n  selectTopic,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canViewMonetization?: boolean;\n  canShowBoostModal?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  botPrivacyPolicyUrl?: string;\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  isForumAsMessages?: true;\n  canAddContact?: boolean;\n  canDeleteChat?: boolean;\n  canReportChat?: boolean;\n  canGift?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n  isChatWithSelf?: boolean;\n  savedDialog?: ApiChat;\n  disallowedGifts?: ApiDisallowedGifts;\n  isAccountFrozen?: boolean;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  botPrivacyPolicyUrl,\n  withForumActions,\n  isTopic,\n  isForum,\n  isForumAsMessages,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canReportChat,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canDeleteChat,\n  canGift,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  isChatWithSelf,\n  savedDialog,\n  canShowBoostModal,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n  disallowedGifts,\n  isAccountFrozen,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    openFrozenAccountModal,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openMonetizationStatistics,\n    openBoostStatistics,\n    openGiftModal,\n    openThreadWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    openUrl,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n    setViewForumAsMessages,\n    openBoostModal,\n    reportMessages,\n    showNotification,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransitionDeprecated(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    return Object.values(disallowedGifts).every(Boolean);\n  }, [disallowedGifts]);\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      setIsMenuOpen(false);\n      reportMessages({ chatId, messageIds: [] });\n    }\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      onClose();\n    } else {\n      setIsDeleteModalOpen(true);\n    }\n    setIsMenuOpen(false);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openThreadWithInfo({ chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      sendBotCommand({ command: '/start' });\n    }\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      restartBot({ chatId });\n    }\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      updateChatMutedState({ chatId, isMuted: false });\n    }\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      closeMenu();\n    } else {\n      markRenderMuteModal();\n      setIsMuteModalOpen(true);\n    }\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      openCreateTopicPanel({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    }\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      toggleManagement({ force: true });\n      setShouldCloseFast(!isRightColumnShown);\n    }\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      openEditTopicPanel({ chatId, topicId: Number(threadId) });\n      setShouldCloseFast(!isRightColumnShown);\n    }\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    if (areAllGiftsDisallowed && chat) {\n      showNotification({ message: lang('SendDisallowError') });\n      return;\n    }\n    openGiftModal({ forUserId: chatId });\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      openGiftModal({ forUserId: chatId });\n    }\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      openAddContactDialog({ userId: chatId });\n    }\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      onSubscribeChannel();\n    }\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    }\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      requestMasterAndRequestCall({ userId: chatId });\n    }\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleMonetizationClick = useLastCallback(() => {\n    openMonetizationStatistics({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else if (canViewBoosts) {\n      openBoostStatistics({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    } else {\n      openBoostModal({ chatId });\n    }\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      enterMessageSelectMode();\n    }\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      blockUser({ userId: chatId });\n    }\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      unblockUser({ userId: chatId });\n    }\n    closeMenu();\n  });\n\n  useEffect(disableScrolling, []);\n\n  const botButtons = useMemo(() => {\n    const commandButtons = botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {oldLang(cmd.label)}\n        </MenuItem>\n      );\n    });\n\n    const hasPrivacyCommand = botCommands?.some(({ command }) => command === 'privacy');\n\n    const privacyButton = isBot && (\n      <MenuItem\n        icon=\"privacy-policy\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          if (hasPrivacyCommand && !botPrivacyPolicyUrl) {\n            sendBotCommand({ command: '/privacy' });\n          } else {\n            openUrl({ url: botPrivacyPolicyUrl || oldLang('BotDefaultPrivacyPolicy') });\n          }\n          closeMenu();\n        }}\n      >\n        {oldLang('BotPrivacyPolicy')}\n      </MenuItem>\n    );\n\n    return [...commandButtons || [], privacyButton].filter(Boolean);\n  }, [botCommands, oldLang, botPrivacyPolicyUrl, isBot]);\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (savedDialog) {\n      return oldLang('Delete');\n    }\n\n    if (isPrivate) {\n      return oldLang('DeleteChatUser');\n    }\n\n    if (canDeleteChat) {\n      return oldLang('GroupInfo.DeleteAndExit');\n    }\n\n    if (isChannel) {\n      return oldLang('LeaveChannel');\n    }\n\n    return oldLang('Group.LeaveGroup');\n  }, [canDeleteChat, chat, isChannel, isPrivate, savedDialog, oldLang]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {oldLang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {oldLang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? oldLang('lng_context_view_topic') : oldLang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {oldLang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {oldLang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {oldLang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? oldLang('SubscribeRequests') : oldLang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && !isForumAsMessages && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {oldLang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {oldLang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {oldLang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canShowBoostModal && !canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {oldLang(isChannel ? 'BoostingBoostChannelMenu' : 'BoostingBoostGroupMenu')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {oldLang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {oldLang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {oldLang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {oldLang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {oldLang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {oldLang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {oldLang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {oldLang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {oldLang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {oldLang('Statistics')}\n            </MenuItem>\n          )}\n          {isChannel && canViewMonetization && (\n            <MenuItem\n              icon=\"cash-circle\"\n              onClick={handleMonetizationClick}\n            >\n              {oldLang('lng_channel_earn_title')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {oldLang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {oldLang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGift && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftClick}\n            >\n              {oldLang('ProfileSendAGift')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? oldLang('BotRestart') : oldLang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isChatWithSelf && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? oldLang('Unblock') : oldLang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {deleteTitle}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={savedDialog || chat}\n            isSavedDialog={Boolean(savedDialog)}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n    const canReportChat = isMainThread && !user && (isChatChannel(chat) || isChatGroup(chat));\n\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGift = selectCanGift(global, chatId);\n\n    const topic = selectTopic(global, chatId, threadId);\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n    const savedDialog = isSavedDialog ? selectChat(global, String(threadId)) : undefined;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      chat,\n      isMuted: getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      isForumAsMessages: chat?.isForumAsMessages,\n      canAddContact,\n      canDeleteChat: getCanDeleteChat(chat),\n      canReportChat,\n      canGift,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      botPrivacyPolicyUrl: chatBot ? userFullInfo?.botInfo?.privacyPolicyUrl : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n      isChatWithSelf,\n      savedDialog,\n      disallowedGifts: userFullInfo?.disallowedGifts,\n      isAccountFrozen,\n    };\n  },\n)(HeaderMenuContainer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vv5ppXel\",\"active\":\"FVgqrSSK\",\"info\":\"DboxqiZd\",\"topRow\":\"Ymu2m1PR\",\"meta\":\"A2rsvUBm\",\"subtitle\":\"qUzmwaIn\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { getMessageSenderName } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport MessageSummary from '../../common/MessageSummary';\n\nimport styles from './MiddleSearchResult.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  message: ApiMessage;\n  senderPeer?: ApiPeer;\n  messageChat?: ApiChat;\n  shouldShowChat?: boolean;\n  query?: string;\n  className?: string;\n  onClick: (message: ApiMessage) => void;\n};\n\nconst TRUNCATE_LENGTH = 200;\n\nconst MiddleSearchResult = ({\n  isActive,\n  message,\n  senderPeer,\n  messageChat,\n  shouldShowChat,\n  query,\n  className,\n  onClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hiddenForwardTitle = message.forwardInfo?.hiddenUserName;\n\n  const peer = shouldShowChat ? messageChat : senderPeer;\n\n  const senderName = shouldShowChat ? getMessageSenderName(lang, message.chatId, senderPeer) : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(message);\n  });\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex={0}\n      className={buildClassName(styles.root, isActive && styles.active, className)}\n      onClick={handleClick}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={peer}\n        text={hiddenForwardTitle}\n        size=\"medium\"\n      />\n      <div className={styles.info}>\n        <div className={styles.topRow}>\n          {(peer && <FullNameTitle peer={peer} withEmojiStatus />) || hiddenForwardTitle}\n          <LastMessageMeta className={styles.meta} message={message} />\n        </div>\n        <div className={styles.subtitle} dir=\"auto\">\n          {senderName && (\n            <>\n              <span className=\"sender-name\">{renderText(senderName)}</span>\n              <span className=\"colon\">:</span>\n            </>\n          )}\n          <MessageSummary message={message} highlight={query} truncateLength={TRUNCATE_LENGTH} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MiddleSearchResult);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FTMljUuX\",\"header\":\"OvmjSMwA\",\"active\":\"DEIUzXQd\",\"avatar\":\"mp1PmoMq\",\"input\":\"z2K8Q7ib\",\"mobile\":\"u0fb78AA\",\"focused\":\"dqF8dYNx\",\"withDropdown\":\"AqhBggrp\",\"adaptSearchBorders\":\"Q9RZQaTu\",\"dropdown\":\"MFGvbICO\",\"dropdownHidden\":\"Alee0CKy\",\"results\":\"RtfTOE72\",\"placeholder\":\"O1HoZFge\",\"separator\":\"_Yy43QLl\",\"savedTags\":\"BcvAfv1E\",\"wrap\":\"JkESCST6\",\"searchTags\":\"rO3pH3LI\",\"savedSearchTag\":\"qA4gov4D\",\"hash\":\"q5NOmUAM\",\"searchTypes\":\"rVYZG__K\",\"searchType\":\"nE1Xwoo7\",\"selectedType\":\"i29dP8iT\",\"footer\":\"jyS1l9yn\",\"keyboard-visible\":\"ao05jKHW\",\"keyboardVisible\":\"ao05jKHW\",\"counter\":\"NmmL_cO3\",\"mobileNavigation\":\"dLO1hlHU\",\"navigationButton\":\"Z4vLAlsu\",\"navigationDisabled\":\"IqA7R2xO\",\"jumpIn\":\"n9kXbTu6\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiReaction, ApiReactionKey, ApiSavedReactionTag,\n} from '../../../api/types';\nimport type {\n  CustomPeer, MiddleSearchParams, MiddleSearchType, ThreadId,\n} from '../../../types';\n\nimport { ANONYMOUS_USER_ID } from '../../../config';\nimport { requestMeasure, requestMutation, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getIsSavedDialog, getReactionKey, isSameReaction, isSystemBot,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectCurrentMiddleSearch,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport { IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getDayStartAt } from '../../../util/dates/dateFormat';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { getSearchResultKey, parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { debounce, fastRaf } from '../../../util/schedulers';\n\nimport { useClickOutside } from '../../../hooks/events/useOutsideClick';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport SavedTagButton from '../message/reactions/SavedTagButton';\nimport MiddleSearchResult from './MiddleSearchResult';\n\nimport styles from './MiddleSearch.module.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: ThreadId;\n  requestedQuery?: string;\n  savedTags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  savedTag?: ApiReaction;\n  totalCount?: number;\n  lastSearchQuery?: string;\n  foundIds?: SearchResultKey[];\n  isHistoryCalendarOpen?: boolean;\n  isCurrentUserPremium?: boolean;\n  isSavedMessages?: boolean;\n  fetchingQuery?: string;\n  isHashtagQuery?: boolean;\n  searchType?: MiddleSearchType;\n  currentUserId?: string;\n};\n\nconst CHANNELS_PEER: CustomPeer = {\n  isCustomPeer: true,\n  avatarIcon: 'channel-filled',\n  titleKey: 'SearchPublicPosts',\n};\nconst FOCUSED_SEARCH_TRIGGER_OFFSET = 5;\nconst HIDE_TIMEOUT = 200;\nconst RESULT_ITEM_CLASS_NAME = 'MiddleSearchResult';\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MiddleSearch: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  requestedQuery,\n  savedTags,\n  savedTag,\n  totalCount,\n  lastSearchQuery,\n  foundIds,\n  isHistoryCalendarOpen,\n  isCurrentUserPremium,\n  isSavedMessages,\n  fetchingQuery,\n  isHashtagQuery,\n  searchType = 'chat',\n  currentUserId,\n}) => {\n  const {\n    updateMiddleSearch,\n    resetMiddleSearch,\n    performMiddleSearch,\n    focusMessage,\n    closeMiddleSearch,\n    openHistoryCalendar,\n    openPremiumModal,\n    loadSavedReactionTags,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldCancelSearchRef = useRef(false);\n\n  const { isMobile } = useAppLayout();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [query, setQuery] = useState(requestedQuery || '');\n  const [focusedIndex, setFocusedIndex] = useState(0);\n  const canFocusNewer = foundIds && focusedIndex > 0;\n  const canFocusOlder = foundIds && focusedIndex < foundIds.length - 1;\n\n  const [isFullyHidden, setIsFullyHidden] = useState(!isActive);\n  const hiddenTimerRef = useRef<number>();\n  const maybeLongPressActiveRef = useRef(true);\n\n  const [isFocused, markFocused, markBlurred] = useFlag();\n  const [isViewAsList, setIsViewAsList] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    if (maybeLongPressActiveRef.current) return;\n    // Ignore clicks inside modals\n    if ((event.target as HTMLElement).closest('.Modal')) return;\n    markBlurred();\n  });\n  useClickOutside([ref], handleClickOutside);\n\n  const hasResultsContainer = Boolean((query && foundIds) || isHashtagQuery);\n  const isOnlyHash = isHashtagQuery && !query;\n  const areResultsEmpty = Boolean(query && foundIds && !foundIds.length && !isLoading && !isOnlyHash);\n  const hasResultsPlaceholder = areResultsEmpty || isOnlyHash;\n  const isNonFocusedDropdownForced = searchType === 'myChats' || searchType === 'channels';\n  const hasResultsDropdown = isActive && (isViewAsList || !isMobile) && (isFocused || isNonFocusedDropdownForced)\n    && Boolean(\n      hasResultsContainer || hasResultsPlaceholder || savedTags,\n    );\n\n  const hasQueryData = Boolean((query && !isOnlyHash) || savedTag);\n  const hasNavigationButtons = searchType === 'chat' && Boolean(foundIds?.length);\n\n  const handleClose = useLastCallback(() => {\n    closeMiddleSearch();\n  });\n\n  const focusInput = useLastCallback(() => {\n    requestMeasure(() => {\n      inputRef.current?.focus();\n    });\n  });\n\n  const blurInput = useLastCallback(() => {\n    inputRef.current?.blur();\n  });\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Reset focus on query result\n  useEffect(() => {\n    setFocusedIndex(-1);\n  }, [lastSearchQuery]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n      setIsViewAsList(true);\n      setFocusedIndex(0);\n      setQuery('');\n      hiddenTimerRef.current = window.setTimeout(() => setIsFullyHidden(true), HIDE_TIMEOUT);\n    } else {\n      setIsFullyHidden(false);\n      clearTimeout(hiddenTimerRef.current);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (!requestedQuery || !chat?.id) return;\n    setQuery(requestedQuery);\n    updateMiddleSearch({ chatId: chat.id, threadId, update: { requestedQuery: undefined } });\n    setIsLoading(true);\n\n    requestNextMutation(() => {\n      const input = inputRef.current;\n      if (!input) return;\n      focusEditableElement(input, true, true);\n      markFocused();\n    });\n  }, [chat?.id, requestedQuery, threadId]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (isActive !== prevIsActive && !query && lastSearchQuery) {\n      setQuery(lastSearchQuery); // Restore query when returning back\n    }\n  }, [isActive, lastSearchQuery, query]);\n\n  useEffectWithPrevDeps(([prevIsCalendarOpen]) => {\n    if (!isActive || prevIsCalendarOpen === isHistoryCalendarOpen) return;\n    if (isHistoryCalendarOpen) {\n      blurInput();\n      markBlurred();\n    } else {\n      focusInput();\n    }\n  }, [isHistoryCalendarOpen, isActive]);\n\n  const handleReset = useLastCallback(() => {\n    if (!query?.length && !savedTag) {\n      handleClose();\n      return;\n    }\n\n    setQuery('');\n    setIsLoading(false);\n    resetMiddleSearch();\n    focusInput();\n  });\n\n  useEffect(() => (isActive ? captureEscKeyListener(handleReset) : undefined), [isActive, handleClose]);\n\n  const savedTagsArray = useMemo(() => {\n    if (!savedTags) return undefined;\n    return Object.values(savedTags);\n  }, [savedTags]);\n\n  const hasSavedTags = Boolean(savedTagsArray?.length);\n  const areSavedTagsDisabled = hasSavedTags && !isCurrentUserPremium;\n\n  useEffect(() => {\n    if (isSavedMessages && isActive) loadSavedReactionTags();\n  }, [isSavedMessages, isActive]);\n\n  const handleSearch = useLastCallback(() => {\n    const chatId = chat?.id;\n    if (!chatId) {\n      return;\n    }\n\n    runDebouncedForSearch(() => {\n      if (shouldCancelSearchRef.current) return;\n      performMiddleSearch({ chatId, threadId, query });\n    });\n  });\n\n  const handleQueryChange = useLastCallback((newQuery: string) => {\n    shouldCancelSearchRef.current = false;\n\n    if (newQuery.startsWith('#') && !isHashtagQuery) {\n      updateMiddleSearch({ chatId: chat!.id, threadId, update: { isHashtag: true } });\n      setQuery(newQuery.slice(1));\n      handleSearch();\n      return;\n    }\n\n    setQuery(newQuery);\n\n    if (!newQuery) {\n      setIsLoading(false);\n      resetMiddleSearch();\n      shouldCancelSearchRef.current = true;\n    }\n  });\n\n  useEffect(() => {\n    if (query) {\n      handleSearch();\n    }\n  }, [query]);\n\n  useEffect(() => {\n    setIsLoading(Boolean(fetchingQuery));\n  }, [fetchingQuery]);\n\n  useEffect(() => {\n    if (!foundIds?.length) return;\n    const isClose = foundIds.length - focusedIndex < FOCUSED_SEARCH_TRIGGER_OFFSET;\n    if (isClose) {\n      handleSearch();\n    }\n  }, [focusedIndex, foundIds?.length]);\n\n  useEffect(() => {\n    if (!isActive) return undefined;\n\n    maybeLongPressActiveRef.current = true;\n\n    function focus() {\n      inputRef.current?.focus();\n      markFocused();\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    function removeListeners() {\n      window.removeEventListener('touchend', focus);\n      window.removeEventListener('mouseup', focus);\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    window.addEventListener('touchend', focus);\n    window.addEventListener('mouseup', focus);\n\n    window.addEventListener('touchstart', removeListeners);\n    window.addEventListener('mousedown', removeListeners);\n\n    return () => {\n      removeListeners();\n      window.removeEventListener('touchstart', removeListeners);\n      window.removeEventListener('mousedown', removeListeners);\n    };\n  }, [isActive]);\n\n  useHistoryBack({\n    isActive,\n    onBack: handleClose,\n  });\n\n  const [viewportIds, getMore, viewportOffset = 0] = useInfiniteScroll(handleSearch, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if ((!query && !savedTag) || !viewportIds?.length) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n\n    return viewportIds.map((searchResultKey) => {\n      const [chatId, id] = parseSearchResultKey(searchResultKey);\n      const message = selectChatMessage(global, chatId, id);\n      if (!message) {\n        return undefined;\n      }\n\n      const originalSender = (isSavedMessages || isSystemBot(chatId) || chatId === ANONYMOUS_USER_ID)\n        ? selectForwardedSender(global, message) : undefined;\n      const messageSender = selectSender(global, message);\n      const messageChat = selectChat(global, message.chatId);\n\n      const senderPeer = originalSender || messageSender;\n\n      return {\n        searchResultKey,\n        message,\n        messageChat,\n        senderPeer,\n      };\n    }).filter(Boolean);\n  }, [query, savedTag, viewportIds, isSavedMessages]);\n\n  const handleMessageClick = useLastCallback((message: ApiMessage) => {\n    const searchResultKey = getSearchResultKey(message);\n    const index = foundIds?.indexOf(searchResultKey) || 0;\n    const realIndex = index + viewportOffset;\n    setFocusedIndex(realIndex);\n\n    if (searchType === 'chat') {\n      setIsViewAsList(false);\n    }\n\n    focusMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId: !isHashtagQuery ? threadId : undefined,\n    });\n\n    markBlurred();\n  });\n\n  const handleTriggerViewStyle = useLastCallback(() => {\n    setIsViewAsList((prev) => !prev);\n    markFocused();\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, hasResultsContainer, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      handleMessageClick(foundResult.message);\n      setFocusedIndex(index + viewportOffset);\n    }\n  }, `.${RESULT_ITEM_CLASS_NAME}`, true);\n\n  const updateSearchParams = useLastCallback((update: Partial<MiddleSearchParams>) => {\n    updateMiddleSearch({ chatId: chat!.id, threadId, update });\n\n    handleSearch();\n  });\n\n  const activateSearchTag = useLastCallback((tag: ApiReaction) => {\n    if (areSavedTagsDisabled) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n      return;\n    }\n\n    updateSearchParams({ savedTag: tag });\n  });\n\n  const removeSearchSavedTag = useLastCallback(() => {\n    updateSearchParams({ savedTag: undefined });\n  });\n\n  const handleDeleteTag = useLastCallback(() => {\n    if (isHashtagQuery) {\n      updateSearchParams({ isHashtag: false });\n      return;\n    }\n\n    if (savedTag) {\n      removeSearchSavedTag();\n    }\n  });\n\n  const handleChangeSearchType = useLastCallback((type: MiddleSearchType) => {\n    updateSearchParams({ type });\n    setIsViewAsList(true);\n  });\n\n  const handleFocusOlder = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleFocusNewer = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  function renderTypeTag(type: MiddleSearchType, isForTag?: boolean) {\n    const isSelected = !isForTag && searchType === type;\n    switch (type) {\n      case 'chat':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            peerId={chat?.id}\n            title={oldLang('SearchThisChat')}\n            clickArg=\"chat\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'myChats':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            peerId={currentUserId}\n            forceShowSelf\n            title={oldLang('SearchMyMessages')}\n            clickArg=\"myChats\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'channels':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            customPeer={CHANNELS_PEER}\n            title={oldLang('SearchPublicPosts')}\n            clickArg=\"channels\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n    }\n    return undefined;\n  }\n\n  function renderDropdown() {\n    return (\n      <div className={buildClassName(styles.dropdown, !hasResultsDropdown && styles.dropdownHidden)}>\n        {!isMobile && <div className={styles.separator} />}\n        {hasSavedTags && !isHashtagQuery && (\n          <div\n            className={buildClassName(\n              styles.savedTags,\n              !isMobile && styles.wrap,\n              'no-scrollbar',\n            )}\n          >\n            {savedTagsArray.map((tag) => {\n              const isChosen = isSameReaction(tag.reaction, savedTag);\n              return (\n                <SavedTagButton\n                  containerId=\"local-search\"\n                  key={getReactionKey(tag.reaction)}\n                  reaction={tag.reaction}\n                  tag={tag}\n                  withCount\n                  isDisabled={areSavedTagsDisabled}\n                  isChosen={isChosen}\n                  onClick={isChosen ? removeSearchSavedTag : activateSearchTag}\n                />\n              );\n            })}\n          </div>\n        )}\n        {isHashtagQuery && (\n          <div\n            className={buildClassName(styles.searchTypes, 'no-scrollbar')}\n          >\n            {renderTypeTag('chat')}\n            {renderTypeTag('myChats')}\n            {renderTypeTag('channels')}\n          </div>\n        )}\n        {hasResultsContainer && (\n          <InfiniteScroll\n            ref={containerRef}\n            className={buildClassName(styles.results, 'custom-scroll')}\n            items={viewportResults}\n            itemSelector={`.${RESULT_ITEM_CLASS_NAME}`}\n            preloadBackwards={0}\n            onLoadMore={getMore}\n            onKeyDown={handleKeyDown}\n          >\n            {areResultsEmpty && (\n              <span key=\"nothing\" className={styles.placeholder}>\n                {oldLang('NoResultFoundFor', query)}\n              </span>\n            )}\n            {isOnlyHash && (\n              <span key=\"enterhash\" className={styles.placeholder}>\n                {oldLang('HashtagSearchPlaceholder')}\n              </span>\n            )}\n            {viewportResults?.map(({\n              message, senderPeer, messageChat, searchResultKey,\n            }, i) => (\n              <MiddleSearchResult\n                key={searchResultKey}\n                teactOrderKey={-message.date}\n                className={RESULT_ITEM_CLASS_NAME}\n                query={query}\n                message={message}\n                senderPeer={senderPeer}\n                messageChat={messageChat}\n                shouldShowChat={isHashtagQuery}\n                isActive={focusedIndex - viewportOffset === i}\n                onClick={handleMessageClick}\n              />\n            ))}\n          </InfiniteScroll>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      id=\"MiddleSearch\"\n      className={buildClassName(\n        styles.root,\n        isActive && styles.active,\n        !isActive && isFullyHidden && 'visually-hidden', // `display: none` would prevent focus on iOS\n        isFocused && styles.focused,\n        isMobile && styles.mobile,\n      )}\n      ref={ref}\n    >\n      <div className={styles.header}>\n        {!isMobile && (\n          <Avatar\n            className={styles.avatar}\n            peer={chat}\n            size=\"medium\"\n            isSavedMessages={isSavedMessages}\n          />\n        )}\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          className={buildClassName(\n            styles.input,\n            hasResultsDropdown && styles.withDropdown,\n            hasResultsDropdown && !isMobile && styles.adaptSearchBorders,\n          )}\n          canClose={!isMobile}\n          isLoading={isLoading}\n          resultsItemSelector={`.${styles.results} .${RESULT_ITEM_CLASS_NAME}`}\n          hasUpButton={hasNavigationButtons && !isMobile}\n          hasDownButton={hasNavigationButtons && !isMobile}\n          placeholder={isHashtagQuery ? oldLang('SearchHashtagsHint') : oldLang('Search')}\n          teactExperimentControlled\n          onChange={handleQueryChange}\n          onStartBackspace={handleDeleteTag}\n          onReset={handleReset}\n          withBackIcon={isMobile}\n          onFocus={markFocused}\n          focused={isFocused}\n          onUpClick={canFocusOlder ? handleFocusOlder : undefined}\n          onDownClick={canFocusNewer ? handleFocusNewer : undefined}\n        >\n          <div className={styles.searchTags}>\n            {savedTag && (\n              <SavedTagButton\n                containerId=\"local-search-tags\"\n                className={styles.savedSearchTag}\n                reaction={savedTag}\n                tag={savedTags![getReactionKey(savedTag)]}\n                onClick={removeSearchSavedTag}\n              />\n            )}\n            {isHashtagQuery && <div className={styles.hash}>#</div>}\n          </div>\n          {!isMobile && renderDropdown()}\n        </SearchInput>\n        {!isMobile && (\n          <div className={styles.icons}>\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel={oldLang('JumpToDate')}\n            >\n              <Icon name=\"calendar\" />\n            </Button>\n          </div>\n        )}\n      </div>\n      {isMobile && renderDropdown()}\n      {isMobile && (\n        <div className={styles.footer}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n            ariaLabel={oldLang('JumpToDate')}\n          >\n            <Icon name=\"calendar\" />\n          </Button>\n          <div className={styles.counter}>\n            {hasQueryData && (\n              foundIds?.length ? (\n                oldLang('Of', [Math.max(focusedIndex + 1, 1), totalCount])\n              ) : foundIds && !foundIds.length && (\n                oldLang('NoResult')\n              )\n            )}\n          </div>\n          {searchType === 'chat' && Boolean(foundIds?.length) && (\n            <Button\n              className={styles.viewStyle}\n              size=\"smaller\"\n              isText\n              fluid\n              noForcedUpperCase\n              onClick={handleTriggerViewStyle}\n            >\n              {isViewAsList ? oldLang('SearchAsChat') : oldLang('SearchAsList')}\n            </Button>\n          )}\n          {hasNavigationButtons && !hasResultsDropdown && (\n            <div className={styles.mobileNavigation}>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusOlder && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusOlder}\n                nonInteractive={!canFocusOlder}\n                ariaLabel={lang('AriaSearchOlderResult')}\n              >\n                <Icon name=\"up\" />\n              </Button>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusNewer && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusNewer}\n                nonInteractive={!canFocusNewer}\n                ariaLabel={lang('AriaSearchNewerResult')}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    if (!currentMessageList) {\n      return {};\n    }\n    const { chatId, threadId } = currentMessageList;\n\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const {\n      requestedQuery, savedTag, results, fetchingQuery, isHashtag, type,\n    } = selectCurrentMiddleSearch(global) || {};\n    const { totalCount, foundIds, query: lastSearchQuery } = results || {};\n\n    const currentUserId = global.currentUserId;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n\n    const savedTags = isSavedMessages && !isSavedDialog ? global.savedReactionTags?.byKey : undefined;\n\n    return {\n      chat,\n      requestedQuery,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n      savedTags,\n      savedTag,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isSavedMessages,\n      fetchingQuery,\n      isHashtagQuery: isHashtag,\n      currentUserId,\n      searchType: type,\n      lastSearchQuery,\n    };\n  },\n)(MiddleSearch));\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nexport function useClickOutside(\n  refs: React.RefObject<HTMLElement>[], callback: (event: MouseEvent) => void,\n) {\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    const clickedOutside = refs.every((ref) => {\n      return ref.current && !ref.current.contains(event.target as Node);\n    });\n\n    if (clickedOutside) callback(event);\n  });\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent, ThreadId } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  isForEffects?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  effectStickers?: ApiSticker[];\n  effectEmojis?: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  effectStickers,\n  effectEmojis,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n  isForEffects,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat?.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (isForEffects && effectStickers) {\n      const effectSets: StickerSetOrReactionsSetOrRecent[] = [];\n      if (effectEmojis?.length) {\n        effectSets.push({\n          id: EFFECT_EMOJIS_SET_ID,\n          accessHash: '0',\n          title: '',\n          stickers: effectEmojis,\n          count: effectEmojis.length,\n          isEmoji: true,\n        });\n      }\n      if (effectStickers?.length) {\n        effectSets.push({\n          id: EFFECT_STICKERS_SET_ID,\n          accessHash: '0',\n          title: lang('StickerEffects'),\n          stickers: effectStickers,\n          count: effectStickers.length,\n        });\n      }\n      return effectSets;\n    }\n\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    const userSetIds = [...(addedSetIds || [])];\n    if (chatStickerSetId) {\n      userSetIds.unshift(chatStickerSetId);\n    }\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, userSetIds));\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds,\n    stickerSetsById,\n    favoriteStickers,\n    recentStickers,\n    chatStickerSetId,\n    lang,\n    effectStickers,\n    isForEffects,\n    effectEmojis,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents\n  && !noPopulatedSets && (canSendStickers || isForEffects);\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  if (!chat) return undefined;\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <Icon name=\"recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <Icon name=\"favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers && !isForEffects ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      { !isForEffects && (\n        <div ref={headerRef} className={headerClassName}>\n          <div className=\"shared-canvas-container\">\n            <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n            {allSets.map(renderCover)}\n          </div>\n        </div>\n      ) }\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={\n          buildClassName(\n            styles.main,\n            IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n            !isForEffects && styles.hasHeader,\n          )\n        }\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            noContextMenus={noContextMenus}\n            index={i}\n            idPrefix={prefix}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            isChatStickerSet={stickerSet.id === chatStickerSetId}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            forcePlayback\n            shouldHideHeader={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      effect,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      effectStickers: effect?.stickers,\n      effectEmojis: effect?.emojis,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiMessage,\n  ApiReaction,\n  ApiReactionWithPaid,\n} from '../../../../api/types';\n\nimport {\n  getReactionKey, sortReactions,\n} from '../../../../global/helpers';\nimport { selectChatFullInfo } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nimport ReactionEmoji from '../../../common/reactions/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  selectedReactionIds?: string[];\n  message?: ApiMessage;\n  onReactionSelect: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  isWithPaidReaction?: boolean;\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  reactionsLimit?: number;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  isWithPaidReaction,\n  message,\n  reactionsLimit,\n  onReactionSelect,\n  onReactionContext,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const currentReactions = message?.reactions?.results;\n\n  const shouldUseCurrentReactions = reactionsLimit && currentReactions\n   && currentReactions.length >= reactionsLimit;\n\n  const allAvailableReactions = useMemo(() => {\n    if (shouldUseCurrentReactions) {\n      const reactions = currentReactions.map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactions.unshift({ type: 'paid' });\n      }\n      return reactions;\n    }\n\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      const reactionsToSort: ApiReactionWithPaid[] = (availableReactions || []).map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactionsToSort.unshift({ type: 'paid' });\n      }\n      return sortReactions(reactionsToSort, topReactions);\n    }\n\n    const reactionsToSort: ApiReactionWithPaid[] = enabledReactions.allowed.slice();\n    if (isWithPaidReaction) {\n      reactionsToSort.unshift({ type: 'paid' });\n    }\n\n    return sortReactions(reactionsToSort, topReactions);\n  }, [\n    availableReactions, enabledReactions, topReactions, shouldUseCurrentReactions, currentReactions, isWithPaidReaction,\n  ]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                onContextMenu={onReactionContext}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global.reactions;\n\n    const { maxUniqueReactions } = global.appConfig || {};\n    const { enabledReactions, isPaidReactionAvailable } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n      reactionsLimit: maxUniqueReactions,\n      isWithPaidReaction: isPaidReactionAvailable,\n    };\n  },\n)(ReactionPickerLimited));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MhpiTAwi\",\"wrapper\":\"NIaqmosK\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiReaction,\n  ApiReactionWithPaid,\n  ApiSticker,\n  ApiStory,\n  ApiStorySkipped,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\n\nimport { getReactionKey, getStoryKey, isUserId } from '../../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectIsContextMenuTranslucent,\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../../composer/helpers/customEmoji';\n\nimport { getIsMobile } from '../../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../../../common/CustomEmojiPicker';\nimport Menu from '../../../ui/Menu';\nimport StickerPicker from '../../composer/StickerPicker';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  shouldUseFullPicker?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n  chatId?: string;\n  isForEffects?: boolean;\n  availableEffectById: Record<string, ApiAvailableEffect>;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  shouldUseFullPicker,\n  sendAsMessage,\n  chatId,\n  isForEffects,\n  availableEffectById,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction, saveEffectInDraft,\n    requestEffectInComposer, addLocalPaidReaction, openPaidReactionModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, shouldUseFullPicker]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction: ApiReaction = sticker.isCustomEmoji\n      ? { type: 'custom', documentId: sticker.id }\n      : { type: 'emoji', emoticon: sticker.emoji! };\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    if (reaction.type === 'paid') {\n      addLocalPaidReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, count: 1,\n      });\n    } else {\n      toggleReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeReactionPicker();\n  });\n\n  const handleReactionContextMenu = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (reaction.type !== 'paid') return;\n\n    openPaidReactionModal({\n      chatId: renderedChatId!,\n      messageId: renderedMessageId!,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReactionWithPaid | ApiSticker) => {\n    if ('type' in item && item.type === 'paid') return; // Not supported for stories\n\n    const reaction = 'id' in item ? { type: 'custom', documentId: item.id } as const : item;\n\n    const sticker = 'type' in item && item.type === 'custom' ? getGlobal().customEmojis.byId[item.documentId]\n      : 'id' in item ? item : undefined;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('type' in item && item.type === 'emoji') {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker) => {\n    const availableEffects = Object.values(availableEffectById);\n    const effectId = availableEffects.find((effect) => effect.effectStickerId === sticker.id)?.id;\n\n    if (chatId) saveEffectInDraft({ chatId, threadId: MAIN_THREAD_ID, effectId });\n\n    if (effectId) requestEffectInComposer({});\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push(getReactionKey(reaction));\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !shouldUseFullPicker && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      anchor={renderingPosition}\n      positionY={story && 'bottom'}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      {isForEffects && chatId ? (\n        <StickerPicker\n          className=\"\"\n          isHidden={!isOpen}\n          loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n          idPrefix=\"message-effect\"\n          canSendStickers={false}\n          noContextMenus={false}\n          chatId={chatId}\n          isTranslucent={isTranslucent}\n          onStickerSelect={handleStickerSelect}\n          isForEffects={isForEffects}\n        />\n      ) : (\n        <>\n          <CustomEmojiPicker\n            chatId={renderedChatId}\n            idPrefix=\"message-emoji-set-\"\n            isHidden={!isOpen || !(shouldUseFullPicker || renderedStoryId)}\n            loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n            isReactionPicker\n            className={!shouldUseFullPicker && !renderedStoryId ? styles.hidden : undefined}\n            selectedReactionIds={selectedReactionIds}\n            isTranslucent={isTranslucent}\n            onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n            onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n            onReactionContext={handleReactionContextMenu}\n          />\n          {!shouldUseFullPicker && Boolean(renderedChatId) && (\n            <ReactionPickerLimited\n              chatId={renderedChatId}\n              loadAndPlay={isOpen}\n              onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n              onReactionContext={handleReactionContextMenu}\n              selectedReactionIds={selectedReactionIds}\n              message={message}\n            />\n          )}\n        </>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const availableEffectById = global.availableEffectById;\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage, isForEffects,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const { maxUniqueReactions } = global.appConfig || {};\n  const areAllReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n    && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  const currentReactions = message?.reactions?.results;\n  const shouldUseCurrentReactions = Boolean(maxUniqueReactions && currentReactions\n    && currentReactions.length >= maxUniqueReactions);\n\n  return {\n    message,\n    story,\n    position,\n    shouldUseFullPicker: (chat?.isForbidden || areSomeReactionsAllowed || shouldUseCurrentReactions) ? false\n      : (areAllReactionsAllowed || isPrivateChat),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n    isForEffects,\n    chatId,\n    availableEffectById,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"gBh4WvBC\",\"menuContent\":\"qSfKwMzX\",\"storyMenu\":\"srpBMrqr\",\"onlyReactions\":\"dRNSqkOC\",\"hidden\":\"KVwgF6DG\"};","import { fixImageContent } from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QucaiGVU\",\"preview\":\"SHoF85Vw\",\"duration\":\"nI2M1SBH\",\"single\":\"FjrnqGba\",\"no-grouping\":\"g0cTsM9d\",\"noGrouping\":\"g0cTsM9d\",\"file\":\"B6f6GcvN\",\"overlay\":\"bX7LdgxW\",\"action-item\":\"Zo7u5epf\",\"actionItem\":\"Zo7u5epf\",\"delete-file\":\"CYJwy9T_\",\"deleteFile\":\"CYJwy9T_\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { SUPPORTED_PHOTO_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'photo':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <Icon\n                name=\"delete\"\n                className={buildClassName(styles.actionItem, styles.deleteFile)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          <Icon\n            name={attachment.shouldSendAsSpoiler ? 'spoiler-disable' : 'spoiler'}\n            className={styles.actionItem}\n            onClick={handleSpoilerClick}\n          />\n          {onDelete && (\n            // eslint-disable-next-line react/jsx-no-bind\n            <Icon name=\"delete\" className={styles.actionItem} onClick={() => onDelete(index)} />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport function getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_PHOTO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'photo';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","export default function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","import isFullyVisible from './visibility/isFullyVisible';\nimport animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll({\n      container,\n      element: allElements[index],\n      position,\n      margin: SCROLL_MARGIN,\n    });\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  useEffect(() => {\n    if (!isActive) setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n  }, [isActive, shouldRemoveSelectionOnReset]);\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePreviousDeprecated(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"a27O2Qlr\",\"mobile\":\"khvUZbGZ\",\"symbolMenuOpen\":\"ir5kkMy1\",\"header-border\":\"Pc1k8G8s\",\"headerBorder\":\"Pc1k8G8s\",\"sendButtonStar\":\"C1OOt81o\",\"attachments\":\"_bxSIFgj\",\"attachments-bottom-padding\":\"RPVunBe2\",\"attachmentsBottomPadding\":\"RPVunBe2\",\"caption-wrapper\":\"EtmiUn2k\",\"captionWrapper\":\"EtmiUn2k\",\"caption-top-border\":\"FjjSKMYe\",\"captionTopBorder\":\"FjjSKMYe\",\"caption\":\"Te7lIfpB\",\"dropTarget\":\"AT_d9l0W\",\"dropOutlineContainer\":\"d9O65j_I\",\"dropOutline\":\"jzCBDWMw\",\"outline\":\"xjNY3Z8u\",\"hovered\":\"AnO3BgVv\",\"send-wrapper\":\"wDqWK9MD\",\"sendWrapper\":\"wDqWK9MD\",\"send\":\"kNlWmBJI\",\"is-pointer-env\":\"rYZmraWo\",\"isPointerEnv\":\"rYZmraWo\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiMessage, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getAttachmentMediaType, isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  attachments: ApiAttachment[];\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  canScheduleUntilOnline?: boolean;\n  canSchedule?: boolean;\n  onSendWhenOnline?: NoneToVoidFunction;\n  paidMessagesStars?: number;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  editingMessage?: ApiMessage;\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  editingMessage,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  canScheduleUntilOnline,\n  canSchedule,\n  onSendWhenOnline,\n  paidMessagesStars,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePreviousDeprecated(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const isEditing = editingMessage && Boolean(editingMessage);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n  const isEditingMessageFile = isEditing && attachments?.length && getAttachmentMediaType(attachments[0]);\n  const notEditingFile = isEditingMessageFile !== 'file';\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean(\n    (shouldSendCompressed || shouldForceCompression || isInAlbum) && !shouldForceAsFile,\n  );\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [updateAttachmentSettings, isOpen, shouldSuggestCompression]);\n\n  function setIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage && !editingMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped, isInvertedMedia);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: true,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [oldLang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_PHOTO_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  const canInvertMedia = (() => {\n    if (isEditing) return false;\n    if (!hasMedia) return false;\n    if (!shouldForceAsFile && !shouldForceCompression && !isSendingCompressed) return false;\n    if (isMultiple && shouldSendGrouped) return false;\n    return true;\n  })();\n\n  let title = '';\n  const attachmentsLength = renderingAttachments.length;\n  if (areAllPhotos) {\n    title = oldLang(isEditing ? 'EditMessageReplacePhoto' : 'PreviewSender.SendPhoto', attachmentsLength, 'i');\n  } else if (areAllVideos) {\n    title = oldLang(isEditing ? 'EditMessageReplaceVideo' : 'PreviewSender.SendVideo', attachmentsLength, 'i');\n  } else if (areAllAudios) {\n    title = oldLang(isEditing ? 'EditMessageReplaceAudio' : 'PreviewSender.SendAudio', attachmentsLength, 'i');\n  } else {\n    title = oldLang(isEditing ? 'EditMessageReplaceFile' : 'PreviewSender.SendFile', attachmentsLength, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        {notEditingFile && !isInAlbum\n          && (\n            <DropdownMenu\n              className=\"attachmeneditingMessaget-modal-more-menu with-menu-transitions\"\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              {Boolean(!editingMessage) && (\n                <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{oldLang('Add')}</MenuItem>\n              )}\n              {hasMedia && (\n                <>\n                  {\n                    canInvertMedia && (!isInvertedMedia ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-up\" onClick={() => setIsInvertedMedia(true)}>\n                        {oldLang('PreviewSender.MoveTextUp')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-down\" onClick={() => setIsInvertedMedia(undefined)}>\n                        {oldLang(('PreviewSender.MoveTextDown'))}\n                      </MenuItem>\n                    ))\n                  }\n                  {\n                    !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                        {oldLang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                        {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                      </MenuItem>\n                    ))\n                  }\n                  {isSendingCompressed && hasAnySpoilerable && Boolean(!editingMessage) && (\n                    hasSpoiler ? (\n                      <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                        {oldLang('Attachment.DisableSpoiler')}\n                      </MenuItem>\n                    ) : (\n                      <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                        {oldLang('Attachment.EnableSpoiler')}\n                      </MenuItem>\n                    )\n                  )}\n                </>\n              )}\n              {isMultiple && (\n                shouldSendGrouped ? (\n                  <MenuItem\n                    icon=\"grouped-disable\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => setShouldSendGrouped(false)}\n                  >\n                    Ungroup All Media\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                    Group All Media\n                  </MenuItem>\n                )\n              )}\n            </DropdownMenu>\n          )}\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n  const buttonSendCaption = paidMessagesStars ? formatStarsAsIcon(lang,\n    attachmentsLength * paidMessagesStars,\n    {\n      className: styles.sendButtonStar,\n      asFont: true,\n    }) : oldLang('Send');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n      isLowStackPriority\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={oldLang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <svg className={styles.dropOutlineContainer}>\n          <rect className={styles.dropOutline} x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n        </svg>\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={oldLang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule && !editingMessage ? oldLang('Next')\n                  : editingMessage ? oldLang('Save') : buttonSendCaption}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={canSchedule && isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                  onSendWhenOnline={onSendWhenOnline}\n                  canScheduleUntilOnline={canScheduleUntilOnline}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { shouldSuggestCustomEmoji } = global.settings.byKey;\n    const { language } = selectSharedSettings(global);\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestMeasure, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useOldLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      requestMeasure(() => {\n        list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n      });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const isNoCorrectOptionError = isQuizMode && (correctOption === undefined || !options[correctOption].trim());\n\n    const answers = options\n      .map((text, index) => {\n        text = text.trim();\n\n        if (!text) return undefined;\n\n        return {\n          text: {\n            text,\n          },\n          option: String(index),\n          ...(index === correctOption && { correct: true }),\n        };\n      }).filter(Boolean);\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    if (!questionTrimmed || answers.length < 2) {\n      setQuestion(questionTrimmed);\n      if (answers.length) {\n        const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter(Boolean);\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isNoCorrectOptionError) {\n      setHasErrors(true);\n      return;\n    }\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: {\n          text: questionTrimmed,\n        },\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseHtmlAsFormattedText(solution.substring(0, MAX_SOLUTION_LENGTH)))\n        || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          maxLength={MAX_OPTION_LENGTH}\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: !options[index].trim() }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        <div className=\"dialog-checkbox-group\">\n          {!shouldBeAnonymous && (\n            <Checkbox\n              label={lang('PollAnonymous')}\n              checked={isAnonymous}\n              onChange={handleIsAnonymousChange}\n            />\n          )}\n          <Checkbox\n            label={lang('PollMultiple')}\n            checked={isMultipleAnswers}\n            disabled={isQuizMode}\n            onChange={handleMultipleAnswersChange}\n          />\n          <Checkbox\n            label={lang('PollQuiz')}\n            checked={isQuizMode}\n            disabled={isMultipleAnswers || isQuiz !== undefined}\n            onChange={handleQuizModeChange}\n          />\n        </div>\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_PACKAGED_ELECTRON } from '../../../config';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji/emoji';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_PACKAGED_ELECTRON ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransitionDeprecated(shouldRender);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { IconName } from '../../../types/icons';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, IconName> = {\n  recent: 'recent',\n  people: 'smile',\n  nature: 'animals',\n  foods: 'eats',\n  activity: 'sport',\n  places: 'car',\n  objects: 'lamp',\n  symbols: 'language',\n  flags: 'flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useOldLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll({\n      container: containerRef.current!,\n      element: categoryEl,\n      position: 'start',\n      margin: FOCUS_MARGIN,\n      maxDistance: SMOOTH_SCROLL_DISTANCE,\n    });\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <Icon name={icon} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getVideoMediaHash, getVideoPreviewMediaHash } from '../../global/helpers';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewHash = !gif.hasVideoPreview && gif.thumbnail && getVideoMediaHash(gif, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash, !loadAndPlay);\n\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n\n  const videoHash = getVideoPreviewMediaHash(gif) || getVideoMediaHash(gif, 'full');\n  const videoData = useMedia(videoHash, !loadAndPlay);\n\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <Icon name=\"close\" className=\"gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useOldLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <Icon name=\"search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <Icon name=\"delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\nimport type { ThreadId } from '../../../types';\nimport type { MenuPositionOptions } from '../../ui/Menu';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n}\n& MenuPositionOptions;\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n  ...menuPositionOptions\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, onClose, false, false);\n\n  const lang = useOldLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...(isAttachmentModal ? menuPositionOptions : {\n        positionX: 'left',\n        positionY: 'bottom',\n      })}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatCommand.scss';\n\ntype OwnProps<T = undefined> = {\n  command: string;\n  description: string;\n  peer?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  clickArg: T;\n  onClick: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst ChatCommand = <T,>({\n  withAvatar,\n  focus,\n  command,\n  description,\n  peer,\n  clickArg,\n  onClick,\n}: OwnProps<T>) => {\n  const handleClick = useLastCallback(() => {\n    onClick(clickArg);\n  });\n\n  return (\n    <ListItem\n      key={command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      onClick={handleClick}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={peer} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{command}</span>\n        <span className=\"subtitle\">{renderText(description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(ChatCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiBotCommand, ApiMessage, ApiQuickReply, ApiUser,\n} from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport ChatCommand from './ChatCommand';\n\nimport styles from './ChatCommandTooltip.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  quickReplies?: ApiQuickReply[];\n  quickReplyMessages?: Record<number, ApiMessage>;\n  self: ApiUser;\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\ntype QuickReplyWithDescription = {\n  id: number;\n  command: string;\n  description: string;\n};\n\nconst ChatCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  withUsername,\n  botCommands,\n  quickReplies,\n  quickReplyMessages,\n  self,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand, sendQuickReply } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSendQuickReply = useLastCallback((id: number) => {\n    sendQuickReply({ chatId, quickReplyId: id });\n    onClick();\n  });\n\n  const quickRepliesWithDescription = useMemo(() => {\n    if (!quickReplies?.length || !quickReplyMessages) return undefined;\n    return quickReplies.map((reply) => {\n      const message = quickReplyMessages[reply.topMessageId];\n      return {\n        id: reply.id,\n        command: reply.shortcut,\n        description: message?.content.text?.text || '',\n      } satisfies QuickReplyWithDescription;\n    });\n  }, [quickReplies, quickReplyMessages]);\n\n  const handleKeyboardSelect = useLastCallback((item: ApiBotCommand | QuickReplyWithDescription) => {\n    if (!item.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    if ('id' in item) {\n      handleSendQuickReply(item.id);\n    } else {\n      handleSendCommand(item);\n    }\n\n    return true;\n  });\n\n  const keyboardNavigationItems = useMemo(() => {\n    if (!botCommands && !quickRepliesWithDescription) return undefined;\n    return ([] as (ApiBotCommand | QuickReplyWithDescription)[])\n      .concat(quickRepliesWithDescription || [], botCommands || []);\n  }, [botCommands, quickRepliesWithDescription]);\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: keyboardNavigationItems,\n    onSelect: handleKeyboardSelect,\n    onClose,\n  });\n\n  const isEmpty = (botCommands && !botCommands.length) || (quickReplies && !quickReplies.length);\n\n  useEffect(() => {\n    if (isEmpty) {\n      onClose();\n    }\n  }, [isEmpty, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  if (!shouldRender || isEmpty) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {quickRepliesWithDescription?.map((reply, index) => (\n        <ChatCommand\n          key={`quickReply_${reply.id}`}\n          command={reply.command}\n          description={reply.description}\n          peer={self}\n          withAvatar\n          clickArg={reply.id}\n          onClick={handleSendQuickReply}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n      {botCommands?.map((command, index) => (\n        <ChatCommand\n          key={`${command.botId}_${command.command}`}\n          command={command.command}\n          description={command.description}\n          // No need for expensive global updates on users and chats, so we avoid them\n          peer={getGlobal().users.byId[command.botId]}\n          withAvatar\n          clickArg={command}\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex + (quickRepliesWithDescription?.length || 0) === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(freezeWhenClosed(ChatCommandTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iaTB59vy\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport ChatCommand from './ChatCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((command: string) => {\n    sendBotCommand({\n      command: `/${command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <ChatCommand\n          key={botCommand.command}\n          command={botCommand.command}\n          description={botCommand.description}\n          clickArg={botCommand.command}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_8sFuAomM\",\"emojiButton\":\"crWzZ2jr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ReactionSelector from '../message/reactions/ReactionSelector';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onRemoveEffect?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  chatId?: string;\n  withEffects?: boolean;\n  hasCurrentEffect?: boolean;\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onRemoveEffect,\n  onClose,\n  onCloseAnimationEnd,\n  chatId,\n  withEffects,\n  hasCurrentEffect,\n  effectReactions,\n  allAvailableReactions,\n  onToggleReaction,\n  canBuyPremium,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  canPlayAnimatedEmojis,\n}) => {\n  const {\n    openEffectPicker,\n  } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [areItemsHidden, hideItems, showItems] = useFlag();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      showItems();\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n\n  const handleOpenMessageEffectsPicker = useLastCallback((position: IAnchorPosition) => {\n    hideItems();\n    if (chatId) openEffectPicker({ chatId, position });\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className={buildClassName(\n        'CustomSendMenu', 'fluid', 'with-menu-transitions', withEffects && 'with-effects',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n\n      {withEffects && !isInStoryViewer && (\n        <ReactionSelector\n          allAvailableReactions={allAvailableReactions}\n          effectReactions={effectReactions}\n          currentReactions={undefined}\n          onToggleReaction={onToggleReaction!}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          isForEffects\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageEffectsPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'CustomSendMenu_items',\n          areItemsHidden && 'CustomSendMenu_items-hidden',\n        )}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{oldLang('SendWithoutSound')}</MenuItem>}\n        {canSchedule && onSendSchedule && (\n          <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n            {oldLang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n        )}\n        {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n          <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n            {oldLang('SendWhenOnline')}\n          </MenuItem>\n        )}\n        {withEffects && hasCurrentEffect && (\n          <MenuItem icon=\"delete\" onClick={onRemoveEffect}>\n            {lang('RemoveEffect')}\n          </MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { ensureProtocol } from '../../../util/browser/url';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useOldLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <Icon name=\"eye-crossed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <Icon name=\"bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <Icon name=\"italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <Icon name=\"underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <Icon name=\"strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <Icon name=\"monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <Icon name=\"link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <Icon name=\"arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <Icon name=\"check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/visibility/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getWebDocumentHash } from '../../../../global/helpers';\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? getWebDocumentHash(thumbnail) : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult;\n  onClick: (result: ApiBotInlineResult | ApiBotInlineMediaResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, description,\n  } = inlineResult;\n\n  const url = 'url' in inlineResult ? inlineResult.url : undefined;\n  const webThumbnail = 'webThumbnail' in inlineResult ? inlineResult.webThumbnail : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineMediaResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport { getPhotoMediaHash, getWebDocumentHash } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineMediaResult | ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailBlobUrl = useMedia(getWebDocumentHash(webThumbnail));\n  const mediaBlobUrl = useMedia(photo && getPhotoMediaHash(photo, 'pictogram'));\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl || thumbnailBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailBlobUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      thumbUrl={mediaBlobUrl || thumbnail?.dataUri}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineMediaResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePreviousDeprecated(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <Icon name=\"lock-badge\" className=\"send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  chatFullInfo,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canPostInChat = Boolean(chat) && Boolean(threadId)\n      && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OAKzmAva\",\"withImage\":\"BQ6HUOqN\",\"imageContainer\":\"TmJvv2A6\",\"image\":\"U96CW2I7\",\"round\":\"yxjDeIct\",\"circle\":\"cdfiLmXo\",\"withStoryCircle\":\"BOfHPv20\",\"summary\":\"vXi2JQlj\",\"title\":\"bi3fL59p\",\"info\":\"GUK4ajPK\",\"meta\":\"YH6jeZIh\",\"metaWithIcon\":\"q1LnuIUn\",\"metaIcon\":\"PJZzyVLK\",\"date\":\"C7NpG5Y9\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { StatisticsMessageInteractionCounter, StatisticsStoryInteractionCounter } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\ninterface OwnProps {\n  postStatistic: StatisticsStoryInteractionCounter | StatisticsMessageInteractionCounter;\n}\n\nfunction StatisticsRecentPostMeta({ postStatistic }: OwnProps) {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  return (\n    <div className={styles.meta}>\n      {postStatistic.reactionsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"heart-outline\" className={styles.metaIcon} />\n          {formatIntegerCompact(lang, postStatistic.reactionsCount)}\n        </span>\n      )}\n\n      {postStatistic.forwardsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"forward\" className={styles.metaIcon} />\n          {formatIntegerCompact(lang, postStatistic.forwardsCount)}\n        </span>\n      )}\n\n      {!postStatistic.forwardsCount && !postStatistic.reactionsCount\n        && oldLang('ChannelStats.SharesCount_ZeroValueHolder')}\n    </div>\n  );\n}\n\nexport default memo(StatisticsRecentPostMeta);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsMessageInteractionCounter } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  postStatistic: StatisticsMessageInteractionCounter;\n  message: ApiMessage;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ postStatistic, message }) => {\n  const lang = useOldLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        Boolean(mediaBlobUrl || mediaThumbnail) && styles.withImage,\n      )}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: OldLangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span>\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName(styles.image, isRoundVideo && styles.round)}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiTypeStory,\n  StatisticsStoryInteractionCounter,\n} from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  story?: ApiTypeStory;\n  postStatistic: StatisticsStoryInteractionCounter;\n};\n\nfunction StatisticsRecentStory({ chat, story, postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  const { toggleStoryStatistics } = getActions();\n  const isLoaded = story && 'content' in story;\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const mediaThumbnail = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  const handleClick = useLastCallback(() => {\n    toggleStoryStatistics({ storyId: postStatistic.storyId });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, styles.withImage)}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, chat, imgBlobUrl || mediaThumbnail)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {isLoaded && Boolean(story.date) && formatDateTimeToString(story.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n}\n\nfunction renderSummary(lang: OldLangFn, chat: ApiChat, blobUrl?: string) {\n  return (\n    <span>\n      {blobUrl ? (\n        <span className={styles.imageContainer}>\n          <img\n            src={blobUrl}\n            alt=\"\"\n            draggable={false}\n            className={buildClassName(styles.image, styles.circle, styles.withStoryCircle)}\n          />\n        </span>\n      ) : (\n        <Avatar\n          peer={chat}\n          size=\"small\"\n          className={styles.image}\n          withStorySolid\n          forceUnreadStorySolid\n        />\n      )}\n\n      {lang('Story')}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"T1l_4J8z\",\"pie-slim-in\":\"EgyLOizu\",\"pieSlimIn\":\"EgyLOizu\",\"pie-slim-out\":\"TBiNdFb4\",\"pieSlimOut\":\"TBiNdFb4\",\"messages\":\"suY9dEIz\",\"publicForwards\":\"S1x1ovkC\",\"messages-title\":\"evQIkAqx\",\"messagesTitle\":\"evQIkAqx\",\"publicForwards-title\":\"WxL3i5PM\",\"publicForwardsTitle\":\"WxL3i5PM\",\"ready\":\"aUrozL5_\",\"graph\":\"QQHwjG88\",\"hidden\":\"QGctP1Nk\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiChat,\n  ApiGroupStatistics,\n  ApiMessage,\n  ApiTypeStory,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessages,\n  selectPeerStories,\n  selectStatistics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\nimport StatisticsRecentStory from './StatisticsRecentStory';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n  reactionsByEmotionGraph: 'ChannelStats.Graph.Reactions',\n  storyInteractionsGraph: 'ChannelStats.Graph.Stories',\n  storyReactionsByEmotionGraph: 'ChannelStats.Graph.StoriesReactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  chat?: ApiChat;\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n  messagesById: Record<string, ApiMessage>;\n  storiesById?: Record<string, ApiTypeStory>;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  statistics,\n  dcId,\n  isGroup,\n  messagesById,\n  storiesById,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove(styles.hidden);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  return (\n    <div className={buildClassName(styles.root, 'panel-content custom-scroll', isReady && styles.ready)}>\n      {statistics && (\n        <StatisticsOverview\n          statistics={statistics}\n          type={isGroup ? 'group' : 'channel'}\n          title={lang('StatisticOverview')}\n        />\n      )}\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className={buildClassName(styles.graph, styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics)?.recentPosts?.length) && (\n        <div className={styles.messages}>\n          <h2 className={styles.messagesTitle}>{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentPosts.map((postStatistic) => {\n            if ('msgId' in postStatistic) {\n              const message = messagesById[postStatistic.msgId];\n              if (!message || !('content' in message)) return undefined;\n\n              return (\n                <StatisticsRecentMessage\n                  key={`statistic_message_${postStatistic.msgId}`}\n                  message={message}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            if ('storyId' in postStatistic && chat) {\n              const story = storiesById?.[postStatistic.storyId];\n\n              return (\n                <StatisticsRecentStory\n                  key={`statistic_story_${postStatistic.storyId}`}\n                  chat={chat}\n                  story={story}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            return undefined;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n    const messagesById = selectChatMessages(global, chatId);\n    const storiesById = selectPeerStories(global, chatId)?.byId;\n\n    return {\n      statistics, dcId, isGroup, chat, messagesById, storiesById,\n    };\n  },\n)(Statistics));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oXLpD4Y4\",\"title\":\"paQ2VBe_\",\"views\":\"WvFuOAIf\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsMessagePublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useOldLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => (data.chat ? getMainUsername(data.chat) : undefined), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div>\n        <div className={styles.title}>\n          {data.title}\n        </div>\n\n        <div className={styles.views}>\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessagePublicForward,\n  ApiPostStatistics,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nfunction Statistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadMessagePublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards && messageId) {\n      loadMessagePublicForwards({ chatId, messageId });\n    }\n  });\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {(statistics.publicForwardsData as ApiMessagePublicForward[]).map((item) => (\n              <StatisticsMessagePublicForward key={item.messageId} data={item} />\n            ))}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat, ApiStoryPublicForward, ApiUser,\n} from '../../../api/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiStoryPublicForward;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n};\n\nfunction StatisticsMessagePublicForward({ data, chatsById, usersById }: OwnProps) {\n  const lang = useOldLang();\n  const { openChat } = getActions();\n  const user = usersById[data.peerId];\n  const chat = chatsById[data.peerId];\n\n  const handleClick = useLastCallback(() => {\n    openChat({ id: user.id });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={user || chat} withStorySolid forceUnreadStorySolid />\n\n      <div>\n        <div className={styles.title}>\n          {user ? getUserFullName(user) : getChatTitle(lang, chat)}\n        </div>\n\n        <div className={styles.views}>\n          {data.viewsCount ? lang('ChannelStats.ViewsCount', data.viewsCount, 'i') : lang('NoViews')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiPostStatistics,\n  ApiUser,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsStoryPublicForward from './StatisticsStoryPublicForward';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.StoryInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  storyId?: number;\n  dcId?: number;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n};\n\nfunction StoryStatistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  storyId,\n  chatsById,\n  usersById,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStoryStatistics, loadStoryPublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (storyId) {\n      loadStoryStatistics({ chatId, storyId });\n    }\n  }, [chatId, storyId]);\n\n  useEffect(() => {\n    if (!isActive || storyId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, storyId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, storyId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!storyId) return;\n\n    loadStoryPublicForwards({ chatId, storyId });\n  });\n\n  if (!isReady || !statistics || !storyId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"story\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {statistics.publicForwardsData!.map((item) => {\n              if ('messageId' in item) {\n                return (\n                  <StatisticsMessagePublicForward key={`message_${item.messageId}`} data={item} />\n                );\n              }\n\n              return (\n                <StatisticsStoryPublicForward\n                  key={`story_${item.storyId}`}\n                  data={item}\n                  chatsById={chatsById}\n                  usersById={usersById}\n                />\n              );\n            })}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentStory;\n    const storyId = tabState.statistics.currentStoryId;\n    const { byId: usersById } = global.users;\n    const { byId: chatsById } = global.chats;\n\n    return {\n      statistics, dcId, storyId, usersById, chatsById,\n    };\n  },\n)(StoryStatistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePreviousDeprecated<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useOldLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: text.text,\n            entities: text.entities,\n          })}\n        </span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage, ApiPoll } from '../../api/types';\n\nimport {\n  selectChat, selectChatMessage, selectPollFromMessage, selectTabState,\n} from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n  poll?: ApiPoll;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  poll,\n  onClose,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !poll || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = poll;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n        })}\n      </h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${poll.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n    const poll = message && selectPollFromMessage(global, message);\n\n    return {\n      chat,\n      message,\n      poll,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xrnUE4e6\",\"content\":\"z7kF7tij\",\"section\":\"T6wFpdQO\",\"general\":\"YftUWqqw\",\"top\":\"CWsWIKQ1\",\"bottom\":\"KBl0ycLl\",\"iconWrapper\":\"iJ1U9kDD\",\"icon\":\"Rk6PT_yc\",\"clickable\":\"K1CTKtBS\",\"heading\":\"qlo3vSEw\",\"icon-picker\":\"r06zwL42\",\"iconPicker\":\"r06zwL42\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport Icon from '../common/icons/Icon';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport {\n  selectChat, selectIsCurrentUserPremium, selectTabState, selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport Icon from '../common/icons/Icon';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.chatId && editTopicPanel?.topicId\n      ? selectTopic(global, editTopicPanel.chatId, editTopicPanel.topicId) : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiBotInfo, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport {\n  getChatAvatarHash, getMainUsername, getUserFirstOrLastName,\n} from '../../../global/helpers';\nimport {\n  selectBot,\n  selectTabState,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  userId?: string;\n  user?: ApiUser;\n  chatBot?: ApiBotInfo;\n  currentBio?: string;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  maxBioLength: number;\n};\n\nconst ERROR_NAME_MISSING = 'Please provide name';\n\nconst ManageBot: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  onClose,\n  currentBio,\n  isActive,\n  maxBioLength,\n}) => {\n  const {\n    setBotInfo,\n    uploadProfilePhoto,\n    uploadContactProfilePhoto,\n    startBotFatherConversation,\n  } = getActions();\n\n  const [isFieldTouched, markFieldTouched, unmarkProfileTouched] = useFlag(false);\n  const [isAvatarTouched, markAvatarTouched, unmarkAvatarTouched] = useFlag(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  const username = useMemo(() => (user ? getMainUsername(user) : undefined), [user]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentName = user ? getUserFirstOrLastName(user) : '';\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [name, setName] = useState(currentName || '');\n  const [bio, setBio] = useState(currentBio || '');\n\n  const currentAvatarHash = user && getChatAvatarHash(user);\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    unmarkProfileTouched();\n    unmarkAvatarTouched();\n  }, [userId]);\n\n  useEffect(() => {\n    setName(currentName || '');\n    setBio(currentBio || '');\n  }, [currentName, currentBio, user]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkProfileTouched();\n      unmarkAvatarTouched();\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleNameChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n    markFieldTouched();\n\n    if (error === ERROR_NAME_MISSING) {\n      setError(undefined);\n    }\n  });\n\n  const handleBioChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    markFieldTouched();\n  });\n\n  const handlePhotoChange = useLastCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n    markAvatarTouched();\n  });\n\n  const handleProfileSave = useLastCallback(() => {\n    const trimmedName = name.trim();\n    const trimmedBio = bio.trim();\n\n    if (!trimmedName.length) {\n      setError(ERROR_NAME_MISSING);\n      return;\n    }\n\n    setBotInfo({\n      ...(isFieldTouched && {\n        bot: user,\n        name: trimmedName,\n        description: trimmedBio,\n      }),\n    });\n\n    if (photo) {\n      uploadProfilePhoto({\n        file: photo,\n        ...(isAvatarTouched && { bot: user }),\n      });\n    }\n  });\n\n  const handleChangeEditIntro = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-intro` });\n  });\n\n  const handleChangeEditCommands = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-commands` });\n  });\n\n  const handleChangeSettings = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}` });\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSelectAvatar = useLastCallback((file: File) => {\n    markAvatarTouched();\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  });\n\n  if (!user) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title={lang('ChatSetPhotoOrVideo')}\n            disabled={isLoading}\n          />\n          <InputText\n            id=\"user-name\"\n            label={lang('PaymentCheckoutName')}\n            onChange={handleNameChange}\n            value={name}\n            error={error === ERROR_NAME_MISSING ? error : undefined}\n            teactExperimentControlled\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('DescriptionPlaceholder')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n        </div>\n        <div className=\"section\">\n          <div className=\"dialog-buttons\">\n            <ListItem icon=\"bot-commands-filled\" ripple onClick={handleChangeEditIntro}>\n              <span>{lang('BotEditIntro')}</span>\n            </ListItem>\n            <ListItem icon=\"bot-command\" ripple onClick={handleChangeEditCommands}>\n              <span>{lang('BotEditCommands')}</span>\n            </ListItem>\n            <ListItem icon=\"bots\" ripple onClick={handleChangeSettings}>\n              <span>{lang('BotChangeSettings')}</span>\n            </ListItem>\n            <div className=\"section-info section-info_push\">\n              {renderText(lang('BotManageInfo'), ['links'])}\n            </div>\n          </div>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isFieldTouched || isAvatarTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectBot(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    return {\n      userId,\n      user,\n      progress,\n      currentBio: userFullInfo?.bio,\n      maxBioLength,\n    };\n  },\n)(ManageBot));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!canInvite) return;\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId, canInvite]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"channel-title\"\n              label={lang('EnterChannelName')}\n              onChange={handleTitleChange}\n              value={title}\n              error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n              disabled={!canChangeInfo}\n            />\n            <TextArea\n              id=\"channel-about\"\n              label={lang('DescriptionPlaceholder')}\n              onChange={handleAboutChange}\n              value={about}\n              maxLength={CHANNEL_MAX_DESCRIPTION}\n              maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n              disabled={!canChangeInfo}\n              noReplaceNewlines\n            />\n          </div>\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{formatInteger(chat.membersCount!)}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  isChannel?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n}) => {\n  const { toggleSignatures } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const areSignaturesEnabled = Boolean(chat?.areSignaturesShown);\n  const areProfilesEnabled = Boolean(chat?.areProfilesShown);\n\n  const canAddNewAdmins = Boolean(chat?.isCreator || (chat && getHasAdminRight(chat, 'addAdmins')));\n  const canToggleSignatures = isChannel && getHasAdminRight(chat!, 'postMessages');\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    const [owner, admins] = partition(Object.values(adminMembersById), (member) => member.isOwner);\n\n    return [...owner, ...admins];\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useLastCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  });\n\n  const handleToggleSignatures = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled,\n      areSignaturesEnabled: !areSignaturesEnabled,\n    });\n  });\n\n  const handleToggleProfiles = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled: !areProfilesEnabled,\n      areSignaturesEnabled,\n    });\n  });\n\n  const handleAddAdminClick = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  });\n\n  const getMemberStatus = useLastCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  });\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"section-help\" dir=\"auto\">\n            {lang(isChannel\n              ? 'Channel.Management.AddModeratorHelp'\n              : 'Group.Management.AddModeratorHelp')}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <Icon name=\"add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n\n        {canToggleSignatures && (\n          <div className=\"section\">\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={areSignaturesEnabled}\n                label={lang('ChannelSignMessages')}\n                onChange={handleToggleSignatures}\n              />\n            </div>\n            {areSignaturesEnabled && (\n              <>\n                <div className=\"ListItem narrow\">\n                  <Checkbox\n                    checked={areProfilesEnabled}\n                    label={lang('ChannelSignMessagesWithProfile')}\n                    onChange={handleToggleProfiles}\n                  />\n                </div>\n                <p className=\"section-info section-info_push\">\n                  {lang('ChannelSignProfilesInfo')}\n                </p>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: chat && isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport LinkField from '../../common/LinkField';\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useOldLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <LinkField link={privateInviteLink} className=\"invite-link\" />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <div className=\"settings-input\">\n              <UsernameInput\n                asLink\n                currentUsername={currentUsername}\n                isLoading={isLoading}\n                isUsernameAvailable={isUsernameAvailable}\n                checkedUsername={checkedUsername}\n                onChange={handleUsernameChange}\n              />\n            </div>\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info section-info_push\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId) && selectManagement(global, chatId));\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    return filterPeersByQuery({ ids: availableMemberIds, query: search, type: 'user' });\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useOldLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"section-help\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <Icon name=\"add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useOldLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={isJoinToSend}\n                onCheck={handleJoinToSendCheck}\n                label={lang('ChannelSettingsJoinToSend')}\n              />\n            </div>\n            {isJoinToSend && (\n              <div className=\"ListItem narrow\">\n                <Checkbox\n                  checked={isJoinRequest}\n                  onCheck={handleJoinRequestCheck}\n                  label={lang('ChannelSettingsJoinRequest')}\n                />\n              </div>\n            )}\n            <p className=\"section-info section-info_push\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId ? selectChat(global, linkedChatId) : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  });\n\n  const handleClickDiscussion = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  });\n\n  const handleClickReactions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  });\n\n  const handleClickPermissions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  });\n\n  const handleClickAdministrators = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  });\n\n  const handleClickInvites = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  });\n\n  const handleClickRequests = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  });\n\n  const handleSetPhoto = useLastCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleTitleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleAboutChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleUpdateGroup = useLastCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  });\n\n  const handleClickMembers = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  });\n\n  const handleTogglePreHistory = useLastCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  });\n\n  const handleForumToggle = useLastCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  });\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useLastCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  });\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"group-title\"\n              label={lang('GroupName')}\n              onChange={handleTitleChange}\n              value={title}\n              error={error === GROUP_TITLE_EMPTY ? error : undefined}\n              disabled={!canChangeInfo}\n            />\n            <TextArea\n              id=\"group-about\"\n              label={lang('DescriptionPlaceholder')}\n              maxLength={GROUP_MAX_DESCRIPTION}\n              maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n              onChange={handleAboutChange}\n              value={about}\n              disabled={!canChangeInfo}\n              noReplaceNewlines\n            />\n          </div>\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                subLabel={\n                  chatFullInfo.isPreHistoryHidden ? lang('ChatHistoryHiddenInfo2') : lang('ChatHistoryVisibleInfo')\n                }\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n    const canChangeInfo = chat.isCreator || getHasAdminRight(chat, 'changeInfo');\n    const canBanUsers = chat.isCreator || getHasAdminRight(chat, 'banUsers');\n    const canInvite = chat.isCreator || getHasAdminRight(chat, 'inviteUsers');\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo,\n      canBanUsers,\n      canInvite,\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.reactions.availableReactions,\n      canEditForum,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"postStories\"\n              checked={Boolean(permissions.postStories)}\n              label={lang('EditAdminPostStories')}\n              blocking\n              disabled={getControlIsDisabled('postStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"editStories\"\n              checked={Boolean(permissions.editStories)}\n              label={lang('EditAdminEditStories')}\n              blocking\n              disabled={getControlIsDisabled('editStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteStories\"\n              checked={Boolean(permissions.deleteStories)}\n              label={lang('EditAdminDeleteStories')}\n              blocking\n              disabled={getControlIsDisabled('deleteStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens, NewChatMembersProgress } from '../../../types';\n\nimport {\n  getHasAdminRight, isChatBasicGroup,\n  isChatChannel, isUserBot, isUserRightBanned, sortUserIds,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Switcher from '../../ui/Switcher';\nimport DeleteMemberModal from '../DeleteMemberModal';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  canAddMembers?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  canAddMembers,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement,\n    toggleParticipantsHidden, setNewChatMembersDialogState, toggleManagement,\n  } = getActions();\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  usePeerStoriesPolling(memberIds);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterPeersByQuery({ ids: localContactIds, query: searchQuery, type: 'user' }) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useLastCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useLastCallback(() => {\n    setDeletingUserId(undefined);\n  });\n\n  const handleToggleParticipantsHidden = useLastCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  });\n\n  const handleNewMemberDialogOpen = useLastCallback(() => {\n    toggleManagement();\n    setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.InProgress });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"panel-content custom-scroll\">\n        {canHideParticipants && !isChannel && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                  withPortalForMenu\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canAddMembers && (\n        <FloatingActionButton\n          isShown\n          onClick={handleNewMemberDialogOpen}\n          ariaLabel={lang('lng_channel_add_users')}\n        >\n          <Icon name=\"add-user-filled\" />\n        </FloatingActionButton>\n      )}\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const canAddMembers = chat && ((getHasAdminRight(chat, 'inviteUsers')\n        || (!isChannel && !isUserRightBanned(chat, 'inviteUsers')))\n      || chat.isCreator\n    );\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      canAddMembers,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  DEFAULT_CHARGE_FOR_MESSAGES,\n} from '../../../config';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport Icon from '../../common/icons/Icon';\nimport PaidMessagePrice from '../../common/paidMessage/PaidMessagePrice';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  progress?: ManagementProgress;\n  currentUserId?: string;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n  arePaidMessagesAvailable?: boolean;\n  groupPeersPaidStars: number;\n  canChargeForMessages?: boolean;\n};\n\nconst ITEM_HEIGHT = 48;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  progress,\n  currentUserId,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n  arePaidMessagesAvailable,\n  canChargeForMessages,\n  groupPeersPaidStars,\n}) => {\n  const { updateChatDefaultBannedRights, updatePaidMessagesPrice } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  const [isPriceForMessagesChanged, markPriceForMessagesChanged, unmarkPriceForMessagesChanged] = useFlag();\n  const [isPriceForMessagesOpen, setIsPriceForMessagesOpen] = useState(canChargeForMessages);\n  const [chargeForMessages, setChargeForMessages] = useState<number>(groupPeersPaidStars);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkPriceForMessagesChanged();\n    }\n  }, [progress]);\n\n  const handleSavePermissions = useLastCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  });\n\n  const handleUpdatePaidMessagesPrice = useLastCallback(() => {\n    if (!chat) return;\n    updatePaidMessagesPrice({\n      chatId: chat?.id,\n      paidMessagesStars: isPriceForMessagesOpen ? chargeForMessages : 0,\n    });\n  });\n\n  const handleUpdatePermissions = useLastCallback(() => {\n    if (isPriceForMessagesChanged) {\n      handleUpdatePaidMessagesPrice();\n    }\n    if (havePermissionChanged) {\n      handleSavePermissions();\n    }\n  });\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = oldLang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, oldLang]);\n\n  const handleChargeStarsForMessages = useLastCallback(() => {\n    setIsPriceForMessagesOpen(!isPriceForMessagesOpen);\n    markPriceForMessagesChanged();\n  });\n\n  const handleChargeForMessagesChange = useLastCallback((value: number) => {\n    setChargeForMessages(value);\n    markPriceForMessagesChanged();\n  });\n\n  const arePermissionsChanged = isPriceForMessagesChanged || havePermissionChanged;\n  const arePermissionsLoading = progress === ManagementProgress.InProgress || isLoading;\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            dropdownClassName=\"DropdownListTrap\"\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n          />\n        </div>\n\n        {arePaidMessagesAvailable && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem onClick={handleChargeStarsForMessages}>\n              <span>{lang('GroupMessagesChargePrice')}</span>\n              <Switcher\n                id=\"charge_for_messages\"\n                label={lang('GroupMessagesChargePrice')}\n                checked={isPriceForMessagesOpen}\n              />\n            </ListItem>\n            <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('RightsChargeStarsAbout')}\n            </p>\n          </div>\n        )}\n\n        {isPriceForMessagesOpen && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <PaidMessagePrice\n              canChangeChargeForMessages\n              isGroupChat\n              chargeForMessages={chargeForMessages}\n              onChange={handleChargeForMessagesChange}\n            />\n          </div>\n        )}\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={arePermissionsChanged}\n        onClick={handleUpdatePermissions}\n        ariaLabel={lang('Save')}\n        disabled={arePermissionsLoading}\n      >\n        {arePermissionsLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { progress } = selectTabState(global).management;\n\n    const paidMessagesStars = chat?.paidMessagesStars;\n    const configStarsPaidMessageCommissionPermille = global.appConfig?.starsPaidMessageCommissionPermille;\n\n    return {\n      chat,\n      progress,\n      currentUserId: global.currentUserId,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n      arePaidMessagesAvailable: Boolean(fullInfo?.arePaidMessagesAvailable && configStarsPaidMessageCommissionPermille),\n      canChargeForMessages: Boolean(paidMessagesStars && configStarsPaidMessageCommissionPermille),\n      groupPeersPaidStars: paidMessagesStars || DEFAULT_CHARGE_FOR_MESSAGES,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 48;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{oldLang('UserRestrictionsCanDo')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            dropdownClassName=\"DropdownListTrap\"\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n            getControlIsDisabled={getControlIsDisabled}\n          />\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {oldLang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={oldLang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text={lang('GroupManagementBanUserConfirm')}\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"section-help hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-heading\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"section-help hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-heading\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"section-help hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <Icon name=\"check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId] || {};\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p className=\"section-heading\">{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"section-help\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p className=\"section-heading\">{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"section-help\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"panel-content custom-scroll\">\n        {!invite && (\n          <p className=\"section-help\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <LinkField title={invite.title} link={invite.link} className=\"invite-link\" />\n              {Boolean(expireDate) && (\n                <p className=\"section-help\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p className=\"section-heading\">{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId] || {};\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport LinkField from '../../common/LinkField';\nimport NothingFound from '../../common/NothingFound';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(forceUpdate, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: oldLang('LinkCopied'),\n    });\n  }, [oldLang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = oldLang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = oldLang('PeopleJoined', usage);\n    } else {\n      text = oldLang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${oldLang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${oldLang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${oldLang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = expireDate - getServerTime();\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += oldLang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += oldLang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${oldLang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: oldLang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: oldLang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: oldLang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: oldLang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"section-help\">{isChannel ? oldLang('PrimaryLinkHelpChannel') : oldLang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <div className=\"section\">\n            <LinkField\n              className=\"settings-input\"\n              link={primaryInviteLink}\n              withShare\n              onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n              title={chat?.usernames ? oldLang('PublicLink') : oldLang('lng_create_permanent_link_title')}\n            />\n          </div>\n        )}\n        <div className=\"section\" teactFastList>\n          <ListItem icon=\"add\" withPrimaryColor key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {oldLang('CreateNewLink')}\n          </ListItem>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<Icon name=\"link\" className={`link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"section-help hint\" key=\"links-hint\">{oldLang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"section-help\" key=\"title\">{oldLang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{oldLang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<Icon name=\"link\" className={`link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={oldLang('DeleteAllRevokedLinks')}\n        text={oldLang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={oldLang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={oldLang('RevokeLink')}\n        text={oldLang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={oldLang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={oldLang('DeleteLink')}\n        text={oldLang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={oldLang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId] || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useOldLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"section-help\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport {\n  MAX_UNIQUE_REACTIONS,\n} from '../../../config';\nimport { isChatChannel, isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions: number;\n  reactionsLimit?: number;\n  isChannel?: boolean;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n  maxUniqueReactions,\n  reactionsLimit,\n  isChannel,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useOldLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  const [localReactionsLimit, setLocalReactionsLimit] = useState(reactionsLimit);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n      reactionsLimit: localReactionsLimit,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions, localReactionsLimit]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n    setLocalReactionsLimit(reactionsLimit);\n  }, [enabledReactions, reactionsLimit]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  useEffect(() => {\n    if (localReactionsLimit !== undefined && localReactionsLimit !== reactionsLimit) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some') {\n      const isReactionsDisabled = enabledReactions?.type !== 'all' && enabledReactions?.type !== 'some';\n\n      if (isReactionsDisabled && localEnabledReactions.allowed.length === 0) {\n        setIsTouched(false);\n        return;\n      }\n    }\n\n    if (localEnabledReactions?.type !== enabledReactions?.type) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some' && enabledReactions?.type === 'some') {\n      const localAllowedReactions = localEnabledReactions.allowed;\n      const enabledAllowedReactions = enabledReactions?.allowed;\n\n      if (localAllowedReactions.length !== enabledAllowedReactions.length\n      || localAllowedReactions.reverse().some(\n        (localReaction) => !enabledAllowedReactions.find(\n          (enabledReaction) => isSameReaction(localReaction, enabledReaction),\n        ),\n      )) {\n        setIsTouched(true);\n        return;\n      }\n    }\n\n    setIsTouched(false);\n  }, [\n    localReactionsLimit,\n    reactionsLimit,\n    localEnabledReactions,\n    enabledReactions,\n  ]);\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n      setLocalReactionsLimit(reactionsLimit);\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n      setLocalReactionsLimit(reactionsLimit);\n    } else {\n      setLocalEnabledReactions(undefined);\n      setLocalReactionsLimit(undefined);\n    }\n  }, [enabledReactions, reactionsLimit]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  const handleReactionsLimitChange = useCallback((value: number) => {\n    setLocalReactionsLimit(value);\n  }, []);\n\n  const renderReactionsMaxCountValue = useCallback((value: number) => {\n    return lang('PeerInfo.AllowedReactions.MaxCountValue', value);\n  }, [lang]);\n\n  const shouldShowReactionsLimit = isChannel\n  && (localEnabledReactions?.type === 'all' || localEnabledReactions?.type === 'some');\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        { localReactionsLimit && shouldShowReactionsLimit && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('MaximumReactionsHeader')}\n            </h3>\n            <RangeSlider\n              min={1}\n              max={maxUniqueReactions}\n              value={localReactionsLimit}\n              onChange={handleReactionsLimitChange}\n              renderValue={renderReactionsMaxCountValue}\n              isCenteredLayout\n            />\n            <p className=\"section-info section-info_push\">\n              {lang('ChannelReactions.MaxCount.Info')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info section-info_push\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section section-with-fab\">\n            <h3 className=\"section-heading\">\n              {lang('OnlyAllowThisReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  withIcon\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { maxUniqueReactions = MAX_UNIQUE_REACTIONS } = global.appConfig || {};\n\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n    const isChannel = isChatChannel(chat);\n\n    return {\n      enabledReactions: chatFullInfo?.enabledReactions,\n      availableReactions: global.reactions.availableReactions,\n      chat,\n      maxUniqueReactions,\n      reactionsLimit,\n      isChannel,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectChat,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"user-first-name\"\n              label={lang('UserInfo.FirstNamePlaceholder')}\n              onChange={handleFirstNameChange}\n              value={firstName}\n              error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n            />\n            <InputText\n              id=\"user-last-name\"\n              label={lang('UserInfo.LastNamePlaceholder')}\n              onChange={handleLastNameChange}\n              value={lastName}\n            />\n          </div>\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"section-help\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageBot from './ManageBot';\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'bot':\n          return (\n            <ManageBot\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { RegularLangFnParameters } from '../../util/localization';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Partial<Record<string, RegularLangFnParameters>>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"maC_9u6e\",\"description\":\"zQ6lEVJ2\",\"checkout-picture\":\"JgWvLdK2\",\"checkoutPicture\":\"JgWvLdK2\",\"text\":\"T2pYH395\",\"checkout-title\":\"HadolzeF\",\"checkoutTitle\":\"HadolzeF\",\"checkout-description\":\"oZW7mUNP\",\"checkoutDescription\":\"oZW7mUNP\",\"price-info\":\"P618Q3yr\",\"priceInfo\":\"P618Q3yr\",\"price-info-item\":\"XNNG_ajy\",\"priceInfoItem\":\"XNNG_ajy\",\"price-info-item-main\":\"D9gYNLVk\",\"priceInfoItemMain\":\"D9gYNLVk\",\"price-info-item-title\":\"NtY5Aah7\",\"priceInfoItemTitle\":\"NtY5Aah7\",\"tipsList\":\"WHO341eB\",\"tipsItem\":\"ksLlzBxw\",\"tipsItem_active\":\"J4yem62L\",\"tipsItemActive\":\"J4yem62L\",\"invoice-info\":\"U2IBOLP1\",\"invoiceInfo\":\"U2IBOLP1\",\"provider\":\"kqWcdro1\",\"stripe\":\"xKztZrna\",\"smartglocal\":\"X_Ge1o4u\",\"checkout-info-item-info-title\":\"ysWuPklS\",\"checkoutInfoItemInfoTitle\":\"ysWuPklS\",\"checkout-info-item-info-data\":\"MpC_P8_c\",\"checkoutInfoItemInfoData\":\"MpC_P8_c\",\"tos-checkbox\":\"OrRb0xG7\",\"tosCheckbox\":\"OrRb0xG7\",\"list\":\"l_wfiFG0\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiInvoice,\n  ApiLabeledPrice,\n  ApiPaymentCredentials,\n  ApiWebDocument,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { IconName } from '../../types/icons';\nimport type { LangFn } from '../../util/localization';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  title: string;\n  description: string;\n  photo?: ApiWebDocument;\n  invoice: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n  };\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: ApiLabeledPrice[];\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst Checkout: FC<OwnProps> = ({\n  title,\n  description,\n  photo,\n  invoice,\n  shippingPrices,\n  checkoutInfo,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const ref = useMediaTransition<HTMLImageElement>(photoUrl);\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(lang, tipAmount!, invoice.currency)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(lang, tip, invoice.currency, { shouldOmitFractions: true })}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = oldLang('PaymentCheckoutAcceptRecurrent', botName);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, oldLang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && (\n          <img\n            ref={ref}\n            className={styles.checkoutPicture}\n            src={photoUrl}\n            draggable={false}\n            width={photo!.dimensions?.width}\n            height={photo!.dimensions?.height}\n            alt=\"\"\n          />\n        )}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {description && (\n            <div className={styles.checkoutDescription}>\n              {renderText(description, ['br', 'links', 'emoji'])}\n            </div>\n          )}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {invoice.prices.map((item) => (\n          renderPaymentItem(lang, item.label, item.amount, invoice.currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang, item.label, item.amount, invoice.currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang, oldLang('Checkout.TotalAmount'), totalPrice, invoice.currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {!isPaymentFormUrl && renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: oldLang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: oldLang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || (!isInteractive && shippingAddress)) && renderCheckoutItem({\n          title: shippingAddress,\n          label: oldLang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: oldLang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: oldLang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || (!isInteractive && shippingMethod)) && renderCheckoutItem({\n          title: shippingMethod,\n          label: oldLang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  lang: LangFn, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(lang, value, currency)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  const isMultiline = Boolean(title && label !== title);\n\n  return (\n    <ListItem\n      className={styles.list}\n      narrow\n      multiline={isMultiline}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n      leftElement={customIcon && <i className={buildClassName('icon', customIcon)} />}\n    >\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n  onPaymentFormSubmit?: (eventData: PaymentFormSubmitEvent['eventData']) => void;\n};\n\nexport interface PaymentFormSubmitEvent {\n  eventType: 'payment_form_submit';\n  eventData: {\n    credentials: {\n      token: string;\n      type: string;\n    };\n    title: string;\n  };\n}\n\ninterface WebAppOpenTgLinkEvent {\n  eventType: 'web_app_open_tg_link';\n  eventData: {\n    path_full?: string;\n  };\n}\n\ntype IframeCallbackEvent = PaymentFormSubmitEvent | WebAppOpenTgLinkEvent;\n\nconst ConfirmPayment: FC<OwnProps> = ({\n  url, noRedirect, onClose, onPaymentFormSubmit,\n}) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useOldLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n      switch (eventType) {\n        case 'web_app_open_tg_link':\n          if (!noRedirect) {\n            const linkUrl = TME_LINK_PREFIX + eventData.path_full!;\n            openTelegramLink({ url: linkUrl });\n          }\n          onClose();\n          break;\n        case 'payment_form_submit':\n          if (onPaymentFormSubmit) {\n            onPaymentFormSubmit(eventData);\n          }\n          break;\n        default:\n          onClose();\n          break;\n      }\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink, onPaymentFormSubmit]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { RegularLangFnParameters } from '../../util/localization';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  errorKey?: RegularLangFnParameters;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  errorKey,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={errorKey && lang.withRegular(errorKey)}\n        hint={passwordHint}\n        description={oldLang('PaymentConfirmationMessage', cardName)}\n        placeholder={oldLang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    errorKey: payment.error?.messageKey,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.form?.type === 'regular' ? payment.form.savedCredentials : undefined,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/browser/windowEnvironment';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMeasure(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 19;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{oldLang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber && lang.withRegular(formErrors.cardNumber)}\n        />\n        {needCardholderName && (\n          <InputText\n            label={oldLang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder && lang.withRegular(formErrors.cardholder)}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry && lang.withRegular(formErrors.expiry)}\n          />\n          <InputText\n            label={oldLang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv && lang.withRegular(formErrors.cvv)}\n            teactExperimentControlled\n          />\n        </section>\n        {needCountry || needZip ? (\n          <h5>{oldLang('PaymentBillingAddress')}</h5>\n        ) : undefined}\n        <section className=\"inline-inputs\">\n          {needCountry && (\n            <Select\n              label={oldLang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.billingCountry}\n              hasArrow={Boolean(true)}\n              id=\"billing-country\"\n              error={formErrors.billingCountry && lang.withRegular(formErrors.billingCountry)}\n              tabIndex={0}\n              ref={selectCountryRef}\n            >\n              {\n                countryList.map(({ defaultName, name }) => (\n                  <option\n                    value={defaultName}\n                    className=\"county-item\"\n                    selected={defaultName === state.billingCountry}\n                  >\n                    {defaultName || name}\n                  </option>\n                ))\n              }\n            </Select>\n          )}\n          {needZip && (\n            <InputText\n              label={oldLang('PaymentShippingZipPlaceholder')}\n              onChange={handleBillingPostCodeChange}\n              value={state.billingZip}\n              inputMode=\"text\"\n              tabIndex={0}\n              maxLength={12}\n              error={formErrors.billingZip && lang.withRegular(formErrors.billingZip)}\n            />\n          )}\n        </section>\n        <div className=\"checkbox\">\n          <Checkbox\n            label={oldLang('PaymentCardSavePaymentInformation')}\n            checked={canSaveCredentials ? state.saveCredentials : false}\n            tabIndex={0}\n            subLabel={oldLang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n            onChange={handleChangeSaveCredentials}\n            disabled={!canSaveCredentials}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useOldLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(lang, amount, currency),\n    value,\n  }))), [shippingOptions, currency, lang]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{oldLang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{oldLang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={oldLang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1 && lang.withRegular(formErrors.streetLine1)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2 && lang.withRegular(formErrors.streetLine2)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city && lang.withRegular(formErrors.city)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state && lang.withRegular(formErrors.state)}\n            />\n            <Select\n              label={oldLang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2 && lang.withRegular(formErrors.countryIso2)}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={oldLang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode && lang.withRegular(formErrors.postCode)}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{oldLang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={oldLang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName && lang.withRegular(formErrors.fullName)}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={oldLang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email && lang.withRegular(formErrors.email)}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={oldLang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone && lang.withRegular(formErrors.phone)}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={oldLang('PaymentShippingSave')}\n          subLabel={oldLang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountry, ApiInvoice, ApiLabeledPrice, ApiPaymentCredentials, ApiPaymentFormRegular,\n} from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\nimport type { PaymentFormSubmitEvent } from './ConfirmPayment';\nimport { PaymentStep } from '../../types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrencyAsString } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst DONATE_PROVIDER_URL = 'https://payment.smart-glocal.com';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  step?: PaymentStep;\n  chat?: ApiChat;\n  nativeProvider?: string;\n  invoice?: ApiInvoice;\n  form?: ApiPaymentFormRegular;\n  error?: TabState['payment']['error'];\n  prices?: ApiLabeledPrice[];\n  isProviderError?: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions?: boolean;\n  shippingOptions?: ShippingOption[];\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  shippingOptions,\n  form,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n    setSmartGlocalCardInfo,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePreviousDeprecated(step, true);\n  const prevRequestId = usePreviousDeprecated(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.messageKey,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (form?.savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = form.savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [form, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(invoice?.prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, invoice?.prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.descriptionKey ? lang.withRegular(error.descriptionKey) : lang('ErrorUnspecified')}</h4>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {oldLang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handlePaymentFormSubmit = useCallback((eventData: PaymentFormSubmitEvent['eventData']) => {\n    const { credentials } = eventData;\n    setSmartGlocalCardInfo(credentials);\n    sendForm();\n  }, [sendForm]);\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            title={form!.title}\n            description={form!.description}\n            photo={form!.photo}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice!}\n            checkoutInfo={checkoutInfo}\n            isPaymentFormUrl={isPaymentFormUrl}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(invoice?.isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n            botName={botName}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!form!.isPasswordMissing && form!.canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(invoice?.isShippingAddressRequested)}\n            needEmail={Boolean(invoice?.isEmailRequested || invoice?.isEmailSentToProvider)}\n            needPhone={Boolean(invoice?.isPhoneRequested || invoice?.isPhoneSentToProvider)}\n            needName={Boolean(invoice?.isNameRequested)}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={invoice!.currency}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onPaymentFormSubmit={handlePaymentFormSubmit}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const handleButtonClick = useLastCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (isPaymentFormUrl) {\n          setIsLoading(true);\n          setStep(PaymentStep.ConfirmPayment);\n          return;\n        }\n\n        if (form?.savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (invoice?.isEmailRequested && !email)\n          || (invoice?.isPhoneRequested && !phone)\n          || (invoice?.isNameRequested && !fullName);\n\n        if ((invoice?.isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (invoice?.isShippingAddressRequested && !paymentState.shipping && shippingOptions?.length) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  });\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return oldLang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return oldLang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return oldLang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return oldLang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return oldLang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return oldLang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return oldLang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, oldLang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? oldLang('Checkout.PayPrice', formatCurrencyAsString(totalPrice, invoice!.currency, oldLang.code))\n    : lang('PaymentInfoDone');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.termsUrl) && !isTosAccepted;\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {oldLang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <Icon name={step === PaymentStep.Checkout ? 'close' : 'arrow-left'} />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition\n          name=\"slide\"\n          activeKey={step}\n          shouldCleanup\n          cleanupOnlyKey={PaymentStep.ConfirmPayment}\n        >\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            className=\"button-text\"\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      form,\n      step,\n      shippingOptions,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n      url,\n    } = selectTabState(global).payment;\n\n    const { invoice, nativeParams, nativeProvider } = form || {};\n    const countryList = global.countryList.general;\n\n    let providerName = form?.nativeProvider;\n    if (!providerName && url) {\n      providerName = url.startsWith(DONATE_PROVIDER_URL) ? DONATE_PROVIDER : undefined;\n    }\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId!) : undefined;\n    const isProviderError = Boolean(invoice && (!providerName || !SUPPORTED_PROVIDERS.has(providerName)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const bot = form?.botId ? selectUser(global, form.botId) : undefined;\n    const botName = getUserFullName(bot);\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      nativeProvider: providerName,\n      isProviderError,\n      form,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl: confirmPaymentUrl ?? url,\n      isPaymentFormUrl: Boolean(!nativeProvider && url),\n      countryList,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n      botName,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: ApiLabeledPrice[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiReceiptRegular, ApiShippingAddress } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  receipt?: ApiReceiptRegular;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  receipt,\n}) => {\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const prevReceipt = usePrevious(receipt);\n  const renderingReceipt = receipt || prevReceipt;\n\n  const checkoutInfo = useMemo(() => {\n    if (!renderingReceipt) return undefined;\n    return getCheckoutInfo(renderingReceipt.credentialsTitle, renderingReceipt.info, renderingReceipt.shippingMethod);\n  }, [renderingReceipt]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      {renderingReceipt && (\n        <>\n          <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            <Button\n              className=\"close-button\"\n              color=\"translucent\"\n              round\n              size=\"smaller\"\n              onClick={closeModal}\n              ariaLabel=\"Close\"\n            >\n              <Icon name=\"close\" />\n            </Button>\n            <h3> {lang('PaymentReceipt')} </h3>\n          </div>\n          <div className=\"receipt-content custom-scroll\">\n            <Checkout\n              shippingPrices={renderingReceipt.shippingPrices}\n              totalPrice={renderingReceipt.totalAmount}\n              tipAmount={renderingReceipt.tipAmount}\n              invoice={renderingReceipt.invoice}\n              checkoutInfo={checkoutInfo}\n              title={renderingReceipt.title}\n              description={renderingReceipt.description}\n              photo={renderingReceipt.photo}\n            />\n          </div>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n\n    return {\n      receipt,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?: {\n    phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"n8eENbaR\",\"closeButton\":\"smosGkw9\",\"contentText\":\"Qo4PtFZI\",\"title\":\"wtfpombl\",\"separator\":\"UoMeVIyC\",\"userPicker\":\"nEYyTS_m\",\"sendInvites\":\"Ttkq3nqt\",\"avatarList\":\"Nc3SOtKd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './InviteViaLinkModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['inviteViaLinkModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n};\n\nconst InviteViaLinkModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n}) => {\n  const { sendInviteMessages, closeInviteViaLinkModal, openPremiumModal } = getActions();\n  const { missingUsers } = modal || {};\n\n  const lang = useOldLang();\n  const [selectedMemberIds, setSelectedMemberIds] = useState<string[]>([]);\n\n  const userIds = useMemo(() => missingUsers?.map((user) => user.id) || MEMO_EMPTY_ARRAY, [missingUsers]);\n  const [unselectableIds, selectableIds] = useMemo(() => {\n    if (!missingUsers?.length) return [[], []];\n    const [requirePremiumIds, regularIds] = partition(missingUsers, (user) => user.isRequiringPremiumToMessage);\n    return [requirePremiumIds.map((user) => user.id), regularIds.map((user) => user.id)];\n  }, [missingUsers]);\n\n  const invitableWithPremiumIds = useMemo(() => {\n    return missingUsers?.filter((user) => user.isRequiringPremiumToInvite || user.isRequiringPremiumToMessage)\n      .map((user) => user.id);\n  }, [missingUsers]);\n\n  const isEveryPremiumBlocksPm = useMemo(() => {\n    if (!missingUsers) return undefined;\n    return !missingUsers.some((user) => user.isRequiringPremiumToInvite && !user.isRequiringPremiumToMessage);\n  }, [missingUsers]);\n\n  const topListPeers = useMemo(() => {\n    const users = getGlobal().users.byId;\n    return invitableWithPremiumIds?.map((id) => users[id]);\n  }, [invitableWithPremiumIds]);\n\n  useEffect(() => {\n    setSelectedMemberIds(selectableIds);\n  }, [selectableIds]);\n\n  const handleClose = useLastCallback(() => closeInviteViaLinkModal());\n\n  const handleSendInviteLink = useCallback(() => {\n    sendInviteMessages({ chatId: chat!.id, userIds: selectedMemberIds! });\n    closeInviteViaLinkModal();\n  }, [selectedMemberIds, chat]);\n\n  const handleOpenPremiumModal = useCallback(() => {\n    openPremiumModal();\n  }, []);\n\n  const canSendInviteLink = useMemo(() => {\n    if (!chat) return undefined;\n    return Boolean(chat?.isCreator || chat?.adminRights?.inviteUsers);\n  }, [chat]);\n\n  const inviteSectionText = useMemo(() => {\n    return canSendInviteLink\n      ? lang(missingUsers?.length === 1 ? 'InviteBlockedOneMessage' : 'InviteBlockedManyMessage')\n      : lang('InviteRestrictedUsers2', missingUsers?.length);\n  }, [canSendInviteLink, lang, missingUsers?.length]);\n\n  const premiumSectionText = useMemo(() => {\n    if (!invitableWithPremiumIds?.length || !topListPeers?.length) return undefined;\n    const prefix = isEveryPremiumBlocksPm ? 'InviteMessagePremiumBlocked' : 'InvitePremiumBlocked';\n    let langKey = `${prefix}One`;\n    let params = [getUserFullName(topListPeers[0])];\n    if (invitableWithPremiumIds.length === 2) {\n      langKey = `${prefix}Two`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1])];\n    } else if (invitableWithPremiumIds.length === 3) {\n      langKey = `${prefix}Three`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1]), getUserFullName(topListPeers[2])];\n    } else if (invitableWithPremiumIds.length > 3) {\n      langKey = `${prefix}Many`;\n      params = [\n        getUserFullName(topListPeers[0]),\n        getUserFullName(topListPeers[1]),\n        (invitableWithPremiumIds!.length - 2).toString(),\n      ];\n    }\n\n    return lang(langKey, params, undefined, topListPeers.length);\n  }, [invitableWithPremiumIds, isEveryPremiumBlocksPm, lang, topListPeers]);\n\n  const hasPremiumSection = Boolean(topListPeers?.length);\n  const hasSelectableSection = Boolean(selectableIds?.length);\n\n  return (\n    <Modal\n      isOpen={Boolean(userIds && chat)}\n      contentClassName={styles.content}\n      onClose={handleClose}\n      isSlim\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      {premiumSectionText && (\n        <>\n          <AvatarList\n            className={styles.avatarList}\n            peers={topListPeers}\n            size=\"large\"\n          />\n          <h3 className={styles.title}>\n            {canSendInviteLink ? lang('InvitePremiumBlockedTitle') : lang('ChannelInviteViaLinkRestricted')}\n          </h3>\n          <p className={styles.contentText}>\n            {renderText(premiumSectionText, ['simple_markdown'])}\n          </p>\n          <Button\n            withPremiumGradient\n            isShiny\n            size=\"smaller\"\n            onClick={handleOpenPremiumModal}\n          >\n            {lang('InvitePremiumBlockedSubscribe')}\n          </Button>\n        </>\n      )}\n      {hasPremiumSection && hasSelectableSection && (\n        <Separator className={styles.separator}>\n          {lang('InvitePremiumBlockedOr')}\n        </Separator>\n      )}\n      {hasSelectableSection && (\n        <>\n          <h3 className={styles.title}>{lang('InviteBlockedTitle')}</h3>\n          <p className={styles.contentText}>\n            {inviteSectionText}\n          </p>\n          <PeerPicker\n            className={styles.userPicker}\n            itemIds={userIds}\n            selectedIds={selectedMemberIds}\n            lockedUnselectedIds={unselectableIds}\n            lockedUnselectedSubtitle={lang('InvitePremiumBlockedUser')}\n            onSelectedIdsChange={setSelectedMemberIds}\n            isViewOnly={!canSendInviteLink}\n            allowMultiple\n            withStatus\n            itemInputType=\"checkbox\"\n          />\n          {canSendInviteLink && (\n            <Button\n              className={styles.sendInvites}\n              size=\"smaller\"\n              onClick={handleSendInviteLink}\n              disabled={!selectedMemberIds.length}\n            >\n              {lang('SendInviteLink.ActionInvite')}\n            </Button>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal?.chatId ? selectChat(global, modal.chatId) : undefined;\n\n    return {\n      chat,\n    };\n  },\n)(InviteViaLinkModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c3xMWwzW\",\"fade-in-opacity\":\"cHb04cFv\",\"fadeInOpacity\":\"cHb04cFv\",\"closing\":\"_0HkZ8ITm\",\"voice\":\"VLiJWMs0\",\"video\":\"ML2YEpGq\",\"footer\":\"VWy1qXJL\",\"closeBtn\":\"FfMrCmD9\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { isOwnMessage } from '../../../global/helpers';\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Audio from '../../common/Audio';\nimport RoundVideo from '../../middle/message/RoundVideo';\nimport Button from '../../ui/Button';\n\nimport styles from './OneTimeMediaModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['oneTimeMediaModal'];\n};\n\nconst OneTimeMediaModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    closeOneTimeMediaModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const message = useCurrentOrPrev(modal?.message, true);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(modal));\n\n  const handlePlayVoice = useLastCallback(() => {\n    return undefined;\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeOneTimeMediaModal();\n  });\n\n  if (!shouldRender || !message) {\n    return undefined;\n  }\n\n  const isOwn = isOwnMessage(message);\n  const theme = selectTheme(getGlobal());\n  const closeBtnTitle = isOwn ? lang('Chat.Voice.Single.Close') : lang('Chat.Voice.Single.DeleteAndClose');\n\n  function renderMedia() {\n    if (!message?.content) {\n      return undefined;\n    }\n    const { voice, video } = message.content;\n    if (voice) {\n      return (\n        <Audio\n          className={styles.voice}\n          theme={theme}\n          message={message}\n          origin={AudioOrigin.OneTimeModal}\n          autoPlay\n          onPlay={handlePlayVoice}\n          onPause={handleClose}\n        />\n      );\n    } else if (video?.isRound) {\n      return (\n        <RoundVideo\n          className={styles.video}\n          message={message}\n          origin=\"oneTimeModal\"\n          onStop={handleClose}\n        />\n      );\n    }\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, transitionClassNames)}>\n      {renderMedia()}\n      <div className={styles.footer}>\n        <Button\n          faded\n          onClick={handleClose}\n          pill\n          size=\"smaller\"\n          color={theme === 'dark' ? 'dark' : 'secondary'}\n          className={styles.closeBtn}\n        >\n          {closeBtnTitle}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(OneTimeMediaModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport Modal from '../ui/Modal';\n\ntype OwnProps = {\n  isOpen: boolean;\n};\n\nconst WebAppsCloseConfirmationModal: FC<OwnProps> = ({\n  isOpen,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { closeWebAppsCloseConfirmationModal, closeWebAppModal } = getActions();\n\n  const [shouldSkipInFuture, setShouldSkipInFuture] = useState(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const onClose = useCallback(() => {\n    closeWebAppsCloseConfirmationModal({ shouldSkipInFuture });\n  }, [shouldSkipInFuture]);\n\n  const confirmHandler = useCallback(() => {\n    closeWebAppModal({ shouldSkipConfirmation: true });\n    closeWebAppsCloseConfirmationModal({ shouldSkipInFuture });\n  }, [shouldSkipInFuture]);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      title={lang('CloseMiniApps')}\n      isOpen={isOpen}\n      onClose={onClose}\n    >\n      <p>{lang('AreYouSureCloseMiniApps')}</p>\n      <Checkbox\n        className=\"dialog-checkbox\"\n        label={lang('DoNotAskAgain')}\n        checked={shouldSkipInFuture}\n        onCheck={setShouldSkipInFuture}\n      />\n      <div\n        className=\"dialog-buttons mt-2\"\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color=\"danger\"\n        >\n          {oldLang('Confirm')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {oldLang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(WebAppsCloseConfirmationModal);\n","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { selectUser } from '../../../global/selectors';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport TableAboutModal, { type TableAboutData } from '../common/TableAboutModal';\n\nimport styles from './FrozenAccountModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['isFrozenAccountModalOpen'];\n};\n\ntype StateProps = {\n  freezeAppealUrl?: string;\n  botFreezeAppealUsername?: string;\n  freezeUntilDate?: number;\n};\n\nconst FrozenAccountModal = ({\n  modal,\n  freezeUntilDate,\n  freezeAppealUrl,\n  botFreezeAppealUsername,\n}: OwnProps & StateProps) => {\n  const {\n    closeFrozenAccountModal,\n    openUrl,\n  } = getActions();\n  const lang = useLang();\n\n  const isOpen = Boolean(modal);\n\n  const handleClose = useLastCallback(() => {\n    closeFrozenAccountModal();\n  });\n\n  const handleAppeal = useLastCallback(() => {\n    closeFrozenAccountModal();\n    if (freezeAppealUrl) {\n      openUrl({ url: freezeAppealUrl });\n    }\n  });\n\n  const header = useMemo(() => {\n    return (\n      <div className={styles.header}>\n        <AnimatedIconWithPreview\n          size={160}\n          tgsUrl={LOCAL_TGS_URLS.BannedDuck}\n          noLoop\n        />\n        <div className={styles.title}>\n          {lang('FrozenAccountModalTitle')}\n        </div>\n      </div>\n    );\n  }, [lang]);\n\n  const footer = useMemo(() => {\n    if (!isOpen) return undefined;\n    return (\n      <div className={styles.footer}>\n        <Button\n          className={styles.buttonAppeal}\n          size=\"smaller\"\n          onClick={handleAppeal}\n          noForcedUpperCase\n        >\n          {lang('ButtonAppeal')}\n        </Button>\n        <Button\n          isText\n          size=\"smaller\"\n          onClick={handleClose}\n          noForcedUpperCase\n        >\n          {lang('ButtonUnderstood')}\n        </Button>\n      </div>\n    );\n  }, [lang, isOpen]);\n\n  if (!freezeUntilDate || !botFreezeAppealUsername) return undefined;\n\n  const date = new Date(freezeUntilDate * 1000);\n\n  const botLink = (\n    <Link onClick={handleAppeal} isPrimary>\n      {formatUsername(botFreezeAppealUsername)}\n    </Link>\n  );\n\n  const listItemData = [\n    ['hand-stop', lang('FrozenAccountViolationTitle'), lang('FrozenAccountViolationSubtitle')],\n    ['lock', lang('FrozenAccountReadOnlyTitle'), lang('FrozenAccountReadOnlySubtitle')],\n    ['frozen-time', lang('FrozenAccountAppealTitle'),\n      lang('FrozenAccountAppealSubtitle', {\n        botLink,\n        date: formatDateToString(date, lang.code),\n      }, {\n        withNodes: true,\n      })],\n  ] satisfies TableAboutData;\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      header={header}\n      listItemData={listItemData}\n      footer={footer}\n      hasBackdrop\n      onClose={handleClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const freezeUntilDate = global.appConfig?.freezeUntilDate;\n    const freezeAppealUrl = global.appConfig?.freezeAppealUrl;\n    const botFreezeAppealId = global.botFreezeAppealId;\n    const botFreezeAppealUsername = botFreezeAppealId\n      ? selectUser(global, botFreezeAppealId)?.usernames?.[0]?.username : undefined;\n\n    return {\n      freezeUntilDate,\n      freezeAppealUrl,\n      botFreezeAppealUsername,\n    };\n  },\n)(FrozenAccountModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"cW2rtp6M\",\"title\":\"qLSm0uyC\",\"footer\":\"Vj3QQ_JQ\",\"buttonAppeal\":\"anvg3JaY\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hyRfEyRz\",\"top\":\"p_Ny8jqJ\",\"badge\":\"QRrryqp4\",\"text\":\"I5jdPgFL\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiWebDocument } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar, { type AvatarSize } from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerBadge.module.scss';\n\ntype OwnProps = {\n  peer?: ApiPeer | CustomPeer;\n  avatarWebPhoto?: ApiWebDocument;\n  avatarSize?: AvatarSize;\n  text?: string;\n  badgeText?: string;\n  badgeIcon?: IconName;\n  className?: string;\n  badgeClassName?: string;\n  badgeIconClassName?: string;\n  textClassName?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PeerBadge = ({\n  peer: avatarPeer,\n  avatarWebPhoto,\n  avatarSize,\n  text,\n  badgeText,\n  badgeIcon,\n  className,\n  badgeClassName,\n  badgeIconClassName,\n  textClassName,\n  onClick,\n}: OwnProps) => {\n  const lang = useLang();\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n    >\n      <div className={styles.top}>\n        <Avatar size={avatarSize} peer={avatarPeer} webPhoto={avatarWebPhoto} />\n        {badgeText && (\n          <div className={buildClassName(styles.badge, badgeClassName)} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n            {badgeIcon && <Icon name={badgeIcon} className={badgeIconClassName} />}\n            {badgeText}\n          </div>\n        )}\n      </div>\n      {text && <p className={buildClassName(styles.text, textClassName)}>{text}</p>}\n    </div>\n  );\n};\n\nexport default memo(PeerBadge);\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal, { type OwnProps as ModalProps } from '../../ui/Modal';\n\nimport styles from './PickerModal.module.scss';\n\ntype OwnProps = {\n  confirmButtonText?: string;\n  isConfirmDisabled?: boolean;\n  shouldAdaptToSearch?: boolean;\n  withFixedHeight?: boolean;\n  withPremiumGradient?: boolean;\n  onConfirm?: NoneToVoidFunction;\n} & ModalProps;\n\nconst PickerModal = ({\n  confirmButtonText,\n  isConfirmDisabled,\n  shouldAdaptToSearch,\n  withFixedHeight,\n  onConfirm,\n  withPremiumGradient,\n  ...modalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hasButton = Boolean(confirmButtonText || onConfirm);\n\n  return (\n    <Modal\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...modalProps}\n      isSlim\n      className={buildClassName(\n        shouldAdaptToSearch && styles.withSearch,\n        withFixedHeight && styles.fixedHeight,\n        modalProps.className,\n      )}\n      contentClassName={buildClassName(styles.content, modalProps.contentClassName)}\n      headerClassName={buildClassName(styles.header, modalProps.headerClassName)}\n    >\n      {modalProps.children}\n      {hasButton && (\n        <div className={styles.buttonWrapper}>\n          <Button\n            withPremiumGradient={withPremiumGradient}\n            onClick={onConfirm || modalProps.onClose}\n            color=\"primary\"\n            size=\"smaller\"\n            disabled={isConfirmDisabled}\n          >\n            {confirmButtonText || lang('Confirm')}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(PickerModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"FuFYE0AA\",\"fixedHeight\":\"CrEsDylb\",\"withSearch\":\"WGSZ8u75\",\"header\":\"iEptOmIp\",\"buttonWrapper\":\"HqeDTaSr\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LAh8evux\",\"title\":\"yfODVQ1M\",\"description\":\"QaQn08BX\",\"secondary\":\"sQZslvAr\",\"topIcon\":\"jySLtQNG\",\"listItemIcon\":\"hQbEPsTU\",\"content\":\"hrizpMDe\",\"separator\":\"En1zD2cT\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './TableAboutModal.module.scss';\n\nexport type TableAboutData = [IconName | undefined, TeactNode, TeactNode][];\n\ntype OwnProps = {\n  contentClassName?: string;\n  isOpen?: boolean;\n  listItemData?: TableAboutData;\n  headerIconName?: IconName;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  hasBackdrop?: boolean;\n  withSeparator?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableAboutModal = ({\n  isOpen,\n  listItemData,\n  headerIconName,\n  header,\n  footer,\n  buttonText,\n  hasBackdrop,\n  withSeparator,\n  onClose,\n  onButtonClick,\n  contentClassName,\n}: OwnProps) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName(styles.root, contentClassName)}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      onClose={onClose}\n    >\n      {headerIconName && <div className={styles.topIcon}><Icon name={headerIconName} /></div>}\n      {header}\n      <div>\n        {listItemData?.map(([icon, title, subtitle]) => {\n          return (\n            <ListItem\n              isStatic\n              multiline\n              icon={icon}\n              iconClassName={styles.listItemIcon}\n            >\n              <span className=\"title\">{title}</span>\n              <span className=\"subtitle\">{subtitle}</span>\n            </ListItem>\n          );\n        })}\n      </div>\n      {withSeparator && <Separator className={styles.separator} />}\n      {footer}\n      {buttonText && (\n        <Button size=\"smaller\" onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableAboutModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"KYHkJ9Qf\",\"title\":\"AwnUe4Qk\",\"value\":\"JGH6P9Az\",\"table\":\"DFRB0Ad4\",\"noFooter\":\"cSamlkt9\",\"cell\":\"Cnh5ENvm\",\"fullWidth\":\"UssCZwgy\",\"avatar\":\"SHQbPR5Y\",\"chatItem\":\"aS9U4hiQ\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\ntype ChatItem = { chatId: string; withEmojiStatus?: boolean };\n\nexport type TableData = [TeactNode | undefined, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  header?: TeactNode;\n  modalHeader?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  className?: string;\n  hasBackdrop?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n  withBalanceBar?: boolean;\n  isLowStackPriority?: true;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerAvatarPeer,\n  header,\n  modalHeader,\n  footer,\n  buttonText,\n  className,\n  hasBackdrop,\n  onClose,\n  onButtonClick,\n  withBalanceBar,\n  isLowStackPriority,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      isSlim\n      header={modalHeader}\n      title={title}\n      className={className}\n      contentClassName={styles.content}\n      onClose={onClose}\n      withBalanceBar={withBalanceBar}\n      isLowStackPriority={isLowStackPriority}\n    >\n      {headerAvatarPeer && (\n        <Avatar peer={headerAvatarPeer} size=\"jumbo\" className={styles.avatar} />\n      )}\n      {header}\n      <div className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <>\n            {label && <div className={buildClassName(styles.cell, styles.title)}>{label}</div>}\n            <div className={buildClassName(styles.cell, styles.value, !label && styles.fullWidth)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PeerChip\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  withEmojiStatus={value.withEmojiStatus}\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </div>\n          </>\n        ))}\n      </div>\n      {footer}\n      {buttonText && (\n        <Button\n          className={!footer ? styles.noFooter : undefined}\n          size=\"smaller\"\n          onClick={onButtonClick || onClose}\n        >{buttonText}\n        </Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"options\":\"OnCj9kef\",\"option\":\"tpTHQAUF\",\"active\":\"U_9MXPG5\",\"wideOption\":\"dJcJl33b\",\"optionTop\":\"x9G4lqMf\",\"stackedStars\":\"etXLebjM\",\"stackedStar\":\"swttXv9P\",\"optionBottom\":\"tK7La7L2\",\"moreOptions\":\"AWXBaWLW\",\"iconDown\":\"zWYHZJmd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiStarGiveawayOption, ApiStarTopupOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './StarTopupOptionList.module.scss';\n\nconst MAX_STARS_COUNT = 6;\n\ntype OwnProps = {\n  isActive?: boolean;\n  options?: ApiStarTopupOption[] | ApiStarGiveawayOption[];\n  selectedStarOption?: ApiStarTopupOption | ApiStarGiveawayOption;\n  selectedStarCount?: number;\n  starsNeeded?: number;\n  className?: string;\n  onClick: (option: ApiStarTopupOption | ApiStarGiveawayOption) => void;\n};\n\nconst StarTopupOptionList: FC<OwnProps> = ({\n  isActive,\n  className,\n  options,\n  selectedStarOption,\n  selectedStarCount,\n  starsNeeded,\n  onClick,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n\n  useEffect(() => {\n    if (!isActive) {\n      unmarkOptionsExtended();\n    }\n  }, [isActive]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!options) return [undefined, false];\n\n    const maxOption = options.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption | ApiStarGiveawayOption; starsCount: number; isWide: boolean }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    options.forEach((option, index) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: Math.min(currentStackedStarsCount, MAX_STARS_COUNT),\n        isWide: index === options.length - 1,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, options, starsNeeded]);\n\n  return (\n    <div className={buildClassName(styles.options, className)}>\n      {renderingOptions?.map(({ option, starsCount, isWide }) => {\n        const length = renderingOptions?.length;\n        const isOdd = length % 2 === 0;\n        const isActiveOption = option === selectedStarOption;\n\n        let perUserStarCount;\n        if (option && 'winners' in option) {\n          const winner = option.winners.find((opt) => opt.users === selectedStarCount)\n            || option.winners.reduce((max, opt) => (opt.users > max.users ? opt : max), option.winners[0]);\n          perUserStarCount = winner?.perUserStars;\n        }\n\n        return (\n          <div\n            className={buildClassName(\n              styles.option, (!isOdd && isWide) && styles.wideOption, isActiveOption && styles.active,\n            )}\n            key={option.stars}\n            onClick={() => onClick?.(option)}\n          >\n            <div className={styles.optionTop}>\n              +{formatInteger(option.stars)}\n              <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n                {Array.from({ length: starsCount }).map(() => (\n                  <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n                ))}\n              </div>\n            </div>\n            <div className={styles.optionBottom}>\n              {formatCurrency(lang, option.amount, option.currency)}\n            </div>\n            {(isActiveOption || (selectedStarOption && 'winners' in selectedStarOption)) && perUserStarCount && (\n              <div className={styles.optionBottom}>\n                <div className={styles.perUserStars}>\n                  {renderText(oldLang('BoostGift.Stars.PerUser', formatInteger(perUserStarCount)))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      })}\n      {!areOptionsExtended && canExtend && (\n        <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n          {oldLang('Stars.Purchase.ShowMore')}\n          <Icon className={styles.iconDown} name=\"down\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StarTopupOptionList);\n"],"names":["getViewableMedia","params","type","media","mediaIndex","isSingle","length","avatar","profilePhotos","photos","action","document","photo","video","webPage","paidMedia","getMessageContent","message","isDocumentPhoto","isDocumentVideo","webPagePhoto","webPageVideo","webPageDocument","isDocumentMedia","undefined","extendedMedia","extendedPhoto","extendedVideo","isGif","createGhost","source","origin","ghost","createElement","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","ProfileAvatar","SettingsAvatar","profileInfo","querySelector","cloneNode","getNodes","index","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","id","PreviewMedia","SharedMedia","SearchResult","MiddleHeaderAvatar","ChannelAvatar","SuggestedAvatar","StarsTransaction","SponsoredMessage","MESSAGE_CONTENT_SELECTOR","ScheduledInline","Inline","container","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","style","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","FALLBACK_DIMENSIONS","AVATAR_FULL_DIMENSIONS","useMediaProps","isAvatar","delay","isPhotoAvatar","mediaType","isVideo","isVideoAvatar","isDocument","isRound","isPhoto","isFromSharedMedia","isFromSearch","getMediaOrAvatarHash","useMemo","isFull","getVideoProfilePhotoMediaHash","getMediaHash","getProfilePhotoMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","BlobUrl","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","useEffect","onload","blurredDataUri","size","clear","set","window","setTimeout","useBlur","Boolean","useBlurSync","getMediaThumbUri","bestData","mediaSize","getMediaFileSize","isLocal","dimensions","VIDEO_AVATAR_FULL_DIMENSIONS","getPhotoFullDimensions","getVideoDimensions","memo","ReportAvatarModal","isOpen","peerId","onClose","onCloseAnimationEnd","reportProfilePhoto","getActions","selectedReason","setSelectedReason","useState","description","setDescription","handleReport","useLastCallback","chatId","reason","handleSelectReason","value","handleDescriptionChange","e","target","lang","useOldLang","REPORT_OPTIONS","label","title","React","Modal","onEnter","className","RadioGroup","name","options","onChange","selected","InputText","Button","color","isText","onClick","getZoomChange","setZoomChange","useZoomChange","useUnmountCleanup","DeleteProfilePhotoModal","profileId","onConfirm","deleteProfilePhoto","deleteChatPhoto","handleDeletePhoto","useCallback","isUserId","withGlobal","global","item","canUpdateMedia","tabState","selectTabState","mediaViewer","avatarOwner","avatarPhoto","chat","selectCurrentChat","currentMessageList","selectCurrentMessageList","threadId","isProtected","selectIsMessageProtected","activeDownloads","selectActiveDownloads","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","selectAllowedMessageActionsSlow","isCurrentAvatar","avatarPhotoId","canDeleteAvatar","canUpdate","messageListType","MediaViewerActions","canReportAvatar","onReportAvatar","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","useFlag","isMobile","useAppLayout","downloadMedia","cancelMediaDownload","updateProfilePhoto","updateChatPhoto","openMediaViewer","openDeleteMessageModal","isMessage","fileName","getMediaFilename","isDownloading","getIsDownloading","downloadProgress","handleDownloadClick","originMessage","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","isAvatarView","forceOnHeavyAnimation","MenuButton","onTrigger","round","ariaLabel","Icon","renderDeleteModal","openDeleteModalHandler","messageIds","isSchedule","menuItems","isForwardingAllowed","content","push","icon","children","Math","href","download","destructive","DropdownMenu","trigger","positionX","map","MenuItem","key","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","getCurrentTime","setCurrentTime","useCurrentTimeSignal","MediaViewerFooter","text","buttonText","isForVideo","handleSponsoredClick","isForceMobileVersion","isMultiline","setIsMultiline","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","onButtonClick","classNames","buildClassName","stopPropagation","dir","isRectangular","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","forEach","connector","request","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","data","result","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","SeekLine","duration","bufferedRanges","isReady","posterSize","playbackRate","isActive","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","remaining","animateNumber","from","to","onUpdate","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","stopAnimation","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","styles","start","end","PLAYBACK_RATES","VideoPlayerControls","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","ripple","RangeSlider","bold","renderTime","formatFileSize","Menu","positionY","autoClose","rate","disabled","VideoPlayer","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","isSponsoredMessage","timestamp","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","isUnsupported","useUnsupportedMedia","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseLeave","onContextMenu","onDoubleClick","_extends","autoPlay","controlsList","playsInline","loop","onWaiting","onPlay","onEnded","onPause","onTimeUpdate","join","sponsoredMessage","textMessage","maxTimestamp","selectMessageTimestampableDuration","MediaViewerContent","withAnimation","isMoving","onFooterClick","updateLastPlaybackTimestamp","toggleControlsOnMove","updatePlaybackTimestamp","useThrottledCallback","MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION","isInAlbum","newTimestamp","PLAYBACK_SAVE_INTERVAL","useSignalEffect","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","textParts","renderMessageText","forcePlayback","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelZoomAnimation","SwipeDirection","MediaViewerSlides","isLoadingMoreMedia","isSynced","loadMoreItemsIfNeeded","getNextItem","selectItem","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveItem","setActiveItem","activeItemRef","isScaled","activeItem","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectItemDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","useTimeout","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","cActiveItem","nextItem","timing","changeSlideOnClick","closest","calculateOffsetBoundaries","offsetTop","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","max","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","min","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","event","captureEvent","dragOffsetX","dragOffsetY","cancelDrag","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","includes","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","prevItem","hasPrev","hasNext","isRtl","toFixed","element","selector","matches","messageSender","selectSender","owner","SenderInfo","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","subtitle","isFallbackAvatar","fallbackPhoto","isPersonalAvatar","personalPhoto","date","formattedDate","formatMediaDateTime","count","currentIndex","countText","parts","isChannel","isChatChannel","isGroup","isChatGroup","senderTitle","getPeerTitle","Avatar","peer","renderText","shouldSkipHistoryAnimations","withDynamicLoading","standaloneMedia","selectPerformanceSettingsValue","currentUserId","isChatWithSelf","selectIsChatWithSelf","selectPeer","isChatAdmin","selectPeerPhotos","isLoading","chatMessages","selectScheduledMessage","selectChatMessage","selectSponsoredMessage","selectChatScheduledMessages","selectChatMessages","isOriginInline","isOriginAlbum","collectedMessageIds","currentSearch","selectCurrentChatMediaSearch","foundIds","currentSegment","selectCurrentSharedMediaSearch","resultsByType","selectOutlyingListByMessageId","selectListedIds","MediaViewer","openForwardMenu","searchChatMediaMessages","loadMoreProfilePhotos","clickSponsored","openUrl","animationKey","senderId","prevSenderId","usePreviousDeprecated","headerAnimation","isGhostAnimation","isReportAvatarModalOpen","openReportAvatarModal","closeReportAvatarModal","currentItem","getMediaViewerItem","info","messageMediaIds","getChatMediaMessageIds","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","prevMessage","prevIsHidden","prevOrigin","prevBestImageData","shouldAnimateOpening","beginHeavyAnimation","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","imageEl","messageListElement","getOffsetToContainer","scrollTop","offsetHeight","isMessageImageFullyVisible","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","handleFooterClick","HTMLElement","isFromMedia","isMedia","randomId","handleForward","fromChatId","captureEscKeyListener","stopCurrentAudio","currentMediaMessageId","fromMedia","fromMediaIndex","nextIndex","fromAvatarOwner","fromProfilePhotos","fromSponsoredMessage","fromSponsoredMessageIndex","fromMessage","getMessagePaidMedia","indexOf","nextMessageId","nextMessage","openMediaViewerItem","itemChatId","itemMessageId","itemStandaloneMedia","handleBeforeDelete","prevMedia","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","avatarOwnerId","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","ctx","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","RADIUS","userId","getPeerStoryHtmlId","StoryViewerOrigin","StoryRibbon","storyRibbonStyles","root","ChatList","BASE_SCREEN_WIDTH","BASE_SCREEN_HEIGHT","BASE_ACTIVE_SLIDE_WIDTH","BASE_ACTIVE_SLIDE_HEIGHT","BASE_SLIDE_WIDTH","BASE_SLIDE_HEIGHT","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","slide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","story","isCurrentUserPremium","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","hasForwardInfo","forwardInfo","thumbnail","previewHash","getStoryMediaHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","canDownload","noForwards","downloadHash","downloadMediaData","storyViewer","isStealthModalOpen","stealthMode","stories","selectIsCurrentUserPremium","StealthModeModal","toggleStealthModal","activateStealthMode","showNotification","openPremiumModal","isOnCooldown","setIsOnCooldown","serverTime","getServerTime","cooldownUntil","handleTimerEnds","handleActivate","initialSection","contentClassName","isSlim","ListItem","multiline","inactive","leftElement","isShiny","withPremiumGradient","TextTimer","langKey","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","storyId","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","contactListIds","selectedIds","lockedIds","onSelect","searchQuery","setSearchQuery","displayedIds","contactIds","unique","filterPeersByQuery","ids","query","PeerPicker","itemIds","MEMO_EMPTY_ARRAY","lockedSelectedIds","filterValue","filterPlaceholder","searchInputId","isSearchable","withDefaultPadding","forceShowSelf","onSelectedIdsChange","onFilterChange","allowMultiple","withStatus","itemInputType","usersById","saveCloseFriends","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","closeFriendIds","isCloseFriend","useEffectWithPrevDeps","prevIsActive","handleSelectedContactIdsChange","handleSubmit","userIds","Fragment","FloatingActionButton","isShown","OPTIONS","actions","Screens","selectPeerStory","visibility","contactList","users","byId","editStoryPrivacy","toggleStoryInProfile","isOpenModal","openModal","closeModal","privacy","setPrivacy","isPinned","setIsPinned","isInProfile","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","allowUserIds","selectedBlockedIds","blockUserIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","renderContent","storyLifeTime","getHours","expireDate","section","list","option","checked","input","handleVisibilityChange","newVisibility","teactExperimentControlled","optionContent","option_name","tabIndex","role","closeFriends","denyList","handleActionClick","actionInner","getUserFullName","Switcher","footer","submit","renderPrivacyList","CloseFriends","AllowDenyList","modal","noBackdrop","header","closeButton","headerTitle","renderHeaderContent","slideClassName","sender","fromPeerId","EmbeddedStoryForward","openStoryViewer","loadPeerStoriesByIds","openChat","storyIds","fromName","openOriginalStory","isDeleted","isSingleStory","handleMouseDown","useFastClick","PeerColorWrapper","getPeerColorClass","onMouseDown","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","renderTextContent","renderSender","isExpanded","onExpand","onFold","contentRef","textRef","showMoreButtonRef","renderingStory","useCurrentOrPrev","caption","hasOverflow","setHasOverflow","prevIsExpanded","usePrevDuringAnimation","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","requestMeasure","button","offsetWidth","setProperty","requestForcedReflow","textContainer","textOffsetTop","lineHeight","totalLines","calcTextLineHeightAndCount","isOverflowing","overflowShift","scrollTo","fullClassName","MessageText","messageOrStory","withTranslucentThumbs","StoryFooter","openStoryViewModal","sendStoryReaction","views","isOut","sentReaction","viewsCount","forwardsCount","reactionsCount","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","canForward","isPublic","containerId","getStoryKey","recentViewers","getGlobal","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","reaction","AvatarList","peers","nonInteractive","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","VIDEO_MIN_READY_STATE","IS_SAFARI","appConfig","user","selectUser","selectChat","userFullInfo","selectUserFullInfo","viewModal","isPrivacyModalOpen","storyList","forwardMessages","forwardedStoryId","premiumModal","safeLinkModalUrl","mapModal","reportModal","giftInfoModal","isPaymentMessageConfirmDialogOpen","isPremiumModalOpen","shouldForcePause","reactionPicker","mediaAreas","forwardSenderId","find","area","channelId","forwardSender","withHeaderAnimation","fromPeer","fromId","paidMessagesStars","selectPeerPaidMessagesStars","isAccountFrozen","selectIsCurrentUserFrozen","orderedIds","storyIdsByPeerId","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","arePeerSettingsLoaded","settings","isArchivedStories","isPrivateStories","getIsAnimating","onDelete","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openStoryPrivacyEditor","loadPeerSettings","fetchChat","loadStoryViews","oldLang","useLang","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","isUserStory","isChatStory","isChannelStory","canPinToProfile","canUnpinFromProfile","areViewsExpired","forwardSenderTitle","canCopyLink","usernames","canShare","canPlayStory","shouldShowComposer","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","thumbRef","useCanvasBlur","previewTransitionClassNames","useMediaTransitionDeprecated","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","shouldRenderCaption","captionAppearanceAnimationClassNames","isStreamingSupported","useStreaming","PRIMARY_VIDEO_MIME","useStoryPreloader","canWrite","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","useLongPress","onStart","hasAllData","useBackgroundMode","load","keyCode","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleOpenChat","handleForwardPeerClick","handleFromPeerClick","handleOpenPrevStory","handleOpenNextStory","handleVideoStoryTimeUpdate","captureKeyboardListeners","onRight","onLeft","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","diff","handleDownload","inputPlaceholder","amount","formatStarsAsIcon","asFont","withNodes","StoryProgress","formatRelativePastTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","Skeleton","OptimizedVideo","canPlay","isPriority","disableRemotePlayback","SECONDARY_VIDEO_MIME","MediaAreaOverlay","withStory","storyViewerMode","StoryCaption","Composer","MAIN_THREAD_ID","getIsMobile","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","editableInputId","EDITABLE_STORY_INPUT_ID","inputId","onFocus","onBlur","lastViewedByPeerIds","lastViewedId","storyIdsForViewer","peerStories","lastReadId","hasUnreadStories","previewIndexId","isLoaded","imageHash","thumbUrl","currentPeerId","currentStoryId","isSinglePeer","isPrivate","isArchive","byPeerId","orderedPeerIds","active","peerIds","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","rendersRef","setIsAnimating","setRef","renderingPeerIds","slice","renderingPeerPosition","currentPeerPosition","calculateTransformX","reduce","transformX","getCurrentStoryRef","composer","focusEditableElement","disableScrolling","enableScrolling","Object","entries","String","handleTransitionEnd","Story","onTransitionEnd","buildStyle","renderStory","StoryPreview","renderStoryPreview","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","scrollHeight","DEFAULT_REACTION_SIZE","storyView","availableReactions","reactions","StoryView","closeStoryViewer","unblockUser","blockUser","deleteContact","updateStoryView","closeStoryViewModal","contextActions","areStoriesBlocked","isUserBlocked","isContact","fullName","handler","isOnlyStories","statusIcon","shouldColorStatus","status","isModified","formatDateAtTime","opacityFadeIn","blocked","rightElement","ReactionStaticEmoji","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","PrivateChatInfo","withColoredStatus","noStatusOrTyping","GroupChatInfo","nextOffset","loadStoryViewList","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","setQuery","isExpired","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViews","sort","a","b","reactionA","reactionB","prepareComparator","placeholderCount","notAllAvailable","handleLoadMore","MoreMenuButton","isMenuOpen","fluid","sortButton","topButton","faded","iconSort","iconDown","viewsList","contactFilter","check","SearchInput","search","topScrolled","onScroll","centeredInfo","InfiniteScroll","items","onLoadMore","view","additionalKeyId","Array","_","i","PlaceholderChatInfo","bottomInfo","closeStoryPrivacyEditor","reportStory","storyToDelete","setStoryToDelete","isPrevOpen","handleOpenDeleteModal","s","handleCloseDeleteModal","openMessageReport","thumb","safeAreaBottom","getComputedStyle","documentElement","getPropertyValue","parseFloat","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StorySettings","TOPIC_ICON_SIZE","ITEM_CLASS_NAME","ChatOrUserPicker","chatOrUserIds","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","isLowStackPriority","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","selectTopicsById","selectTopics","forumTopicsById","useSelector","topicIds","topics","chatsById","chats","chatFullInfoById","fullInfoById","searchTitle","toLowerCase","values","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","renderChatItem","isSelf","isApiPeerChat","subtitleClassName","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","getSubtitle","PickerItem","FullNameTitle","isSavedMessages","avatarElement","PEER_PICKER_ITEM_HEIGHT_PX","onKeyDown","placeholder","withAbsolutePositioning","maxHeight","Loading","topicId","TopicIcon","letterClassName","itemSelector","listIds","orderedPinnedIds","activeListIds","archivedListIds","archived","pinnedIds","RecipientPicker","API_CHAT_TYPES","onSelectRecipient","setSearch","priorityIds","isDeletedUser","chatFullInfo","selectChatFullInfo","sorted","sortChatIds","filterChatIdsByType","renderingIds","isForwarding","isManyMessages","isStory","ForwardRecipientPicker","openChatOrTopicWithReplyInDraft","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","toChatId","getUserFirstOrLastName","getChatTitle","DraftRecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","AttachBotRecipientPicker","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","error","isSlowMode","hasErrorKey","dialogs","Dialogs","dismissDialog","sendMessage","isModalOpen","dialog","contactRequest","handleConfirm","contact","messageList","getReadableErrorText","pick","Notifications","notifications","notification","Notification","localId","SafeLinkModal","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","withMarkdown","OpenMapModal","closeMapModal","point","geoPoint","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","IS_MAC_OS","currentUser","UrlAuthModal","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","isWriteAllowed","handleLoginChecked","Checkbox","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","padStart","formatDay","CalendarModal","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleChangeHours","replace","hours","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","handleDateSelect","inputMode","historyCalendarSelectedAt","HistoryCalendar","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","phoneCodeList","countryList","phoneCodes","NewContactModal","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","ResizeHandleType","resizeHandleSelectorsMap","Top","Bottom","Left","Right","topLeft","TopLeft","topRight","TopRight","bottomLeft","BottomLeft","bottomRight","BottomRight","resizeHandleSelectors","resizeTimeout","FULLSCREEN_POSITION","webApps","selectActiveWebApp","modalState","openedWebApps","isMinimizedState","activeTabBot","MinimizedWebAppModal","changeWebAppModalState","closeWebAppModal","openedWebAppsValues","openedTabsCount","activeTabBotId","app","handleCloseClick","handleExpandClick","state","activeTabName","botName","pluralValue","renderTitle","isPopularApp","requestMainWebView","theme","extractCurrentThemeParams","activeUserCount","botActiveUsers","badgeText","formatIntegerCompact","PeerBadge","avatarContainer","textClassName","badgeClassName","userCountBadge","badgeIconClassName","userBadgeIcon","badgeIcon","runThrottled","cb","globalSearch","popularBotApps","fetchingStatus","botApps","recentBotIds","topBotApps","MoreAppsTabContent","shouldShowMoreMine","setShouldShowMoreMine","searchPopularBotApps","handleToggleShowMoreMine","prev","filteredFoundIds","LoadMoreDirection","Backwards","handleSearchInputReset","noFastList","preloadBackwards","onReset","sectionTitle","showMoreLink","sectionContent","WebAppGridItem","FULLSCREEN_BUTTONS_AREA_HEIGHT","MAIN_BUTTON_ANIMATION_TIME","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","cancel","activeWebApp","activeWebAppKey","selectWebApp","activeBotId","attachBot","attachMenu","bots","botAppSettings","botInfo","appSettings","selectTheme","isPaymentModalOpen","regularPaymentStatus","payment","starsPaymentStatus","inputInvoice","starsInputInvoice","starsPayment","botAppPermissions","selectBotAppPermissions","paymentStatus","WebAppModalTabContent","webApp","registerSendEventCallback","registerReloadFrameCallback","isTransforming","isMultiTabSupported","onContextMenuButtonClick","modalHeight","closeActiveWebApp","sendWebViewData","toggleAttachBot","openTelegramLink","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","updateWebApp","resetPaymentStatus","openChatWithInfo","openEmojiStatusAccessModal","openLocationAccessModal","openPreparedInlineMessageModal","mainButton","setMainButton","secondaryButton","setSecondaryButton","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequestingWriteAccess","setIsRequestingWriteAccess","requestedFileDownload","setRequestedFileDownload","bottomBarColor","setBottomBarColor","unlockPopupsAt","handlePopupOpened","handlePopupClosed","sequentialLimit","resetAfter","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","headerButtonRef","headerButtonCaptionRef","exitFullScreenCallback","fullscreenElementRef","activeWebAppName","appName","isBackButtonVisible","placeholderPath","isCloseModalOpen","isRemoveModalOpen","webAppKey","getWebAppKey","isAvailable","IS_GEOLOCATION_SUPPORTED","isAccessRequested","geolocation","isAccessGranted","updateCurrentWebApp","updatedPartialWebApp","update","themeParams","secondary_bg_color","themeBackgroundColor","bg_color","backgroundColorFromEvent","setBackgroundColorFromEvent","backgroundColorFromSettings","backgroundColor","backgroundDarkColor","themeHeaderColor","headerColorFromEvent","setHeaderColorFromEvent","headerColorFromSettings","headerColor","headerDarkColor","frameRef","isSimple","reloadFrame","sendEvent","sendFullScreenChanged","sendViewport","sendSafeArea","sendTheme","useWebAppFrame","isSimpleView","onEvent","onLoad","openInvoice","closeWebApp","openSuggestedStatusModal","isReloadSupported","reloadTimeout","ignoreEventsRef","lastFrameSizeRef","handleLoad","contentWindow","JSON","stringify","eventType","eventData","is_fullscreen","forceReloadFrame","once","isNonStable","is_expanded","is_state_stable","theme_params","sendCustomStyle","handleMessage","parse","skipClosingConfirmation","scrollbarColor","reload_supported","req_id","slug","linkUrl","available","custom_emoji_id","BigInt","customEmojiId","plannedEvents","getIsWebAppsFullscreenSupported","exitIfFullscreenCallback","TME_LINK_PREFIX","path_full","shouldIgnoreCache","force_request","is_visible","isSettingsButtonVisible","validateHexColor","color_key","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","shouldConfirmClosing","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","handleRejectFileDownload","fileUrl","handleCheckDownloadFile","file_name","access_requested","access_granted","geolocationData","getGeolocationStatus","accessRequested","accessGranted","latitude","longitude","altitude","course","heading","speed","horizontal_accuracy","accuracy","vertical_accuracy","altitudeAccuracy","handleRequestLocation","isMainButtonVisible","isSecondaryButtonVisible","handleHideCloseModal","handleConfirmCloseModal","handleHideRemoveModal","handleMainButtonClick","handleSecondaryButtonClick","buttonId","button_id","handleAppPopupModalClose","sendThemeCallback","setFullscreenCallback","checkIfFullscreen","sendFullScreenChangedCallback","visibilityChangedCallBack","prevModalState","prevIsPaymentModalOpen","handleRemoveAttachBot","isEnabled","handleAcceptPhone","shouldCloseActive","handleAcceptWriteAccess","handleDownloadFile","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","secondaryButtonCurrentPosition","secondaryButtonCurrentColor","secondaryButtonCurrentTextColor","secondaryButtonCurrentIsActive","secondaryButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideMainButton","setShouldHideMainButton","shouldHideSecondaryButton","setShouldHideSecondaryButton","shouldShowMainButton","setShouldShowMainButton","shouldShowSecondaryButton","setShouldShowSecondaryButton","shouldShowAppNameInFullscreen","setShouldShowAppNameInFullscreen","backButtonTextWidth","setBackButtonTextWidth","isVerticalLayout","rowsCount","hideDirection","mainButtonChangeTimeout","mainButtonFastTimeout","secondaryButtonChangeTimeout","secondaryButtonFastTimeout","appNameDisplayTimeout","frameStyle","handleBackClick","handleCollapseClick","handleShowContextMenu","backIconClass","backButtonCaption","hasHeaderElement","viewBox","renderDefaultPlaceholder","sandbox","allow","allowFullScreen","hasCloseButton","filename","MINIMIZED_STATE_SIZE","DEFAULT_MAXIMIZED_STATE_SIZE","MAXIMIZED_STATE_MINIMUM_SIZE","miniAppsCachedPosition","miniAppsCachedSize","selectSharedSettings","cachedPosition","cachedSize","WebAppModal","prolongWebView","openWebAppTab","openMoreAppsTab","closeMoreAppsTab","updateMiniAppCachedPosition","updateMiniAppCachedSize","getMaximizedStateSize","setMaximizedStateSize","getSize","openedOrderedKeys","sessionKeys","isMoreAppsTabActive","tabs","isMaximizedState","isFullScreen","supportMultiTabMode","menuRef","getTriggerElement","getRootElement","getMenuElement","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","isDraggingEnabled","setIsDraggingEnabled","headerElement","containerElement","isDragging","draggableStyle","dragHandleElementRef","isDragEnabled","originalSize","minimumSize","elementCurrentPosition","setElementCurrentPosition","elementCurrentSize","setElementCurrentSize","getElementPositionOnStartTransform","setElementPositionOnStartTransform","getElementSizeOnStartTransform","setElementSizeOnStartTransform","getTransformStartPoint","setTransformStartPoint","elementPositionOnStartTransform","transformStartPoint","dragHandleElement","isInitiated","setIsInitiated","wasElementShown","setWasElementShown","startDragging","stopDragging","startResizing","stopResizing","isWindowsResizing","startWindowResizing","stopWindowResizing","hitResizeHandle","setHitResizeHandle","getVisibleArea","innerWidth","innerHeight","updateCurrentPosition","getActualPosition","getCenteredPosition","visibleArea","centeredPosition","handleStartDrag","handleStartResize","targetElement","resizeHandle","RESIZE_HANDLE_SELECTOR","getResizeHandleFromTarget","handleDragRelease","handleResizeRelease","ensurePositionInVisibleArea","visibleAreaWidth","visibleAreaHeight","componentWidth","componentHeight","newX","newY","adjustPositionWithinBounds","newPosition","ensureSizeInVisibleArea","sizeForCheck","newSize","originalWidth","originalHeight","adjustSizeWithinBounds","handleWindowResize","handleDrag","sizeOnStartTransform","pageVisibleX","pageVisibleY","maxX","maxY","newBounds","cleanups","resizeHandler","cursorStyle","actualPosition","useDraggable","getMinimumSize","currentSize","currentWidth","currentHeight","queryId","openTabsCount","useInterval","replyInfo","sendEventCallback","reloadFrameCallback","callback","handleSettingsButtonClick","handleRefreshClick","handleModalClose","handleCloseMoreAppsTab","handleTabClose","handleToggleClick","handleFullscreenClick","handleOpenMoreAppsTabClick","handleTabClick","tab","openBotChat","renderMenuItems","isAttachBot","renderMoreMenu","anchor","backButtonClassName","headerTextVar","r","g","hexToRgb","luma","getColorLuma","renderTabCurveBorder","fill","buildResizeHandleClass","handleClassName","RESIZE_HANDLE_CLASS_NAME","useHorizontalScroll","dialogRef","dialogStyle","dialogContent","shortName","renderActiveTab","noBackdropClose","BotTrustModal","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","AttachBotInstallModal","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","split","linkText","MINI_APP_TOS_URL","rel","isConfirmDisabled","DeleteFolderDialog","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","COLORS","PremiumFeatureItem","isFontIcon","newIndex","colorA","colorB","ceil","lerpRgb","buttonClassName","fontIcon","SliderDots","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","isLast","isPreLast","isFirst","isPreFirst","isInvisible","PremiumLimitsCompare","leftValue","rightValue","floatingBadgeIcon","rightStyle","COLOR_START","COLOR_END","PremiumLimitPreview","colorStepProgress","lerp","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","AnimatedSticker","tgsUrl","play","isLowPriority","noLoop","stickers","premium","PremiumFeaturePreviewStickers","setOffset","setSize","renderedStickers","cycleRestrict","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","AVATAR_SIZES","giant","PremiumFeaturePreviewVideo","circleRef","dpr","useDevicePixelRatio","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","saved_tags","last_seen","message_privacy","effects","PREMIUM_FEATURE_DESCRIPTIONS","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","recommendedChannels","moreAccounts","LIMITS_DESCRIPTIONS","PremiumFeatureModal","promo","isPremium","limits","premiumPromoOrder","subscriptionOption","onClickSubscribe","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","PREMIUM_FEATURE_SECTIONS","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","filteredSections","subscriptionButtonText","months","currency","perMonthPrice","price","formatCurrency","handleLimitsScroll","scrollContainer","animateHorizontalScroll","then","handleSelectSlide","currentSection","hasHeaderBackdrop","scrollLeft","scrollLeftOriginal","reverseIndex","prevElement","reverseElement","toString","toggleExtraClass","PREMIUM_LIMITS_ORDER","defaultLimit","premiumLimit","PremiumFeaturePreviewStories","videoSections","videos","PREMIUM_BOTTOM_VIDEOS","PremiumSubscriptionOption","fullMonthlyAmount","isGiveaway","perMonth","isUserCountPlural","discount","handleChange","formatCurrencyAsString","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","PremiumTags","PremiumLastSeen","PremiumMessagePrivacy","PremiumEffects","fromUser","fromUserId","fromUserStatusEmoji","emojiStatus","customEmojis","documentId","fromUserStatusSet","selectStickerSet","stickerSetInfo","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","PremiumMainModal","closePremiumModal","requestConfetti","loadStickers","openStickerSet","isHeaderHidden","setHeaderHidden","setCurrentSection","selectedSubscriptionOption","setSubscriptionOption","handleOpenSection","handleResetSection","handleClickWithStartParam","handleChangeSubscriptionOption","foundOption","showConfetti","withStars","prevIsPremium","defaultOption","handleOpenStatusSet","monthOption","subscribeButtonText","CustomEmoji","isBig","PremiumLogo","template","first","second","emoji","thumbCustomEmojiId","link","getHeaderText","statusText","entities","statusEntities","renderFooterText","ItemPicker","notFoundText","noScrollRestore","isViewOnly","itemClassName","forceRenderAllItems","onDisabledClick","optionalProps","lockedSelectedValues","lockedUnselectedValues","timeoutId","selectedValues","selectedValue","lockedSelectedValuesSet","Set","lockedUnselectedValuesSet","sortedItemValuesList","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","has","concat","handleItemClick","newSelectedValues","splice","onSelectedValuesChange","onSelectedValueChange","viewportValuesList","handleFilterChange","renderItem","itemOption","subLabel","isItemLoading","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","inputElement","Radio","onlyInput","pickerList","padded","noResults","CountryPickerModal","selectionLimit","selectedCountryIds","setSelectedCountryIds","noPickerScrollRestore","country","iso2","defaultName","handleSelectedIdsChange","newSelectedIds","pickerSelector","pickerTitle","main","picker","GiveawayChannelPickerModal","giveawayChatId","initialSelectedIds","onSelectedIdsConfirmed","pendingChannelId","setPendingChannelId","isConfirmModalOpen","openConfirmModal","closeConfirmModal","setSelectedIds","channelIds","isChatSuperGroup","displayedChannelIds","foundChannelIds","handleSelectedChannelIdsChange","privateLinkChannelId","isChatPublic","confirmPrivateLinkChannelSelection","handleModalConfirm","PickerModal","shouldAdaptToSearch","withFixedHeight","confirmButtonText","GiveawayTypeOption","isLink","onClickAction","userNames","selectedMemberIds","displayText","members","adminMembersById","GiveawayUserPickerModal","memberIds","statusesById","adminIdsSet","sortUserIds","displayedMemberIds","filteredUserIds","isUserBot","handleSelectedMemberIdsChange","GIVEAWAY_IMG_LIST","GiftGreenRound","GiftBlueRound","GiftRedRound","giveawayModal","gifts","selectedMemberList","selectedChannelList","selectedChannelIds","giveawayBoostPerPremiumLimit","giveawayBoostsPerPremium","isStarsGiftEnabled","userSelectionLimit","giveawayAddPeersMax","countrySelectionLimit","giveawayCountriesMax","general","prepaidGiveaway","starsGiftOptions","starOptions","GiveawayModal","GIVEAWAY_BOOST_PER_PREMIUM","GIVEAWAY_MAX_ADDITIONAL_COUNTRIES","GIVEAWAY_MAX_ADDITIONAL_USERS","closeGiveawayModal","launchPrepaidGiveaway","launchPrepaidStarsGiveaway","isCalendarOpened","openCalendar","closeCalendar","isCountryPickerModalOpen","openCountryPickerModal","closeCountryPickerModal","isUserPickerModalOpen","openUserPickerModal","closeUserPickerModal","isChannelPickerModalOpen","openChannelPickerModal","closeChannelPickerModal","TYPE_OPTIONS","GiftStar","customExpireDate","setCustomExpireDate","selectedRandomUserCount","setSelectedRandomUserCount","selectedGiveawayOption","setGiveawayOption","selectedStarOption","setSelectedStarOption","selectedSubscriberOption","setSelectedSubscriberOption","selectedMonthOption","setSelectedMonthOption","selectedUserIds","setSelectedUserIds","setSelectedChannelIds","shouldShowWinners","setShouldShowWinners","shouldShowPrizes","setShouldShowPrizes","prizeDescription","setPrizeDescription","dataPrepaidGiveaway","setDataPrepaidGiveaway","dataStarsPrepaidGiveaway","setDataStarsPrepaidGiveaway","isPremiumGiveaway","isStarsGiveaway","selectedUserCount","boostQuantity","boostStarsQuantity","yearlyBoosts","SUBSCRIBER_OPTIONS","monthQuantity","isStarsPrepaidGiveaway","isPremiumPrepaidGiveaway","selectedGift","gift","selectedStarsGift","stars","filteredGifts","STARS_CURRENCY_CODE","basicGift","userCountOptions","winner","winnerCountOptions","winners","quantity","handlePremiumClick","boostChannelId","additionalChannelIds","isOnlyForNewSubscribers","countries","areWinnersVisible","untilDate","confirmLaunchPrepaidGiveaway","giveawayId","paymentPurpose","handleRandomUserCountChange","newValue","handleWinnerCountChange","handlePrizeDescriptionChange","handleChangeSubscriberOption","handleChangeTypeOption","handleExpireDateChange","handleSetCountriesListChange","handleSelectedUserIdsChange","handleShouldShowWinnersChange","handleShouldShowPrizesChange","onClickActionHandler","handleStarClick","renderGiveawayOptionList","filteredChannelIds","deleteParticipantsHandler","iconClassName","subLabelClassName","formatDateTimeToString","boosts","RangeSliderWithMarks","rangeCount","marks","StarTopupOptionList","selectedStarCount","match","Link","isPrimary","renderPremiumFeaturesLink","GIVEAWAY_MAX_ADDITIONAL_CHANNELS","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","savedDialogsPinned","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","PremiumLimitReachedModal","closeLimitReachedModal","isClosing","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","stickerSetEl","isClose","animateScroll","maxDistance","StickerSetCover","stickerSet","STICKER_SIZE_PICKER_HEADER","observeIntersection","sharedCanvasRef","hasThumbnail","hasVideoThumb","hasAnimatedThumb","hasStaticThumb","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","useIsIntersecting","shouldPlay","shouldFallbackToSticker","IS_WEBM_SUPPORTED","firstStickerHash","getStickerMediaHash","firstStickerMediaData","mediaHash","coords","useCoordsInSharedCanvas","observeIntersectionForPlaying","selectIsAlwaysHighPriorityEmoji","sharedCanvas","sharedCanvasCoords","forceAlways","getFirstLetters","contentForStatusMenuContext","arg","StickerButton","noContextMenu","isStatusPicker","canViewSet","observeIntersectionForShowing","isSelected","shouldIgnorePremium","noShowPremium","withTranslucentThumb","clickArg","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","isEffectEmoji","withSparkles","setEmojiStatus","isFree","hasEffect","isCustomEmoji","shouldLoad","isIntesectingForShowing","handleBeforeContextMenu","shouldRenderContextMenu","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","until","shouldShowCloseButton","contextMenuItems","preventMessageInputBlurWithBubbling","Sparkles","preset","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","noVideoOnMobile","withSharedAnimation","noFastClick","ReactionEmoji","loadAndPlay","sharedCanvasHqRef","isCustom","availableReaction","staticIcon","animationId","selectAnimation","getDocumentMediaHash","LOCAL_TGS_URLS","StarReaction","EMOJI_SIZE_PICKER","AnimatedIconWithPreview","collectibleStatuses","collectibleEmojiStatuses","statuses","StickerSet","isNearActive","favoriteStickers","isReactionPicker","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isChatEmojiSet","isChatStickerSet","isTranslucent","noContextMenus","onReactionSelect","onReactionContext","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isStatusCollectible","COLLECTIBLE_STATUS_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","isLottie","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","accessHash","isInstalled","installedDate","isArchived","canCut","EFFECT_EMOJIS_SET_ID","EFFECT_STICKERS_SET_ID","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","collectibleEmojiIdsSet","withAddSetButton","addSetButtonText","pill","grey","reactionId","isHqEmoji","canvasRef","HEADER_BUTTON_WIDTH","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","setsById","stickerSetsById","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","defaultTags","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","chatEmojiSetId","emojiSet","isWithPaidReaction","isPaidReactionAvailable","defaultTagReactions","CustomEmojiPicker","pickerListClassName","withDefaultTopicIcons","onCustomEmojiSelect","handleContentScroll","shouldHideTopBorder","pickTruthy","collectibleStatusEmojis","collectibleStatusEmojiIds","prefix","canLoadAndPlay","areAddedLoaded","allSets","defaultSets","TOP_SYMBOL_SET_ID","topReactionsSlice","unshift","cleanRecentReactions","some","topReaction","cleanAvailableReactions","isInactive","allRecentReactions","defaultStatusIconsPack","uniqueByField","defaultTopicIconsPack","userSetIds","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","newLeft","handleEmojiSelect","pickerStyles","headerClassName","listClassName","firstSticker","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","isFaded","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","StatusPickerMenu","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","transformOriginX","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","CUSTOM_EMOJI_SIZE","SuggestedStatusModal","closeSuggestedStatusModal","sendWebAppEvent","renderingModal","mockPeerWithStatus","formatShortDuration","handleSetStatus","expires","referrerWebAppKey","hasAbsoluteCloseButton","loopLimit","PeerChip","mockPeer","withEmojiStatus","getFirstAvailableBoost","myBoosts","boost","firstBoost","prevBoostedChat","BoostModal","applyBoost","closeBoostModal","loadFullChat","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","descriptionText","canBoostMore","boostStatus","hasMyBoost","areBoostsInDifferentChannels","every","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getBoostProgressInfo","hasBoost","moreBoosts","modalTitle","boostsLeftToUnrestrict","boostsToUnrestrict","boostsApplied","boostTimes","isBoostDisabled","isReplacingBoost","handleApplyBoost","slots","slot","handleProceedPremium","handleButtonClick","PremiumProgress","floatingBadgeText","isOnlyConfirm","chatMessage","GiftCodeModal","closeGiftCodeModal","applyGiftCode","canUse","toId","usedAt","handleOpenGiveaway","giveawayMessageId","modalData","LinkField","tableData","isFromGiveaway","TableInfoModal","ChatlistAlready","invite","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","isNew","alreadyPeerIds","newChatsCount","noCustomEmojiPlayback","noTitleAnimations","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","Badge","buttonBadge","isAlternateColor","ChatlistDelete","suggestedPeerIds","leaveChatlist","ChatlistNew","joinedIds","isNotJoined","selectedCount","removal","selectChatFolder","ChatlistInviteModal","renderingInfo","renderingFolderTitle","folderTabNumber","folderTitle","foldersWrapper","folders","Tab","badgeCount","isBadgeActive","ChatInviteModal","acceptChatInvite","closeChatInviteModal","participantsRef","prevModal","usePrevious","hash","inviteInfo","about","isBroadcast","participantIds","participantsCount","isRequestNeeded","handleAccept","acceptLangKey","requestToJoinLangKey","customPeer","getCustomPeerFromInvite","participants","withVideo","participantCount","participant","minLevelToRestrictAds","channelRestrictAdsLevelMin","AboutAdsModal","closeAboutAdsModal","moreMenuRef","canReport","additionalInfo","sponsorInfo","isMonetizationSharing","renderingIsNewDesign","regularAdContent","SafeLink","listItemData","TableAboutModal","headerIconName","withSeparator","SponsoredMessageContextMenuContainer","triggerRef","shouldSkipAbout","onItemClick","AboutMonetizationModal","blockchainText","monetizationTitle","specialReplacement","twoFaSettings","hint","passwordHint","VerificationMonetizationModal","closeMonetizationVerificationModal","clearMonetizationVerificationError","processMonetizationRevenueWithdrawalUrl","shouldShowPassword","setShouldShowPassword","password","currentPassword","handleClearError","PasswordForm","shouldShowSubmit","errorKey","withRegular","clearError","isPasswordVisible","shouldResetValue","onChangePasswordVisibility","EmojiStatusAccessModal","closeEmojiStatusAccessModal","toggleUserEmojiStatusPermission","loadDefaultStatusIcons","currentStatusIndex","setCurrentStatusIndex","totalCount","prevIndex","renderPickerItem","chatItem","itemName","isBotAccessEmojiGranted","onCloseHandler","renderStatusText","LocationAccessModal","closeLocationAccessModal","toggleUserLocationPermission","renderInfo","ReportAdModal","reportSponsored","closeReportAdModal","openPreviousReportAdModal","transitionRef","handleOptionClick","renderingSection","renderingDepth","sectionDepth","sections","bottomText","hasSubtitle","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","narrow","secondaryIcon","ReportModal","reportMessages","closeReportModal","openPreviousReportModal","setText","subject","handleTextChange","closeReportMessageModalHandler","sendMessageReportHandler","Report","TextArea","isOptional","maxLengthIndicator","noReplaceNewlines","isBlurred","isBackgroundBlurred","patternColor","background","customBackground","selectThemeValues","PreparedMessageModal","closePreparedInlineMessageModal","openSharePreparedMessageModal","customBackgroundValue","useCustomBackground","handleOpenClick","localMessage","getMockPreparedMessageFromResult","bgClassName","inert","Message","noComments","noReplies","appearanceOrder","isJustAdded","isFirstInGroup","isLastInGroup","isLastInList","isFirstInDocumentGroup","isLastInDocumentGroup","starsBalance","balance","isStarsBalanceModalOpen","starsBalanceModal","SharePreparedMessageModal","closeSharePreparedMessageModal","sendInlineBotResult","updateSharePreparedMessageModalSendArgs","pendingSendArgs","starsForSendMessage","closeConfirmDialog","closeConfirmModalPayForMessage","dialogHandler","paymentMessageConfirmDialogHandler","shouldAutoApprove","shouldPaidMessageAutoApprove","setAutoApprove","setShouldPaidMessageAutoApprove","handleWithConfirmation","handleActionWithPaymentConfirmation","usePaidMessageConfirmation","handleSend","handleSendWithPaymentConfirmation","handleClosePaymentMessageConfirmDialog","peerName","PaymentMessageConfirmDialog","userName","messagePriceInStars","messagesCount","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","permissions","setPermissions","havePermissionChanged","setHavePermissionChanged","setIsLoading","handlePermissionChange","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","sendGifs","checkMedia","mediaPermissions","v","sendMedia","assign","embedLinks","sendPlain","sendMessages","resetPermissions","permissionKeyList","fullInfo","hasLinkedChat","linkedChatId","PermissionCheckboxList","isMediaDropdownOpen","setIsMediaDropdownOpen","shiftedClassName","dropdownClassName","withCheckbox","getControlIsDisabled","permissionGroup","shouldDisablePermissionForPublicGroup","countCheckedPermissions","handleOpenMediaDropdown","handleDisabledClick","blocking","labelText","rightIcon","onClickLabel","sendPhotos","sendVideos","sendStickers","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","inviteUsers","pinMessages","changeInfo","manageTopics","deleteMessageModal","canDeleteForAll","selectCanDeleteSelectedMessages","isSuperGroup","contactName","getPrivateChatUserId","chatBot","isSystemBot","selectBot","canBanUsers","getHasAdminRight","isCreator","isChatWithBot","selectIsChatWithBot","willDeleteForCurrentUserOnly","isChatBasicGroup","willDeleteForAll","DeleteMessageModal","closeDeleteMessageModal","deleteMessages","reportChannelSpam","deleteChatMember","deleteScheduledMessages","exitMessageSelectMode","updateChatMemberBannedRights","deleteParticipantHistory","defaultBannedRights","peerIdsToDeleteAll","setPeerIdsToDeleteAll","peerIdsToBan","setPeerIdsToBan","peerIdsToReportSpam","setPeerIdsToReportSpam","isAdditionalOptionsVisible","setIsAdditionalOptionsVisible","shouldDeleteForAll","setShouldDeleteForAll","peerList","senderArray","getSendersFromSelectedMessages","buildNestedOptionListWithAvatars","member","peerListToDeleteAll","peerListToReportSpam","peerListToBan","isCurrentUserInList","isAdmin","shouldShowOption","peerNames","buildCollectionByCallback","ACTION_SPAM_OPTION","nestedOptions","opt","ACTION_DELETE_OPTION","ACTION_BAN_OPTION","toggleAdditionalOptions","filterMessageIdByPeerId","selectedMessageIdList","msgId","selectSenderFromMessage","handleReportSpam","userMessagesMap","messageIdList","participantId","handleDeleteMessages","filteredMessageIdList","handleDeleteAllPeerMessages","peerIdList","handleDeleteMember","filteredUserIdList","handleUpdateChatMemberBannedRights","bannedRights","handleDeleteMessageList","isNaN","CheckboxGroup","nestedCheckbox","isPrivateChat","canPinForAll","PinMessageModal","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","UnpinAllMessagesModal","pinnedMessagesCount","onUnpin","shouldWarnAboutSvg","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","selectedMessageIds","selectedMessages","hasProtectedMessage","selectHasProtectedMessage","selectCanForwardMessages","isShareMessageModalOpen","isShareMessageModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","MessageSelectToolbar","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","setSharedSettingOption","handleCopy","useHotkeys","useCopySelectedMessages","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","handleExitMessageSelectMode","handleDelete","onBackspace","onEsc","handleMessageDownload","handleSvgConfirm","prevSelectedMessagesCount","formattedMessagesCount","renderButton","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","leftId","rightId","handleCloseSeenByModal","CLOSE_ANIMATION_DURATION","isReadDate","privacySettingsNoticeModal","PrivacySettingsNoticeModal","updateGlobalPrivacySettings","closePrivacySettingsNoticeModal","setPrivacyVisibility","loadUser","handleShowReadTime","shouldHideReadMarks","handleShowLastSeen","privacyKey","onSuccess","handleOpenPremium","ReadTime","LastSeen","Separator","reactorModal","reactors","ReactorListModal","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","flatMap","peerReactions","reactor","seenByUser","addedDate","avatarSize","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","EmojiInteractionAnimation","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","endHeavyAnimation","effectHash","effectTgsUrl","startSize","isReversed","quality","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","ChatLanguageModal","requestMessageTranslation","closeChatLanguageModal","setSettingOption","requestChatTranslation","handleSelect","langCode","toLanguageCode","translationLanguage","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","highlight","CollectibleInfoModal","closeCollectibleInfoModal","isUsername","handleOpenUrl","shouldSkipModal","formatUsername","collectible","copyTextToClipboard","formattedCollectible","purchaseDate","cryptoCurrency","cryptoAmount","Mention","chip","createMapStateToProps","props","currentType","isVoice","byChatId","globalMessagesByChatId","messages","searchChatId","AudioResults","searchMessagesGlobal","openAudioPlayer","foundMessages","parseSearchResultKey","handleMessageFocus","handlePlayAudio","canRenderContents","NothingFound","shouldDrawDateDivider","toYearMonth","getMessageDownloadableMedia","formatMonthAndYear","Audio","AudioOrigin","Search","getSenderName","onDateClick","buttonRef","activeElement","selectIsChatPinned","getIsChatMuted","selectNotifyDefaults","selectNotifyException","canChangeFolder","chatFolders","LeftSearchResultChat","withUsername","withOpenAppButton","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","handleOpenApp","useSelectWithEnter","storyViewerOrigin","hasMainMiniApp","MuteChatModal","ChatFolderModal","BotAppResults","recentSet","withoutRecent","handleChatClick","shouldReplaceHistory","privateChatUserId","privateChatUser","ChatMessage","mediaThumbnail","getMessageSticker","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","isRoundVideo","getMessageRoundVideo","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","getMessageVideo","renderSummary","DateSuggest","searchDate","suggestions","suggestion","currentDate","latestYear","getSuggestionsFromDate","selectTopic","LeftSearchResultTopic","foundTopicIds","ChatMessageResults","dateSearchQuery","onSearchDateSelect","openThread","handleTopicClick","nothingFound","LeftSearchResultSponsored","sponsoredPeer","viewSponsored","useOnIntersect","intersectionRatio","handleBadgeClick","handleBadgeMouseDown","BadgeButton","topUserIds","topPeers","recentlyFoundChatIds","RecentContacts","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","isChannelList","globalResults","localResults","globalPeerIds","accountPeerIds","similarChannelIds","selectSimilarChannelIds","GLOBAL_SUGGESTED_CHANNELS_ID","suggestedChannelIds","ChatResults","setGlobalSearchChatId","loadChannelRecommendations","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","searchContext","setSearchContext","context","handlePickerItemClick","getSearchContextCaption","handleClickContext","itemPlaceholderClass","startsWith","filteredChatIds","getOrderedIds","ALL_FOLDER_ID","localChatIds","contactIdsWithMe","localPeerIds","filteredIds","shouldResetResultsByType","shouldCheckFetchingMessagesStatus","handleClickShowMoreLocal","handleClickShowMoreGlobal","actualFoundIds","isMessagesFetching","shouldRenderTopPeers","shouldRenderMessagesSection","noScrollRestoreOnTop","customIcon","shouldCleanup","CURRENT_TYPE","FileResults","observeIntersectionForMedia","getMessageDocument","Document","withDate","datetime","smaller","LinkResults","WebLink","onMessageClick","MediaResults","handleSelectMedia","isMediaGrid","isMessageList","Media","TABS","GlobalSearchContent","ChannelList","BotApps","Links","Files","Music","Voice","CHAT_TABS","currentContent","LeftSearch","setGlobalSearchContent","setGlobalSearchDate","activeTab","setActiveTab","parseDateString","handleSwitchTab","handleSearchDateSelect","TabList","onSwitchTab","renderCount","INITIAL_STATE","email","twoFaReducer","payload","maxChats","selectCurrentLimit","SettingsFoldersChatFilters","mode","dispatch","onSaveFilter","openLimitReachedModal","chatFilter","selectedChatIds","selectedChatTypes","selectChatFilters","chatTypes","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","isTouched","setIsTouched","folderAllOrderedIds","useFolderManagerForOrderedIds","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","shouldHideChatTypes","isChatList","chatIds","newFilter","includeFilters","includedChatIds","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","categories","selectedCategories","categoryPlaceholderKey","withPeerTypes","onSelectedCategoriesChange","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","el","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","SettingsFoldersEdit","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleCreateInviteClick","selectCanShareFolder","handleEditInviteClick","renderChats","visibleChatIds","leftChatsCount","clickHandler","chatType","typeKey","renderChatType","STICKER_SIZE_FOLDER_SETTINGS","FoldersNew","runThrottledForLoadRecommended","folderIds","foldersById","recommended","recommendedChatFolders","maxFolders","SettingsFoldersMain","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","sortChatFolders","setState","orderedFolderIds","dragOrderIds","draggedIndex","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","getFolderDescriptionText","handleCreateFolderFromRecommended","translation","handleDragEnd","canCreateNewFolder","FoldersAll","isBlocked","isDragged","draggedTop","Draggable","onDragEnd","knobStyle","isStatic","allowSelection","shareFolderScreen","SettingsShareChatlist","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","pinnedChatIds","unlockedIds","partition","selectCanInviteToChat","isFirstRenderRef","prevUrl","handleClickDisabled","chatsCount","AnimatedIcon","FoldersShare","withShare","onRevoke","lockedUnselectedIds","SettingsFolders","currentScreen","shownScreen","openShareChatFolderModal","editChatFolder","openSettingsScreen","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","screen","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsPasswordForm","shouldDisablePasswordManager","expectedPassword","validationError","setValidationError","newPassword","PasswordMonkey","SettingsPasscodeCongratulations","fullReset","STICKER_SIZE_PASSCODE","Congratulations","SettingsPasscodeEnabled","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","SettingsPasscodeStart","passcode","SettingsPasscode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeForm","PasscodeEnabled","DEFAULT_POINTS","getProgress","points","pointIndex","findIndex","prevPoint","nextPoint","pointValue","PaidMessageSlider","readOnly","canChangeChargeForMessages","mainClassName","number","formatStarsAsText","step","starsUsdWithdrawRateX1000","starsUsdWithdrawRate","configStarsPaidMessageCommissionPermille","starsPaidMessageCommissionPermille","starsPaidMessageAmountMax","DEFAULT_MAXIMUM_CHARGE_FOR_MESSAGES","isGroupChat","chargeForMessages","handleChargeForMessagesChange","handleUnlockWithPremium","MINIMUM_CHARGE_FOR_MESSAGES","noForcedUpperCase","percent","formatPercent","premiumSection","handleOpenPremiumModal","StarIcon","nonContactPeersPaidStars","selectNonContactPeersPaidStars","noPaidReactionsForUsersCount","noPaidMessages","shouldNewNonContactPeersRequirePremium","selectNewNoncontactPeersRequirePremium","shouldChargeForMessages","DEFAULT_CHARGE_FOR_MESSAGES","canLimitNewMessagesWithoutPremium","canChargeForMessages","starsPaidMessagesAvailable","canChangeForContactsAndPremium","setChargeForMessages","PrivacyLockedOption","hidden","isCanCheckedInDisabled","updateGlobalPrivacySettingsWithDebounced","privacyDescription","PaidMessagePrice","itemSubtitle","PrivacyNoPaidMessages","renderSectionNoPaidMessagesForUsers","PremiumStatusItem","getSessionIcon","session","platform","device","deviceModel","systemVersion","activeSessions","byHash","SettingsActiveSession","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","headerButton","iconDevice","dateActive","box","appVersion","ip","region","getLocation","note","actionHeader","actionName","SettingsActiveSessions","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","sessionHashes","sessionHash","areButtonsInColumn","activeWebSessions","SettingsActiveWebsite","terminateWebAuthorization","renderingBot","browser","SettingsActiveWebsites","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","StickerSetCard","handleCardClick","CHAT_HEIGHT_PX","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","byKey","customEmojiSetIds","canPlayAnimatedEmojis","SettingsCustomEmoji","shouldSuggestCustomEmoji","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","customEmojiSets","SettingsDataStorage","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","renderValue","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","doNotTranslate","SettingsDoNotTranslate","language","displayedOptions","setDisplayedOptions","displayedOptionList","currentLanguageOption","otherOptionList","prevLanguage","ManageUsernames","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","orderedUsernames","dragOrderUsernames","handleCopyUsername","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","usernameData","LINK_PREFIX_REGEX","runDebouncedForCheckUsername","UsernameInput","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","MIN_UPDATE_USERNAME_LENGTH","MAX_USERNAME_LENGTH","USERNAME_REGEX","test","handleUsernameChange","newUsername","isUsernameValid","success","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","currentFirstName","currentLastName","currentUserFullInfo","currentAvatarHash","getChatAvatarHash","currentBio","bio","SettingsEditProfile","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","InProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","Complete","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","renderPurchaseLink","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","SettingsExperimental","requestWave","snapButtonRef","isSnapButtonAnimating","setIsSnapButtonAnimating","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","URL","createObjectURL","handleIsAutoUpdateEnabledChange","handleRequestWave","startX","startY","handleRequestConfetti","handleSnap","animateSnap","Experimental","IS_WAVE_TRANSFORM_SUPPORTED","IS_SNAP_EFFECT_SUPPORTED","IS_ELECTRON","shouldUseSystemTheme","messageSendKeyCombo","messageTextSize","timeFormat","SettingsGeneral","isMobileDevice","timeFormatOptions","appearanceThemeOptions","keyboardSendOptions","handleMessageTextSizeChange","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","WallpaperTile","wallpaper","localMediaHash","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","loadedWallpapers","SettingsGeneralBackground","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","SettingsHeader","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","currentAmountRef","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyBirthday","PrivacyGifts","PrivacyForwarding","PrivacyVoiceMessages","PrivacyMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneNumberAllowedContacts","PrivacyBirthdayAllowedContacts","PrivacyGiftsAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyBirthdayDeniedContacts","PrivacyGiftsDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","canTranslate","canTranslateChats","languages","SettingsLanguage","loadLanguages","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","oldSetLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","isGiveawayAvailable","selectIsGiveawayGiftsPurchaseAvailable","sessionCount","SettingsMain","openSupportChat","openGiftRecipientPicker","openStarsBalanceModal","isSupportDialogOpen","openSupportDialog","closeSupportDialog","isPreload","handleOpenSupport","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","isInSettings","languageInfo","formatStarsAmount","FAQ_URL","PRIVACY_URL","renderTextFilters","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","SettingsNotifications","notifyDefaults","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsMuted","mutedUntil","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","groups","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","hasPasscode","canDisplayChatInTitle","isCurrentUserFrozen","blockedCount","webAuthCount","canDisplayAutoarchiveSetting","canSetPasscode","selectCanSetPasscode","SettingsPrivacy","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","shouldAllowPremium","botsPrivacy","isVisibilityEverybody","shouldShowBotsString","blockCount","blockChatIds","allowCount","allowChatIds","total","exceptionString","conjunction","lastSeen","profilePhoto","birthday","forwards","phoneCall","allowDisabledClick","voiceMessages","chatInvite","blockedIds","localContactIds","userSearch","localUserIds","BlockUserModal","setUserSearchQuery","filteredContactIds","availableContactIds","contactId","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","SettingsPrivacyBlockedUsers","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","userMainUsername","renderContact","getPrivacyKey","PrivacyPhoneP2P","PrivacyAddByPhone","disallowedGifts","SettingsAcceptedGift","handleOpenTelegramPremiumModal","actionText","handleLimitedEditionChange","shouldDisallowLimitedStarGifts","handleUnlimitedEditionChange","shouldDisallowUnlimitedStarGifts","handleUniqueChange","shouldDisallowUniqueStarGifts","handlePremiumSubscriptionChange","shouldDisallowPremiumGifts","selectShouldHideReadMarks","SettingsPrivacyLastSeen","canShowHideReadTime","handleChangeShouldHideReadMarks","SettingsPrivacyPublicProfilePhoto","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","PrivacySubsection","isPremiumRequired","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","headerText","prepareSubtitle","userIdsCount","chatIdsCount","isAllowBots","userCountString","chatCountString","allowedString","blockString","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","shouldDisplayGiftsButton","addByPhone","phoneP2P","SettingsPrivacyVisibility","handleShowGiftIconInChats","secondaryScreen","PREMIUM_CATEGORY","CUSTOM_PEER_PREMIUM","getCurrentPrivacySettings","SettingsPrivacyVisibilityExceptionList","isAllowList","withPremiumCategory","withMiniAppsCategory","usersOnly","setPrivacySettings","customPeerBots","isCustomPeer","avatarIcon","isAvatarSquare","peerColorId","miniAppsCategory","selectedContactIds","selectedCategoryTypes","newSelectedCategoryTypes","setNewSelectedCategoryTypes","SERVICE_NOTIFICATIONS_USER_ID","filteredChats","handleSelectedCategoriesChange","updatedIds","isPremiumAllowed","config","selectedReaction","defaultReaction","SettingsQuickReaction","setDefaultReaction","emoticon","withIcon","addedSetIds","SettingsStickers","shouldSuggestStickers","shouldUpdateStickerSetOrder","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","SettingsTwoFaCongratulations","STICKER_SIZE_TWO_FA","recoveryEmail","animatedEmoji","selectAnimatedEmoji","codeLength","waitingEmailCodeLength","SettingsTwoFaEmailCode","focusDelayTimeoutMs","setValue","handleInputChange","AnimatedIconFromSticker","SettingsTwoFaEnabled","SettingsTwoFaSkippableForm","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","SettingsTwoFaStart","SettingsTwoFa","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaPassword","TRANSITION_RENDER_COUNT","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_BIRTHDAY_SCREENS","PRIVACY_GIFTS_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","PRIVACY_MESSAGES_SCREENS","Settings","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","useMarkScrolled","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","_isFrom","_currentKey","activeScreen","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsGeneralBackgroundColor","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","withSwipeControl","userStatusesById","ContactList","openNewContactDialog","isSearching","NewChatStep1","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","foundContactIds","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","NewChatStep2","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","memberFirstNames","generatedChatName","handleTitleChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","NewChat","openLeftColumnContent","newChatMemberIds","setNewChatMemberIds","contentKey","NewChannelStep2","NewGroupStep2","isStepActive","NewChannelStep1","NewGroupStep1","ArchivedChats","isForumPanelOpen","archiveSettings","isStoryRibbonShown","onTopicSearch","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isStoryRibbonClosing","StoryToggler","canShow","folderType","isMainList","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","idsToRemove","idsToAdd","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","canSendStickers","canScheduleUntilOnline","selectCanScheduleUntilOnline","shouldSchedule","selectShouldSchedule","StickerSetModal","prevStickerSet","renderingStickerSet","isAdded","requestCalendar","calendar","useSchedule","isScheduleRequested","isPreloadedGlobally","scheduledAt","handleCopyLink","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","CustomEmojiSetsModal","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","sets","teactFastList","customEmojiSet","setCard","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","currentChatId","currentThreadId","canReportChat","canGift","selectCanGift","canCreateTopic","isUserRightBanned","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","savedDialog","getIsSavedDialog","isTopic","isForumAsMessages","canDeleteChat","getCanDeleteChat","botCommands","commands","botPrivacyPolicyUrl","privacyPolicyUrl","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","isBot","HeaderMenuContainer","withExtraActions","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewMonetization","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","canShowBoostModal","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","openFrozenAccountModal","requestMasterAndRequestCall","toggleStatistics","openMonetizationStatistics","openBoostStatistics","openGiftModal","openThreadWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","setViewForumAsMessages","openBoostModal","setIsMenuOpen","shouldCloseFast","setShouldCloseFast","setIsDeleteModalOpen","setIsMuteModalOpen","isViewGroupInfoShown","areAllGiftsDisallowed","closeMenu","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleGiftClick","forUserId","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleMonetizationClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","botButtons","commandButtons","cmd","hasPrivacyCommand","deleteTitle","MenuSeparator","DeleteChatModal","isSavedDialog","MiddleSearchResult","senderPeer","messageChat","shouldShowChat","hiddenForwardTitle","hiddenUserName","senderName","getMessageSenderName","topRow","LastMessageMeta","meta","MessageSummary","truncateLength","CHANNELS_PEER","titleKey","RESULT_ITEM_CLASS_NAME","runDebouncedForSearch","requestedQuery","savedTag","fetchingQuery","isHashtag","selectCurrentMiddleSearch","lastSearchQuery","savedTags","savedReactionTags","isHistoryCalendarOpen","isHashtagQuery","searchType","MiddleSearch","updateMiddleSearch","resetMiddleSearch","performMiddleSearch","closeMiddleSearch","openHistoryCalendar","loadSavedReactionTags","shouldCancelSearchRef","focusedIndex","setFocusedIndex","canFocusNewer","canFocusOlder","isFullyHidden","setIsFullyHidden","hiddenTimerRef","maybeLongPressActiveRef","isFocused","markFocused","markBlurred","isViewAsList","setIsViewAsList","refs","handleClickOutside","useClickOutside","hasResultsContainer","isOnlyHash","areResultsEmpty","hasResultsDropdown","hasQueryData","hasNavigationButtons","focusInput","blurInput","blur","visualViewport","mainEl","pageTop","requestNextMutation","prevIsCalendarOpen","savedTagsArray","hasSavedTags","areSavedTagsDisabled","handleQueryChange","newQuery","removeListeners","fastRaf","viewportResults","searchResultKey","originalSender","ANONYMOUS_USER_ID","selectForwardedSender","handleMessageClick","getSearchResultKey","handleTriggerViewStyle","foundResult","updateSearchParams","activateSearchTag","tag","removeSearchSavedTag","handleDeleteTag","handleChangeSearchType","handleFocusOlder","newFocusIndex","handleFocusNewer","renderTypeTag","isForTag","selectedType","renderDropdown","dropdown","dropdownHidden","separator","wrap","isChosen","SavedTagButton","withCount","searchTypes","teactOrderKey","focused","mobile","withDropdown","adaptSearchBorders","canClose","resultsItemSelector","hasUpButton","hasDownButton","onStartBackspace","withBackIcon","onUpClick","onDownClick","searchTags","savedSearchTag","icons","getDayStartAt","counter","viewStyle","mobileNavigation","navigationButton","navigationDisabled","recent","favorite","effect","chatStickerSetId","effectStickers","effectEmojis","recentStickers","selectShouldLoopStickers","StickerPicker","isForEffects","loadRecentStickers","addRecentSticker","unfaveSticker","faveSticker","removeRecentSticker","sendMessageAction","useSendMessageAction","effectSets","existingAddedSetIds","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleMouseMove","handleRemoveRecentSticker","CHAT_STICKER_SET_ID","maxUniqueReactions","enabledReactions","reactionsLimit","ReactionPickerLimited","isTouchScreen","currentReactions","shouldUseCurrentReactions","allAvailableReactions","reactionsToSort","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","pickerMaxHeight","REACTION_SELECTOR_WIDTH","availableEffectById","storyPeerId","sendAsMessage","areSomeReactionsAllowed","areAllReactionsAllowed","areCustomAllowed","shouldUseFullPicker","isForbidden","ReactionPicker","toggleReaction","closeReactionPicker","saveEffectInDraft","requestEffectInComposer","addLocalPaidReaction","openPaidReactionModal","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","storedPosition","renderingPosition","isDense","deltaX","FULL_PICKER_SHIFT_DELTA","handleToggleCustomReaction","shouldAddToRecent","handleToggleReaction","handleReactionContextMenu","handleStoryReactionSelect","customEmojiMessage","parseHtmlAsFormattedText","buildCustomEmojiHtml","isReaction","availableEffects","effectId","effectStickerId","chosenOrder","backdropExcludedSelector","div","BLUR_CANVAS_SIZE","AttachmentModalItem","attachment","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_PHOTO_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","extension","getFileExtension","previewData","shouldSkipGrouping","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","MediaSpoiler","isFullyVisible","isHorizontal","viewportY1","viewportY2","y2","findInViewport","selectorOrElements","shouldContainBottom","allElements","visibleIndexes","isFound","setTooltipItemVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","shiftKey","isSelectionOutOfRange","onUp","onDown","onTab","MentionTooltip","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","selectedMentionIndex","prevChatMembers","renderedChatMembers","ATTACHMENT_MODAL_INPUT_ID","recentEmojis","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","keywords","customEmojiForEmoji","forEmoji","captionLimit","AttachmentModal","attachments","getHtml","editingMessage","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onCaptionUpdate","onSend","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","onEmojiSelect","canSchedule","onSendWhenOnline","svgRef","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isEditing","groupedId","notEditingFile","getAttachmentMediaType","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","isInvertedMedia","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","setIsInvertedMedia","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","svg","baseVal","leftChars","leftCharsBeforeLimit","html","innerHTML","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllPhotos","areAllVideos","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","canInvertMedia","attachmentsLength","isBottomDividerShown","buttonSendCaption","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","rx","uniqueId","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","onSendSchedule","PollModal","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","question","setQuestion","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","handleSolutionChange","addNewOption","newOptions","behavior","handleCreate","isNoCorrectOptionError","answers","correct","questionTrimmed","substring","optionsTrimmed","o","summary","multipleChoice","quiz","correctAnswers","solutionEntities","updateOption","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","handleQuestionChange","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","EmojiButton","native","IS_PACKAGED_ELECTRON","BASE_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","EmojiCategory","category","allEmojis","emojisPerRow","displayedEmoji","ICONS_BY_CATEGORY","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","EmojiPicker","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","GifButton","gif","onUnsaveClick","hasVideoPreview","getVideoMediaHash","withThumb","videoHash","getVideoPreviewMediaHash","videoData","shouldRenderVideo","isVideoReady","handleUnsaveClick","handleContextDelete","preload","gifs","saved","GifPicker","canSendGifs","onGifSelect","loadSavedGifs","saveGif","debounceMs","shouldUnsave","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","GIFs","SYMBOL_MENU_TAB_ICONS","SymbolMenuFooter","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","SymbolMenu","isMessageComposer","menuPositionOptions","setRecentEmojis","setRecentCustomEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","recentCustomEmojisRef","handleCustomEmojiSelect","canUpdateStickerSetsOrder","isFrom","mobileClassName","onMouseEnter","ChatCommand","withAvatar","freezeWhenClosed","ChatCommandTooltip","quickReplies","quickReplyMessages","self","sendQuickReply","handleSendCommand","handleSendQuickReply","quickReplyId","quickRepliesWithDescription","reply","topMessageId","shortcut","handleKeyboardSelect","selectedCommandIndex","isEmpty","BotCommandMenu","botCommand","StickerTooltip","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onRemoveEffect","withEffects","hasCurrentEffect","effectReactions","onToggleReaction","isInSavedMessages","isInStoryViewer","openEffectPicker","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","areItemsHidden","hideItems","showItems","markIsReady","unmarkIsReady","handleOpenMessageEffectsPicker","ReactionSelector","onShowMore","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","TextFormatter","anchorPosition","selectedRange","setSelectedRange","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","EDITABLE_INPUT_ID","textFormat","tagName","restoreSelection","selection","getSelection","removeAllRanges","addRange","updateSelectedRange","getRangeAt","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","getAttribute","getSelectedElement","updateInputStyles","scrollWidth","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","entityType","ApiMessageEntityTypes","Spoiler","execCommand","handleBoldText","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","u","m","p","getKeyFromEvent","linkUrlConfirmClassName","autoComplete","CustomEmojiButton","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","BaseResult","thumbnailDataUrl","getWebDocumentHash","decoding","ArticleResult","inlineResult","webThumbnail","GifResult","_gif","MediaResult","isForGallery","thumbnailBlobUrl","getPhotoMediaHash","StickerResult","STICKER_SIZE_INLINE_BOT_RESULT","InlineBotTooltip","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","SendAsMenu","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","membersCount","StickerSetResult","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","StickerSearch","loadFeaturedStickers","selectCurrentGifSearch","canPostInChat","GifSearch","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","postStatistic","StatisticsRecentMessage","toggleMessageStatistics","StatisticsRecentPostMeta","toggleStoryStatistics","imgBlobUrl","withStorySolid","forceUnreadStorySolid","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","reactionsByEmotionGraph","storyInteractionsGraph","storyReactionsByEmotionGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","statistics","selectStatistics","dcId","statisticsDcId","messagesById","storiesById","selectPeerStories","Statistics","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","isPercentage","ensureLovelyChart","zoomToken","create","zoomOutLabel","StatisticsOverview","recentPosts","StatisticsRecentStory","StatisticsMessagePublicForward","openChatByUsername","GRAPH_TITLES","viewsGraph","reactionsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","loadMessagePublicForwards","publicForwards","publicForwardsData","STATISTICS_PUBLIC_FORWARDS_LIMIT","currentStory","loadStoryStatistics","loadStoryPublicForwards","StatisticsStoryPublicForward","answer","voters","offsets","pollResults","PollAnswerResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","ShowMoreButton","renderViewMoreButton","poll","selectPollFromMessage","PollResults","resultsByOption","buildCollectionByKey","ICON_SIZE","createTopicPanel","CreateTopic","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","noLoopLimit","editTopicPanel","EditTopic","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","ERROR_NAME_MISSING","management","ManageBot","setBotInfo","uploadContactProfilePhoto","startBotFatherConversation","isFieldTouched","markFieldTouched","unmarkProfileTouched","isAvatarTouched","markAvatarTouched","unmarkAvatarTouched","currentName","setName","ManagementProgress","handleNameChange","trimmedName","handleChangeEditIntro","handleChangeEditCommands","handleChangeSettings","isSuggestRef","handleSelectAvatar","isSuggest","CHANNEL_TITLE_EMPTY","canChangeInfo","canInvite","exportedInvites","ManageChannel","onScreenSelect","updateChat","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isRevoked","adminsCount","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","formatInteger","joinRequests","ManageChatAdministrators","onChatMemberSelect","toggleSignatures","areSignaturesEnabled","areSignaturesShown","areProfilesEnabled","areProfilesShown","canAddNewAdmins","canToggleSignatures","adminMembers","admins","isOwner","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleToggleSignatures","handleToggleProfiles","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","inviteLink","ManageChatPrivacyType","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleSave","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","RemoveGroupUserModal","loadMoreMembers","usersId","availableMemberIds","canDeleteMembers","removedMembers","ManageChatRemovedUsers","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","forDiscussionIds","linkedChat","ManageDiscussion","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","isChannelsPremiumLimitReached","ManageGroup","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","adminRights","hasFullInfo","ManageGroupAdminRights","isNewAdmin","selectedUserId","updateChatAdmin","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handleSavePermissions","handleDismissAdmin","memberStatus","handleCustomTitleChange","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","addAdmins","manageCall","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","canAddMembers","globalUserIds","ManageGroupMembers","noAdmins","toggleParticipantsHidden","setNewChatMembersDialogState","deletingUserId","setDeletingUserId","adminIds","usePeerStoriesPolling","shouldUseSearchResults","listedIds","ChatNewAdminRights","handleDeleteMembersModalClose","handleToggleParticipantsHidden","handleNewMemberDialogOpen","newChatMembersProgress","NewChatMembersProgress","memberId","DeleteMemberModal","arePaidMessagesAvailable","groupPeersPaidStars","ManageGroupPermissions","updateChatDefaultBannedRights","updatePaidMessagesPrice","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","isPriceForMessagesChanged","markPriceForMessagesChanged","unmarkPriceForMessagesChanged","isPriceForMessagesOpen","setIsPriceForMessagesOpen","handleUpdatePaidMessagesPrice","handleUpdatePermissions","exceptionMembers","getMemberExceptions","getLangKeyForBannedRightKey","translatedString","handleChargeStarsForMessages","arePermissionsChanged","arePermissionsLoading","ManageGroupUserPermissions","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","ManageGroupUserPermissionsCreate","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","ManageInvite","editExportedChatInvite","exportChatInvite","setIsRequestNeeded","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleSaveClick","formatFullDate","n","importers","requesters","ManageInviteInfo","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","ManageInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","formatCountdown","getInviteIconClass","prepareContextActions","editInvite","Invite","STICKER_SIZE_INVITES","withPrimaryColor","JoinRequest","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","ManageJoinRequests","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","STICKER_SIZE_JOIN_REQUESTS","MAX_UNIQUE_REACTIONS","ManageReactions","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","localReactionsLimit","setLocalReactionsLimit","reactionsOptions","handleSaveReactions","availableActiveReactions","localAllowedReactions","enabledAllowedReactions","localReaction","enabledReaction","handleReactionsOptionChange","handleReactionChange","local","handleReactionsLimitChange","renderReactionsMaxCountValue","shouldShowReactionsLimit","isCenteredLayout","notPersonalPhoto","ManageUser","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","managementType","selectCurrentManagementType","Management","GroupRecentActions","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","Checkout","invoice","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","needAddress","hasShippingOptions","savedCredentials","isPaymentFormUrl","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","useMediaTransition","handleTipsClick","tips","handlePaymentMethodClick","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","prices","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","shouldOmitFractions","invoiceInfo","renderCheckoutItem","provider","langStringSplit","renderTosLink","tosCheckbox","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","ConfirmPayment","noRedirect","onPaymentFormSubmit","messageKey","form","PasswordConfirm","onPasswordChange","clearPaymentError","cardName","onInputChange","useFocusAfterAnimation","animationDuration","CardInput","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","ExpiryInput","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","Select","hasArrow","SavedPaymentCredentials","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","confirmPaymentUrl","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","nativeParams","nativeProvider","providerName","isProviderError","smartGlocalToken","stripeId","passwordValidUntil","validUntil","PaymentModal","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","setSmartGlocalCardInfo","paymentState","paymentDispatch","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","setStep","nextStep","field","savedInfo","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","shippingOption","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","sendForm","shippingOptionId","handlePaymentFormSubmit","credentials","validateRequest","requestInfo","getRequestInfo","sendCredentials","expiryMonth","expiryYear","zip","getCredentials","ConfirmPassword","shouldFillRequestedData","isEmailRequested","isPhoneRequested","isNameRequested","isShippingAddressRequested","modalHeader","isSubmitDisabled","getIsSubmitDisabled","isRecurring","cleanupOnlyKey","currentStep","isPasswordMissing","isEmailSentToProvider","isPhoneSentToProvider","renderModalContent","descriptionKey","renderError","optionId","receipt","ReceiptModal","prevReceipt","renderingReceipt","fullAddress","credentialsTitle","totalAmount","InviteViaLinkModal","sendInviteMessages","closeInviteViaLinkModal","missingUsers","setSelectedMemberIds","unselectableIds","selectableIds","requirePremiumIds","regularIds","isRequiringPremiumToMessage","invitableWithPremiumIds","isRequiringPremiumToInvite","isEveryPremiumBlocksPm","topListPeers","handleSendInviteLink","canSendInviteLink","inviteSectionText","premiumSectionText","hasPremiumSection","hasSelectableSection","lockedUnselectedSubtitle","OneTimeMediaModal","closeOneTimeMediaModal","handlePlayVoice","isOwn","isOwnMessage","closeBtnTitle","voice","OneTimeModal","RoundVideo","onStop","renderMedia","WebAppsCloseConfirmationModal","closeWebAppsCloseConfirmationModal","shouldSkipInFuture","setShouldSkipInFuture","shouldSkipConfirmation","handleSelectWithEnter","freezeUntilDate","freezeAppealUrl","botFreezeAppealId","botFreezeAppealUsername","FrozenAccountModal","closeFrozenAccountModal","handleAppeal","BannedDuck","botLink","hasBackdrop","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","MonkeyClose","playSegment","MonkeyPeek","avatarPeer","avatarWebPhoto","clickable","webPhoto","badge","modalProps","hasButton","absoluteCloseButtonColor","headerAvatarPeer","withBalanceBar","starsNeeded","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","renderingOptions","canExtend","maxOption","forceShowAll","currentStackedStarsCount","canExtendOptions","isExtended","starsCount","isWide","isOdd","isActiveOption","perUserStarCount","perUserStars","wideOption","optionTop","stackedStars","stackedStar","optionBottom","moreOptions"],"sourceRoot":""}