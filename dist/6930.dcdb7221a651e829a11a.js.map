{"version":3,"file":"6930.dcdb7221a651e829a11a.js","mappings":"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","sources":["webpack://telegram-t/./src/components/modals/stars/gift/StarsGiftModal.module.scss?069e","webpack://telegram-t/./src/components/modals/stars/gift/StarsGiftModal.tsx","webpack://telegram-t/./src/components/main/premium/StarsGiftingPickerModal.module.scss?3156","webpack://telegram-t/./src/components/main/premium/StarsGiftingPickerModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarsBalanceModal.module.scss?bbd4","webpack://telegram-t/./src/components/modals/stars/BalanceBlock.tsx","webpack://telegram-t/./src/components/modals/stars/subscription/StarsSubscriptionItem.module.scss?74b5","webpack://telegram-t/./src/components/modals/stars/subscription/StarsSubscriptionItem.tsx","webpack://telegram-t/./src/components/modals/stars/helpers/transaction.ts","webpack://telegram-t/./src/components/modals/stars/transaction/PaidMediaThumb.module.scss?605d","webpack://telegram-t/./src/components/modals/stars/transaction/PaidMediaThumb.tsx","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionItem.module.scss?b947","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionItem.tsx","webpack://telegram-t/./src/components/modals/stars/StarsBalanceModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarsPaymentModal.tsx","webpack://telegram-t/./src/components/modals/gift/UniqueGiftHeader.module.scss?2bf6","webpack://telegram-t/./src/components/modals/gift/UniqueGiftHeader.tsx","webpack://telegram-t/./src/hooks/animations/useTransitionActiveKey.ts","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionModal.module.scss?a215","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionModal.tsx","webpack://telegram-t/./src/components/modals/stars/subscription/StarsSubscriptionModal.module.scss?5025","webpack://telegram-t/./src/components/modals/stars/subscription/StarsSubscriptionModal.tsx","webpack://telegram-t/./src/components/modals/paidReaction/StarSlider.module.scss?b8f3","webpack://telegram-t/./src/components/modals/paidReaction/StarSlider.tsx","webpack://telegram-t/./src/components/modals/paidReaction/PaidReactionModal.module.scss?80b2","webpack://telegram-t/./src/components/modals/paidReaction/PaidReactionModal.tsx","webpack://telegram-t/./src/components/modals/gift/GiftComposer.module.scss?dac8","webpack://telegram-t/./src/components/modals/gift/GiftComposer.tsx","webpack://telegram-t/./src/components/modals/gift/GiftItem.module.scss?c564","webpack://telegram-t/./src/components/modals/gift/GiftItemPremium.tsx","webpack://telegram-t/./src/components/modals/gift/GiftItemStar.tsx","webpack://telegram-t/./src/components/modals/gift/GiftModal.module.scss?fd13","webpack://telegram-t/./src/components/modals/gift/GiftModalResaleScreen.tsx","webpack://telegram-t/./src/components/modals/gift/ResaleGiftMenuAttributeSticker.module.scss?8276","webpack://telegram-t/./src/components/modals/gift/ResaleGiftMenuAttributeSticker.tsx","webpack://telegram-t/./src/components/modals/gift/GiftResaleFilters.module.scss?c5a8","webpack://telegram-t/./src/components/modals/gift/GiftResaleFilters.tsx","webpack://telegram-t/./src/components/modals/gift/StarGiftCategoryList.module.scss?7d19","webpack://telegram-t/./src/components/modals/gift/StarGiftCategoryList.tsx","webpack://telegram-t/./src/components/modals/gift/GiftModal.tsx","webpack://telegram-t/./src/components/modals/gift/recipient/GiftRecipientPicker.module.scss?b7e9","webpack://telegram-t/./src/components/modals/gift/recipient/GiftRecipientPicker.tsx","webpack://telegram-t/./src/components/common/gift/GiftTransferPreview.module.scss?0f0d","webpack://telegram-t/./src/components/common/gift/GiftTransferPreview.tsx","webpack://telegram-t/./src/components/modals/gift/info/GiftInfoModal.module.scss?4f0e","webpack://telegram-t/./src/components/modals/gift/info/GiftInfoModal.tsx","webpack://telegram-t/./src/components/modals/gift/resale/GiftResalePriceComposerModal.module.scss?6666","webpack://telegram-t/./src/components/modals/gift/resale/GiftResalePriceComposerModal.tsx","webpack://telegram-t/./src/components/modals/gift/upgrade/GiftUpgradeModal.module.scss?ae9e","webpack://telegram-t/./src/components/modals/gift/upgrade/GiftUpgradeModal.tsx","webpack://telegram-t/./src/components/modals/gift/status/GiftStatusInfoModal.module.scss?3366","webpack://telegram-t/./src/components/modals/gift/status/GiftStatusInfoModal.tsx","webpack://telegram-t/./src/components/modals/gift/withdraw/GiftWithdrawModal.module.scss?287b","webpack://telegram-t/./src/components/modals/gift/withdraw/GiftWithdrawModal.tsx","webpack://telegram-t/./src/hooks/useDebouncedMemo.ts","webpack://telegram-t/./src/hooks/usePeerSearch.ts","webpack://telegram-t/./src/components/modals/gift/transfer/GiftTransferModal.tsx","webpack://telegram-t/./src/components/modals/stars/chatRefund/ChatRefundModal.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalDialog\":\"MFXAwnxJ\",\"content\":\"Sl6xVf1R\",\"main\":\"bTN9Jeph\",\"headerInfo\":\"c6MiyJgW\",\"logo\":\"StGLWvzb\",\"logoBackground\":\"SyTXSfml\",\"description\":\"kFe3mIZo\",\"section\":\"BgfHkWd2\",\"header\":\"zMtAGfXs\",\"starHeaderText\":\"q3v8orGj\",\"hiddenHeader\":\"bq3FnXT0\",\"closeButton\":\"bDsDTkbe\",\"avatar\":\"jK36xUj4\",\"center\":\"v1PckUQn\",\"secondaryInfo\":\"TDWSRfP9\"};","import type { FC } from '../../../../lib/teact/teact';\nimport type React from '../../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiStarTopupOption, ApiUser,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\n\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport {\n  selectUser,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatCurrencyAsString } from '../../../../util/formatCurrency';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Avatar from '../../../common/Avatar';\nimport Icon from '../../../common/icons/Icon';\nimport SafeLink from '../../../common/SafeLink';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport StarTopupOptionList from '../StarTopupOptionList';\n\nimport styles from './StarsGiftModal.module.scss';\n\nimport StarLogo from '../../../../assets/icons/GoldStar.svg';\nimport StarsBackground from '../../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['starsGiftModal'];\n};\n\ntype StateProps = {\n  user?: ApiUser;\n};\n\nconst AVATAR_SIZE = 100;\n\nconst StarsGiftModal: FC<OwnProps & StateProps> = ({\n  modal,\n  user,\n}) => {\n  const {\n    closeStarsGiftModal, openInvoice, requestConfetti,\n  } = getActions();\n  const dialogRef = useRef<HTMLDivElement>();\n\n  const isOpen = Boolean(modal?.isOpen);\n\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const oldLang = useOldLang();\n\n  const [selectedOption, setSelectedOption] = useState<ApiStarTopupOption | undefined>();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n    }\n  }, [isOpen]);\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (renderingModal?.isCompleted) {\n      showConfetti();\n    }\n  }, [renderingModal, showConfetti]);\n\n  const handleClick = useLastCallback((option: ApiStarTopupOption) => {\n    if (!renderingModal) return;\n\n    setSelectedOption(option);\n    if (user) {\n      openInvoice({\n        type: 'starsgift',\n        userId: user.id,\n        stars: option.stars,\n        currency: option.currency,\n        amount: option.amount,\n      });\n    } else {\n      openInvoice({\n        type: 'stars',\n        stars: option.stars,\n        currency: option.currency,\n        amount: option.amount,\n      });\n    }\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClose = useLastCallback(() => {\n    closeStarsGiftModal();\n  });\n\n  function renderGiftTitle() {\n    if (renderingModal?.isCompleted) {\n      return user ? renderText(oldLang('Notification.StarsGift.SentYou',\n        formatCurrencyAsString(selectedOption!.amount, selectedOption!.currency, oldLang.code)), ['simple_markdown'])\n        : renderText(oldLang('StarsAcquiredInfo', selectedOption?.stars), ['simple_markdown']);\n    }\n\n    return user ? oldLang('GiftStarsTitle') : oldLang('Star.List.GetStars');\n  }\n\n  const bottomText = useMemo(() => {\n    const text = oldLang('lng_credits_summary_options_about');\n    const parts = text.split('{link}');\n    return [\n      parts[0],\n      <SafeLink\n        url={oldLang('StarsTOSLink')}\n        text={oldLang('lng_credits_summary_options_about_link')}\n      />,\n      parts[1],\n    ];\n  }, [oldLang]);\n\n  return (\n    <Modal\n      className={buildClassName(styles.modalDialog)}\n      contentClassName={styles.content}\n      dialogRef={dialogRef}\n      isSlim\n      onClose={handleClose}\n      isOpen={isOpen}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n\n          onClick={() => closeStarsGiftModal()}\n          ariaLabel={oldLang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.starHeaderText}>\n            {user ? oldLang('GiftStarsTitle') : oldLang('Star.List.GetStars')}\n          </h2>\n        </div>\n        <div className={styles.headerInfo}>\n          {user ? (\n            <>\n              <Avatar\n                size={AVATAR_SIZE}\n                peer={user}\n                className={styles.avatar}\n              />\n              <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n            </>\n          ) : (\n            <>\n              <img className={styles.logo} src={StarLogo} alt=\"\" draggable={false} />\n              <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n            </>\n          )}\n        </div>\n        <h2 className={buildClassName(styles.headerText, styles.center)}>\n          {renderGiftTitle()}\n        </h2>\n        <p className={styles.description}>\n          {user ? renderText(\n            oldLang('ActionGiftStarsSubtitle', getPeerTitle(oldLang, user)), ['simple_markdown'],\n          ) : oldLang('Stars.Purchase.GetStarsInfo')}\n        </p>\n        <div className={styles.section}>\n          <StarTopupOptionList\n            options={renderingModal?.starsGiftOptions}\n            onClick={handleClick}\n          />\n          <div className={styles.secondaryInfo}>\n            {bottomText}\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { modal }): StateProps => {\n  const user = modal?.forUserId ? selectUser(global, modal.forUserId) : undefined;\n\n  return {\n    user,\n  };\n})(StarsGiftModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"s3k01dTm\",\"transition\":\"BNA0_b5j\",\"main\":\"Oadi16vt\",\"filter\":\"z84KbvhX\",\"title\":\"Jnsrau29\",\"buttons\":\"NnVyYB32\",\"picker\":\"cuI2eDIY\",\"avatars\":\"ILtw_aNL\",\"center\":\"eIfMzHv5\",\"description\":\"FlNJWZ5P\",\"premiumFeatures\":\"xIv0Yaur\",\"options\":\"eNJRXn6P\",\"button\":\"KDNKXBp5\"};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  isDeletedUser, isUserBot,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\nimport styles from './StarsGiftingPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  userIds?: string[];\n  activeListIds?: string[];\n  archivedListIds?: string[];\n}\n\nconst StarsGiftingPickerModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  userIds,\n}) => {\n  const { closeStarsGiftingPickerModal, openStarsGiftModal } = getActions();\n\n  const oldLang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedUserIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const combinedIds = unique([\n      ...(userIds || []),\n      ...(activeListIds || []),\n      ...(archivedListIds || []),\n    ]);\n\n    const filteredUserIds = filterPeersByQuery({\n      ids: combinedIds, query: searchQuery, type: 'user',\n    });\n\n    return sortChatIds(filteredUserIds.filter((id) => {\n      const user = usersById[id];\n\n      if (!user) {\n        return false;\n      }\n\n      return !user.isSupport\n        && !isUserBot(user) && !isDeletedUser(user)\n        && id !== currentUserId && id !== SERVICE_NOTIFICATIONS_USER_ID;\n    }));\n  }, [currentUserId, searchQuery, userIds, activeListIds, archivedListIds]);\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedId?: string) => {\n    if (newSelectedId?.length) {\n      openStarsGiftModal({ forUserId: newSelectedId });\n      closeStarsGiftingPickerModal();\n    }\n  });\n\n  return (\n    <PickerModal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={closeStarsGiftingPickerModal}\n      title={oldLang('GiftStarsTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={oldLang('Continue')}\n      onEnter={closeStarsGiftingPickerModal}\n    >\n      <PeerPicker\n        className={styles.picker}\n        itemIds={displayedUserIds}\n        filterValue={searchQuery}\n        filterPlaceholder={oldLang('Search')}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        onSelectedIdChange={handleSelectedUserIdsChange}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    chats: {\n      listIds,\n    },\n    currentUserId,\n  } = global;\n\n  return {\n    userIds: global.contactList?.userIds,\n    activeListIds: listIds.active,\n    archivedListIds: listIds.archived,\n    currentUserId,\n  };\n})(StarsGiftingPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"TtE8LQNJ\",\"minimal\":\"nkV4JXHc\",\"transition\":\"nXQS4E59\",\"main\":\"JuWZY1ds\",\"container\":\"mnhBs1uK\",\"section\":\"lYkNd_gb\",\"lastSection\":\"f749AI4g\",\"sectionTitle\":\"FF8gm7MP\",\"hint\":\"Rs8WXoOz\",\"tos\":\"Vu6blJk9\",\"topUpButton\":\"dc_DZoVF\",\"tonBalanceContainer\":\"lorbW9II\",\"tonBalance\":\"h2Fs3tOv\",\"tonIconBalance\":\"Ut6GidJP\",\"tonInUsd\":\"FdcdsB4l\",\"tonIconLogo\":\"_hCjjyEv\",\"description\":\"teXilLxe\",\"header\":\"fnhXotO2\",\"starHeaderText\":\"iUwego5s\",\"botItem\":\"AhxcrKWn\",\"hiddenHeader\":\"DZk6d6hF\",\"closeButton\":\"piD1PXHW\",\"addStarsButton\":\"dqnGL2uh\",\"addStarsIcon\":\"w9Db2eiK\",\"balanceBlock\":\"Yk0OQBKC\",\"balanceInfo\":\"p2dW9NOV\",\"smallerText\":\"rUnPcfmE\",\"balanceBottom\":\"F5BTkZ9G\",\"modalBalance\":\"t8tMrx3y\",\"starButton\":\"oOt4VBD2\",\"paymentContent\":\"OReEUNTV\",\"paymentImages\":\"oKorQYTC\",\"paymentPhoto\":\"HGTrEtUF\",\"avatarStar\":\"Wu10dXoa\",\"paymentImageBackground\":\"os8jb_qv\",\"paymentButton\":\"VzR5cibf\",\"paymentButtonStar\":\"Uhg7yWxK\",\"transactions\":\"Qvc0fTTH\",\"subscriptions\":\"IX5BhCUF\",\"tabs\":\"KZVEyKOX\",\"disclaimer\":\"bpVifdwH\",\"amountBadge\":\"BPM7LKwo\",\"loadMore\":\"TKmZjMyd\",\"loadMoreIcon\":\"buepwtN1\"};","import { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiTypeCurrencyAmount } from '../../../api/types';\n\nimport { STARS_CURRENCY_CODE, TON_CURRENCY_CODE } from '../../../config';\nimport { formatStarsAmount } from '../../../global/helpers/payments';\nimport buildClassName from '../../../util/buildClassName';\nimport { convertCurrencyFromBaseUnit } from '../../../util/formatCurrency';\n\nimport useLang from '../../../hooks/useLang';\n\nimport BadgeButton from '../../common/BadgeButton';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\n\nimport styles from './StarsBalanceModal.module.scss';\n\ntype OwnProps = {\n  balance?: ApiTypeCurrencyAmount;\n  withAddButton?: boolean;\n  className?: string;\n};\n\nconst BalanceBlock = ({ balance, className, withAddButton }: OwnProps) => {\n  const lang = useLang();\n\n  const {\n    openStarsBalanceModal,\n  } = getActions();\n\n  const renderStarsAmount = () => {\n    return (\n      <>\n        <StarIcon type=\"gold\" size=\"middle\" />\n        {balance !== undefined && balance.currency === STARS_CURRENCY_CODE\n          ? formatStarsAmount(lang, balance) : '…'}\n        {withAddButton && (\n          <BadgeButton\n            className={styles.addStarsButton}\n            onClick={() => openStarsBalanceModal({})}\n          >\n            <Icon\n              className={styles.addStarsIcon}\n              name=\"add\"\n            />\n          </BadgeButton>\n        )}\n      </>\n    );\n  };\n\n  const renderTonAmount = () => {\n    return (\n      <>\n        <Icon name=\"toncoin\" />\n        {balance !== undefined ? convertCurrencyFromBaseUnit(balance.amount, balance.currency) : '…'}\n      </>\n    );\n  };\n\n  return (\n    <div className={buildClassName(styles.balanceBlock, className)}>\n      <div className={styles.balanceInfo}>\n        <span className={styles.smallerText}>{lang('StarsBalance')}</span>\n        <div className={styles.balanceBottom}>\n          {balance?.currency === TON_CURRENCY_CODE ? renderTonAmount() : renderStarsAmount()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(BalanceBlock);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZXnbeQxP\",\"info\":\"zLaaDX3c\",\"status\":\"HbF2qTB2\",\"statusPricing\":\"AveGvpdV\",\"amount\":\"_CBiOQcv\",\"title\":\"k9ZIv5Pd\",\"description\":\"FlRlxMx2\",\"subtitle\":\"YN2J8dw6\",\"statusPeriod\":\"MRrP7Oew\",\"statusEnded\":\"pRHwfr8m\",\"preview\":\"t6Syyhzd\",\"subscriptionStar\":\"ftlbevPm\"};","import { memo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiStarsSubscription,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { selectPeer } from '../../../../global/selectors';\nimport { formatDateToString } from '../../../../util/dates/dateFormat';\nimport { formatInteger } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Avatar from '../../../common/Avatar';\nimport StarIcon from '../../../common/icons/StarIcon';\n\nimport styles from './StarsSubscriptionItem.module.scss';\n\ntype OwnProps = {\n  subscription: ApiStarsSubscription;\n};\n\nfunction selectProvidedPeer(peerId: string) {\n  return (global: GlobalState) => (\n    selectPeer(global, peerId)\n  );\n}\n\nconst StarsSubscriptionItem = ({ subscription }: OwnProps) => {\n  const { openStarsSubscriptionModal } = getActions();\n  const {\n    peerId, pricing, until, isCancelled, title, photo,\n  } = subscription;\n  const lang = useOldLang();\n\n  const peer = useSelector(selectProvidedPeer(peerId))!;\n\n  const handleClick = useLastCallback(() => {\n    openStarsSubscriptionModal({ subscription });\n  });\n\n  if (!peer) {\n    return undefined;\n  }\n\n  const hasExpired = until < Date.now() / 1000;\n  const formattedDate = formatDateToString(until * 1000, lang.code, true, 'long');\n\n  return (\n    <div className={styles.root} onClick={handleClick}>\n      <div className={styles.preview}>\n        <Avatar size=\"medium\" peer={peer} />\n        <StarIcon className={styles.subscriptionStar} type=\"gold\" size=\"small\" />\n      </div>\n      <div className={styles.info}>\n        <h3 className={styles.title}>{renderText(getPeerTitle(lang, peer) || '')}</h3>\n        {title && (\n          <p className={styles.subtitle}>\n            {photo && <Avatar webPhoto={photo} size=\"micro\" />}\n            {renderText(title)}\n          </p>\n        )}\n        <p className={styles.description}>\n          {lang(\n            hasExpired ? 'StarsSubscriptionExpired'\n              : isCancelled ? 'StarsSubscriptionExpires' : 'StarsSubscriptionRenews',\n            formattedDate,\n          )}\n        </p>\n      </div>\n      <div className={styles.status}>\n        {(isCancelled || hasExpired) ? (\n          <div className={styles.statusEnded}>\n            {lang(hasExpired ? 'StarsSubscriptionStatusExpired' : 'StarsSubscriptionStatusCancelled')}\n          </div>\n        ) : (\n          <>\n            <div className={styles.statusPricing}>\n              <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />\n              <span className={styles.amount}>\n                {formatInteger(pricing.amount)}\n              </span>\n            </div>\n            <div className={styles.statusPeriod}>{lang('StarsParticipantSubscriptionPerMonth')}</div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StarsSubscriptionItem);\n","import type { ApiStarsAmount, ApiStarsTransaction, ApiTypeCurrencyAmount } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport { STARS_CURRENCY_CODE, TON_CURRENCY_CODE } from '../../../../config';\nimport { buildStarsTransactionCustomPeer } from '../../../../global/helpers/payments';\nimport {\n  type LangFn,\n} from '../../../../util/localization';\nimport { formatPercent } from '../../../../util/textFormat';\n\nexport function getTransactionTitle(oldLang: OldLangFn, lang: LangFn, transaction: ApiStarsTransaction) {\n  if (transaction.paidMessages) {\n    return lang(\n      'PaidMessageTransaction',\n      { count: transaction.paidMessages },\n      {\n        withNodes: true,\n        pluralValue: transaction.paidMessages,\n      },\n    );\n  }\n\n  if (transaction.isGiftResale) {\n    return isNegativeAmount(transaction.amount)\n      ? lang('StarGiftSaleTransaction')\n      : lang('StarGiftPurchaseTransaction');\n  }\n\n  if (transaction.starRefCommision) {\n    return oldLang('StarTransactionCommission', formatPercent(transaction.starRefCommision));\n  }\n  if (transaction.isGiftUpgrade) return oldLang('Gift2TransactionUpgraded');\n  if (transaction.extendedMedia) return oldLang('StarMediaPurchase');\n  if (transaction.subscriptionPeriod) return transaction.title || oldLang('StarSubscriptionPurchase');\n  if (transaction.isReaction) return oldLang('StarsReactionsSent');\n  if (transaction.giveawayPostId) return oldLang('StarsGiveawayPrizeReceived');\n  if (transaction.isMyGift) return oldLang('StarsGiftSent');\n  if (transaction.isGift) {\n    if (transaction.amount.currency === TON_CURRENCY_CODE) {\n      return lang('TonGiftReceived');\n    }\n    return oldLang('StarsGiftReceived');\n  }\n  if (transaction.starGift) {\n    return isNegativeAmount(transaction.amount) ? oldLang('Gift2TransactionSent') : oldLang('Gift2ConvertedTitle');\n  }\n\n  const customPeer = (transaction.peer && transaction.peer.type !== 'peer'\n    && buildStarsTransactionCustomPeer(transaction.peer)) || undefined;\n\n  if (customPeer) return customPeer.title || oldLang(customPeer.titleKey!);\n\n  return transaction.title;\n}\n\nexport function isNegativeStarsAmount(starsAmount: ApiStarsAmount) {\n  if (starsAmount.amount) return starsAmount.amount < 0;\n  return starsAmount.nanos < 0;\n}\n\nexport function isNegativeAmount(currencyAmount: ApiTypeCurrencyAmount) {\n  if (currencyAmount.currency === STARS_CURRENCY_CODE) {\n    return isNegativeStarsAmount(currencyAmount);\n  }\n  return currencyAmount.amount < 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"jQkp75Gb\",\"preview\":\"OYGSN3PF\",\"count\":\"KX1yz2Jy\",\"thumb\":\"EvinKr5k\",\"noOutline\":\"KSAAsUDv\",\"itemCount1\":\"GxDajfX_\",\"itemCount2\":\"jXuZoxq8\",\"itemCount3\":\"TPn3XGHJ\",\"blurry\":\"hWZuxLS8\",\"full\":\"w56QPFhl\",\"fadeIn\":\"ds43W8Wq\"};","import { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, BoughtPaidMedia } from '../../../../api/types';\n\nimport { getMediaHash, getMediaThumbUri } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport Icon from '../../../common/icons/Icon';\nimport MediaSpoiler from '../../../common/MediaSpoiler';\n\nimport styles from './PaidMediaThumb.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  media: ApiMediaExtendedPreview[] | BoughtPaidMedia[];\n  isTransactionPreview?: boolean;\n  onClick?: NoneToVoidFunction;\n};\n\nconst THUMB_LIMIT = 3;\nconst PREVIEW_THUMB_LIMIT = 2;\n\nconst PaidMediaThumb = ({\n  media, className, isTransactionPreview, onClick,\n}: OwnProps) => {\n  const count = Math.min(media.length, isTransactionPreview ? PREVIEW_THUMB_LIMIT : THUMB_LIMIT);\n  const isLocked = 'mediaType' in media[0];\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles[`itemCount${count}`],\n        isTransactionPreview && styles.preview,\n        className,\n      )}\n      dir=\"rtl\"\n      onClick={onClick}\n    >\n      {media.slice(0, count).reverse().map((item, i, arr) => {\n        const realIndex = arr.length - i - 1;\n        return 'mediaType' in item ? (\n          <MediaSpoiler\n            className={styles.thumb}\n            isVisible\n            width={item.width}\n            height={item.height}\n            thumbDataUri={item.thumbnail?.dataUri}\n          />\n        ) : (\n          <SingleMediaThumb\n            className={buildClassName(isTransactionPreview && realIndex > 0 && styles.noOutline)}\n            boughtMedia={item}\n            index={realIndex}\n          />\n        );\n      })}\n      {isLocked && (\n        <div className={styles.count}>\n          <Icon name=\"stars-lock\" />\n          {media.length > 1 ? media.length : ''}\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SingleMediaThumb({\n  boughtMedia,\n  index,\n  className,\n}: {\n  boughtMedia: BoughtPaidMedia;\n  index?: number;\n  className?: string;\n}) {\n  const media = (boughtMedia.video || boughtMedia.photo)!;\n  const mediaHash = getMediaHash(media, 'pictogram');\n  const thumb = getMediaThumbUri(media);\n\n  const mediaBlob = useMedia(mediaHash);\n\n  return (\n    <div className={buildClassName(styles.thumb, index !== undefined && `stars-transaction-media-${index}`, className)}>\n      {thumb && <img className={styles.blurry} src={thumb} alt=\"\" />}\n      {mediaBlob && <img className={styles.full} src={mediaBlob} alt=\"\" />}\n    </div>\n  );\n}\n\nexport default memo(PaidMediaThumb);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aHAxv_Jg\",\"info\":\"oyYrn3II\",\"stars\":\"K5lc75ku\",\"amount\":\"QLQPuLAr\",\"title\":\"e0pK8CJ_\",\"description\":\"xbERdDMQ\",\"date\":\"l6CwQ0Ev\",\"positive\":\"P_42_ZWR\",\"negative\":\"TGjnLJfH\",\"preview\":\"cnjGihOT\",\"subscriptionStar\":\"z43YvnDX\",\"uniqueGiftBackground\":\"eNvzMw2p\",\"giftSticker\":\"U3dqmnM4\"};","import { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarsTransaction,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { CustomPeer } from '../../../../types';\n\nimport { STARS_CURRENCY_CODE, TON_CURRENCY_CODE } from '../../../../config';\nimport { buildStarsTransactionCustomPeer, formatStarsTransactionAmount } from '../../../../global/helpers/payments';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\nimport { CUSTOM_PEER_PREMIUM } from '../../../../util/objects/customPeer';\nimport { getGiftAttributes, getStickerFromGift } from '../../../common/helpers/gifts';\nimport renderText from '../../../common/helpers/renderText';\nimport { getTransactionTitle, isNegativeAmount } from '../helpers/transaction';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Avatar from '../../../common/Avatar';\nimport StarIcon from '../../../common/icons/StarIcon';\nimport RadialPatternBackground from '../../../common/profile/RadialPatternBackground';\nimport PaidMediaThumb from './PaidMediaThumb';\n\nimport styles from './StarsTransactionItem.module.scss';\n\ntype OwnProps = {\n  transaction: ApiStarsTransaction;\n  className?: string;\n};\n\nconst GIFT_STICKER_SIZE = 36;\n\nfunction selectOptionalPeer(peerId?: string) {\n  return (global: GlobalState) => (\n    peerId ? selectPeer(global, peerId) : undefined\n  );\n}\n\nconst StarsTransactionItem = ({ transaction, className }: OwnProps) => {\n  const { openStarsTransactionModal } = getActions();\n  const {\n    date,\n    amount,\n    photo,\n    peer: transactionPeer,\n    extendedMedia,\n    subscriptionPeriod,\n  } = transaction;\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const peerId = transactionPeer.type === 'peer' ? transactionPeer.id : undefined;\n  const peer = useSelector(selectOptionalPeer(peerId));\n  const starGift = transaction.starGift;\n  const isUniqueGift = starGift?.type === 'starGiftUnique';\n  const giftSticker = starGift && getStickerFromGift(starGift);\n\n  const data = useMemo(() => {\n    let title = getTransactionTitle(oldLang, lang, transaction);\n    let description;\n    let status: string | undefined;\n    let avatarPeer: ApiPeer | CustomPeer | undefined;\n\n    if (transaction.peer.type === 'peer') {\n      description = peer && getPeerTitle(oldLang, peer);\n      avatarPeer = peer || CUSTOM_PEER_PREMIUM;\n    } else {\n      const customPeer = buildStarsTransactionCustomPeer(\n        transaction.peer,\n        transaction.amount.currency === TON_CURRENCY_CODE,\n      );\n      title = customPeer.title || oldLang(customPeer.titleKey!);\n      description = oldLang(customPeer.subtitleKey!);\n      avatarPeer = customPeer;\n    }\n\n    if (transaction.isGiftUpgrade && transaction.starGift?.type === 'starGiftUnique') {\n      description = lang('GiftUnique', { title: transaction.starGift.title, number: transaction.starGift.number });\n    }\n\n    if (transaction.isGiftResale && transaction.starGift?.type === 'starGiftUnique') {\n      description = lang('GiftUnique', { title: transaction.starGift.title, number: transaction.starGift.number });\n    }\n\n    if (transaction.photo) {\n      avatarPeer = undefined;\n    }\n\n    if (transaction.isRefund) {\n      status = oldLang('StarsRefunded');\n    }\n\n    if (transaction.hasFailed) {\n      status = oldLang('StarsFailed');\n    }\n\n    if (transaction.isPending) {\n      status = oldLang('StarsPending');\n    }\n\n    return {\n      title,\n      description,\n      avatarPeer,\n      status,\n    };\n  }, [oldLang, lang, peer, transaction]);\n\n  const previewContent = useMemo(() => {\n    if (isUniqueGift) {\n      const { backdrop } = getGiftAttributes(starGift)!;\n      const backgroundColors = [backdrop!.centerColor, backdrop!.edgeColor];\n\n      return (\n        <>\n          <RadialPatternBackground\n            className={styles.uniqueGiftBackground}\n            backgroundColors={backgroundColors}\n          />\n          <AnimatedIconFromSticker\n            className={styles.giftSticker}\n            sticker={giftSticker}\n            size={GIFT_STICKER_SIZE}\n            play={false}\n          />\n        </>\n      );\n    }\n\n    if (giftSticker) {\n      return (\n        <AnimatedIconFromSticker\n          className={styles.giftSticker}\n          sticker={giftSticker}\n          size={GIFT_STICKER_SIZE}\n          play={false}\n        />\n      );\n    }\n\n    if (extendedMedia) {\n      return <PaidMediaThumb media={extendedMedia} isTransactionPreview />;\n    }\n\n    return (\n      <>\n        <Avatar size=\"medium\" webPhoto={photo} peer={data.avatarPeer} />\n        {Boolean(subscriptionPeriod) && (\n          <StarIcon className={styles.subscriptionStar} type=\"gold\" size=\"small\" />\n        )}\n      </>\n    );\n  }, [isUniqueGift, extendedMedia, photo, data.avatarPeer, subscriptionPeriod, starGift, giftSticker]);\n\n  const handleClick = useLastCallback(() => {\n    openStarsTransactionModal({ transaction });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, className)} onClick={handleClick}>\n      <div className={styles.preview}>\n        {previewContent}\n      </div>\n      <div className={styles.info}>\n        <h3 className={styles.title}>{data.title}</h3>\n        {data.description && (\n          <p className={styles.description}>{renderText(data.description)}</p>\n        )}\n        <p className={styles.date}>\n          {formatDateTimeToString(date * 1000, oldLang.code, true)}\n          {data.status && ` — (${data.status})`}\n        </p>\n      </div>\n      <div className={styles.stars}>\n        <span\n          className={buildClassName(styles.amount, isNegativeAmount(amount) ? styles.negative : styles.positive)}\n        >\n          {formatStarsTransactionAmount(lang, amount)}\n        </span>\n        {amount.currency === STARS_CURRENCY_CODE && <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StarsTransactionItem);\n","import { memo, useEffect, useMemo, useState } from '@teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiStarTopupOption } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\nimport type { RegularLangKey } from '../../../types/language';\n\nimport {\n  PAID_MESSAGES_PURPOSE,\n  STARS_CURRENCY_CODE,\n  TON_CURRENCY_CODE,\n  TON_TOPUP_URL_DEFAULT,\n  TON_USD_RATE_DEFAULT,\n} from '../../../config';\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport { selectChat, selectIsPremiumPurchaseBlocked, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { convertCurrencyFromBaseUnit, convertTonToUsd, formatCurrencyAsString } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Modal from '../../ui/Modal';\nimport TabList, { type TabWithProperties } from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport ParticlesHeader from '../common/ParticlesHeader.tsx';\nimport BalanceBlock from './BalanceBlock';\nimport StarTopupOptionList from './StarTopupOptionList';\nimport StarsSubscriptionItem from './subscription/StarsSubscriptionItem';\nimport StarsTransactionItem from './transaction/StarsTransactionItem';\n\nimport styles from './StarsBalanceModal.module.scss';\n\nconst TRANSACTION_TYPES = ['all', 'inbound', 'outbound'] as const;\nconst TRANSACTION_TABS_KEYS: RegularLangKey[] = [\n  'StarsTransactionsAll',\n  'StarsTransactionsIncoming',\n  'StarsTransactionsOutgoing',\n];\nconst TRANSACTION_ITEM_CLASS = 'StarsTransactionItem';\nconst SUBSCRIPTION_PURPOSE = 'subs';\n\nexport type OwnProps = {\n  modal: TabState['starsBalanceModal'];\n};\n\ntype StateProps = {\n  starsBalanceState?: GlobalState['stars'];\n  tonBalanceState?: GlobalState['ton'];\n  canBuyPremium?: boolean;\n  shouldForceHeight?: boolean;\n  tonUsdRate?: number;\n  tonTopupUrl: string;\n};\n\nconst StarsBalanceModal = ({\n  modal, starsBalanceState, tonBalanceState, canBuyPremium, shouldForceHeight, tonUsdRate, tonTopupUrl,\n}: OwnProps & StateProps) => {\n  const {\n    closeStarsBalanceModal, loadStarsTransactions, loadStarsSubscriptions, openStarsGiftingPickerModal, openInvoice,\n    openUrl,\n  } = getActions();\n\n  const currency = modal?.currency || STARS_CURRENCY_CODE;\n  const currentState = currency === TON_CURRENCY_CODE ? tonBalanceState : starsBalanceState;\n  const { balance, history } = currentState || {};\n  const { subscriptions } = (currency === STARS_CURRENCY_CODE && starsBalanceState) || {};\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedTabIndex, setSelectedTabIndex] = useState(0);\n  const [areBuyOptionsShown, showBuyOptions, hideBuyOptions] = useFlag();\n\n  const isOpen = Boolean(modal && (starsBalanceState || tonBalanceState));\n\n  const {\n    originStarsPayment, originReaction, originGift, topup,\n  } = modal || {};\n\n  const shouldOpenOnBuy = originStarsPayment || originReaction || originGift || topup;\n\n  const ongoingTransactionAmount = originStarsPayment?.form?.invoice?.totalAmount\n    || originStarsPayment?.subscriptionInfo?.subscriptionPricing?.amount\n    || originReaction?.amount\n    || originGift?.gift.stars\n    || topup?.balanceNeeded;\n  const starsNeeded = ongoingTransactionAmount ? ongoingTransactionAmount - (balance?.amount || 0) : undefined;\n  const starsNeededText = useMemo(() => {\n    const global = getGlobal();\n\n    if (originReaction) {\n      const channel = selectChat(global, originReaction.chatId);\n      if (!channel) return undefined;\n      return oldLang('StarsNeededTextReactions', getChatTitle(oldLang, channel));\n    }\n\n    if (originStarsPayment) {\n      const bot = originStarsPayment.form?.botId ? selectUser(global, originStarsPayment.form.botId) : undefined;\n      if (!bot) return undefined;\n      return oldLang('StarsNeededText', getUserFullName(bot));\n    }\n\n    if (originGift) {\n      const peer = selectUser(global, originGift.peerId);\n      if (!peer) return undefined;\n      return oldLang('StarsNeededTextGift', getPeerTitle(lang, peer));\n    }\n\n    if (topup?.purpose === SUBSCRIPTION_PURPOSE) {\n      return oldLang('StarsNeededTextLink');\n    }\n\n    if (topup?.purpose === PAID_MESSAGES_PURPOSE) {\n      return lang('StarsNeededTextSendPaidMessages', undefined, {\n        withMarkdown: true,\n        withNodes: true,\n      });\n    }\n\n    return undefined;\n  }, [originReaction, originStarsPayment, originGift, topup?.purpose, lang, oldLang]);\n\n  const shouldShowItems = Boolean(history?.all?.transactions.length && !shouldOpenOnBuy);\n  const shouldSuggestGifting = !shouldOpenOnBuy;\n\n  const modalHeight = useMemo(() => {\n    const transactionCount = history?.all?.transactions.length || 0;\n    if (transactionCount == 1) {\n      return '35.5rem';\n    }\n    if (transactionCount == 2) {\n      return '39.25rem';\n    }\n    if (transactionCount == 3) {\n      return '43rem';\n    }\n    return '45rem';\n  }, [history?.all?.transactions.length]);\n\n  const transactionTabs: TabWithProperties[] = useMemo(() => {\n    return TRANSACTION_TABS_KEYS.map((key) => ({\n      title: lang(key),\n    }));\n  }, [lang]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setSelectedTabIndex(0);\n      hideBuyOptions();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (shouldOpenOnBuy) {\n      showBuyOptions();\n      return;\n    }\n\n    hideBuyOptions();\n  }, [shouldOpenOnBuy]);\n\n  const tosText = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const text = oldLang('lng_credits_summary_options_about');\n    const parts = text.split('{link}');\n    return [\n      parts[0],\n      <SafeLink url={oldLang('StarsTOSLink')} text={oldLang('lng_credits_summary_options_about_link')} />,\n      parts[1],\n    ];\n  }, [isOpen, oldLang]);\n\n  const renderStarsHeaderSection = () => {\n    return (\n      <>\n        <ParticlesHeader\n          model=\"swaying-star\"\n          color=\"gold\"\n          title={starsNeeded ? oldLang('StarsNeededTitle', ongoingTransactionAmount) : oldLang('TelegramStars')}\n          description={renderText(\n            starsNeededText || oldLang('TelegramStarsInfo'),\n            ['simple_markdown', 'emoji'],\n          )}\n          isDisabled={!isOpen}\n        />\n        {canBuyPremium && !areBuyOptionsShown && (\n          <Button\n            className={styles.starButton}\n            onClick={showBuyOptions}\n          >\n            {oldLang('Star.List.BuyMoreStars')}\n          </Button>\n        )}\n        {canBuyPremium && !areBuyOptionsShown && shouldSuggestGifting && (\n          <Button\n            isText\n            noForcedUpperCase\n            className={styles.starButton}\n            onClick={openStarsGiftingPickerModalHandler}\n          >\n            {oldLang('TelegramStarsGift')}\n          </Button>\n        )}\n        {areBuyOptionsShown && starsBalanceState?.topupOptions && (\n          <StarTopupOptionList\n            starsNeeded={starsNeeded}\n            options={starsBalanceState.topupOptions}\n            onClick={handleBuyStars}\n          />\n        )}\n      </>\n    );\n  };\n\n  const renderTonHeaderSection = () => {\n    const tonAmount = convertCurrencyFromBaseUnit(balance?.amount || 0, TON_CURRENCY_CODE);\n    return (\n      <>\n        <ParticlesHeader\n          model=\"speeding-diamond\"\n          color=\"blue\"\n          title={lang('CurrencyTon')}\n          description={lang('DescriptionAboutTon')}\n          isDisabled={!isOpen}\n        />\n        <div className={styles.tonBalanceContainer}>\n          <div className={styles.tonBalance}>\n            <Icon name=\"toncoin\" className={styles.tonIconBalance} />\n            {tonAmount}\n          </div>\n          {Boolean(tonUsdRate) && (\n            <span className={styles.tonInUsd}>\n              {`≈ ${formatCurrencyAsString(\n                convertTonToUsd(balance?.amount || 0, tonUsdRate),\n                'USD',\n                lang.code,\n              )}`}\n            </span>\n          )}\n        </div>\n        <Button\n          className={styles.topUpButton}\n          onClick={handleTonTopUp}\n        >\n          {lang('ButtonTopUpViaFragment')}\n        </Button>\n      </>\n    );\n  };\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleLoadMoreTransactions = useLastCallback(() => {\n    loadStarsTransactions({\n      type: TRANSACTION_TYPES[selectedTabIndex],\n      isTon: currency === TON_CURRENCY_CODE,\n    });\n  });\n\n  const handleLoadMoreSubscriptions = useLastCallback(() => {\n    loadStarsSubscriptions();\n  });\n\n  const openStarsGiftingPickerModalHandler = useLastCallback(() => {\n    openStarsGiftingPickerModal({});\n  });\n\n  const handleBuyStars = useLastCallback((option: ApiStarTopupOption) => {\n    openInvoice({\n      type: 'stars',\n      stars: option.stars,\n      currency: option.currency,\n      amount: option.amount,\n    });\n  });\n\n  const handleTonTopUp = useLastCallback(() => {\n    openUrl({ url: tonTopupUrl, shouldSkipModal: true });\n  });\n\n  return (\n    <Modal\n      className={buildClassName(styles.root, !shouldForceHeight && !areBuyOptionsShown && styles.minimal)}\n      isOpen={isOpen}\n      onClose={closeStarsBalanceModal}\n      dialogStyle={`--modal-height: ${modalHeight}`}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n\n          onClick={() => closeStarsBalanceModal()}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {currency !== TON_CURRENCY_CODE && <BalanceBlock balance={balance} className={styles.modalBalance} />}\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.starHeaderText}>\n            {oldLang('TelegramStars')}\n          </h2>\n        </div>\n        <div className={styles.section}>\n          {currency === TON_CURRENCY_CODE ? renderTonHeaderSection() : renderStarsHeaderSection()}\n        </div>\n        {areBuyOptionsShown && (\n          <div className={styles.tos}>\n            {tosText}\n          </div>\n        )}\n        {currency === TON_CURRENCY_CODE && (\n          <div className={styles.hint}>\n            {lang('TonModalHint')}\n          </div>\n        )}\n        {shouldShowItems && Boolean(subscriptions?.list.length) && (\n          <div className={styles.section}>\n            <h3 className={styles.sectionTitle}>{oldLang('StarMySubscriptions')}</h3>\n            <div className={styles.subscriptions}>\n              {subscriptions?.list.map((subscription) => (\n                <StarsSubscriptionItem\n                  key={subscription.id}\n                  subscription={subscription}\n                />\n              ))}\n              {subscriptions?.nextOffset && (\n                <Button\n                  isText\n                  disabled={subscriptions.isLoading}\n                  size=\"smaller\"\n                  noForcedUpperCase\n                  className={styles.loadMore}\n                  onClick={handleLoadMoreSubscriptions}\n                >\n                  <Icon name=\"down\" className={styles.loadMoreIcon} />\n                  {oldLang('StarMySubscriptionsExpand')}\n                </Button>\n              )}\n            </div>\n          </div>\n        )}\n        {shouldShowItems && (\n          <div className={styles.container}>\n            <div className={styles.lastSection}>\n              <Transition\n                name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n                activeKey={selectedTabIndex}\n                renderCount={TRANSACTION_TABS_KEYS.length}\n                shouldRestoreHeight\n                className={styles.transition}\n              >\n                <InfiniteScroll\n                  onLoadMore={handleLoadMoreTransactions}\n                  items={history?.[TRANSACTION_TYPES[selectedTabIndex]]?.transactions}\n                  scrollContainerClosest={`.${styles.main}`}\n                  itemSelector={`.${TRANSACTION_ITEM_CLASS}`}\n                  className={styles.transactions}\n                  noFastList\n                  noScrollRestoreOnTop\n                >\n                  {history?.[TRANSACTION_TYPES[selectedTabIndex]]?.transactions.map((transaction) => (\n                    <StarsTransactionItem\n                      key={`${transaction.id}-${transaction.isRefund}`}\n                      transaction={transaction}\n                      className={TRANSACTION_ITEM_CLASS}\n                    />\n                  ))}\n                </InfiniteScroll>\n              </Transition>\n            </div>\n            <TabList\n              className={styles.tabs}\n              tabClassName={styles.tab}\n              activeTab={selectedTabIndex}\n              tabs={transactionTabs}\n              onSwitchTab={setSelectedTabIndex}\n            />\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const shouldForceHeight = modal?.currency === TON_CURRENCY_CODE\n      ? Boolean(global.ton?.history?.all?.transactions.length)\n      : Boolean(global.stars?.history?.all?.transactions.length);\n\n    return {\n      shouldForceHeight,\n      starsBalanceState: global.stars,\n      tonBalanceState: global.ton,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      tonUsdRate: global.appConfig?.tonUsdRate || TON_USD_RATE_DEFAULT,\n      tonTopupUrl: global.appConfig?.tonTopupUrl || TON_TOPUP_URL_DEFAULT,\n    };\n  },\n)(StarsBalanceModal));\n","import { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMediaExtendedPreview, ApiMessage, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\n\nimport { getChatTitle, getCustomPeerFromInvite, getUserFullName } from '../../../global/helpers';\nimport {\n  selectChat, selectChatMessage, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Avatar from '../../common/Avatar';\nimport StarIcon from '../../common/icons/StarIcon';\nimport PeerBadge from '../../common/PeerBadge';\nimport PeerChip from '../../common/PeerChip';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport BalanceBlock from './BalanceBlock';\nimport PaidMediaThumb from './transaction/PaidMediaThumb';\n\nimport styles from './StarsBalanceModal.module.scss';\n\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['starsPayment'];\n};\n\ntype StateProps = {\n  starsBalanceState?: GlobalState['stars'];\n  bot?: ApiUser;\n  paidMediaMessage?: ApiMessage;\n  paidMediaChat?: ApiChat;\n};\n\nconst StarPaymentModal = ({\n  modal,\n  bot,\n  starsBalanceState,\n  paidMediaMessage,\n  paidMediaChat,\n}: OwnProps & StateProps) => {\n  const { closeStarsPaymentModal, openStarsBalanceModal, sendStarPaymentForm } = getActions();\n  const [isLoading, markLoading, unmarkLoading] = useFlag();\n  const isOpen = Boolean(modal?.inputInvoice && starsBalanceState);\n\n  const prevModal = usePrevious(modal);\n  const renderingModal = modal || prevModal;\n\n  const { form, subscriptionInfo } = renderingModal || {};\n  const amount = form?.invoice?.totalAmount || subscriptionInfo?.subscriptionPricing?.amount;\n  const isBotSubscription = Boolean(form?.invoice.subscriptionPeriod);\n  const canShowPeerItem = !subscriptionInfo?.subscriptionPricing;\n\n  const photo = form?.photo;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkLoading();\n    }\n  }, [isOpen]);\n\n  const descriptionText = useMemo(() => {\n    if (!renderingModal?.inputInvoice) {\n      return '';\n    }\n\n    const botName = getUserFullName(bot);\n    const starsText = oldLang('Stars.Intro.PurchasedText.Stars', amount);\n\n    if (paidMediaMessage) {\n      const extendedMedia = paidMediaMessage.content.paidMedia!.extendedMedia as ApiMediaExtendedPreview[];\n      const areAllPhotos = extendedMedia.every((media) => !media.duration);\n      const areAllVideos = extendedMedia.every((media) => Boolean(media.duration));\n\n      const mediaText = areAllPhotos ? oldLang('Stars.Transfer.Photos', extendedMedia.length)\n        : areAllVideos ? oldLang('Stars.Transfer.Videos', extendedMedia.length)\n          : oldLang('Media', extendedMedia.length);\n\n      const channelTitle = getChatTitle(oldLang, paidMediaChat!);\n      return oldLang('Stars.Transfer.UnlockInfo', [mediaText, channelTitle, starsText]);\n    }\n\n    if (subscriptionInfo) {\n      return lang('StarsSubscribeText', {\n        chat: subscriptionInfo.title,\n        amount,\n      }, {\n        withNodes: true,\n        withMarkdown: true,\n        pluralValue: amount!,\n      });\n    }\n\n    if (isBotSubscription) {\n      return lang('StarsSubscribeBotText', {\n        name: form.title,\n        amount,\n        bot: botName,\n      }, {\n        pluralValue: amount!,\n      });\n    }\n\n    return oldLang('Stars.Transfer.Info', [form!.title, botName, starsText]);\n  }, [\n    renderingModal?.inputInvoice, bot, oldLang, amount, paidMediaMessage, subscriptionInfo, isBotSubscription, form,\n    paidMediaChat, lang,\n  ]);\n\n  const disclaimerText = useMemo(() => {\n    if (subscriptionInfo) {\n      return lang('StarsSubscribeInfo', {\n        link: <SafeLink url={lang('StarsSubscribeInfoLink')} text={lang('StarsSubscribeInfoLinkText')} />,\n      }, {\n        withNodes: true,\n      });\n    }\n\n    return undefined;\n  }, [subscriptionInfo, lang]);\n\n  const inviteCustomPeer = useMemo(() => {\n    if (!subscriptionInfo) {\n      return undefined;\n    }\n\n    return getCustomPeerFromInvite(subscriptionInfo);\n  }, [subscriptionInfo]);\n\n  const handlePayment = useLastCallback(() => {\n    const balance = starsBalanceState?.balance;\n    if (amount === undefined || balance === undefined) {\n      return;\n    }\n\n    if (amount > balance.amount) {\n      openStarsBalanceModal({\n        originStarsPayment: modal,\n      });\n      return;\n    }\n\n    sendStarPaymentForm({});\n    markLoading();\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.paymentContent}\n      isOpen={isOpen}\n      hasAbsoluteCloseButton\n      isSlim\n      onClose={closeStarsPaymentModal}\n    >\n      <BalanceBlock balance={starsBalanceState?.balance} className={styles.modalBalance} />\n      <div className={styles.paymentImages} dir={oldLang.isRtl ? 'ltr' : 'rtl'}>\n        {paidMediaMessage ? (\n          <PaidMediaThumb media={paidMediaMessage.content.paidMedia!.extendedMedia} />\n        ) : inviteCustomPeer ? (\n          <>\n            <Avatar className={styles.paymentPhoto} peer={inviteCustomPeer} size=\"giant\" />\n            <StarIcon type=\"gold\" size=\"adaptive\" className={styles.avatarStar} />\n          </>\n        ) : (\n          <PeerBadge\n            peer={!photo ? bot : undefined}\n            avatarWebPhoto={photo}\n            avatarSize=\"giant\"\n            badgeIcon=\"star\"\n            badgeText={formatInteger(amount!)}\n            badgeClassName={styles.amountBadge}\n            className={styles.paymentPhoto}\n          />\n        )}\n        <img className={styles.paymentImageBackground} src={StarsBackground} alt=\"\" draggable={false} />\n      </div>\n      <h2 className={styles.headerText}>\n        {inviteCustomPeer ? oldLang('StarsSubscribeTitle') : oldLang('StarsConfirmPurchaseTitle')}\n      </h2>\n      {canShowPeerItem && <PeerChip className={styles.botItem} peerId={form?.botId} />}\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <Button className={styles.paymentButton} size=\"smaller\" onClick={handlePayment} isLoading={isLoading}>\n        {lang(isBotSubscription ? 'StarsSubscribeBotButtonMonth' : 'StarsPay', {\n          amount: formatStarsAsIcon(lang, amount!, { asFont: true }),\n        }, {\n          withNodes: true,\n        })}\n      </Button>\n      {Boolean(disclaimerText) && (\n        <div className={buildClassName(styles.disclaimer, styles.smallerText)}>\n          {disclaimerText}\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const bot = modal?.form?.botId ? selectUser(global, modal.form.botId) : undefined;\n\n    const messageInputInvoice = modal?.inputInvoice?.type === 'message' ? modal.inputInvoice : undefined;\n    const message = messageInputInvoice\n      ? selectChatMessage(global, messageInputInvoice.chatId, messageInputInvoice.messageId) : undefined;\n    const chat = messageInputInvoice ? selectChat(global, messageInputInvoice.chatId) : undefined;\n    const isPaidMedia = message?.content.paidMedia;\n\n    return {\n      bot,\n      starsBalanceState: global.stars,\n      paidMediaMessage: isPaidMedia ? message : undefined,\n      paidMediaChat: isPaidMedia ? chat : undefined,\n    };\n  },\n)(StarPaymentModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"irv1C8bo\",\"subtitleBadge\":\"V7kDVPLm\",\"radialPattern\":\"UvhsGZLf\",\"amount\":\"zTVWZg63\",\"sticker\":\"a1ASgPwu\",\"transition\":\"Tu6_OHoq\",\"transitionSlide\":\"iUTKLzTN\",\"title\":\"ECTvfOda\",\"subtitle\":\"S6JwvHWD\"};","import type { TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarGiftAttributeBackdrop, ApiStarGiftAttributeModel, ApiStarGiftAttributePattern,\n  ApiTypeCurrencyAmount } from '../../../api/types';\n\nimport {\n  formatStarsTransactionAmount,\n} from '../../../global/helpers/payments';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport { useTransitionActiveKey } from '../../../hooks/animations/useTransitionActiveKey';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport StarIcon from '../../common/icons/StarIcon';\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport Transition from '../../ui/Transition';\n\nimport styles from './UniqueGiftHeader.module.scss';\n\ntype OwnProps = {\n  modelAttribute: ApiStarGiftAttributeModel;\n  backdropAttribute: ApiStarGiftAttributeBackdrop;\n  patternAttribute: ApiStarGiftAttributePattern;\n  title?: string;\n  subtitle?: TeactNode;\n  subtitlePeer?: ApiPeer;\n  className?: string;\n  resellPrice?: ApiTypeCurrencyAmount;\n};\n\nconst STICKER_SIZE = 120;\n\nconst UniqueGiftHeader = ({\n  modelAttribute,\n  backdropAttribute,\n  patternAttribute,\n  title,\n  subtitle,\n  subtitlePeer,\n  className,\n  resellPrice,\n}: OwnProps) => {\n  const {\n    openChat,\n  } = getActions();\n\n  const lang = useLang();\n  const activeKey = useTransitionActiveKey([modelAttribute, backdropAttribute, patternAttribute]);\n  const subtitleColor = backdropAttribute?.textColor;\n\n  const radialPatternBackdrop = useMemo(() => {\n    const backdropColors = [backdropAttribute.centerColor, backdropAttribute.edgeColor];\n    const patternColor = backdropAttribute.patternColor;\n\n    return (\n      <RadialPatternBackground\n        className={styles.radialPattern}\n        backgroundColors={backdropColors}\n        patternColor={patternColor}\n        patternIcon={patternAttribute.sticker}\n      />\n    );\n  }, [backdropAttribute, patternAttribute]);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <Transition\n        className={styles.transition}\n        slideClassName={styles.transitionSlide}\n        activeKey={activeKey}\n        direction={1}\n        name=\"zoomBounceSemiFade\"\n      >\n        {radialPatternBackdrop}\n        <AnimatedIconFromSticker\n          className={styles.sticker}\n          sticker={modelAttribute.sticker}\n          size={STICKER_SIZE}\n        />\n      </Transition>\n      {title && <h1 className={styles.title}>{title}</h1>}\n      {Boolean(subtitle) && (\n        <div\n          className={buildClassName(styles.subtitle, subtitlePeer && styles.subtitleBadge)}\n          style={buildStyle(subtitleColor && `color: ${subtitleColor}`)}\n          onClick={() => {\n            if (subtitlePeer) {\n              openChat({ id: subtitlePeer.id });\n            }\n          }}\n        >\n          {subtitle}\n        </div>\n      )}\n      {resellPrice && (\n        <p className={styles.amount}>\n          <span>\n            {formatStarsTransactionAmount(lang, resellPrice)}\n          </span>\n          <StarIcon type=\"gold\" size=\"middle\" />\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default memo(UniqueGiftHeader);\n","import { useMemo, useRef } from '../../lib/teact/teact';\n\n/**\n * Use this hook to bind `<Transition />` animation to changes in the dependency array.\n * Use optional parameter `noAnimation` if you want to prevent the animation even if the dependency array changes.\n*/\nexport function useTransitionActiveKey(deps: unknown[], noAnimation?: boolean): number {\n  const activeKey = useRef(0);\n\n  useMemo(() => {\n    if (!noAnimation) activeKey.current += 1;\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [...deps]);\n\n  return activeKey.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"IzhfRIWu\",\"positive\":\"jvBZSrpd\",\"negative\":\"xDyq9cc0\",\"header\":\"qBOIq6Jn\",\"uniqueGift\":\"ApoQz22o\",\"amount\":\"sso9uZM6\",\"title\":\"ZZAj3hj7\",\"description\":\"NuWOY7ED\",\"tid\":\"tMF8VIOM\",\"refunded\":\"sxWAwxTd\",\"totalStars\":\"Z2YALGgl\",\"starIcon\":\"cU5QlvwL\",\"footer\":\"KgzPpgS6\",\"starsBackground\":\"nML8IQqX\",\"copyIcon\":\"voCttFzS\",\"mediaPreview\":\"C5r59yiV\",\"subtitle\":\"mFYcIYMJ\",\"starGiftSticker\":\"j3akHdtm\"};","import type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarsTransactionPeer, ApiSticker,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { STARS_CURRENCY_CODE } from '../../../../config';\nimport { getMessageLink } from '../../../../global/helpers';\nimport {\n  buildStarsTransactionCustomPeer,\n  formatStarsTransactionAmount,\n} from '../../../../global/helpers/payments';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectGiftStickerForStars,\n  selectGiftStickerForTon,\n  selectPeer,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../../util/clipboard';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\nimport { formatStarsAsIcon } from '../../../../util/localization/format';\nimport { formatPercent } from '../../../../util/textFormat';\nimport { getGiftAttributes, getStickerFromGift } from '../../../common/helpers/gifts';\nimport { getTransactionTitle, isNegativeAmount } from '../helpers/transaction';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Avatar from '../../../common/Avatar';\nimport Icon from '../../../common/icons/Icon';\nimport StarIcon from '../../../common/icons/StarIcon';\nimport SafeLink from '../../../common/SafeLink';\nimport TableInfoModal, { type TableData } from '../../common/TableInfoModal';\nimport UniqueGiftHeader from '../../gift/UniqueGiftHeader';\nimport PaidMediaThumb from './PaidMediaThumb';\n\nimport styles from './StarsTransactionModal.module.scss';\n\nimport StarsBackground from '../../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['starsTransactionModal'];\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  canPlayAnimatedEmojis?: boolean;\n  topSticker?: ApiSticker;\n  paidMessageCommission?: number;\n};\n\nconst StarsTransactionModal: FC<OwnProps & StateProps> = ({\n  modal,\n  peer,\n  canPlayAnimatedEmojis,\n  topSticker,\n  paidMessageCommission,\n}) => {\n  const { showNotification, openMediaViewer, closeStarsTransactionModal } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n  const { transaction } = modal || {};\n\n  const handleOpenMedia = useLastCallback(() => {\n    const media = transaction?.extendedMedia;\n    if (!media) return;\n\n    openMediaViewer({\n      origin: MediaViewerOrigin.StarsTransaction,\n      standaloneMedia: media.flatMap((item) => Object.values(item)),\n    });\n  });\n\n  const starModalData = useMemo(() => {\n    if (!transaction) {\n      return undefined;\n    }\n\n    const {\n      giveawayPostId, photo, amount, isGiftUpgrade, starGift, isGiftResale,\n      starRefCommision,\n    } = transaction;\n\n    const gift = transaction?.starGift;\n    const isUniqueGift = gift?.type === 'starGiftUnique';\n    const sticker = transaction?.starGift ? getStickerFromGift(transaction.starGift) : topSticker;\n\n    const giftAttributes = isUniqueGift ? getGiftAttributes(gift) : undefined;\n\n    const customPeer = (transaction.peer && transaction.peer.type !== 'peer'\n      && buildStarsTransactionCustomPeer(transaction.peer)) || undefined;\n\n    const peerId = transaction.peer?.type === 'peer' ? transaction.peer.id : undefined;\n    const toName = transaction.peer && oldLang(getStarsPeerTitleKey(transaction.peer));\n\n    const title = getTransactionTitle(oldLang, lang, transaction);\n\n    const messageLink = peer && transaction.messageId && !isGiftUpgrade\n      ? getMessageLink(peer, undefined, transaction.messageId) : undefined;\n    const giveawayMessageLink = peer && giveawayPostId ? getMessageLink(peer, undefined, giveawayPostId) : undefined;\n\n    const media = transaction.extendedMedia;\n\n    const mediaAmount = media?.length || 0;\n    const areAllPhotos = media?.every((m) => !m.video);\n    const areAllVideos = media?.every((m) => !m.photo);\n\n    const mediaText = areAllPhotos ? oldLang('Stars.Transfer.Photos', mediaAmount)\n      : areAllVideos ? oldLang('Stars.Transfer.Videos', mediaAmount)\n        : oldLang('Media', mediaAmount);\n\n    const description = transaction.description\n      || (isGiftUpgrade && starGift?.type === 'starGiftUnique' ? starGift.title : undefined)\n      || (media ? mediaText : undefined);\n\n    const shouldDisplayAvatar = !media && !sticker;\n    const avatarPeer = !photo ? (peer || customPeer) : undefined;\n\n    const uniqueGiftHeader = isUniqueGift && (\n      <div className={buildClassName(styles.header, styles.uniqueGift)}>\n        <UniqueGiftHeader\n          backdropAttribute={giftAttributes!.backdrop!}\n          patternAttribute={giftAttributes!.pattern!}\n          modelAttribute={giftAttributes!.model!}\n          title={gift.title}\n          subtitle={lang('GiftInfoCollectible', { number: gift.number })}\n          resellPrice={transaction.amount}\n        />\n      </div>\n    );\n\n    const regularHeader = (\n      <div className={styles.header}>\n        {media && (\n          <PaidMediaThumb\n            className={buildClassName(styles.mediaPreview, 'transaction-media-preview')}\n            media={media}\n            onClick={handleOpenMedia}\n          />\n        )}\n        {!media && sticker && (\n          <AnimatedIconFromSticker\n            key={transaction.id}\n            sticker={sticker}\n            play={canPlayAnimatedEmojis}\n            noLoop\n          />\n        )}\n        {shouldDisplayAvatar && (\n          <Avatar peer={avatarPeer} webPhoto={photo} size=\"giant\" />\n        )}\n        {!sticker && (\n          <img\n            className={buildClassName(styles.starsBackground)}\n            src={StarsBackground}\n            alt=\"\"\n            draggable={false}\n          />\n        )}\n        {Boolean(title) && <h1 className={styles.title}>{title}</h1>}\n        <p className={styles.description}>{description}</p>\n        <p className={styles.amount}>\n          <span\n            className={buildClassName(styles.amount, isNegativeAmount(amount) ? styles.negative : styles.positive)}\n          >\n            {formatStarsTransactionAmount(lang, amount)}\n          </span>\n          {amount.currency === STARS_CURRENCY_CODE && <StarIcon type=\"gold\" size=\"middle\" />}\n          {transaction.isRefund && (\n            <p className={styles.refunded}>{lang('Refunded')}</p>\n          )}\n        </p>\n        {Boolean(transaction.paidMessages && transaction.starRefCommision && paidMessageCommission) && (\n          <p className={styles.description}>\n            {lang(\n              'PaidMessageTransactionDescription',\n              { percent: formatPercent(paidMessageCommission! / 10) },\n              {\n                withNodes: true,\n                withMarkdown: true,\n              },\n            )}\n          </p>\n        )}\n      </div>\n    );\n\n    const tableData: TableData = [];\n\n    if (transaction && starRefCommision && !transaction.paidMessages && !isGiftResale) {\n      tableData.push([\n        oldLang('StarsTransaction.StarRefReason.Title'),\n        oldLang('StarsTransaction.StarRefReason.Program'),\n      ]);\n    }\n\n    if (isGiftUpgrade) {\n      tableData.push([\n        oldLang('StarGiftReason'),\n        oldLang('StarGiftReasonUpgrade'),\n      ]);\n    }\n\n    if (isGiftResale) {\n      tableData.push([\n        oldLang('StarGiftReason'),\n        isNegativeAmount(transaction.amount)\n          ? lang('StarGiftSaleTransaction')\n          : lang('StarGiftPurchaseTransaction'),\n      ]);\n    }\n\n    let peerLabel;\n    if (isGiftUpgrade) {\n      peerLabel = oldLang('Stars.Transaction.GiftFrom');\n    } else if (isNegativeAmount(amount) || transaction.isMyGift) {\n      peerLabel = oldLang('Stars.Transaction.To');\n    } else if (transaction.starRefCommision && !transaction.paidMessages && !isGiftResale) {\n      peerLabel = oldLang('StarsTransaction.StarRefReason.Miniapp');\n    } else if (peerId) {\n      peerLabel = oldLang('Star.Transaction.From');\n    } else {\n      peerLabel = oldLang('Stars.Transaction.Via');\n    }\n\n    tableData.push([\n      peerLabel,\n      peerId ? { chatId: peerId } : toName || '',\n    ]);\n\n    if (transaction.starRefCommision && transaction.paidMessages) {\n      tableData.push([\n        lang('PaidMessageTransactionTotal'),\n        formatStarsAsIcon(lang,\n          transaction.amount.amount / ((100 - transaction.starRefCommision) / 100),\n          { asFont: false, className: styles.starIcon, containerClassName: styles.totalStars }),\n      ]);\n    }\n\n    if (messageLink) {\n      tableData.push([oldLang('Stars.Transaction.Reaction.Post'), <SafeLink url={messageLink} text={messageLink} />]);\n    }\n\n    if (giveawayMessageLink && transaction.amount.currency === STARS_CURRENCY_CODE) {\n      tableData.push([oldLang('BoostReason'), <SafeLink url={giveawayMessageLink} text={oldLang('Giveaway')} />]);\n      tableData.push([oldLang('Gift'), oldLang('Stars', transaction.amount, 'i')]);\n    }\n\n    if (transaction.id) {\n      tableData.push([\n        oldLang('Stars.Transaction.Id'),\n        (\n          <>\n            <div\n              className={styles.tid}\n              onClick={() => {\n                copyTextToClipboard(transaction.id!);\n                showNotification({\n                  message: oldLang('StarsTransactionIDCopied'),\n                });\n              }}\n            >\n              {transaction.id}\n            </div>\n            <Icon className={styles.copyIcon} name=\"copy\" />\n          </>\n        ),\n      ]);\n    }\n\n    tableData.push([\n      oldLang('Stars.Transaction.Date'),\n      formatDateTimeToString(transaction.date * 1000, oldLang.code, true),\n    ]);\n\n    const footerText = oldLang('lng_credits_box_out_about');\n    const footerTextParts = footerText.split('{link}');\n\n    const footer = (\n      <span className={styles.footer}>\n        {footerTextParts[0]}\n        <SafeLink url={oldLang('StarsTOSLink')} text={oldLang('lng_credits_summary_options_about_link')} />\n        {footerTextParts[1]}\n      </span>\n    );\n\n    return {\n      header: isUniqueGift ? uniqueGiftHeader : regularHeader,\n      tableData,\n      footer,\n    };\n  }, [transaction, oldLang, lang, peer, canPlayAnimatedEmojis, topSticker, paidMessageCommission]);\n\n  const prevModalData = usePrevious(starModalData);\n  const renderingModalData = prevModalData || starModalData;\n\n  return (\n    <TableInfoModal\n      isOpen={Boolean(transaction)}\n      className={styles.modal}\n      hasBackdrop={transaction?.starGift?.type === 'starGiftUnique'}\n      header={renderingModalData?.header}\n      tableData={renderingModalData?.tableData}\n      footer={renderingModalData?.footer}\n      buttonText={oldLang('OK')}\n      onClose={closeStarsTransactionModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const peerId = modal?.transaction?.peer?.type === 'peer' && modal.transaction.peer.id;\n    const peer = peerId ? selectPeer(global, peerId) : undefined;\n    const paidMessageCommission = global.appConfig?.starsPaidMessageCommissionPermille;\n\n    const currencyAmount = modal?.transaction.amount;\n    const starsGiftSticker = modal?.transaction.isGift\n      && currencyAmount?.currency === STARS_CURRENCY_CODE ? selectGiftStickerForStars(global, currencyAmount?.amount)\n      : selectGiftStickerForTon(global, currencyAmount?.amount);\n\n    return {\n      peer,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      topSticker: starsGiftSticker,\n      paidMessageCommission,\n    };\n  },\n)(StarsTransactionModal));\n\nfunction getStarsPeerTitleKey(peer: ApiStarsTransactionPeer) {\n  switch (peer.type) {\n    case 'appStore':\n      return 'AppStore';\n    case 'playMarket':\n      return 'PlayMarket';\n    case 'fragment':\n      return 'Fragment';\n    case 'premiumBot':\n      return 'StarsTransactionBot';\n    case 'ads':\n      return 'StarsTransactionAds';\n    case 'api':\n      return 'Stars.Intro.Transaction.TelegramBotApi.Subtitle';\n    default:\n      return 'Stars.Transaction.Unsupported.Title';\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"eR_RZfGB\",\"header\":\"E3R22yAI\",\"title\":\"qdydQHgc\",\"amount\":\"FI6rEJlK\",\"footer\":\"GMWMuWCr\",\"starsBackground\":\"zGCayu45\",\"avatarWrapper\":\"wuTMXDP9\",\"subscriptionStar\":\"enRetSny\",\"amountStar\":\"J8HIcN6k\",\"secondary\":\"oBLHWBtJ\",\"danger\":\"nkwiG25Q\"};","import type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiPeer,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { isApiPeerUser } from '../../../../global/helpers/peers';\nimport {\n  selectPeer,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nimport Avatar from '../../../common/Avatar';\nimport StarIcon from '../../../common/icons/StarIcon';\nimport SafeLink from '../../../common/SafeLink';\nimport Button from '../../../ui/Button';\nimport TableInfoModal, { type TableData } from '../../common/TableInfoModal';\n\nimport styles from './StarsSubscriptionModal.module.scss';\n\nimport StarsBackground from '../../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['starsSubscriptionModal'];\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n};\n\nconst StarsSubscriptionModal: FC<OwnProps & StateProps> = ({\n  modal, peer,\n}) => {\n  const {\n    closeStarsSubscriptionModal,\n    fulfillStarsSubscription,\n    changeStarsSubscription,\n    checkChatInvite,\n    loadStarStatus,\n    openInvoice,\n  } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { subscription } = modal || {};\n\n  const buttonState = useMemo(() => {\n    if (!subscription) {\n      return 'hidden';\n    }\n\n    if (subscription.canRefulfill) {\n      return 'refulfill';\n    }\n\n    const isActive = subscription.until > Date.now() / 1000;\n    if (isActive && !subscription.isCancelled) {\n      return 'cancel';\n    }\n\n    if (isActive && subscription.isCancelled) {\n      return 'renew';\n    }\n\n    const canRestart = subscription.chatInviteHash || subscription.invoiceSlug;\n    if (!isActive && canRestart) {\n      return 'restart';\n    }\n\n    return 'ok';\n  }, [subscription]);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!subscription) {\n      return;\n    }\n\n    switch (buttonState) {\n      case 'refulfill': {\n        fulfillStarsSubscription({ id: subscription.id });\n        break;\n      }\n      case 'restart': {\n        if (subscription.chatInviteHash) {\n          checkChatInvite({ hash: subscription.chatInviteHash });\n        } else if (subscription.invoiceSlug) {\n          openInvoice({\n            type: 'slug',\n            slug: subscription.invoiceSlug,\n          });\n        }\n        loadStarStatus();\n        break;\n      }\n      case 'renew': {\n        changeStarsSubscription({ id: subscription.id, isCancelled: false });\n        break;\n      }\n      case 'cancel': {\n        changeStarsSubscription({ id: subscription.id, isCancelled: true });\n        break;\n      }\n    }\n    closeStarsSubscriptionModal();\n  });\n\n  const starModalData = useMemo(() => {\n    if (!subscription || !peer) {\n      return undefined;\n    }\n\n    const {\n      pricing, until, isCancelled, canRefulfill, photo, title, hasBotCancelled,\n    } = subscription;\n\n    const isBotSubscription = isApiPeerUser(peer);\n\n    const header = (\n      <div className={styles.header}>\n        <div className={styles.avatarWrapper}>\n          <Avatar peer={!photo ? peer : undefined} webPhoto={photo} size=\"giant\" />\n          <StarIcon className={styles.subscriptionStar} type=\"gold\" size=\"adaptive\" />\n        </div>\n        <img\n          className={buildClassName(styles.starsBackground)}\n          src={StarsBackground}\n          alt=\"\"\n          draggable={false}\n        />\n        <h1 className={styles.title}>{title || oldLang('StarsSubscriptionTitle')}</h1>\n        <p className={styles.amount}>\n          {lang('StarsPerMonth', {\n            amount: pricing.amount,\n          }, {\n            withNodes: true,\n            specialReplacement: {\n              [STARS_ICON_PLACEHOLDER]: <StarIcon className={styles.amountStar} size=\"adaptive\" type=\"gold\" />,\n            },\n          })}\n        </p>\n      </div>\n    );\n\n    const tableData: TableData = [];\n\n    tableData.push([\n      oldLang(isBotSubscription ? 'StarsSubscriptionBot' : 'StarsSubscriptionChannel'),\n      { chatId: peer.id },\n    ]);\n\n    if (title) {\n      tableData.push([\n        oldLang('StarsSubscriptionBotProduct'),\n        title,\n      ]);\n    }\n\n    const hasExpired = until < Date.now() / 1000;\n    tableData.push([\n      oldLang(hasExpired ? 'StarsSubscriptionUntilExpired'\n        : isCancelled ? 'StarsSubscriptionUntilExpires' : 'StarsSubscriptionUntilRenews'),\n      formatDateTimeToString(until * 1000, oldLang.code, true),\n    ]);\n\n    const footerTos = lang('StarsTransactionTOS', {\n      link: <SafeLink url={lang('StarsTransactionTOSLink')} text={lang('StarsTransactionTOSLinkText')} />,\n    }, {\n      withNodes: true,\n    });\n\n    const footer = (\n      <span className={styles.footer}>\n        <p className={styles.secondary}>{footerTos}</p>\n        {isCancelled && (\n          <p className={styles.danger}>\n            {oldLang(hasBotCancelled ? 'StarsSubscriptionBotCancelledText' : 'StarsSubscriptionCancelledText')}\n          </p>\n        )}\n        {canRefulfill && (\n          <p className={styles.secondary}>\n            {oldLang('StarsSubscriptionRefulfillInfo', formatDateTimeToString(until * 1000, oldLang.code, true))}\n          </p>\n        )}\n        {!isCancelled && !canRefulfill && hasExpired && (\n          <p className={styles.secondary}>\n            {oldLang('StarsSubscriptionExpiredInfo', formatDateTimeToString(until * 1000, oldLang.code, true))}\n          </p>\n        )}\n        {!isCancelled && !canRefulfill && !hasExpired && (\n          <p className={styles.secondary}>\n            {oldLang('StarsSubscriptionCancelInfo', formatDateTimeToString(until * 1000, oldLang.code, true))}\n          </p>\n        )}\n        {buttonState !== 'hidden' && (\n          <Button\n            size=\"smaller\"\n            color={buttonState === 'cancel' ? 'danger' : 'primary'}\n            isText={buttonState === 'cancel'}\n            onClick={handleButtonClick}\n          >\n            {oldLang(\n              buttonState === 'cancel' ? 'StarsSubscriptionCancel'\n                : buttonState === 'refulfill' ? 'StarsSubscriptionRefulfill'\n                  : buttonState === 'restart' ? 'StarsSubscriptionAgain'\n                    : buttonState === 'renew' ? 'StarsSubscriptionRenew' : 'OK',\n            )}\n          </Button>\n        )}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [buttonState, lang, oldLang, peer, subscription]);\n\n  const prevModalData = usePrevious(starModalData);\n  const renderingModalData = prevModalData || starModalData;\n\n  return (\n    <TableInfoModal\n      isOpen={Boolean(subscription)}\n      className={styles.modal}\n      header={renderingModalData?.header}\n      tableData={renderingModalData?.tableData}\n      footer={renderingModalData?.footer}\n      onClose={closeStarsSubscriptionModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const peerId = modal?.subscription.peerId;\n    const peer = peerId ? selectPeer(global, peerId) : undefined;\n\n    return {\n      peer,\n    };\n  },\n)(StarsSubscriptionModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CuBAw2yg\",\"slider\":\"euOOAbZi\",\"sparkles\":\"_L1YQTIP\",\"progress\":\"kwK0cNPX\",\"floatingBadgeWrapper\":\"uvlMoXj0\",\"floatingBadge\":\"BGSDWAYc\",\"floatingBadgeText\":\"qqQan8uF\",\"floatingBadgeTriangle\":\"mIdJOmsB\"};","import type React from '../../../lib/teact/teact';\nimport {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Sparkles from '../../common/Sparkles';\n\nimport styles from './StarSlider.module.scss';\n\ntype OwnProps = {\n  maxValue: number;\n  defaultValue: number;\n  className?: string;\n  onChange: (value: number) => void;\n};\n\nconst DEFAULT_POINTS = [50, 100, 500, 1000, 2000, 5000, 10000];\n\nconst StarSlider = ({\n  maxValue,\n  defaultValue,\n  className,\n  onChange,\n}: OwnProps) => {\n  const floatingBadgeRef = useRef<HTMLDivElement>();\n\n  const points = useMemo(() => {\n    const result = [];\n    for (let i = 0; i < DEFAULT_POINTS.length; i++) {\n      if (DEFAULT_POINTS[i] < maxValue) {\n        result.push(DEFAULT_POINTS[i]);\n      }\n\n      if (DEFAULT_POINTS[i] >= maxValue) {\n        result.push(maxValue);\n        break;\n      }\n    }\n\n    return result;\n  }, [maxValue]);\n\n  const [value, setValue] = useState(0);\n\n  useEffectOnce(() => {\n    setValue(getProgress(points, defaultValue));\n  });\n\n  const updateSafeBadgePosition = useLastCallback(() => {\n    const badge = floatingBadgeRef.current;\n    if (!badge) return;\n    const parent = badge.parentElement!;\n\n    requestMeasure(() => {\n      const safeMinX = parent.offsetLeft + badge.offsetWidth / 2;\n      const safeMaxX = parent.offsetLeft + parent.offsetWidth - badge.offsetWidth / 2;\n\n      requestMutation(() => {\n        parent.style.setProperty('--_min-x', `${safeMinX}px`);\n        parent.style.setProperty('--_max-x', `${safeMaxX}px`);\n      });\n    });\n  });\n\n  useResizeObserver(floatingBadgeRef, updateSafeBadgePosition);\n\n  const handleChange = useLastCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = Number(event.currentTarget.value);\n    setValue(newValue);\n\n    onChange(getValue(points, newValue));\n  });\n\n  return (\n    <div className={buildClassName(styles.root, className)} style={`--progress: ${value / points.length}`}>\n      <div className={styles.floatingBadgeWrapper}>\n        <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n          <div className={styles.floatingBadgeText}>\n            <Icon name=\"star\" className={styles.floatingBadgeIcon} />\n            <AnimatedCounter text={formatInteger(getValue(points, value))} />\n          </div>\n          <svg className={styles.floatingBadgeTriangle} width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n            <defs>\n              <linearGradient id=\"StarBadgeTriangle\" x1=\"0\" x2=\"1\" y1=\"0\" y2=\"0\">\n                <stop offset=\"-50%\" stop-color=\"#FFAA00\" />\n                <stop offset=\"150%\" stop-color=\"#FFCD3A\" />\n              </linearGradient>\n            </defs>\n            <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"url(#StarBadgeTriangle)\" />\n          </svg>\n        </div>\n      </div>\n      <div className={styles.progress}>\n        <Sparkles preset=\"progress\" className={styles.sparkles} />\n      </div>\n      <input\n        className={styles.slider}\n        type=\"range\"\n        min={0}\n        max={points.length}\n        defaultValue={getProgress(points, defaultValue)}\n        step=\"any\"\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nfunction getProgress(points: number[], value: number) {\n  const pointIndex = points.findIndex((point) => value <= point);\n  const prevPoint = points[pointIndex - 1] || 1;\n  const nextPoint = points[pointIndex] || points[points.length - 1];\n  const progress = (value - prevPoint) / (nextPoint - prevPoint);\n  return pointIndex + progress;\n}\n\nfunction getValue(points: number[], progress: number) {\n  const pointIndex = Math.floor(progress);\n  const prevPoint = points[pointIndex - 1] || 1;\n  const nextPoint = points[pointIndex] || points[points.length - 1];\n  const value = prevPoint + (nextPoint - prevPoint) * (progress - pointIndex);\n  return Math.round(value);\n}\n\nexport default memo(StarSlider);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"RdhRpsCn\",\"title\":\"yzbjj73U\",\"slider\":\"xePPMXOI\",\"description\":\"BlpfdOtK\",\"itemInfo\":\"nS9V516D\",\"itemTitle\":\"sH5Nukjy\",\"itemSubtitle\":\"dHlNODTI\",\"itemIcon\":\"H_iHihXU\",\"sendAsPeerButtonAvatar\":\"_mjvLELm\",\"sendAsPeerMenuButton\":\"zxsRaWYV\",\"buttonDownIcon\":\"zrwUUELS\",\"sendAsPeerMenuBubble\":\"X1PB6mhQ\",\"sendAsPeerMenu\":\"Px1MDij9\",\"sendAsPeersMenuContainer\":\"Al1nfhHJ\",\"headerControlPanel\":\"vu90kSL_\",\"separator\":\"uhQLUjmo\",\"checkBox\":\"Mc3bVeF0\",\"topLabel\":\"bnou4CpV\",\"top\":\"QludQDKR\",\"topBadge\":\"JBF9pTUK\",\"buttonStar\":\"NJJFuym9\",\"topPeer\":\"Ty4Ud_Rd\",\"disclaimer\":\"KRvkHeo1\"};","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPaidReactionPrivacyType,\n  ApiPeer,\n  ApiSendAsPeerId,\n  ApiStarsAmount, ApiUser,\n} from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../config';\nimport { getPeerTitle, isApiPeerUser } from '../../../global/helpers/peers';\nimport {\n  selectChat, selectChatMessage, selectPeer, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport PeerBadge from '../../common/PeerBadge';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\nimport BalanceBlock from '../stars/BalanceBlock';\nimport StarSlider from './StarSlider';\n\nimport styles from './PaidReactionModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['paidReactionModal'];\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n  chat?: ApiChat;\n  maxAmount: number;\n  starBalance?: ApiStarsAmount;\n  defaultPrivacy?: ApiPaidReactionPrivacyType;\n  sendPaidReactionsAsPeerIds?: ApiSendAsPeerId[];\n  currentUserId: string;\n  currentUser: ApiUser;\n};\n\ntype ReactorData = {\n  amount: number;\n  localAmount: number;\n  isMy?: boolean;\n  isAnonymous?: boolean;\n  user?: ApiPeer;\n};\n\nconst MAX_TOP_REACTORS = 3;\nconst DEFAULT_STARS_AMOUNT = 50;\nconst MAX_REACTION_AMOUNT = 2500;\nconst ANONYMOUS_PEER: CustomPeer = {\n  avatarIcon: 'author-hidden',\n  customPeerAvatarColor: '#9eaab5',\n  isCustomPeer: true,\n  titleKey: 'StarsReactionAnonymous',\n};\n\nconst PaidReactionModal = ({\n  modal,\n  chat,\n  message,\n  maxAmount,\n  starBalance,\n  defaultPrivacy,\n  sendPaidReactionsAsPeerIds,\n  currentUserId,\n  currentUser,\n}: OwnProps & StateProps) => {\n  const { closePaidReactionModal, addLocalPaidReaction, loadSendPaidReactionsAs } = getActions();\n\n  const [starsAmount, setStarsAmount] = useState(DEFAULT_STARS_AMOUNT);\n  const [isTouched, markTouched, unmarkTouched] = useFlag();\n  const [shouldSendAsAnonymous, setShouldSendAsAnonymous] = useState(true);\n  const [sendAsPeerId, setSendAsPeerId] = useState(currentUserId);\n\n  const chatId = chat?.id;\n\n  const senderPeer = sendAsPeerId ? (selectPeer(getGlobal(), sendAsPeerId)) : currentUser;\n\n  const oldLang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const lang = useLang();\n\n  const handleShowInTopSendersChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setShouldSendAsAnonymous(!e.target.checked);\n  });\n\n  const handleAmountChange = useLastCallback((value: number) => {\n    setStarsAmount(value);\n    markTouched();\n  });\n\n  useEffect(() => {\n    if (chatId && !sendPaidReactionsAsPeerIds) {\n      loadSendPaidReactionsAs({ chatId });\n    }\n  }, [chatId, sendPaidReactionsAsPeerIds]);\n\n  const filteredMyReactorIds = useMemo(() => {\n    const result = sendPaidReactionsAsPeerIds?.map((peer) => peer.id)\n      .filter((id) => id !== chatId);\n    result?.unshift(currentUserId);\n    return result;\n  }, [sendPaidReactionsAsPeerIds, chatId, currentUserId]);\n\n  const canChangeSendAsPeer = filteredMyReactorIds && filteredMyReactorIds.length > 1;\n\n  useEffect(() => {\n    if (!modal) {\n      unmarkTouched();\n    }\n  }, [modal]);\n\n  useEffect(() => {\n    const currentReactor = message?.reactions?.topReactors?.find((reactor) => reactor.isMy);\n    if (currentReactor) {\n      setShouldSendAsAnonymous(Boolean(currentReactor.isAnonymous));\n      if (currentReactor.peerId) {\n        setSendAsPeerId(currentReactor.peerId);\n      }\n      return;\n    }\n\n    setShouldSendAsAnonymous(defaultPrivacy?.type === 'anonymous' || false);\n    if (defaultPrivacy?.type === 'peer' && filteredMyReactorIds?.includes(defaultPrivacy.peerId)) {\n      setSendAsPeerId(defaultPrivacy.peerId);\n      return;\n    }\n\n    setSendAsPeerId(currentUserId);\n  }, [defaultPrivacy, message?.reactions?.topReactors, filteredMyReactorIds, currentUserId]);\n\n  const handleSend = useLastCallback(() => {\n    if (!modal) return;\n\n    addLocalPaidReaction({\n      chatId: modal.chatId,\n      messageId: modal.messageId,\n      count: starsAmount,\n      isPrivate: shouldSendAsAnonymous,\n      peerId: shouldSendAsAnonymous || sendAsPeerId === currentUserId ? undefined : sendAsPeerId,\n      shouldIgnoreDefaultPrivacy: true,\n    });\n    closePaidReactionModal();\n  });\n\n  const handleSendAsPeerChange = useLastCallback((peerId: string) => {\n    setShouldSendAsAnonymous(false);\n    setSendAsPeerId(peerId);\n  });\n\n  const renderMenuItem = useLastCallback((peerId: string) => {\n    const peer = selectPeer(getGlobal(), peerId);\n    const isSelected = sendAsPeerId === peerId && !shouldSendAsAnonymous;\n    if (!peer) return undefined;\n\n    return (\n      <MenuItem\n\n        onClick={() => handleSendAsPeerChange(peerId)}\n      >\n        <Avatar\n          size=\"small\"\n          peer={peer}\n        />\n        <div className={buildClassName(styles.itemInfo)}>\n          <FullNameTitle className={styles.itemTitle} peer={peer} noFake noVerified />\n          <span className={styles.itemSubtitle}>\n            {isApiPeerUser(peer) ? lang('PeerPersonalAccount') : lang('PeerChannel')}\n          </span>\n        </div>\n        <Icon\n          className={styles.itemIcon}\n          name={isSelected ? 'check' : 'placeholder'}\n        />\n      </MenuItem>\n    );\n  });\n\n  const SendAsPeerMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={buildClassName(styles.sendAsPeerMenuButton, isOpen ? 'active' : '')}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Avatar\n          className={styles.sendAsPeerButtonAvatar}\n          size=\"mini\"\n          peer={shouldSendAsAnonymous ? ANONYMOUS_PEER : senderPeer}\n        />\n        <Icon\n          name=\"down\"\n          className={styles.buttonDownIcon}\n        />\n      </Button>\n    );\n  }, [isMobile, lang, senderPeer, shouldSendAsAnonymous]);\n\n  const sendAsPeersMenu = useMemo(() => {\n    if (!canChangeSendAsPeer) return undefined;\n    return (\n      <DropdownMenu\n        className={buildClassName(styles.sendAsPeerMenu, 'with-menu-transitions')}\n        bubbleClassName={styles.sendAsPeerMenuBubble}\n        trigger={SendAsPeerMenuButton}\n        positionX=\"right\"\n        autoClose\n      >\n        {filteredMyReactorIds.map((id) => (\n          renderMenuItem(id)\n        ))}\n      </DropdownMenu>\n    );\n  }, [SendAsPeerMenuButton, filteredMyReactorIds, canChangeSendAsPeer]);\n\n  const topReactors = useMemo(() => {\n    const global = getGlobal();\n    const all = message?.reactions?.topReactors;\n    if (!all) {\n      return undefined;\n    }\n\n    const result: ReactorData[] = [];\n    let hasCurrentSender = false;\n    let myReactorAmount = 0;\n\n    all.forEach((reactor) => {\n      const peer = reactor.peerId ? selectPeer(global, reactor.peerId) : undefined;\n      if (!peer && !reactor.isAnonymous && !reactor.isMy) return;\n      if (reactor.isMy) {\n        myReactorAmount = reactor.count;\n      }\n\n      if (reactor.isMy && (reactor.peerId !== sendAsPeerId || (reactor.isAnonymous && !shouldSendAsAnonymous))) return;\n\n      const isCurrentReactor = sendAsPeerId === reactor.peerId || (shouldSendAsAnonymous && reactor.isAnonymous);\n\n      if (isCurrentReactor) {\n        hasCurrentSender = true;\n      }\n\n      result.push({\n        amount: reactor.count,\n        localAmount: isCurrentReactor && isTouched ? starsAmount : 0,\n        isMy: reactor.isMy,\n        isAnonymous: reactor.isAnonymous,\n        user: peer,\n      });\n    });\n\n    if (!hasCurrentSender) {\n      const sender = selectPeer(global, sendAsPeerId);\n      result.push({\n        amount: myReactorAmount,\n        localAmount: isTouched ? starsAmount : 0,\n        isMy: true,\n        user: sender,\n      });\n    }\n\n    result.sort((a, b) => (b.amount + b.localAmount) - (a.amount + a.localAmount));\n\n    return result.slice(0, MAX_TOP_REACTORS);\n  }, [isTouched, message?.reactions?.topReactors, starsAmount, sendAsPeerId, shouldSendAsAnonymous]);\n\n  const chatTitle = chat && getPeerTitle(oldLang, chat);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      onClose={closePaidReactionModal}\n      isSlim\n      hasAbsoluteCloseButton\n      contentClassName={styles.content}\n      isLowStackPriority\n    >\n      <div className={styles.sendAsPeersMenuContainer}>\n        {sendAsPeersMenu}\n      </div>\n      <div className={styles.headerControlPanel}>\n        <BalanceBlock balance={starBalance} className={styles.modalBalance} withAddButton />\n      </div>\n\n      <StarSlider\n        className={styles.slider}\n        defaultValue={DEFAULT_STARS_AMOUNT}\n        maxValue={maxAmount}\n        onChange={handleAmountChange}\n      />\n      <h3 className={styles.title}>{oldLang('StarsReactionTitle')}</h3>\n      <div className={styles.description}>\n        {renderText(oldLang('StarsReactionText', chatTitle), ['simple_markdown', 'emoji'])}\n      </div>\n      <Separator>\n        {topReactors && <div className={styles.topLabel}>{oldLang('StarsReactionTopSenders')}</div>}\n      </Separator>\n      {topReactors && (\n        <div className={styles.top}>\n          {topReactors.map((reactor) => {\n            const countText = formatInteger(reactor.amount + reactor.localAmount);\n            const peer = (reactor.isAnonymous || !reactor.user || (reactor.isMy && shouldSendAsAnonymous))\n              ? ANONYMOUS_PEER : reactor.user;\n            const text = 'isCustomPeer' in peer ? oldLang(peer.titleKey)\n              : peer && getPeerTitle(oldLang, peer);\n            return (\n              <PeerBadge\n                className={styles.topPeer}\n                key={`${reactor.user?.id || 'anonymous'}-${countText}`}\n                peer={peer}\n                badgeText={countText}\n                badgeIcon=\"star\"\n                badgeClassName={styles.topBadge}\n                text={text}\n              />\n            );\n          })}\n        </div>\n      )}\n      {topReactors && (<Separator className={styles.separator} />)}\n      <Checkbox\n        className={buildClassName(styles.checkBox, 'dialog-checkbox')}\n        checked={!shouldSendAsAnonymous}\n        onChange={handleShowInTopSendersChange}\n        label={oldLang('StarsReactionShowMeInTopSenders')}\n      />\n      <Button\n        size=\"smaller\"\n        onClick={handleSend}\n      >\n        {lang('SendPaidReaction', { amount: starsAmount }, {\n          withNodes: true,\n          specialReplacement: {\n            [STARS_ICON_PLACEHOLDER]: <Icon className={styles.buttonStar} name=\"star\" />,\n          },\n        })}\n      </Button>\n      <p className={styles.disclaimer}>\n        {lang('StarsReactionTerms', {\n          link: <SafeLink text={lang('StarsReactionLinkText')} url={lang('StarsReactionLink')} />,\n        }, {\n          withNodes: true,\n        })}\n      </p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal && selectChat(global, modal.chatId);\n    const message = modal && selectChatMessage(global, modal.chatId, modal.messageId);\n    const starBalance = global.stars?.balance;\n    const maxAmount = global.appConfig?.paidReactionMaxAmount || MAX_REACTION_AMOUNT;\n    const defaultPrivacy = global.settings.paidReactionPrivacy;\n    const sendPaidReactionsAsPeerIds = chat?.sendPaidReactionsAsPeerIds;\n    const currentUserId = global.currentUserId!;\n    const currentUser = selectUser(global, currentUserId)!;\n\n    return {\n      chat,\n      message,\n      starBalance,\n      maxAmount,\n      defaultPrivacy,\n      sendPaidReactionsAsPeerIds,\n      currentUserId,\n      currentUser,\n    };\n  },\n)(PaidReactionModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"jKOG0It6\",\"header\":\"A_fX4EXY\",\"spacer\":\"ATowWJ60\",\"title\":\"gDNtv9oz\",\"balance-container\":\"eAKZVhOT\",\"balanceContainer\":\"eAKZVhOT\",\"balance-caption\":\"vbwprYel\",\"balanceCaption\":\"vbwprYel\",\"star-balance\":\"lXuIlbVK\",\"starBalance\":\"lXuIlbVK\",\"balance\":\"dIEx_Iqi\",\"optionsSection\":\"Y68CEIKn\",\"checkboxTitle\":\"H4taXei_\",\"actionMessageView\":\"CB1mxsgp\",\"messageInput\":\"o5r2IPoA\",\"limited\":\"mWzLu0c0\",\"footer\":\"jxWZSvet\",\"switcher\":\"zZUpGRSI\",\"switcherStarIcon\":\"zAee80Dv\",\"description\":\"nTPAv1ci\",\"main-button\":\"IDuhjrne\",\"mainButton\":\"IDuhjrne\",\"star\":\"Q4NlMT0o\",\"background\":\"ZORVRSG3\",\"customBgImage\":\"Eny_G3JI\",\"customBgColor\":\"TkJZPU2u\",\"withTransition\":\"soDpW2YR\",\"blurred\":\"M6k91TdM\",\"withRightColumn\":\"FBcNO8hj\"};","import type { ChangeEvent } from 'react';\nimport {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { GiftOption } from './GiftModal';\nimport {\n  type ApiMessage, type ApiPeer, type ApiStarsAmount, MAIN_THREAD_ID,\n} from '../../../api/types';\n\nimport { getPeerTitle, isApiPeerUser } from '../../../global/helpers/peers';\nimport {\n  selectPeer, selectPeerPaidMessagesStars, selectTabState, selectTheme, selectThemeValues, selectUserFullInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\n\nimport useCustomBackground from '../../../hooks/useCustomBackground';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport PremiumProgress from '../../common/PremiumProgress';\nimport ActionMessage from '../../middle/message/ActionMessage';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport styles from './GiftComposer.module.scss';\n\nexport type OwnProps = {\n  gift: GiftOption;\n  giftByStars?: GiftOption;\n  peerId: string;\n};\n\nexport type StateProps = {\n  captionLimit?: number;\n  theme: ThemeKey;\n  isBackgroundBlurred?: boolean;\n  patternColor?: string;\n  customBackground?: string;\n  backgroundColor?: string;\n  peer?: ApiPeer;\n  currentUserId?: string;\n  isPaymentFormLoading?: boolean;\n  starBalance?: ApiStarsAmount;\n  paidMessagesStars?: number;\n  areUniqueStarGiftsDisallowed?: boolean;\n  shouldDisallowLimitedStarGifts?: boolean;\n};\n\nconst LIMIT_DISPLAY_THRESHOLD = 50;\n\nfunction GiftComposer({\n  gift,\n  giftByStars,\n  peerId,\n  peer,\n  captionLimit,\n  theme,\n  isBackgroundBlurred,\n  patternColor,\n  backgroundColor,\n  customBackground,\n  currentUserId,\n  isPaymentFormLoading,\n  starBalance,\n  paidMessagesStars,\n  areUniqueStarGiftsDisallowed,\n  shouldDisallowLimitedStarGifts,\n}: OwnProps & StateProps) {\n  const {\n    sendStarGift, sendPremiumGiftByStars, openInvoice, openGiftUpgradeModal, openStarsBalanceModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [giftMessage, setGiftMessage] = useState<string>('');\n  const [shouldHideName, setShouldHideName] = useState<boolean>(false);\n  const [shouldPayForUpgrade, setShouldPayForUpgrade] = useState<boolean>(false);\n  const [shouldPayByStars, setShouldPayByStars] = useState<boolean>(false);\n\n  const customBackgroundValue = useCustomBackground(theme, customBackground);\n\n  useEffect(() => {\n    if (shouldDisallowLimitedStarGifts) {\n      setShouldPayForUpgrade(true);\n    }\n  }, [shouldDisallowLimitedStarGifts, shouldPayForUpgrade]);\n\n  const isStarGift = 'id' in gift && gift.type === 'starGift';\n  const isPremiumGift = 'months' in gift;\n  const hasPremiumByStars = giftByStars && 'amount' in giftByStars;\n  const isPeerUser = peer && isApiPeerUser(peer);\n  const isSelf = peerId === currentUserId;\n\n  const localMessage = useMemo(() => {\n    if (isPremiumGift) {\n      const currentGift = shouldPayByStars && hasPremiumByStars ? giftByStars : gift;\n      return {\n        id: -1,\n        chatId: '0',\n        isOutgoing: false,\n        senderId: currentUserId,\n        date: Math.floor(Date.now() / 1000),\n        content: {\n          action: {\n            mediaType: 'action',\n            type: 'giftPremium',\n            amount: currentGift.amount,\n            currency: currentGift.currency,\n            months: gift.months,\n            message: giftMessage ? { text: giftMessage } : undefined,\n          },\n        },\n      } satisfies ApiMessage;\n    }\n\n    if (isStarGift) {\n      return {\n        id: -1,\n        chatId: '0',\n        isOutgoing: false,\n        senderId: currentUserId,\n        date: Math.floor(Date.now() / 1000),\n        content: {\n          action: {\n            mediaType: 'action',\n            type: 'starGift',\n            message: giftMessage?.length ? {\n              text: giftMessage,\n            } : undefined,\n            isNameHidden: shouldHideName || undefined,\n            starsToConvert: gift.starsToConvert,\n            canUpgrade: shouldPayForUpgrade || undefined,\n            alreadyPaidUpgradeStars: shouldPayForUpgrade ? gift.upgradeStars : undefined,\n            gift,\n            peerId,\n            fromId: currentUserId,\n          },\n        },\n      } satisfies ApiMessage;\n    }\n    return undefined;\n  }, [currentUserId, gift, giftMessage, isStarGift,\n    shouldHideName, shouldPayForUpgrade, peerId,\n    shouldPayByStars, hasPremiumByStars, giftByStars, isPremiumGift]);\n\n  const handleGiftMessageChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setGiftMessage(e.target.value);\n  });\n\n  const handleShouldHideNameChange = useLastCallback(() => {\n    setShouldHideName(!shouldHideName);\n  });\n\n  const handleShouldPayForUpgradeChange = useLastCallback(() => {\n    setShouldPayForUpgrade(!shouldPayForUpgrade);\n  });\n\n  const toggleShouldPayByStars = useLastCallback(() => {\n    if (hasPremiumByStars) setShouldPayByStars(!shouldPayByStars);\n  });\n\n  const handleOpenUpgradePreview = useLastCallback(() => {\n    if (!isStarGift) return;\n    openGiftUpgradeModal({\n      giftId: gift.id,\n      peerId,\n    });\n  });\n\n  const handleGetMoreStars = useLastCallback(() => {\n    openStarsBalanceModal({});\n  });\n\n  const handleMainButtonClick = useLastCallback(() => {\n    if (isStarGift) {\n      sendStarGift({\n        peerId,\n        shouldHideName,\n        gift,\n        message: giftMessage ? { text: giftMessage } : undefined,\n        shouldUpgrade: shouldPayForUpgrade,\n      });\n      return;\n    }\n\n    if (shouldPayByStars && hasPremiumByStars) {\n      sendPremiumGiftByStars({\n        userId: peerId,\n        months: giftByStars.months,\n        amount: giftByStars.amount,\n        message: giftMessage ? { text: giftMessage } : undefined,\n      });\n      return;\n    }\n\n    if (isPremiumGift) {\n      openInvoice({\n        type: 'giftcode',\n        userIds: [peerId],\n        currency: gift.currency,\n        amount: gift.amount,\n        option: gift,\n        message: giftMessage ? { text: giftMessage } : undefined,\n      });\n    }\n  });\n\n  const canUseStarsPayment = hasPremiumByStars && starBalance && (starBalance.amount > giftByStars.amount);\n  function renderOptionsSection() {\n    const symbolsLeft = captionLimit ? captionLimit - giftMessage.length : undefined;\n\n    const title = getPeerTitle(lang, peer!)!;\n    return (\n      <div className={styles.optionsSection}>\n\n        {!paidMessagesStars && (\n          <TextArea\n            className={styles.messageInput}\n            onChange={handleGiftMessageChange}\n            value={giftMessage}\n            label={lang('GiftMessagePlaceholder')}\n            maxLength={captionLimit}\n            maxLengthIndicator={\n              symbolsLeft && symbolsLeft < LIMIT_DISPLAY_THRESHOLD ? symbolsLeft.toString() : undefined\n            }\n          />\n        )}\n\n        {canUseStarsPayment && (\n          <ListItem className={styles.switcher} narrow ripple onClick={toggleShouldPayByStars}>\n            <span>\n              {lang('GiftPremiumPayWithStars', {\n                stars: formatStarsAsIcon(lang, giftByStars.amount, { className: styles.switcherStarIcon }),\n              }, { withNodes: true })}\n            </span>\n            <Switcher\n              checked={shouldPayByStars}\n              onChange={toggleShouldPayByStars}\n              label={lang('GiftPremiumPayWithStarsAcc')}\n            />\n          </ListItem>\n        )}\n\n        {hasPremiumByStars && starBalance && (\n          <div className={styles.description}>\n            {lang('GiftPremiumDescriptionYourBalance', {\n              stars: formatStarsAsIcon(lang, starBalance.amount, { className: styles.switcherStarIcon }),\n              link: <Link isPrimary onClick={handleGetMoreStars}>{lang('GetMoreStarsLinkText')}</Link>,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n            })}\n          </div>\n        )}\n\n        {isStarGift && Boolean(gift.upgradeStars) && !areUniqueStarGiftsDisallowed && (\n          <ListItem\n            className={styles.switcher}\n            narrow\n            ripple\n            onClick={handleShouldPayForUpgradeChange}\n            disabled={shouldDisallowLimitedStarGifts}\n          >\n            <span>\n              {lang('GiftMakeUnique', {\n                stars: formatStarsAsIcon(lang, gift.upgradeStars, { className: styles.switcherStarIcon }),\n              }, { withNodes: true })}\n            </span>\n            <Switcher\n              checked={shouldPayForUpgrade}\n              onChange={handleShouldPayForUpgradeChange}\n              label={lang('GiftMakeUniqueAcc')}\n            />\n          </ListItem>\n        )}\n        {isStarGift && Boolean(gift.upgradeStars) && !areUniqueStarGiftsDisallowed && (\n          <div className={styles.description}>\n            {isPeerUser\n              ? lang('GiftMakeUniqueDescription', {\n                user: title,\n                link: <Link isPrimary onClick={handleOpenUpgradePreview}>{lang('GiftMakeUniqueLink')}</Link>,\n              }, {\n                withNodes: true,\n              })\n              : lang('GiftMakeUniqueDescriptionChannel', {\n                peer: title,\n                link: <Link isPrimary onClick={handleOpenUpgradePreview}>{lang('GiftMakeUniqueLink')}</Link>,\n              }, {\n                withNodes: true,\n              })}\n          </div>\n        )}\n\n        {isStarGift && (\n          <ListItem className={styles.switcher} narrow ripple onClick={handleShouldHideNameChange}>\n            <span>{lang('GiftHideMyName')}</span>\n            <Switcher\n              checked={shouldHideName}\n              onChange={handleShouldHideNameChange}\n              label={lang('GiftHideMyName')}\n            />\n          </ListItem>\n        )}\n        {isStarGift && (\n          <div className={styles.description}>\n            {isSelf ? lang('GiftHideNameDescriptionSelf')\n              : isPeerUser ? lang('GiftHideNameDescription', { receiver: title })\n                : lang('GiftHideNameDescriptionChannel')}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  function renderFooter() {\n    const amount = shouldPayByStars && hasPremiumByStars\n      ? formatStarsAsIcon(lang, giftByStars.amount, { asFont: true })\n      : isStarGift\n        ? formatStarsAsIcon(lang, gift.stars + (shouldPayForUpgrade ? gift.upgradeStars! : 0), { asFont: true })\n        : isPremiumGift ? formatCurrency(lang, gift.amount, gift.currency) : undefined;\n\n    return (\n      <div className={styles.footer}>\n        {isStarGift && Boolean(gift.availabilityRemains) && (\n          <PremiumProgress\n            isPrimary\n            progress={gift.availabilityRemains / gift.availabilityTotal!}\n            rightText={lang('GiftSoldCount', {\n              count: gift.availabilityTotal! - gift.availabilityRemains,\n            })}\n            leftText={lang('GiftLeftCount', { count: gift.availabilityRemains })}\n            className={styles.limited}\n          />\n        )}\n        <Button\n          className={styles.mainButton}\n          size=\"smaller\"\n          onClick={handleMainButtonClick}\n          isLoading={isPaymentFormLoading}\n        >\n          {lang('GiftSend', {\n            amount,\n          }, {\n            withNodes: true,\n          })}\n        </Button>\n      </div>\n    );\n  }\n\n  const bgClassName = buildClassName(\n    styles.background,\n    styles.withTransition,\n    customBackground && styles.customBgImage,\n    backgroundColor && styles.customBgColor,\n    customBackground && isBackgroundBlurred && styles.blurred,\n  );\n\n  if ((!isStarGift && !isPremiumGift) || !localMessage) return;\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll')}>\n      <div\n        className={buildClassName(styles.actionMessageView, 'MessageList')}\n        // @ts-ignore -- FIXME: Find a way to disable interactions but keep a11y\n        inert\n        style={buildStyle(\n          `--pattern-color: ${patternColor}`,\n          backgroundColor && `--theme-background-color: ${backgroundColor}`,\n        )}\n      >\n        <div\n          className={bgClassName}\n          style={customBackgroundValue ? `--custom-background: ${customBackgroundValue}` : undefined}\n        />\n        <ActionMessage\n          key={isStarGift ? gift.id : isPremiumGift ? gift.months : undefined}\n          message={localMessage}\n          threadId={MAIN_THREAD_ID}\n          appearanceOrder={0}\n        />\n      </div>\n      {renderOptionsSection()}\n      <div className={styles.spacer} />\n      {renderFooter()}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const theme = selectTheme(global);\n    const {\n      stars,\n    } = global;\n    const {\n      isBlurred: isBackgroundBlurred,\n      patternColor,\n      background: customBackground,\n      backgroundColor,\n    } = selectThemeValues(global, theme) || {};\n    const peer = selectPeer(global, peerId);\n    const paidMessagesStars = selectPeerPaidMessagesStars(global, peerId);\n    const userFullInfo = selectUserFullInfo(global, peerId);\n    const currentUserId = global.currentUserId;\n    const isGiftForSelf = currentUserId === peerId;\n    const areUniqueStarGiftsDisallowed = !isGiftForSelf\n      && userFullInfo?.disallowedGifts?.shouldDisallowUniqueStarGifts;\n    const shouldDisallowLimitedStarGifts = !isGiftForSelf\n      && userFullInfo?.disallowedGifts?.shouldDisallowLimitedStarGifts;\n\n    const tabState = selectTabState(global);\n\n    return {\n      starBalance: stars?.balance,\n      peer,\n      theme,\n      isBackgroundBlurred,\n      patternColor,\n      customBackground,\n      backgroundColor,\n      captionLimit: global.appConfig?.starGiftMaxMessageLength,\n      currentUserId: global.currentUserId,\n      isPaymentFormLoading: tabState.isPaymentFormLoading,\n      paidMessagesStars,\n      areUniqueStarGiftsDisallowed,\n      shouldDisallowLimitedStarGifts,\n    };\n  },\n)(GiftComposer));\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"G1mBmzxs\",\"starGift\":\"f5ArEO1S\",\"monthsDescription\":\"rn9aWFNA\",\"description\":\"q4_ydkAx\",\"buy\":\"a8no5WH0\",\"star\":\"DvJLTVFU\",\"amount\":\"sbo2dMcH\",\"starsPriceBlock\":\"QB5SI7ta\",\"starsPriceIcon\":\"jgnEfoeM\",\"radialPattern\":\"Nkotr8Q4\",\"stickerWrapper\":\"rUSoeQXb\"};","import { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumGiftCodeOption,\n  ApiSticker,\n} from '../../../api/types';\n\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectGiftStickerForDuration,\n} from '../../../global/selectors';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport GiftRibbon from '../../common/gift/GiftRibbon';\nimport Button from '../../ui/Button';\n\nimport styles from './GiftItem.module.scss';\n\nexport type OwnProps = {\n  option: ApiPremiumGiftCodeOption;\n  optionByStars?: ApiPremiumGiftCodeOption;\n  baseMonthAmount?: number;\n  onClick: (gift: ApiPremiumGiftCodeOption) => void;\n};\n\nexport type StateProps = {\n  sticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst GIFT_STICKER_SIZE = 86;\n\nfunction GiftItemPremium({\n  sticker, canPlayAnimatedEmojis, baseMonthAmount, option, optionByStars, onClick,\n}: OwnProps & StateProps) {\n  const {\n    months, amount, currency,\n  } = option;\n  const lang = useLang();\n\n  const handleGiftClick = useLastCallback(() => {\n    onClick(option);\n  });\n\n  const perMonth = Math.floor(amount / months);\n  const discount = baseMonthAmount && baseMonthAmount > perMonth\n    ? Math.ceil(100 - perMonth / (baseMonthAmount / 100))\n    : undefined;\n\n  function renderMonths() {\n    const caption = months === 12\n      ? lang('Years', { count: 1 }, { pluralValue: 1 })\n      : lang('Months', { count: months }, { pluralValue: months });\n    return (\n      <div className={styles.monthsDescription}>\n        {caption}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.container}\n      tabIndex={0}\n      role=\"button\"\n      onClick={handleGiftClick}\n    >\n      <AnimatedIconFromSticker\n        sticker={sticker}\n        play={canPlayAnimatedEmojis}\n        noLoop\n        nonInteractive\n        size={GIFT_STICKER_SIZE}\n      />\n\n      {renderMonths()}\n      <div className={styles.description}>\n        {lang('PremiumGiftDescription')}\n      </div>\n      <Button className={styles.buy} nonInteractive size=\"tiny\" pill fluid>\n        {formatCurrencyAsString(amount, currency)}\n      </Button>\n      {optionByStars && (\n        <div className={styles.starsPriceBlock}>\n          {lang('GiftPremiumStarsPrice', {\n            stars: (formatStarsAsIcon(lang, optionByStars.amount, { className: styles.starsPriceIcon })),\n          }, { withNodes: true, withMarkdown: true })}\n        </div>\n      )}\n      {Boolean(discount) && (\n        <GiftRibbon color=\"purple\" text={lang('GiftDiscount', { percent: discount })} />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { option }): StateProps => {\n    const sticker = selectGiftStickerForDuration(global, option.months);\n    const canPlayAnimatedEmojis = selectCanPlayAnimatedEmojis(global);\n\n    return {\n      sticker,\n      canPlayAnimatedEmojis,\n    };\n  },\n)(GiftItemPremium));\n","import { memo, useMemo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiStarGift,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { getStickerFromGift } from '../../common/helpers/gifts';\nimport { getGiftAttributes } from '../../common/helpers/gifts';\n\nimport { type ObserveFn, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport GiftRibbon from '../../common/gift/GiftRibbon';\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\n\nimport styles from './GiftItem.module.scss';\n\nexport type OwnProps = {\n  gift: ApiStarGift;\n  observeIntersection?: ObserveFn;\n  onClick: (gift: ApiStarGift, target: 'original' | 'resell') => void;\n  isResale?: boolean;\n};\n\nconst GIFT_STICKER_SIZE = 90;\n\nfunction GiftItemStar({\n  gift, observeIntersection, onClick, isResale,\n}: OwnProps) {\n  const { openGiftInfoModal } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const stickerRef = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n  const [isVisible, setIsVisible] = useState(false);\n\n  const sticker = getStickerFromGift(gift);\n  const isGiftUnique = gift.type === 'starGiftUnique';\n  const uniqueGift = isGiftUnique ? gift : undefined;\n  const regularGift = !isGiftUnique ? gift : undefined;\n\n  const stars = !isGiftUnique ? regularGift?.stars : uniqueGift?.resellPriceInStars;\n  const resellMinStars = regularGift?.resellMinStars;\n  const priceInStarsAsString = !isGiftUnique && isResale && resellMinStars\n    ? lang.number(resellMinStars) + '+' : stars;\n  const isLimited = !isGiftUnique && Boolean(regularGift?.isLimited);\n  const isSoldOut = !isGiftUnique && Boolean(regularGift?.isSoldOut);\n\n  const handleGiftClick = useLastCallback(() => {\n    if (isSoldOut && !isResale) {\n      openGiftInfoModal({ gift });\n      return;\n    }\n\n    onClick(gift, isResale ? 'resell' : 'original');\n  });\n\n  const radialPatternBackdrop = useMemo(() => {\n    const { backdrop, pattern } = getGiftAttributes(gift) || {};\n\n    if (!backdrop || !pattern) {\n      return undefined;\n    }\n\n    const backdropColors = [backdrop.centerColor, backdrop.edgeColor];\n    const patternColor = backdrop.patternColor;\n\n    return (\n      <RadialPatternBackground\n        className={styles.radialPattern}\n        backgroundColors={backdropColors}\n        patternColor={patternColor}\n        patternIcon={pattern.sticker}\n      />\n    );\n  }, [gift]);\n\n  const giftNumber = isGiftUnique ? gift.number : 0;\n\n  const giftRibbon = useMemo(() => {\n    if (isGiftUnique) {\n      const { backdrop } = getGiftAttributes(gift) || {};\n      if (!backdrop) {\n        return undefined;\n      }\n      return (\n        <GiftRibbon\n          color={[backdrop.centerColor, backdrop.edgeColor]}\n          text={\n            lang('GiftSavedNumber', { number: giftNumber })\n          }\n        />\n      );\n    }\n    if (isResale) {\n      return <GiftRibbon color=\"green\" text={lang('GiftRibbonResale')} />;\n    }\n    if (isSoldOut) {\n      return <GiftRibbon color=\"red\" text={lang('GiftSoldOut')} />;\n    }\n    if (isLimited) {\n      return <GiftRibbon color=\"blue\" text={lang('GiftLimited')} />;\n    }\n    return undefined;\n  }, [isGiftUnique, isResale, gift, isSoldOut, isLimited, lang, giftNumber]);\n\n  useOnIntersect(ref, observeIntersection, (entry) => {\n    const visible = entry.isIntersecting;\n    setIsVisible(visible);\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.container, styles.starGift, 'starGiftItem')}\n      tabIndex={0}\n      role=\"button\"\n      onClick={handleGiftClick}\n    >\n      {radialPatternBackdrop}\n\n      <div\n        ref={stickerRef}\n        className={styles.stickerWrapper}\n        style={`width: ${GIFT_STICKER_SIZE}px; height: ${GIFT_STICKER_SIZE}px`}\n      >\n        {sticker && (\n          <StickerView\n            observeIntersectionForPlaying={observeIntersection}\n            observeIntersectionForLoading={observeIntersection}\n            containerRef={stickerRef}\n            sticker={sticker}\n            size={GIFT_STICKER_SIZE}\n            shouldPreloadPreview\n          />\n        )}\n\n      </div>\n      <Button\n        className={styles.buy}\n        nonInteractive\n        size=\"tiny\"\n        color={isGiftUnique ? 'bluredStarsBadge' : 'stars'}\n        withSparkleEffect={isVisible}\n        pill\n        fluid\n      >\n        {formatStarsAsIcon(lang, priceInStarsAsString || 0, { asFont: true, className: styles.star })}\n      </Button>\n      {giftRibbon}\n    </div>\n  );\n}\n\nexport default memo(GiftItemStar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tJK1W0pJ\",\"transition\":\"pP8TxefR\",\"content\":\"o3V1HqbL\",\"resaleScreenRoot\":\"Vce_TsJO\",\"main\":\"cVXqeu9P\",\"giftSection\":\"v4eKefwN\",\"section\":\"EqfarEYb\",\"resaleStarGiftsContainer\":\"RSFcSNGL\",\"starGiftsContainer\":\"OQX3GZl5\",\"premiumGiftsGallery\":\"n40m3BK2\",\"header\":\"iqqoyRgW\",\"resaleHeader\":\"cJRBgg9B\",\"resaleHeaderContentContainer\":\"OXYQmfGK\",\"headerSlide\":\"BTWhJUQB\",\"headerText\":\"lLRmbpIu\",\"hiddenHeader\":\"XgGzn1cQ\",\"resaleHeaderText\":\"bp_KPx8I\",\"commonHeaderText\":\"ybZo03if\",\"resaleHeaderDescription\":\"XefHUFm1\",\"closeButton\":\"r_Y5uG1T\",\"balance\":\"soqAknia\",\"avatars\":\"N_7tYJKr\",\"logoBackground\":\"ieK4TzSb\",\"center\":\"Ey5gX40t\",\"description\":\"ZioU5h_k\",\"starGiftsDescription\":\"gFgzS8pV\",\"boostIcon\":\"Qi2YR6Dz\",\"optionBottom\":\"RTbClMKE\",\"secondaryInfo\":\"g0R9GSNq\",\"footer\":\"J3Gju3bv\",\"starGiftsTransition\":\"kB6IyXqS\",\"notFoundGiftsRoot\":\"UqnRlJ1n\",\"notFoundGiftsDescription\":\"g0VbwIG_\",\"notFoundGiftsLink\":\"j2zPEQr8\"};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo,\n  useMemo,\n  useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiStarGift,\n} from '../../../api/types';\nimport type { ResaleGiftsFilterOptions } from '../../../types';\n\nimport { RESALE_GIFTS_LIMIT } from '../../../config';\nimport { selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Transition from '../../ui/Transition';\nimport GiftItemStar from './GiftItemStar';\n\nimport styles from './GiftModal.module.scss';\n\nexport type OwnProps = {\n  onGiftClick: (gift: ApiStarGift) => void;\n};\n\ntype StateProps = {\n  gift?: ApiStarGift;\n  resellGifts?: ApiStarGift[];\n  filter: ResaleGiftsFilterOptions;\n  areGiftsAllLoaded?: boolean;\n  areGiftsLoading?: boolean;\n  updateIteration: number;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst GiftModalResaleScreen: FC<OwnProps & StateProps> = ({\n  resellGifts,\n  gift,\n  filter,\n  areGiftsAllLoaded,\n  areGiftsLoading,\n  updateIteration,\n  onGiftClick,\n}) => {\n  const {\n    loadResaleGifts,\n    updateResaleGiftsFilter,\n  } = getActions();\n  const scrollerRef = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n  const resellGiftsIds = useMemo(() => {\n    return resellGifts?.map((g) => g.id);\n  }, [resellGifts]);\n\n  const hasFilter = Boolean(filter?.modelAttributes?.length\n    || filter?.patternAttributes?.length || filter?.backdropAttributes?.length);\n\n  const handleLoadMoreResellGifts = useLastCallback(() => {\n    if (gift) {\n      loadResaleGifts({ giftId: gift.id });\n    }\n  });\n\n  const isGiftsEmpty = Boolean(!resellGifts || resellGifts.length === 0);\n\n  const [viewportIds, onLoadMore] = useInfiniteScroll(\n    handleLoadMoreResellGifts,\n    resellGiftsIds,\n    !gift,\n    RESALE_GIFTS_LIMIT,\n  );\n\n  const { observe } = useIntersectionObserver({ rootRef: scrollerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  const handleResetGiftsFilter = useLastCallback(() => {\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      modelAttributes: [],\n      backdropAttributes: [],\n      patternAttributes: [],\n    } });\n  });\n\n  function renderNothingFoundGiftsWithFilter() {\n    return (\n      <div className={styles.notFoundGiftsRoot}>\n        <AnimatedIconWithPreview\n          size={160}\n          tgsUrl={LOCAL_TGS_URLS.SearchingDuck}\n          nonInteractive\n          noLoop\n        />\n        <div className={styles.notFoundGiftsDescription}>\n          {lang('ResellGiftsNoFound')}\n        </div>\n        {hasFilter && (\n          <Link\n            className={styles.notFoundGiftsLink}\n            onClick={handleResetGiftsFilter}\n          >\n            {lang('ResellGiftsClearFilters')}\n          </Link>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div ref={scrollerRef} className={buildClassName(styles.resaleScreenRoot, 'custom-scroll')}>\n      <Transition\n        name=\"zoomFade\"\n        activeKey={updateIteration}\n      >\n        {isGiftsEmpty && areGiftsAllLoaded && renderNothingFoundGiftsWithFilter()}\n        <InfiniteScroll\n          className={buildClassName(styles.resaleStarGiftsContainer)}\n          items={viewportIds}\n          onLoadMore={onLoadMore}\n          itemSelector=\".starGiftItem\"\n          noFastList\n          preloadBackwards={RESALE_GIFTS_LIMIT}\n          scrollContainerClosest={`.${styles.resaleScreenRoot}`}\n        >\n          {resellGifts?.map((gift) => (\n            <GiftItemStar\n              key={gift.id}\n              gift={gift}\n              observeIntersection={observe}\n              isResale\n              onClick={onGiftClick}\n            />\n          ))}\n        </InfiniteScroll>\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    starGifts,\n  } = global;\n\n  const { resaleGifts } = selectTabState(global);\n  const gift = resaleGifts?.giftId ? starGifts?.byId[resaleGifts.giftId] : undefined;\n  const filter = resaleGifts.filter;\n  const areGiftsAllLoaded = resaleGifts.isAllLoaded;\n  const areGiftsLoading = resaleGifts.isLoading;\n  const updateIteration = resaleGifts.updateIteration;\n\n  return {\n    resellGifts: resaleGifts.gifts,\n    gift,\n    filter,\n    areGiftsAllLoaded,\n    areGiftsLoading,\n    updateIteration,\n  };\n})(GiftModalResaleScreen));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"KLFLR9ji\",\"thumb\":\"fCL5rY2D\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport StickerView from '../../common/StickerView';\n\nimport styles from './ResaleGiftMenuAttributeSticker.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  type: 'model' | 'pattern';\n  sticker: ApiSticker;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n};\n\nconst ATTRIBUTE_STICKER_SIZE = 1.5 * REM;\n\nconst ResaleGiftMenuAttributeSticker: FC<StateProps & OwnProps> = ({\n  className,\n  type,\n  sticker,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  theme,\n}) => {\n  const stickerRef = useRef<HTMLDivElement>();\n\n  const customColor = useDynamicColorListener(stickerRef, undefined, type !== 'pattern');\n\n  return (\n    <div\n      ref={stickerRef}\n      className={buildClassName(styles.root, className)}\n      style={`width: ${ATTRIBUTE_STICKER_SIZE}px; height: ${ATTRIBUTE_STICKER_SIZE}px`}\n    >\n      <StickerView\n        containerRef={stickerRef}\n        sticker={sticker}\n        size={ATTRIBUTE_STICKER_SIZE}\n        shouldPreloadPreview\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        thumbClassName={styles.thumb}\n        customColor={customColor}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    theme: selectTheme(global),\n  };\n})(ResaleGiftMenuAttributeSticker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_VgmQnUg\",\"buttonsContainer\":\"IDlp6U6g\",\"itemIcon\":\"yuctLnuR\",\"sticker\":\"VT562JS0\",\"backdropAttributeMenuItemText\":\"D50wFfRL\",\"menuItemStickerText\":\"THcGWXSA\",\"menuItemText\":\"L6EVE2Ux\",\"backdrop\":\"A29QNxKb\",\"menuItemIcon\":\"GL4rVsev\",\"item\":\"qiYcBOYc\",\"menuContentContainer\":\"EDsBn29z\",\"menu\":\"ISaNdBwd\",\"left\":\"e4Kkh_MR\",\"right\":\"Kz_nCGC3\"};","import { type MouseEvent as ReactMouseEvent } from 'react';\nimport type { ElementRef, FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useCallback,\n  useMemo,\n  useRef,\n  useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeCounter,\n  ApiStarGiftAttributeIdBackdrop,\n  ApiStarGiftAttributeIdPattern,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributePattern,\n  StarGiftAttributeIdModel,\n} from '../../../api/types';\nimport type { ResaleGiftsFilterOptions, ResaleGiftsSortType } from '../../../types';\n\nimport { selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport SearchInput from '../../ui/SearchInput';\nimport ResaleGiftMenuAttributeSticker from './ResaleGiftMenuAttributeSticker';\n\nimport styles from './GiftResaleFilters.module.scss';\n\ntype OwnProps = {\n  dialogRef: ElementRef<HTMLDivElement>;\n};\ntype StateProps = {\n  filter: ResaleGiftsFilterOptions;\n  attributes?: ApiStarGiftAttribute[];\n  counters?: ApiStarGiftAttributeCounter[];\n};\n\nconst GiftResaleFilters: FC<StateProps & OwnProps> = ({\n  attributes,\n  counters,\n  filter,\n  dialogRef,\n}) => {\n  const lang = useLang();\n  const {\n    updateResaleGiftsFilter,\n  } = getActions();\n\n  const [searchModelQuery, setSearchModelQuery] = useState('');\n  const [searchBackdropQuery, setSearchBackdropQuery] = useState('');\n  const [searchPatternQuery, setSearchPatternQuery] = useState('');\n  const filteredAttributes = useMemo(() => {\n    const map: {\n      model: ApiStarGiftAttributeModel[];\n      pattern: ApiStarGiftAttributePattern[];\n      backdrop: ApiStarGiftAttributeBackdrop[];\n    } = {\n      model: [],\n      pattern: [],\n      backdrop: [],\n    };\n\n    for (const counter of counters ?? []) {\n      const { attribute } = counter;\n\n      if (!counter.count) {\n        continue;\n      }\n\n      const found = attributes?.find((attr) => {\n        if (attr.type === 'backdrop' && attribute.type === 'backdrop') {\n          return attr.backdropId === attribute.backdropId;\n        }\n\n        if (attr.type === 'model' && attribute.type === 'model') {\n          return attr.sticker.id === attribute.documentId;\n        }\n\n        if (attr.type === 'pattern' && attribute.type === 'pattern') {\n          return attr.sticker.id === attribute.documentId;\n        }\n\n        return false;\n      });\n\n      if (found?.type === 'backdrop') {\n        map.backdrop.push(found);\n      }\n      if (found?.type === 'model') {\n        map.model.push(found);\n      }\n      if (found?.type === 'pattern') {\n        map.pattern.push(found);\n      }\n    }\n\n    return map;\n  }, [attributes, counters]);\n\n  const filteredAndSearchedAttributes = useMemo(() => {\n    const filterBySearch = <T extends { name?: string }>(items: T[], query: string): T[] => {\n      if (!query.trim()) return items;\n\n      return items.filter(\n        (item): item is T => Boolean(item.name?.toLowerCase().includes(query.toLowerCase())),\n      );\n    };\n\n    return {\n      model: filterBySearch(filteredAttributes.model, searchModelQuery),\n      pattern: filterBySearch(filteredAttributes.pattern, searchPatternQuery),\n      backdrop: filterBySearch(filteredAttributes.backdrop, searchBackdropQuery),\n    };\n  }, [filteredAttributes, searchModelQuery, searchBackdropQuery, searchPatternQuery]);\n\n  // Sort Menu\n  const sortMenuRef = useRef<HTMLDivElement>();\n  const {\n    isContextMenuOpen: isSortContextMenuOpen,\n    contextMenuAnchor: sortContextMenuAnchor,\n    handleContextMenu: handleSortContextMenu,\n    handleContextMenuClose: handleSortContextMenuClose,\n    handleContextMenuHide: handleSortContextMenuHide,\n  } = useContextMenuHandlers(dialogRef);\n  const getSortMenuElement = useLastCallback(() => sortMenuRef.current!);\n\n  // Model Menu\n  const modelMenuRef = useRef<HTMLDivElement>();\n  const {\n    isContextMenuOpen: isModelContextMenuOpen,\n    contextMenuAnchor: modelContextMenuAnchor,\n    handleContextMenu: handleModelContextMenu,\n    handleContextMenuClose: handleModelContextMenuClose,\n    handleContextMenuHide: handleModelContextMenuHide,\n  } = useContextMenuHandlers(dialogRef);\n  const getModelMenuElement = useLastCallback(\n    () => modelMenuRef.current!,\n  );\n\n  // Backdrop Menu\n  const backdropMenuRef = useRef<HTMLDivElement>();\n  const {\n    isContextMenuOpen: isBackdropContextMenuOpen,\n    contextMenuAnchor: backdropContextMenuAnchor,\n    handleContextMenu: handleBackdropContextMenu,\n    handleContextMenuClose: handleBackdropContextMenuClose,\n    handleContextMenuHide: handleBackdropContextMenuHide,\n  } = useContextMenuHandlers(dialogRef);\n  const getBackdropMenuElement = useLastCallback(() => backdropMenuRef.current!);\n\n  // Pattern Menu\n  const patternMenuRef = useRef<HTMLDivElement>();\n  const {\n    isContextMenuOpen: isPatternContextMenuOpen,\n    contextMenuAnchor: patternContextMenuAnchor,\n    handleContextMenu: handlePatternContextMenu,\n    handleContextMenuClose: handlePatternContextMenuClose,\n    handleContextMenuHide: handlePatternContextMenuHide,\n  } = useContextMenuHandlers(dialogRef);\n  const getPatternMenuElement = useLastCallback(() => patternMenuRef.current!);\n\n  const SortMenuButton: FC<{ onTrigger: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => void; isOpen?: boolean }>\n   = useMemo(() => {\n     const sortType = filter.sortType;\n     return ({ onTrigger, isOpen: isMenuOpen }) => (\n       <div\n         className={styles.item}\n         onClick={onTrigger}\n       >\n         {sortType === 'byDate' && lang('ValueGiftSortByDate')}\n         {sortType === 'byNumber' && lang('ValueGiftSortByNumber')}\n         {sortType === 'byPrice' && lang('ValueGiftSortByPrice')}\n         <Icon\n           name=\"dropdown-arrows\"\n           className={styles.itemIcon}\n         />\n       </div>\n     );\n   }, [lang, filter]);\n\n  const ModelMenuButton:\n  FC<{ onTrigger: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => void; isOpen?: boolean }>\n   = useMemo(() => {\n     const attributesCount = filter?.modelAttributes?.length || 0;\n     return ({ onTrigger, isOpen: isMenuOpen }) => (\n       <div\n         className={styles.item}\n         onClick={onTrigger}\n       >\n         {attributesCount === 0 && lang('GiftAttributeModel')}\n         {attributesCount > 0\n           && lang('GiftAttributeModelPlural', { count: attributesCount }, { pluralValue: attributesCount })}\n         <Icon\n           name=\"dropdown-arrows\"\n           className={styles.itemIcon}\n         />\n       </div>\n     );\n   }, [lang, filter]);\n  const BackdropMenuButton:\n  FC<{ onTrigger: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => void; isOpen?: boolean }>\n   = useMemo(() => {\n     const attributesCount = filter?.backdropAttributes?.length || 0;\n     return ({ onTrigger, isOpen: isMenuOpen }) => (\n       <div\n         className={styles.item}\n         onClick={onTrigger}\n       >\n         {attributesCount === 0 && lang('GiftAttributeBackdrop')}\n         {attributesCount > 0\n           && lang('GiftAttributeBackdropPlural', { count: attributesCount }, { pluralValue: attributesCount })}\n         <Icon\n           name=\"dropdown-arrows\"\n           className={styles.itemIcon}\n         />\n       </div>\n     );\n   }, [lang, filter]);\n  const PatternMenuButton: FC<{ onTrigger: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => void; isOpen?: boolean }>\n  = useMemo(() => {\n    const attributesCount = filter?.patternAttributes?.length || 0;\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <div\n        className={styles.item}\n        onClick={onTrigger}\n      >\n        {attributesCount === 0 && lang('GiftAttributeSymbol')}\n        {attributesCount > 0\n          && lang('GiftAttributeSymbolPlural', { count: attributesCount }, { pluralValue: attributesCount })}\n        <Icon\n          name=\"dropdown-arrows\"\n          className={styles.itemIcon}\n        />\n      </div>\n    );\n  }, [lang, filter]);\n\n  const handleSortMenuItemClick = useLastCallback((type: ResaleGiftsSortType) => {\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      sortType: type,\n    } });\n  });\n\n  const handleSelectedAllModelsClick = useLastCallback(() => {\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      modelAttributes: [],\n    } });\n  });\n  const handleSelectedAllPatternsClick = useLastCallback(() => {\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      patternAttributes: [],\n    } });\n  });\n  const handleSelectedAllBackdropsClick = useLastCallback(() => {\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      backdropAttributes: [],\n    } });\n  });\n\n  const handleModelMenuItemClick = useLastCallback((attribute: ApiStarGiftAttributeModel) => {\n    if (!counters) return;\n    const attributes = filter.modelAttributes || [];\n    const modelAttribute\n      = counters.find((counter): counter is ApiStarGiftAttributeCounter<StarGiftAttributeIdModel> =>\n        counter.attribute.type === 'model' && counter.attribute.documentId === attribute.sticker.id,\n      )?.attribute;\n\n    if (!modelAttribute) return;\n\n    const isActive = attributes.some((item) => item.documentId === modelAttribute.documentId);\n    const updatedAttributes = isActive\n      ? attributes.filter((item) => item.documentId !== modelAttribute.documentId)\n      : [...attributes, modelAttribute];\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      modelAttributes: updatedAttributes,\n    } });\n  });\n\n  const handlePatternMenuItemClick = useLastCallback((attribute: ApiStarGiftAttributePattern) => {\n    if (!counters) return;\n    const attributes = filter.patternAttributes || [];\n    const patternAttribute = counters.find(\n      (counter): counter is ApiStarGiftAttributeCounter<ApiStarGiftAttributeIdPattern> =>\n        counter.attribute.type === 'pattern' && counter.attribute.documentId === attribute.sticker.id,\n    )?.attribute;\n\n    if (!patternAttribute) return;\n\n    const isActive = attributes.some((item) => item.documentId === patternAttribute.documentId);\n    const updatedAttributes = isActive\n      ? attributes.filter((item) => item.documentId !== patternAttribute.documentId)\n      : [...attributes, patternAttribute];\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      patternAttributes: updatedAttributes,\n    } });\n  });\n\n  const handleBackdropMenuItemClick = useLastCallback((attribute: ApiStarGiftAttributeBackdrop) => {\n    if (!counters) return;\n    const attributes = filter.backdropAttributes || [];\n    const backdropAttribute = counters.find(\n      (counter): counter is ApiStarGiftAttributeCounter<ApiStarGiftAttributeIdBackdrop> =>\n        counter.attribute.type === 'backdrop' && counter.attribute.backdropId === attribute.backdropId,\n    )?.attribute;\n\n    if (!backdropAttribute) return;\n\n    const isActive = attributes.some((item) => item.backdropId === backdropAttribute.backdropId);\n    const updatedAttributes = isActive\n      ? attributes.filter((item) => item.backdropId !== backdropAttribute.backdropId)\n      : [...attributes, backdropAttribute];\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      backdropAttributes: updatedAttributes,\n    } });\n  });\n\n  function renderSortMenuItems() {\n    return (\n      <>\n        <MenuItem icon=\"sort-by-price\" onClick={() => { handleSortMenuItemClick('byPrice'); }}>\n          <div className={styles.menuItemText}>\n            {lang('GiftSortByPrice')}\n          </div>\n          <Icon\n            className={styles.menuItemIcon}\n            name={filter?.sortType === 'byPrice' ? 'check' : 'placeholder'}\n          />\n        </MenuItem>\n        <MenuItem icon=\"sort-by-date\" onClick={() => { handleSortMenuItemClick('byDate'); }}>\n          <div className={styles.menuItemText}>\n            {lang('GiftSortByDate')}\n          </div>\n          <Icon\n            className={styles.menuItemIcon}\n            name={filter?.sortType === 'byDate' ? 'check' : 'placeholder'}\n          />\n\n        </MenuItem>\n        <MenuItem icon=\"sort-by-number\"onClick={() => { handleSortMenuItemClick('byNumber'); }}>\n          <div className={styles.menuItemText}>\n            {lang('GiftSortByNumber')}\n          </div>\n          <Icon\n            className={styles.menuItemIcon}\n            name={filter?.sortType === 'byNumber' ? 'check' : 'placeholder'}\n          />\n        </MenuItem>\n      </>\n    );\n  }\n\n  function renderSortMenu() {\n    return (\n      <Menu\n        isOpen={isSortContextMenuOpen}\n        anchor={sortContextMenuAnchor}\n        ref={sortMenuRef}\n        className={buildClassName(\n          styles.menu,\n          styles.left,\n          'with-menu-transitions',\n        )}\n        getMenuElement={getSortMenuElement}\n        autoClose\n        onClose={handleSortContextMenuClose}\n        onCloseAnimationEnd={handleSortContextMenuHide}\n        positionX=\"left\"\n      >\n        {renderSortMenuItems()}\n      </Menu>\n    );\n  }\n\n  const handleSearchModelInputReset = useCallback(() => {\n    setSearchModelQuery('');\n  }, []);\n  const handleSearchBackdropInputReset = useCallback(() => {\n    setSearchBackdropQuery('');\n  }, []);\n  const handleSearchPatternInputReset = useCallback(() => {\n    setSearchPatternQuery('');\n  }, []);\n  const handleSearchInputClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n  });\n\n  const modelMenuItemsContainerRef = useRef<HTMLDivElement>();\n  const { observe } = useIntersectionObserver({\n    rootRef: modelMenuItemsContainerRef,\n    isDisabled: !modelContextMenuAnchor,\n  });\n\n  function renderModelMenuItems() {\n    const models = filteredAndSearchedAttributes.model;\n    const selectedAttributes = filter.modelAttributes ?? [];\n    const isSelectedAll = selectedAttributes.length === 0;\n    return (\n      <div className={styles.menuContentContainer} ref={modelMenuItemsContainerRef}>\n        <SearchInput\n          onClick={handleSearchInputClick}\n          className={styles.search}\n          value={searchModelQuery}\n          onChange={setSearchModelQuery}\n          onReset={handleSearchModelInputReset}\n          placeholder={lang('Search')}\n        />\n        <MenuItem icon=\"select\" onClick={handleSelectedAllModelsClick} disabled={isSelectedAll}>\n          {lang('ContextMenuItemSelectAll')}\n        </MenuItem>\n        {models.map((model) => {\n          const isSelected = isSelectedAll\n            || selectedAttributes.some((attr) => attr.documentId === model.sticker.id);\n          return (\n            <MenuItem\n              key={model.name}\n              onClick={() => {\n                handleModelMenuItemClick(model);\n              }}\n            >\n              <ResaleGiftMenuAttributeSticker\n                className={styles.sticker}\n                sticker={model.sticker}\n                type=\"model\"\n                observeIntersectionForLoading={observe}\n                observeIntersectionForPlaying={observe}\n              />\n              <div className={styles.menuItemStickerText}>\n                {model.name}\n              </div>\n              <Icon\n                className={styles.menuItemIcon}\n                name={isSelected ? 'check' : 'placeholder'}\n              />\n            </MenuItem>\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderModelMenu() {\n    return (\n      <Menu\n        isOpen={isModelContextMenuOpen}\n        anchor={modelContextMenuAnchor}\n        ref={modelMenuRef}\n        className={buildClassName(\n          styles.menu,\n          styles.left,\n          'with-menu-transitions',\n        )}\n        getMenuElement={getModelMenuElement}\n        autoClose\n        onClose={handleModelContextMenuClose}\n        onCloseAnimationEnd={handleModelContextMenuHide}\n      >\n        {renderModelMenuItems()}\n      </Menu>\n    );\n  }\n\n  function renderBackdropMenuItems() {\n    const backdrops = filteredAndSearchedAttributes.backdrop;\n    const selectedAttributes = filter.backdropAttributes ?? [];\n    const isSelectedAll = selectedAttributes.length === 0;\n\n    return (\n      <div className={styles.menuContentContainer}>\n        <SearchInput\n          onClick={handleSearchInputClick}\n          className={styles.search}\n          value={searchBackdropQuery}\n          onChange={setSearchBackdropQuery}\n          onReset={handleSearchBackdropInputReset}\n          placeholder={lang('Search')}\n        />\n        <MenuItem icon=\"select\" onClick={handleSelectedAllBackdropsClick} disabled={isSelectedAll}>\n          {lang('ContextMenuItemSelectAll')}\n        </MenuItem>\n        {backdrops.map((backdrop) => {\n          const isSelected = isSelectedAll\n            || selectedAttributes.some((attr) => attr.backdropId === backdrop.backdropId);\n\n          return (\n            <MenuItem\n              key={backdrop.name}\n              onClick={() => {\n                handleBackdropMenuItemClick(backdrop);\n              }}\n            >\n              <RadialPatternBackground\n                className={styles.backdrop}\n                backgroundColors={[backdrop.centerColor, backdrop.edgeColor]}\n                patternColor={backdrop.patternColor}\n              />\n              <div className={styles.backdropAttributeMenuItemText}>\n                {backdrop.name}\n              </div>\n              <Icon\n                className={styles.menuItemIcon}\n                name={isSelected ? 'check' : 'placeholder'}\n              />\n            </MenuItem>\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderBackdropMenu() {\n    return (\n      <Menu\n        isOpen={isBackdropContextMenuOpen}\n        anchor={backdropContextMenuAnchor}\n        ref={backdropMenuRef}\n        className={buildClassName(styles.menu, styles.right, 'with-menu-transitions')}\n        getMenuElement={getBackdropMenuElement}\n        autoClose\n        onClose={handleBackdropContextMenuClose}\n        onCloseAnimationEnd={handleBackdropContextMenuHide}\n        positionX=\"right\"\n      >\n        {renderBackdropMenuItems()}\n      </Menu>\n    );\n  }\n\n  function renderPatternMenuItems() {\n    const patterns = filteredAndSearchedAttributes.pattern;\n    const selectedAttributes = filter.patternAttributes ?? [];\n    const isSelectedAll = selectedAttributes.length === 0;\n\n    return (\n      <div className={styles.menuContentContainer}>\n        <SearchInput\n          onClick={handleSearchInputClick}\n          className={styles.search}\n          value={searchPatternQuery}\n          onChange={setSearchPatternQuery}\n          onReset={handleSearchPatternInputReset}\n          placeholder={lang('Search')}\n        />\n        <MenuItem icon=\"select\" onClick={handleSelectedAllPatternsClick} disabled={isSelectedAll}>\n          {lang('ContextMenuItemSelectAll')}\n        </MenuItem>\n        {patterns.map((pattern) => {\n          const isSelected = isSelectedAll\n            || selectedAttributes.some((attr) => attr.documentId === pattern.sticker.id);\n\n          return (\n            <MenuItem\n              key={pattern.name}\n              onClick={() => {\n                handlePatternMenuItemClick(pattern);\n              }}\n            >\n\n              <ResaleGiftMenuAttributeSticker\n                className={styles.sticker}\n                sticker={pattern.sticker}\n                type=\"pattern\"\n              />\n\n              <div className={styles.menuItemStickerText}>\n                {pattern.name}\n              </div>\n              <Icon\n                className={styles.menuItemIcon}\n                name={isSelected ? 'check' : 'placeholder'}\n              />\n            </MenuItem>\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderPatternMenu() {\n    return (\n      <Menu\n        isOpen={isPatternContextMenuOpen}\n        anchor={patternContextMenuAnchor}\n        ref={patternMenuRef}\n        className={buildClassName(styles.menu, styles.right, 'with-menu-transitions')}\n        getMenuElement={getPatternMenuElement}\n        autoClose\n        onClose={handlePatternContextMenuClose}\n        onCloseAnimationEnd={handlePatternContextMenuHide}\n      >\n        {renderPatternMenuItems()}\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      {Boolean(sortContextMenuAnchor) && renderSortMenu()}\n      {Boolean(modelContextMenuAnchor) && renderModelMenu()}\n      {Boolean(backdropContextMenuAnchor) && renderBackdropMenu()}\n      {Boolean(patternContextMenuAnchor) && renderPatternMenu()}\n      <div className={styles.buttonsContainer}>\n        <SortMenuButton\n          onTrigger={handleSortContextMenu}\n          isOpen={isSortContextMenuOpen}\n        />\n        <ModelMenuButton\n          onTrigger={handleModelContextMenu}\n          isOpen={isModelContextMenuOpen}\n        />\n        <BackdropMenuButton\n          onTrigger={handleBackdropContextMenu}\n          isOpen={isBackdropContextMenuOpen}\n        />\n        <PatternMenuButton\n          onTrigger={handlePatternContextMenu}\n          isOpen={isPatternContextMenuOpen}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const { resaleGifts } = selectTabState(global);\n\n  const attributes = resaleGifts.attributes;\n  const counters = resaleGifts.counters;\n  const filter = resaleGifts.filter;\n\n  return {\n    attributes,\n    counters,\n    filter,\n  };\n})(GiftResaleFilters));\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"cUjwvN00\",\"item-selected\":\"medfcJpd\",\"itemSelected\":\"medfcJpd\",\"item\":\"dO7FKYY4\",\"selected-item\":\"B2lEJk1v\",\"selectedItem\":\"B2lEJk1v\",\"star\":\"Pb7AU805\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { StarGiftCategory } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\n\nimport styles from './StarGiftCategoryList.module.scss';\n\ntype OwnProps = {\n  onCategoryChanged: (category: StarGiftCategory) => void;\n};\n\ntype StateProps = {\n  idsByCategory?: Record<StarGiftCategory, string[]>;\n  areLimitedStarGiftsDisallowed?: boolean;\n};\n\nconst StarGiftCategoryList = ({\n  idsByCategory,\n  onCategoryChanged,\n  areLimitedStarGiftsDisallowed,\n}: StateProps & OwnProps) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n  const starCategories: number[] | undefined = useMemo(() => idsByCategory && Object.keys(idsByCategory)\n    .filter((category) => category !== 'all' && category !== 'limited')\n    .map(Number)\n    .sort((a, b) => a - b),\n  [idsByCategory]);\n\n  const hasResale = idsByCategory && idsByCategory['resale'].length > 0;\n\n  const [selectedCategory, setSelectedCategory] = useState<StarGiftCategory>('all');\n\n  function handleItemClick(category: StarGiftCategory) {\n    setSelectedCategory(category);\n    onCategoryChanged(\n      category,\n    );\n  }\n\n  function renderCategoryName(category: StarGiftCategory) {\n    if (category === 'all') return lang('AllGiftsCategory');\n    if (category === 'stock') return lang('StockGiftsCategory');\n    if (category === 'limited') return lang('LimitedGiftsCategory');\n    if (category === 'resale') return lang('GiftCategoryResale');\n    return category;\n  }\n\n  function renderCategoryItem(category: StarGiftCategory) {\n    return (\n      <div\n        className={buildClassName(\n          styles.item,\n          selectedCategory === category && styles.selectedItem,\n        )}\n        onClick={() => handleItemClick(category)}\n      >\n        {Number.isInteger(category) && (\n          <StarIcon\n            className={styles.star}\n            type=\"gold\"\n            size=\"middle\"\n          />\n        )}\n        {renderCategoryName(category)}\n      </div>\n    );\n  }\n\n  useHorizontalScroll(ref, undefined, true);\n\n  return (\n    <div ref={ref} className={buildClassName(styles.list, 'no-scrollbar')}>\n      {renderCategoryItem('all')}\n      {!areLimitedStarGiftsDisallowed && renderCategoryItem('limited')}\n      {!areLimitedStarGiftsDisallowed && hasResale && renderCategoryItem('resale')}\n      {renderCategoryItem('stock')}\n      {starCategories?.map(renderCategoryItem)}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { starGifts } = global;\n\n    return {\n      idsByCategory: starGifts?.idsByCategory,\n    };\n  },\n)(StarGiftCategoryList));\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiDisallowedGifts,\n  ApiPeer,\n  ApiPremiumGiftCodeOption,\n  ApiStarGift,\n  ApiStarGiftRegular,\n  ApiStarsAmount,\n} from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { StarGiftCategory } from '../../../types';\n\nimport { STARS_CURRENCY_CODE } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport { getPeerTitle, isApiPeerChat, isApiPeerUser } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { selectPeer, selectUserFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport BalanceBlock from '../stars/BalanceBlock';\nimport GiftSendingOptions from './GiftComposer';\nimport GiftItemPremium from './GiftItemPremium';\nimport GiftItemStar from './GiftItemStar';\nimport GiftModalResaleScreen from './GiftModalResaleScreen';\nimport GiftResaleFilters from './GiftResaleFilters';\nimport StarGiftCategoryList from './StarGiftCategoryList';\n\nimport styles from './GiftModal.module.scss';\n\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['giftModal'];\n};\n\nexport type GiftOption = ApiPremiumGiftCodeOption | ApiStarGift;\n\ntype StateProps = {\n  boostPerSentGift?: number;\n  starGiftsById?: Record<string, ApiStarGiftRegular>;\n  starGiftIdsByCategory?: Record<StarGiftCategory, string[]>;\n  starBalance?: ApiStarsAmount;\n  peer?: ApiPeer;\n  isSelf?: boolean;\n  disallowedGifts?: ApiDisallowedGifts;\n  resaleGiftsCount?: number;\n  areResaleGiftsLoading?: boolean;\n};\n\nconst AVATAR_SIZE = 100;\nconst INTERSECTION_THROTTLE = 200;\nconst SCROLL_THROTTLE = 200;\n\nconst runThrottledForScroll = throttle((cb) => cb(), SCROLL_THROTTLE, true);\n\nconst GiftModal: FC<OwnProps & StateProps> = ({\n  modal,\n  starGiftsById,\n  starGiftIdsByCategory,\n  starBalance,\n  peer,\n  isSelf,\n  disallowedGifts,\n  resaleGiftsCount,\n  areResaleGiftsLoading,\n}) => {\n  const {\n    closeGiftModal, openGiftInfoModal, resetResaleGifts, loadResaleGifts,\n  } = getActions();\n  const dialogRef = useRef<HTMLDivElement>();\n  const transitionRef = useRef<HTMLDivElement>();\n  const giftHeaderRef = useRef<HTMLHeadingElement>();\n\n  const scrollerRef = useRef<HTMLDivElement>();\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const user = peer && isApiPeerUser(peer) ? peer : undefined;\n  const chat = peer && isApiPeerChat(peer) ? peer : undefined;\n\n  const [selectedGift, setSelectedGift] = useState<GiftOption | undefined>();\n  const [selectedResellGift, setSelectedResellGift] = useState<ApiStarGift | undefined>();\n  const [shouldShowMainScreenHeader, setShouldShowMainScreenHeader] = useState(false);\n  const [isMainScreenHeaderForStarGifts, setIsMainScreenHeaderForStarGifts] = useState(false);\n  const [isGiftScreenHeaderForStarGifts, setIsGiftScreenHeaderForStarGifts] = useState(false);\n\n  const [selectedCategory, setSelectedCategory] = useState<StarGiftCategory>('all');\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    const {\n      shouldDisallowPremiumGifts,\n      ...disallowedGiftTypes\n    } = disallowedGifts;\n    return !isSelf && Object.values(disallowedGiftTypes).every(Boolean);\n  }, [isSelf, disallowedGifts]);\n\n  const areUnlimitedStarGiftsDisallowed = !isSelf && disallowedGifts?.shouldDisallowUnlimitedStarGifts;\n  const areLimitedStarGiftsDisallowed = !isSelf && disallowedGifts?.shouldDisallowLimitedStarGifts;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const allGifts = renderingModal?.gifts;\n  const filteredGifts = useMemo(() => {\n    return allGifts?.sort((prevGift, gift) => prevGift.months - gift.months)\n      .filter((gift) => gift.users === 1 && gift.currency !== STARS_CURRENCY_CODE);\n  }, [allGifts]);\n\n  const giftsByStars = useMemo(() => {\n    const mapGifts = new Map();\n\n    if (!filteredGifts) return mapGifts;\n\n    filteredGifts.forEach((gift) => {\n      const giftByStars = allGifts?.find(\n        (starsGift) => starsGift.currency === STARS_CURRENCY_CODE\n          && starsGift.months === gift.months,\n      );\n      if (giftByStars) {\n        mapGifts.set(gift, giftByStars);\n      }\n    });\n\n    return mapGifts;\n  }, [allGifts, filteredGifts]);\n\n  const baseGift = useMemo(() => {\n    return filteredGifts?.reduce((prev, gift) => (prev.amount < gift.amount ? prev : gift));\n  }, [filteredGifts]);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: scrollerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const isResaleScreen = Boolean(selectedResellGift) && !selectedGift;\n  const isGiftScreen = Boolean(selectedGift);\n  const shouldShowHeader = isResaleScreen || isGiftScreen || shouldShowMainScreenHeader;\n  const isHeaderForStarGifts = isGiftScreen ? isGiftScreenHeaderForStarGifts : isMainScreenHeaderForStarGifts;\n\n  useEffect(() => {\n    if (selectedResellGift) {\n      loadResaleGifts({ giftId: selectedResellGift.id });\n    }\n  }, [selectedResellGift]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setShouldShowMainScreenHeader(false);\n      setSelectedGift(undefined);\n      setSelectedResellGift(undefined);\n      setSelectedCategory('all');\n    }\n  }, [isOpen]);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLDivElement>) => {\n    if (isGiftScreen) return;\n    const currentTarget = e.currentTarget;\n\n    runThrottledForScroll(() => {\n      const { scrollTop } = currentTarget;\n\n      setShouldShowMainScreenHeader(scrollTop > 150);\n\n      if (transitionRef.current && giftHeaderRef.current) {\n        const { top: headerTop } = giftHeaderRef.current.getBoundingClientRect();\n        const { top: transitionTop } = transitionRef.current.getBoundingClientRect();\n        setIsMainScreenHeaderForStarGifts(headerTop - transitionTop <= 0);\n      }\n    });\n  });\n\n  const giftPremiumDescription = lang('GiftPremiumDescription', {\n    user: getUserFullName(user)!,\n    link: (\n      <SafeLink\n        text={lang('GiftPremiumDescriptionLinkCaption')}\n        url={lang('GiftPremiumDescriptionLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  const starGiftDescription = chat\n    ? lang('StarGiftDescriptionChannel', { peer: getPeerTitle(lang, chat) }, {\n      withNodes: true,\n      withMarkdown: true,\n    })\n    : isSelf\n      ? lang('StarGiftDescriptionSelf', undefined, {\n        withNodes: true,\n        renderTextFilters: ['br'],\n      })\n      : lang('StarGiftDescription', {\n        user: getUserFullName(user)!,\n      }, { withNodes: true, withMarkdown: true });\n\n  function renderGiftPremiumHeader() {\n    return (\n      <h2 className={buildClassName(styles.headerText, styles.center)}>\n        {lang('GiftPremiumHeader')}\n      </h2>\n    );\n  }\n\n  function renderGiftPremiumDescription() {\n    return (\n      <p className={buildClassName(styles.description, styles.center)}>\n        {giftPremiumDescription}\n      </p>\n    );\n  }\n\n  function renderStarGiftsHeader() {\n    return (\n      <h2 ref={giftHeaderRef} className={buildClassName(styles.headerText, styles.center)}>\n        {lang(isSelf ? 'StarsGiftHeaderSelf' : 'StarsGiftHeader')}\n      </h2>\n    );\n  }\n\n  function renderStarGiftsDescription() {\n    return (\n      <p className={buildClassName(styles.description, styles.starGiftsDescription, styles.center)}>\n        {starGiftDescription}\n      </p>\n    );\n  }\n\n  const handleGiftClick = useLastCallback((gift: GiftOption, target?: 'resell' | 'original') => {\n    if (target === 'resell') {\n      if (!('id' in gift)) {\n        return;\n      }\n      if (isResaleScreen) {\n        openGiftInfoModal({ gift, recipientId: renderingModal?.forPeerId });\n        return;\n      }\n      setSelectedResellGift(gift);\n      return;\n    }\n    setSelectedGift(gift);\n    setIsGiftScreenHeaderForStarGifts('id' in gift);\n  });\n\n  function renderStarGifts() {\n    const filteredGiftIds = starGiftIdsByCategory?.[selectedCategory]?.filter((giftId) => {\n      const gift = starGiftsById?.[giftId];\n      if (!gift) return false;\n\n      const { isLimited, isSoldOut, upgradeStars } = gift;\n      if (areUnlimitedStarGiftsDisallowed && !areLimitedStarGiftsDisallowed) {\n        return isLimited;\n      }\n      if (areLimitedStarGiftsDisallowed && !areUnlimitedStarGiftsDisallowed) {\n        return !isLimited && !isSoldOut;\n      }\n      if (areUnlimitedStarGiftsDisallowed && areLimitedStarGiftsDisallowed) {\n        return Boolean(isLimited && Boolean(upgradeStars));\n      }\n\n      return true;\n    });\n\n    return (\n      <div className={styles.starGiftsContainer}>\n        {starGiftsById && filteredGiftIds?.flatMap((giftId) => {\n          const gift = starGiftsById[giftId];\n          const shouldShowResale = selectedCategory !== 'stock' && Boolean(gift.availabilityResale);\n          const shouldDuplicateAsResale = selectedCategory !== 'resale' && shouldShowResale && !gift.isSoldOut;\n\n          const elements = [\n            <GiftItemStar\n              key={giftId}\n              gift={gift}\n              observeIntersection={observeIntersection}\n              isResale={shouldShowResale && !shouldDuplicateAsResale}\n              onClick={handleGiftClick}\n            />,\n          ];\n\n          if (shouldDuplicateAsResale) {\n            elements.push(\n              <GiftItemStar\n                key={`resale_${giftId}`}\n                isResale\n                gift={gift}\n                observeIntersection={observeIntersection}\n                onClick={handleGiftClick}\n              />,\n            );\n          }\n\n          return elements;\n        })}\n      </div>\n    );\n  }\n\n  function renderPremiumGifts() {\n    return (\n      <div className={styles.premiumGiftsGallery}>\n        {filteredGifts?.map((gift) => {\n          return (\n            <GiftItemPremium\n              option={gift}\n              optionByStars={giftsByStars.get(gift)}\n              baseMonthAmount={baseGift ? Math.floor(baseGift.amount / baseGift.months) : undefined}\n              onClick={handleGiftClick}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  const onCategoryChanged = useLastCallback((category: StarGiftCategory) => {\n    setSelectedCategory(category);\n  });\n\n  const handleCloseModal = useLastCallback(() => {\n    setSelectedGift(undefined);\n    setSelectedResellGift(undefined);\n    resetResaleGifts();\n    closeGiftModal();\n  });\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (isResaleScreen) {\n      setSelectedResellGift(undefined);\n      resetResaleGifts();\n      return;\n    }\n    if (isGiftScreen) {\n      setSelectedGift(undefined);\n      return;\n    }\n    handleCloseModal();\n  });\n\n  function renderMainScreen() {\n    return (\n      <div ref={scrollerRef} className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <div className={styles.avatars}>\n          <Avatar\n            size={AVATAR_SIZE}\n            peer={peer}\n          />\n          <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n        </div>\n        {!isSelf && !chat && !disallowedGifts?.shouldDisallowPremiumGifts && (\n          <>\n            {renderGiftPremiumHeader()}\n            {renderGiftPremiumDescription()}\n            {renderPremiumGifts()}\n          </>\n        )}\n\n        {!areAllGiftsDisallowed && (\n          <>\n            {renderStarGiftsHeader()}\n            {renderStarGiftsDescription()}\n            <StarGiftCategoryList\n              areLimitedStarGiftsDisallowed={areLimitedStarGiftsDisallowed}\n              onCategoryChanged={onCategoryChanged}\n            />\n            <Transition\n              name=\"zoomFade\"\n              activeKey={getCategoryKey(selectedCategory)}\n              className={styles.starGiftsTransition}\n            >\n              {renderStarGifts()}\n            </Transition>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  const isBackButton = isGiftScreen || isResaleScreen;\n\n  const buttonClassName = buildClassName(\n    'animated-close-icon',\n    isBackButton && 'state-back',\n  );\n\n  function renderHeader() {\n    if (!shouldShowHeader) return undefined;\n    if (isResaleScreen) {\n      const isFirstLoading = areResaleGiftsLoading && !resaleGiftsCount;\n      return (\n        <div className={styles.resaleHeaderContentContainer}>\n          <h2 className={styles.resaleHeaderText}>\n            {selectedResellGift.title}\n          </h2>\n          {isFirstLoading\n            && (\n              <div className={styles.resaleHeaderDescription}>\n                {lang('Loading')}\n              </div>\n            )}\n          {!isFirstLoading && resaleGiftsCount !== undefined\n            && (\n              <div className={styles.resaleHeaderDescription}>\n                {lang('HeaderDescriptionResaleGifts', {\n                  count: resaleGiftsCount,\n                }, { withNodes: true, withMarkdown: true, pluralValue: resaleGiftsCount })}\n              </div>\n            )}\n          <GiftResaleFilters dialogRef={dialogRef} />\n        </div>\n      );\n    }\n    return (\n      <h2 className={styles.commonHeaderText}>\n        {lang(isHeaderForStarGifts ? (isSelf ? 'StarsGiftHeaderSelf' : 'StarsGiftHeader') : 'GiftPremiumHeader')}\n      </h2>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={dialogRef}\n      onClose={handleCloseModal}\n      isOpen={isOpen}\n      isSlim\n      contentClassName={styles.content}\n      className={buildClassName(styles.modalDialog, styles.root)}\n      isLowStackPriority\n    >\n      <Button\n        className={styles.closeButton}\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        onClick={handleCloseButtonClick}\n        ariaLabel={isBackButton ? oldLang('Common.Back') : oldLang('Common.Close')}\n      >\n        <div className={buttonClassName} />\n      </Button>\n      <BalanceBlock className={styles.balance} balance={starBalance} withAddButton />\n      <div className={buildClassName(\n        styles.header,\n        isResaleScreen && styles.resaleHeader,\n        !shouldShowHeader && styles.hiddenHeader)}\n      >\n        <Transition\n          name=\"slideVerticalFade\"\n          activeKey={!shouldShowHeader ? 0 : isResaleScreen ? 1 : isHeaderForStarGifts ? 2 : 3}\n          slideClassName={styles.headerSlide}\n        >\n          {renderHeader()}\n        </Transition>\n      </div>\n      <Transition\n        ref={transitionRef}\n        className={styles.transition}\n        name=\"pushSlide\"\n        activeKey={isGiftScreen ? 1 : isResaleScreen ? 2 : 0}\n      >\n        {!isGiftScreen && !isResaleScreen && renderMainScreen()}\n        {isResaleScreen && selectedResellGift\n          && (\n            <GiftModalResaleScreen\n              onGiftClick={handleGiftClick}\n            />\n          )}\n        {isGiftScreen && renderingModal?.forPeerId && (\n          <GiftSendingOptions\n            gift={selectedGift}\n            giftByStars={giftsByStars.get(selectedGift)}\n            peerId={renderingModal.forPeerId}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { modal }): StateProps => {\n  const {\n    starGifts,\n    stars,\n    currentUserId,\n  } = global;\n\n  const peer = modal?.forPeerId ? selectPeer(global, modal.forPeerId) : undefined;\n  const isSelf = Boolean(currentUserId && modal?.forPeerId === currentUserId);\n  const userFullInfo = peer ? selectUserFullInfo(global, peer?.id) : undefined;\n\n  const { resaleGifts } = selectTabState(global);\n  const resaleGiftsCount = resaleGifts.count;\n  const areResaleGiftsLoading = resaleGifts.isLoading !== false;\n\n  return {\n    boostPerSentGift: global.appConfig?.boostsPerSentGift,\n    starGiftsById: starGifts?.byId,\n    starGiftIdsByCategory: starGifts?.idsByCategory,\n    starBalance: stars?.balance,\n    peer,\n    isSelf,\n    disallowedGifts: userFullInfo?.disallowedGifts,\n    resaleGiftsCount,\n    areResaleGiftsLoading,\n  };\n})(GiftModal));\n\nfunction getCategoryKey(category: StarGiftCategory) {\n  if (category === 'all') return 0;\n  if (category === 'limited') return 1;\n  if (category === 'resale') return 2;\n  if (category === 'stock') return 3;\n  return category + 3;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"W3JMs1YE\",\"picker\":\"wOipz1Y_\"};","import {\n  memo, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport { filterPeersByQuery } from '../../../../global/helpers/peers';\nimport { selectCanGift } from '../../../../global/selectors';\nimport { unique } from '../../../../util/iteratees';\nimport sortChatIds from '../../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport PickerModal from '../../../common/pickers/PickerModal';\n\nimport styles from './GiftRecipientPicker.module.scss';\n\nexport type OwnProps = {\n  modal?: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  userIds?: string[];\n}\n\nconst GiftRecipientPicker = ({\n  modal,\n  currentUserId,\n  userIds,\n}: OwnProps & StateProps) => {\n  const { closeGiftRecipientPicker, openGiftModal } = getActions();\n\n  const oldLang = useOldLang();\n  const isOpen = modal;\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedUserIds = useMemo(() => {\n    const global = getGlobal();\n    const idsWithSelf = userIds ? userIds.concat(currentUserId!) : undefined;\n    const filteredPeerIds = idsWithSelf ? filterPeersByQuery({ ids: idsWithSelf, query: searchQuery }) : [];\n\n    return sortChatIds(unique(filteredPeerIds).filter((peerId) => {\n      return selectCanGift(global, peerId);\n    }), undefined, [currentUserId!]);\n  }, [currentUserId, searchQuery, userIds]);\n\n  const handleSelectedUserIdsChange = useLastCallback((selectedId: string) => {\n    openGiftModal({ forUserId: selectedId });\n    closeGiftRecipientPicker();\n  });\n\n  return (\n    <PickerModal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={closeGiftRecipientPicker}\n      title={oldLang('GiftTelegramPremiumOrStarsTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n    >\n      <PeerPicker\n        className={styles.picker}\n        itemIds={displayedUserIds}\n        filterValue={searchQuery}\n        filterPlaceholder={oldLang('Search')}\n        onSelectedIdChange={handleSelectedUserIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        forceShowSelf\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { currentUserId } = global;\n\n  return {\n    currentUserId,\n    userIds: global.contactList?.userIds,\n  };\n})(GiftRecipientPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef0cKSqQ\",\"giftPreview\":\"IvuNzslN\",\"backdrop\":\"dNukis4X\",\"arrow\":\"oufsMLLF\"};","import { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiPeer, ApiStarGiftUnique,\n} from '../../../api/types';\n\nimport { getGiftAttributes } from '../helpers/gifts';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport AnimatedIconFromSticker from '../AnimatedIconFromSticker';\nimport Avatar from '../Avatar';\nimport Icon from '../icons/Icon';\nimport RadialPatternBackground from '../profile/RadialPatternBackground';\n\nimport styles from './GiftTransferPreview.module.scss';\n\ntype OwnProps = {\n  peer: ApiPeer;\n  gift: ApiStarGiftUnique;\n};\n\nconst AVATAR_SIZE = 4 * REM;\nconst GIFT_STICKER_SIZE = 3 * REM;\n\nconst GiftTransferPreview = ({\n  peer,\n  gift,\n}: OwnProps) => {\n  const giftAttributes = useMemo(() => {\n    return getGiftAttributes(gift);\n  }, [gift]);\n\n  if (!giftAttributes) return undefined;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.giftPreview}>\n        <RadialPatternBackground\n          className={styles.backdrop}\n          backgroundColors={[giftAttributes.backdrop!.centerColor, giftAttributes.backdrop!.edgeColor]}\n          patternColor={giftAttributes.backdrop?.patternColor}\n          patternIcon={giftAttributes.pattern?.sticker}\n        />\n        <AnimatedIconFromSticker\n          className={styles.sticker}\n          size={GIFT_STICKER_SIZE}\n          sticker={giftAttributes.model?.sticker}\n        />\n      </div>\n      <Icon name=\"next\" className={styles.arrow} />\n      <Avatar\n        peer={peer}\n        size={AVATAR_SIZE}\n        className={styles.avatar}\n      />\n    </div>\n  );\n};\n\nexport default memo(GiftTransferPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"nnublcCk\",\"header\":\"p7FTs7_p\",\"title\":\"pIbzzTir\",\"description\":\"CCPfr26t\",\"soldOut\":\"kjWcRp4W\",\"headerSplitButton\":\"XOMI_4PO\",\"headerButton\":\"WA0INleU\",\"giftResalePriceContainer\":\"BN8gf5y6\",\"starAmountIcon\":\"_5guecUe\",\"giftResalePriceStar\":\"H_q8o2vY\",\"left\":\"aOhTHZlf\",\"right\":\"rJOB1u5Q\",\"footer\":\"bho0GTYt\",\"footerDescription\":\"VUylTszM\",\"unknown\":\"zDauXmpS\",\"giftValue\":\"w_E4LkUj\",\"uniqueAttribute\":\"OJQnkf17\",\"uniqueGift\":\"I6o_pGAm\",\"modalHeader\":\"ie9tImaj\",\"modalCloseButton\":\"p38RBGdC\",\"ownerAddress\":\"DavMRg4Q\",\"copyIcon\":\"SLX5tX8C\"};","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport { memo, useMemo, useState } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type {\n  ApiEmojiStatusType,\n  ApiPeer,\n  ApiUser,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\n\nimport { getHasAdminRight } from '../../../../global/helpers';\nimport { getPeerTitle, isApiPeerChat, isApiPeerUser } from '../../../../global/helpers/peers';\nimport { getMainUsername } from '../../../../global/helpers/users';\nimport { selectPeer, selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../../util/clipboard';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\nimport { formatStarsAsIcon, formatStarsAsText } from '../../../../util/localization/format';\nimport { CUSTOM_PEER_HIDDEN } from '../../../../util/objects/customPeer';\nimport { getServerTime } from '../../../../util/serverTime';\nimport { formatPercent } from '../../../../util/textFormat';\nimport { getGiftAttributes, getStickerFromGift } from '../../../common/helpers/gifts';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Avatar from '../../../common/Avatar';\nimport BadgeButton from '../../../common/BadgeButton';\nimport GiftMenuItems from '../../../common/gift/GiftMenuItems';\nimport GiftTransferPreview from '../../../common/gift/GiftTransferPreview';\nimport Icon from '../../../common/icons/Icon';\nimport SafeLink from '../../../common/SafeLink';\nimport Button from '../../../ui/Button';\nimport ConfirmDialog from '../../../ui/ConfirmDialog';\nimport DropdownMenu from '../../../ui/DropdownMenu';\nimport Link from '../../../ui/Link';\nimport TableInfoModal, { type TableData } from '../../common/TableInfoModal';\nimport UniqueGiftHeader from '../UniqueGiftHeader';\n\nimport styles from './GiftInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['giftInfoModal'];\n};\n\ntype StateProps = {\n  fromPeer?: ApiPeer;\n  targetPeer?: ApiPeer;\n  releasedByPeer?: ApiPeer;\n  currentUserId?: string;\n  starGiftMaxConvertPeriod?: number;\n  hasAdminRights?: boolean;\n  currentUserEmojiStatus?: ApiEmojiStatusType;\n  collectibleEmojiStatuses?: ApiEmojiStatusType[];\n  tonExplorerUrl?: string;\n  currentUser?: ApiUser;\n  recipientPeer?: ApiPeer;\n};\n\nconst STICKER_SIZE = 120;\n\nconst GiftInfoModal = ({\n  modal,\n  fromPeer,\n  targetPeer,\n  releasedByPeer,\n  currentUserId,\n  starGiftMaxConvertPeriod,\n  hasAdminRights,\n  currentUserEmojiStatus,\n  collectibleEmojiStatuses,\n  tonExplorerUrl,\n  currentUser,\n  recipientPeer,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftInfoModal,\n    changeGiftVisibility,\n    convertGiftToStars,\n    openChatWithInfo,\n    focusMessage,\n    openGiftUpgradeModal,\n    showNotification,\n    buyStarGift,\n    closeGiftModal,\n  } = getActions();\n\n  const [isConvertConfirmOpen, openConvertConfirm, closeConvertConfirm] = useFlag();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n  const [isConfirmModalOpen, setIsConfirmModalOpen] = useState<boolean>(false);\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n  const renderingFromPeer = useCurrentOrPrev(fromPeer);\n  const renderingTargetPeer = useCurrentOrPrev(targetPeer);\n\n  const isTargetChat = renderingTargetPeer && isApiPeerChat(renderingTargetPeer);\n\n  const { gift: typeGift } = renderingModal || {};\n  const isSavedGift = typeGift && 'gift' in typeGift;\n  const savedGift = isSavedGift ? typeGift : undefined;\n  const isSender = savedGift?.fromId === currentUserId;\n  const canConvertDifference = (savedGift && starGiftMaxConvertPeriod && (\n    savedGift.date + starGiftMaxConvertPeriod - getServerTime()\n  )) || 0;\n  const conversionLeft = Math.ceil(canConvertDifference / 60 / 60 / 24);\n\n  const gift = isSavedGift ? typeGift.gift : typeGift;\n  const giftSticker = gift && getStickerFromGift(gift);\n  const hasConvertOption = canConvertDifference > 0 && Boolean(savedGift?.starsToConvert);\n\n  const isGiftUnique = gift && gift.type === 'starGiftUnique';\n  const uniqueGift = isGiftUnique ? gift : undefined;\n\n  const giftSubtitle = useMemo(() => {\n    if (!gift || gift.type !== 'starGiftUnique') return undefined;\n\n    if (releasedByPeer) {\n      const releasedByUsername = `@${getMainUsername(releasedByPeer)}`;\n      const ownerTitle = releasedByUsername || getPeerTitle(lang, releasedByPeer);\n      const fallbackText = isApiPeerUser(releasedByPeer)\n        ? lang('ActionFallbackUser')\n        : lang('ActionFallbackChannel');\n\n      return lang('GiftInfoCollectibleBy', {\n        number: gift.number, owner: ownerTitle || fallbackText }, {\n        withNodes: true,\n        withMarkdown: true,\n      });\n    }\n\n    return lang('GiftInfoCollectible', { number: gift.number });\n  }, [gift, releasedByPeer, lang]);\n\n  const canFocusUpgrade = Boolean(savedGift?.upgradeMsgId);\n  const canManage = !canFocusUpgrade && savedGift?.inputGift && (\n    isTargetChat ? hasAdminRights : renderingTargetPeer?.id === currentUserId\n  );\n\n  const resellPriceInStars = isGiftUnique ? gift.resellPriceInStars : undefined;\n  const canBuyGift = !canManage && Boolean(resellPriceInStars);\n\n  const giftOwnerTitle = (() => {\n    if (!isGiftUnique) return undefined;\n    const { ownerName, ownerId } = gift;\n    const global = getGlobal(); // Peer titles do not need to be reactive\n    const owner = ownerId ? selectPeer(global, ownerId) : undefined;\n    return owner ? getPeerTitle(lang, owner) : ownerName;\n  })();\n\n  const handleClose = useLastCallback(() => {\n    closeGiftInfoModal();\n  });\n\n  const handleFocusUpgraded = useLastCallback(() => {\n    const giftChat = isSender ? renderingTargetPeer : renderingFromPeer;\n    if (!savedGift?.upgradeMsgId || !giftChat) return;\n    const { upgradeMsgId } = savedGift;\n    focusMessage({ chatId: giftChat.id, messageId: upgradeMsgId });\n    handleClose();\n  });\n\n  const handleTriggerVisibility = useLastCallback(() => {\n    const { inputGift, isUnsaved } = savedGift!;\n    changeGiftVisibility({ gift: inputGift!, shouldUnsave: !isUnsaved });\n    handleClose();\n  });\n\n  const handleConvertToStars = useLastCallback(() => {\n    const { inputGift } = savedGift!;\n    convertGiftToStars({ gift: inputGift! });\n    closeConvertConfirm();\n    handleClose();\n  });\n\n  const handleOpenUpgradeModal = useLastCallback(() => {\n    if (!savedGift) return;\n    openGiftUpgradeModal({ giftId: savedGift.gift.id, gift: savedGift });\n  });\n\n  const handleBuyGift = useLastCallback(() => {\n    if (gift?.type !== 'starGiftUnique' || !gift.resellPriceInStars) return;\n    setIsConfirmModalOpen(true);\n  });\n\n  const closeConfirmModal = useLastCallback(() => {\n    setIsConfirmModalOpen(false);\n  });\n\n  const handleConfirmBuyGift = useLastCallback(() => {\n    const peer = recipientPeer || currentUser;\n    if (!peer || gift?.type !== 'starGiftUnique' || !gift.resellPriceInStars) return;\n    closeConfirmModal();\n    closeGiftModal();\n    buyStarGift({ peerId: peer.id, slug: gift.slug, stars: gift.resellPriceInStars });\n  });\n\n  const giftAttributes = useMemo(() => {\n    return gift && getGiftAttributes(gift);\n  }, [gift]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isMenuOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger }) => (\n      <div\n        className={buildClassName(\n          styles.headerButton,\n          styles.left,\n        )}\n        tabIndex={0}\n        role=\"button\"\n        aria-haspopup=\"menu\"\n        aria-label={lang('AriaMoreButton')}\n        onClick={onTrigger}\n      >\n        <Icon\n          name=\"more\"\n          className={styles.icon}\n        />\n      </div>\n    );\n  }, [lang]);\n\n  const renderFooterButton = useLastCallback(() => {\n    if (canBuyGift) {\n      return (\n        <Button noForcedUpperCase size=\"smaller\" onClick={handleBuyGift}>\n          {lang('ButtonBuyGift', {\n            stars: formatStarsAsIcon(lang, resellPriceInStars, { asFont: true }),\n          }, { withNodes: true })}\n        </Button>\n      );\n    }\n\n    if (canFocusUpgrade) {\n      return (\n        <Button size=\"smaller\" onClick={handleFocusUpgraded}>\n          {lang('GiftInfoViewUpgraded')}\n        </Button>\n      );\n    }\n\n    if (canManage && savedGift?.alreadyPaidUpgradeStars && !savedGift.upgradeMsgId) {\n      return (\n        <Button size=\"smaller\" isShiny onClick={handleOpenUpgradeModal}>\n          {lang('GiftInfoUpgradeForFree')}\n        </Button>\n      );\n    }\n\n    return (\n      <Button size=\"smaller\" onClick={handleClose}>\n        {lang('OK')}\n      </Button>\n    );\n  });\n\n  const saleDateInfo = useMemo(() => {\n    if (!gift) return undefined;\n    let text = '';\n    if (gift.type === 'starGift') {\n      if (gift.firstSaleDate) {\n        text += `${lang('GiftInfoFirstSale')} ${formatDateTimeToString(gift.firstSaleDate * 1000, lang.code, true)}`;\n      }\n      if (gift.lastSaleDate) {\n        text += '\\n';\n        text += `${lang('GiftInfoLastSale')} ${formatDateTimeToString(gift.lastSaleDate * 1000, lang.code, true)}`;\n      }\n    }\n\n    return text;\n  }, [gift, lang]);\n\n  const modalData = useMemo(() => {\n    if (!typeGift || !gift) {\n      return undefined;\n    }\n\n    const {\n      fromId, isNameHidden, starsToConvert, isUnsaved, isConverted, upgradeMsgId,\n    } = savedGift || {};\n    const canConvert = hasConvertOption && Boolean(starsToConvert);\n\n    const isVisibleForMe = isNameHidden && renderingTargetPeer;\n\n    const description = (() => {\n      if (!savedGift) return lang('GiftInfoSoldOutDescription');\n      if (isTargetChat) return undefined;\n\n      if (savedGift.upgradeMsgId) return lang('GiftInfoDescriptionUpgraded');\n      if (savedGift.canUpgrade && savedGift.alreadyPaidUpgradeStars) {\n        return canManage\n          ? lang('GiftInfoDescriptionFreeUpgrade')\n          : lang('GiftInfoPeerDescriptionFreeUpgradeOut', { peer: getPeerTitle(lang, renderingTargetPeer!)! });\n      }\n      if (!canManage && !isSender) return undefined;\n      if (isConverted && canConvert) {\n        return canManage\n          ? lang('GiftInfoDescriptionConverted', {\n            amount: starsToConvert,\n          }, {\n            pluralValue: starsToConvert,\n            withNodes: true,\n            withMarkdown: true,\n          })\n          : lang('GiftInfoPeerDescriptionOutConverted', {\n            amount: starsToConvert,\n            peer: getPeerTitle(lang, renderingTargetPeer!)!,\n          }, {\n            pluralValue: starsToConvert,\n            withNodes: true,\n            withMarkdown: true,\n          });\n      }\n\n      if (savedGift.canUpgrade && canManage) {\n        if (canConvert) {\n          return lang('GiftInfoDescriptionUpgrade', {\n            amount: starsToConvert,\n          }, {\n            pluralValue: starsToConvert,\n            withNodes: true,\n            withMarkdown: true,\n          });\n        }\n\n        return lang('GiftInfoDescriptionUpgradeRegular');\n      }\n\n      if (canManage) {\n        if (canConvert) {\n          return lang('GiftInfoDescription', {\n            amount: starsToConvert,\n          }, {\n            withNodes: true,\n            withMarkdown: true,\n            pluralValue: starsToConvert,\n          });\n        }\n\n        return lang('GiftInfoDescriptionRegular');\n      }\n\n      if (canConvert) {\n        return lang('GiftInfoPeerDescriptionOut', {\n          amount: starsToConvert,\n          peer: getPeerTitle(lang, renderingTargetPeer!)!,\n        }, {\n          withNodes: true,\n          withMarkdown: true,\n          pluralValue: starsToConvert,\n        });\n      }\n\n      return lang('GiftInfoPeerDescriptionOutRegular', { peer: getPeerTitle(lang, renderingTargetPeer!)! });\n    })();\n\n    function getTitle() {\n      if (isGiftUnique) return gift.title;\n      if (!savedGift) return lang('GiftInfoSoldOutTitle');\n\n      return canManage ? lang('GiftInfoReceived') : lang('GiftInfoTitle');\n    }\n\n    const uniqueGiftContextMenu = (\n      <DropdownMenu\n        className=\"with-menu-transitions\"\n        trigger={SettingsMenuButton}\n        positionX=\"right\"\n      >\n        <GiftMenuItems\n          peerId={renderingModal!.peerId!}\n          gift={typeGift}\n          canManage={canManage}\n          collectibleEmojiStatuses={collectibleEmojiStatuses}\n          currentUserEmojiStatus={currentUserEmojiStatus}\n        />\n      </DropdownMenu>\n    );\n\n    const uniqueGiftModalHeader = (\n      <div\n        className={styles.modalHeader}\n      >\n        {Boolean(canManage && resellPriceInStars) && (\n          <div className={styles.giftResalePriceContainer}>\n            {formatStarsAsIcon(lang, resellPriceInStars!, {\n              asFont: true,\n              className: styles.giftResalePriceStar,\n            })}\n          </div>\n        )}\n        <div className={styles.headerSplitButton}>\n          {isOpen && uniqueGiftContextMenu}\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.right,\n            )}\n            tabIndex={0}\n            role=\"button\"\n            aria-haspopup=\"menu\"\n            aria-label={lang('Close')}\n            onClick={handleClose}\n          >\n            <Icon\n              name=\"close\"\n              className={buildClassName(\n                styles.icon,\n                styles.moreIcon,\n              )}\n            />\n          </div>\n        </div>\n      </div>\n    );\n\n    const uniqueGiftHeader = isGiftUnique && (\n      <div className={buildClassName(styles.header, styles.uniqueGift)}>\n        <UniqueGiftHeader\n          backdropAttribute={giftAttributes!.backdrop!}\n          patternAttribute={giftAttributes!.pattern!}\n          modelAttribute={giftAttributes!.model!}\n          title={gift.title}\n          subtitle={giftSubtitle}\n          subtitlePeer={releasedByPeer}\n        />\n      </div>\n    );\n\n    const regularHeader = (\n      <div className={styles.header}>\n        <AnimatedIconFromSticker\n          className={styles.giftSticker}\n          sticker={giftSticker}\n          size={STICKER_SIZE}\n        />\n        <h1 className={styles.title}>\n          {getTitle()}\n        </h1>\n        {Boolean(description) && (\n          <p className={buildClassName(styles.description, !savedGift && gift?.type === 'starGift' && styles.soldOut)}>\n            {description}\n          </p>\n        )}\n      </div>\n    );\n\n    const tableData: TableData = [];\n    if (gift.type === 'starGift') {\n      const hasFrom = fromId || isNameHidden;\n\n      if (hasFrom) {\n        tableData.push([\n          lang('GiftInfoFrom'),\n          !fromId ? (\n            <>\n              <Avatar size=\"small\" peer={CUSTOM_PEER_HIDDEN} />\n              <span className={styles.unknown}>{oldLang(CUSTOM_PEER_HIDDEN.titleKey!)}</span>\n            </>\n          ) : { chatId: fromId },\n        ]);\n      }\n\n      if (savedGift?.date) {\n        tableData.push([\n          lang('GiftInfoDate'),\n          <span title={saleDateInfo}>{formatDateTimeToString(savedGift.date * 1000, lang.code, true)}</span>,\n        ]);\n      }\n\n      if (gift.firstSaleDate && !savedGift) {\n        tableData.push([\n          lang('GiftInfoFirstSale'),\n          formatDateTimeToString(gift.firstSaleDate * 1000, lang.code, true),\n        ]);\n      }\n\n      if (gift.lastSaleDate && !savedGift) {\n        tableData.push([\n          lang('GiftInfoLastSale'),\n          formatDateTimeToString(gift.lastSaleDate * 1000, lang.code, true),\n        ]);\n      }\n\n      const starsValue = gift.stars + (savedGift?.alreadyPaidUpgradeStars || 0);\n\n      tableData.push([\n        lang('GiftInfoValue'),\n        <div className={styles.giftValue}>\n          {formatStarsAsIcon(lang, starsValue, { className: styles.starAmountIcon })}\n          {canManage && hasConvertOption && Boolean(starsToConvert) && (\n            <BadgeButton onClick={openConvertConfirm}>\n              {lang('GiftInfoConvert', { amount: starsToConvert }, { pluralValue: starsToConvert })}\n            </BadgeButton>\n          )}\n        </div>,\n      ]);\n\n      if (gift.availabilityTotal) {\n        tableData.push([\n          lang('GiftInfoAvailability'),\n          lang('GiftInfoAvailabilityValue', {\n            count: gift.availabilityRemains || 0,\n            total: gift.availabilityTotal,\n          }, {\n            pluralValue: gift.availabilityRemains || 0,\n          }),\n        ]);\n      }\n\n      if (gift.upgradeStars && !upgradeMsgId) {\n        tableData.push([\n          lang('GiftInfoStatus'),\n          <div className={styles.giftValue}>\n            {lang('GiftInfoStatusNonUnique')}\n            {canManage && <BadgeButton onClick={handleOpenUpgradeModal}>{lang('GiftInfoUpgradeBadge')}</BadgeButton>}\n          </div>,\n        ]);\n      }\n\n      if (savedGift?.message) {\n        tableData.push([\n          undefined,\n          renderTextWithEntities(savedGift.message),\n        ]);\n      }\n    }\n\n    if (isGiftUnique) {\n      const { ownerName, ownerAddress, ownerId } = gift;\n      const ownerPeer = ownerId ? selectPeer(getGlobal(), ownerId) : undefined;\n      const {\n        model, backdrop, pattern, originalDetails,\n      } = giftAttributes || {};\n\n      if (ownerAddress) {\n        tableData.push([\n          lang('GiftInfoOwner'),\n          <span\n            className={styles.ownerAddress}\n            onClick={() => {\n              copyTextToClipboard(ownerAddress);\n              showNotification({\n                message: { key: 'WalletAddressCopied' },\n                icon: 'copy',\n              });\n            }}\n          >\n            {ownerAddress}\n            <Icon className={styles.copyIcon} name=\"copy\" />\n          </span>,\n        ]);\n      } else if (ownerPeer || ownerName) {\n        tableData.push([\n          lang('GiftInfoOwner'),\n          ownerId ? { chatId: ownerId, withEmojiStatus: true } : ownerName || '',\n        ]);\n      }\n\n      if (model) {\n        tableData.push([\n          lang('GiftAttributeModel'),\n          <span className={styles.uniqueAttribute}>\n            {model.name}\n            <BadgeButton>{formatPercent(model.rarityPercent)}</BadgeButton>\n          </span>,\n        ]);\n      }\n\n      if (backdrop) {\n        tableData.push([\n          lang('GiftAttributeBackdrop'),\n          <span className={styles.uniqueAttribute}>\n            {backdrop.name}\n            <BadgeButton>{formatPercent(backdrop.rarityPercent)}</BadgeButton>\n          </span>,\n        ]);\n      }\n\n      if (pattern) {\n        tableData.push([\n          lang('GiftAttributeSymbol'),\n          <span className={styles.uniqueAttribute}>\n            {pattern.name}\n            <BadgeButton>{formatPercent(pattern.rarityPercent)}</BadgeButton>\n          </span>,\n        ]);\n      }\n\n      tableData.push([\n        lang('GiftInfoAvailability'),\n        lang('GiftInfoIssued', {\n          issued: gift.issuedCount,\n          total: gift.totalCount,\n        }),\n      ]);\n\n      if (originalDetails) {\n        const {\n          date, recipientId, message, senderId,\n        } = originalDetails;\n        const global = getGlobal(); // Peer titles do not need to be reactive\n\n        const openChat = (id: string) => {\n          openChatWithInfo({ id });\n          closeGiftInfoModal();\n        };\n\n        const recipient = selectPeer(global, recipientId)!;\n        const sender = senderId ? selectPeer(global, senderId) : undefined;\n\n        const formattedDate = formatDateTimeToString(date * 1000, lang.code, true);\n        const recipientLink = (\n\n          <Link onClick={() => openChat(recipientId)} isPrimary>\n            {getPeerTitle(lang, recipient)}\n          </Link>\n        );\n\n        let text: TeactNode | undefined;\n        if (!sender || senderId === recipientId) {\n          text = message ? lang('GiftInfoPeerOriginalInfoText', {\n            peer: recipientLink,\n            text: renderTextWithEntities(message),\n            date: formattedDate,\n          }, {\n            withNodes: true,\n          }) : lang('GiftInfoPeerOriginalInfo', {\n            peer: recipientLink,\n            date: formattedDate,\n          }, {\n            withNodes: true,\n          });\n        } else {\n          const senderLink = (\n\n            <Link onClick={() => openChat(sender.id)} isPrimary>\n              {getPeerTitle(lang, sender)}\n            </Link>\n          );\n          text = message ? lang('GiftInfoPeerOriginalInfoTextSender', {\n            peer: recipientLink,\n            sender: senderLink,\n            text: renderTextWithEntities(message),\n            date: formattedDate,\n          }, {\n            withNodes: true,\n          }) : lang('GiftInfoPeerOriginalInfoSender', {\n            peer: recipientLink,\n            date: formattedDate,\n            sender: senderLink,\n          }, {\n            withNodes: true,\n          });\n        }\n\n        tableData.push([\n          undefined,\n          <span>{text}</span>,\n        ]);\n      }\n    }\n\n    const tonLink = tonExplorerUrl && isGiftUnique && gift.giftAddress && (\n      `${tonExplorerUrl}${gift.giftAddress}`\n    );\n\n    const footer = (\n      <div className={styles.footer}>\n        {(canManage || tonLink || canBuyGift) && (\n          <div className={styles.footerDescription}>\n            {tonLink && (\n              <div>\n                {lang('GiftInfoTonText', {\n                  link: <SafeLink url={tonLink} shouldSkipModal text={lang('GiftInfoTonLinkText')} />,\n                }, { withNodes: true })}\n              </div>\n            )}\n            {canManage && (\n              <div>\n                {lang(`GiftInfo${isTargetChat ? 'Channel' : ''}${isUnsaved ? 'Hidden' : 'Saved'}`, {\n                  link: (\n                    <Link isPrimary onClick={handleTriggerVisibility}>\n                      {lang(`GiftInfoSaved${isUnsaved ? 'Show' : 'Hide'}`)}\n                    </Link>\n                  ),\n                }, {\n                  withNodes: true,\n                })}\n              </div>\n            )}\n            {!canBuyGift && isVisibleForMe && (\n              <div>\n                {lang('GiftInfoSenderHidden')}\n              </div>\n            )}\n            {canBuyGift && giftOwnerTitle && (\n              <div>\n                {lang('GiftInfoBuyGift', {\n                  user: giftOwnerTitle,\n                }, { withNodes: true })}\n              </div>\n            )}\n          </div>\n        )}\n        {renderFooterButton()}\n      </div>\n    );\n\n    return {\n      modalHeader: isGiftUnique ? uniqueGiftModalHeader : undefined,\n      header: isGiftUnique ? uniqueGiftHeader : regularHeader,\n      tableData,\n      footer,\n    };\n  }, [\n    typeGift, savedGift, renderingTargetPeer, giftSticker, lang,\n    canManage, hasConvertOption, isSender, oldLang, tonExplorerUrl,\n    gift, giftAttributes, renderFooterButton, isTargetChat,\n    SettingsMenuButton, isGiftUnique, renderingModal,\n    collectibleEmojiStatuses, currentUserEmojiStatus, saleDateInfo,\n    canBuyGift, giftOwnerTitle, isOpen, resellPriceInStars, giftSubtitle,\n    releasedByPeer,\n  ]);\n\n  return (\n    <>\n      <TableInfoModal\n        isOpen={isOpen}\n        modalHeader={modalData?.modalHeader}\n        header={modalData?.header}\n        hasBackdrop={isGiftUnique}\n        tableData={modalData?.tableData}\n        footer={modalData?.footer}\n        className={styles.modal}\n        onClose={handleClose}\n        withBalanceBar={Boolean(canBuyGift)}\n        isLowStackPriority\n      />\n      {uniqueGift && currentUser && Boolean(resellPriceInStars) && (\n        <ConfirmDialog\n          isOpen={isConfirmModalOpen}\n          noDefaultTitle\n          onClose={closeConfirmModal}\n          confirmLabel={lang('ButtonBuyGift', {\n            stars: formatStarsAsIcon(lang, resellPriceInStars, { asFont: true }),\n          }, { withNodes: true })}\n          confirmHandler={handleConfirmBuyGift}\n        >\n\n          <GiftTransferPreview\n            peer={recipientPeer || currentUser}\n            gift={uniqueGift}\n          />\n          {!recipientPeer\n            && (\n              <p>\n                {lang('GiftBuyConfirmDescription', {\n                  gift: lang('GiftUnique', { title: uniqueGift.title, number: uniqueGift.number }),\n                  stars: formatStarsAsText(lang, resellPriceInStars),\n                }, {\n                  withNodes: true,\n                  withMarkdown: true,\n                })}\n              </p>\n            )}\n          {recipientPeer\n            && (\n              <p>\n                {lang('GiftBuyForPeerConfirmDescription', {\n                  gift: lang('GiftUnique', { title: uniqueGift.title, number: uniqueGift.number }),\n                  stars: formatStarsAsText(lang, resellPriceInStars),\n                  peer: getPeerTitle(lang, recipientPeer),\n                }, {\n                  withNodes: true,\n                  withMarkdown: true,\n                })}\n              </p>\n            )}\n        </ConfirmDialog>\n      )}\n      {savedGift && (\n        <ConfirmDialog\n          isOpen={isConvertConfirmOpen}\n          onClose={closeConvertConfirm}\n          confirmHandler={handleConvertToStars}\n          title={lang('GiftInfoConvertTitle')}\n        >\n          <div>\n            {lang('GiftInfoPeerConvertDescription', {\n              amount: formatStarsAsText(lang, savedGift.starsToConvert!),\n              peer: getPeerTitle(lang, renderingFromPeer!)!,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n            })}\n          </div>\n          {hasConvertOption && (\n            <div>\n              {lang('GiftInfoConvertDescriptionPeriod', {\n                count: conversionLeft,\n              }, {\n                withNodes: true,\n                withMarkdown: true,\n                pluralValue: conversionLeft,\n              })}\n            </div>\n          )}\n          <div>{lang('GiftInfoConvertDescription2')}</div>\n        </ConfirmDialog>\n      )}\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const typeGift = modal?.gift;\n    const isSavedGift = typeGift && 'gift' in typeGift;\n    const currentUserId = global.currentUserId;\n\n    const fromId = isSavedGift && typeGift.fromId;\n    const fromPeer = fromId ? selectPeer(global, fromId) : undefined;\n    const targetPeer = modal?.peerId ? selectPeer(global, modal.peerId) : undefined;\n    const chat = targetPeer && isApiPeerChat(targetPeer) ? targetPeer : undefined;\n    const hasAdminRights = chat && getHasAdminRight(chat, 'postMessages');\n    const currentUser = selectUser(global, currentUserId!);\n    const recipientPeer = modal?.recipientId && currentUserId !== modal.recipientId\n      ? selectPeer(global, modal.recipientId) : undefined;\n    const currentUserEmojiStatus = currentUser?.emojiStatus;\n    const collectibleEmojiStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    const gift = isSavedGift ? typeGift.gift : typeGift;\n    const releasedByPeerId = gift?.type === 'starGiftUnique' && gift.releasedByPeerId;\n    const releasedByPeer = releasedByPeerId ? selectPeer(global, releasedByPeerId) : undefined;\n\n    return {\n      fromPeer,\n      targetPeer,\n      releasedByPeer,\n      currentUserId,\n      starGiftMaxConvertPeriod: global.appConfig?.starGiftMaxConvertPeriod,\n      tonExplorerUrl: global.appConfig?.tonExplorerUrl,\n      hasAdminRights,\n      currentUserEmojiStatus,\n      collectibleEmojiStatuses,\n      currentUser,\n      recipientPeer,\n    };\n  },\n)(GiftInfoModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionContainer\":\"wqkAvYGE\",\"descriptionPrice\":\"r9R0VR_w\",\"inputPrice\":\"ElDo1Bru\"};","import {\n  memo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { TabState } from '../../../../global/types';\n\nimport { formatCurrencyAsString } from '../../../../util/formatCurrency';\nimport { formatStarsAsIcon, formatStarsAsText } from '../../../../util/localization/format';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\nimport styles from './GiftResalePriceComposerModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['giftResalePriceComposerModal'];\n};\n\nexport type StateProps = {\n  starsStargiftResaleCommissionPermille?: number;\n  starsStargiftResaleAmountMin: number;\n  starsStargiftResaleAmountMax?: number;\n  starsUsdWithdrawRate?: number;\n};\n\nconst GiftResalePriceComposerModal = ({\n  modal, starsStargiftResaleCommissionPermille,\n  starsStargiftResaleAmountMin, starsStargiftResaleAmountMax, starsUsdWithdrawRate,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftResalePriceComposerModal,\n    closeGiftInfoModal,\n    updateStarGiftPrice,\n    showNotification,\n  } = getActions();\n  const isOpen = Boolean(modal);\n  const [price, setPrice] = useState<number | undefined>(undefined);\n\n  const renderingModal = useCurrentOrPrev(modal);\n  const { gift: typeGift } = renderingModal || {};\n  const isSavedGift = typeGift && 'gift' in typeGift;\n  const savedGift = isSavedGift ? typeGift : undefined;\n  const hasPrice = Boolean(price);\n\n  const lang = useLang();\n\n  const handleChangePrice = useLastCallback((e) => {\n    const value = e.target.value;\n    const number = parseFloat(value);\n    const result = value === '' || Number.isNaN(number) ? undefined\n      : starsStargiftResaleAmountMax ? Math.min(number, starsStargiftResaleAmountMax) : number;\n    setPrice(result);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeGiftResalePriceComposerModal();\n  });\n\n  const handleSellGift = useLastCallback(() => {\n    if (!savedGift || savedGift.gift.type !== 'starGiftUnique' || !savedGift.inputGift || !price) return;\n    closeGiftResalePriceComposerModal();\n    closeGiftInfoModal();\n    updateStarGiftPrice({ gift: savedGift.inputGift, price });\n    showNotification({\n      icon: 'sell-outline',\n      message: {\n        key: 'NotificationGiftIsSale',\n        variables: {\n          gift: lang('GiftUnique', { title: savedGift.gift.title, number: savedGift.gift.number }),\n        },\n      },\n    });\n  });\n  const commission = starsStargiftResaleCommissionPermille;\n  const isPriceCorrect = hasPrice && price > starsStargiftResaleAmountMin;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={lang('GiftSellTitle')}\n      hasCloseButton\n      isSlim\n      onClose={handleClose}\n    >\n      <div className={styles.inputPrice}>\n        <InputText\n          label={lang('InputPlaceholderGiftResalePrice')}\n          onChange={handleChangePrice}\n          value={price?.toString()}\n          inputMode=\"numeric\"\n          tabIndex={0}\n          teactExperimentControlled\n        />\n      </div>\n\n      <div className={styles.descriptionContainer}>\n        <span>\n          {!isPriceCorrect && Boolean(commission) && lang('DescriptionComposerGiftMinimumPrice', {\n            stars: formatStarsAsText(lang, starsStargiftResaleAmountMin),\n          }, {\n            withMarkdown: true,\n            withNodes: true,\n          })}\n          {isPriceCorrect && lang('DescriptionComposerGiftResalePrice',\n            {\n              stars: formatStarsAsText(lang, commission ? Number((price * (commission)).toFixed()) : price),\n            },\n            {\n              withMarkdown: true,\n              withNodes: true,\n            })}\n        </span>\n\n        {isPriceCorrect && Boolean(starsUsdWithdrawRate) && (\n          <span className={styles.descriptionPrice}>\n            {`≈ ${formatCurrencyAsString(\n              price * starsUsdWithdrawRate,\n              'USD',\n              lang.code,\n            )}`}\n          </span>\n        )}\n      </div>\n\n      <Button noForcedUpperCase disabled={!isPriceCorrect} size=\"smaller\" onClick={handleSellGift}>\n        {isPriceCorrect && lang('ButtonSellGift', {\n          stars: formatStarsAsIcon(lang, price, { asFont: true }),\n        }, { withNodes: true })}\n        {!isPriceCorrect && lang('Sell')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const configPermille = global.appConfig?.starsStargiftResaleCommissionPermille;\n    const starsStargiftResaleCommissionPermille = configPermille ? (configPermille / 1000) : undefined;\n    const starsStargiftResaleAmountMin = global.appConfig?.starsStargiftResaleAmountMin || 0;\n    const starsStargiftResaleAmountMax = global.appConfig?.starsStargiftResaleAmountMax;\n\n    const starsUsdWithdrawRateX1000 = global.appConfig?.starsUsdWithdrawRateX1000;\n    const starsUsdWithdrawRate = starsUsdWithdrawRateX1000 ? starsUsdWithdrawRateX1000 / 1000 : 1;\n\n    return {\n      starsStargiftResaleCommissionPermille,\n      starsStargiftResaleAmountMin,\n      starsStargiftResaleAmountMax,\n      starsUsdWithdrawRate,\n    };\n  },\n)(GiftResalePriceComposerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"EWaVCxY4\",\"footerButton\":\"_Dt6RSQV\"};","import {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributePattern,\n  ApiStarGiftRegular,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport { getStickerMediaHash } from '../../../../global/helpers';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { selectPeer } from '../../../../global/selectors';\nimport { formatStarsAsIcon } from '../../../../util/localization/format';\nimport { fetch } from '../../../../util/mediaLoader';\n\nimport useInterval from '../../../../hooks/schedulers/useInterval';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Button from '../../../ui/Button';\nimport Checkbox from '../../../ui/Checkbox';\nimport TableAboutModal, { type TableAboutData } from '../../common/TableAboutModal';\nimport UniqueGiftHeader from '../UniqueGiftHeader';\n\nimport styles from './GiftUpgradeModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['giftUpgradeModal'];\n};\n\ntype StateProps = {\n  recipient?: ApiPeer;\n};\n\ntype Attributes = {\n  model: ApiStarGiftAttributeModel;\n  pattern: ApiStarGiftAttributePattern;\n  backdrop: ApiStarGiftAttributeBackdrop;\n};\n\nconst PREVIEW_UPDATE_INTERVAL = 3000;\n\nconst GiftUpgradeModal = ({ modal, recipient }: OwnProps & StateProps) => {\n  const { closeGiftUpgradeModal, upgradeGift } = getActions();\n  const isOpen = Boolean(modal);\n\n  const renderingModal = useCurrentOrPrev(modal);\n  const renderingRecipient = useCurrentOrPrev(recipient);\n  const [shouldKeepOriginalDetails, setShouldKeepOriginalDetails] = useState(false);\n\n  const [previewAttributes, setPreviewAttributes] = useState<Attributes | undefined>();\n\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => closeGiftUpgradeModal());\n\n  const handleUpgrade = useLastCallback(() => {\n    const gift = renderingModal?.gift;\n    if (!gift?.inputGift) return;\n\n    upgradeGift({\n      gift: gift.inputGift,\n      shouldKeepOriginalDetails,\n      upgradeStars: !gift.alreadyPaidUpgradeStars ? (gift.gift as ApiStarGiftRegular).upgradeStars : undefined,\n    });\n    handleClose();\n  });\n\n  const updatePreviewAttributes = useLastCallback(() => {\n    if (!renderingModal?.sampleAttributes) return;\n    setPreviewAttributes(getRandomAttributes(renderingModal.sampleAttributes, previewAttributes));\n  });\n\n  useInterval(updatePreviewAttributes, isOpen ? PREVIEW_UPDATE_INTERVAL : undefined, true);\n\n  useEffect(() => {\n    if (isOpen && renderingModal?.sampleAttributes) {\n      updatePreviewAttributes();\n    }\n  }, [isOpen, renderingModal?.sampleAttributes]);\n\n  // Preload stickers and patterns\n  useEffect(() => {\n    const attributes = renderingModal?.sampleAttributes;\n    if (!attributes) return;\n    const patternStickers = attributes.filter((attr): attr is ApiStarGiftAttributeModel => attr.type === 'pattern')\n      .map((attr) => attr.sticker);\n    const modelStickers = attributes.filter((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model')\n      .map((attr) => attr.sticker);\n\n    const mediaHashes = [...patternStickers, ...modelStickers].map((sticker) => getStickerMediaHash(sticker, 'full'));\n    mediaHashes.forEach((hash) => {\n      fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n  }, [renderingModal?.sampleAttributes]);\n\n  const modalData = useMemo(() => {\n    if (!previewAttributes || !isOpen) {\n      return undefined;\n    }\n\n    const gift = renderingModal?.gift;\n\n    const listItemData = [\n      ['diamond', lang('GiftUpgradeUniqueTitle'), lang('GiftUpgradeUniqueDescription')],\n      ['trade', lang('GiftUpgradeTransferableTitle'), lang('GiftUpgradeTransferableDescription')],\n      ['auction', lang('GiftUpgradeTradeableTitle'), lang('GiftUpgradeTradeableDescription')],\n    ] satisfies TableAboutData;\n\n    const subtitle = renderingRecipient\n      ? lang('GiftPeerUpgradeText', { peer: getPeerTitle(lang, renderingRecipient) })\n      : lang('GiftUpgradeTextOwn');\n\n    const header = (\n      <UniqueGiftHeader\n        modelAttribute={previewAttributes.model}\n        backdropAttribute={previewAttributes.backdrop}\n        patternAttribute={previewAttributes.pattern}\n        title={lang('GiftUpgradeTitle')}\n        subtitle={subtitle}\n      />\n    );\n\n    const footer = (\n      <div className={styles.footer}>\n        {!gift && (\n          <Button className={styles.footerButton} size=\"smaller\" onClick={handleClose}>\n            {lang('OK')}\n          </Button>\n        )}\n        {gift && (\n          <>\n            <Checkbox\n              label={lang('GiftUpgradeKeepDetails')}\n              onCheck={setShouldKeepOriginalDetails}\n              checked={shouldKeepOriginalDetails}\n            />\n            <Button className={styles.footerButton} size=\"smaller\" isShiny onClick={handleUpgrade}>\n              {gift.alreadyPaidUpgradeStars\n                ? lang('GeneralConfirm')\n                : lang('GiftUpgradeButton', {\n                  amount: formatStarsAsIcon(lang, (gift.gift as ApiStarGiftRegular).upgradeStars!, { asFont: true }),\n                }, { withNodes: true })}\n            </Button>\n          </>\n        )}\n      </div>\n    );\n\n    return {\n      listItemData,\n      header,\n      footer,\n    };\n  }, [previewAttributes, isOpen, lang, renderingRecipient, renderingModal?.gift, shouldKeepOriginalDetails]);\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      header={modalData?.header}\n      footer={modalData?.footer}\n      listItemData={modalData?.listItemData}\n      hasBackdrop\n      onClose={handleClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const recipientId = modal?.recipientId;\n    const recipient = recipientId ? selectPeer(global, recipientId) : undefined;\n\n    return {\n      recipient,\n    };\n  },\n)(GiftUpgradeModal));\n\nfunction getRandomAttributes(list: ApiStarGiftAttribute[], previousSelection?: Attributes): Attributes {\n  const models = list.filter((attr): attr is ApiStarGiftAttributeModel => (\n    attr.type === 'model' && attr.name !== previousSelection?.model.name\n  ));\n  const patterns = list.filter((attr): attr is ApiStarGiftAttributePattern => (\n    attr.type === 'pattern' && attr.name !== previousSelection?.pattern.name\n  ));\n  const backdrops = list.filter((attr): attr is ApiStarGiftAttributeBackdrop => (\n    attr.type === 'backdrop' && attr.name !== previousSelection?.backdrop.name\n  ));\n\n  const randomModel = models[Math.floor(Math.random() * models.length)];\n  const randomPattern = patterns[Math.floor(Math.random() * patterns.length)];\n  const randomBackdrop = backdrops[Math.floor(Math.random() * backdrops.length)];\n\n  return {\n    model: randomModel,\n    pattern: randomPattern,\n    backdrop: randomBackdrop,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"qL0cHbwS\",\"profileBlock\":\"t18QCmAb\",\"titleContainer\":\"q8w7tnmR\",\"radialPattern\":\"_1RfhkfB\",\"lockIcon\":\"jiPObOWv\",\"avatar\":\"JK2zOWA7\",\"userTitle\":\"lxxbgNCl\",\"status\":\"MLMdxkUg\",\"giftTitle\":\"wxg_5ou_\",\"infoDescription\":\"KSCLIMZm\",\"footer\":\"VDrvalBo\"};","import { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiUser,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\n\nimport { selectIsCurrentUserPremium, selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport buildStyle from '../../../../util/buildStyle';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useCustomEmoji from '../../../common/hooks/useCustomEmoji';\n\nimport Avatar from '../../../common/Avatar';\nimport FullNameTitle from '../../../common/FullNameTitle';\nimport Icon from '../../../common/icons/Icon';\nimport RadialPatternBackground from '../../../common/profile/RadialPatternBackground';\nimport Button from '../../../ui/Button';\nimport TableAboutModal, { type TableAboutData } from '../../common/TableAboutModal';\n\nimport styles from './GiftStatusInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['giftStatusInfoModal'];\n};\n\ntype StateProps = {\n  currentUser: ApiUser;\n  isCurrentUserPremium?: boolean;\n};\n\nconst GiftStatusInfoModal = ({\n  modal,\n  currentUser,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftStatusInfoModal,\n    setEmojiStatus,\n  } = getActions();\n  const lang = useLang();\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const { emojiStatus } = renderingModal || {};\n\n  const subtitleColor = emojiStatus?.textColor;\n\n  const patternIcon = useCustomEmoji(emojiStatus?.patternDocumentId);\n\n  const handleClose = useLastCallback(() => {\n    closeGiftStatusInfoModal();\n  });\n\n  const onWearClick = useLastCallback(() => {\n    if (emojiStatus) {\n      setEmojiStatus({ emojiStatus });\n    }\n    closeGiftStatusInfoModal();\n  });\n\n  const radialPatternBackdrop = useMemo(() => {\n    if (!emojiStatus || !isOpen) return undefined;\n\n    const backdropColors = [emojiStatus.centerColor, emojiStatus.edgeColor];\n    const patternColor = emojiStatus.patternColor;\n\n    return (\n      <RadialPatternBackground\n        className={styles.radialPattern}\n        backgroundColors={backdropColors}\n        patternColor={patternColor}\n        patternIcon={patternIcon.customEmoji}\n      />\n    );\n  }, [emojiStatus, isOpen, patternIcon]);\n\n  const mockPeerWithStatus = useMemo(() => {\n    return {\n      ...currentUser,\n      emojiStatus,\n    } satisfies ApiUser;\n  }, [currentUser, emojiStatus]);\n\n  const header = useMemo(() => {\n    return (\n      <div className={styles.header}>\n        <div\n          className={buildClassName(styles.profileBlock)}\n          style={buildStyle(subtitleColor && `color: ${subtitleColor}`)}\n        >\n\n          {radialPatternBackdrop}\n          <Avatar peer={mockPeerWithStatus} size=\"jumbo\" className={styles.avatar} />\n          <FullNameTitle\n            peer={mockPeerWithStatus}\n            className={styles.userTitle}\n            withEmojiStatus\n            noFake\n            noVerified\n            statusSparklesColor={subtitleColor}\n          />\n          <p className={styles.status} style={buildStyle(subtitleColor && `color: ${subtitleColor}`)}>\n            {lang('Online')}\n          </p>\n        </div>\n        <div className={styles.titleContainer}>\n          <div className={styles.giftTitle}>\n            {\n              lang('UniqueStatusWearTitle', {\n                gift: mockPeerWithStatus?.emojiStatus?.title,\n              })\n            }\n          </div>\n          <div className={styles.infoDescription}>\n            {\n              lang('UniqueStatusBenefitsDescription')\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }, [subtitleColor, radialPatternBackdrop, mockPeerWithStatus, lang]);\n\n  const listItemData = [\n    ['radial-badge', lang('UniqueStatusBadgeBenefitTitle'), lang('UniqueStatusBadgeDescription')],\n    ['unique-profile', lang('UniqueStatusProfileDesignBenefitTitle'), lang('UniqueStatusProfileDesignDescription')],\n    ['proof-of-ownership', lang('UniqueStatusProofOfOwnershipBenefitTitle'),\n      lang('UniqueStatusProofOfOwnershipDescription')],\n  ] satisfies TableAboutData;\n\n  const footer = useMemo(() => {\n    if (!isOpen) return undefined;\n    return (\n      <div className={styles.footer}>\n        <Button\n          size=\"smaller\"\n          onClick={onWearClick}\n        >\n          {lang('UniqueStatusWearButton')}\n          {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.lockIcon} />}\n        </Button>\n      </div>\n    );\n  }, [lang, isCurrentUserPremium, isOpen]);\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      header={header}\n      listItemData={listItemData}\n      footer={footer}\n      hasBackdrop\n      onClose={handleClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!)!;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      currentUser,\n      isCurrentUserPremium,\n    };\n  },\n)(GiftStatusInfoModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"LQgz8Nlx\",\"giftPreview\":\"hgs0ts_O\",\"backdrop\":\"OnBhMaBw\",\"description\":\"HBxB4QPY\",\"arrow\":\"kXTOUpfb\",\"noPassword\":\"BnqLhoKr\"};","import {\n  memo,\n  useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiStarGiftUnique } from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\nimport { type CustomPeer, SettingsScreens } from '../../../../types';\n\nimport { getDays } from '../../../../util/dates/units';\nimport { getServerTime } from '../../../../util/serverTime';\nimport { getGiftAttributes } from '../../../common/helpers/gifts';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Avatar from '../../../common/Avatar';\nimport Icon from '../../../common/icons/Icon';\nimport PasswordForm from '../../../common/PasswordForm';\nimport RadialPatternBackground from '../../../common/profile/RadialPatternBackground';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\n\nimport styles from './GiftWithdrawModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['giftWithdrawModal'];\n};\n\ntype StateProps = {\n  hasPassword?: boolean;\n  passwordHint?: string;\n};\n\nconst FRAGMENT_PEER: CustomPeer = {\n  isCustomPeer: true,\n  avatarIcon: 'fragment',\n  title: '',\n  customPeerAvatarColor: '#000000',\n};\nconst GIFT_STICKER_SIZE = 4.5 * REM;\n\nconst GiftWithdrawModal = ({ modal, hasPassword, passwordHint }: OwnProps & StateProps) => {\n  const {\n    closeGiftWithdrawModal,\n    clearGiftWithdrawError,\n    closeGiftInfoModal,\n    processStarGiftWithdrawal,\n    openSettingsScreen,\n  } = getActions();\n  const isOpen = Boolean(modal);\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const lang = useLang();\n\n  const renderingModal = useCurrentOrPrev(modal);\n  const gift = renderingModal?.gift?.gift as ApiStarGiftUnique;\n  const giftAttributes = gift && getGiftAttributes(gift);\n  const exportDelay = renderingModal?.gift?.canExportAt\n    ? Math.max(renderingModal.gift.canExportAt - getServerTime(), 0) : undefined;\n\n  const handleClose = useLastCallback(() => {\n    closeGiftWithdrawModal();\n  });\n\n  const handleSubmit = useLastCallback((password: string) => {\n    processStarGiftWithdrawal({\n      gift: renderingModal!.gift.inputGift!,\n      password,\n    });\n  });\n\n  const handleSetUpPassword = useLastCallback(() => {\n    openSettingsScreen({\n      screen: SettingsScreens.TwoFaDisabled,\n    });\n    closeGiftWithdrawModal();\n    closeGiftInfoModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={lang('GiftWithdrawTitle')}\n      hasCloseButton\n      isSlim\n      onClose={handleClose}\n    >\n      {giftAttributes && (\n        <>\n          <div className={styles.header}>\n            <div className={styles.giftPreview}>\n              <RadialPatternBackground\n                className={styles.backdrop}\n                backgroundColors={[giftAttributes.backdrop!.centerColor, giftAttributes.backdrop!.edgeColor]}\n                patternColor={giftAttributes.backdrop?.patternColor}\n                patternIcon={giftAttributes.pattern?.sticker}\n              />\n              <AnimatedIconFromSticker\n                className={styles.sticker}\n                size={GIFT_STICKER_SIZE}\n                sticker={giftAttributes.model?.sticker}\n              />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar\n              peer={FRAGMENT_PEER}\n              size=\"giant\"\n              className={styles.avatar}\n            />\n          </div>\n          <p className={styles.description}>\n            {lang('GiftWithdrawDescription', {\n              gift: `${gift.title} #${gift.number}`,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n              renderTextFilters: ['br'],\n            })}\n          </p>\n        </>\n      )}\n      {Boolean(exportDelay) && (\n        <p className={styles.exportHint}>\n          {lang('GiftWithdrawWait', { days: getDays(exportDelay) }, { pluralValue: getDays(exportDelay) })}\n        </p>\n      )}\n      {!hasPassword && (\n        <>\n          <span className={styles.noPassword}>{lang('ErrorPasswordMissing')}</span>\n          <Button className=\"mt-2\" size=\"smaller\" onClick={handleSetUpPassword}>{lang('SetUp2FA')}</Button>\n        </>\n      )}\n      {hasPassword && !exportDelay && (\n        <PasswordForm\n          shouldShowSubmit\n          placeholder={lang('CheckPasswordPlaceholder')}\n          error={renderingModal?.errorKey && lang.withRegular(renderingModal?.errorKey)}\n          description={lang('CheckPasswordDescription')}\n          clearError={clearGiftWithdrawError}\n          isLoading={renderingModal?.isLoading}\n          hint={passwordHint}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isOpen}\n          onChangePasswordVisibility={setShouldShowPassword}\n          submitLabel={lang('GiftWithdrawSubmit')}\n          onSubmit={handleSubmit}\n        />\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword,\n        },\n      },\n      twoFaSettings: {\n        hint: passwordHint,\n      },\n    } = global;\n\n    return {\n      hasPassword,\n      passwordHint,\n    };\n  },\n)(GiftWithdrawModal));\n","import {\n  getIsHeavyAnimating, useCallback, useRef, useState,\n} from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useHeavyAnimation from './useHeavyAnimation';\nimport useRunDebounced from './useRunDebounced';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useDebouncedMemo<R, D extends unknown[]>(\n  resolverFn: () => R, ms: number, dependencies: D,\n): R | undefined {\n  const [value, setValue] = useState<R>();\n  const { isFrozen, updateWhenUnfrozen } = useHeavyAnimationFreeze();\n  const runDebounced = useRunDebounced(ms, true);\n\n  useSyncEffect(() => {\n    if (isFrozen) {\n      updateWhenUnfrozen();\n      return;\n    }\n\n    runDebounced(() => {\n      setValue(resolverFn());\n    });\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [...dependencies, isFrozen]);\n\n  return value;\n}\n\nfunction useHeavyAnimationFreeze() {\n  const isPending = useRef(false);\n\n  const updateWhenUnfrozen = useCallback(() => {\n    isPending.current = true;\n  }, []);\n\n  const forceUpdate = useForceUpdate();\n  const handleUnfreeze = useCallback(() => {\n    if (!isPending.current) {\n      return;\n    }\n\n    isPending.current = false;\n    forceUpdate();\n  }, [forceUpdate]);\n  useHeavyAnimation(noop, handleUnfreeze);\n\n  return {\n    isFrozen: getIsHeavyAnimating(),\n    updateWhenUnfrozen,\n  };\n}\n\nfunction noop() {\n}\n","import { useState } from '../lib/teact/teact';\n\nimport type { ApiChat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\nimport useAsync from './useAsync';\nimport useDebouncedMemo from './useDebouncedMemo';\nimport useLastCallback from './useLastCallback';\n\nconst DEBOUNCE_TIMEOUT = 300;\n\nexport async function peerGlobalSearch(query: string) {\n  const searchResult = await callApi('searchChats', { query });\n  if (!searchResult) return undefined;\n\n  const ids = [...searchResult.accountResultIds, ...searchResult.globalResultIds];\n\n  return ids;\n}\n\nexport function prepareChatMemberSearch(chat: ApiChat) {\n  return async (query: string) => {\n    const searchResult = await callApi('fetchMembers', {\n      chat,\n      memberFilter: 'search',\n      query,\n    });\n\n    return searchResult?.members?.map((member) => member.userId) || [];\n  };\n}\n\nexport default function usePeerSearch({\n  query,\n  queryFn = peerGlobalSearch,\n  defaultValue,\n  debounceTimeout = DEBOUNCE_TIMEOUT,\n  isDisabled,\n}: {\n  query: string;\n  queryFn?: (query: string) => Promise<string[] | undefined>;\n  defaultValue?: string[];\n  debounceTimeout?: number;\n  isDisabled?: boolean;\n}) {\n  const debouncedQuery = useDebouncedMemo(() => query, debounceTimeout, [query]);\n  const [currentResultsQuery, setCurrentResultsQuery] = useState<string>('');\n  const searchQuery = !query ? query : debouncedQuery; // Ignore debounce if query is empty\n  const queryCallback = useLastCallback(queryFn);\n\n  const result = useAsync(async () => {\n    if (!searchQuery || isDisabled) {\n      setCurrentResultsQuery('');\n      return Promise.resolve(defaultValue);\n    }\n\n    const answer = await queryCallback(searchQuery);\n    setCurrentResultsQuery(searchQuery);\n    return answer;\n  }, [searchQuery, defaultValue, queryCallback, isDisabled], defaultValue);\n\n  return {\n    ...result,\n    currentResultsQuery,\n  };\n}\n","import {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiStarGiftUnique } from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\nimport type { UniqueCustomPeer } from '../../../../types';\n\nimport { ALL_FOLDER_ID } from '../../../../config';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { selectCanGift, selectPeer } from '../../../../global/selectors';\nimport { unique } from '../../../../util/iteratees';\nimport { formatStarsAsIcon, formatStarsAsText } from '../../../../util/localization/format';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { getGiftAttributes } from '../../../common/helpers/gifts';\nimport sortChatIds from '../../../common/helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePeerSearch from '../../../../hooks/usePeerSearch';\n\nimport GiftTransferPreview from '../../../common/gift/GiftTransferPreview';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport PickerModal from '../../../common/pickers/PickerModal';\nimport ConfirmDialog from '../../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['giftTransferModal'];\n};\n\ntype StateProps = {\n  contactIds?: string[];\n  currentUserId?: string;\n};\n\ntype Categories = 'withdraw';\n\nconst GiftTransferModal = ({\n  modal, contactIds, currentUserId,\n}: OwnProps & StateProps) => {\n  const { closeGiftTransferModal, openGiftWithdrawModal, transferGift } = getActions();\n  const isOpen = Boolean(modal);\n\n  const lang = useLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const renderingModal = useCurrentOrPrev(modal);\n  const uniqueGift = renderingModal?.gift?.gift as ApiStarGiftUnique;\n  const giftAttributes = uniqueGift && getGiftAttributes(uniqueGift);\n\n  const [selectedId, setSelectedId] = useState<string | undefined>();\n\n  const renderingSelectedPeerId = useCurrentOrPrev(selectedId);\n  const renderingSelectedPeer = useMemo(() => {\n    const global = getGlobal();\n    return renderingSelectedPeerId ? selectPeer(global, renderingSelectedPeerId) : undefined;\n  }, [renderingSelectedPeerId]);\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n\n  const sortedLocalIds = useMemo(() => {\n    return unique([\n      ...(contactIds || []),\n      ...(orderedChatIds || []),\n    ]);\n  }, [contactIds, orderedChatIds]);\n\n  const { result: foundIds, currentResultsQuery } = usePeerSearch({\n    query: searchQuery,\n    defaultValue: sortedLocalIds,\n  });\n\n  const isLoading = currentResultsQuery !== searchQuery;\n\n  const categories = useMemo(() => {\n    if (currentResultsQuery) return MEMO_EMPTY_ARRAY;\n\n    return [{\n      type: 'withdraw',\n      isCustomPeer: true,\n      avatarIcon: 'toncoin',\n      peerColorId: 5,\n      title: lang('GiftTransferTON'),\n    }] satisfies UniqueCustomPeer<Categories>[];\n  }, [lang, currentResultsQuery]);\n\n  const handleCategoryChange = useLastCallback((category: Categories) => {\n    if (category !== 'withdraw') return;\n\n    openGiftWithdrawModal({\n      gift: renderingModal!.gift,\n    });\n    closeGiftTransferModal();\n  });\n\n  const displayIds = useMemo(() => {\n    if (isLoading) return MEMO_EMPTY_ARRAY;\n    const global = getGlobal();\n\n    return sortChatIds((foundIds || []).filter((peerId) => (\n      peerId !== currentUserId && selectCanGift(global, peerId)\n    )),\n    false);\n  }, [isLoading, foundIds, currentUserId]);\n\n  const closeConfirmModal = useLastCallback(() => {\n    setSelectedId(undefined);\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      setSelectedId(undefined);\n    }\n  }, [isOpen]);\n\n  const handleTransfer = useLastCallback(() => {\n    if (!renderingModal?.gift.inputGift) return;\n    transferGift({\n      gift: renderingModal.gift.inputGift,\n      recipientId: renderingSelectedPeerId!,\n      transferStars: renderingModal.gift.transferStars,\n    });\n\n    closeConfirmModal();\n    closeGiftTransferModal();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={closeGiftTransferModal}\n      title={lang('GiftTransferTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      ignoreFreeze\n    >\n      <PeerPicker<Categories>\n        itemIds={displayIds}\n        categories={categories}\n        onSelectedCategoryChange={handleCategoryChange}\n        withDefaultPadding\n        withPeerUsernames\n        isSearchable\n        noScrollRestore\n        isLoading={isLoading}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onFilterChange={setSearchQuery}\n        onSelectedIdChange={setSelectedId}\n      />\n      {giftAttributes && (\n        <ConfirmDialog\n          isOpen={Boolean(selectedId)}\n          noDefaultTitle\n          onClose={closeConfirmModal}\n          confirmLabel={renderingModal?.gift.transferStars\n            ? lang(\n              'GiftTransferConfirmButton',\n              { amount: formatStarsAsIcon(lang, renderingModal.gift.transferStars, { asFont: true }) },\n              { withNodes: true },\n            ) : lang('GiftTransferConfirmButtonFree')}\n          confirmHandler={handleTransfer}\n        >\n          {renderingSelectedPeer && (\n            <GiftTransferPreview\n              peer={renderingSelectedPeer}\n              gift={uniqueGift}\n            />\n          )}\n          <p>\n            {renderingModal?.gift.transferStars\n              ? lang('GiftTransferConfirmDescription', {\n                gift: lang('GiftUnique', { title: uniqueGift.title, number: uniqueGift.number }),\n                amount: formatStarsAsText(lang, renderingModal.gift.transferStars),\n                peer: getPeerTitle(lang, renderingSelectedPeer!),\n              }, {\n                withNodes: true,\n                withMarkdown: true,\n              })\n              : lang('GiftTransferConfirmDescriptionFree', {\n                gift: lang('GiftUnique', { title: uniqueGift.title, number: uniqueGift.number }),\n                peer: getPeerTitle(lang, renderingSelectedPeer!),\n              }, {\n                withNodes: true,\n                withMarkdown: true,\n              })}\n          </p>\n        </ConfirmDialog>\n      )}\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { contactList, currentUserId } = global;\n\n    return {\n      contactIds: contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(GiftTransferModal));\n","import { memo, useState } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\n\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { selectUser } from '../../../../global/selectors';\nimport { formatStarsAsText } from '../../../../util/localization/format';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Checkbox from '../../../ui/Checkbox';\nimport ConfirmDialog from '../../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['chatRefundModal'];\n};\n\ntype StateProps = {\n  user?: ApiUser;\n};\n\nconst ChatRefundModal = ({ modal, user }: OwnProps & StateProps) => {\n  const { closeChatRefundModal, toggleNoPaidMessagesException } = getActions();\n\n  const [shouldRefundStars, setShouldRefundStars] = useState(false);\n\n  const renderingModal = useCurrentOrPrev(modal);\n  const renderingUser = useCurrentOrPrev(user);\n\n  const { starsToRefund, userId } = renderingModal || {};\n\n  const lang = useLang();\n\n  const isOpen = Boolean(modal);\n\n  const handleConfirmRemoveFee = useLastCallback(() => {\n    closeChatRefundModal();\n    if (!userId) return;\n\n    toggleNoPaidMessagesException ({ userId, shouldRefundCharged: shouldRefundStars });\n  });\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeChatRefundModal}\n      title={lang('RemoveFeeTitle')}\n      confirmLabel={lang('ConfirmRemoveMessageFee')}\n      confirmHandler={handleConfirmRemoveFee}\n    >\n      {lang('ConfirmDialogMessageRemoveFee', {\n        peer: renderingUser && getPeerTitle(lang, renderingUser),\n      }, {\n        withMarkdown: true,\n        withNodes: true,\n      })}\n      {\n        Boolean(starsToRefund) && (\n          <Checkbox\n            className=\"dialog-checkbox\"\n            label={lang('ConfirmDialogRemoveFeeRefundStars', {\n              amount: formatStarsAsText(lang, starsToRefund),\n            }, {\n              withMarkdown: true,\n              withNodes: true,\n            })}\n            checked={shouldRefundStars}\n            onCheck={setShouldRefundStars}\n          />\n        )\n      }\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { modal }): StateProps => {\n  const user = modal?.userId ? selectUser(global, modal.userId) : undefined;\n\n  return {\n    user,\n  };\n})(ChatRefundModal));\n"],"names":["memo","withGlobal","global","modal","user","forUserId","selectUser","undefined","StarsGiftModal","closeStarsGiftModal","openInvoice","requestConfetti","getActions","dialogRef","useRef","isOpen","Boolean","renderingModal","useCurrentOrPrev","oldLang","useOldLang","selectedOption","setSelectedOption","useState","isHeaderHidden","setHeaderHidden","useEffect","showConfetti","useLastCallback","dialog","current","top","left","width","height","querySelector","getBoundingClientRect","withStars","isCompleted","handleClick","option","type","userId","id","stars","currency","amount","handleClose","bottomText","useMemo","parts","split","_jsx","SafeLink","url","text","Modal","className","buildClassName","styles","modalDialog","contentClassName","content","isSlim","onClose","children","_jsxs","main","onScroll","e","scrollTop","currentTarget","Button","round","size","closeButton","color","onClick","ariaLabel","Icon","name","header","hiddenHeader","starHeaderText","headerInfo","_Fragment","Avatar","peer","avatar","logoBackground","src","StarsBackground","alt","draggable","logo","StarLogo","headerText","center","renderText","formatCurrencyAsString","code","description","getPeerTitle","section","StarTopupOptionList","options","starsGiftOptions","secondaryInfo","chats","listIds","currentUserId","userIds","contactList","activeListIds","active","archivedListIds","archived","StarsGiftingPickerModal","closeStarsGiftingPickerModal","openStarsGiftModal","searchQuery","setSearchQuery","displayedUserIds","usersById","getGlobal","users","byId","combinedIds","unique","filteredUserIds","filterPeersByQuery","ids","query","sortChatIds","filter","isSupport","isUserBot","isDeletedUser","SERVICE_NOTIFICATIONS_USER_ID","handleSelectedUserIdsChange","newSelectedId","length","PickerModal","title","hasCloseButton","shouldAdaptToSearch","withFixedHeight","confirmButtonText","onEnter","PeerPicker","itemIds","filterValue","filterPlaceholder","onFilterChange","isSearchable","withDefaultPadding","withStatus","onSelectedIdChange","BalanceBlock","balance","withAddButton","lang","useLang","openStarsBalanceModal","balanceBlock","balanceInfo","smallerText","balanceBottom","TON_CURRENCY_CODE","convertCurrencyFromBaseUnit","StarIcon","STARS_CURRENCY_CODE","formatStarsAmount","BadgeButton","addStarsButton","addStarsIcon","StarsSubscriptionItem","subscription","openStarsSubscriptionModal","peerId","pricing","until","isCancelled","photo","useSelector","selectPeer","selectProvidedPeer","hasExpired","Date","now","formattedDate","formatDateToString","root","preview","subscriptionStar","info","subtitle","webPhoto","status","statusEnded","statusPricing","star","formatInteger","statusPeriod","getTransactionTitle","transaction","paidMessages","count","withNodes","pluralValue","isGiftResale","isNegativeAmount","starRefCommision","formatPercent","isGiftUpgrade","extendedMedia","subscriptionPeriod","isReaction","giveawayPostId","isMyGift","isGift","starGift","customPeer","buildStarsTransactionCustomPeer","titleKey","currencyAmount","starsAmount","nanos","SingleMediaThumb","boughtMedia","index","media","video","mediaHash","getMediaHash","thumb","getMediaThumbUri","mediaBlob","useMedia","blurry","full","PaidMediaThumb","isTransactionPreview","Math","min","isLocked","dir","slice","reverse","map","item","i","arr","realIndex","MediaSpoiler","isVisible","thumbDataUri","thumbnail","dataUri","noOutline","StarsTransactionItem","openStarsTransactionModal","date","transactionPeer","selectOptionalPeer","isUniqueGift","giftSticker","getStickerFromGift","data","avatarPeer","CUSTOM_PEER_PREMIUM","subtitleKey","number","isRefund","hasFailed","isPending","previewContent","backdrop","getGiftAttributes","backgroundColors","centerColor","edgeColor","RadialPatternBackground","uniqueGiftBackground","AnimatedIconFromSticker","sticker","play","formatDateTimeToString","negative","positive","formatStarsTransactionAmount","TRANSACTION_TYPES","TRANSACTION_TABS_KEYS","TRANSACTION_ITEM_CLASS","shouldForceHeight","ton","history","all","transactions","starsBalanceState","tonBalanceState","canBuyPremium","selectIsPremiumPurchaseBlocked","tonUsdRate","appConfig","TON_USD_RATE_DEFAULT","tonTopupUrl","TON_TOPUP_URL_DEFAULT","StarsBalanceModal","closeStarsBalanceModal","loadStarsTransactions","loadStarsSubscriptions","openStarsGiftingPickerModal","openUrl","currentState","subscriptions","selectedTabIndex","setSelectedTabIndex","areBuyOptionsShown","showBuyOptions","hideBuyOptions","useFlag","originStarsPayment","originReaction","originGift","topup","shouldOpenOnBuy","ongoingTransactionAmount","form","invoice","totalAmount","subscriptionInfo","subscriptionPricing","gift","balanceNeeded","starsNeeded","starsNeededText","channel","selectChat","chatId","getChatTitle","bot","botId","getUserFullName","purpose","PAID_MESSAGES_PURPOSE","withMarkdown","shouldShowItems","shouldSuggestGifting","modalHeight","transactionCount","transactionTabs","key","tosText","handleLoadMoreTransactions","isTon","handleLoadMoreSubscriptions","openStarsGiftingPickerModalHandler","handleBuyStars","handleTonTopUp","shouldSkipModal","minimal","dialogStyle","modalBalance","renderTonHeaderSection","tonAmount","ParticlesHeader","model","isDisabled","tonBalanceContainer","tonBalance","tonIconBalance","tonInUsd","convertTonToUsd","topUpButton","starButton","isText","noForcedUpperCase","topupOptions","tos","hint","list","sectionTitle","nextOffset","disabled","isLoading","loadMore","loadMoreIcon","container","lastSection","Transition","isRtl","activeKey","renderCount","shouldRestoreHeight","transition","InfiniteScroll","onLoadMore","items","scrollContainerClosest","itemSelector","noFastList","noScrollRestoreOnTop","TabList","tabs","tabClassName","tab","activeTab","onSwitchTab","messageInputInvoice","inputInvoice","message","selectChatMessage","messageId","chat","isPaidMedia","paidMedia","paidMediaMessage","paidMediaChat","StarPaymentModal","closeStarsPaymentModal","sendStarPaymentForm","markLoading","unmarkLoading","prevModal","usePrevious","isBotSubscription","canShowPeerItem","descriptionText","botName","starsText","areAllPhotos","every","duration","areAllVideos","mediaText","channelTitle","disclaimerText","link","inviteCustomPeer","getCustomPeerFromInvite","handlePayment","paymentContent","hasAbsoluteCloseButton","paymentImages","paymentPhoto","avatarStar","PeerBadge","avatarWebPhoto","avatarSize","badgeIcon","badgeText","badgeClassName","amountBadge","paymentImageBackground","PeerChip","botItem","paymentButton","formatStarsAsIcon","asFont","disclaimer","UniqueGiftHeader","modelAttribute","backdropAttribute","patternAttribute","subtitlePeer","resellPrice","openChat","deps","useTransitionActiveKey","subtitleColor","textColor","radialPatternBackdrop","backdropColors","patternColor","patternIcon","slideClassName","direction","style","buildStyle","paidMessageCommission","starsPaidMessageCommissionPermille","starsGiftSticker","selectGiftStickerForStars","selectGiftStickerForTon","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","topSticker","StarsTransactionModal","showNotification","openMediaViewer","closeStarsTransactionModal","handleOpenMedia","origin","MediaViewerOrigin","StarsTransaction","standaloneMedia","flatMap","Object","values","starModalData","giftAttributes","toName","getStarsPeerTitleKey","messageLink","getMessageLink","giveawayMessageLink","mediaAmount","m","shouldDisplayAvatar","uniqueGiftHeader","pattern","regularHeader","noLoop","percent","tableData","peerLabel","push","containerClassName","copyTextToClipboard","footerTextParts","footer","renderingModalData","TableInfoModal","hasBackdrop","buttonText","StarsSubscriptionModal","closeStarsSubscriptionModal","fulfillStarsSubscription","changeStarsSubscription","checkChatInvite","loadStarStatus","buttonState","canRefulfill","isActive","canRestart","chatInviteHash","invoiceSlug","handleButtonClick","hash","slug","hasBotCancelled","isApiPeerUser","specialReplacement","STARS_ICON_PLACEHOLDER","footerTos","DEFAULT_POINTS","getProgress","points","value","pointIndex","findIndex","point","prevPoint","nextPoint","getValue","progress","floor","StarSlider","maxValue","defaultValue","onChange","floatingBadgeRef","result","setValue","useEffectOnce","updateSafeBadgePosition","badge","parent","parentElement","requestMeasure","safeMinX","offsetLeft","offsetWidth","safeMaxX","requestMutation","setProperty","useResizeObserver","handleChange","event","newValue","Number","floatingBadgeWrapper","floatingBadge","ref","floatingBadgeText","floatingBadgeIcon","AnimatedCounter","floatingBadgeTriangle","viewBox","fill","x1","x2","y1","y2","offset","d","Sparkles","preset","sparkles","slider","max","step","ANONYMOUS_PEER","avatarIcon","customPeerAvatarColor","isCustomPeer","starBalance","maxAmount","paidReactionMaxAmount","defaultPrivacy","settings","paidReactionPrivacy","sendPaidReactionsAsPeerIds","currentUser","PaidReactionModal","closePaidReactionModal","addLocalPaidReaction","loadSendPaidReactionsAs","setStarsAmount","isTouched","markTouched","unmarkTouched","shouldSendAsAnonymous","setShouldSendAsAnonymous","sendAsPeerId","setSendAsPeerId","senderPeer","isMobile","useAppLayout","handleShowInTopSendersChange","target","checked","handleAmountChange","filteredMyReactorIds","unshift","canChangeSendAsPeer","currentReactor","reactions","topReactors","find","reactor","isMy","isAnonymous","includes","handleSend","isPrivate","shouldIgnoreDefaultPrivacy","handleSendAsPeerChange","renderMenuItem","isSelected","MenuItem","itemInfo","FullNameTitle","itemTitle","noFake","noVerified","itemSubtitle","itemIcon","SendAsPeerMenuButton","onTrigger","ripple","sendAsPeerMenuButton","sendAsPeerButtonAvatar","buttonDownIcon","sendAsPeersMenu","DropdownMenu","sendAsPeerMenu","bubbleClassName","sendAsPeerMenuBubble","trigger","positionX","autoClose","hasCurrentSender","myReactorAmount","forEach","isCurrentReactor","localAmount","sender","sort","a","b","chatTitle","isLowStackPriority","sendAsPeersMenuContainer","headerControlPanel","Separator","topLabel","countText","topPeer","topBadge","separator","Checkbox","checkBox","label","buttonStar","theme","selectTheme","isBlurred","isBackgroundBlurred","background","customBackground","backgroundColor","selectThemeValues","paidMessagesStars","selectPeerPaidMessagesStars","userFullInfo","selectUserFullInfo","isGiftForSelf","areUniqueStarGiftsDisallowed","disallowedGifts","shouldDisallowUniqueStarGifts","shouldDisallowLimitedStarGifts","tabState","selectTabState","captionLimit","starGiftMaxMessageLength","isPaymentFormLoading","giftByStars","sendStarGift","sendPremiumGiftByStars","openGiftUpgradeModal","giftMessage","setGiftMessage","shouldHideName","setShouldHideName","shouldPayForUpgrade","setShouldPayForUpgrade","shouldPayByStars","setShouldPayByStars","customBackgroundValue","useCustomBackground","isStarGift","isPremiumGift","hasPremiumByStars","isPeerUser","isSelf","localMessage","currentGift","isOutgoing","senderId","action","mediaType","months","isNameHidden","starsToConvert","canUpgrade","alreadyPaidUpgradeStars","upgradeStars","fromId","handleGiftMessageChange","handleShouldHideNameChange","handleShouldPayForUpgradeChange","toggleShouldPayByStars","handleOpenUpgradePreview","giftId","handleGetMoreStars","handleMainButtonClick","shouldUpgrade","canUseStarsPayment","bgClassName","inert","ActionMessage","threadId","MAIN_THREAD_ID","appearanceOrder","symbolsLeft","TextArea","maxLength","maxLengthIndicator","toString","ListItem","narrow","Switcher","Link","isPrimary","receiver","renderOptionsSection","formatCurrency","availabilityRemains","PremiumProgress","availabilityTotal","rightText","leftText","renderFooter","selectGiftStickerForDuration","baseMonthAmount","optionByStars","handleGiftClick","perMonth","discount","ceil","tabIndex","role","nonInteractive","caption","renderMonths","pill","fluid","GiftRibbon","observeIntersection","isResale","openGiftInfoModal","stickerRef","setIsVisible","isGiftUnique","uniqueGift","regularGift","resellPriceInStars","resellMinStars","priceInStarsAsString","isLimited","isSoldOut","giftNumber","giftRibbon","useOnIntersect","entry","visible","isIntersecting","StickerView","observeIntersectionForPlaying","observeIntersectionForLoading","containerRef","shouldPreloadPreview","withSparkleEffect","starGifts","resaleGifts","areGiftsAllLoaded","isAllLoaded","areGiftsLoading","updateIteration","resellGifts","gifts","GiftModalResaleScreen","onGiftClick","loadResaleGifts","updateResaleGiftsFilter","scrollerRef","resellGiftsIds","g","hasFilter","modelAttributes","patternAttributes","backdropAttributes","handleLoadMoreResellGifts","isGiftsEmpty","viewportIds","useInfiniteScroll","RESALE_GIFTS_LIMIT","observe","useIntersectionObserver","rootRef","throttleMs","handleResetGiftsFilter","resaleScreenRoot","notFoundGiftsRoot","AnimatedIconWithPreview","tgsUrl","LOCAL_TGS_URLS","SearchingDuck","notFoundGiftsDescription","notFoundGiftsLink","resaleStarGiftsContainer","preloadBackwards","GiftItemStar","ATTRIBUTE_STICKER_SIZE","REM","ResaleGiftMenuAttributeSticker","customColor","useDynamicColorListener","thumbClassName","attributes","counters","GiftResaleFilters","searchModelQuery","setSearchModelQuery","searchBackdropQuery","setSearchBackdropQuery","searchPatternQuery","setSearchPatternQuery","filteredAttributes","counter","attribute","found","attr","backdropId","documentId","filteredAndSearchedAttributes","filterBySearch","trim","toLowerCase","sortMenuRef","isContextMenuOpen","isSortContextMenuOpen","contextMenuAnchor","sortContextMenuAnchor","handleContextMenu","handleSortContextMenu","handleContextMenuClose","handleSortContextMenuClose","handleContextMenuHide","handleSortContextMenuHide","useContextMenuHandlers","getSortMenuElement","modelMenuRef","isModelContextMenuOpen","modelContextMenuAnchor","handleModelContextMenu","handleModelContextMenuClose","handleModelContextMenuHide","getModelMenuElement","backdropMenuRef","isBackdropContextMenuOpen","backdropContextMenuAnchor","handleBackdropContextMenu","handleBackdropContextMenuClose","handleBackdropContextMenuHide","getBackdropMenuElement","patternMenuRef","isPatternContextMenuOpen","patternContextMenuAnchor","handlePatternContextMenu","handlePatternContextMenuClose","handlePatternContextMenuHide","getPatternMenuElement","SortMenuButton","sortType","isMenuOpen","ModelMenuButton","attributesCount","BackdropMenuButton","PatternMenuButton","handleSortMenuItemClick","handleSelectedAllModelsClick","handleSelectedAllPatternsClick","handleSelectedAllBackdropsClick","handleModelMenuItemClick","updatedAttributes","some","handlePatternMenuItemClick","handleBackdropMenuItemClick","handleSearchModelInputReset","useCallback","handleSearchBackdropInputReset","handleSearchPatternInputReset","handleSearchInputClick","stopPropagation","preventDefault","modelMenuItemsContainerRef","Menu","anchor","menu","getMenuElement","onCloseAnimationEnd","icon","menuItemText","menuItemIcon","models","selectedAttributes","isSelectedAll","menuContentContainer","SearchInput","search","onReset","placeholder","menuItemStickerText","renderModelMenuItems","right","backdrops","backdropAttributeMenuItemText","renderBackdropMenuItems","patterns","renderPatternMenuItems","buttonsContainer","idsByCategory","StarGiftCategoryList","onCategoryChanged","areLimitedStarGiftsDisallowed","starCategories","keys","category","hasResale","selectedCategory","setSelectedCategory","renderCategoryName","renderCategoryItem","handleItemClick","isInteger","useHorizontalScroll","runThrottledForScroll","throttle","cb","forPeerId","resaleGiftsCount","areResaleGiftsLoading","boostPerSentGift","boostsPerSentGift","starGiftsById","starGiftIdsByCategory","GiftModal","closeGiftModal","resetResaleGifts","transitionRef","giftHeaderRef","isApiPeerChat","selectedGift","setSelectedGift","selectedResellGift","setSelectedResellGift","shouldShowMainScreenHeader","setShouldShowMainScreenHeader","isMainScreenHeaderForStarGifts","setIsMainScreenHeaderForStarGifts","isGiftScreenHeaderForStarGifts","setIsGiftScreenHeaderForStarGifts","areAllGiftsDisallowed","shouldDisallowPremiumGifts","disallowedGiftTypes","areUnlimitedStarGiftsDisallowed","shouldDisallowUnlimitedStarGifts","allGifts","filteredGifts","prevGift","giftsByStars","mapGifts","Map","starsGift","set","baseGift","reduce","prev","isResaleScreen","isGiftScreen","shouldShowHeader","isHeaderForStarGifts","handleScroll","headerTop","transitionTop","giftPremiumDescription","starGiftDescription","renderTextFilters","recipientId","handleCloseModal","handleCloseButtonClick","isBackButton","buttonClassName","resaleHeader","headerSlide","isFirstLoading","resaleHeaderContentContainer","resaleHeaderText","resaleHeaderDescription","commonHeaderText","renderHeader","avatars","premiumGiftsGallery","GiftItemPremium","get","starGiftsDescription","starGiftsTransition","filteredGiftIds","starGiftsContainer","shouldShowResale","availabilityResale","shouldDuplicateAsResale","elements","renderStarGifts","GiftSendingOptions","GiftRecipientPicker","closeGiftRecipientPicker","openGiftModal","idsWithSelf","concat","filteredPeerIds","selectCanGift","selectedId","forceShowSelf","AVATAR_SIZE","GIFT_STICKER_SIZE","GiftTransferPreview","giftPreview","arrow","typeGift","isSavedGift","fromPeer","targetPeer","hasAdminRights","getHasAdminRight","recipientPeer","currentUserEmojiStatus","emojiStatus","collectibleEmojiStatuses","statuses","releasedByPeerId","releasedByPeer","starGiftMaxConvertPeriod","tonExplorerUrl","GiftInfoModal","closeGiftInfoModal","changeGiftVisibility","convertGiftToStars","openChatWithInfo","focusMessage","buyStarGift","isConvertConfirmOpen","openConvertConfirm","closeConvertConfirm","isConfirmModalOpen","setIsConfirmModalOpen","renderingFromPeer","renderingTargetPeer","isTargetChat","savedGift","isSender","canConvertDifference","getServerTime","conversionLeft","hasConvertOption","giftSubtitle","ownerTitle","getMainUsername","fallbackText","owner","canFocusUpgrade","upgradeMsgId","canManage","inputGift","canBuyGift","giftOwnerTitle","ownerName","ownerId","handleFocusUpgraded","giftChat","handleTriggerVisibility","isUnsaved","shouldUnsave","handleConvertToStars","handleOpenUpgradeModal","handleBuyGift","closeConfirmModal","handleConfirmBuyGift","SettingsMenuButton","headerButton","renderFooterButton","isShiny","saleDateInfo","firstSaleDate","lastSaleDate","modalData","isConverted","canConvert","isVisibleForMe","uniqueGiftContextMenu","GiftMenuItems","uniqueGiftModalHeader","modalHeader","giftResalePriceContainer","giftResalePriceStar","headerSplitButton","moreIcon","soldOut","CUSTOM_PEER_HIDDEN","unknown","starsValue","giftValue","starAmountIcon","total","renderTextWithEntities","ownerAddress","ownerPeer","originalDetails","copyIcon","withEmojiStatus","uniqueAttribute","rarityPercent","issued","issuedCount","totalCount","recipient","recipientLink","senderLink","tonLink","giftAddress","footerDescription","withBalanceBar","ConfirmDialog","noDefaultTitle","confirmLabel","confirmHandler","formatStarsAsText","configPermille","starsStargiftResaleCommissionPermille","starsStargiftResaleAmountMin","starsStargiftResaleAmountMax","starsUsdWithdrawRateX1000","starsUsdWithdrawRate","GiftResalePriceComposerModal","closeGiftResalePriceComposerModal","updateStarGiftPrice","price","setPrice","hasPrice","handleChangePrice","parseFloat","isNaN","handleSellGift","variables","commission","isPriceCorrect","InputText","inputMode","teactExperimentControlled","toFixed","GiftUpgradeModal","closeGiftUpgradeModal","upgradeGift","renderingRecipient","shouldKeepOriginalDetails","setShouldKeepOriginalDetails","previewAttributes","setPreviewAttributes","handleUpgrade","updatePreviewAttributes","sampleAttributes","previousSelection","random","getRandomAttributes","useInterval","getStickerMediaHash","fetch","ApiMediaFormat","BlobUrl","listItemData","onCheck","TableAboutModal","isCurrentUserPremium","selectIsCurrentUserPremium","GiftStatusInfoModal","closeGiftStatusInfoModal","setEmojiStatus","useCustomEmoji","patternDocumentId","onWearClick","customEmoji","mockPeerWithStatus","statusSparklesColor","FRAGMENT_PEER","byKey","hasPassword","twoFaSettings","passwordHint","GiftWithdrawModal","closeGiftWithdrawModal","clearGiftWithdrawError","processStarGiftWithdrawal","openSettingsScreen","shouldShowPassword","setShouldShowPassword","exportDelay","canExportAt","handleSubmit","password","handleSetUpPassword","screen","SettingsScreens","TwoFaDisabled","exportHint","days","getDays","noPassword","PasswordForm","shouldShowSubmit","error","errorKey","withRegular","clearError","isPasswordVisible","shouldResetValue","onChangePasswordVisibility","submitLabel","onSubmit","noop","async","peerGlobalSearch","searchResult","callApi","accountResultIds","globalResultIds","contactIds","GiftTransferModal","closeGiftTransferModal","openGiftWithdrawModal","transferGift","setSelectedId","renderingSelectedPeerId","renderingSelectedPeer","orderedChatIds","useFolderManagerForOrderedIds","ALL_FOLDER_ID","sortedLocalIds","foundIds","currentResultsQuery","queryFn","debounceTimeout","debouncedQuery","resolverFn","ms","dependencies","isFrozen","updateWhenUnfrozen","forceUpdate","useForceUpdate","handleUnfreeze","useHeavyAnimation","getIsHeavyAnimating","useHeavyAnimationFreeze","runDebounced","useRunDebounced","useSyncEffect","useDebouncedMemo","setCurrentResultsQuery","queryCallback","useAsync","Promise","resolve","answer","usePeerSearch","categories","MEMO_EMPTY_ARRAY","peerColorId","handleCategoryChange","displayIds","handleTransfer","transferStars","ignoreFreeze","onSelectedCategoryChange","withPeerUsernames","noScrollRestore","ChatRefundModal","closeChatRefundModal","toggleNoPaidMessagesException","shouldRefundStars","setShouldRefundStars","renderingUser","starsToRefund","handleConfirmRemoveFee","shouldRefundCharged"],"sourceRoot":""}