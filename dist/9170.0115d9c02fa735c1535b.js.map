{"version":3,"file":"9170.0115d9c02fa735c1535b.js","mappings":"wOAgCA,MA+FA,GAAeA,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAMC,KAA6B,IAA3B,OAAEC,GAAQD,EACjB,MAAME,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAC1BG,GAAYC,EAAAA,EAAAA,IAAoBN,EAAQE,GAG9C,MAAO,CACLG,YACAE,WAJwBC,EAAAA,EAAAA,KAAeR,GAAQS,YAAcT,EAAOU,WAAWC,uBAAoBC,KAInEP,GAAWQ,IAAMC,QAC/CT,EACIA,EAAUU,kBAAoB,GAAKV,EAAUW,SAC7Cb,GAAQA,EAAKc,gBAAkBd,EAAKe,cAE3C,GAbenB,EA7FgCoB,IAM9C,IAN+C,OACnDjB,EAAM,SACNK,EAAQ,UACRa,EAAS,UACTf,EAAS,gBACTgB,GACDF,EACC,MAAM,8BACJG,EAA6B,4BAC7BC,IACEC,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KAEPC,GAAsBC,EAAAA,EAAAA,KAAY,KACtCN,EAA8B,CAC5BpB,UACA,GACD,CAACoB,EAA+BpB,IAE7B2B,EAAexB,GAAWwB,aAE1BC,GAAsBC,EAAAA,EAAAA,KAAQ,KAClC,IAAKF,EACH,MAAO,GAIT,MAAMG,GAAYC,EAAAA,EAAAA,MAAYC,MAAMC,KAC9BC,GAAYH,EAAAA,EAAAA,MAAYI,MAAMF,KAEpC,OAAOG,OAAOC,OAAOV,GAClBW,MAAM,EAlCiB,GAmCvBC,KAAIC,IAAA,IAAC,GAAE7B,GAAI6B,EAAA,OAAKV,EAAUnB,IAAOuB,EAAUvB,EAAG,IAC9C8B,OAAO7B,QAAQ,GACjB,CAACe,KAEJe,EAAAA,EAAAA,KAAU,KACR,GAAKvC,GAAWQ,KACXN,IAAYF,EAAUW,UAO3B,OALAO,EAA4B,CAC1BV,GAAIR,EAAUQ,GACdgC,YAAY,IAGP,KACLtB,EAA4B,CAC1BV,GAAIR,EAAUQ,GACdgC,YAAY,GACZ,CACH,GACA,CAACxC,GAAWQ,GAAIR,GAAWW,SAAUT,EAAUgB,IAElD,MAAM,aACJuB,EAAY,qBACZC,IACEC,EAAAA,EAAAA,GAAkBlC,QAAQT,GAAaE,IAErC0C,GAA4BC,EAAAA,EAAAA,GAAiB7C,GAAWU,mBAAmB,GAC3EoC,GAA+BD,EAAAA,EAAAA,GAAiBpB,GAAqB,GAE3E,GAAKgB,EAEL,OACEM,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GACT,mBACAjC,GAAmB,oBACnBD,EACA2B,GAEFQ,QAAS5B,GAETyB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,QACbgC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAASK,EAAK,uBAC9B2B,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,gBAAgBK,EAAK,eAAgBwB,GAA6B,EAAG,OAEvFG,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,WACZ+B,GAA8BV,KAAKe,GAClCJ,EAAAA,GAAAC,cAACI,EAAAA,EAAM,CACLC,IAAKF,EAAK3C,GACV2C,KAAMA,OAIZJ,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CAACC,OAAK,EAACxC,UAAU,QACrBK,EAAK,iBAEJ,I,wGC1HV,MCsEA,EApDsCN,IAGhC,IAHiC,KACrC0C,EAAI,UACJzC,GACDD,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEPoC,GAAcC,EAAAA,EAAAA,OACbC,EAAaC,EAAeC,IAAmBC,EAAAA,EAAAA,IAAQ,GAExDC,GAAgBC,EAAAA,EAAAA,MAA0BpC,EAAAA,EAAAA,OAE1CqC,GAAcvC,EAAAA,EAAAA,KAAQ,KAC1B,IAAKqC,EACH,OAAOP,EAET,IAAKG,EACH,OAAOF,EAAYS,SAAWV,EAGhC,MAAMW,EAAWV,EAAYS,QAEvBE,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIb,EAAKc,OAAQD,IAC3BF,GAAYX,EAAKa,KAAOF,EAASE,GACnCD,EAASG,KACPxB,EAAAA,GAAAC,cAAA,OAAKjC,UD3CiG,wBC4CpGgC,EAAAA,GAAAC,cAAA,OAAKjC,UD5CkI,wBC4CpGyC,EAAKa,IACxCtB,EAAAA,GAAAC,cAAA,OAAKjC,UD7C+M,uBC6C/KyD,eAAgBX,GAAkBM,EAASE,IAChFtB,EAAAA,GAAAC,cAAA,OAAKjC,UD9CqX,uBC8CrVyD,eAAgBX,GAAkBL,EAAKa,MAIhFD,EAASG,KAAKxB,EAAAA,GAAAC,cAAA,YAAOQ,EAAKa,KAM9B,OAFAZ,EAAYS,QAAUV,EAEfY,CAAQ,GACd,CAACL,EAAeJ,EAAaH,IAMhC,OAJAjB,EAAAA,EAAAA,KAAU,KACRqB,GAAe,GACd,CAACJ,IAGFT,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GDhEE,uBCgE0BlC,GAAY0D,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAChF0D,EACI,C,+TC1BX,SAAexE,EAAAA,EAAAA,KAzBf,SAAiCkF,GAC/B,MAAM,QACJC,EAAO,OAAEC,EAAM,aAAEC,KAAiBC,GAChCJ,EAEEK,EAAeJ,GAASK,WAAWC,QACnCC,EAAiBP,GAAY,UAASA,EAAQpE,KAC9C4E,GAAiBC,EAAAA,EAAAA,GACrBT,GAAUU,EAAAA,EAAAA,IAAsBV,EAAQpE,SAAMD,EAC9CsE,IAAWC,EACXS,EAAAA,GAAeC,SAEXC,GAASJ,EAAAA,EAAAA,GAASF,EAAgBN,GAExC,OACE9B,EAAAA,GAAAC,cAAC0C,EAAAA,EAAuBC,EAAA,CACtBF,OAAQA,EACRG,WAAYR,EACZJ,aAAcA,GAEVD,GAGV,G,oHCtCA,QAAwD,uB,oOCkBxD,MAEMc,EAAoB,IAAIC,IAoD9B,GAAerG,EAAAA,EAAAA,KAlDf,SAAiCkF,GAC/B,MAAM,WACJiB,EAAU,aAAEZ,EAAY,UAAEjE,KAAcgE,GACtCJ,GAEGoB,EAAY,CAAGC,IAAmBlC,EAAAA,EAAAA,GAAQrD,QAAQuE,IACnDiB,GAAkBC,EAAAA,EAAAA,GAAmBH,IAEpCI,EAAeC,EAAiBC,IAAqBvC,EAAAA,EAAAA,GAAQ+B,EAAkBS,IAAIV,IACpFW,GAAoBL,EAAAA,EAAAA,GAAmBC,IAEtCK,EAAkBC,IAAsB3C,EAAAA,EAAAA,IAAQ,GAEjD4C,GAAoBC,EAAAA,EAAAA,IAAgB,KACxCP,IACAP,EAAkBe,IAAIhB,EAAW,IAG7BiB,GAAuBF,EAAAA,EAAAA,IAAgB,KAC3CX,IACAK,IACAS,WAAWL,EAzBY,IAyB2B,KAG9C,KAAEM,GAASpC,EAEjB,OACE5B,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAelC,EDlDT,wBCmDjBiG,OAAOC,EAAAA,EAAAA,QAAoB1G,IAATwG,GAAuB,UAASA,gBAAmBA,SAEpE/B,IAAiBwB,GAEhBzD,EAAAA,GAAAC,cAAA,OAAKkE,IAAKlC,EAAcjE,WAAWkC,EAAAA,EAAAA,GAAekE,EAAgBlB,GAAkBmB,WAAW,IAEhGxB,IAAeY,GAEdzD,EAAAA,GAAAC,cAAA,OACEkE,IAAKtB,EACL7E,WAAWkC,EAAAA,EAAAA,GAAekE,EAAgBZ,GAC1Ca,WAAW,EACXC,OAAQX,IAIZ3D,EAAAA,GAAAC,cAACsE,EAAAA,EAAY3B,EAAA,GAAKZ,EAAU,CAAEsC,OAAQR,KAG5C,G,qRCDO,MAAMU,EAAwBC,OAAOC,WAAW,sBAC1CC,EAAoCF,OAAOC,WAAW,sBAihBnE,SAASE,EACPC,EACAC,EACAC,GAEA,OACE/E,EAAAA,GAAAC,cAAA,OACEjC,UAAU,WACVgH,IAAKD,GAEJD,EAAezF,KAAIC,IAAA,IAAC,MAAE2F,EAAK,IAAEC,GAAK5F,EAAA,OACjCU,EAAAA,GAAAC,cAAA,OACEjC,UAAU,6BACViG,MAAQ,SAAgB,IAARgB,cAAwB,IAAY,IAANC,MAC9C,IAEJlF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,0BACdgC,EAAAA,GAAAC,cAAA,KACEjC,UAAU,+BACViG,MAAQ,yBAAuC,IAAfY,SAGpC7E,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,kBACdgC,EAAAA,GAAAC,cAAA,KACEjC,UAAU,uBACViG,MAAQ,yBAAuC,IAAfY,SAK1C,CAEA,SAAenI,EAAAA,EAAAA,KA5iBaqB,IAuBtB,IAvBuB,MAC3BoH,EAAK,QACLC,EAAO,YACPC,EAAW,eACXC,EAAc,OACdC,EAAM,KACNC,EAAI,UACJC,EAAS,UACTzH,EAAS,aACT0H,EAAY,WACZC,EAAU,cACVC,EAAa,eACbC,EAAc,sBACdC,EAAqB,cACrBC,EAAa,qBACbC,EAAoB,YACpBC,EAAW,cACXC,EAAa,oBACbC,EAAmB,OACnBC,EAAM,YACNC,EAAW,eACXC,EAAc,YACdC,GACDxI,EACC,MAAM,2BAAEyI,EAA0B,qBAAEC,EAAoB,gBAAEC,IAAoBtI,EAAAA,EAAAA,OAEtEuI,SAAS,MAAEC,EAAK,MAAEC,EAAK,MAAEC,GAAO,cAAEC,IAAkB3B,EACtD4B,GAAUtJ,QAAQmJ,GAASC,GAC3BG,IAAYtG,EAAAA,EAAAA,KAAgB,GAE5BoE,IAAYpE,EAAAA,EAAAA,IAAuB,MACnCtC,IAAOC,EAAAA,EAAAA,MACP,MAAEqD,IAAUtD,IAEZ,SAAE6I,KAAaC,EAAAA,EAAAA,OACdC,GAAaC,KAAkBC,EAAAA,EAAAA,KAAS,GACzCC,GAAaH,KAtCL,EAuCRI,IAAYC,EAAAA,EAAAA,IAAoBrC,EAAS,aACzCsC,IAAepF,EAAAA,EAAAA,GAASkF,IAAW,EAAOhF,EAAAA,GAAeC,SAEzDkF,IAAYrF,EAAAA,EAAAA,IAChBmF,EAAAA,EAAAA,IAAoBrC,EAAS,WAC5BmC,IACDK,EAAAA,EAAAA,IAAsBxC,EAAS,YAGzByC,aAAcC,KAAqBC,EAAAA,EAAAA,IACzCN,EAAAA,EAAAA,IAAoBrC,EAAS,aAC5BQ,GACDgC,EAAAA,EAAAA,IAAsBxC,EAAS,aAG3B4C,IAAkBpE,EAAAA,EAAAA,IAAgB,KACtCyD,IAAe,GACfjB,EAAOhB,EAAQ3H,GAAI2H,EAAQtI,OAAO,IAG9BmL,IAAoBrE,EAAAA,EAAAA,IAAgB,KACxCyD,IAAe,EAAM,KAGjB,WACJa,GAAU,eAAEpD,GAAc,kBAAEqD,GAAiB,eAAEC,KAC7CC,EAAAA,EAAAA,MAEE,UACJC,GAAS,aAAEzD,GAAY,UAAE0D,GAAS,eAAEC,GAAc,SAAEC,KAClDC,EAAAA,EAAAA,IACFC,EAAAA,EAAAA,IAAYvD,IACZwD,EAAAA,EAAAA,IAAiBxD,GACjB4B,GAAU,QAAU,QACpBW,GACAQ,QACA3K,EACA4K,GACAhB,GACAY,GACAC,IACAY,EAAAA,EAAAA,IAAezD,IAGX0D,IAAQC,EAAAA,EAAAA,IAAa3D,GACrB4D,GAoYR,SACE7D,EACA0B,GAKA,IAJAhC,EAAYoE,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG,EACfH,EAAKG,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GACLC,EAAUD,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GACV/B,EAAQ+B,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GAGR,MAAME,GAAYxI,EAAAA,EAAAA,IAA0B,OAEpCyI,KAAMC,EAAM,KAAEC,IAAS3K,EAAAA,EAAAA,KAAQ,KACrC,IAAKkI,EACH,OAGF,MAAM,SAAE0C,EAAQ,SAAEd,GAAa5B,EAC/B,IAAK0C,EACH,MAAO,CACLH,KAAM,IAAII,MAAMC,KAAKC,IAAIjB,EC/iBQ,KD+iB8BkB,KAAK,GACpEL,KAAM,GAIV,MAAM,WAAEM,EAAU,WAAEC,GAhKxB,SAAiC3C,EAAoBgC,GACnD,MAAO,CACLU,WAAY1C,EAAY1C,EAAsBsF,QAAU,GAAK,GAAM,GACnED,WAAY3C,EACP1C,EAAsBsF,QACrB,GACCZ,GAAcvE,EAAkCmF,QAAU,GAAK,GAClE,GAER,CAuJuCC,CAAwB7C,EAAUgC,GAC/Dc,EAAiBP,KAAKC,IAAIjB,EAnfT,GAmfwC,GACzDwB,EAAcR,KAAKjJ,MAAMoJ,GAAcC,EAAaD,GAAcI,GAGxE,OE7hBG,SAA0BZ,EAAgBc,GAC/C,IAAIZ,EAAO,EACX,MAAMa,EAAU,IAAIX,MAAMU,GACpBE,EAAehB,EAAK7H,OAAS2I,EAC7BG,EAAajB,EAAK,GAClBkB,EAAclB,EAAKA,EAAK7H,OAAS,GACvC,IAAK,IAAID,EAAI,EAAGA,EAAI4I,EAAU5I,IAAK,CACjC,MAAMiJ,EAAMd,KAAKe,MAAMlJ,EAAI8I,GACrBK,IAAQrB,EAAKmB,EAAM,IAAMF,IAAejB,EAAKmB,IAAQF,IAAejB,EAAKmB,EAAM,IAAMD,IAAgB,EAC3GH,EAAQ7I,GAAKmJ,EACTnB,EAAOmB,IACTnB,EAAOmB,EAEX,CACA,MAAO,CAAErB,KAAMe,EAASb,OAC1B,CF8gBWoB,CE5jBJ,SAAwBC,GAC7B,MAAMC,EAAiC,EAArBD,EAAYpJ,OACxBsJ,EAAcpB,KAAKe,MAAMI,EAAY,GAC3C,IAAKC,EACH,MAAO,GAWT,MAAMC,EAAStB,MAAMqB,GACfE,EAAWJ,EACjB,IAAK,IAAIrJ,EAAI,EAAG0J,EAAIH,EAAc,EAAGvJ,IAAM0J,IAAK1J,EAAG,CACjD,MAAM2J,EAAYxB,KAAKe,MAAW,EAAJlJ,EAAS,GACjC4J,EAAWzB,KAAKe,MAAW,EAAJlJ,EAAS,GAChC6J,EAAQJ,EAASE,IAAcF,EAASE,EAAY,IAAM,GAChEH,EAAOxJ,GAAO6J,GAASD,EAAY,EACrC,CACA,MAAME,EAAgB3B,KAAKe,MAA2B,GAAnBK,EAAc,GAAU,GACrDQ,EAAe5B,KAAKe,MAA2B,GAAnBK,EAAc,GAAU,GACpDS,EAAYP,EAASK,IAAkBL,EAASK,EAAgB,IAAM,GAG5E,OAFAN,EAAOD,EAAc,GAAMS,GAAaD,EAAgB,GAEjDP,CACT,CF6hB4BS,CAAe,IAAIC,WAAWjC,IAEbU,EAAY,GACpD,CAAC/C,EAAUL,EAAOqC,KAAgB,CAAC,EAqBtC,OAnBAuC,EAAAA,EAAAA,KAAgB,KACd,MAAMC,EAASvC,EAAUhI,QAEpBuK,GAAWrC,QAAmB7L,IAAT8L,GCzjBvB,SACLoC,EACArC,EACAsC,EAAgB5N,GAIhB,IAHA,KACEuL,EAAI,UAAEsC,EAAS,kBAAEC,GACF9N,EAEjB,MAAM+N,EAZW,EAYHzC,EAAO9H,OAGrBmK,EAAOI,MAAgB,EAARA,EACfJ,EAAOK,OAASA,GAChBL,EAAOzH,MAAM6H,MAAS,GAAEA,MACxBJ,EAAOzH,MAAM8H,OAAU,OAEvB,MAAMC,EAAMN,EAAOO,WAAW,MAC9BD,EAAIE,MAAM,EAAG,GAEb7C,EAAO8C,SAAQ,CAACC,EAAM9K,KACpB0K,EAAIK,YAAe/K,EAAI+H,EAAO9H,QAAUoK,EAAY,GAAM,EAC1DK,EAAIJ,UAAYD,EAAWrK,EAAI+H,EAAO9H,OAASsK,EAAoBD,EACnE,MAAMU,EAAc7C,KAAK8C,IAAI,EAAaH,EAAO3C,KAAK8C,IAAI,EAAGjD,GAxBlD,KA8Bf,SACE0C,EAA+BQ,EAAWC,EAAWX,EAAeC,EAAgBW,GANhBC,EAQxD,EAAID,IACdA,EAASZ,GAEPC,EAAS,EAAIW,IACfA,EAASX,EAAS,GAGpBC,EAAIY,YACJZ,EAAIa,OAAOL,EAAIE,EAAQD,GACvBT,EAAIc,MAAMN,EAjB0DG,EAiB/CF,EAAGD,EAjB4CG,EAiBjCF,EAAIV,EAAQW,GAC/CV,EAAIc,MAAMN,EAlB0DG,EAkB/CF,EAAIV,EAAQS,EAAGC,EAAIV,EAAQW,GAChDV,EAAIc,MAAMN,EAAGC,EAAIV,EAAQS,EAAGC,EAAGC,GAC/BV,EAAIc,MAAMN,EAAGC,EAAGD,EApBoDG,EAoBzCF,EAAGC,GAC9BV,EAAIe,WACN,CAtBIC,CAAiBhB,EA3BF,EA2BO1K,GAzBX,GAyBqCgL,GAAe,EA5B/C,EA4B+DA,EA1B9D,GA2BjBN,EAAIrC,MAAM,GAEd,CDwiBIsD,CAAevB,EAAQrC,EAAQxE,EAAc,CAC3CyE,OACAsC,UAAW9C,EANkB,SAAV3D,EAAmB,UAAY,UADxB,SAAVA,EAAmB,UAAY,UAQ/C0G,kBAAmB/C,EALkB,SAAV3D,EAAmB,UAAY,UADxB,SAAVA,EAAmB,UAAY,WAOvD,GACD,CAAC2D,EAAOQ,EAAMzE,EAAcwE,EAAQlE,IAEhCgE,CACT,CAxb4B+D,CACxB/H,EAAO0B,EAAQE,KAAkB+B,GAAS,EAAIjE,GAAciE,IAAQrD,EAAWyB,IAG3EiG,GAAe7E,IAAczD,GAAe,GAAKA,GAAe,GAEtErF,EAAAA,EAAAA,KAAU,KACR6H,GAAeiB,GAAU,GACxB,CAACA,KAEJ,MAAM8E,GAAsBhG,KAAgBc,IAEtC,YACJmF,GAAW,eAAEC,GAAc,iBAAEC,KAC3BC,EAAAA,EAAAA,IACFpI,EACAE,GAAkBwC,GAClBsF,IAAuBxH,IAIvBlG,aAAc+N,GACd9N,qBAAsB+N,KACpB9N,EAAAA,EAAAA,GAAkB0N,IAEhBK,GAAoBF,KAAwBL,IAAuBC,IAEnEO,IAAoBhK,EAAAA,EAAAA,IAAgB,KACpCyJ,GACF/G,OAIGgC,IACHlC,EAAOhB,EAAQ3H,GAAI2H,EAAQtI,SAG7BsB,EAAAA,EAAAA,MAAayP,qBAAqB,CAAEtI,WACpC8B,IAAgBD,IAChBmB,KAAW,KAGb/I,EAAAA,EAAAA,KAAU,KACJ6G,GAAeU,KAAkBuB,IAAa1C,IAChDS,GACF,GACC,CAACiC,GAAWvB,GAAeV,EAAaT,IAE3C,MAAMkI,IAAsBlK,EAAAA,EAAAA,IAAgB,KACtCgC,EACFY,EAA2B,CAAEpB,YAE7BqB,EAAqB,CAAErB,WACzB,IAGI2I,IAAanK,EAAAA,EAAAA,IAAiBoK,IAClC,GAAI/G,GAAU9F,SAAW4D,GAAU5D,QAAS,CAC1C,MAAM,MAAE2K,EAAK,KAAEmC,GAASlJ,GAAU5D,QAAQ+M,wBACpCC,EAAUH,aAAaI,WAAaJ,EAAEG,QAAUH,EAAEK,cAAc,GAAGF,QACzEH,EAAEM,kBAEF9F,GAAeiB,KAAK8C,IAAI9C,KAAKC,IAAIjB,KAAa0F,EAAUF,GAAQnC,GAAQrD,GAAW,IAAM,MAC3F,KAGI8F,IAAkB3K,EAAAA,EAAAA,IAAiBoK,IACnCA,aAAaI,YAA2B,IAAbJ,EAAEQ,SACjCvH,GAAU9F,SAAU,EACpB4M,GAAWC,GAAE,IAGTS,IAAiB7K,EAAAA,EAAAA,IAAgB,KACrCqD,GAAU9F,SAAU,CAAK,IAGrBuN,IAAkB9K,EAAAA,EAAAA,IAAgB,KACtC2C,EAAanB,EAAQ3H,GAAI2H,EAAQtI,OAAO,IAGpC6R,IAAmB/K,EAAAA,EAAAA,IAAgB,KACvC8C,EAAgB,CAAE5J,OAAQsI,EAAQtI,OAAQ8R,UAAWxJ,EAAQ3H,IAAK,IAapE,SAASoR,KACP,GAAI7H,GACF,OAAO3B,GAAe,QAGxB,MAAM,MAAEyJ,EAAK,SAAEC,GAAanI,EAE5B,OAAOkI,GAASC,CAClB,EAlBAvP,EAAAA,EAAAA,KAAU,KACR,GAAKuF,GAAU5D,SAAYgM,GAC3B,OAAO6B,EAAAA,EAAAA,IAAcjK,GAAU5D,QAAS,CACtC8N,UAAWV,GACXW,UAAWT,GACXtO,QAASsO,GACTU,OAAQpB,IACR,GACD,CAACZ,GAAcoB,GAAiBR,GAAYU,KAkC/C,MAAMW,IAAgBlP,EAAAA,EAAAA,GACpB,QACAlC,EACAuH,IAAW8J,EAAAA,GAAYC,QAAU,SACjCxG,IAASvD,IAAW8J,EAAAA,GAAYC,QAAU,OACzC/J,IAAW8J,EAAAA,GAAYE,QAAUhK,IAAW8J,EAAAA,GAAYG,cAAgB,SACzE7J,GAAc,qBAGV8J,GAAmB,CAAC,eACtB9B,GACF8B,GAAiBjO,KAAK,WAEtBiO,GAAiBjO,KAAK8G,GAAY,QAAU,QAG9C,MAAMoH,IAAmBxP,EAAAA,EAAAA,GAAe,UAAWiN,IAAgB,iBAEnE,SAASwC,KACP,OACE3P,EAAAA,GAAAC,cAAA,OAAKjC,UAAW0R,IACd1P,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,eACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,QAAQ0D,IAAI,OAAOoN,MAAOD,OAAoBe,EAAAA,EAAAA,GAAWf,OAEtE7O,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBACZN,QAAQ8H,IACPxF,EAAAA,GAAAC,cAAC4P,EAAAA,EAAI,CACH7R,UAAU,OACVmC,QAASuO,KAERoB,EAAAA,EAAAA,IAAoBzR,GAAa,IAAPmH,MAMlC2H,IACCnN,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,qBAAqB0D,IAAKC,GAAQ,WAAQnE,GACvDwC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,yBAAyB0D,IAAI,QAC1CmD,GAAe,GAAM,IAAEkL,EAAAA,EAAAA,IAAoBtH,GAAW5D,GAAc4D,OAEtE7D,EAAeC,GAAcC,GAAgBC,MAGhDoI,IAlER,WACE,GAAInG,GACF,OACEhH,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,OAAO0D,IAAKC,GAAQ,WAAQnE,IACxCuS,EAAAA,EAAAA,KAAqBlJ,GAASC,GAAQ2B,WAK7C,MAAM,UAAEuH,GAAcpJ,EAEtB,OACE5G,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,OAAO0D,IAAKC,GAAQ,WAAQnE,IACxCuS,EAAAA,EAAAA,IAAoBtH,IACrBzI,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UAAS,KACxBgS,GAAahQ,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAY8Q,MAAOkB,IAAYJ,EAAAA,EAAAA,GAAWI,IACvEA,GAAa3K,GAAerF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UAAS,KACrDqH,GAAerF,EAAAA,GAAAC,cAAA,QAAM6O,MAAOzJ,IAAcuK,EAAAA,EAAAA,GAAWvK,IAG5D,CA8CwB4K,GAGxB,CAEA,OACEjQ,EAAAA,GAAAC,cAAA,OAAKjC,UAAWoR,GAAe1N,IAAKrD,GAAKsD,MAAQ,MAAQ,OACtD+D,GACC1F,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACZ2H,GAAc3F,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sBAGhCgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLC,OAAK,EACL0P,QAAShJ,GACTlD,KAAK,UACLmM,MAAOzI,GAAe,oBAAsB,UAC5C1J,UAAWyR,GAAiBW,KAAK,KACjCC,UAAW/H,GAAY,cAAgB,aACvCnI,QAASyN,GACTjM,MAAOtD,GAAKsD,MACZ2O,gBAAiB5I,IAEjB1H,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,mBACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAEdyP,IACCzN,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiBwN,GAAmBC,IAAqB,gBACtF3N,EAAAA,GAAAC,cAACsQ,EAAAA,EAAe,CACd5E,SAAU4B,GACViD,aAAW,EACXxM,KAAK,IACL7D,QAASwN,GAAoBC,QAAoBpQ,EACjDiT,SAAU9C,MAIf/G,GAASX,IAAgBoH,IACxBrN,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLC,OAAK,EACLwD,KAAK,OACLhG,UAAU,kBACVqS,UAAWzK,EAAgB,kBAAoB,WAC/CzF,QAAS2N,IAET9N,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe,OAAQ0F,EAAgB,aAAe,sBAGvEL,IAAW8J,EAAAA,GAAYE,QAAUI,KACjCpK,IAAW8J,EAAAA,GAAYE,QAAU3I,GA4CxC,SACEvI,EACAuI,EACA6B,EACAH,EACAzD,EACAC,EACAC,EACA2L,EACAlL,EACAmG,EACA+C,GAEA,MAAM,MACJI,EAAK,UAAEkB,EAAS,SAAEjB,GAChBnI,EACE+J,EAAerI,GAAczD,EAAe,GAAKA,EAAe,GAChE,MAAElD,GAAUtD,EAElB,OACE2B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,WACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,QAAQ0D,IAAI,OAAOoN,MAAOA,IAAQc,EAAAA,EAAAA,GAAWd,GAASC,IAClE4B,GACC3Q,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,OAAO0D,IAAKC,EAAQ,WAAQnE,GACzCwC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,yBAAyB0D,IAAI,SAC1CqO,EAAAA,EAAAA,IAAoBtH,EAAW5D,EAAc4D,IAE/C7D,EAAeC,EAAcC,EAAgBC,KAGhD4L,GAAgBD,GAChB1Q,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,OAAO0D,IAAKC,EAAQ,WAAQnE,GACxCmO,EAAY,IAAEiF,EAAAA,EAAAA,IAAkBhK,EAAO5C,KAAO2H,aAAiBnO,GAAWoT,EAAAA,EAAAA,IAAkBhK,EAAO5C,QAGtG2M,IAAiBD,GACjB1Q,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,OAAO0D,IAAKC,EAAQ,WAAQnE,GACzCwC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,WAAW0D,IAAI,SAAQqO,EAAAA,EAAAA,IAAoBtH,IAC1DuH,GACChQ,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UAAS,KACzBgC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAY0D,IAAI,OAAOoN,MAAOkB,IAAYJ,EAAAA,EAAAA,GAAWI,KAGxEtS,QAAQ8H,IACPxF,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UAAS,KACzBgC,EAAAA,GAAAC,cAAC4P,EAAAA,EAAI,CAAC7R,UAAU,OAAOmC,QAASuO,IAC7BoC,EAAAA,EAAAA,IAAoBzS,EAAa,IAAPmH,GAAa,MAQxD,CApGiDuL,CACzC1S,GACAuI,EACA6B,GACAH,GACAzD,GACAC,GACAC,GACCa,GAAiByH,GAClB7H,EACA+H,GACAhH,EAAcmI,QAAkBlR,GAEjC+H,IAAW8J,EAAAA,GAAYG,cAAgB3I,GAASC,IAAU6I,KAC1DpK,IAAW8J,EAAAA,GAAYC,QAAUzI,GAwFxC,SACEA,EACA9B,EACAiE,EACAnE,EACAkC,EACAlB,EACAC,EACAC,EACAC,EACAgL,EACA7K,GAEA,OACEnG,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,WACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,oBACbgC,EAAAA,GAAAC,cAAA,OACEjC,UAAU,WACVqG,WAAW,EACXW,IAAKD,GAEL/E,EAAAA,GAAAC,cAAA,UAAQ+E,IAAKgE,KAEdgI,GAEChR,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CAACJ,QAASA,MACV4F,GAAiBC,IAAyBG,EAC7CA,GAAqBL,GACXD,GACVmL,GACF,GAGAhR,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GACZ,kBACA,OACC6F,GAAiBC,EAAwB,YAAc,mBACvDD,GAAiBC,KAA0BF,GAAyB,sBAGtED,GACC7F,EAAAA,GAAAC,cAAA,OAAKgR,QAAQ,YAAYjT,UAAU,eACjCgC,EAAAA,GAAAC,cAAA,QACEjC,UAAU,eACV2L,KAAK,cACLmC,MAAM,KACNC,OAAO,KACP,eAAa,IACb,kBAAgB,QAChBmF,GAAG,IACHC,GAAG,IACHC,OAAO,sBACP,oBAAkB,IAClB,mBAAiB,aAO7BpR,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe,iBAAkB6G,GAAiB,UAAWrF,IAAI,QAC3D,IAAjBmD,GAAqBkL,EAAAA,EAAAA,IAAoBlJ,EAAM4B,WAAYsH,EAAAA,EAAAA,IAAoBlJ,EAAM4B,SAAW5D,IAIzG,CAxJQwM,CACExK,EACA9B,GACAiE,GACAnE,GACAkC,GACAlB,EACAC,EACAC,EACAC,EACAE,EAAgByI,QAAmBnR,EACnC2I,GAGA,G,mFGrZV,SAAgB,KAAO,uBAAuB,aAAa,uBAAuB,UAAY,uBAAuB,YAAY,uBAAuB,SAAW,uBAAuB,YAAY,uBAAuB,SAAW,uBAAuB,aAAa,uBAAuB,UAAY,uBAAuB,oBAAoB,uBAAuB,gBAAkB,uBAAuB,cAAc,uBAAuB,WAAa,uBAAuB,aAAa,uBAAuB,UAAY,uBAAuB,aAAa,uBAAuB,UAAY,uBAAuB,OAAS,wBCoC1nB,GAAezJ,EAAAA,EAAAA,KAjBkBqB,IAI3B,IAJ4B,MAChCuT,EAAK,KACLtN,EAAI,UACJhG,GACDD,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEb,OACE0B,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAelC,EAAWoG,EAAOmN,KAAMnN,EAAQ,QAAOJ,MACjEtC,IAAKrD,EAAKsD,MAAQ,MAAQ,OAEzB2P,GAAOjS,KAAKe,GAASJ,EAAAA,GAAAC,cAACI,EAAAA,EAAM,CAAC2D,KAAMA,EAAM5D,KAAMA,EAAMpC,UAAWoG,EAAOoN,WACpE,G,gNC4BV,MAAMC,GAAeC,EAAAA,EAAAA,KAAUC,GAAOA,KAAM,KAAK,GAiNjD,GAAejV,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAMgV,KAAmC,IAAjC,aAAEC,GAAcD,EACvB,MAAQE,aAAeC,WAAYC,IAAoBpV,EAEjDG,EAAO8U,GAAe7U,EAAAA,EAAAA,KAAWJ,EAAQiV,QAAgBrU,EACzDyU,GAAOC,EAAAA,EAAAA,IAASL,IAAgBM,EAAAA,EAAAA,KAAWvV,EAAQiV,QAAgBrU,EACnE4U,EAAUrV,GAAMqV,QAChBC,EAAUtV,IAAQuV,EAAAA,EAAAA,IAAkBvV,GAAMwV,EAAAA,EAAAA,KAAqB3V,IAAS4V,EAAAA,EAAAA,KAAuB5V,KAC/F,SAAE6V,IAAaC,EAAAA,EAAAA,KAAyB9V,IAAW,CAAC,EACpD+V,EAAUP,EAAUK,OAAWjV,EAC/BoV,EAAiB7V,GAAO8V,EAAAA,EAAAA,KAAmBjW,EAAQG,EAAKU,KAAKqV,gBAAatV,EAChF,IAAIuV,EAAcd,GAAOe,EAAAA,EAAAA,KAAmBpW,EAAQqV,EAAKxU,KAAKwV,SAAMzV,EAYpE,OAXKuV,GAAehW,IAClBgW,GAAcF,EAAAA,EAAAA,KAAmBjW,EAAQG,EAAKU,KAAKyV,OAU9C,CACLlB,gBACAjV,OACAkV,OACAkB,eAXqBpW,IAASkV,MAC5BmB,EAAAA,EAAAA,IAAcrW,MAAUsW,EAAAA,EAAAA,IAAkBtW,EAAM,iBAC/CuW,EAAAA,EAAAA,IAAiBvW,EAAM,gBAU1BsV,UACAM,UACAC,iBACAG,cACAQ,UAXgBZ,GAAUa,EAAAA,EAAAA,IAAgB5W,EAAQiV,EAAcc,QAAWnV,EAY5E,GAjCeb,EA/MyBoB,IAWvC,IAXwC,KAC5CkU,EAAI,KACJlV,EAAI,cACJ0W,EAAa,eACbN,EAAc,QACdd,EAAO,cACPL,EAAa,QACbW,EAAO,YACPI,EAAW,eACXH,EAAc,UACdW,GACDxV,EACC,MAAM,aACJ2V,EAAY,iBACZC,EAAgB,qBAChBC,EAAoB,sBACpBC,EAAqB,gBACrBC,IACE1V,EAAAA,EAAAA,OAGFX,GAAIsW,EAAM,UACVC,EAAS,YACTC,EAAW,OACXC,GACEjC,GAAQ,CAAC,GACLxU,GAAIX,EAAQkX,UAAWG,GAAkBpX,GAAQ,CAAC,EACpDqX,EAASL,GAAUjX,EACnBuB,GAAOC,EAAAA,EAAAA,MAEN+V,EAAyBC,IAA8BhN,EAAAA,EAAAA,KAAU+K,IAExE7S,EAAAA,EAAAA,KAAU,KACR8U,GAA4BjC,EAAQ,GACnC,CAACA,KAEJ7S,EAAAA,EAAAA,KAAU,KACHuU,GACLL,EAAa,CAAEK,UAAS,GACvB,CAACA,KAEJQ,EAAAA,EAAAA,IAAsBjV,IAAkB,IAAhBkV,GAAWlV,EAC5B8U,GAAUI,IAAeJ,IAC1BnC,GAASlV,IAAQqW,EAAAA,EAAAA,IAAcrW,KACjC+W,EAAgB,CAAEM,UACpB,GACC,CAACA,EAAQrX,EAAMkV,IAElB,MAAMwC,EAAc/W,QAAQiV,GAAWA,IAAY+B,EAAAA,IAE7CC,GAAkBhW,EAAAA,EAAAA,KAAQ,KAC9B,MAAMmM,EAASkJ,GAAWzU,QAAQqV,GAAMA,EAAEzX,WAE1C,OAAO2N,GAAQvJ,OAASuJ,OAAStN,CAAS,GACzC,CAACwW,IAEEa,GAAsBlW,EAAAA,EAAAA,KAAQ,KAClC,MAAMmM,EAAUmH,OAAkDzU,EAA3C2W,GAAe5U,QAAQqV,GAAMA,EAAEzX,WAEtD,OAAO2N,GAAQvJ,OAASuJ,OAAStN,CAAS,GACzC,CAAC2W,EAAelC,IAEb6C,GAAOnW,EAAAA,EAAAA,KAAQ,KACnB,GAAK5B,EAIL,OAAO0X,EAAclB,GAAawB,EAAAA,EAAAA,IAAYhY,IAAS6V,CAAc,GACpE,CAAC7V,EAAM0X,EAAalB,EAAWX,IAE5BoC,GAA2BpR,EAAAA,EAAAA,IAAgB,KAC/C0Q,GAA4BnT,IAC1B,MAAM8T,GAA8B9T,EAcpC,OAZAsQ,GAAa,KACPgD,EACFZ,EAAsB,CACpB/W,OAAQA,EACR6V,QAASA,EACTN,SAAU4C,IAGZrB,EAAqB,CAAE9W,OAAQA,EAASuV,SAAU4C,GACpD,IAGKA,CAA0B,GACjC,IAGJ,IAAKlY,GAAQA,EAAKmY,cAAiBhB,IAAWT,EAC5C,OAGF,SAAS0B,EAAK1U,EAAc2U,IAC1BC,EAAAA,EAAAA,IAAoB5U,GACpBkT,EAAiB,CAAEvO,QAAU,GAAEgQ,gBACjC,CAEA,MAAME,EAAkBrB,IAAesB,EAAAA,EAAAA,IAA0BvD,EAAeiC,GAEhF,SAASuB,EAAgBC,EAA6BC,GACpD,MAAOC,KAAiBC,GAAkBH,EAEpCI,EAAgBD,EAAerU,OAChClD,EAAK,eAAgB,eACrByX,MAAM,KACNzW,KAAK0W,GACU,cAANA,EACN/V,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACG+E,EAAevW,KAAI,CAAAxC,EAAqB0N,KAAQ,IAA1ByL,SAAUC,GAAMpZ,EACrC,MAAMqZ,EAAaR,EAAU,GAAES,EAAAA,MAAkBF,IAAU,IAAGA,IAC9D,OACEjW,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACGtG,EAAM,EAAI,KAAO,GAClBvK,EAAAA,GAAAC,cAAA,KACEK,IAAK2V,EACLG,KAAO,GAAED,EAAAA,MAAkBF,IAC3B9V,QAAU6N,KACRqI,EAAAA,EAAAA,GAAUrI,GACVmH,EAAKe,EAAY7X,EAAKqX,EAAS,OAAS,YAAY,EAEtD1X,UAAU,kCAER,IAAGiY,KAEN,KAIPF,SAENvY,EAEEwY,EAAWN,EAAU,QAAOC,EAAaK,WAAaL,EAAaK,SACnEE,EAAaR,EAAU,GAAES,EAAAA,MAAkBR,EAAaK,WAAc,IAAGL,EAAaK,WAE5F,OACEhW,EAAAA,GAAAC,cAACqW,EAAAA,EAAQ,CACPC,KAAMb,EAAS,OAAS,UACxBc,WAAS,EACTC,QAAM,EACNvG,QAAM,EAEN/P,QAASA,IAAMgV,EAAKe,EAAY7X,EAAKqX,EAAS,OAAS,cAEvD1V,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,QAAQ0D,IAAI,QAAQsU,GACpChW,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YACb6X,GAAiB7V,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,mBAAmB6X,GACpDxX,EAAKqX,EAAS,OAAS,aAIhC,CAEA,OACE1V,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,aACZsX,GAAmB5X,QAAQ4X,EAAgB/T,SAE1CvB,EAAAA,GAAAC,cAACqW,EAAAA,EAAQ,CAACC,KAAK,QAAQC,WAAS,EAACC,QAAM,EAACvG,QAAM,EAAC/P,QAASA,IAAMgV,EAAKG,EAAiBjX,EAAK,WACvF2B,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,QAAQ0D,IAAI,QAAQ4T,GACpCtV,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAYK,EAAK,WAGpCsW,GAAmBa,EAAgBb,GACnC5B,GAAerV,QAAQqV,EAAYxR,SAClCvB,EAAAA,GAAAC,cAACqW,EAAAA,EAAQ,CACPC,KAAK,OACLC,WAAS,EACTC,QAAM,EACNC,UAAQ,GAER1W,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,mCAAmC0D,IAAI,SACpDkO,EAAAA,EAAAA,GAAWmD,EAAa,CAAC,KAAM,QAAS,WAE3C/S,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAYK,EAAK0V,EAAS,UAAY,UAGzDc,IAAwBJ,GAAee,EAAgBX,GAAqB,KACzEA,GAAuB1B,GAAmBsB,IAAgBK,GAC5D9U,EAAAA,GAAAC,cAACqW,EAAAA,EAAQ,CACPC,KAAK,OACLC,WAAS,EACTC,QAAM,EACNvG,QAAM,EAEN/P,QAASA,IAAMgV,EAAKL,EAAMzW,EAAK,uBAE/B2B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,SAAS8W,GACxB9U,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAYK,EAAK,wBAGnCoV,GACAzT,EAAAA,GAAAC,cAACqW,EAAAA,EAAQ,CAACC,KAAK,SAASrG,QAAM,EAAC/P,QAAS6U,GACtChV,EAAAA,GAAAC,cAAA,YAAO5B,EAAK,kBACZ2B,EAAAA,GAAAC,cAAC0W,EAAAA,EAAQ,CACPlZ,GAAG,sBACHmZ,MAAO7C,EAAS,4BAA8B,4BAC9C8C,QAASxC,EACTyC,UAAQ,KAIV,I,8NCxQV,IAAIC,EASW,SAASC,EAA8BC,GACpDF,EAAWG,QACXD,EAAQC,OACV,CAVIC,EAAAA,KACFJ,EAAaK,SAASnX,cAAc,SACpC8W,EAAWM,UAAUxT,IAAI,kCACzBuT,SAASE,KAAKC,YAAYR,I,0BCS5B,MAEMS,EAAmB,GACnBC,EAAiB,YAERC,eAAeC,EAC5BC,EAAkBC,EAAYC,GAE9B,MAAMC,EAAUC,IAAIC,gBAAgBJ,IAC5BK,KAAMC,EAAQ,KAAEnU,GAAS6T,EACjC,IAAIO,EACAxR,EACAvE,EACAgW,EAEJ,GAAIC,EAAAA,IAA8B/U,IAAI4U,GAAW,CAC/C,MAAMI,QAAYC,EAAAA,EAAAA,IAAaT,IACzB,MAAEjM,EAAK,OAAEC,GAAWwM,EAC1BF,GAAoBI,EAAoB3M,EAAOC,GAE/C,MAAM2M,EAAejP,KAAK8C,IAAIT,EAAOC,GApBd,KAqBjB4M,EAAQR,IAAaS,EAAAA,IAE3B,IAAKP,EAAkB,CACrB,IAAKP,GAASe,oBAAsBF,IAAUD,GAA6B,eAAbP,GAA4B,CACxF,MAAMW,QAAmBC,EAAAA,EAAAA,GACvBhB,EAASW,EA1BQ,KA0B4BjP,KAAK8C,IAAIT,EAAOC,GAAU,EAAG,cAG5E,OADAiM,IAAIgB,gBAAgBjB,GACbJ,EAAgBC,EAAUC,EAAM,CACrCgB,kBAAmBC,GAEvB,CAEiB,eAAbX,IACFP,EAAWA,EAASqB,QAAQxB,EAAgB,SAG9CW,EAAQ,CAAEtM,QAAOC,SACnB,CAIE1J,EAF0BoH,KAAK8C,IAAIT,EAAOC,GAxCrB,SA0CEgN,EAAAA,EAAAA,GACrBhB,EA3CmB,GA2CWtO,KAAK8C,IAAIT,EAAOC,GAAS,cAGxCgM,CAErB,MAAO,GAAImB,EAAAA,IAA8B3V,IAAI4U,GAAW,CACtD,IACE,MAAQgB,WAAYrN,EAAOsN,YAAarN,EAAM,SAAEtD,SAAmB4Q,EAAAA,EAAAA,IAAatB,GAChFM,GAAoBI,EAAoB3M,EAAOC,GAC1CsM,IACHD,EAAQ,CAAEtM,MAAOA,EAAQC,OAAQA,EAAStD,SAAUA,GAExD,CAAE,MAAO6Q,GACPjB,GAAmB,CACrB,CAEAhW,QAAuBkX,EAAAA,EAAAA,IAAqBxB,EAC9C,MAAO,GAAIyB,EAAAA,IAA8BjW,IAAI4U,GAAW,CACtD,MAAM,SACJ1P,EAAQ,MAAEqG,EAAK,UAAEkB,EAAS,SAAEyJ,SCxE3B/B,eAAkCgC,GACvC,MAAM,aAAEC,EAAY,YAAEC,SAAsB,qCACtCC,QAAiBF,EAAaD,IAC5BI,QAAQ,MAAEhL,EAAK,OAAEiL,EAAM,QAAEC,GAAWC,QAAQ,SAAExR,IAAeoR,EAE/DK,EAAQN,EAAYI,GAG1B,MAAO,CACLlL,QACAkB,UAAW+J,EACXtR,WACAgR,SANeS,EAAS,QAAOA,EAAMD,iBAAiBC,EAAM9Q,KAAK+Q,SAAS,iBAAc3c,EAQ5F,CD2Dc4c,CAAmBrC,GAC7BnR,EAAQ,CACN6B,SAAUA,GAAY,EACtBqG,QACAkB,aAEF3N,EAAiBoX,CACnB,CAEA,MAAO,CACL1B,UACAH,WACAO,WACAnU,OACAoU,QACAxR,QACAvE,iBACAgW,iBAAkBA,QAAoB7a,EACtC6c,SAAW,GAAEC,KAAKC,SAAS9Q,KAAK+Q,cAC7B1C,EAEP,CAEO,SAAS2C,EACdC,EAA8BC,GAE9B,OAAOD,EAAYrb,KAAKub,GAClBD,EACEC,EAAO/B,kBACF,IACF+B,EACH7C,QAAS6C,EAAO/B,mBAGb+B,EAGF,IACFA,EACHvC,kBAAmBuC,EAAO/T,YAAerJ,EACzCqd,yBAAqBrd,IAG3B,CAEA,SAASib,EAAoB3M,EAAeC,GAE1C,OADuBtC,KAAK8C,IAAIT,EAAOC,GAAUtC,KAAKC,IAAIoC,EAAOC,IACxCyL,CAC3B,C,8NEhBA,SAASsD,EAAkBC,GACzB,OAAIA,EAAW1C,iBAAyB,OAEpCC,EAAAA,IAA8B/U,IAAIwX,EAAW5C,UACxC,QAGLe,EAAAA,IAA8B3V,IAAIwX,EAAW5C,UACxC,QAGLqB,EAAAA,IAA8BjW,IAAIwX,EAAW5C,UACxC,QAGF,MACT,C,qCCrHA,MAAM6C,EAAa,sB,eCPnB,MAAMC,GAA0B,0BAE1BC,GAAe,CACnBC,KAAM,MACNC,OAAQ,SACRC,UAAW,YACXC,cAAe,eACfC,YAAa,QACbC,UAAW,OAGPC,GAAW,CACfC,OAAQ,IACRP,KAAM,SACNC,OAAQ,KACRC,UAAW,IACXC,cAAe,MACfC,YAAa,MACbC,UAAW,OAGPG,GAAU,CACd,KACA,KACA,KACA,KACA,KACA,MAGF,SAASC,GAAUC,GAIjB,OAHe,IAAIC,WACAC,gBAAgBF,EAAM,aAE9BvE,IACb,CAEA,SAAS0E,GAAeC,EAAY7F,GAClC,MAAM8F,EAAS9E,SAASnX,cAAcwb,GAASC,QAI/C,OAHAQ,EAAO9F,KAAOA,EACd8F,EAAO3E,YAAY0E,EAAKE,WAAU,IAE3BD,CACT,CAEA,SAASE,GAAeH,EAAYhY,GAClC,MAAMoY,EAAKjF,SAASnX,cAAcgE,GAGlC,OAFAoY,EAAG9E,YAAY0E,EAAKE,WAAU,IAEvBE,CACT,CAEA,SAASC,GAASC,EAAoBzR,GACpC,IAAI0R,EAAU1R,EAAOqR,WAAU,GAC/B,OAAKI,GAGDA,EAAMtY,OAASsY,EAAMtY,MAAMwY,aAAevB,GAAaC,OACzDqB,EAAUJ,GAAeI,EAASf,GAASN,OAEzCoB,EAAMtY,OAASsY,EAAMtY,MAAMyY,YAAcxB,GAAaE,SACxDoB,EAAUJ,GAAeI,EAASf,GAASL,SAEzCmB,EAAMtY,OAASsY,EAAMtY,MAAM0Y,iBAAmBzB,GAAaG,YAC7DmB,EAAUJ,GAAeI,EAASf,GAASJ,YAEzCkB,EAAMtY,OAASsY,EAAMtY,MAAM0Y,iBAAmBzB,GAAaI,gBAC7DkB,EAAUJ,GAAeI,EAASf,GAASH,gBAEzCiB,EAAMtY,OAASsY,EAAMtY,MAAM2Y,gBAAkB1B,GAAaK,cAC5DiB,EAAUJ,GAAeI,EAASf,GAASF,cAEzCgB,EAAMtY,OAASsY,EAAMtY,MAAM2Y,gBAAkB1B,GAAaM,YAC5DgB,EAAUJ,GAAeI,EAASf,GAASD,YAGtCgB,GArBEA,CAsBX,CAiBA,SAASK,GAAkBC,GACzB,MAAMb,EAAOa,EAAMX,WAAU,GAC7B,IAAIK,EAAUpF,SAAS2F,eAAed,EAAKe,aAAe,IACtDC,EAAahB,EAQjB,MAPsB,MAAlBA,EAAKiB,WACPV,EAAUR,GAAeQ,EAAUP,EAA2B7F,MAC1D,UAAW6F,EAAKkB,WAAW,IAAMzf,QAAQue,EAAKkB,WAAW,GAAGlZ,SAC9DgZ,EAAahB,EAAKkB,WAAW,KAGjCX,EAAUF,GAASW,EAA2BT,GACvCA,CACT,CAEA,SAASY,GAAanB,GACpB,GAAIA,EAAKkB,aAAelB,EAAKkB,WAAW5b,QAAU,GAAuB,OAAlB0a,EAAKiB,UAAuC,OAAlBjB,EAAKiB,UAAoB,CACxG,IAAIG,EACAb,EAAUpF,SAAS2F,eAAed,EAAKe,aAAe,IAC1D,GAAsB,OAAlBf,EAAKiB,UAAuC,OAAlBjB,EAAKiB,UAAuC,OAAlBjB,EAAKiB,SAAmB,CAC9EG,EAAajG,SAASnX,cAAcgc,EAAKiB,UACzCV,EAAUpF,SAASkG,yBACnB,MAAMC,EAAQ,GACd,IAAK,IAAIjc,EAAI,EAAGA,EAAI2a,EAAKkB,WAAW5b,OAAQD,IAC1Cic,EAAM/b,QAAQ4b,GAAanB,EAAKkB,WAAW7b,KAE7Cic,EAAMle,KAAKiC,GAAkBkb,EAAQjF,YAAYjW,IACnD,MAA+C,IAApCqa,GAAQ6B,QAAQvB,EAAKiB,WAC9BG,EAAajG,SAASnX,cAAcgc,EAAKiB,UACzCV,EAAUK,GAAkBZ,EAAKkB,WAAW,KACjB,MAAlBlB,EAAKiB,UACdG,EAAajG,SAASnX,cAAc,KACpCuc,EA9CN,SAA0BM,GACxB,MAAMb,EAAOa,EAAMX,WAAU,GAC7B,IAAIK,EAAUpF,SAAS2F,eAAed,EAAKe,aAAe,IACtDC,EAAa7F,SAAS2F,eAAe,IASzC,MARI,UAAWd,EAAKkB,WAAW,IAAMzf,QAAQue,EAAKkB,WAAW,GAAGlZ,SAC9DgZ,EAAahB,EAAKkB,WAAW,IAE3BlB,EAAKkB,WAAW,IAAsC,MAAhClB,EAAKkB,WAAW,GAAGD,WAC3CV,EAAUR,GAAeQ,EAAQL,WAAU,GAAQF,EAAKkB,WAAW,GAAyB/G,MAC5F6G,EAAahB,EAAKkB,WAAW,GAAGA,WAAW,IAE7CX,EAAUF,GAASW,EAA2BT,GACvCA,CACT,CAiCgBiB,CAAiBxB,IACA,OAAlBA,EAAKiB,SACdV,EAAUP,GAEVoB,EAAajG,SAASnX,cAAc,QACpCuc,EAAUK,GAAkBZ,IAE9B,OAAIoB,GACFA,EAAW9F,YAAYiF,GAChB,CAACa,IAGH,CAACpB,EAAKE,WAAU,GACzB,CAEA,GAAIF,EAAKkB,WAAY,CACnB,MAAMO,EAAQ,GACd,IAAK,IAAIpc,EAAI,EAAGA,EAAI2a,EAAKkB,WAAW5b,OAAQD,IAC1Coc,EAAMlc,QAAQ4b,GAAanB,EAAKkB,WAAW7b,KAE7C,OAAOoc,CACT,CAEA,MAAO,CAACzB,EACV,CAEA,SAAS0B,GAAW1B,GAClB,OAAyB,IAAlBA,EAAK2B,QACd,C,4BC9IA,MAEMC,GAAkB,0BA+IxB,GA1F0BC,CACxB3gB,EACA4gB,EACAC,EACAC,EACAC,EACAC,EACAC,MAEA5e,EAAAA,EAAAA,KAAU,KACR,GAAKrC,EAuEL,OAFAia,SAASiH,iBAAiB,QAASC,GAAa,GAEzC,KACLlH,SAASmH,oBAAoB,QAASD,GAAa,EAAM,EApE3D5G,eAAe4G,EAAYtQ,GACzB,IAAKA,EAAEwQ,cACL,OAGF,MAAMC,EAAQrH,SAASsH,cACvB,GAAID,IAAU,CAACE,EAAAA,IAAmBC,EAAAA,IAAyBC,EAAAA,KAAyBC,SAASL,EAAMhhB,IACjG,OAGF,MAAMshB,EAAa/Q,EAAEwQ,cAAcQ,QAAQ,QAAQC,UAAU,EA/ExC,MAgFfpD,EAAO7N,EAAEwQ,cAAcQ,QAAQ,aAErC,IAAIE,EAAsBrD,GAAOsD,EAAAA,EAAAA,IA3EvC,SAA2BtD,GACzB,IAAIuD,EAAWhI,SAASnX,cAAc,OACtC,IACE4b,GDuJkCwD,ECvJbxD,GDwJDyD,MAAMrE,IAlB9B,SAA0B6B,GACxB,MAAMxF,EAAOF,SAASnX,cAAc,QAC9Byd,EAAQZ,EAAMK,WACdoC,EAAgB/V,MAAMgW,KAAK9B,GAAOne,OAAOoe,IACzC8B,EAAa,GAEnB,IAAK,MAAMxD,KAAQsD,EACjBE,EAAWje,QAAQ4b,GAAanB,IAGlC,IAAK,IAAI3a,EAAI,EAAGA,EAAIme,EAAWle,OAAQD,IACrCgW,EAAKC,YAAYkI,EAAWne,GAAG6a,WAAU,IAG3C,OAAO7E,CACT,CAOSoI,CAAiB9D,GAAUyD,EAAiBpG,QAAQ,eAAgB,MAAM0G,UAHxE/D,GAAUyD,EAAiBpG,QAAQ,eAAgB,KAAK0G,SCxJjE,CAAE,MAAOrG,GACHsG,EAAAA,KAEFC,QAAQC,MAAMxG,EAElB,CDiJa,IAAuB+F,EChJpCD,EAASO,UAAY9D,EAAK5C,QAAQ,UAAW,KAAKA,QAAQ4E,GAAiB,IAE3E,MAAMkC,EAAeX,EAASY,iBAAiC,iBAiC/D,OAhCID,EAAaxe,SACf6d,EAAWW,EAAaA,EAAaxe,OAAS,IAGhDiI,MAAMgW,KAAKJ,EAASa,qBAAqB,MAAM9T,SAAS8P,IACtD,GAAMA,aAAgBiE,YAiBtB,OAhBAjE,EAAKkE,gBAAgB,SAGA,OAAjBlE,EAAKmE,SAAkBnE,EAAKoE,YAAY,MACvB,MAAjBpE,EAAKmE,SAAiBnE,EAAK1E,YAAYH,SAAS2F,eAAe,OAC9C,QAAjBd,EAAKmE,SAAsBnE,EAAKqE,QAAQC,YAAYtE,EAAKoE,YAAYpE,EAAKuE,aAAa,QAAU,IAEjGvE,EAAKqE,QAAQG,eAAexE,EAAKyE,SAEjCC,EAAAA,GAA0B1E,EAAKmE,UACjCnE,EAAK2E,aAAa,mBAAoBD,EAAAA,GAA0B1E,EAAKmE,UAGlEnE,EAAKqE,QAAQC,YAActE,EAAKe,cAAgBf,EAAK4E,WAAW5E,EAAKoE,YAAYpE,EAAKe,aAEvFf,EAAKqE,QAAQQ,KAAK7E,EAAK2E,aAAa,MAAO3E,EAAKqE,QAAQQ,KACpD7E,EAAKqE,QAAQC,YACnB,KAAKQ,GAAAA,GAAsBC,YACzB/E,EAAKoE,YAAYpE,EAAKe,aAAe,IACrC,MACF,KAAK+D,GAAAA,GAAsBE,YACzBhF,EAAKe,YAAcf,EAAKqE,QAAQQ,KAAO,GAE3C,IAGK1B,EAASO,UAAUuB,SAC5B,CA8BQC,CAAkBtF,QAAOre,GAAW,QAClCA,EAEA0hB,IAAuBkC,EAAAA,GAAAA,IAAoBlC,IAAwBf,IACrEe,GAAsBmC,EAAAA,GAAAA,IAAiBnC,GACvCd,OAGF,MAAM,MAAEb,GAAUvP,EAAEwQ,cACpB,IAAI8C,EAA4B,GAOhC,GALAtT,EAAEuT,iBACEhE,EAAMhc,OAAS,IACjB+f,QAAcE,EAAAA,GAAAA,GAA8BjE,KAGzC+D,GAAO/f,SAAWwd,EACrB,OAGF,MAAM0C,EAAcvC,GAAqBwC,UAAUngB,OAAS2d,EAAsB,CAAEze,KAAMse,GAE1F,IAAI4C,GAAiB,EACrB,IAGEA,EAzGmB,2CAuGJ,IAAI7F,WACWC,gBAAgBF,EAzGpC,aA0GsB+F,gBAC7BpB,aAzGmB,UA0GxB,CAAE,MAAOlH,GACP,CAGF,MAAMuI,EAAUJ,GAAeA,EAAYhhB,KACrCqhB,EAAuBR,GAAO/f,SAAW2c,IAAkByD,EAEjE,GAAIG,EAAsB,CACxB,MAAMC,QAAuBC,QAAQC,IAAIX,EAAOjiB,KAAK6iB,GAC5CvK,EAAgBuK,EAAKC,KAAMD,MAEpClE,GAAgBtD,GAAgBA,EAAY0H,OAAOL,IACrD,CAEIF,IACEC,EACF7D,EAAYwD,GAEZ1D,EAA0B0D,EAAahD,GAAOhhB,IAGpD,CAMC,GACA,CACDsgB,EAA2BG,EAAeF,EAAgB7gB,EAAUghB,EAAwBC,EAC5FH,GACA,E,gECrIJ,IAAIoE,IAAW,EAUf,MCZMC,GAAe,IAAIvf,IAAY,CAACge,GAAAA,GAAsBwB,QAASxB,GAAAA,GAAsByB,M,4BCR3F,MACMC,GAA0B,0CAC1BC,GAAe,4CACfC,GAAiB,CACrB3M,SAAU,GACV4M,MAAO,GACPC,aAAa,EACbC,gBAAiB,IAGbC,GAAS3L,SAASnX,cAAc,OA2EtC,MAAM+iB,IAAsBC,EAAAA,GAAAA,IAAS,CAACjN,EAAkB4M,EAAeC,KAAyB,CAC9F7M,WACA4M,QACAC,cACAC,gBAAiB9M,EAASkN,kB,wCCvF5B,MACMC,GAAiC,IAAIC,OAAQ,IAAGC,EAAAA,IAAgBC,UAAW,K,gBCXjF,MAEMC,GAAmB,CAAEC,YAFP,IAAIxL,IAAI,cAAyD5B,KAE7CqN,aAAa,GAC/CC,GAAc,CAAExL,KAAM,aAI5B,IAAIyL,GACAC,GACAC,GAEGnM,eAAeoM,KAOpB,OANKH,KACHA,GAAsB,oCACtBC,UAAsBD,IAAqBI,QAC3CF,GAAgB,IAAID,GAAaL,KAG5BI,EACT,CAEOjM,eAAezS,GAAM+e,SA6C5BtM,uBACQoM,WACAD,GAAc5e,OACtB,CA/CQgf,GAEN,MAAMC,EAAY5J,KAAKC,MACvB,IAAI4J,EACJ,MAAMC,EAAuB,GACvB7a,EAAqB,GAE3Bsa,GAAcQ,gBAAmBC,IAC/BF,EAAO5iB,KAAK8iB,EAAW,EAGzB,MAAMC,EAsCR,SAA6BC,EAAyB7S,GACpD,MAAM2R,EAASkB,EAASC,WAClBC,EAAWpB,EAAOqB,QAAQC,iBAChCF,EAASG,QAtEM,GAuEfvB,EAAOwB,QAAQJ,GAEf,MAAMK,EAAaL,EAASM,kBACtBC,EAAY,IAAIzZ,WAAWuZ,GACjC,IAAIG,GAAc,EAoBlB,OAlBA,SAASC,IACP,GAAID,EACF,OAGFR,EAASU,qBAAqBH,GAE9B,MAEMI,EAFMJ,EAAUK,QAAO,CAACC,EAAKpkB,IAAYokB,EAAMpkB,GAAS,GAC1C4jB,EACE,IAzDoCM,KAC1D9b,EAAS/H,KAAc,IAAT6jB,GACdrB,EAAiBqB,EAAO,EAyDxB1T,CAAG0T,EAvFY,GAuFU,EAAIA,IAE7BG,EAAAA,EAAAA,IAAeL,EACjB,CAEAA,GAEO,KACLD,GAAc,CAAI,CAEtB,CArE0BO,CAAoB5B,IAK5C,MAAO,CACL6B,KAAMA,IAAM,IAAI1D,SAAgB,CAAC2D,EAASC,KACxC/B,GAAcgC,OAAS,KACrBF,EAAQ,CACN9N,KAAM,IAAIiO,KAAK1B,EAAQV,IACvBjb,SAAUgB,KAAKjJ,QAAQ2jB,GAAY7J,KAAKC,OAAS2J,GAAa,KAC9D3a,YACA,EAEJsa,GAAckC,QAAUH,EAExB,MAAMI,EAAYvc,KAAK8C,IAAI,EAAG2X,EAhDT,IAgD0C5J,KAAKC,OACpExW,YAAW,KACT8f,GAAc6B,OACdnB,GAAiB,GAChByB,EAAU,IAEfC,MAAOA,KACL,MAAMD,EAAYvc,KAAK8C,IAAI,EAAG2X,EAvDT,IAuD0C5J,KAAKC,OACpExW,YAAW,KACT8f,GAAcoC,QACd9B,EAAW7J,KAAKC,MAChBgK,GAAiB,GAChByB,EAAU,EAGnB,C,4BC7DA,MAQA,GAR4CpkB,IAC1C,MAAM,YAAE8Y,GAAgB9Y,EAClBskB,GAAkBC,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,mBAAoB3L,EAAYnZ,QAGvF,OAAO2kB,EAAkBlmB,EAAAA,GAAAC,cAACimB,EAAoBtkB,QAAYpE,CAAS,E,wFCuCrE,MA8KA,IAAed,EAAAA,EAAAA,KA9KkBqB,IAmB3B,IAnB4B,OAChCjB,EAAM,SACN2V,EAAQ,gBACR6T,EAAe,eACfC,EAAc,eACdC,EAAc,cACdC,EAAa,cACbC,EAAa,iBACbC,EAAgB,cAChBC,EAAa,WACbC,EAAU,SACVC,EAAQ,YACRC,EAAW,MACX5hB,EAAK,uBACL6hB,EAAsB,aACtBC,EAAY,WACZC,EAAU,YACVC,EAAW,aACXC,GACDrpB,EACC,MAAOspB,EAAkBC,EAAgBC,IAAmBxmB,EAAAA,EAAAA,MACrDymB,EAAkBC,EAAkBC,IAAmBC,EAAAA,GAAAA,GAAeN,EAAkBE,GAEzFK,EAAuBnB,GAAiBC,EACxCmB,EAAsBpB,GAAiBC,GAEtCoB,EAAyBC,EAA2BC,IAA+BjnB,EAAAA,EAAAA,KACpFknB,EAAaZ,GAAoBS,GAEvCtoB,EAAAA,EAAAA,KAAU,KACJ6nB,GACFK,GACF,GACC,CAACL,EAAkBK,KAEtBloB,EAAAA,EAAAA,KAAU,KACJyoB,EACFf,IAEAC,GACF,GACC,CAACc,EAAYd,EAAaD,IAE7B,MAAMgB,GAAyBtkB,EAAAA,EAAAA,IAAgB,KACzCyjB,EACFE,IAEAD,GACF,IAGIa,GAAmBvkB,EAAAA,EAAAA,IAAgB,CAACoK,EAAUoa,KAClD,MAAM,MAAE9G,GAAUtT,EAAEqa,OACdC,GAAiBC,EAAAA,EAAAA,IAAcjH,GAEjCgH,GAAgB/mB,QAClB0lB,EAAaqB,EAAgBF,EAC/B,IAGII,GAAoB5kB,EAAAA,EAAAA,IAAgB,MACxC6kB,EAAAA,GAAAA,GACEjf,MAAMgW,KAAKoI,EAAuBc,EAAAA,IAChCjC,EAAgBnO,EAAAA,IAAgCY,EAAAA,KAC/C9I,KAAK,MACPpC,GAAMma,EAAiBna,GAAG,IAC5B,IAGG2a,GAAuB/kB,EAAAA,EAAAA,IAAgB,MAC3C6kB,EAAAA,GAAAA,IAAuB9B,GAAoBC,EACvCpd,MAAMgW,KAAKhG,EAAAA,KAA+BpJ,KAAK,KAC/C,KACEpC,GAAMma,EAAiBna,GAAG,IAAO,IAGnC4a,GAAiBhlB,EAAAA,EAAAA,IAAgB,KACrC,MAAMse,EAAO,IAAI2G,KAAK,EAACC,EAAAA,GAAAA,OAAiBC,EAAAA,IAAoB,CAAE7Q,KAAM,eACpE+O,EAAa,CAAC/E,GAAM,IAGhB8G,GAAOrqB,EAAAA,EAAAA,KAAQ,IACZkoB,EACH3nB,OAAOC,OAAO0nB,GAAYtnB,QAAQ0pB,MAC7BnC,IAAamC,EAAIC,qBACL,SAAbpC,GAAuBmC,EAAIxrB,KAAOX,IAAUmsB,EAAIE,oBAAoBrK,SAAS,UAG1EmK,EAAIE,oBAAqBrK,SAASgI,WAEzCtpB,GACH,CAACqpB,EAAY/pB,EAAQgqB,IAElBzoB,GAAOC,EAAAA,EAAAA,KAEb,GAAKgoB,EAIL,OACEtmB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,cACbgC,EAAAA,GAAAC,cAACmpB,GAAAA,EAAqB,CACpB3rB,GAAG,qBACHO,UAAWqpB,EAAmB,+BAAiC,qBAC/D7mB,OAAK,EACL2P,MAAM,cACNkZ,WAAYnB,EACZ7X,UAAU,oBACViZ,aAAa,uBACbC,UAAQ,GAERvpB,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sBAEfgC,EAAAA,GAAAC,cAACupB,GAAAA,EAAI,CACH/rB,GAAG,uBACHgsB,OAAQxB,EACRyB,WAAS,EACTC,UAAU,QACVC,UAAU,SACVC,QAAStC,EACTvpB,UAAU,yBACV8rB,oBAAqBvC,EACrBwC,aAAeC,EAAAA,QAAkCxsB,EAAnBgqB,EAC9ByC,aAAeD,EAAAA,QAAkCxsB,EAAnBiqB,EAC9ByC,mBAAoBF,EAAAA,GACpBG,eAAe,uBAMb5D,GACAvmB,EAAAA,GAAAC,cAACmqB,GAAAA,EAAQ,CAACpsB,UAAU,iBAAiBqsB,UAAQ,GAAC,uDAE/C9D,GACCvmB,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACGgX,GACC7nB,EAAAA,GAAAC,cAACmqB,GAAAA,EAAQ,CAAC7T,KAAK,QAAQpW,QAASqoB,GAC7BnqB,EAAKupB,EAAuB,8BACxBnB,EAAgB,4BAA8B,+BAGrDE,GAAoBC,IAElB5mB,EAAAA,GAAAC,cAACmqB,GAAAA,EAAQ,CAAC7T,KAAK,WAAWpW,QAASwoB,GAChCtqB,GAAMsoB,GAAoBC,EAAgB,4BAA8B,mBAG9ED,GAAoBK,GACnBhnB,EAAAA,GAAAC,cAACmqB,GAAAA,EAAQ,CAAC7T,KAAK,MAAMpW,QAASyoB,GAC3BvqB,EAAK,mBAKbmoB,GACCxmB,EAAAA,GAAAC,cAACmqB,GAAAA,EAAQ,CAAC7T,KAAK,OAAOpW,QAASinB,GAAe/oB,EAAK,SAGpDkoB,IAAmBQ,GAAeiC,GAAM3pB,KAAK4pB,GAC5CjpB,EAAAA,GAAAC,cAACqqB,GAAAA,EAAa,CACZrB,IAAKA,EACLnsB,OAAQA,EACR2V,SAAUA,EACVtN,MAAOA,EACPolB,aAAcxC,EACdyC,aAAcxC,OAIhB,IC9MV,GAR2CpmB,IACzC,MAAM,OAAE6nB,GAAW7nB,EACb6oB,GAAiBtE,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,kBAAmBoD,GAGzE,OAAOgB,EAAiBzqB,EAAAA,GAAAC,cAACwqB,EAAmB7oB,QAAYpE,CAAS,ECGnE,GAR8CoE,IAC5C,MAAM,OAAE6nB,GAAW7nB,EACb8oB,GAAoBvE,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,qBAAsBoD,GAG/E,OAAOiB,EAAoB1qB,EAAAA,GAAAC,cAACyqB,EAAsB9oB,QAAYpE,CAAS,E,cCYzE,MA6CA,IAAed,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAgC,IAA9B,UAAEsP,GAAWtP,EACpB,MAAM,OAAExC,IAAW4V,EAAAA,EAAAA,KAAyB9V,IAAW,CAAC,EACxD,OAAKE,EAIE,CAAEsI,SAASulB,EAAAA,EAAAA,KAAkB/tB,EAAQE,EAAQ8R,IAH3C,CAAC,CAGsD,GAPhDjS,EA7C+BoB,IAE7C,IAF8C,OAClD0rB,EAAM,QAAErkB,EAAO,QAAEykB,GAClB9rB,EACC,MAAM,qBAAE6sB,IAAyBxsB,EAAAA,EAAAA,OAE1BopB,EAAkBC,IAAoBE,EAAAA,GAAAA,GAAe8B,EAAQI,IAC9D,oBAAEgB,GAAwBzlB,GAAW,CAAC,EAE5C,GAAKA,GAAYA,EAAQ0lB,gBAIzB,OACE9qB,EAAAA,GAAAC,cAACupB,GAAAA,EAAI,CACHC,OAAQA,EACRC,UAAWmB,EACXlB,UAAU,QACVC,UAAU,SACVC,QAASA,EACT7rB,UAAU,kBACV8rB,oBAAqBD,EACrBE,aAAeC,EAAAA,QAAkCxsB,EAAnBgqB,EAC9ByC,aAAeD,EAAAA,QAAkCxsB,EAAnBiqB,EAC9BsD,WAAS,GAET/qB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,yBACZoH,EAAQ0lB,gBAAgBzrB,KAAK2rB,GAC5BhrB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,OACZgtB,EAAI3rB,KAAKmP,GACRxO,EAAAA,GAAAC,cAACM,GAAAA,EAAM,CACL2P,QAAM,EACNma,SAA0B,gBAAhB7b,EAAO0J,KAEjB/X,QAASA,IAAMyqB,EAAqB,CAAEhc,UAAWxJ,EAAQ3H,GAAI+Q,YAE5DA,EAAO/N,YAMb,KCRX,IAAe/D,EAAAA,EAAAA,KA7CqBqB,IAK9B,IAL+B,OACnC0rB,EAAM,QACNtpB,EAAO,KACPM,EAAI,WACJwqB,GACDltB,EAEC,MAAMmtB,GAAUvqB,EAAAA,EAAAA,IAAwB,MAuBxC,OArBAnB,EAAAA,EAAAA,KAAU,KACR,MAAM2rB,EAASD,EAAQ/pB,QACvB,IAAKgqB,EAAQ,OAEb,MAAMrf,EAAQqf,EAAOC,YAAc,EAEhBD,EAAOE,QAAQ,aACvBpnB,MAAMqnB,YAAY,wBAA0B,GAAExf,MAAU,GAClE,CAAC2d,EAAQhpB,KAEZjB,EAAAA,EAAAA,KAAU,KACR,MAAM2rB,EAASD,EAAQ/pB,QACvB,IAAKgqB,EAAQ,OAEb,MAAMI,EAAaJ,EAAOE,QAAQ,aAElC,MAAO,KACLE,EAAWtnB,MAAMunB,eAAe,wBAAwB,CACzD,GACA,IAGDxrB,EAAAA,GAAAC,cAACM,GAAAA,EAAM,CACLvC,WAAWkC,EAAAA,EAAAA,GAAe,WAAYupB,GAAU,QAChDjpB,OAAK,EACL2P,MAAM,cACNka,SAAUY,EACV9qB,QAASA,EACTkQ,UAAU,6BAEVrQ,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiB,OAAQ,cAAeupB,GAAU,UAC/EzpB,EAAAA,GAAAC,cAAA,QAAM+E,IAAKkmB,EAASltB,UAAU,iBAAiByC,GACxC,I,oDCMb,MA+NA,IAAe/D,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAA6C,IAA3C,uBAAEmsB,GAAwBnsB,EACjC,MAAM,OAAExC,EAAM,SAAE2V,EAAUyF,KAAMwT,IAAoBhZ,EAAAA,EAAAA,KAAyB9V,IAAW,CAAC,EACzF,IAAKE,IAAW2V,IAAaiZ,EAC3B,MAAO,CAAC,EAGV,MACEC,iBAAiB,WACfC,EAAU,SAAEC,EAAUC,WAAYC,EAAiB,UAAEC,EAAS,WAAEC,KAEhE7uB,EAAAA,EAAAA,KAAeR,GAEbsvB,GAAeC,EAAAA,EAAAA,KAAmBvvB,EAAQE,EAAQ2V,GAClD2Z,EAAgC,cAApBV,GACdW,EAAAA,EAAAA,KAAyBzvB,EAAQE,IACjCwvB,EAAAA,EAAAA,KAAgB1vB,EAAQE,EAAQ2V,GAC9BzR,GAAgBC,EAAAA,EAAAA,KAA0BrE,GAC1C2vB,EAAeV,IAAa/uB,EAC5B0vB,EAAoBT,GAAmB1sB,KAAK5B,IAAOktB,EAAAA,EAAAA,KAAkB/tB,EAAQgvB,EAAanuB,KAEhG,IAAI2H,EASAqnB,EACJ,GATIP,IAAiBT,EACnBrmB,GAAUulB,EAAAA,EAAAA,KAAkB/tB,EAAQE,EAAQovB,GACnCE,EACThnB,GAAUsnB,EAAAA,EAAAA,KAAqB9vB,EAAQE,EAAQ2V,EAAUiZ,GAChDa,GAA8C,IAA9BR,EAAmBxqB,SAC5C6D,EAAUonB,IAAoB,IAI5BN,GAAgB9mB,IAAYqmB,EAAwB,CACtD,MAAM,YAAEkB,GAAgBvnB,EAClBwnB,GAAiBC,EAAAA,EAAAA,KAAqBjwB,EAAQE,GAChD6vB,IAAgBA,EAAYG,eAAiBF,KAC/CH,GAASM,EAAAA,EAAAA,KAAsBnwB,EAAQwI,IAGpCqnB,GAAWE,GAAaK,iBAC3BP,GAASQ,EAAAA,EAAAA,KAAarwB,EAAQwI,GAElC,MAAWmnB,IACLnnB,IACFqnB,GAASM,EAAAA,EAAAA,KAAsBnwB,EAAQwI,GAClCqnB,IACHA,GAASQ,EAAAA,EAAAA,KAAarwB,EAAQwI,KAG7BqnB,IACHA,GAASS,EAAAA,EAAAA,KAAWtwB,EAAQgvB,KAIhC,MAAMuB,EAAuBX,GAAmBY,MAAMC,GACpDA,GAAS1mB,QAAQlG,MAAQvB,OAAOouB,KAAKD,EAAQ1mB,SAASpF,OAAS,IAG3DgsB,EAAwBhB,GAA8C,IAA9BR,EAAmBxqB,QAC5D7D,QAAQ0H,GAASuB,QAAQ6mB,WAE9B,MAAO,CACLtB,eACAE,YACAhnB,UACAqnB,SACAzrB,gBACAysB,uBAAwBlB,EAAeR,EAAmBxqB,YAAS/D,EACnEwuB,YACAC,aACAkB,uBACAO,sBAAsBC,EAAAA,EAAAA,KAA2B/wB,GACjD2wB,wBACD,GAxEe5wB,EA7NuCoB,IAcrD,IAdsD,aAC1DmuB,EAAY,UACZE,EAAS,QACThnB,EAAO,OACPqnB,EAAM,cACNzrB,EAAa,uBACbysB,EAAsB,UACtBzB,EAAS,WACTC,EAAU,qBACVkB,EAAoB,uBACpB1B,EAAsB,qBACtBiC,EAAoB,sBACpBH,EAAqB,QACrBK,GACD7vB,EACC,MAAM,gBACJ8vB,EAAe,aACfC,EAAY,aACZC,EAAY,uBACZC,EAAsB,oBACtBC,EAAmB,qBACnBC,EAAoB,gBACpBC,IACE/vB,EAAAA,EAAAA,MAEE4G,GAAMrE,EAAAA,EAAAA,IAAuB,MAC7BtC,GAAOC,EAAAA,EAAAA,KAEPiuB,EAAe7uB,QAAQ+vB,GACvBW,EAAU1wB,SACZwuB,GAAgBE,IAAchnB,GAC5BqnB,GAAUgB,GAEVY,GAAaC,EAAAA,GAAAA,GACjB,CAACb,GACDA,EArC4B,SAqCuBjwB,IAG/C,aACJkC,EAAY,qBAAEC,IACZC,EAAAA,EAAAA,GAAkByuB,GAAcD,OAAS5wB,GAAYwD,OAAexD,GAAYwD,GAE9EutB,GAAgB3qB,EAAAA,EAAAA,IAAgB,KAChCsoB,IAAiBT,EACnBoC,EAAgB,CAAEjf,eAAWpR,IACpB4uB,EACT0B,EAAa,CAAElf,eAAWpR,IACjBiwB,GACTU,IAEFP,KAAW,KAGbpuB,EAAAA,EAAAA,KAAU,IAAO4uB,GAAUI,EAAAA,GAAAA,GAAsBD,QAAiB/wB,GAAY,CAAC4wB,EAASG,IAExF,MAAME,GAAqB7qB,EAAAA,EAAAA,IAAgB,KACrC2oB,GACJwB,EAAa,CAAEjxB,OAAQsI,EAAStI,OAAQ8R,UAAWxJ,EAAS3H,GAAIixB,mBAAmB,GAAO,IAGtFC,GAAmB/qB,EAAAA,EAAAA,IAAiBoK,IACxCA,EAAEM,kBACFigB,GAAe,IAGXK,GAA6BhrB,EAAAA,EAAAA,IAAgB,KACjDoqB,GAAwB,KAGpB,kBACJa,EAAiB,oBAAEC,EAAmB,kBAAEC,EAAiB,uBACzDC,EAAsB,sBAAEC,IACtBC,EAAAA,EAAAA,GAAuBlqB,GAErBmqB,GAAoBvrB,EAAAA,EAAAA,IAAgB,IAAMoB,EAAI7D,UAC9CiuB,GAAiBxrB,EAAAA,EAAAA,IAAgB,IAAMoB,EAAI7D,UAC3CkuB,GAAiBzrB,EAAAA,EAAAA,IAAgB,IAAMoB,EAAI7D,QAASmuB,cAAc,oCAElE,UACJ3F,EAAS,UAAEC,EAAS,iBAAE2F,EAAgB,iBAAEC,EAAkBvrB,MAAOwrB,IAC/DC,EAAAA,GAAAA,GACFZ,EACAK,EACAC,EACAC,IAGF7vB,EAAAA,EAAAA,KAAU,KACHE,GAAcsvB,GAAwB,GAC1C,CAACA,EAAwBtvB,IAE5B,MAAM1B,GAAYkC,EAAAA,EAAAA,GAAe,0BAA2BP,GAEtDgwB,IAAWhxB,EAAAA,EAAAA,KAAQ,IACnButB,IAAiBT,EACZ,aAELW,EACK,YAELG,EACK,oBADT,GAKC,CAACH,EAAWG,EAAcL,EAAcT,IAErCmE,GAAanC,GAA0BA,EAAyB,EAClEpvB,EAAK,wBAAyBovB,QAC9BjwB,EAEEqyB,IAAkBlxB,EAAAA,EAAAA,KAAQ,KAC9B,IAAKyG,IAAYmnB,IAAiBnnB,EAAQuB,QAAQlG,OAASurB,GAAa0B,EAAsB,OAAOtoB,EAErG,MAAM0qB,GAAezO,EAAAA,EAAAA,IAAiBjc,EAAQuB,QAAQlG,MACtD,MAAO,IACF2E,EACHuB,QAAS,IACJvB,EAAQuB,QACXlG,KAAMqvB,GAET,GACA,CAACpC,EAAsBnB,EAAcnnB,EAAS4mB,IAEjD,GAAKtsB,EAIL,OACEM,EAAAA,GAAAC,cAAA,OAAKjC,UAAWA,EAAWgH,IAAKA,EAAK+qB,cAAehB,EAAmB5uB,QAAS4uB,GAC9E/uB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,iCACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,sBACbgC,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe,OAAQyvB,OAEvC3vB,EAAAA,GAAAC,cAAC+vB,GAAAA,EAAe,CACdhyB,UAAU,eACVoH,QAASyqB,GACTpD,OAAST,OAAqBxuB,EAATivB,EACrBmD,WAAYA,GACZ9gB,MAAOsd,EAAY/tB,EAAK,eAAiB2tB,EAAY3tB,EAAK,qCAAkCb,EAC5F2C,QAASsuB,EACTwB,eAAgB1D,IAAiBgB,IAEnCvtB,EAAAA,GAAAC,cAACM,GAAAA,EAAM,CACLvC,UAAU,kBACVwC,OAAK,EACL0vB,OAAK,EACL/f,MAAM,cACNE,UAAWhS,EAAK,UAChB8B,QAASwuB,GAET3uB,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAEduuB,IAAiBgB,GAChBvtB,EAAAA,GAAAC,cAACupB,GAAAA,EAAI,CACHC,OAAQoF,EACRU,iBAAkBA,EAClBC,iBAAkBA,EAClB7F,UAAWA,EACXC,UAAWA,EACX3lB,MAAOwrB,EACPzxB,UAAU,uBACV6rB,QAASmF,EACTlF,oBAAqBmF,GAErBjvB,EAAAA,GAAAC,cAACmqB,GAAAA,EAAQ,CACP7T,KAAOyV,OAAkCxuB,EAAtB,oBACnB2yB,WAAYnE,EAAYhsB,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,+BAA6BR,EAElE2C,QAASA,IAAM8tB,EAAoB,CACjCjC,WAAW,KAGZ3tB,EAAKovB,EAAyB,EAAI,kBAAoB,oBAEzDztB,EAAAA,GAAAC,cAACmqB,GAAAA,EAAQ,CACP7T,KAAMyV,EAAY,yBAAsBxuB,EACxC2yB,WAAanE,OAAsDxuB,EAA1CwC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,0BAEtCmC,QAASA,IAAM8tB,EAAoB,CACjCjC,WAAW,KAGZ3tB,EAAKovB,EAAyB,EAAI,kBAAoB,oBAExDN,GACCntB,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAACmwB,GAAAA,EAAa,MACdpwB,EAAAA,GAAAC,cAACmqB,GAAAA,EAAQ,CACP7T,KAAO0V,OAAmCzuB,EAAtB,oBACpB2yB,WAAYlE,EAAajsB,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,+BAA6BR,EAEnE2C,QAASA,IAAM+tB,EAAqB,CAClCjC,YAAY,KAGb5tB,EAAKovB,EAAyB,EAAI,0CAA4C,gBAEjFztB,EAAAA,GAAAC,cAACmqB,GAAAA,EAAQ,CACP7T,KAAM0V,EAAa,yBAAsBzuB,EACzC2yB,WAAalE,OAAuDzuB,EAA1CwC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,0BAEvCmC,QAASA,IAAM+tB,EAAqB,CAClCjC,YAAY,KAGb5tB,EAAKovB,EAAyB,EAAI,0CAA4C,iBAIrFztB,EAAAA,GAAAC,cAACmwB,GAAAA,EAAa,MACdpwB,EAAAA,GAAAC,cAACmqB,GAAAA,EAAQ,CAAC7T,KAAK,UAAUpW,QAASyuB,GAC/BvwB,EAAK,sBAKV,K,wCC/QV,MAQA,GARqCuD,IACnC,MAAM,OAAE6nB,GAAW7nB,EACbyuB,GAAWlK,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,YAAaoD,GAG7D,OAAO4G,EAAWrwB,EAAAA,GAAAC,cAACowB,EAAazuB,QAAYpE,CAAS,E,gBCLvD,MAQA,GAR6CoE,IAC3C,MAAM,OAAE6nB,GAAW7nB,EACb0uB,GAAmBnK,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,oBAAqBoD,GAG7E,OAAO6G,EAAmBtwB,EAAAA,GAAAC,cAACqwB,EAAqB1uB,QAAYpE,CAAS,ECGvE,GAR2CoE,IACzC,MAAM,OAAE6nB,GAAW7nB,EACb2uB,GAAiBpK,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,kBAAmBoD,GAGzE,OAAO8G,EAAiBvwB,EAAAA,GAAAC,cAACswB,EAAmB3uB,QAAYpE,CAAS,E,gBCLnE,MAQA,GARsCoE,IACpC,MAAM,OAAE6nB,GAAW7nB,EACb4uB,GAAYrK,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,aAAcoD,GAG/D,OAAO+G,EAAYxwB,EAAAA,GAAAC,cAACuwB,EAAc5uB,QAAYpE,CAAS,ECGzD,GARuCoE,IACrC,MAAM,OAAE6nB,GAAW7nB,EACb6uB,GAAatK,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,cAAeoD,GAGjE,OAAOgH,EAAazwB,EAAAA,GAAAC,cAACwwB,EAAe7uB,QAAYpE,CAAS,ECG3D,GAR2CoE,IACzC,MAAM,OAAE6nB,GAAW7nB,EACb8uB,GAAiBvK,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,kBAAmBoD,GAGzE,OAAOiH,EAAiB1wB,EAAAA,GAAAC,cAACywB,EAAmB9uB,QAAYpE,CAAS,E,wCC4BnE,MACMmzB,GAAU,IAAIvN,OAAOwN,EAAAA,IAAkB,KA8F7C,IAAel0B,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAuC,IAArC,OAAExC,EAAM,SAAE2V,GAAUnT,EAC3B,MAAMuxB,GAAYC,EAAAA,EAAAA,KAAgBl0B,EAAQE,EAAQ2V,GAClD,MAAO,CACLtN,OAAO4rB,EAAAA,EAAAA,KAAYn0B,GACnBo0B,gBAAgB5zB,EAAAA,EAAAA,KAAeR,GAAQo0B,eACvCH,YACD,GAPel0B,EA5F8BoB,IAQ5C,IAR6C,OACjDjB,EAAM,SACN2V,EAAQ,QACRwe,EAAO,WACPhG,EAAU,eACV+F,EAAc,UACdH,EAAS,MACT1rB,GACDpH,EACC,MAAM,mBACJmzB,EAAkB,oBAClBC,EAAmB,qBACnBC,IACEhzB,EAAAA,EAAAA,MAEEizB,GAA2B1wB,EAAAA,EAAAA,MAE3B2wB,GAAsBC,EAAAA,EAAAA,KAAqB,KAC/C,MAAMC,GAAgBrS,EAAAA,EAAAA,IAAkB8R,KAClCQ,EAAaD,EAAc9P,UAAUgQ,MAAMtc,GAC/CA,EAAO8C,OAAS6I,GAAAA,GAAsBwB,UAKxC,OAFA8O,EAAyBlwB,QAAUqwB,EAE5BC,GAAY/X,KAAO8X,EAAc/wB,KAAK6e,MAAMqR,MAAW,EAAE,GAC/D,CAACM,GA7Bc,KA6BS,GAErBU,GAAUC,EAAAA,EAAAA,GAAiBN,EAAqB,CAACA,EAAqBL,IAAU,IAEtFzxB,EAAAA,EAAAA,KAAU,KACR,MAAMsV,EAAO6c,IACPH,EAAgBH,EAAyBlwB,QAE3C2T,EACFoc,EAAmB,CAAEzwB,KAAM+wB,KAE3BL,IACAC,EAAqB,CAAEt0B,SAAQ2V,aACjC,GACC,CAACkf,EAAS70B,EAAQ2V,KAErBof,EAAAA,EAAAA,IAAc,KACZV,IACAC,EAAqB,CAAEt0B,SAAQ2V,YAAW,GACzC,CAAC3V,EAAQq0B,EAAqB1e,EAAU2e,IAE3C,MAAMhD,GAAU0D,EAAAA,EAAAA,IAAgB,IACvBp0B,QAAQszB,GAAkBC,MAAcJ,IAAc5F,IAC5D,CAACA,EAAYgG,EAASJ,EAAWG,KAC9B,aAAEtxB,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAAkBwuB,GAE3D2D,GAAmBjyB,EAAAA,GAAAA,GAAiBkxB,GAAgB,GAEpDgB,GAA4BpuB,EAAAA,EAAAA,IAAgB,KAChDwtB,EAAqB,CAAEt0B,SAAQ2V,WAAUoe,WAAW,GAAO,IAG7D,IAAKnxB,IAAiBqyB,EACpB,OAIF,MAAM,MAAEE,KAAUC,GAAwBH,EACpCI,EAAc,CAClBxrB,QAAS,CACPyrB,QAASF,IAIb,OACElyB,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,iBAAkBP,IAC/CK,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,wBACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,4BACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,oBAEfgC,EAAAA,GAAAC,cAACoyB,GAAAA,EAAO,CAACjtB,QAAS+sB,EAAaG,WAAS,EAACntB,MAAOA,IAChDnF,EAAAA,GAAAC,cAACM,GAAAA,EAAM,CACLvC,UAAU,uBACVwC,OAAK,EACL0vB,OAAK,EACL/f,MAAM,cACNE,UAAU,wBACVlQ,QAAS6xB,GAEThyB,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sBAGb,K,sCC5HV,MAQA,GAR+C4D,IAC7C,MAAM,OAAE6nB,GAAW7nB,EACb2wB,GAAqBpM,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,sBAAuBoD,GAGjF,OAAO8I,EAAqBvyB,EAAAA,GAAAC,cAACsyB,EAAuB3wB,QAAYpE,CAAS,E,gBCoOtEg1B,GAAe,SAAfA,GAAe,OAAfA,EAAe,YAAfA,EAAe,gBAAfA,EAAe,YAAfA,EAAe,oBAAfA,EAAe,kBAAfA,CAAe,EAAfA,IAAe,IAYpB,MA2lDA,IAAe91B,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM61B,KAEW,IAFT,OACP31B,EAAM,SAAE2V,EAAQ,QAAEigB,EAAO,gBAAEhH,EAAe,SAAExkB,EAAQ,KAAEgR,GACvDua,EACC,MAAM11B,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAC1B61B,EAAU71B,IAAW81B,EAAAA,KAAkBC,EAAAA,EAAAA,KAAUj2B,EAAQE,QAAUU,EACnEs1B,EAAgBp1B,QAAQi1B,GACxB/F,GAAiBC,EAAAA,EAAAA,KAAqBjwB,EAAQE,GAC9Ci2B,GAAiB7gB,EAAAA,EAAAA,IAASpV,GAC1Bk2B,EAAkBF,GAAgB9f,EAAAA,EAAAA,KAAmBpW,EAAQ+1B,EAAQl1B,SAAMD,EAC3Ey1B,EAAgBF,OAAsDv1B,GAArCqV,EAAAA,EAAAA,KAAmBjW,EAAQE,GAC5Do2B,GAAgCJ,IAAkBC,KACnDI,EAAAA,EAAAA,KAA0Cv2B,EAAQE,EAAQ2V,GACzD2gB,GAAeC,EAAAA,EAAAA,KAAmBz2B,EAAQE,EAAQ2V,IAClD,SACJ6gB,EAAQ,sBAAEC,EAAqB,yBAAEC,EAAwB,4BAAEC,GACzD72B,EAAO82B,SAASC,MACdC,EAAoBh3B,EAAOi3B,cAAcC,EAAAA,KACzCD,EAAgBP,IAAaQ,EAAAA,IAA0Bl3B,EAAOi3B,cAAcP,QAAY91B,EACxFu2B,EAAuBb,EAA+BA,EAA6Bz1B,QAAKD,EACxFw2B,EAAkBD,GAAuBpJ,EAAAA,EAAAA,KAAkB/tB,EAAQE,EAAQi3B,QAAwBv2B,GACnG,cAAEy2B,GAAkBr3B,EACpBs3B,EAAkBjB,EAAeA,GAAckB,UAAYF,OAAgBz2B,EAC3E22B,EAAWp3B,GAAMq3B,eAAiBF,IACtCn3B,EAAKq3B,cAAchH,MAAMhtB,GAASA,EAAK3C,KAAOy2B,IAC1CA,EACCn3B,GAAMs3B,aAAaC,UAAYv3B,GAAMU,QAAKD,GAE3C+2B,EAAaJ,GAAWhiB,EAAAA,EAAAA,KAAWvV,EAAQu3B,QAAY32B,EACvDg3B,GAAcD,GAAcJ,GAAWn3B,EAAAA,EAAAA,KAAWJ,EAAQu3B,QAAY32B,EACtEi3B,GAAqBC,EAAAA,EAAAA,KAAyB93B,EAAQE,GACtD63B,GAAsBC,EAAAA,EAAAA,KAA0Bh4B,EAAQE,GAExD+3B,GAAWz3B,EAAAA,EAAAA,KAAeR,GAC1Bk4B,EAAoBp3B,QAAQm3B,EAASE,YAAYrC,SAEjDsC,GAAqBtiB,EAAAA,EAAAA,KAAyB9V,GAC9Cq4B,EAA0Bn4B,IAAWk4B,GAAoBl4B,QAC1D2V,IAAauiB,GAAoBviB,UACjCiZ,IAAoBsJ,GAAoB9c,OACvC4c,EACA7iB,GAAOE,EAAAA,EAAAA,KAAWvV,EAAQE,GAC1Bo4B,GAAyBjjB,KAASe,EAAAA,EAAAA,KAAmBpW,EAAQqV,EAAKxU,KAAK03B,mBAAoB,EAC3FC,EAAWnC,GAAcmC,SACzB1H,GAAuBC,EAAAA,EAAAA,KAA2B/wB,GAElDy4B,EAAmC,cAApB3J,GACjB4J,EAAAA,EAAAA,KAA4B14B,EAAQE,IACpCy4B,EAAAA,EAAAA,KAAmB34B,EAAQE,EAAQ2V,GAEjCyZ,GAAeC,EAAAA,EAAAA,KAAmBvvB,EAAQE,EAAQ2V,GAElD+iB,EAAQ9C,IAAW+C,EAAAA,EAAAA,KAAgB74B,EAAQE,EAAQ41B,GACnDgD,EAAoBF,GAAS,iBAAkBA,EAAQA,EAAMG,kBAAen4B,EAElF,MAAO,CACLo4B,mBAA6B,UAAT1d,EAAmBtb,EAAOg5B,wBAAqBp4B,EACnEq4B,aAAuB,UAAT3d,EAAmBtb,EAAOi5B,kBAAer4B,EACvDs4B,eAAgBjB,EAASkB,UACzBC,gBAAgBtJ,EAAAA,EAAAA,KAAqB9vB,EAAQE,EAAQ2V,EAAUiZ,GAC/DQ,eACA+J,OAAOC,EAAAA,EAAAA,KAAYt5B,EAAQE,EAAQ2V,GACnC1V,OACA+1B,gBACAlG,iBACAqI,0BACAkB,wBAAwBC,EAAAA,EAAAA,KAA6Bx5B,EAAQE,GAC7Du5B,UAAWt5B,GAAOqW,EAAAA,EAAAA,IAAcrW,QAAQS,EACxC84B,oBAAoBC,EAAAA,EAAAA,KAAyB35B,EAAQsK,GACrDsvB,oBAAoBC,EAAAA,EAAAA,KAAqB75B,GACzC85B,oBACsB,WAApBhL,GACGhuB,QAAQ01B,GAAc7xB,QAE3Bo1B,eAAoC,cAApBjL,EAChBqI,uBACA6C,uBAAwB5C,GAAiB6C,oBACzCtK,aAAczvB,IAAW+3B,EAASlJ,gBAAgBE,SAClDiL,UAAWjC,EAASiC,UACpBC,iBAAkBn6B,EAAOo6B,SAASC,SAASD,SAC3CE,oBAAqBt6B,EAAOu6B,aAAaF,SAASD,SAClDI,iBAAkBnE,GAAcoE,QAChCC,gBAAiB16B,EAAO26B,eAAeC,QACvCvD,gBACAwD,qBAAsB5C,EAAS4C,qBAC/BlE,wBACAC,2BACAC,8BACAiE,aAAc96B,EAAO86B,aACrB9D,kBAAmBA,GAAmB+D,SACtC9D,cAAeA,GAAe8D,SAC9BC,WAAY/C,EAAS+C,WAAWC,WAChCC,mBAAoBjD,EAAS+C,WAAWG,UACxCC,gBAAiB/E,GAAcgF,YAC/BA,YAAajF,EAAmBA,EAAgBkF,SAASC,WAAY,OAAS36B,EAC9E46B,cAAepF,GAAiBkF,SAASG,WACzC9D,aACAC,aACAL,WACAkB,eACAZ,qBACAE,sBACA9N,WAAYjqB,EAAO07B,WAAWtP,KAC9BuP,oBAAoBC,EAAAA,EAAAA,KAAe57B,EAAQE,GAC3CqI,OAAO4rB,EAAAA,EAAAA,KAAYn0B,GACnB67B,eAAeC,EAAAA,EAAAA,GAAmB97B,EAAQ,sBAAwB+7B,EAAAA,IAClEC,cAAcF,EAAAA,EAAAA,GAAmB97B,EAAQ,iBACzC8wB,uBACAwH,wBACA2D,mBAAoBj8B,EAAOi8B,mBAC3BzD,WACAJ,qBACA8D,sBAAsBC,EAAAA,EAAAA,KAA2Bn8B,GACjDo8B,eAAgBtL,KAAyBuL,EAAAA,EAAAA,KAA+Br8B,GACxEs8B,uBAAuBC,EAAAA,EAAAA,KAA4Bv8B,GACnDoqB,uBAAwBpqB,EAAO82B,SAASC,MAAM3M,uBAC9C0O,oBACA0D,YAAax8B,EAAOy8B,QAAQD,YAC7B,GAtHez8B,EAjlDwBoB,IA6EtC,IA7EuC,KAC3Cma,EAAI,cACJ4d,EAAa,cACbwD,EAAa,eACb3C,EAAc,uBACdR,EAAsB,QACtBoD,EAAO,SACPryB,EAAQ,WACRsyB,EAAU,QACVC,EAAO,OACPC,EAAM,eACN1D,GAAc,OACdl5B,GAAM,SACN2V,GAAQ,QACRigB,GAAO,mBACPsC,GAAkB,gBAClBtJ,GAAe,MACfuK,GAAK,KACLl5B,GAAI,wBACJk4B,GAAuB,qBACvBvH,GAAoB,sBACpBwH,GAAqB,cACrBpC,GAAa,eACblG,GAAc,UACdyJ,GAAS,cACToC,GAAa,mBACbnC,GAAkB,mBAClBE,GAAkB,qBAClBsC,GAAoB,aACpBvM,GAAY,UACZuK,GAAS,qBACT/C,GAAoB,uBACpB6C,GAAsB,iBACtB+C,GAAgB,oBAChBjD,GAAmB,iBACnBK,GAAgB,oBAChBG,GAAmB,iBACnBE,GAAgB,gBAChBE,GAAe,cACfrD,GAAa,aACb2E,GAAY,qBACZnB,GAAoB,sBACpBlE,GAAqB,yBACrBC,GAAwB,kBACxBI,GAAiB,cACjBC,GAAa,aACb6D,GAAY,WACZE,GAAU,mBACVE,GAAkB,YAClBG,GAAW,gBACXD,GAAe,WACfzD,GAAU,WACVC,GAAU,SACVL,GAAQ,aACRkB,GAAY,aACZnJ,GAAY,mBACZuI,GAAkB,oBAClBE,GAAmB,cACnByD,GAAa,WACbvR,GAAU,mBACV0R,GAAkB,mBAClBM,GAAkB,MAClB1zB,GAAK,SACLiwB,GAAQ,4BACR3B,GAA2B,yBAC3BmG,GAAwB,gBACxBC,GAAe,QACfC,GAAO,UACP97B,GAAS,mBACT43B,GAAkB,aAClBC,GAAY,cACZmD,GAAa,sBACbE,GAAqB,uBACrBlS,GAAsB,kBACtB0O,GAAiB,YACjB0D,GAAW,UACXW,IACDh8B,EACC,MAAM,YACJi8B,GAAW,WACXC,GAAU,WACVC,GAAU,gBACVvO,GAAe,cACfwO,GAAa,eACbC,GAAc,qBACdC,GAAoB,SACpBC,GAAQ,eACRC,GAAc,oBACdC,GAAmB,WACnBC,GAAU,uBACVC,GAAsB,cACtBC,GAAa,qBACbC,GAAoB,iBACpBjnB,GAAgB,oCAChBknB,GAAmC,wBACnCC,GAAuB,oBACvBC,GAAmB,kBACnBC,KACE58B,EAAAA,EAAAA,MAEEC,IAAOC,EAAAA,EAAAA,KAGP28B,IAAWt6B,EAAAA,EAAAA,IAAuB,MAGlCu6B,IAAmBv6B,EAAAA,EAAAA,IAA0B,OAE5CswB,GAASkK,KAAWC,EAAAA,EAAAA,GAAU,KAC9BC,GAAWC,KAAgBh0B,EAAAA,EAAAA,KAAS,GACrCi0B,IAAoBC,EAAAA,EAAAA,GAAqB5B,IACzC6B,IAA6B96B,EAAAA,EAAAA,MAC7B+6B,IAAoBC,EAAAA,EAAAA,GAAYrC,IAC9BxtB,MAAO8vB,IAAgBC,EAAAA,EAAWC,MAEpCC,GAA2B,gBAAT7jB,EAClB8jB,GAA2B,UAAT9jB,EAClBkc,GAAgB2H,GAAkBh/B,IAAMq3B,mBAAgB52B,EACxDy+B,GAAgB7H,KAChBA,GAAc7yB,OAAS,IAAM6yB,GAAchH,MAAMhtB,GAASA,EAAK3C,KAAOw2B,OAErEiI,GAAoBC,GAAqBC,KAA6Br7B,EAAAA,EAAAA,KACvEs7B,IAAoBC,EAAAA,EAAAA,GAAqBx/B,GAAQ2V,KAChD8pB,GAAiBC,GAAmBC,KAAuB17B,EAAAA,EAAAA,MAC3DsmB,GAAkBqV,GAAkBC,KAAqB57B,EAAAA,EAAAA,KAE1D67B,MAA2BlH,MAAqB,aAAcA,MAChEA,GAAkBmH,WAAaC,EAAAA,IAAeD,UAElDr9B,EAAAA,EAAAA,IAAUu9B,EAAAA,GAAmC,CAAC9L,KAE9C,MAAM+L,IAAgCr8B,EAAAA,EAAAA,IAAO,IAEtCs8B,GAAiBC,KAAYC,EAAAA,EAAAA,GAClCpB,IAAmB5F,EACnBiG,KAGFgB,EAAAA,EAAAA,IAAW,KACT9B,IAAa,EAAK,GA7IW,MAgJ/B97B,EAAAA,EAAAA,KAAU,KACJu8B,IAEJhB,IAAqB,GACpB,CAACgB,GAAiBrJ,MAErBlzB,EAAAA,EAAAA,KAAU,KACRi8B,GAA2Bt6B,aAAU3D,CAAS,GAC7C,CAACV,MAEJ0C,EAAAA,EAAAA,KAAU,KACJ1C,IAAUy8B,IAAYyC,IACxB3B,GAAqB,CAAEv9B,WACzB,GACC,CAACy8B,EAASz8B,GAAQ2V,GAAUupB,MAE/Bx8B,EAAAA,EAAAA,KAAU,KACJ1C,IAAUC,KAASq3B,IAAiBmF,IAAW8D,EAAAA,EAAAA,IAAiBtgC,KAClE09B,GAAW,CAAE39B,WACf,GACC,CAACC,GAAMD,GAAQy8B,EAASkB,GAAYrG,KAEvC,MAAMkJ,IAA+B38B,EAAAA,EAAAA,KAAO,IAC5CkxB,EAAAA,EAAAA,IAAcvyB,IAAqC,IAAnCi+B,EAAYC,GAAkBl+B,EAE5Cg+B,GAA6Bn8B,QAAUzD,QAAQZ,KAAWygC,GAAcnJ,KAAkBoJ,EAAkB,GAC3G,CAAC1gC,GAAQs3B,KAEZ,MAAO1Z,GAAasD,KAAkB1W,EAAAA,EAAAA,IAA0B,IAC1Dm2B,GAAiB//B,QAAQgd,GAAYnZ,SACpCm8B,GAAUzf,KAAe3W,EAAAA,EAAAA,SAAuC9J,IAEjE,gBACJmgC,GAAe,YAAEC,GAAW,eAAErX,GAAc,eAAEC,GAAc,oBAAEqX,GAAmB,cACjFC,GAAa,iBAAEC,GAAgB,cAAEnX,GAAa,cAAEF,GAAa,cAAED,GAAa,iBAAEE,KAC5EhoB,EAAAA,EAAAA,KACF,KAAMq/B,EAAAA,EAAAA,IAA4BjhC,GAAM+1B,GAAekJ,KACvD,CAACj/B,GAAM+1B,GAAekJ,KAGlBiC,IAAqBF,KAAqB/H,GAE1CkI,IAA4Bt6B,EAAAA,EAAAA,IAAgB,SAACu6B,GAAyD,IAAxCC,EAAiBn1B,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG4wB,GACtF,GAAIuE,IAAcvE,IAAmBoE,GAAmB,OACxD,MAAMI,EAAY55B,OAAO65B,eACzB,IAAIC,EAOJ,GALEA,EADEH,IAAcvE,GACDziB,SAASkY,cAA8BsK,IAEvCxiB,SAASonB,eAAeJ,GAGrCC,EAAUI,WAAY,CACxB,MAAMC,EAAiBL,EAAUM,WAAW,GAC5C,IAAIC,EAAAA,EAAAA,GAAuBF,EAAgBN,GAGzC,OAFAS,EAAAA,EAAAA,IAAsBV,QACtBI,EAAaO,cAAc,IAAIC,MAAM,QAAS,CAAEC,SAAS,IAG7D,CAEA7D,GAAS,GAAElK,OAAYkN,MAGvBc,EAAAA,EAAAA,KAAoB,MAClBC,EAAAA,EAAAA,GAAqBX,EAAa,GAEtC,IAEMxgB,IAA4Bna,EAAAA,EAAAA,IAAgB,SAChDnD,GACG,IADW29B,EAAiBn1B,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG4wB,GAElC,MAAMsE,GAAUvuB,EAAAA,EAAAA,GAAWnP,EAAM,CAAC,cAAe,aAAc,YAC5D2P,KAAK,IACL6I,QAAQ,WAAY,KACvBilB,GAA0BC,EAASC,EACrC,IAEMe,IAAqCv7B,EAAAA,EAAAA,IAAgB,SACzDnD,GACG,IADqB29B,EAAiBn1B,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG4wB,GAE5C,MAAMsE,GAAUiB,EAAAA,EAAAA,GAA0B3+B,GAC1Cy9B,GAA0BC,EAASC,EACrC,IAEMiB,IAAmCz7B,EAAAA,EAAAA,IAAgB,SAAC07B,GAA2D,IAAxClB,EAAiBn1B,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG4wB,GAC/FqE,IAA0BqB,EAAAA,EAAAA,IAAqBD,GAAQlB,EACzD,IAEMoB,IAAiB57B,EAAAA,EAAAA,IAAgB,KAChC85B,KACLyB,GAAmCzB,GAAU7D,IAC7C5b,QAAYzgB,GAAU,KAGlB,yBACJ4qB,GAAwB,uBACxBqX,GAAsB,kBACtBC,GAAiB,kBACjBC,GAAiB,iBACjBxX,GAAgB,gBAChByX,GAAe,uBACfC,GAAsB,qBACtBC,IxB9eW,SAA2B/hC,GAsBvC,IAtBwC,YACzC2c,EAAW,cACX+d,EAAa,QACb0C,EAAO,eACPnd,EAAc,OACdlhB,EAAM,cACN8pB,EAAa,cACbF,EAAa,cACbD,EAAa,iBACbE,EAAgB,eAChB6Y,GAYDzhC,EACC,MAAM,sBAAEgiC,EAAqB,oCAAElF,IAAwCz8B,EAAAA,EAAAA,OAChEshC,EAAmBM,IAAwB14B,EAAAA,EAAAA,KAAkB,IAC7Dm4B,EAAwBQ,IAA6B34B,EAAAA,EAAAA,KAAkB,IACvE8gB,EAA0B8X,IAA+B54B,EAAAA,EAAAA,SAA8B9J,GAExFqiC,GAAyBj8B,EAAAA,EAAAA,IAAgB,KAC7Coa,EAAemiB,EAAAA,GACfX,GAAgB,IAGZM,GAAuBl8B,EAAAA,EAAAA,IAC1Bw8B,IACC,MAAMre,EAAqC,mBAAbqe,EAA0BA,EAAS1lB,GAAe0lB,EAChF,GAAKre,EAAexgB,OAKpB,GAAIwgB,EAAeqL,MAAMrS,IACvB,MAAM7C,EAAO4C,EAAkBC,GAE/B,MAAiB,UAAT7C,IAAqB0O,IAAkBD,GAChC,UAATzO,IAAqBwO,IAAkBC,GAC9B,UAATzO,IAAqBuO,IAAkBE,GAC9B,SAATzO,IAAoByO,CAAiB,IAE3CkU,EAAoC,CAAE/9B,gBACjC,GAAIilB,EAAeqL,MAAK9tB,IAAA,IAAC,KAAE0E,GAAM1E,EAAA,OAAK0E,EAAOy0B,CAAa,IAC/DsH,EAAsB,CACpBM,MAAO,2BAEJ,CACLriB,EAAe+D,GACf,MAAMue,EAAcve,EAAeqL,MAAMrS,IACvC,MAAM7C,EAAO4C,EAAkBC,GAE/B,MAAiB,UAAT7C,IAAqB0O,GACd,UAAT1O,IAAqBwO,GACZ,UAATxO,IAAqBuO,CAAc,IAG3CuZ,EAAqBtiC,QAAQ4iC,GAAe3Z,IAC5CsZ,GAA2BtZ,GAC3BuZ,OAA4B1iC,EAC9B,MA9BEqiC,GA8BF,IAkBJ,MAAO,CACLzX,2BACAuX,mBAhBwB/7B,EAAAA,EAAAA,IAAgB8T,MAAO4J,EAAeif,KAC9DT,EAAqB,IAChBplB,WACMsH,QAAQC,IAAIX,EAAMjiB,KAAK6iB,GAC9BvK,EAAgBuK,EAAKC,KAAMD,EAAM,CAAErH,oBAAqB0lB,QAAa/iC,QAEvE,IAWF2qB,kBARuBvkB,EAAAA,EAAAA,IAAgB8T,MAAO4J,EAAekf,KAC7DV,QAA2B9d,QAAQC,IAAIX,EAAMjiB,KAAK6iB,GAASvK,EAAgBuK,EAAKC,KAAMD,OACtFge,EAA4BM,EAAmB,IAO/CZ,gBAAiBzE,EACjB0E,yBACAC,uBACAL,yBACAC,oBAEJ,CwBgZMe,CAAmB,CACrB/lB,eACAygB,WACAnd,kBACAya,iBACA37B,UACA8pB,iBACAF,iBACAD,iBACAE,oBACA6Y,qBAGKkB,GAAmBC,GAAiBC,KAAoB7/B,EAAAA,EAAAA,MACxD8/B,GAAsBC,GAAoBC,KAAuBhgC,EAAAA,EAAAA,MACjEigC,GAAkBC,GAAgBC,KAAmBngC,EAAAA,EAAAA,MACrDogC,GAAkBC,GAAgBC,KAAmBtgC,EAAAA,EAAAA,MACrDugC,GAAmBC,GAAiBC,KAAoBzgC,EAAAA,EAAAA,MACxD0gC,GAAiBC,GAAcC,KAAe5gC,EAAAA,EAAAA,MAE/C,oBACJ6gC,GAAmB,mBACnBC,GAAkB,oBAClBC,GAAmB,qBACnBC,GAAoB,kBACpBC,GACAC,gBAAiBC,GAAa,mBAC9BC,IC5gBsBC,MAExB,MAAMH,GAAkBthC,EAAAA,EAAAA,IAA0B,OAC3CohC,EAAsBM,IAA2B/6B,EAAAA,EAAAA,MAClD66B,GAAqBxhC,EAAAA,EAAAA,OACpBqhC,EAAmBM,IAAwBh7B,EAAAA,EAAAA,OAElD9H,EAAAA,EAAAA,KAAU,KAEJ+iC,EAAAA,IAAaC,EAAAA,IACVC,IACP,GACC,IAEH,MAAMb,GAAsBh+B,EAAAA,EAAAA,IAAgB8T,UAC1C,IACE,MAAM,KAAEgO,EAAI,MAAEO,SAAgBwc,IAAsBC,IAC9CT,EAAgB9gC,UACdghC,EAAmBhhC,SAAWmZ,KAAKC,MAAQ,GAAM,IACnDooB,EAAAA,EAAAA,KAAgB,KACTV,EAAgB9gC,UACrB8gC,EAAgB9gC,QAAQ8C,MAAM2+B,UAAa,SAA4B,IAAnBF,GAAc,uBAA2B,IAGjGJ,EAAqBhoB,KAAKC,OAC5B,IAEF4nB,EAAmBhhC,QAAUmZ,KAAKC,MAClC+nB,EAAqBhoB,KAAKC,OAE1B8nB,EAAwB,CAAE3c,OAAMO,SAClC,CAAE,MAAO3M,GAEPuG,QAAQC,MAAMxG,EAChB,KAGIwoB,GAAsBl+B,EAAAA,EAAAA,IAAgB,KAC1C,GAAKm+B,EAAL,EAIAY,EAAAA,EAAAA,KAAgB,KACVV,EAAgB9gC,UAClB8gC,EAAgB9gC,QAAS8C,MAAM2+B,UAAY,OAC7C,IAGF,IACE,OAAOb,EAAsB9b,OAC/B,CAAE,MAAO3M,GAGP,YADAuG,QAAQC,MAAMxG,EAEhB,CAdA,CAcA,IAGIuoB,GAAqBj+B,EAAAA,EAAAA,IAAgB,KACzC,GAAKm+B,EAAL,CAIAM,OAAwB7kC,GACxB2kC,EAAmBhhC,aAAU3D,EAC7B8kC,OAAqB9kC,IAErBmlC,EAAAA,EAAAA,KAAgB,KACVV,EAAgB9gC,UAClB8gC,EAAgB9gC,QAAQ8C,MAAM2+B,UAAY,OAC5C,IAGF,IACE,OAAOb,EAAsBrc,MAC/B,CAAE,MAAOpM,GAGP,YADAuG,QAAQC,MAAMxG,EAEhB,CAlBA,CAkBA,IAOF,OAJA9Z,EAAAA,EAAAA,KAAU,IACDuiC,GAAuBvT,EAAAA,GAAAA,GAAsBqT,QAAsBrkC,GACzE,CAACukC,EAAsBF,IAEnB,CACLD,sBACAE,sBACAD,qBACAE,uBACAC,oBACAC,kBACAE,qBACD,EDgbGC,GAEES,GAA4B5N,KAA4B+G,IAC9D8G,EAAAA,EAAAA,IAAY,KACVzG,GAAkB,CAAEnkB,KAAM,eAAgB,GACzC2qB,GAA4Bd,IAAwBgB,EAAAA,SAA+BvlC,IAEtFgC,EAAAA,EAAAA,KAAU,KACHy1B,KAA2B+G,KAC3B+F,IACH1F,GAAkB,CAAEnkB,KAAM,WAC5B,GACC,CAAC6pB,GAAsB9M,GAAyB+G,GAAiBK,KAEpE,MAAM2G,IAAeC,EAAAA,EAAAA,GAAYvlC,QAAQs4B,MACzCx2B,EAAAA,EAAAA,KAAU,KACHy1B,KAA2B+G,IAC5B/K,OAAc+R,GAAa7hC,SAC7Bk7B,GAAkB,CAAEnkB,KAAM,UAC5B,GACC,CAAC+Y,GAAS+R,GAAc/N,GAAyB+G,GAAiBK,KAErE,MAAM6G,GAAUnmC,KAAQomC,EAAAA,EAAAA,IAAYpmC,KAE9B,mBACJqmC,GAAkB,kBAClBC,GAAiB,eACjBC,GAAc,qBACdC,GAAoB,YACpBC,KACEC,EAAAA,GAAAA,GACF/lC,QAAQ67B,GAAWzD,IAAkBkG,IAAmB/G,KACnD1B,KAA0BkK,IAC/BxM,GACAkK,QACA39B,EACAk6B,GACA9D,GACAC,KAGI,yBACJ6P,GAAwB,wBACxBC,GAAuB,kBACvBC,KACEC,EAAAA,GAAAA,GACFnmC,QAAQ67B,GAAWzD,IAAkBkG,IAAmB/G,KACnDzB,KAA6BiK,IAClCxM,GACAkK,GACAI,GACAN,GACA/D,KAGI,qBACJ4M,GAAoB,oBACpBC,IjBhkBW,SACbC,EACA/S,EACA+F,GAEA,MAAM,qBAAEiN,EAAoB,sBAAEC,IAA0B9lC,EAAAA,EAAAA,OAEjD+lC,EAAkBC,EAAoBC,IAAwBtjC,EAAAA,EAAAA,IAAQ,GAEvEujC,GAAiB1S,EAAAA,EAAAA,IAAiB,KACtC,MAAM/V,EAAOoV,IACb,IAAK+S,IAAcnoB,GAAS0oB,EAAAA,IAAsB1oB,EAAKta,OAdxC,EAc8D,OAG7E,IADiBsa,EAAKyD,MAAMilB,EAAAA,GAAqBC,GAAAA,EAAenhB,EAAAA,KACjD,OAEf,MAAMohB,GAAYC,EAAAA,EAAAA,GAAiB7oB,GAMnC,OALsB4oB,IACnBF,EAAAA,IAA0D,KAApCI,EAAAA,GAAAA,GAAqBF,KACvCF,EAAAA,IAAsB7mC,QAAQme,EAAKyD,MAAM6D,MAI3CohB,EAAAA,GAAqBE,EAAYA,EAAUnlB,MAAM,gBAAgB,QAClE9hB,CAAS,GACZ,CAACyzB,EAAS+S,IAEP7mC,GAAW20B,EAAAA,EAAAA,IAAgB,IAAMp0B,QAAQ4mC,MAAmB,CAACA,IAC7DM,EAAclnC,QAAQs5B,GAAUz1B,QAiBtC,OAfA/B,EAAAA,EAAAA,KAAU,KACR,IAAKwkC,IAAc7mC,EAAU,OAE7B,MAAM0nC,EAAcP,IAChBO,EACGD,GACHX,EAAqB,CAAE3E,MAAOuF,IAGhCX,GACF,GACC,CAACF,EAAW7mC,EAAUmnC,EAAgBM,EAAaX,EAAsBC,KAE5E1kC,EAAAA,EAAAA,IAAU6kC,EAAsB,CAACA,EAAsBpT,IAEhD,CACL6S,qBAAsBpmC,QAAQP,GAAYynC,IAAgBT,GAC1DJ,oBAAqBK,EAEzB,CiBghBMU,CACFpnC,QAAQ67B,GACHzD,IACCkG,IAAmB/G,KACpB1B,IACAoK,KACCF,IACNxM,GACA8F,KAGI,qBACJgO,GAAoB,oBACpBC,GAAmB,cACnBC,GAAa,qBACbC,KACEC,EAAAA,GAAAA,GACFznC,QAAQq+B,IAAmBxC,GAAWtE,KAA4BwI,IAClExM,GACAkK,GACAI,GACAN,GACA7D,GACAE,GACArD,KAIAxK,OAAQ2b,GACRC,MAAOC,GACPC,UAAWC,GACXC,SAAUC,GACVC,cAAeC,GACfC,QAASC,GACTC,aAAcC,GACdC,KAAMC,GACNC,SAAUC,IlB9lBC,SACbpC,EACAlnC,EACAm0B,EACA2G,GAEA,MAAM,eAAEyO,EAAc,eAAEC,EAAc,mBAAEC,IAAuBnoC,EAAAA,EAAAA,OAExD+lC,EAAkBC,EAAoBC,IAAwBtjC,EAAAA,EAAAA,IAAQ,GAEvEylC,GAA2BC,EAAAA,EAAAA,KAAqB,KACpD,MAAM5qB,EAAOoV,IACb,OAAO+S,GAAanoB,EAAK6qB,WAAW,KAoExC,SAAuB7qB,GACrB,IAAKA,EAAK6qB,WAAW,KACnB,OAAO/jB,GAGT,MAAMliB,EASR,SAAsBob,GASpB,OARAkH,GAAOpD,UAAY9D,EAAK5C,QAAQ,QAAS,MAEzC8J,GAAO/C,iBAA8B,SAAS7T,SAASkQ,IAChDA,EAAGwE,YACNxE,EAAGwE,UAAYxE,EAAGmE,aAAa,OACjC,IAGKuC,GAAOlC,SAChB,CAnBe8lB,CAAa9qB,GACpB/Q,EAASrK,EAAK6e,MAAMmD,IAC1B,OAAK3X,EAIEkY,GAAoBlY,EAAO,GAAIA,EAAO,GAAkB,KAAdA,EAAO,KAAcrK,EAAK6e,MAAMoD,KAHxEC,EAIX,CAhF+CikB,CAAc/qB,GAAQ8G,EAAc,GAC9E,CAACsO,EAAS+S,GAzBE,MA0BT,SACJhuB,EAAQ,MAAE4M,EAAK,YAAEC,EAAW,gBAAEC,IAC5BgP,EAAAA,EAAAA,GAAgB0U,EAA0B,CAACA,EAA0BvV,IAAU,IAEnFY,EAAAA,EAAAA,IAAc9zB,IAAoB,IAAlB8oC,GAAa9oC,EACvB8oC,GACFP,EAAe,CAAEtwB,SAAU6wB,GAC7B,GACC,CAAC7wB,EAAUswB,KAEd9mC,EAAAA,EAAAA,KAAU,KACHsjB,GAELujB,EAAe,CACbvpC,SAAQkZ,SAAU8M,EAAiBF,SACnC,GACD,CAAC9lB,EAAQ8lB,EAAOyjB,EAAgBvjB,KAEnCtjB,EAAAA,EAAAA,IAAU6kC,EAAsB,CAACA,EAAsBpT,IAEvD,MACExzB,GAAI4nC,EAAK,SACTI,EAAQ,cACRE,EAAa,OACbmB,EAAM,QACNjB,EAAO,UACPN,EAAS,KACTU,GACGnjB,GAAmB8U,IAAa9U,IAAqB,CAAC,EAErD2G,EAAS/rB,SAASmoC,GAAStkC,QAAUkkC,KAActB,IAEzD3kC,EAAAA,EAAAA,KAAU,KACHiqB,GAAWzT,GACduwB,GACF,GACC,CAAC9c,EAAQ8c,EAAoBvwB,IAEhC,MAAMmwB,GAAWviC,EAAAA,EAAAA,IAAgB,KAC1Bkf,GAELujB,EAAe,CACbvpC,SAAQkZ,SAAU8M,EAAiBF,QAAOkkB,UAC1C,IAGJ,MAAO,CACLrd,SACA4b,QACAE,YACAE,WACAE,gBACAE,UACAE,aAAc3B,EACd6B,KAAMpjB,GAAeojB,EAAQ,IAAGjwB,KAAYiwB,SAASzoC,EACrD2oC,WAEJ,CkBwhBMY,CACFrpC,QAAQq+B,IAAmBxC,GAAWtE,KAA4BwI,IAClE3gC,GACAm0B,GACA2G,KAIAnO,OAAQud,GACRC,MAAOC,GACPC,oBAAqBC,IvBpnBV,SACbpD,EACA/S,EACAgH,EACAD,GAEA,MAAOmP,EAAqBE,IAA0B//B,EAAAA,EAAAA,OAC/C68B,EAAkBC,EAAoBC,IAAwBtjC,EAAAA,EAAAA,IAAQ,GAEvEumC,GAAyBb,EAAAA,EAAAA,KAAqB,KAClD,MAAM5qB,EAAOoV,IACb,OAAO+S,GAAanoB,EAAK6qB,WAAW,MAAOhC,EAAAA,EAAAA,GAAiB7oB,GAAMyD,MAAMtE,KAAc,GAAGusB,YAAS/pC,CAAS,GAC1G,CAACyzB,EAAS+S,GAdE,KAgBTwD,GAAa5V,EAAAA,EAAAA,GACjB0V,EAAwB,CAACA,EAAwBrW,IAAU,GAqB7D,OAlBAzxB,EAAAA,EAAAA,KAAU,KACR,MAAMioC,EAAUD,IACVrP,EAAWF,GAAeD,EAChC,IAAKyP,IAAYtP,EAEf,YADAkP,OAAuB7pC,GAIzB,MAAM+B,EAASkoC,EAAQxoB,UAAU,GAC3ByoB,EAA0BvP,EAAS54B,QAAQooC,IAAOpoC,GAAUooC,EAAEF,QAAQf,WAAWnnC,KAEvF8nC,EACEK,GAAyBnmC,OAASmmC,OAA0BlqC,EAC7D,GACA,CAACgqC,EAAYvP,EAAaD,KAE7Bx4B,EAAAA,EAAAA,IAAU6kC,EAAsB,CAACA,EAAsBpT,IAEhD,CACLxH,OAAQ/rB,QAAQypC,GAAqB5lC,SAAW4iC,GAChD8C,MAAO7C,EACP+C,sBAEJ,CuB4kBMS,CACFlqC,QAAQq+B,IACHxC,GACAtE,KACEgD,IAAeA,IAAa12B,QAAWy2B,IAAiBz2B,SAC/D0vB,GACAgH,GACAD,IpBzmBaj6B,KAgBX,IAhBY,MAChBk4B,EAAK,OACLn5B,EAAM,SACN2V,EAAQ,QACRwe,EAAO,QACPkK,EAAO,cACPjd,EAAa,WACb+M,GASDltB,EACC,MAAM,UAAE8pC,EAAS,WAAE5N,EAAU,iBAAE6N,IAAqB1pC,EAAAA,EAAAA,MAE9C2pC,GAAepnC,EAAAA,EAAAA,KAAO,IAE5BnB,EAAAA,EAAAA,KAAU,KACR,MAAMqc,EAAOoV,IACP+W,OAAkCxqC,IAAnBy4B,GAAOgS,SACxB7I,EAAAA,EAAAA,GAA0BnJ,KAAWpa,GAASmsB,EAGhDD,EAAa5mC,SAAU,EAFvB4mC,EAAa5mC,SAAU,CAGzB,GACC,CAAC80B,EAAOhF,KACXzxB,EAAAA,EAAAA,KAAU,KACRuoC,EAAa5mC,SAAU,CAAK,GAC3B,CAACrE,EAAQ2V,IAEZ,MAAMy1B,EAAYxqC,QAAQwgB,GAEpBiqB,GAAcvkC,EAAAA,EAAAA,IAAgB,WAA4D,IAA3DwkC,EAAiDn/B,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG,CAAC,EACxF,GAAIgiB,GAAcid,IAAcH,EAAa5mC,QAAS,OAEtD,MAAM0a,EAAOoV,IAETpV,EACFgsB,EAAU,CACR/qC,OAAQsrC,EAAUtrC,QAAUA,EAC5B2V,SAAU21B,EAAU31B,UAAYA,EAChCwjB,OAAO9W,EAAAA,EAAAA,IAAkBtD,KAG3Boe,EAAW,CACTn9B,OAAQsrC,EAAUtrC,QAAUA,EAC5B2V,SAAU21B,EAAU31B,UAAYA,GAGtC,IAEM41B,GAA2BC,EAAAA,GAAAA,GAAgBC,EAAAA,KAAgB,OAAM/qC,EAAW,CAACV,EAAQ2V,KAG3F+1B,EAAAA,GAAAA,IAA4BlpC,IAA2C,IAAzCi+B,EAAYkL,EAAcC,GAAUppC,EAChE,GAAI2rB,EACF,OAEF,MAAM0d,EAAYZ,EAAa5mC,QAE/B,GAAIrE,IAAWygC,GAAc9qB,IAAag2B,EAAc,CACtD,GAAIE,IAAc1S,EAAO,OAKzB,IAJKA,GAASyS,GACZvN,EAAQ,IAGNwN,EAAW,MACjB,CAEA,GAAIzqB,IAAkB+X,EACpB,OAGFkF,GAAQiE,EAAAA,EAAAA,GAA0BnJ,IAElC,MAAM2S,EAAiB3S,EAAMvU,UACzBriB,KAAK+V,GAAWA,EAAO8C,OAAS6I,GAAAA,GAAsBE,aAAe7L,EAAOyzB,aAC7EtpC,OAAO7B,UAAY,GAClBkrC,EAAernC,QAAQumC,EAAiB,CAAEgB,IAAKF,IAE9C5e,EAAAA,KACHiV,EAAAA,EAAAA,KAAoB,KAClB,MAAMV,EAAennB,SAASkY,cAA8ByZ,EAAAA,KACxDxK,IACFW,EAAAA,EAAAA,GAAqBX,GAAc,EACrC,GAEJ,GACC,CAACzhC,EAAQ2V,EAAUwjB,EAAOhF,EAASkK,EAASjd,EAAe+M,KAG9DzrB,EAAAA,EAAAA,KAAU,KACR,IAAIyrB,EAIJ,MAAO,KACAid,GACHC,EAAY,CAAErrC,SAAQ2V,aA7G5B4P,IAAW,GAEXmD,EAAAA,EAAAA,KAAe,KACbnD,IAAW,CAAK,GA6GN,CACT,GACA,CAACvlB,EAAQ2V,EAAUy1B,EAAWC,EAAald,IAE9C,MAAM+d,GAAY/F,EAAAA,EAAAA,GAAYnmC,GACxBmsC,GAAchG,EAAAA,EAAAA,GAAYxwB,IAChCjT,EAAAA,EAAAA,KAAU,KACR,GAAIyrB,GAAc5I,GAChB,OAGF,IAAK4O,IAGH,YAFAkX,IAKF,MAAMe,EAAeF,EAAU7nC,QACzBgoC,EAAiBF,EAAY9nC,QAEnCknC,GAAyB,KACnBW,EAAU7nC,UAAY+nC,GAAgBD,EAAY9nC,UAAYgoC,GAChEhB,GACF,GACA,GACD,CAACa,EAAW/X,EAAShG,EAAYod,EAA0BY,EAAad,KAE3EiB,EAAAA,GAAAA,GAAkBjB,IAClBkB,EAAAA,GAAAA,GAAgBlB,EAAY,EoBue5BmB,CAAS,CACPrT,SACAn5B,UACA2V,YACAwe,WACAkK,WACAjd,cAAe8X,GACf/K,WAAY+Q,KAGd,MAAMuN,IAAgB3lC,EAAAA,EAAAA,IAAgB,WAAoBqF,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,IAEtDkyB,GAAQ,IAGVnd,GAAemiB,EAAAA,GACfliB,QAAYzgB,GAEZ6lC,KACAM,KACAI,KACAiB,KAEI99B,EAEFnD,YAAW,IAAMm9B,MAlaY,KAoa7BA,IAEJ,KAEOsI,GAAoBC,GAAkBhe,InBppB5Bie,EACjBzY,EACAkK,EACAjd,EACAqrB,EACAhI,EACAzkC,EACA2V,EACAyF,EACA+d,EACAZ,EACAnJ,KAEA,MAAM,YAAEyd,EAAW,gBAAEC,EAAe,qBAAExY,IAAyBhzB,EAAAA,EAAAA,OACxDqtB,EAAwBoe,IAA6BviC,EAAAA,EAAAA,KAAS,IAErEiN,EAAAA,EAAAA,IAAsBxW,IAA2C,IAAzC+rC,EAAmBC,GAAiBhsC,EAC1D,IAAKmgB,EACH,OAGF,GAAIgO,GAAgB6d,IAAqB7d,EAGvC,OAFAiP,EAAQ,SACR0O,GAA0B,GAI5B,GAAIC,GAAmBrsC,KAAOygB,EAAczgB,IAAMyuB,IAAiB6d,EACjE,OAGF,MAAMtpC,GAAQqpC,GAAqBzU,GAAc50B,KAAKc,OAAS8zB,EAAenX,EAAcvX,QAAQlG,KAC9Fob,GAAOujB,EAAAA,EAAAA,GAA0B3+B,GAEvC06B,EAAQtf,GACRguB,GAA0B,IAE1B5K,EAAAA,EAAAA,KAAoB,KAClB,MAAMV,EAAennB,SAASkY,cAA8ByZ,EAAAA,KACxDxK,IACFW,EAAAA,EAAAA,GAAqBX,GAAc,EACrC,GACA,GACD,CAACrgB,EAAegO,EAAcmJ,EAAc8F,KAE/C37B,EAAAA,EAAAA,KAAU,KACR,IAAK0e,EACH,OAGF,MAAM8rB,IAAuB,YAAa9rB,EAAcvX,UACnDuX,EAAcvX,QAAQlG,MAAMihB,UAAU0L,MAAMhY,GAAWkN,GAAa/e,IAAI6R,EAAO8C,QAEpFkZ,EAAqB,CACnBt0B,SACA2V,WACAoe,UAAWmZ,GACX,GACD,CAACltC,EAAQ2V,EAAUyL,KAEtB1e,EAAAA,EAAAA,KAAU,KACR,GAAK0e,EACL,MAAO,KACL,MAAM+rB,GAAS9qB,EAAAA,EAAAA,IAAkB8R,KAC3BiZ,EAASD,EAAOxpC,KAAKc,OAAS0oC,OAASzsC,EAE7CosC,EAAgB,CACd9sC,SAAQ2V,WAAUyF,OAAMzX,KAAMypC,GAC9B,CACH,GACA,CAACptC,EAAQohB,EAAe+S,EAAS2Y,EAAiBn3B,EAAUyF,IAE/D,MAAMoZ,GAAsBC,EAAAA,EAAAA,KAAqB,KAC/C,IAAKrT,EAAe,OAAO,EAE3B,MAAM+rB,GAAS9qB,EAAAA,EAAAA,IAAkB8R,KACjC,QAAS,YAAa/S,EAAcvX,UAC/BuX,EAAcvX,QAAQlG,MAAMihB,UAAU0L,MAAMhY,GAAWkN,GAAa/e,IAAI6R,EAAO8C,UAC7E+xB,EAAOvoB,UAAU0L,MAAMhY,GAAWkN,GAAa/e,IAAI6R,EAAO8C,OAAO,GACvE,CAACgG,EAAe+S,GAjFD,KAiFwB,GAEpCkZ,GAAmCvY,EAAAA,EAAAA,GAAiBN,EAAqB,CAACA,EAAqBL,IAAU,IAE/G1c,EAAAA,EAAAA,IAAsBjV,IAAyB,IAAvBwqC,GAAkBxqC,EACnC4e,GAAiB4rB,GAAmBrsC,KAAOygB,EAAczgB,IAI1D0sC,KACF/Y,EAAqB,CACnBt0B,SACA2V,WACAoe,WAAW,GAEf,GACC,CAAC3S,EAAephB,EAAQm0B,EAASxe,EAAU03B,IAE9C,MAAMC,GAA8BxmC,EAAAA,EAAAA,IAAgB,KAC7CqyB,IAGLzQ,EAAAA,EAAAA,KAAe,KACb2V,GAAQiE,EAAAA,EAAAA,GAA0BnJ,KAGlCgJ,EAAAA,EAAAA,KAAoB,KAClB,MAAMV,EAAennB,SAASkY,cAA8ByZ,EAAAA,KACxDxK,IACFW,EAAAA,EAAAA,GAAqBX,GAAc,EACrC,GACA,GACF,IAGEkL,GAAmB7lC,EAAAA,EAAAA,IAAgB,KACvC2lC,IACAa,GAA6B,IAGzBZ,GAAqB5lC,EAAAA,EAAAA,IAAgB,KACzC,MAAM,KAAEnD,EAAI,SAAEihB,IAAavC,EAAAA,EAAAA,IAAkB8R,KAExC/S,IAIAzd,IAAS4pC,EAAAA,EAAAA,IAAgBnsB,IAK9ByrB,EAAY,CACVW,YAAa,CAAExtC,SAAQ2V,WAAUyF,QACjCzX,OACAihB,aAGF6nB,IACAa,KAXE7I,IAW2B,IAGzBgJ,GAAa3mC,EAAAA,EAAAA,IAAgB,KACjC,IAAKsa,EAAe,OACpB,MAAM+rB,GAAS9qB,EAAAA,EAAAA,IAAkB8R,KAC3BiZ,EAASD,EAAOxpC,KAAKc,OAAS0oC,OAASzsC,EAE7CosC,EAAgB,CACd9sC,SAAQ2V,WAAUyF,OAAMzX,KAAMypC,GAC9B,IAMJ,OAHAd,EAAAA,GAAAA,GAAkBmB,IAClBlB,EAAAA,GAAAA,GAAgBkB,GAET,CAACf,EAAoBC,EAAkBhe,EAAuB,EmB0fEie,CACrEzY,GACAkK,GACAnF,GACAuT,GACAhI,GACAzkC,GACA2V,GACAiZ,GACAuK,GACAZ,GACAnJ,IAIIse,IAAmBvH,EAAAA,EAAAA,GAAYsG,IAC/BkB,IAAwBxH,EAAAA,EAAAA,GAAYpB,KAC1CriC,EAAAA,EAAAA,KAAU,IACD,KAELirC,GAAsBtpC,UAEtBqpC,GAAiBrpC,SAAS,GAE3B,CAACrE,GAAQ2V,GAAU+3B,GAAkBC,KAExC,MAAMC,IAAqC9mC,EAAAA,EAAAA,IAAgB,KACzD,MAAM+mC,EAAqB3N,GAA8B77B,QAWvDwS,GAVGg3B,EAUc,CACfvlC,QAAS/G,GAAK,2BACdusC,OAAQ,CACNA,OAAQ,WACRC,QAAS,CAAEptC,GAAIw2B,GAAe6W,sBAAsB,IAEtDC,WAAY1sC,GAAK,SAfF,CACf+G,QAAS/G,GAAK,0BACdusC,OAAQ,CACNA,OAAQ,mBACRC,QAAS,CAAEG,eAAgB,mBAE7BD,WAAY1sC,GAAK,iBAYrB2+B,GAA8B77B,QAAU8pC,QAAQN,EAAmB,IAG/DO,IAAkBpZ,EAAAA,EAAAA,IAAgB,IACjCyK,KAAmBxC,IAAe9I,OAAcwM,GAIjDzH,IAAkBvK,GACb+G,GAAgB2Y,MAGrB3I,EAAAA,IAAiCT,IAAyBxV,IAAkB0E,OAAcwM,GAI1F9G,EACKnE,GAAgB4Y,SAGlB5Y,GAAgB6Y,KAPd7Y,GAAgB8Y,OARhB9Y,GAAgB+Y,SAgBxB,CACDxJ,GAAsB/L,GAAgB/E,GAASwM,GAAgBlR,GAAcgQ,GAAiBxC,GAC9FtO,GAAwBkL,IAEpB6U,IAAyB7U,GAG7B9H,kBAAmB4c,GAAoB,kBACvC1c,GAAiB,uBACjBC,GAAsB,sBACtBC,KACEC,EAAAA,EAAAA,GAAuBgT,KAAiBgJ,KAAoB1Y,GAAgB6Y,MAAQG,MAGtF1c,oBAAqB4c,GACrB3c,kBAAmB4c,GACnBC,wBAAyBC,GACzB5c,sBAAuB6c,KACrB5c,EAAAA,EAAAA,GAAuBgM,IAAmBc,KAE9Cx8B,EAAAA,EAAAA,KAAU,KACJs5B,IAEA4S,KACF5Q,GAAwB,CACtB1mB,OAAQtX,GACR41B,QAASA,GACTqZ,SAAUL,KAEZI,KACF,GACC,CAAChvC,GAAQgvC,GAAkChT,GAAsBpG,GAASgZ,KAE7E5tB,GACEmX,IAA2B+G,GAC3BmD,GACAW,GACA7hB,GACA+X,IACCtI,KAAyBd,GAC1B8d,IAGF,MAAMsB,IAAsBpoC,EAAAA,EAAAA,IAAgB,KACtCoyB,IACFyT,IACF,IAGIwC,IAAqBroC,EAAAA,EAAAA,IAAgB,CAACnD,EAAcyrC,KACxD,MAAMC,EAAYD,EAAoBtT,GA/hBf,KAgiBvB,GAAIn4B,GAAMc,OAAS4qC,EAAW,CAC5B,MAAMC,EAAc3rC,EAAKc,OAAS4qC,EAYlC,OAXAjS,GAAW,CACT9wB,KAAM,CACJhE,QAAS,4CACTinC,WAAY,CACV,sBAAuBD,EAAYjyB,WACnC,aAAciyB,EAAc,EAAI,IAAM,IAExCE,aAAa,MAIV,CACT,CACA,OAAO,CAAI,IAGPC,IAAgB3oC,EAAAA,EAAAA,IAAgB,KACpC,GAAIwxB,KAAa8N,GAAS,CACxB,MAAM3E,EAAennB,SAASkY,cAA8BsK,IAEtD4S,GAAaC,EAAAA,EAAAA,MACbC,EAA0BjR,GAA2Bt6B,SACtDsI,KAAKe,MAAMgiC,EAAa/Q,GAA2Bt6B,SAClDwrC,EAAyBvX,GAASwX,cAAgBxX,GAASwX,aAAeJ,EAEhF,GACGE,GAA2BA,EAA0BtX,GAASyX,SAC5DF,EACH,CACA,MAAMG,EAAmBH,EACrBvX,GAASwX,aAAgBJ,EACzBpX,GAASyX,QAAUH,EAWvB,OAVAxS,GAAW,CACT9wB,KAAM,CACJhE,QAAS/G,GAAK,gBAAgB0R,EAAAA,EAAAA,IAAoB+8B,IAClDC,YAAY,EACZT,aAAa,KAIjB/N,GAAcyO,QAEP,CACT,CACF,CACA,OAAO,CAAI,IAGPC,IAAkBrpC,EAAAA,EAAAA,IAAgB/G,IAYlC,IAXJ6d,YAAawyB,EAAiB,eAC9BC,EAAiBtU,GAAmBuU,eAAc,YAClDC,EAAcxU,GAAmByU,kBAAiB,SAClDC,EAAQ,YACRC,GAOD3wC,EACC,IAAKm4B,KAAuBtC,GAC1B,OAGF,MAAM,KAAEjyB,EAAI,SAAEihB,IAAavC,EAAAA,EAAAA,IAAkB8R,OACxCxwB,GAASysC,EAAkB3rC,SAG3B0qC,GAAmBxrC,GAAM,IACzB8rC,OAELvS,GAAY,CACVsQ,YAAatV,GACbv0B,OACAihB,WACA8rB,cACAD,WACA9Z,+BACA/Y,YAAaD,EAAyByyB,EAAmBC,GACzDM,oBAAqBJ,IAGvB5R,GAA2Bt6B,SAAUsrC,EAAAA,EAAAA,MAErCxS,GAAW,CAAEn9B,UAAQ4wC,WAAW,KAGhCloB,EAAAA,EAAAA,KAAe,KACb+jB,IAAe,IACf,IAGEoE,IAAwB/pC,EAAAA,EAAAA,IAAgB,CAC5CupC,EACAE,EACAE,EACAC,KAEAP,GAAgB,CACdvyB,eACAyyB,iBACAE,cACAE,WACAC,eACA,IAGEI,IAAahqC,EAAAA,EAAAA,IAAgB8T,iBAAkD,IAA3C61B,EAAQtkC,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GAAUukC,EAAoBvkC,UAAA1H,OAAA,EAAA0H,UAAA,QAAAzL,EAC9E,IAAKw3B,KAAuBtC,GAC1B,OAGF,IAAImb,EAAqBnzB,GAEzB,GAAIqnB,GAAsB,CACxB,MAAM+L,QAAejM,KACrB,GAAIiM,EAAQ,CACV,MAAM,KAAEj2B,EAAI,SAAEpP,EAAQ,SAAEc,GAAaukC,EACrCD,EAAqB,OAAOl2B,EA/pBH,8BAiqBvBE,EACA,CAAEhR,MAAO,CAAE4B,WAAUc,cAEzB,CACF,CAEA,MAAM,KAAE9I,EAAI,SAAEihB,IAAavC,EAAAA,EAAAA,IAAkB8R,MAE7C,GAAI4c,EAAmBtsC,OAIrB,YAHA0rC,GAAgB,CACdvyB,YAAamzB,IAKjB,IAAKptC,IAAS8rB,GACZ,OAGF,IAAK0f,GAAmBxrC,GAAO,OAE/B,MAAM89B,EAAennB,SAASkY,cAA8BsK,IAE5D,GAAIn5B,EAAM,CACR,IAAK8rC,KAAiB,OAEtBvS,GAAY,CACVsQ,YAAatV,GACbv0B,OACAihB,WACA8rB,cACAD,WACA9Z,gCAEJ,CAEIlH,IACFZ,GAAgB,CACd6hB,cACAD,aAIJ9R,GAA2Bt6B,SAAUsrC,EAAAA,EAAAA,MAErCxS,GAAW,CAAEn9B,UAAQ4wC,WAAW,IAE5Bv2B,EAAAA,IAAUonB,GAAgBA,IAAiBnnB,SAASsH,eACtD1H,EAA8BunB,IAIhC/Y,EAAAA,EAAAA,KAAe,KACb+jB,IAAe,GAEnB,IAEMwE,IAAqBnqC,EAAAA,EAAAA,IAAgB,KACb,WAAxBw0B,IAAelgB,MAInByiB,GAAc,CACZ79B,UAAQ4c,IAAK0e,GAAc1e,IAAKjH,aAChC,IAGEu7B,IAA+BpqC,EAAAA,EAAAA,IAAgB,KACnDs9B,KACAJ,IAAoB,IAGhBmN,IAAwBrqC,EAAAA,EAAAA,IAAgB,CAC5CsqC,EAA4BV,EAAqBlD,KAEjD,GAAI4D,GAAQ,YAAaA,EAAM,CAC7B,MAAM,GAAEzwC,EAAE,QAAE0wC,EAAO,SAAEZ,GAAaW,EAQlC,YAPA1T,GAAoB,CAClB/8B,KACA0wC,UACAX,cACAD,WACAjD,eAGJ,CAEA,MAAM,SAAEiD,KAAaa,GAAaF,GAAQ,CAAC,EAE3C,GAAKA,GAAyC,IAAjChvC,OAAOouB,KAAK8gB,GAAU7sC,OAE5B,QAA4B/D,IAAxB0wC,EAAKf,qBAAqD3vC,IAArB0wC,EAAKb,YAA2B,CAC9E,MAAM,eAAEF,GAAiB,EAAK,YAAEE,GAAc,GAAUa,EACnDP,GAAsBR,EAAgBE,EAAaE,EAAUC,EACpE,MACExT,GAAY,IACPkU,EACH5D,cACAkD,qBARGI,GAAWlwC,QAAQ6vC,GAAWC,EAUrC,KAGFj5B,EAAAA,EAAAA,IAAsB3C,IAAgC,IAA9By8B,GAAyBz8B,EAC3CojB,IAAsByC,IAAwBA,KAAyB4W,GACzEpR,IAAiBuQ,IACfS,GAAsBxW,GAAsB+V,EAAaxY,GAAmB,GAEhF,GACC,CAACyC,GAAsBzC,GAAoBiZ,GAAuBhR,MAErEz9B,EAAAA,EAAAA,KAAU,KACJi1B,KACF0G,GAAQ1G,IACRiG,MAEAuE,EAAAA,EAAAA,KAAoB,KAClB,MAAMV,EAAennB,SAASonB,eAAe3E,KAC7CqF,EAAAA,EAAAA,GAAqBX,GAAc,EAAK,IAE5C,GACC,CAAC1E,GAAiBpF,GAAoBiG,GAAwBS,MAEjE37B,EAAAA,EAAAA,KAAU,KACJm1B,IAAqBpzB,SAClB4mB,GAAiBwM,IACtB+F,KACF,GACC,CAACvS,GAAkBwM,GAAqB+F,KAE3C,MAAM4T,IAA0B1qC,EAAAA,EAAAA,IAAgB,CAAC07B,EAAmBlB,KAC7DkB,EAAMiP,QAAW7gB,IAAyBd,GAK/CyS,GAAiCC,EAAOlB,GAJtCsM,IAIgD,IAG9C8D,IAAyC5qC,EAAAA,EAAAA,IAAiB07B,IAC9DgP,GAAwBhP,EAAO1gB,EAAAA,IAAwB,IAGnD6vB,IAAkB7qC,EAAAA,EAAAA,IAAgB,CAAC8qC,EAAenB,EAAoBoB,MACrE3Z,IAAuBtC,MAIxBiE,GAAkBgY,GACpBxS,KACAc,IAAiBuQ,IACfpR,KACA6R,GAAsB,CAAES,MAAKnB,YAAYC,EAAaxY,KACtDxP,EAAAA,EAAAA,KAAe,KACb+jB,IAAc,EAAK,GACnB,MAGJvP,GAAY,CAAEsQ,YAAatV,GAAoB0Z,MAAKnB,cACpD/nB,EAAAA,EAAAA,KAAe,KACb+jB,IAAc,EAAK,KAEvB,IAGIqF,IAAsBhrC,EAAAA,EAAAA,IAAgB,SAC1C/B,EACA0rC,EACAoB,GAGG,IAFHE,EAAmB5lC,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GACnB6lC,EAAmC7lC,UAAA1H,OAAA,EAAA0H,UAAA,QAAAzL,GAE9Bw3B,IAAuBtC,MAI5B7wB,EAAU,IACLA,EACHktC,qBAAqB,GAGnBpY,GAAkBgY,GACpBxS,KACAc,IAAiBuQ,IACfpR,KACA6R,GAAsB,CAAEpsC,UAAS0rC,YAAYC,EAAaxY,KAC1DxP,EAAAA,EAAAA,KAAe,KACb+jB,GAAcsF,EAAoB,GAClC,MAGJ7U,GAAY,CACVsQ,YAAatV,GACbnzB,UACA0rC,WACA9Z,4BAA6BA,IAA+Bqb,KAE9DtpB,EAAAA,EAAAA,KAAe,KACb+jB,GAAcsF,EAAoB,KAGxC,IAEMG,IAAwBprC,EAAAA,EAAAA,IAAgB,CAC5CqrC,EAA4D1B,EAAoBoB,KAEhF,IAAK3Z,KAAuBtC,GAC1B,OAGEiE,GAAkBgY,EACpB1R,IAAiBuQ,IACfS,GAAsB,CACpBxwC,GAAIwxC,EAAaxxC,GACjB0wC,QAASc,EAAad,QACtBZ,YACCC,EAAaxY,GAAoB,IAGtCwF,GAAoB,CAClB/8B,GAAIwxC,EAAaxxC,GACjB0wC,QAASc,EAAad,QACtBZ,WACAjD,YAAatV,KAIjB,MAAMuJ,EAAennB,SAASkY,cAA8BsK,IACxDziB,EAAAA,IAAUonB,GAAgBA,IAAiBnnB,SAASsH,eACtD1H,EAA8BunB,GAGhCtE,GAAW,CAAEn9B,UAAQ4wC,WAAW,KAChCloB,EAAAA,EAAAA,KAAe,KACb+jB,IAAe,GACf,IAGE2F,IAAyBtrC,EAAAA,EAAAA,IAAgB,KAC7Cq2B,GAAW,CAAEn9B,UAAQ4wC,WAAW,KAChCloB,EAAAA,EAAAA,KAAe,KACb+jB,IAAe,GACf,IAGE4F,IAAiBvrC,EAAAA,EAAAA,IAAiBwrC,IACjCpa,KAID2B,GACFsG,IAAiBuQ,IACfS,GAAsB,CAAEmB,QAAQ5B,EAAaxY,GAAmB,IAElEoF,OAEAJ,GAAY,CAAEsQ,YAAatV,GAAoBoa,SAC/ChV,MACF,IAGIiV,IAAazrC,EAAAA,EAAAA,IAAiB0rC,IAClC,GAAI3Y,EACFsG,IAAiBuQ,IACfS,GAAsB,IAAKqB,EAAgB/B,UAAU,GAAQC,EAAaxY,GAAoB,SAE3F,GAAIsa,IAAmB,mBAAoBA,GAAkB,gBAAiBA,GAAiB,CACpG,MAAM,eAAEnC,GAAiB,EAAK,YAAEE,GAAc,GAAUiC,EACnD3B,GAAsBR,EAAgBE,GAAa,EAC1D,MACOO,IAAW,EAClB,IAGI2B,IAAuB3rC,EAAAA,EAAAA,IAAgB,KAC3C,MAAM26B,EAAennB,SAASkY,cAA8BsK,IAE5D,IAAK1yB,GAAYq3B,IAAiBnnB,SAASsH,cAIzC,OAHAqiB,KACAG,UACAE,KAIF7C,GAAcyO,OACdjpC,YAAW,KACTg9B,KACAG,KACAE,IAAgB,GA77BgB,IA87BD,KAGnC5hC,EAAAA,EAAAA,KAAU,KACHy+B,IAEL9C,GAAQ,GAAG,GACV,CAAC8C,GAAmB9C,GAASzgB,KAEhC,MAAM80B,IAA2C5rC,EAAAA,EAAAA,IAAiBnD,IAChEsd,GAA0Btd,EAAMme,EAAAA,IAAwB,IAGpD6wB,IAAe7rC,EAAAA,EAAAA,IAAgB,WAAiC,IAAhCw6B,EAASn1B,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG4wB,GAChD,MAAMwE,EAAY55B,OAAO65B,eAEzB,GAAID,EAAUI,WAAY,CACxB,MAAMC,EAAiBL,EAAUM,WAAW,GAC5C,IAAIC,EAAAA,EAAAA,GAAuBF,EAAgBN,GAEzC,YADAhnB,SAASs4B,YAAY,UAAU,EAGnC,CAEAvU,GExtCW,SAA6Ctf,GAC1D,MAAM8zB,EAAYv4B,SAASnX,cAAc,OACzC0vC,EAAUC,gBAAkB,OAC5BD,EAAU1rC,MAAM8nC,SAAW,WAC3B4D,EAAU1rC,MAAMgK,KAAO,WACvB0hC,EAAU1rC,MAAM4rC,IAAM,WACtBF,EAAUhwB,UAAY9D,EACtB8zB,EAAU3xC,UAAY,kBACtBoZ,SAASE,KAAKC,YAAYo4B,GAC1B,IAAIG,EAAUH,EAAUI,UAExB,GAAID,EAAQC,UAEV,KAAOD,EAAQC,WACbD,EAAUA,EAAQC,UAKtB,MAAMC,EAAaF,EAAQ9yB,YAAazb,OAClC0uC,EAAQ74B,SAAS84B,cACjB7R,EAAY55B,OAAO65B,eAGzB2R,EAAME,SAASL,EAASE,GACxBC,EAAMG,OAAON,EAASE,GACtB3R,EAAUgS,kBACVhS,EAAUiS,SAASL,GACnB74B,SAASs4B,YAAY,UAAU,GAE/B,MAAM5kC,EAAS6kC,EAAUhwB,UAGzB,OAFAvI,SAASE,KAAKi5B,YAAYZ,GAEnB7kC,CACT,CFsrCY0lC,CAAoCvf,MAC9C,IAEMwf,IAA8B7sC,EAAAA,EAAAA,IAAgB,KAClD6rC,GAAa7wB,EAAAA,IAAwB,IAGjC8xB,IAA0B9sC,EAAAA,EAAAA,IAAgB,KAC9C02B,GAAS,CACP78B,GAAIX,GAAQ2V,YAAUyF,KAAM,YAAawW,mBAAmB,GAC5D,KAGJlvB,EAAAA,EAAAA,KAAU,KACJ82B,IAAsBpvB,GACxBg6B,IACF,GACC,CAAC5K,GAAoB4K,GAAiBh6B,KAEzC1H,EAAAA,EAAAA,KAAU,KACH+5B,IAED/C,GACFkL,KAEA39B,YAAW,KACT49B,IAAa,GA/+Ba,KAi/B9B,GACC,CAACnL,GAAoBmL,GAAaD,GAAcnI,IAEnD,MAAMoX,GAAoB7d,IAAyC,WAAxBsF,IAAelgB,OAAsB8d,GAC1E4a,IAAsB9e,EAAAA,EAAAA,IAAgB,IACnC6e,KAAsB1f,OAAc8Q,IAC1C,CAAC4O,GAAmB1f,GAAS8Q,MAEzB8O,GAAyBC,KAAwBnyC,EAAAA,EAAAA,KAAQ,IAC1Dy2B,IAAUwX,aACL,CAAC,eAAgBxX,GAASwX,cAG/BxT,IAAa2X,aAAe/U,GACvB,CAAC,wBAAyB5C,GAAY2X,aAGxC,IACN,CAAC/U,GAAiB5G,IAAUwX,aAAcxT,IAAa2X,cAEpDC,GAAqBtQ,IAAqBM,IAAoBoC,IAAsBjC,IACrF4D,IAAwBK,IAA0B9D,IAAqBT,IAAwBxZ,IAC/Fyc,IAAwBkD,IAA2BtD,IAA4BkN,IACjFnF,IAAwB/tC,QAAQqkC,KAAyBrnB,GAAYnZ,OAAS,GAAKg7B,GAChF0U,GAAyBD,KAAuBlY,IAAwBkD,KAAoB3U,KAC5F2Z,IAENxhC,EAAAA,EAAAA,KAAU,KACJwxC,GACFvX,MAEAC,KACF,GACC,CAACsX,GAAoBtX,EAAQD,IAEhC,MACE/5B,aAAcwxC,GACdvxC,qBAAsBwxC,KACpBvxC,EAAAA,EAAAA,GAAkBqxC,IAChBG,KAA6BlG,KAAoB1Y,GAAgB8Y,QAChE/kB,IAAmB2O,IAA0B4I,IAE9CuT,IAAoBztC,EAAAA,EAAAA,IAAgB,KACxC,OAAQsnC,IACN,KAAK1Y,GAAgB+Y,QACnBxR,OACA,MACF,KAAKvH,GAAgB6Y,KACduC,KACL,MACF,KAAKpb,GAAgB8Y,OACf8F,GACGlc,GAIO4I,IACVjD,GAAoC,CAAE/9B,YAJtC6W,GAAiB,CACfvO,QAAS/G,GAAK,mCAAoCtB,IAAM+R,SAMvD8yB,KAEP,MAEF,KAAKpP,GAAgB2Y,KACnB3B,KACA,MACF,KAAKhX,GAAgB4Y,SAInB,GAHIrJ,IACFD,MAEG9M,GACH,OAGFiI,IAAiBuQ,IACfS,GAAsB,CAAC,EAAGT,EAAaxY,GAAoB,IAKjE,IAGI8U,IAAoBnO,EAAAA,EAAAA,GAAY3F,IAAgB,GAChDsb,GAAwBtb,IAAkB8T,GAE1CyH,GAAuB,IAAIj3B,KACjCi3B,GAAqBC,WAAW,GAChCD,GAAqBE,gBAAgB,GAErC,MAAMC,GAAmB,IAAIp3B,KAC7Bo3B,GAAiBC,YAAYD,GAAiBE,cAAgB,GAE9D,IAAIC,GAAsB,cAC1B,OAAQ3G,IACN,KAAK1Y,GAAgB+Y,QACnBsG,GAAsB,UACtB,MACF,KAAKrf,GAAgB2Y,KACnB0G,GAAsB,sBACtB,MACF,KAAKrf,GAAgB8Y,OACnBuG,GAAuBtrB,GAEnB,uBADA,sCAIR,MAAMnX,IAAgBlP,EAAAA,EAAAA,GACpB,YACCs2B,IAAsB,QACvBiL,IAAmB,iBACnBpG,IAAa,UACbr9B,IAGI8zC,IAAuBluC,EAAAA,EAAAA,IAAiBmuC,IAC5C,IAAItxC,EACAihB,EAEJ,GAAI,aAAcqwB,EAChBtxC,EAAOsxC,EAASlV,aACX,CACL,MAAMh7B,GAAUhD,EAAAA,EAAAA,MAAYs4B,aAAap4B,KAAKgzC,EAASlJ,YACvD,IAAKhnC,EACH,OAGF,IAAKA,EAAQ0sC,SAAW7gB,KAAyBd,GAE/C,YADA8d,KAGF,MAAMsH,GAAqB7yB,EAAAA,EAAAA,KAAkBogB,EAAAA,EAAAA,IAAqB19B,IAClEpB,EAAOuxC,EAAmBvxC,KAC1BihB,EAAWswB,EAAmBtwB,QAChC,CAEAsY,GAAY,CAAEv5B,OAAMihB,WAAUuwB,YAAY,IAC1ClX,IAAqB,IAGjBmX,IAA2BtuC,EAAAA,EAAAA,IAAiBmoC,IAChDjR,GAAwB,CACtB1mB,OAAQtX,GACR41B,QAASA,GACTqZ,WACAoG,eAAe,GACf,IAGEC,IAAkBxuC,EAAAA,EAAAA,IAAgB,KACtC,MAAMmuC,EAAWrc,QAAoBl4B,EAAYs/B,EAAAA,IACjD9B,GAAkB,CAChB5mB,OAAQtX,GACR41B,QAASA,GACT2f,aAAaC,EAAAA,EAAAA,IAAYx1C,GAAQ41B,IACjCqf,YACA,IAGEQ,IAAsB3uC,EAAAA,EAAAA,IAAgB,KAC1Cq5B,IAAiBuQ,IACfS,GAAsB,CAAC,EAAGT,EAAaxY,GAAoB,GAC3D,IAGEwd,IAAmB5uC,EAAAA,EAAAA,IAAgB,KACvCyrC,IAAY,IAGRoD,IAAuB7uC,EAAAA,EAAAA,IAAgB,KAC3CqqC,GAAsB,CAAC,EAAGyE,EAAAA,IAAuB1d,GAAoB,IAGjE2d,IAAiC/uC,EAAAA,EAAAA,IAAgB,CAACupC,EAAyBE,KAC/EpQ,IAAiBuQ,IACfS,GAAsB,CAAEd,iBAAgBE,eAAeG,EAAaxY,GAAoB,GACxF,IAGE4d,IAA8BhvC,EAAAA,EAAAA,IAAgB,CAACupC,EAAyBE,KAC5EgC,GAAW,CAAElC,iBAAgBE,eAAc,IAGvCwF,GAAS3H,KAAoB1Y,GAAgB2Y,KAC/C3B,GACA0B,KAAoB1Y,GAAgB4Y,SAAWmH,GAC7C3E,GAEAkF,GAAkBhgB,IAAyC,aAAxBsF,IAAelgB,OAAwB8d,KAC3D,IAAhBiC,KAA0B8J,GAE/B,OACE/hC,EAAAA,GAAAC,cAAA,OAAKjC,UAAWoR,IACb2sB,IAAmBxV,IAAkBgT,GACpCv5B,EAAAA,GAAAC,cAACowB,GAAQ,CACP5G,OAAQ6P,IAAkByZ,GAAAA,EAAcC,KACxCC,UAAW3Z,IAAkByZ,GAAAA,EAAcG,WAAaxX,KAAsBqX,GAAAA,EAAcG,UAC5FC,OAAQ3Z,EACRvS,aAAckB,KAGjB+oB,IACClxC,EAAAA,GAAAC,cAACmzC,GAAAA,EAAgB,CACfvd,aAAcA,GACdwd,sBAAuBzd,GACvB0d,iBAAkBxB,GAClByB,WAAS,EACTha,QAASA,EACTP,cAAeA,GACftL,qBAAsBA,GACtBwL,sBAAuBA,GACvBsa,WAAYtB,GACZl0C,UAAWmzC,KAGfnxC,EAAAA,GAAAC,cAACimB,GAAe,CACdppB,OAAQA,GACR2V,SAAUA,GACV+4B,sBAAuBA,GACvB9wB,YAAaA,GACbuW,QAASA,GACTsI,QAASA,EACTnR,yBAA0BA,GAC1BqX,uBAAwBA,GACxBC,kBAAmBA,GACnBzK,wBAAyBA,GACzBwe,aAAc1X,GACdpF,eAAgBA,EAChB+c,eAAgB1X,GAChB4D,gBAAiBA,GACjB+T,aAAcf,GACdC,OAAQlF,GACRiG,gBAAiBjB,GACjBkB,aAAclU,GACd/R,QAASiS,GACTiU,oBAAqBhU,GACrBiU,oBAAqBvF,GACrBwF,eAAgBvD,GAChBwD,cAAezE,KAEjBxvC,EAAAA,GAAAC,cAACuwB,GAAS,CACR/G,OAAQqN,GAAUrN,OAClByqB,OAAQpd,GAAUod,OAClBC,kBAAmB9d,GACnBzI,QAASwM,GACTyY,OAAQ1D,KAETmC,IACCtxC,EAAAA,GAAAC,cAACsyB,GAAkB,CACjB9I,OAAQ6X,GACR8S,WAAgC,cAApB1oB,GACZ7B,QAAS2X,GACTp8B,QAASksC,KAGbtxC,EAAAA,GAAAC,cAACwwB,GAAU,CACThH,OAAQ0X,GACRtX,QAASwX,GACTvkC,OAAQA,GACRu3C,iBAAkBlgB,GAClBC,cAAeA,GACf1G,qBAAsBA,KAExB1tB,EAAAA,GAAAC,cAACswB,GAAc,CACb9G,OAAQsb,GACRuP,cAAepP,GACfqP,iBAAkBtP,GAClBpb,QAASmb,KAEXhlC,EAAAA,GAAAC,cAACyqB,GAAiB,CAChBjB,OAAQud,GACRwN,aAAc92C,QAAQs6B,IACtBC,YAAamP,GACbnW,QAASA,GACT9wB,QAAS+uC,GACTrlB,QAASqd,KAEXlnC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,mBAAoB87B,IAAmB,sBACpEh8B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,eAAe8N,MAAM,IAAIC,OAAO,MAC7C/L,EAAAA,GAAAC,cAAA,YACED,EAAAA,GAAAC,cAAA,UACEuM,EAAE,OACFC,EAAE,SACFX,MAAM,OACNC,OAAO,SACP0oC,YAAY,oBACZh3C,GAAG,oBAEHuC,EAAAA,GAAAC,cAAA,YAAUy0C,GAAG,IAAIC,GAAG,cAAc7pC,OAAO,uBACzC9K,EAAAA,GAAAC,cAAA,kBAAgB20C,aAAa,IAAID,GAAG,qBAAqB7pC,OAAO,qBAChE9K,EAAAA,GAAAC,cAAA,iBACEd,OAAO,4EACPw1C,GAAG,uBAIT30C,EAAAA,GAAAC,cAAA,KAAG0J,KAAK,OAAO,YAAU,WACvB3J,EAAAA,GAAAC,cAAA,QAAM40C,EAAE,0FAA0FlrC,KAAK,OAAOpK,OAAO,2BACrHS,EAAAA,GAAAC,cAAA,QAAM40C,EAAE,0FAA0FlrC,KAAK,OAAO3L,UAAU,aAG3H+9B,IACC/7B,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAACqwB,GAAgB,CACf7G,OAAQ2b,GACRC,MAAOC,GACPC,UAAWC,GACXM,iBAAkBA,GAClBL,SAAUC,GACVC,cAAeC,GACfO,SAAUC,GACV0O,gBAAiBloB,GACjBgR,YAAaA,GACblQ,qBAAsBA,GACtBqnB,eAAgB/F,GAChBnlB,QAASmc,KAEXhmC,EAAAA,GAAAC,cAAC+0C,GAAuB,CACtBpnB,QAASoe,GACTvgB,uBAAwB/tB,QAAQ+tB,IAA0BuK,MAE5Dh2B,EAAAA,GAAAC,cAACg1C,GAAc,CACbn4C,OAAQA,GACR2V,SAAUA,GACVwe,QAASA,GACThG,YAAa4S,IAAuBJ,MAI1Cz9B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,yBACZ+9B,IACC/7B,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACG8/B,IACC3wC,EAAAA,GAAAC,cAACi1C,GAAa,CACZzrB,OAAQmnB,GACRnwC,KAAM23B,GAAc33B,KACpBwqB,WAAYvtB,QAAQqkC,IACpB5hC,QAAS4tC,KAGZ+E,IACC9yC,EAAAA,GAAAC,cAACmpB,GAAAA,EAAqB,CACpBprB,WAAWkC,EAAAA,EAAAA,GAAe,eAAgB2gC,IAAwB,aAClErgC,OAAK,EACL6pB,cAA0B7sB,IAAhBy6B,GACV9nB,MAAM,cACNkZ,WAAY2kB,GACZ39B,UAAU,6BAEVrQ,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,mCAGhBi+B,KAAkB1H,IAAcC,KAC/Bx0B,EAAAA,GAAAC,cAACM,GAAAA,EAAM,CACLC,OAAK,EACL2P,MAAM,cACNhQ,QAASghC,GAAmBE,GAAkBkO,GAC9Cl/B,UAAWhS,GAAK,sBAChBL,WAAWkC,EAAAA,EAAAA,GACT,iBACAo9B,GAA6Bn8B,SAAW,qBAG1CnB,EAAAA,GAAAC,cAACI,GAAAA,EAAM,CACLD,KAAMm0B,IAAcC,GACpBxwB,KAAK,aAMZi6B,IAAqBL,IAAeD,KACrC39B,EAAAA,GAAAC,cAACk1C,GAAAA,EAAgB,CACfr4C,OAAQA,GACR2V,SAAUA,GACVvL,SAAUA,EACVqyB,QAASA,EACTyH,iBAAkBA,GAClBC,eAAgBA,GAChBC,gBAAiBA,GACjBvD,gBAAiBA,GACjBC,YAAaA,GACbwX,kBAAmBrZ,GACnBsZ,YAAa5G,GACb6G,gBAAiB1G,GACjBmF,oBAAqBzF,GACrB0F,eAAgBvE,GAChBwE,cAAel2B,GACfgjB,oBAAqBA,GACrBM,gBAAiBA,GACjBnF,mBAAoBA,GACpB6B,kBAAmBE,GACnBsX,iBAAkB3b,GAClB4b,SAAUt9B,EACVw7B,eAAgB1X,KAGpBh8B,EAAAA,GAAAC,cAACw1C,GAAAA,EAAY,CACXzwC,IAAKi2B,GACLx9B,GAAIq8B,GACJD,gBAAiBA,GACjB6b,kBAAmBx9B,EACnBy9B,aAAc3Z,GACdl/B,OAAQA,GACRihC,kBAAmBE,GACnBxrB,SAAUA,GACV8mB,QAASA,EACTp8B,UAAWsgC,GACXxM,QAASA,GACT2kB,YACE7T,IAAwBnG,IA/4CG,IAg5CvB,GACEqC,GAEA5/B,GAAK,kCADJu4B,IAA0B+C,IAAoBt7B,GAAK,WAG5DyyC,qBAAsBA,GACtBD,wBAAyBA,GACzBgF,kBAAmB3P,GACnB4P,aAAcvc,GAAWtE,KAA4BwI,IAAkB1B,GACvEga,oBAAqBtY,GACrBuY,oBAAqB9uC,GAAY85B,GACjCiV,4BAA6B7S,IAAsB2B,IAAwBK,GAC3E8Q,SAAU/a,GACV0X,OAAQA,GACRsD,kBAAmBjV,GACnBzH,QAAS+C,GACT9C,OAAQ+C,KAETV,IACC/7B,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACGinB,IAAsBp6B,QAAQ4nC,KAC7BtlC,EAAAA,GAAAC,cAACm2C,GAAAA,EAAO,CAACjmC,MAAM,SAEhBumB,IACC12B,EAAAA,GAAAC,cAACM,GAAAA,EAAM,CACLC,OAAK,EACL0vB,OAAK,EACLlyB,UAAU,mBACVmS,MAAM,cACNhQ,QAASuwC,GACTrgC,UAAU,2BAEVrQ,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,wBAGhBN,QAAQq2B,MAA0BgO,KAAyB/L,IAC1Dh2B,EAAAA,GAAAC,cAACmpB,GAAAA,EAAqB,CACpBprB,UAAW0iC,GAAoB,YAAc,GAC7ClgC,OAAK,EACL2P,MAAM,cACNkZ,WAAYsX,GACZtwB,UAAU,6BAEVrQ,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,4BAKpB+jC,IAAwBrkC,QAAQskC,KAC/BhiC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,oBACbq4C,EAAAA,EAAAA,IAA0BrU,GAAoBG,GAAmBhhC,UAGtEnB,EAAAA,GAAAC,cAACq2C,GAAU,CACTx5C,OAAQA,GACR2V,SAAUA,GACV6T,iBAAkByb,KAAyB/L,GAC3CzP,eAAgBA,GAChBC,eAAgBA,GAChBC,cAAeA,GACfC,cAAeA,GACfC,iBAAkBA,GAClBC,cAAeA,GACfK,aAAckB,GACdf,aAAc+S,GACdpT,YAAa4P,EACb9P,WAAYkV,GAAkBlV,QAAarpB,EAC3CspB,SAAUyR,GACVvR,uBAAwBA,GACxB7hB,MAAOA,GACP+hB,WAAYwV,GACZvV,YAAawV,KAEdZ,IAAmBr+B,QAAQq2B,KAC1B/zB,EAAAA,GAAAC,cAACs2C,GAAe,CACd3nC,UAAWmlB,GACXtK,OAAQiX,GACR7W,QAAS+W,KAGZ7E,IAAmB9D,IAClBj4B,EAAAA,GAAAC,cAACwqB,GAAc,CACbhB,OAAQoX,GACR5I,YAAaA,GACbpO,QAASkX,KAGb/gC,EAAAA,GAAAC,cAACu2C,GAAAA,EAAkB,CACjBl2C,IAAM,wBAAuBu5B,KAC7B/8B,OAAQA,GACR2sB,OAAQia,GACRqQ,oBAAqBnQ,GACrBhJ,qBAAsBA,GACtB/Q,QAAS8Z,KAEX3jC,EAAAA,GAAAC,cAACywB,GAAc,CACbpwB,IAAM,mBAAkBu5B,KACxB/8B,OAAQA,GACR2V,SAAUA,GACVgX,OAAQqa,GACRwR,gBAAiB1G,GACjB/kB,QAASka,KAEX/jC,EAAAA,GAAAC,cAACw2C,GAAAA,EAAY,CACXn2C,IAAM,iBAAgBu5B,KACtBpQ,OAAQ2Z,GACRsT,OAAQpT,GACRnM,aAAcoM,GACdhJ,eAAgBA,GAChBK,qBAAsBA,GACtBqZ,cAAezQ,GACfuQ,oBAAqBvQ,GACrB3Z,QAASwZ,OAIdtB,IACC/hC,EAAAA,GAAAC,cAACM,GAAAA,EAAM,CACLC,OAAK,EACL2P,MAAM,SACNnS,UAAU,SACVmC,QAAS0hC,GACTxxB,UAAU,0BAEVrQ,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sBAGhBg+B,KAAoB+F,IACnB/hC,EAAAA,GAAAC,cAACM,GAAAA,EAAM,CACLC,OAAK,EACLxC,UAAU,wBACVmS,MAAM,YACNhQ,QAASiyC,GACTriB,cAAe4b,GACfgL,YAAa9K,GACbx7B,UAAWhS,GAAK,gBAChB2G,IAAKk2B,IAEJxF,IACC11B,EAAAA,GAAAC,cAAC22C,GAAAA,EAAqB,CACpBt2C,IAAK,eAAgBo1B,GAAoBA,GAAkBmT,WAAanT,GAAkBmH,SAC1FwV,aAAaC,EAAAA,EAAAA,IAAYx1C,GAAQ41B,IACjCqf,SAAUrc,GACVmhB,eAAgBja,OAGjBlH,IAAqBkH,KACtB58B,EAAAA,GAAAC,cAAA,KACEjC,WAAWkC,EAAAA,EAAAA,GACT,OACA,aACA08B,IAA4B,wBAE9B,oBAKR58B,EAAAA,GAAAC,cAACM,GAAAA,EAAM,CACLyE,IAAKk9B,GACL1hC,OAAK,EACL2P,MAAM,YACNnS,WAAWkC,EAAAA,EAAAA,GACTgrC,GACA,eACC3R,GAAW,YACZwI,IAAwB,aAE1B1X,SAAU+mB,GACV0F,oBAAkB,EAClBC,aAAW,EACX1mC,UAAWhS,GAAKwzC,IAChB1xC,QAASkxC,GACTthB,cACEmb,KAAoB1Y,GAAgB6Y,MAAQG,GAAwBzc,QAAoBvxB,GAG1FwC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,mBACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,6BACZ+7B,IAAa/5B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sBAC1B+9B,IAAmB/7B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uBAChC+9B,IAAmB/7B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAElCwtC,IACCxrC,EAAAA,GAAAC,cAAC+2C,GAAAA,EAAc,CACbvtB,OAAQgiB,GACRwL,YAAalb,GACb5F,uBAAwBA,EACxBwd,aAAe/mB,QAAoCpvB,EAAnBg1C,GAChC0E,eAAiBvgB,OAAuCn5B,EAAtB+0C,GAClC4E,iBAAkB1E,GAClB5oB,QAASmF,GACTlF,oBAAqBmF,GACrB6lB,gBAAiBloB,KAGpBsQ,GACG,I,sIGvyDV,MA8KA,GAAexgC,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAA2B,IAAzB,KAAEvC,GAAMuC,EACf,MAAM83C,GAAgBllC,EAAAA,EAAAA,IAASnV,EAAKU,IAC9BmvB,GAAiBC,EAAAA,EAAAA,KAAqBjwB,EAAQG,EAAKU,IACnDwU,EAAOmlC,IAAiBjlC,EAAAA,EAAAA,KAAWvV,GAAQy6C,EAAAA,EAAAA,IAAqBt6C,IAChEu6C,EAAQrlC,IAAQslC,EAAAA,EAAAA,IAAUtlC,KAAUlV,EAAKy6C,UACzCC,EAAmBL,IAAkBxqB,IAAmB0qB,EACxDI,EAAcN,GAChBO,EAAAA,EAAAA,KAAuBxlC,EAAAA,EAAAA,KAAWvV,GAAQy6C,EAAAA,EAAAA,IAAqBt6C,UAC/DS,EAEJ,MAAO,CACL45C,gBACAxqB,iBACA0qB,QACAjhB,WAAWjjB,EAAAA,EAAAA,IAAcrW,GACzB66C,cAAcC,EAAAA,EAAAA,IAAiB96C,GAC/B+6C,cAAcza,EAAAA,EAAAA,IAAiBtgC,GAC/Bk3B,cAAer3B,EAAOq3B,cACtBwjB,kBACAC,cACD,GArBe/6C,EA9K+BoB,IAc7C,IAd8C,OAClD0rB,EAAM,KACN1sB,EAAI,UACJs5B,EAAS,cACT+gB,EAAa,eACbxqB,EAAc,MACd0qB,EAAK,aACLM,EAAY,aACZE,EAAY,cACZ7jB,EAAa,gBACbwjB,EAAe,YACfC,EAAW,QACX7tB,EAAO,oBACPC,GACD/rB,EACC,MAAM,aACJg6C,EAAY,cACZC,EAAa,cACbC,EAAa,eACbC,EAAc,UACdC,IACE/5C,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KACP85C,GAAYC,EAAAA,EAAAA,GAAah6C,EAAMtB,GAE/Bu7C,GAAqB95C,EAAAA,EAAAA,KAAY,KACrCw5C,EAAc,CAAEl7C,OAAQC,EAAKU,GAAI86C,oBAAoB,IAErD1uB,GAAS,GACR,CAACmuB,EAAej7C,EAAKU,GAAIosB,IAEtB2uB,GAAsBh6C,EAAAA,EAAAA,KAAY,KACtCw5C,EAAc,CAAEl7C,OAAQC,EAAKU,GAAI86C,oBAAoB,IACrDJ,EAAU,CAAEpkC,OAAQhX,EAAKU,KAEzBosB,GAAS,GACR,CAAC9sB,EAAKU,GAAIosB,IAEP4uB,GAAmBj6C,EAAAA,EAAAA,KAAY,KAC/B44C,EACFY,EAAc,CAAEl7C,OAAQC,EAAKU,GAAI86C,oBAAoB,IAC5CX,GACTM,EAAe,CAAEp7C,OAAQC,EAAKU,GAAIsW,OAAQkgB,IAC1C+jB,EAAc,CAAEl7C,OAAQC,EAAKU,GAAI86C,oBAAoB,MAC3CliB,IAAayhB,GAAkB/6C,EAAK27C,WAEpCriB,GAAayhB,IAAiB/6C,EAAK27C,WAC7CT,EAAc,CAAEn7C,OAAQC,EAAKU,KAF7Bs6C,EAAa,CAAEj7C,OAAQC,EAAKU,KAI9BosB,GAAS,GACR,CACDutB,EACAQ,EACAvhB,EACAyhB,EACA7jB,EACAl3B,EAAK27C,UACL37C,EAAKU,GACLosB,EACAmuB,EACAE,EACAH,EACAE,IAGIU,GAAkBn6C,EAAAA,EAAAA,KAAY,KAC9B63B,GAAayhB,GACfC,EAAa,CAAEj7C,OAAQC,EAAKU,KAC5BosB,KAEA4uB,GACF,GACC,CAAC17C,EAAKU,GAAIg7C,EAAkBpiB,EAAWyhB,EAAcC,EAAcluB,IA8DtE,OACE7pB,EAAAA,GAAAC,cAAC24C,EAAAA,EAAK,CACJnvB,OAAQA,EACRzrB,UAAU,kBACV66C,OA9DA74C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,eAAe0D,IAAKrD,EAAKsD,MAAQ,WAAQnE,GACtDwC,EAAAA,GAAAC,cAACI,EAAAA,EAAM,CACL2D,KAAK,OACL5D,KAAMrD,EACN+3C,gBAAiBloB,IAEnB5sB,EAAAA,GAAAC,cAAA,MAAIjC,UAAU,eAAeK,EAM7Bg4B,IAAct5B,EAAK27C,UACd,eAGLriB,GAAat5B,EAAK27C,UACb,gBAGLd,GAAgBE,EACX,mBAGF,oBAuCLjuB,QAASA,EACTC,oBAAqBA,GApCnBuM,GAAat5B,EAAK27C,UAElB14C,EAAAA,GAAAC,cAAA,UACG2P,EAAAA,EAAAA,GAAWvR,EAAK,2CAA4C+5C,GAAY,CAAC,kBAAmB,WAK9F/hB,IAAct5B,EAAK27C,WAAcd,GAAgBE,EAC7C93C,EAAAA,GAAAC,cAAA,UAAI2P,EAAAA,EAAAA,GAAWvR,EAAK,4BAA6B+5C,GAAY,CAAC,kBAAmB,WAGnFp4C,EAAAA,GAAAC,cAAA,UAAI2P,EAAAA,EAAAA,GAAWvR,EAAK,kCAAmCq5C,GAAc,CAAC,kBAAmB,WA2B9F13C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,yBACZs5C,GACCt3C,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CAAC4P,MAAM,SAASnS,UAAU,wBAAwB86C,QAAM,EAAC34C,QAASq4C,GACtEn6C,EAAK,kBAGTo5C,GACCz3C,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CAAC4P,MAAM,SAASnS,UAAU,wBAAwB86C,QAAM,EAAC34C,QAASm4C,GACtEZ,GAAc9nC,EAAAA,EAAAA,GAAWvR,EAAK,6BAA8Bq5C,IAAgBr5C,EAAK,kBAGpF+4C,GAAiBr6C,EAAK27C,WACtB14C,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CAAC4P,MAAM,SAASnS,UAAU,wBAAwB86C,QAAM,EAAC34C,QAASs4C,GACtEp6C,EAAK,iBAGV2B,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACL4P,MAAM,SACNnS,UAAU,wBACV86C,QAAM,EACN34C,QAASi3C,EAAgBqB,EAAmBE,GAE3Ct6C,EA7CHg4B,IAAct5B,EAAK27C,UACd,eAELriB,GAAat5B,EAAK27C,UACb,oBAGLd,GAAgBE,EACX,mBAGFL,EAAkB,gCAAkC,WAoCvDz3C,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CAACvC,UAAU,wBAAwB86C,QAAM,EAAC34C,QAAS0pB,GAAUxrB,EAAK,YAErE,I,6LCnKZ,MACM06C,EAAiB,IAAIh2C,IAAI,CAAC,MAAO,SAwJvC,GAAerG,EAAAA,EAAAA,KAtJgBqB,IAkBzB,IAlB0B,QAC9BqH,EAAO,oBACP4zC,EAAmB,QACnBC,EAAO,YACPC,EAAW,sBACXC,EAAqB,eACrB7zC,EAAc,SACd8zC,EAAQ,SACRC,EAAQ,UACRr7C,EAAS,OACTyuB,EAAM,WACN9mB,EAAU,aACVD,EAAY,mBACZ4zC,EAAkB,cAClB1zC,EAAa,eACbU,EAAc,aACdizC,EAAY,YACZhzC,GACDxI,EACC,MAAM,2BAAEyI,EAA0B,qBAAEC,EAAoB,iBAAE+yC,IAAqBp7C,EAAAA,EAAAA,MAGzE4G,GAAMrE,EAAAA,EAAAA,IAAuB,MAE7BtC,GAAOC,EAAAA,EAAAA,MACNm7C,EAAiBC,EAAeC,IAAkB54C,EAAAA,EAAAA,MAClD64C,EAAuBC,IAA4BvyC,EAAAA,EAAAA,KAAS,GAE7D8P,EAAWhS,EAAQuB,QAAQyQ,UAC3B,SAAErI,EAAQ,KAAE/K,EAAI,UAAE81C,GAAc1iC,EAChC2iC,GAAYC,EAAAA,EAAAA,IAAqB5iC,IAAa,GAE9C6iC,GAAiBC,EAAAA,EAAAA,IAAkBl1C,EAAKg0C,IACvCmB,EAAgBC,IAAmBr5C,EAAAA,EAAAA,MAC1CvB,EAAAA,EAAAA,KAAU,KACJy6C,GACFG,GACF,GACC,CAACH,EAAgBG,IAGpB,MAAOC,EAAeC,IAAoBhzC,EAAAA,EAAAA,IACxC4xC,KAAiBC,GAAyBn1C,GA7CzB,QA6CiCm1C,IAG9CoB,EAAiB78C,QAAQkI,GAAkBy0C,GAAiBF,GAE5DK,IAAe/yC,EAAAA,EAAAA,IAAoBrC,EAAS,aAC1CyC,aAAcC,GAAgB,UAAEH,KAAcI,EAAAA,EAAAA,GACpDyyC,IAAeD,GAAgB3yC,EAAAA,EAAAA,IAAsBxC,EAAS,iBAAa5H,GAAW,GAElFI,GAAWF,QAAQiK,KAEnB,YACJ0F,GAAW,eAAEC,GAAc,iBAAEC,KAC3BC,EAAAA,EAAAA,IAAsBpI,EAASE,GAAkBwC,GAAkByyC,IAAmB38C,IAEpF68C,IAAaC,EAAAA,EAAAA,IAAsBtjC,GACnCnV,GAAew4C,IAAaE,EAAAA,EAAAA,IAA4Bv1C,QAAW5H,EACnEo9C,GAAeH,GAAarjC,EAAS/U,oBAAiB7E,EACtDq9C,IAAcv4C,EAAAA,EAAAA,IAASmF,EAAAA,EAAAA,IAAoBrC,EAAS,cAAe60C,GAEnEa,GAAkBvB,GAAgB77C,QAAQ0Z,EAAS2jC,aACvD7hC,EAAAA,IAA8B3V,IAAI6T,EAASe,WAAaG,EAAAA,IAA8B/U,IAAI6T,EAASe,WAG/F6iC,IAAiBp3C,EAAAA,EAAAA,IAAgB,KACrC6C,EAAqB,CAAErB,WAAU,IAG7B61C,IAAcr3C,EAAAA,EAAAA,IAAgB,KAC9ByJ,GACE/G,GACFA,IAKAV,EACFY,EAA2B,CAAEpB,YAI3BkI,GACFgtC,GAAiB,GAIfQ,GACFvB,IAIER,EAAex1C,IAAIw2C,IAAcT,EACnCI,IAIFsB,IAAgB,IAGZE,IAAmBt3C,EAAAA,EAAAA,IAAgB,KACvC41C,EAAiB,CAAEF,oBAAqBM,IACxCD,IACAqB,IAAgB,IAGZtsC,IAAkB9K,EAAAA,EAAAA,IAAgB,KACtC2C,EAAanB,EAAQ3H,GAAI2H,EAAQtI,OAAO,IAG1C,OACEkD,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAC4oB,EAAAA,EAAI,CACH7jB,IAAKA,EACLmd,KAAMpT,EACNgrC,UAAWA,EACX/1C,KAAMA,EACN81C,UAAWV,EAAWC,GAAYS,OAAYt8C,EAC9C29C,iBAAkBl5C,GAClB44C,YAAaD,IAAgBC,GAC7B5B,QAASA,EACT3rC,eAAgBA,GAChBD,YAAaA,GACbE,iBAAkBA,GAClBvP,UAAWA,EACXyuB,OAAQA,EACR/mB,aAAcA,EACdC,WAAYA,EACZy1C,WAAYN,IAAmBO,EAAAA,EAAAA,IAAuBj2C,GAAW,OAAS,MAAS,WACnFjF,QAAS86C,GACT10C,YAAaA,EAAcmI,QAAkBlR,IAE/CwC,EAAAA,GAAAC,cAACq7C,EAAAA,EAAa,CACZ7xB,OAAQgwB,EACR5vB,QAAS8vB,EACT4B,eAAgBL,IAEf78C,EAAK,0BACN2B,EAAAA,GAAAC,cAACu7C,EAAAA,EAAQ,CACPx9C,UAAU,kBACV6Y,QAAS+iC,EACThjC,MAAOvY,EAAK,2BACZo9C,QAAS5B,KAGZ,G,mFC3LP,MAUA,EAVmC97C,IAA4B,IAA3B,QAAE4I,EAAO,UAAE3I,GAAWD,EACxD,MAAMM,GAAOC,EAAAA,EAAAA,KACb,OACE0B,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GAAe,eAAgBlC,GAAY0D,IAAKrD,EAAKsD,MAAQ,MAAQ,SACnFiO,EAAAA,EAAAA,GAAWjJ,GACZ3G,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,aACX,C,6LCyIX,QAzGsCD,IAchC,IAdiC,UACrCC,EAAS,QACToH,EAAO,OACPqnB,EAAM,MACN3d,EAAK,WACL8gB,EAAU,YACV8rB,EAAW,aACXC,EAAY,eACZ1rB,EAAc,iBACd2rB,EAAgB,iCAChBC,EAAgC,8BAChCC,EAA6B,8BAC7BC,EAA6B,QAC7B57C,GACDpC,EAEC,MAAMiH,GAAMrE,EAAAA,EAAAA,IAAuB,MAC7Bs5C,GAAiBC,EAAAA,EAAAA,IAAkBl1C,EAAK82C,GAExCE,GAAe15C,EAAAA,EAAAA,GAAS8C,IAAWqC,EAAAA,EAAAA,IAAoBrC,EAAS,cAAe60C,GAC/EgC,GAAiBC,EAAAA,EAAAA,GAAa92C,GAC9B+2C,EAAez+C,QAAQ0H,IAAWg3C,EAAAA,EAAAA,IAAqBh3C,IACvDm7B,EAAY7iC,QAAQ0H,IAAWi3C,EAAAA,EAAAA,IAAoBj3C,IAEnDk3C,EAAkBl3C,IAAWm3C,EAAAA,EAAAA,IAAsBn3C,IACnD,eAAEo3C,IAAmBC,EAAAA,EAAAA,GACzBb,EAAkBx2C,GAAStI,OAAQw/C,EAAkBl3C,GAAS3H,QAAKD,EAAWq+C,GAG1Ex9C,GAAOC,EAAAA,EAAAA,KAEP+G,EAAconB,GAASiwB,EAAAA,EAAAA,IAAer+C,EAAMouB,GAAUrnB,GAASunB,aAAaK,gBAE5E,YAAEiuB,EAAW,gBAAE0B,IAAoBC,EAAAA,EAAAA,GAAaz8C,GAEtD,OACEH,EAAAA,GAAAC,cAAA,OACE+E,IAAKA,EACLhH,WAAWkC,EAAAA,EAAAA,GACT,kBACAlC,EACAyuB,IAAWkvB,GAAiB,UAAQkB,EAAAA,EAAAA,IAAgBpwB,MAEtDtsB,QAASiF,GAAW61C,EACpBtE,YAAavxC,GAAWu3C,GAEvBV,GA8BP,SACEh6C,EACA8V,EACAokC,EACAT,EACAnb,GAEA,MAAM,MAAEz0B,EAAK,OAAEC,IAAW+wC,EAAAA,EAAAA,MAEpBC,EAAShlC,GAAW9V,EAE1B,OACEjC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,iBAAkBi8C,GAAgB,WAC7D5b,GACAvgC,EAAAA,GAAAC,cAAA,OACEkE,IAAK44C,EACLjxC,MAAOA,EACPC,OAAQA,EACR+U,IAAI,GACJ9iB,UAAU,YACVqG,WAAW,IAGfrE,EAAAA,GAAAC,cAAC+8C,EAAAA,EAAY,CAAC/6C,aAAc86C,EAAQE,UAAWv/C,QAAQ6iC,GAAYz0B,MAAOA,EAAOC,OAAQA,IACxF2vC,GAAe17C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAGtC,CAzDyBk/C,CAAgBjB,EAAgBD,EAAcG,EAAcT,EAAanb,GAC5FvgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBACbgC,EAAAA,GAAAC,cAAA,KAAGyB,IAAI,QACH0D,GAEE+3C,EAAAA,EAAAA,IAAgB/3C,GAClBpF,EAAAA,GAAAC,cAACm9C,EAAAA,EAAa,CACZh4C,QAASA,EACTi4C,YAAU,EACVvB,8BAA+BA,EAC/BC,8BAA+BA,IAGjC/7C,EAAAA,GAAAC,cAACq9C,EAAAA,EAAc,CACbj/C,KAAMA,EACN+G,QAASA,EACTm4C,QAAS7/C,QAAQu+C,GACjBO,eAAgBA,EAChBV,8BAA+BA,EAC/BC,8BAA+BA,IAfjCnsB,GApDC,KAuEL5vB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBAAgB0D,IAAI,SAAQkO,EAAAA,EAAAA,GAAWvK,GAAeyJ,GAvEhE,OAyENmhB,GAAkBjwB,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,iCAC5B,C,8LC/EV,MAiIA,GAAetB,EAAAA,EAAAA,KAjIYqB,IAmBrB,IAnBsB,IAC1BiH,EAAG,KACHmd,EAAI,KACJne,EAAI,UACJ+1C,EAAY,GAAE,UACdD,EAAS,OACTrtB,EAAM,iBACN0uB,EAAgB,YAChBN,EAAW,UACX78C,EAAS,QACTi7C,EAAO,eACP3rC,EAAc,YACdD,EAAW,aACX3H,EAAY,WACZC,EAAU,iBACV4H,EAAgB,WAChB6tC,EAAU,QACVj7C,EAAO,YACPoG,GACDxI,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEb,IAAIk/C,GAAa78C,EAAAA,EAAAA,IAAuB,MACpCqE,IACFw4C,EAAax4C,GAGf,MAAM,SAAEkC,IAAaC,EAAAA,EAAAA,OACds2C,IAAan2C,EAAAA,EAAAA,KAAUuzC,GACxB6C,EAAUhgD,QAAQm9C,GAClB8C,GAAWC,EAAAA,EAAAA,GAAczC,EAAkBuC,EAASx2C,IAAa22C,EAAAA,IACjE36C,GAAkBC,EAAAA,EAAAA,IAAoBu6C,IAG1Ch+C,aAAco+C,EACdn+C,qBAAsB+N,IACpB9N,EAAAA,EAAAA,GAAkB0N,OAAgB9P,GAAW,GAE3C2S,GAAQ4tC,EAAAA,EAAAA,IAAsBhE,GAC9BiE,GAAaptC,EAAAA,EAAAA,IAAkB5M,GAC/Bi6C,GAAWt/C,EAAAA,EAAAA,KAAQ,IAClB2O,GAAmBC,EAChB,IAAEqD,EAAAA,EAAAA,IAAkB5M,EAAOuJ,QAAuBywC,IADTA,GAEhD,CAAC1wC,EAAgBtJ,EAAMg6C,EAAYzwC,KAEhC,MAAEzB,EAAK,OAAEC,IAAWmyC,EAAAA,EAAAA,IAA+BjF,GAEnD7pC,GAAgBlP,EAAAA,EAAAA,GACpB,OACAlC,EACAi7C,GAAW,UACX94C,IAAYkN,GAAe,cAC3B1H,GAAc,oBAGhB,OACE3F,EAAAA,GAAAC,cAAA,OAAK+E,IAAKw4C,EAAYx/C,UAAWoR,EAAe1N,IAAKrD,EAAKsD,MAAQ,WAAQnE,GACvEkI,GACC1F,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACZ2H,GAAc3F,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sBAGhCgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,sBAAsBmC,QAASkN,OAAc7P,EAAY2C,GACrEg7C,GAAoBN,EACnB76C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,4BACbgC,EAAAA,GAAAC,cAAA,OACEkE,IAAK02C,EACL78C,UAAU,aACV8N,MAAOA,EACPC,OAAQA,EACR1H,WAAW,EACXyc,IAAI,KAEL28B,GACCz9C,EAAAA,GAAAC,cAAA,UACE+E,IAAK24C,EACL3/C,WAAWkC,EAAAA,EAAAA,GAAe,YAAagD,MAK7ClD,EAAAA,GAAAC,cAAA,OAAKjC,UAAY,aAAYmS,KAC1B4pC,EAAUx4C,QAAU,GACnBvB,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,WAAW0D,IAAI,QAAQq4C,IAI5C+D,GACC99C,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiBiQ,EAAOzC,IACrD1N,EAAAA,GAAAC,cAACsQ,EAAAA,EAAe,CACd5E,SAAU4B,EACVvJ,KAAMi1C,EAAU,IAAM,IACtB94C,QAASkN,EAAclN,OAAU3C,KAItC2C,GACCH,EAAAA,GAAAC,cAAA,KACEjC,WAAWkC,EAAAA,EAAAA,GACT,cACA,OACAk7C,EAAc,QAAOA,IAAe,gBACpC0C,GAAuB,aAK/B99C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,aACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,aAAa0D,IAAI,OAAOoN,MAAOqT,IAAOvS,EAAAA,EAAAA,GAAWuS,IAChEniB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBAAgB0D,IAAI,QACjC1B,EAAAA,GAAAC,cAAA,YACGg+C,GAEFxxB,GAAUzsB,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,gBAAe4R,EAAAA,EAAAA,GAAW6c,KACnDA,GAAU/uB,QAAQo8C,IAClB95C,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,WAChBgC,EAAAA,GAAAC,cAAC4P,EAAAA,EAAI,CAAC1P,QAASoG,IAAcuK,EAAAA,EAAAA,IAAoBzS,EAAkB,IAAZy7C,GAAkB,OAKhFrtB,GAAU/uB,QAAQo8C,IACjB95C,EAAAA,GAAAC,cAAC4P,EAAAA,EAAI,CAAC1P,QAASoG,IAAcuJ,EAAAA,EAAAA,IAAoBzR,EAAkB,IAAZy7C,IAErD,G,wMCxIV,MAAMqE,EAAkB,IAAMC,EAAAA,GAqM9B,GAAe1hD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAuC,IAArC,OAAExC,EAAM,SAAE2V,GAAUnT,EAC3B,MAAMvC,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAC1BuhD,EAAa5rC,GAAW6rC,EAAAA,EAAAA,KAAiB1hD,EAAQE,EAAQ2V,QAAYjV,EACrE+gD,EAAcxhD,GAAOyhD,EAAAA,EAAAA,KAAsB5hD,EAAQG,QAAQS,EAC3DihD,EAAoB/gD,SAAQghD,EAAAA,EAAAA,KAAmB9hD,EAAQE,IACvD6hD,EAAQlsC,EAAW1V,GAAM6hD,SAASnsC,QAAYjV,EAGpD,MAAO,CACLT,OACAshD,aACAE,cACAI,QACAF,oBACAI,cARoBF,IAASG,EAAAA,EAAAA,KAA0BliD,EAAQE,EAAQ2V,GASxE,GAhBe9V,EApK6BoB,IAuB3C,IAvB4C,aAChDghD,EAAY,UACZ/gD,EAAS,WACTghD,EAAa,SAAQ,SACrBC,EAAQ,OACRC,EAAM,SACNC,EAAQ,gBACRrE,EAAe,aACftG,EAAY,aACZ4K,EAAY,mBACZC,EAAkB,aAClBC,EAAY,WACZjB,EAAU,MACVkB,EAAK,KACLxiD,EAAI,YACJwhD,EAAW,kBACXE,EAAiB,MACjBE,EAAK,cACLE,EAAa,iBACbW,EAAgB,UAChBC,EAAS,kBACTC,EAAiB,QACjBv/C,GACDpC,EACC,MAAM,aACJ4hD,EAAY,gBACZC,EAAe,kBACfC,IACEzhD,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KAEPw5C,EAAe/6C,IAAQsgC,EAAAA,EAAAA,IAAiBtgC,GACxC+iD,EAAUpiD,QAAQX,GAAMqV,SAAWisC,GAAcM,IAC/ClhD,GAAIX,EAAM,MAAEijD,EAAK,aAAE7qC,GAAiBnY,GAAQ,CAAC,GAErDyC,EAAAA,EAAAA,KAAU,KACJ1C,IAAWijD,IACTX,GAAcO,EAAa,CAAE7iD,WAC7Bg+C,GAAiB+E,EAAkB,CAAEG,UAAWljD,IACtD,GACC,CAACA,EAAQijD,EAAOX,EAAcO,EAAcE,EAAmB/H,EAAcgD,IAEhF,MAAMmF,GAAyBr8C,EAAAA,EAAAA,IAC7B,CAACoK,EAAiDkyC,KAC5CnjD,GAAQmjD,IACVlyC,EAAEM,kBACFsxC,EAAgB,CACdO,cAAepjD,EAAKU,GACpB2iD,QAAS,EACT76C,OAAuB,UAAfy5C,EAAyBqB,EAAAA,GAAkBC,cAAgBD,EAAAA,GAAkBE,qBAEzF,IAIE5qC,GAAehX,EAAAA,EAAAA,KAAQ,IAAM5B,GAAQy3C,IAAgBgM,EAAAA,EAAAA,IAAgBzjD,IAAO,CAACA,EAAMy3C,IAEzF,GAAKz3C,EAqDL,OACEiD,EAAAA,GAAAC,cAAA,OACEjC,WACEkC,EAAAA,EAAAA,GAAe,WAAYlC,GAE7B0D,KAAM69C,GAASlhD,EAAKsD,MAAQ,WAAQnE,EACpC2C,QAASA,IAEP8+C,IAAaa,GACb9/C,EAAAA,GAAAC,cAACI,EAAAA,EAAM,CACLC,IAAKvD,EAAKU,GACVuG,KAAMg7C,EACN5+C,KAAMrD,EACN0iD,UAAWA,EACXC,kBAAmBA,EACnBe,gBAAgB,cAChBtgD,QAAS26C,EAAkBmF,OAAyBziD,IAGvDsiD,GACC9/C,EAAAA,GAAAC,cAACygD,EAAAA,EAAS,CACR/B,MAAOA,EACP3gD,UAAU,oBACVgG,KAAMm6C,IAGVn+C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,QACZ2gD,EACG3+C,EAAAA,GAAAC,cAAA,MAAIyB,IAAI,OAAO1D,UAAU,aAAY4R,EAAAA,EAAAA,GAAW+uC,EAAM7vC,QACtD9O,EAAAA,GAAAC,cAAC0gD,EAAAA,EAAa,CAACvgD,KAAMrD,KACvByiD,GA/ER,WACE,GAAIN,EACF,OAAOC,EACLn/C,EAAAA,GAAAC,cAAC2gD,EAAAA,EAAY,CAAC5iD,UAAU,SAAS2I,QAASu4C,IAE1Cl/C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAS0D,IAAI,QAAQw9C,GAIzC,GAAIG,IAAuBZ,IAAsBvpC,EAC/C,OACElV,EAAAA,GAAAC,cAAC2gD,EAAAA,EAAY,CAAC5iD,UAAU,SAAS2I,QAAStI,EAAK,cAInD,IAAKtB,EACH,OAGF,GAAIgiD,EACF,OAAO/+C,EAAAA,GAAAC,cAAC4gD,EAAAA,EAAY,CAAC9B,aAAcA,IAGrC,GAAIe,EACF,OACE9/C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAS0D,IAAI,QAC1Bm9C,EAAgBxgD,EAAK,WAAYwgD,EAAe,MAAOjvC,EAAAA,EAAAA,GAAW7S,EAAK+R,QAK9E,GAAIwwC,EACF,OACEt/C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAS0D,IAAI,QAAQrD,GAAKyiD,EAAAA,EAAAA,IAAkB/jD,KAIhE,MAAMgkD,EAgDV,SAAwB1iD,EAActB,GACpC,MAAMikD,EAAiB3iD,GAAKyiD,EAAAA,EAAAA,IAAkB/jD,KACxC,aAAEkkD,GAAiBlkD,EAEzB,OAAIA,EAAKmY,aACmB,YAAnB8rC,EAA+B,0BAA4B,wBAG/DC,EAKD5iD,EADsB,YAAnB2iD,EACE,cACA,UADeC,EAAc,KAJ7BD,CAMX,CA/DwBE,CAAe7iD,EAAMtB,GACnCokD,EAAe5C,EAAe,KAAIlgD,EAAK,cAAekgD,EAAa,YAAS/gD,EAElF,OACEwC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UACb2X,GAAgB3V,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UAAU2X,GAC3C3V,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,gBAAgB+iD,GAC/BI,GAAgBnhD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,iBAAiBmjD,GAGxD,CAgC4BC,IAEpB,I,gFCjMV,MAYA,GAAe1kD,EAAAA,EAAAA,KAZuBqB,IAAiC,IAAhC,QAAEqH,EAAO,eAAEi8C,GAAgBtjD,EAChE,MAAMM,GAAOC,EAAAA,EAAAA,KACb,OACE0B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,mBACZqjD,GACCrhD,EAAAA,GAAAC,cAACqhD,EAAAA,EAAqB,CAACpC,OAAQmC,IAEjCrhD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAQ8R,EAAAA,EAAAA,IAAoBzR,EAAqB,IAAf+G,EAAQI,OACtD,G,0JCSV,MA6DA,GAAe9I,EAAAA,EAAAA,KA7DaqB,IAMtB,IANuB,QAC3BqH,EAAO,SACPowC,EAAW,eAAc,YACzBkG,EAAW,oBACX1C,EAAmB,QACnB74C,GACDpC,EAEC,MAAMiH,GAAMrE,EAAAA,EAAAA,IAAuB,MAE7Bs5C,GAAiBC,EAAAA,EAAAA,IAAkBl1C,EAAKg0C,GACxC/2C,GAAe04C,EAAAA,EAAAA,IAA4Bv1C,GAC3C42C,GAAe15C,EAAAA,EAAAA,IAASmF,EAAAA,EAAAA,IAAoBrC,EAAS,cAAe60C,GACpEt6C,GAAuBwD,EAAAA,EAAAA,GAAmB64C,GAE1Cl1C,GAAQy6C,EAAAA,EAAAA,IAAgBn8C,GAExBo8C,GAAanF,EAAAA,EAAAA,IAAoBj3C,IAChCq8C,EAAe,CAAGC,IAAe3gD,EAAAA,EAAAA,GAAQygD,GAE1CvG,GAAcr3C,EAAAA,EAAAA,IAAgB,KAClC89C,IACAvhD,EAASiF,EAAQ3H,GAAI2H,EAAQtI,OAAO,IAGtC,OACEkD,EAAAA,GAAAC,cAAA,OACE+E,IAAKA,EACLvH,GAAK,GAAE+3C,KAAWmM,EAAAA,EAAAA,IAAiBv8C,EAAQ3H,MAC3CO,UAAU,oBACVmC,QAASA,EAAU86C,OAAcz9C,GAEjCwC,EAAAA,GAAAC,cAAA,OACEkE,IAAKlC,EACLjE,UAAU,kBACV8iB,IAAI,GACJzc,WAAYq3C,EACZkG,SAAS,QACT7xB,cAAe2rB,EAAcrlC,EAAAA,OAAY7Y,IAE3CwC,EAAAA,GAAAC,cAAA,OACEkE,IAAK63C,EACLh+C,WAAWkC,EAAAA,EAAAA,GAAe,aAAc,kBAAmBP,GAC3DmhB,IAAI,GACJzc,WAAYq3C,EACZkG,SAAS,QACT7xB,cAAe2rB,EAAcrlC,EAAAA,OAAY7Y,IAE1CgkD,GACCxhD,EAAAA,GAAAC,cAAC+8C,EAAAA,EAAY,CACX/6C,aAAc+5C,GAAgB/5C,EAC9Bg7C,UAAWwE,EACXzjD,UAAU,kBAGb8I,GAAS9G,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,kBAAkB8I,EAAM6R,MAAQ,OAAQ5I,EAAAA,EAAAA,IAAoBjJ,EAAM2B,WAC3FizC,GAAe17C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAC5B,G,8FC3FV,MCgEA,GAAetB,EAAAA,EAAAA,KA1CoBqB,IAO7B,IAP8B,UAClCk/C,EAAS,cACT4E,EAAa,aACb5/C,EAAY,UACZjE,EAAS,MACT8N,EAAK,OACLC,GACDhO,EAEC,MAAMiH,GAAMrE,EAAAA,EAAAA,IAAuB,OAE7B,aAAEjB,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAC7Cq9C,OAAWz/C,GAAW,GAAMqkD,QAAwBrkD,OAAWA,EAdxC,KAgBnB2L,GAAYy0C,EAAAA,EAAAA,GAAc37C,GAAevC,OAAclC,EAjB3C,GAiBmEsO,EAAOC,GAEtFkvC,GAAcr3C,EAAAA,EAAAA,IAAiBoK,IACnC,IAAKhJ,EAAI7D,QAAS,OAClB,MAAM2gD,EAAO9zC,EAAE+zC,cAAc7zC,wBACvB1B,EAAIwB,EAAEG,QAAU2zC,EAAK7zC,KACrBxB,EAAIuB,EAAEg0C,QAAUF,EAAKjS,IACrBoS,EAASz1C,EAAKs1C,EAAKh2C,MAAQ,EAC3Bo2C,EAASz1C,EAAKq1C,EAAK/1C,OAAS,EAClC/G,EAAI7D,QAAQyf,aAAa,QAAU,oBAAmBqhC,yBAA8BC,MAAW,IAGjG,GAAKxiD,EAIL,OACEM,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GDtDM,uBCsDsBP,EAAsB3B,EAAW6jD,GDtDwB,wBCuDhG78C,IAAKA,EACL7E,QAAS0hD,EAAgB5G,OAAcz9C,GAEvCwC,EAAAA,GAAAC,cAAA,UAAQ+E,IAAKmE,EAAWnL,UD1D6M,uBC0DnL8N,MAAOA,EAAOC,OAAQA,IACxE/L,EAAAA,GAAAC,cAAA,OAAKjC,UD3DgM,yBC4DjM,G,2DChDLmkD,EAAI,SAAJA,GAAI,OAAJA,EAAAA,EAAI,mBAAJA,EAAAA,EAAI,qBAAJA,EAAAA,EAAI,yBAAJA,EAAAA,EAAI,eAAJA,CAAI,EAAJA,GAAI,IAIT,MAcA,GAAezlD,EAAAA,EAAAA,KAd6BqB,IAAgB,IAAf,OAAEmhD,GAAQnhD,EACrD,OACEiC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,yBACbgC,EAAAA,GAAAC,cAACmiD,EAAAA,EAAU,CAACjgC,KAAK,SAASkgC,UAAWF,EAAKjD,IAC5B,WAAXA,EACCl/C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,iCACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,8BAEbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAY,qBAAoBkhD,OAErC,G,8FCXV,MAAMoD,EAAe,iBAcrB,GAAe5lD,EAAAA,EAAAA,KAZoBqB,IAA0C,IAAzC,KAAE0C,EAAO6hD,EAAY,YAAEvvC,GAAahV,EACtE,MAAMM,GAAOC,EAAAA,EAAAA,MACP,qBAAEqB,IAAyBC,EAAAA,EAAAA,IAAkB,GAEnD,OACEI,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,eAAgBP,EAAsBoT,GAAe,qBACjFtS,EACAsS,GAAe/S,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,gBAAe4R,EAAAA,EAAAA,GAAWvR,EAAK0U,GAAc,CAAC,QACvE,G,kJCUV,MA+HA,GAAerW,EAAAA,EAAAA,KA/HoBqB,IAgB7B,IAhB8B,UAClCg6B,GAAY,EAAK,kBACjBwqB,EAAiB,MACjBziC,EAAK,KACL0iC,EAAI,YACJ5M,EAAc,WAAU,YACxB6M,EAAc,OAAM,YACpB1vC,EAAW,iBACX2vC,EAAgB,iBAChBC,EAAgB,6BAChBC,GAA+B,EAAK,SACpCC,GAAW,EAAK,WAChBC,EAAU,2BACVC,EAA0B,cAC1BC,EAAa,SACbC,GACDllD,EAEC,MAAMk9B,GAAWt6B,EAAAA,EAAAA,IAAyB,MACpCtC,GAAOC,EAAAA,EAAAA,MAEP,SAAE4I,IAAaC,EAAAA,EAAAA,OACd+7C,EAAUC,IAAe77C,EAAAA,EAAAA,IAAS,KAClC87C,EAAWC,IAAgB/7C,EAAAA,EAAAA,KAAS,GACrCg8C,EAAsBp8C,EAAW,IAAM,IAgE7C,OA9DA1H,EAAAA,EAAAA,KAAU,KACJmjD,GACFQ,EAAY,GACd,GACC,CAACR,KAEJvlB,EAAAA,EAAAA,IAAW,KACJpT,EAAAA,IACHiR,EAAS95B,QAAS+V,OACpB,GACCosC,IAEH9jD,EAAAA,EAAAA,KAAU,KACJsgB,IACF6iB,EAAAA,EAAAA,KAAgB,KACd1H,EAAS95B,QAAS+V,QAClB+jB,EAAS95B,QAASoiD,QAAQ,GAE9B,GACC,CAACzjC,IA4CF9f,EAAAA,GAAAC,cAAA,QAAM2qC,OAAO,GAAGqY,SAAUA,EAzB5B,SAAsBO,GACpBA,EAAMjiC,iBAEFwW,GAIAqrB,GACFH,EAAUC,EAEd,EAesD7sC,EAAAA,EAAWotC,aAAa,OAC1EzjD,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAe,6BAA8BgjD,GAAY,UAAWpjC,GAAS,SACxFpe,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAEzBolD,GAhBH5iD,EAAAA,GAAAC,cAAA,SACEiY,KAAK,WACLza,GAAG,mBACHgmD,aAAa,MACbzlD,UAAU,kBACV0lD,UAAW,IAYX1jD,EAAAA,GAAAC,cAAA,SACE+E,IAAKi2B,EACLj9B,UAAU,eACVka,KAAMqqC,EAAoB,OAAS,WACnC9kD,GAAG,mBACH0N,MAAO+3C,GAAY,GACnBO,aAAcb,EAA+B,gBAAkB,mBAC/De,SAvDR,SAA0B31C,GACpB8R,GACFgjC,IAGF,MAAM,OAAEz6B,GAAWra,EACnBm1C,EAAY96B,EAAOld,OACnBk4C,EAAah7B,EAAOld,MAAM5J,QAAUqiD,EAAAA,KAChCZ,GACFA,EAAc36B,EAAOld,MAEzB,EA6CQghC,UAAW,IACXzqC,IAAI,SAEN1B,EAAAA,GAAAC,cAAA,aAAQ6f,GAAS0iC,GAAQ5M,GACzB51C,EAAAA,GAAAC,cAAA,OACEjC,UAAU,6BACVmC,QAjDR,WACE4iD,GAA4BR,EAC9B,EAgDQsB,KAAK,SACLH,SAAU,EACV50C,MAAM,8BAEN9O,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe,OAAQqiD,EAAoB,WAAa,uBAGzExvC,GAAe/S,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,eAAe+U,GAC3CkwC,IAAaG,GAAaV,IACzB1iD,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CAAC2X,KAAK,SAAShI,QAAS2yC,EAAU9qB,UAAWA,EAAW1N,UAAW+4B,GACvEX,GAGA,G,qNClHX,MAqKA,GAAe/lD,EAAAA,EAAAA,KAhKcqB,IAiBvB,IAjBwB,QAC5B+lD,EAAO,YACPC,EAAW,YACXC,EAAW,kBACXC,EAAiB,aACjBC,EAAY,cACZC,EAAa,UACbpsB,EAAS,gBACTqsB,EAAe,aACfC,EAAY,gBACZC,EAAe,UACfC,EAAS,cACT9wC,EAAa,oBACb+wC,EAAmB,eACnBC,EAAc,gBACdC,EAAe,WACfC,GACD5mD,EAEC,MAAMk9B,GAAWt6B,EAAAA,EAAAA,IAAyB,MACpCikD,EAAiBb,EAAYxiD,OAvBd,IAyBrB/B,EAAAA,EAAAA,KAAU,KACH6kD,GACLtgD,YAAW,MACT4+B,EAAAA,EAAAA,KAAgB,KACd1H,EAAS95B,QAAS+V,OAAO,GACzB,GAhCe,IAiCD,GACjB,CAACmtC,IAEJ,MAAOQ,EAAmBC,IAAuBnmD,EAAAA,EAAAA,KAAQ,KACvD,IAAK4lD,GAAWhjD,OAAQ,MAAO,CAAC4+B,EAAAA,EAAkB4jB,GAClD,MAAMgB,EAAchB,EAAYxkD,QAAQ9B,IAAQ8mD,EAAUzlC,SAASrhB,KACnE,MAAO,CAAC8mD,EAAWQ,EAAY,GAC9B,CAAChB,EAAaQ,IAEXS,GAAermD,EAAAA,EAAAA,KAAQ,IAAM,IAAIoE,IAAIwhD,IAAY,CAACA,IAElDU,GAAgBtmD,EAAAA,EAAAA,KAAQ,IACrBmlD,EAAQoB,MAAK,CAACC,EAAGC,KACtB,MAAMC,EAAYL,EAAazhD,IAAI4hD,GAC7BG,EAAYN,EAAazhD,IAAI6hD,GACnC,OAAIC,IAAcC,GACR,GAELD,GAAaC,EACT,EAEF,CAAC,KAET,CAACxB,EAASkB,IAEPO,GAAkB3hD,EAAAA,EAAAA,IAAiBnG,IACvC,GAAIunD,EAAazhD,IAAI9F,GAEnB,YADAinD,IAAkBjnD,GAIpB,MAAM+nD,EAAiBzB,EAAY3kD,QAC/BomD,EAAe1mC,SAASrhB,GAC1B+nD,EAAeC,OAAOD,EAAehoC,QAAQ/f,GAAK,GAElD+nD,EAAehkD,KAAK/D,GAEtB+mD,IAAsBgB,GACtBf,IAAiB,GAAG,IAGhBiB,GAAqB9hD,EAAAA,EAAAA,IAAiBoK,IAC1C,MAAM,MAAE7C,GAAU6C,EAAE+zC,cACpB0C,IAAiBt5C,EAAM,KAGlBw6C,EAAaC,IAAWC,EAAAA,EAAAA,GAAkBlB,EAAYM,EAAevnD,QAAQsmD,IAE9E3lD,GAAOC,EAAAA,EAAAA,KAEb,OACE0B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,UACZqmD,GACCrkD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,8BAA8B0D,IAAKrD,EAAKsD,MAAQ,WAAQnE,GACpEqnD,EAAkBxlD,KAAI,CAAC5B,EAAI6D,IAC1BtB,EAAAA,GAAAC,cAAC6lD,EAAAA,EAAkB,CACjB1xC,OAAQ3W,EACRsoD,YAAanB,GAAkBtjD,EAAIyiD,EAAYxiD,OAvF7B,EAwFlBkS,cAAeA,EACftT,QAASolD,EACTS,SAAUvoD,MAGbqnD,EAAoBzlD,KAAI,CAAC5B,EAAI6D,IAC5BtB,EAAAA,GAAAC,cAAC6lD,EAAAA,EAAkB,CACjB1xC,OAAQ3W,EACRsoD,YACEnB,GAAkBtjD,EAAIujD,EAAkBtjD,OAASwiD,EAAYxiD,OAjG7C,EAmGlB0kD,UAAQ,EACR9lD,QAASolD,EACTS,SAAUvoD,MAGduC,EAAAA,GAAAC,cAACimD,EAAAA,EAAS,CACRzoD,GAAI0mD,EACJn/C,IAAKi2B,EACL9vB,MAAO64C,EACPL,SAAU+B,EACV9P,YAAaqO,GAAqB5lD,EAAK,iBAK5CsnD,GAAapkD,OACZvB,EAAAA,GAAAC,cAACkmD,EAAAA,EAAc,CACbnoD,UAAU,4BACVuf,MAAOooC,EACPhB,WAAYiB,EACZxB,gBAAiBA,GAEhBuB,EAAYtmD,KAAK5B,IAChB,MAAM2oD,EAAiBA,IAEnBpmD,EAAAA,GAAAC,cAACu7C,EAAAA,EAAQ,CACP5kC,MAAM,GACNyT,SAAU26B,EAAazhD,IAAI9F,GAC3BoZ,QAASktC,EAAYjlC,SAASrhB,GAC9B+C,MAAO8jD,IAIb,OACEtkD,EAAAA,GAAAC,cAACqW,EAAAA,EAAQ,CACPhW,IAAK7C,EACLO,WAAWkC,EAAAA,EAAAA,GAAe,uCAAwCokD,GAAmB,aACrFj6B,SAAU26B,EAAazhD,IAAI9F,GAC3Bq5C,mBAAoBp5C,QAAQgnD,GAE5BvkD,QAASA,IAAMolD,EAAgB9nD,GAC/ByS,QAAM,GAEJo0C,OAAqC9mD,EAAnB4oD,KACnBl0C,EAAAA,EAAAA,IAASzU,GACRuC,EAAAA,GAAAC,cAAComD,EAAAA,EAAe,CAAC5yC,cAAeA,EAAeM,OAAQtW,IAEvDuC,EAAAA,GAAAC,cAACqmD,EAAAA,EAAa,CAACxpD,OAAQW,IAExB6mD,EAAkB8B,SAAmB5oD,EAC7B,KAIdu6B,IAAa4tB,GAAgBA,EAAYpkD,OAG5CvB,EAAAA,GAAAC,cAACsmD,EAAAA,EAAO,MAFRvmD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,cAAckmD,GAAgB,yBAIzC,G,6HCzKV,MAyEA,GAAexnD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAA4C,IAA1C,OAAE8U,EAAM,cAAEX,GAAenU,EAChC,IAAK8U,EACH,MAAO,CAAC,EAGV,MAAMrX,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQwX,GAC1BnC,GAAOE,EAAAA,EAAAA,KAAWvV,EAAQwX,GAGhC,MAAO,CACLrX,OACAkV,OACA6iC,iBALuBrhC,GAAiBxB,GAAQA,EAAKiC,OAMtD,GAdevX,EAzEkCoB,IAYhD,IAZiD,KACrDwY,EAAI,MACJzH,EAAK,YACLi3C,EAAW,aACXS,EAAY,SACZP,EAAQ,SACRD,EAAQ,KACRjpD,EAAI,KACJkV,EAAI,UACJjU,EAAS,gBACT82C,EAAe,QACf30C,GACDpC,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEb,IAAImoD,EACAC,EAEJ,GAAInwC,GAAQzH,EACV23C,EACEzmD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,aACbgC,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe,OAAS,QAAOqW,QAIjDmwC,EAAY53C,OACP,GAAImD,GAAQlV,EAAM,CACvB0pD,EACEzmD,EAAAA,GAAAC,cAACI,EAAAA,EAAM,CACLD,KAAM6R,GAAQlV,EACdiH,KAAK,QACL8wC,gBAAiBA,IAIrB,MAAM3yB,GAAQplB,GAASkV,IAAS6iC,GAC5B6C,EAAAA,EAAAA,IAAuB1lC,IACvBomC,EAAAA,EAAAA,GAAah6C,EAAMtB,EAAM+3C,GAE7B4R,EAAYvkC,GAAOvS,EAAAA,EAAAA,GAAWuS,QAAQ3kB,CACxC,CAEA,MAAM4R,GAAgBlP,EAAAA,EAAAA,GACpB,qBACAlC,EACAjB,GAAMqV,SAAW,eACjB2zC,GAAe,YACfE,GAAY,YACZO,GAAgB,cAGlB,OACExmD,EAAAA,GAAAC,cAAA,OACEjC,UAAWoR,EACXjP,QAASA,IAAMA,EAAQ6lD,GACvBl3C,MAAOi3C,EAAcW,OAAYlpD,EACjCkE,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAEzBipD,GACCV,GACA/lD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YAAY0D,IAAI,QAC5BglD,GAGJT,GACCjmD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,eACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAGb,I,6LClDV,MAkJA,GAAetB,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAA4C,IAA1C,OAAEyU,EAAM,cAAEN,GAAenU,EAChC,MAAM2S,GAAOE,EAAAA,EAAAA,KAAWvV,EAAQmX,GAKhC,MAAO,CACL9B,OACA00C,YANiBC,EAAAA,EAAAA,KAAiBhqD,EAAQmX,GAO1C+gC,iBANuBrhC,GAAiBxB,GAAQA,EAAKiC,OAOrDuqC,kBANwB/gD,SAAQghD,EAAAA,EAAAA,KAAmB9hD,EAAQmX,IAO5D,GAZepX,EAlJ+BoB,IAuB7C,IAvB8C,aAClDghD,EAAY,WACZC,EAAa,SAAQ,OACrBE,EAAM,WACN2H,EAAU,SACV1H,EAAQ,gBACRrE,EAAe,aACftG,EAAY,UACZiL,EAAS,aACTL,EAAY,mBACZC,EAAkB,gBAClByH,EAAe,iBACftH,EAAgB,cAChBuH,EAAa,MACbxH,EAAK,KACLttC,EAAI,WACJ00C,EAAU,gBACV7R,EAAe,kBACf2J,EAAiB,YACjBuI,EAAW,OACX92C,EAAM,mBACN+2C,EAAkB,kBAClBvH,GACD3hD,EACC,MAAM,aACJ2V,EAAY,gBACZksC,EAAe,kBACfC,IACEzhD,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,MAELb,GAAIsW,GAAW9B,GAAQ,CAAC,GAEhCzS,EAAAA,EAAAA,KAAU,KACJuU,IACEqrC,GAAc1rC,EAAa,CAAEK,WAC7B+mC,GAAiB+E,EAAkB,CAAEG,UAAWjsC,IACtD,GACC,CAACA,EAAQqrC,EAActE,IAE1B,MAAMmF,GAAyBr8C,EAAAA,EAAAA,IAC7B,CAACoK,EAAiDkyC,KAC5CjuC,GAAQiuC,IACVlyC,EAAEM,kBACFsxC,EAAgB,CACdO,cAAeluC,EAAKxU,GACpB2iD,QAAS,EACT76C,OAAuB,UAAfy5C,EAAyBqB,EAAAA,GAAkBC,cAAgBD,EAAAA,GAAkBE,qBAEzF,IAIE5qC,GAAehX,EAAAA,EAAAA,KAAQ,IAAMsT,GAAQuiC,IAAgBgM,EAAAA,EAAAA,IAAgBvuC,IAAO,CAACA,EAAMuiC,IAEzF,IAAKviC,EACH,OAqCF,MAAMi1C,EAAcF,EAChBA,EAAYE,aAAe7oD,EAAK2oD,EAAYG,QAAU,uBAAyB,6BAC/E3pD,EA6BJ,OACEwC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,WAAW0D,KAAM69C,GAASlhD,EAAKsD,MAAQ,WAAQnE,GAC5DwC,EAAAA,GAAAC,cAACI,EAAAA,EAAM,CACLC,IAAK2R,EAAKxU,GACVuG,KAAMg7C,EACN5+C,KAAM6R,EACN6iC,gBAAiBA,EACjB2K,UAAWA,EACXC,kBAAmBA,EACnBe,gBAAgB,cAChBtgD,QAAS26C,EAAkBmF,OAAyBziD,IAEtDwC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,QAtCbkpD,EAEAlnD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,mBACbgC,EAAAA,GAAAC,cAAC0gD,EAAAA,EAAa,CACZvgD,KAAM6R,EACNm1C,iBAAkBL,EAClBD,gBAAiBA,EACjBhS,gBAAiBA,EACjBmS,mBAAoBA,IAErBC,GAAelnD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,gBAAgBkpD,IAMpDlnD,EAAAA,GAAAC,cAAC0gD,EAAAA,EAAa,CACZvgD,KAAM6R,EACNm1C,iBAAkBL,EAClBD,gBAAiBA,EACjBhS,gBAAiBA,EACjBmS,mBAAoBA,KAmBlB/H,IAAYpK,IAAoB0K,KA9ElCN,EACKC,EACLn/C,EAAAA,GAAAC,cAAC2gD,EAAAA,EAAY,CAAC5iD,UAAU,SAAS2I,QAASu4C,IAE1Cl/C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAS0D,IAAI,QAC1BmlD,GAAc7mD,EAAAA,GAAAC,cAAA,KAAGjC,UAAY,aAAY6oD,mBACzCj3C,EAAAA,EAAAA,GAAWsvC,IAKdG,IAAuBZ,EAEvBz+C,EAAAA,GAAAC,cAAC2gD,EAAAA,EAAY,CAAC5iD,UAAU,SAAS2I,QAAStI,EAAK,cAI9C4T,EAID8sC,EACK/+C,EAAAA,GAAAC,cAAC4gD,EAAAA,EAAY,CAAC9B,aAAcA,IAInC/+C,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GAAe,UAAUmnD,EAAAA,EAAAA,IAAap1C,EAAM00C,IAAe,WACzEhxC,GAAgB3V,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UAAU2X,GAC3C3V,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAAc0D,IAAI,SAAQ4lD,EAAAA,EAAAA,IAAcjpD,EAAM4T,EAAM00C,UAXxE,IA+DGz2C,GAAUlQ,EAAAA,GAAAC,cAACsnD,EAAAA,EAAY,MACpB,I,yUC7JV,MAkHA,GAAe7qD,EAAAA,EAAAA,KAlHoBqB,IAO7B,IAP8B,KAClChB,EAAI,KACJkV,EAAI,MACJggB,EAAK,gBACL6iB,EAAe,aACf0S,EAAY,QACZrnD,GACDpC,EAEC,MAAM0pD,GAAW9mD,EAAAA,EAAAA,IAAyB,MAEpCtC,GAAOC,EAAAA,EAAAA,MACP,SAAE4I,IAAaC,EAAAA,EAAAA,MAEfugD,EAAYz1C,IAAQ01C,EAAAA,EAAAA,IAAc11C,GAClC21C,EAAgB7qD,IAAQ8qD,EAAAA,EAAAA,IAAqB9qD,EAAKU,IAClDqqD,EAAa71C,GAAQlV,EACrBgrD,EAAeD,IAAehT,IAAoB4S,IAAcE,GAChE,QAAEI,GAAY/1B,GAAS,CAAC,EAExBg2B,EAAaF,IAAgBG,EAAAA,EAAAA,IAAkBJ,EAAY,UAC3DK,GAAgB7lD,EAAAA,EAAAA,GAAS2lD,GAEzBG,EAAYL,GAAgB91B,IAAU+1B,GAAY,QAAO/1B,EAAMx0B,YAC/D4qD,GAAe/lD,EAAAA,EAAAA,GAAS8lD,GAExBE,EAAYP,GAAgB91B,GAAS+1B,IAAWO,EAAAA,EAAAA,IAAwBt2B,GAGxEu2B,GAFelmD,EAAAA,EAAAA,GAASgmD,IAEQD,GAC/BI,EAAcC,IAAkB3nD,EAAAA,EAAAA,KACjC4nD,EAAmBjrD,QAAQ8qD,KAAmBR,GAAWS,IACzD9oD,GAAuBwD,EAAAA,EAAAA,GAAmBwlD,GAC1CC,EAAiBb,IAAiBY,IAAqBR,GAAiBl2B,GAAO/vB,WAAWC,QAC1F0mD,GAAwBjL,EAAAA,EAAAA,GAC5B3rB,GAAO/vB,WAAWC,SAAUymD,EAAgB1hD,IAAa22C,EAAAA,IAErDqC,EAAWjuB,GAASk2B,GAAiBS,EAQ3C,IAAIjiD,EAEJ,IARAnH,EAAAA,EAAAA,KAAU,KACJioD,EAAStmD,UAAYqmD,IACvBC,EAAStmD,QAAQ2nD,YAAc,EACjC,GACC,CAACtB,IAIA1S,EACFnuC,EAAU3G,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,yCAClB,GAAI0pD,EACT/gD,EAAU3G,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,0CAClB,GAAI4pD,EACTjhD,EAAU3G,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,gCAClB,GAAIkiD,EACTv5C,EACE3G,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACG+3C,EACC5oD,EAAAA,GAAAC,cAAA,UAAQ+E,IAAK6jD,EAAuB7qD,UAAU,UAE9CgC,EAAAA,GAAAC,cAAA,OAAKkE,IAAKgkD,EAAe9jD,WAAW,EAAOrG,UAAU,QAAQ8iB,IAAI,KAElEmR,IACC+1B,EACEhoD,EAAAA,GAAAC,cAAC8oD,EAAAA,EAAc,CACbC,QAASxB,EACTxiD,IAAKyiD,EACLtjD,IAAKqkD,EACLxqD,WAAWkC,EAAAA,EAAAA,GAAe,eAAgBP,GAC1CspD,OAAK,EACLC,yBAAuB,EACvBC,MAAI,EACJC,aAAW,EACXC,QAASX,IAGX1oD,EAAAA,GAAAC,cAAA,OACEkE,IAAKqkD,EACLxqD,WAAWkC,EAAAA,EAAAA,GAAe,eAAgBP,GAC1CmhB,IAAI,YAMT,GAAI7O,EAAM,CACf,MAAMq3C,GAAeC,EAAAA,EAAAA,IAAgBt3C,GACrCtL,EAAU2iD,GAAeE,EAAAA,EAAAA,IAAgBF,EAAc,QAAK9rD,CAC9D,MAAO,GAAIT,EAAM,CACf,MAAM+R,GAAQupC,EAAAA,EAAAA,GAAah6C,EAAMtB,GACjC4J,EAAUmI,IAAS06C,EAAAA,EAAAA,IAAgB16C,GAAOoD,EAAAA,EAAAA,IAASnV,EAAKU,IAAM,EAAI,EACpE,MACEkJ,EACE3G,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,mBACbgC,EAAAA,GAAAC,cAACm2C,EAAAA,EAAO,CAACjmC,MAAM,WAKrB,MAAMf,GAAgBlP,EAAAA,EAAAA,GACpB,eACC,aAAW28C,EAAAA,EAAAA,IAAgB5qC,GAAQlV,KACpC+3C,GAAmB,iBACnB4S,GAAa,kBACbE,GAAiB,uBACf9S,IAAoBoL,GAAa,YAGrC,OACElgD,EAAAA,GAAAC,cAAA,OAAKjC,UAAWoR,EAAejP,QAAS+/C,EAAW//C,OAAU3C,GACvC,iBAAZmJ,GAAuBiJ,EAAAA,EAAAA,GAAWjJ,EAAS,CAAC,aAAeA,EAC/D,I,cCtJV,QAAqF,uBAArF,EAA4H,uBAA5H,EAA2K,uBAA3K,EAAyN,uBAAzN,EAA4S,uBAA5S,EAA6e,uBCiW7e,GAAejK,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAA4C,IAA1C,OAAEyU,EAAM,cAAEN,GAAenU,EAChC,MAAM,gBAAEmqD,GAAoB7sD,EACtBqV,GAAOE,EAAAA,EAAAA,KAAWvV,EAAQmX,GAC1Bw/B,GAAYrhC,EAAAA,EAAAA,IAAS6B,GACrB4yC,GAAaC,EAAAA,EAAAA,KAAiBhqD,EAAQmX,GACtChX,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQmX,GAC1B+gC,GAAmBrhC,GAAiBxB,GAAQA,EAAKiC,QACjD,QAAEksC,EAAO,cAAED,IAAkB/iD,EAAAA,EAAAA,KAAeR,GAAQ8sD,YACpDt3C,EAAUrV,GAAMqV,SACdK,SAAUk3C,IAAmBj3C,EAAAA,EAAAA,KAAyB9V,IAAW,CAAC,EACpE+hD,EAAQvsC,GAAWu3C,EAAiB5sD,GAAM6hD,SAAS+K,QAAkBnsD,EACrEosD,EAAerW,GAAYvgC,EAAAA,EAAAA,KAAmBpW,EAAQmX,QAAUvW,EAChEy1B,EAAgBsgB,OAAiD/1C,GAArCqV,EAAAA,EAAAA,KAAmBjW,EAAQmX,GAE7D,MAAO,CACL01C,kBACAx3C,OACA00C,aACA5pD,OACA8sD,kBAAmBD,GAAcE,cACjCC,iBAAkBH,GAAcI,aAChCC,kBAAmBL,GAAcM,cACjCC,iBAAkBl3B,GAAc+2B,aAChClV,kBACAsL,UACAD,mBACIxB,GAAS,CACXA,QACAE,eAAeC,EAAAA,EAAAA,KAA0BliD,EAAQmX,EAAQ41C,IAE5D,GA/BehtD,EA5R2BoB,IAgBzC,IAhB0C,cAC9C0V,EAAa,aACb+zC,EAAY,KACZv1C,EAAI,WACJ00C,EAAU,KACV5pD,EAAI,gBACJ+3C,EAAe,gBACf2U,EAAe,QACfrJ,EAAO,cACPD,EAAa,MACbxB,EAAK,cACLE,EAAa,kBACbgL,EAAiB,iBACjBE,EAAgB,kBAChBE,EAAiB,iBACjBE,GACDpsD,EACC,MAAM,aACJ2V,EAAY,gBACZksC,EAAe,iBACfwK,IACEhsD,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,MAELb,GAAIsW,GAAW9B,GAAQ,CAAC,GACxBxU,GAAIX,GAAWC,GAAQ,CAAC,EAC1BstD,EAASp4C,GAAMo4C,QAAUttD,GAAMstD,QAAUlqB,EAAAA,EACzCmqB,GAAc3uB,EAAAA,EAAAA,GAAYykB,GAC1BmK,GAAoB5uB,EAAAA,EAAAA,GAAYwkB,GAChCqK,GAAavnB,EAAAA,EAAAA,GAAYmd,IACxBqK,EAAmBC,IAAwBpjD,EAAAA,EAAAA,KAAS,GAErDqjD,GAAiBF,EAAqBpsD,EAAKsD,MAAQ,WAAa,QAAW,QAE1EipD,GAAmBC,KAAwBvjD,EAAAA,EAAAA,IAAS,GACrDwjD,GAAUhW,GAAmBuV,EAAO9oD,QAAU,GAA2B,IAAtBqpD,GACnDG,GAASjW,GAAmBuV,EAAO9oD,QAAU,GAAKqpD,KAAsBP,EAAO9oD,OAAS,GAG9F/B,EAAAA,EAAAA,KAAU,KACJ+qD,QAAqC/sD,IAAhB8sD,QAAyC9sD,IAAZ4iD,IACpDsK,GAAqB,GACrBG,GAAqBP,GACvB,GACC,CAAClK,EAASkK,EAAaC,KAG1B/qD,EAAAA,EAAAA,KAAU,KACRkrD,GAAqB,GACrBG,GAAqBL,EAAWrpD,SAAW,EAAE,GAC5C,CAACqpD,EAAYH,KAGhB7qD,EAAAA,EAAAA,KAAU,KACJorD,GAAoBP,EAAO9oD,SAC7BmpD,GAAqB,GACrBG,GAAqBphD,KAAK8C,IAAI,EAAG89C,EAAO9oD,OAAS,IACnD,GACC,CAACqpD,GAAmBP,EAAO9oD,UAE9B/B,EAAAA,EAAAA,KAAU,KACgB,yBAApBiqD,GAA8C11C,IAAWN,GAC3DC,EAAa,CAAEK,UACjB,GACC,CAACA,EAAQL,EAAc+1C,EAAiBh2C,IC9H9B,SACb42C,EACAW,IAEAxrD,EAAAA,EAAAA,KAAU,KACR6qD,EAAOjrD,MAAM4rD,EAAcA,EAPL,GAOuC7+C,SAAS8lB,IAClDg5B,EAAAA,GAA2B,QAAOh5B,EAAMx0B,cAExDwtD,EAAAA,GAAmB,QAAOh5B,EAAMx0B,YAAa+E,EAAAA,GAAeC,QAC9D,GACA,GACD,CAACuoD,EAAcX,GACpB,CDoHEa,CAAiBb,EAAQO,IAEzB,MAAMO,IAA0BvnD,EAAAA,EAAAA,IAAgB,KAC9Cg8C,EAAgB,CACdO,cAAepsC,GAAUjX,EACzBsjD,QAASwK,GACTrlD,OAAQkO,EAAgB4sC,EAAAA,GAAkB+K,eAAiB/K,EAAAA,GAAkBC,eAC7E,IAGE+K,IAAoBznD,EAAAA,EAAAA,IAAgB,KACnCmQ,GAELq2C,EAAiB,CAAEkB,WAAYv3C,GAAS,IAGpCw3C,IAAsB3nD,EAAAA,EAAAA,IAAgB,KACtCknD,KAGJJ,GAAqB,GACrBG,GAAqBD,GAAoB,GAAE,IAGvCY,IAAkB5nD,EAAAA,EAAAA,IAAgB,KAClCmnD,KAGJL,GAAqB,GACrBG,GAAqBD,GAAoB,GAAE,IAgC7C,IAtBAprD,EAAAA,EAAAA,KAAU,KACR,MAAMswC,EAAU14B,SAASkY,cAA+B,IAAGlrB,KAC3D,GAAK0rC,EAIL,OAAO9gC,EAAAA,EAAAA,IAAc8gC,EAAS,CAC5B2b,wBAAyB,8BACzBC,QAAS1hC,EAAAA,GAAe,CAAChc,EAAG29C,IACtBA,IAAcC,EAAAA,GAAeC,OAC/BN,MACO,GACEI,IAAcC,EAAAA,GAAeE,OACtCN,MACO,QAIPhuD,GACJ,GACD,CAACguD,GAAiBD,KAEhBt5C,GAASlV,EA0Ed,OAAI4hD,EApEA3+C,EAAAA,GAAAC,cAAA,OAAKjC,UD3M4qB,wBC4M/qBgC,EAAAA,GAAAC,cAACygD,EAAAA,EAAS,CACR/B,MAAOA,EACP36C,KA3Ie,IA4IfhG,UD/MovB,uBCgNpvB+tD,gBDhN4xB,uBCiN5xBC,aAAW,IAEbhsD,EAAAA,GAAAC,cAAA,MAAIjC,UDnN+sB,uBCmNjrB0D,IAAKrD,EAAKsD,MAAQ,WAAQnE,IAAYoS,EAAAA,EAAAA,GAAW+uC,EAAO7vC,QAC1F9O,EAAAA,GAAAC,cAAA,KAAGjC,UDpNy0B,wBCqNz0B6gD,EAAgBxgD,EAAK,mBAAoBwgD,EAAe,KAAOxgD,EAAK,2BA+D3E2B,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAe,cAAeuT,GDrRxB,wBCsRjB/R,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAE1BwC,EAAAA,GAAAC,cAAA,OAAKjC,UAAWoG,GA7DpB,WACE,KAAI0wC,IAAoBuV,GAAUA,EAAO9oD,QAAU,GAInD,OACEvB,EAAAA,GAAAC,cAAA,OAAKjC,UDjOsU,wBCkOxUqsD,EAAOhrD,KAAI,CAAC4sD,EAAG3qD,IACdtB,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GDnOyV,uBCmOxToB,IAAMspD,IDnO6V,4BCuO7Z,CAkDOsB,IACCz4C,GAAiBo2C,GACjB7pD,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GACdkE,EACA0mD,IAAW1mD,IAGXpE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWoG,GACb/F,EAAKwrD,EAAkB7B,QAAU,uBAAyB,0BAIhEv0C,GAAiBw2C,GAChBjqD,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GACdkE,GACC0mD,IAAWC,KAAW3mD,IAGvBpE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWoG,EAA8BjE,QAnIxD,WACO2qD,KACLJ,GAAqB,GACrBG,GAAqBR,EAAO9oD,OAAS,GACvC,IAgIcwpD,IACA/qD,EAAAA,GAAAC,cAACI,EAAAA,EAAM,CACL4xB,MAAOg4B,EACPjsD,UD/SoP,uBCgTpPgG,KAAK,SAGR3F,EAAK4rD,EAAkBjC,QAAU,uBAAyB,0BAIjEhoD,EAAAA,GAAAC,cAACmiD,EAAAA,EAAU,CAACC,UAAWuI,GAAmBzoC,KAAMwoC,IAC7CwB,KAGDrB,IACA9qD,EAAAA,GAAAC,cAAA,UACEiY,KAAK,SACLxW,IAAKrD,EAAKsD,MAAQ,WAAQnE,EAC1BQ,WAAWkC,EAAAA,EAAAA,GAAekE,ED/Tgf,wBCgU1gB,aAAY/F,EAAK,oBACjB8B,QAASorD,MAGXR,IACA/qD,EAAAA,GAAAC,cAAA,UACEiY,KAAK,SACLxW,IAAKrD,EAAKsD,MAAQ,WAAQnE,EAC1BQ,WAAWkC,EAAAA,EAAAA,GAAekE,EDxUikB,wBCyU3lB,aAAY/F,EAAK,QACjB8B,QAASqrD,MAKfxrD,EAAAA,GAAAC,cAAA,OAAKjC,UD/U0C,uBC+UlB0D,IAAKrD,EAAKsD,MAAQ,MAAQ,SACnDsQ,GAAQlV,IACRiD,EAAAA,GAAAC,cAAC0gD,EAAAA,EAAa,CACZvgD,KAAO6R,GAAQlV,EACfqqD,iBAAe,EACfN,gBAlRc,GAmRdhS,gBAAiBA,EACjBmS,mBAAoBoE,GACpBW,aAAW,EACXI,cAAY,KAGdtX,IA9FF7iC,EAEAjS,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAekE,EAAe,UAAUijD,EAAAA,EAAAA,IAAap1C,EAAM00C,IAAe,WACxF3mD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAAc0D,IAAI,SAAQ4lD,EAAAA,EAAAA,IAAcjpD,EAAM4T,EAAM00C,KAMxE3mD,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GAAekE,EAAe,UAAW1C,IAAI,SAC5D0R,EAAAA,EAAAA,IAAcrW,GACVsB,EAAK,cAAetB,EAAMkkD,cAAgB,EAAG,KAC7C5iD,EAAK,UAAWtB,EAAMkkD,cAAgB,EAAG,SAhCnD,SAASkL,GAAYhvD,GACnB,MAGM6sD,IAHSlV,GAAmBuV,EAAO9oD,OAAS,EAC9C8oD,EAAOO,SACPptD,IAC0BqsD,GAAqBE,GAAoBI,GAAoBF,EAE3F,OACEjqD,EAAAA,GAAAC,cAACosD,EAAY,CACX/rD,IAAKsqD,GACL34C,KAAMA,EACNlV,KAAMA,EACNk1B,MAAO+3B,EACPlV,gBAAiBA,EACjB0S,aAAc9pD,QAAQP,GAAYqqD,GAClCrnD,QAASgrD,IAGf,CAmGQ,I,4HElUV,MAqDA,GAAezuD,EAAAA,EAAAA,KArD2BqB,IAOpC,IAPqC,SACzCg0C,EAAQ,mBACRnc,EAAkB,UAClB53B,EAAS,KACTgG,EAAI,cACJsoD,EAAa,oBACbtT,GACDj7C,EACC,MAAMwuD,EAAW,eAAgBxa,EAC3Bya,GAAoB7tD,EAAAA,EAAAA,KAAQ,IAChCi3B,GAAoBlE,MAAM+6B,IAAcC,EAAAA,EAAAA,IAAeD,EAAU1a,SAAUA,MAC1E,CAACnc,EAAoBmc,IAClB4a,EAAeH,GAAmBI,YAAYnvD,GAC9CkK,GAAYrF,EAAAA,EAAAA,GAAU,WAAUqqD,KAAiBA,EAAcnqD,EAAAA,GAAeC,SAE9E9C,GAAuBwD,EAAAA,EAAAA,GAAmBwE,GAE1CklD,EAAqB,aAAc9a,GAAkC,OAAtBA,EAASlV,SACxDiwB,EAA6BR,GAAiB,aAAcva,GAAkC,MAAtBA,EAASlV,SAEvF,OAAI0vB,EAEAvsD,EAAAA,GAAAC,cAACghB,EAAAA,EAAW,CACV4nB,WAAYkJ,EAASlJ,WACrB7qC,WAAWkC,EAAAA,EAAAA,GAAe,sBAAuBlC,GACjDgG,KAAMA,EACN+3C,8BAA+B/C,IAKjC8T,EAEA9sD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sCAAsCiG,MAAQ,cAAaD,eAAkBA,QAK5FhE,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GACT,sBACA2sD,GAAsB,mBACtBltD,EACA3B,GAEFiG,MAAOD,EAAQ,UAASA,gBAAmBA,WAAWxG,EACtD2G,IAAKwD,GAAaolD,EAClBjsC,IAAK0rC,GAAmB19C,MACxBzK,WAAW,GACX,G,wICjDN,MA2GA,GAAe3H,EAAAA,EAAAA,KA3GmBqB,IAS5B,IAT6B,OACjC0rB,EAAM,QACNujC,EAAU,WAAU,OACpB54C,EAAM,MACN6d,EAAK,WACLnG,EAAU,QACV4G,EAAO,QACP7I,EAAO,oBACPC,GACD/rB,EACC,MAAM,eACJkvD,EAAc,WACdC,EAAU,mBACVC,EAAkB,YAClBC,EAAW,sBACXC,IACEjvD,EAAAA,EAAAA,OAEGkvD,EAAgBC,IAAqBjmD,EAAAA,EAAAA,IAA0B,SAC/DyL,EAAay6C,IAAkBlmD,EAAAA,EAAAA,IAAS,IAEzCmmD,GAAe7pD,EAAAA,EAAAA,IAAgB,KACnC,OAAQopD,GACN,IAAK,WACHC,EAAe,CAAEnhC,WAAYA,EAAa4hC,OAAQJ,EAAgBv6C,gBAClEs6C,IACA,MACF,IAAK,OACHH,EAAW,CAAEpwD,OAAQsX,EAAQs5C,OAAQJ,EAAgBv6C,gBACrD,MACF,IAAK,QACHo6C,EAAmB,CACjBrwD,OAAQsX,EAAQ6d,QAAOy7B,OAAQJ,EAAgBv6C,gBAEjD,MACF,IAAK,QACHq6C,EAAY,CACVh5C,OAAQA,EAASse,QAASA,EAAUg7B,OAAQJ,EAAgBv6C,gBAGlE8W,GAAS,IAGL8jC,GAAqB/pD,EAAAA,EAAAA,IAAiBuH,IAC1CoiD,EAAkBpiD,EAAyB,IAGvCyiD,GAA0BhqD,EAAAA,EAAAA,IAAiBoK,IAC/Cw/C,EAAex/C,EAAEqa,OAAOld,MAAM,IAG1B9M,GAAOC,EAAAA,EAAAA,KAEPuvD,GAA8DlvD,EAAAA,EAAAA,KAAQ,IAAM,CAChF,CAAEwM,MAAO,OAAQyL,MAAOvY,EAAK,2BAC7B,CAAE8M,MAAO,WAAYyL,MAAOvY,EAAK,+BACjC,CAAE8M,MAAO,cAAeyL,MAAOvY,EAAK,kCACpC,CAAE8M,MAAO,aAAcyL,MAAOvY,EAAK,kCACnC,CAAE8M,MAAO,YAAayL,MAAOvY,EAAK,+BAClC,CAAE8M,MAAO,eAAgByL,MAAO,iBAChC,CAAEzL,MAAO,kBAAmByL,MAAO,oBACnC,CAAEzL,MAAO,QAASyL,MAAOvY,EAAK,8BAC7B,CAACA,IAEJ,GACe,aAAZ2uD,IAA2BlhC,GACZ,SAAZkhC,IAAuB54C,GACX,UAAZ44C,KAAyB54C,IAAW6d,IACxB,UAAZ+6B,KAAyBt6B,IAAYte,GAEzC,OAGF,MAAMtF,EACFzQ,EADsB,aAAZ2uD,EACL,2BACA,qBAET,OACEhtD,EAAAA,GAAAC,cAAC24C,EAAAA,EAAK,CACJnvB,OAAQA,EACRI,QAASA,EACTikC,QAASrkC,EAASgkC,OAAejwD,EACjCssB,oBAAqBA,EACrB9rB,WAAWkC,EAAAA,EAAAA,GAAe,SAAsB,UAAZ8sD,GAAuB,wBAC3Dl+C,MAAOA,GAEP9O,EAAAA,GAAAC,cAAC8tD,EAAAA,EAAU,CACT5rC,KAAK,iBACLrK,QAAS+1C,EACTlK,SAAUgK,EACVK,SAAUV,IAEZttD,EAAAA,GAAAC,cAACimD,EAAAA,EAAS,CACRtvC,MAAOvY,EAAK,iCACZ8M,MAAO4H,EACP4wC,SAAUiK,IAEZ5tD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,kBACbgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CAAC4P,MAAM,SAASnS,UAAU,wBAAwB86C,QAAM,EAAC34C,QAASstD,GACtEpvD,EAAK,sBAER2B,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CAACvC,UAAU,wBAAwB86C,QAAM,EAAC34C,QAAS0pB,GAAUxrB,EAAK,YAErE,G,uEChHZ,MAqCA,GAAe3B,EAAAA,EAAAA,KAlCiBqB,IAQ1B,IAR2B,MAC/B4gD,EAAK,UACL3gD,EAAS,gBACT+tD,EAAe,KACf/nD,EAAI,YACJgoD,EAAW,oBACXhT,EAAmB,QACnB74C,GACDpC,EACC,OAAI4gD,EAAMsP,aAXY,MAWGtP,EAAMsP,YAE3BjuD,EAAAA,GAAAC,cAACghB,EAAAA,EAAW,CACV4nB,WAAY8V,EAAMsP,YAClBjwD,UAAWA,EACXgG,KAAMA,EACN+3C,8BAA+B/C,EAC/BkV,UAAYlC,OAA2BxuD,EAnB5B,EAoBX2C,QAASA,IAMbH,EAAAA,GAAAC,cAACkuD,EAAAA,EAAgB,CACfC,UAAWzP,EAAMyP,UACjBt/C,MAAO6vC,EAAM7vC,MACb6D,QAASgsC,EAAMlhD,GACfO,UAAWA,EACX+tD,gBAAiBA,EACjB5rD,QAASA,GACT,G,kHC5BN,MAkBA,GAAezD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAmC,IAAjC,aAAEy/C,GAAcz/C,EACvB,OAAKy/C,EAAahrC,OAMX,CAAEs6C,YAFUl8C,EAAAA,EAAAA,KAAWvV,EAAQmiD,EAAahrC,SAH1C,CAAC,CAKW,GARLpX,EAlB4BoB,IAAkC,IAAjC,aAAEghD,EAAY,WAAEsP,GAAYtwD,EAC3E,MAAMM,GAAOC,EAAAA,EAAAA,KACPgwD,EAAiBD,IAAeA,EAAWn6C,SAAUyjC,EAAAA,EAAAA,IAAuB0W,GAC5E1nD,EAAUtI,EAAK0gD,EAAanU,QAE/B3xB,QAAQ,SAAU,IAClBA,QAAQ,UAAW8lC,EAAazf,OAAS,IAAIiI,OAEhD,OACEvnC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,gBAAgB0D,IAAKrD,EAAKsD,MAAQ,MAAQ,QACpD2sD,GACCtuD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAAc0D,IAAI,SAAQkO,EAAAA,EAAAA,GAAW0+C,IAEvDtuD,EAAAA,GAAAC,cAAC2gD,EAAAA,EAAY,CAACj6C,QAASA,IACrB,I,qKCZR,MAyGA,GAAejK,EAAAA,EAAAA,KA3FeqB,IAExB,IAFyB,QAC7BqH,EAAO,YAAEC,EAAW,YAAEq2C,EAAW,oBAAE1C,EAAmB,eAAEuV,GACzDxwD,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEb,IAAIkwD,GAAgDC,EAAAA,EAAAA,IAAkBrpD,GAEtE,IAAKopD,EAAU,CACb,MAAM15C,GAAO45C,EAAAA,EAAAA,IAAsBtpD,GACnC,GAAI0P,EAAM,CACR,MAAM,IAAE4E,EAAG,OAAEi1C,GAAW75C,EAExB05C,EAAW,CACTI,SAAUD,EAAO11C,QAAQ,QAAS,IAClCS,IAAKA,EAAIoF,SAAS,OAASpF,EAAMA,EAAIoF,SAAS,KAAQ,UAASpF,IAAS,UAASA,IACjFm1C,sBAAsBC,EAAAA,EAAAA,IAAe1pD,KAAasU,GAC9Cq1C,EAAAA,EAAAA,GAAqB1wD,EAAM+G,OAAS5H,OAAWA,EA9BnC,UA+BZA,EAER,CACF,CAEA,MAAMixB,GAAqB7qB,EAAAA,EAAAA,IAAgB,KACzC2qD,EAAenpD,EAAQ3H,GAAI2H,EAAQtI,OAAO,IAG5C,IAAK0xD,EACH,OAGF,MAAM,SACJI,EAAQ,IACRl1C,EAAG,WACHs1C,EAAU,MACVlgD,EAAK,YACLiE,EAAW,qBACX87C,EAAoB,MACpB58B,EAAK,MACLnrB,GACE0nD,EAEES,GAAwB5pD,GAAe0N,IAAem8C,EAAAA,EAAAA,GAASn8C,EAvD/C,KAyDhB/U,GAAYkC,EAAAA,EAAAA,GAChB,uBACE+xB,IAAUnrB,GAAU,iBAGlBqoD,EAAkBz1C,EAAIT,QAAQ,UAAW,KAAO+1C,EAEtD,OACEhvD,EAAAA,GAAAC,cAAA,OACEjC,UAAWA,EACX,gBAAe4wD,GAAYI,GAAY,GACvCttD,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAEzBy0B,GACCjyB,EAAAA,GAAAC,cAACmvD,EAAAA,EAAK,CAAChqD,QAASA,EAASs2C,YAAaA,EAAa1C,oBAAqBA,IAE1Eh5C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,WACbgC,EAAAA,GAAAC,cAAC4P,EAAAA,EAAI,CAAClO,MAAOtD,EAAKsD,MAAO3D,UAAU,aAAamC,QAASsuB,IACtD7e,EAAAA,EAAAA,GAAWd,GAAS8/C,GAAYI,KAEjCC,GAAwBJ,IACxB7uD,EAAAA,GAAAC,cAAC4P,EAAAA,EAAI,CAAClO,MAAOtD,EAAKsD,MAAO3D,UAAU,mBAAmBmC,QAASsuB,GAC5DogC,GAAyBI,IAAwBr/C,EAAAA,EAAAA,GAAWq/C,IAGjEjvD,EAAAA,GAAAC,cAACovD,EAAAA,EAAQ,CACP31C,IAAKA,EACL1b,UAAU,YACVyC,KAAM0uD,EACNxtD,MAAOtD,EAAKsD,QAEb0D,GAAerF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBAAe4R,EAAAA,EAAAA,GAAWvK,KAE1DA,GACCrF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBACbgC,EAAAA,GAAAC,cAAC4P,EAAAA,EAAI,CACH7R,UAAU,OACVmC,QAASsuB,EACT9sB,MAAOtD,EAAKsD,QAEXmO,EAAAA,EAAAA,IAAoBzR,EAAqB,IAAf+G,EAAQI,QAIrC,G,kGC9GH,SAAS8pD,EAAiBvxD,GAoB9B,IApB+B,QAChCqH,EAAO,UACPmqD,EAAS,UACTC,EAAS,SACTC,EAAQ,eACRC,EAAc,YACdhU,EAAW,cACXiU,EAAa,mBACbC,EAAkB,iBAClBC,GAWD9xD,EACC,MAAM,KAAE0C,EAAI,SAAEihB,GAAatc,EAAQuB,QAAQlG,MAAQ,CAAC,EAEpD,IAAKA,EAAM,CACT,MAAMqvD,GAA0BhB,EAAAA,EAAAA,IAAe1pD,GAC/C,OAAO0qD,EAA0B,EAACZ,EAAAA,EAAAA,GAASY,EAAyBJ,SAAmBlyD,CACzF,CAEA,MAAMuyD,GAAaC,EAAAA,EAAAA,IAAc5qD,GAEjC,OAAO6qD,EAAAA,EAAAA,GAAuB,CAC5BxvD,MAAMyuD,EAAAA,EAAAA,GAASzuD,EAAMivD,GACrBhuC,WACA6tC,YACAC,YACAI,qBACAvd,YAAc,GAAEwd,EAAmB,MAAQ,KAAKE,IAChDN,WACA/T,cACAiU,iBAEJ,CAGO,SAASZ,EACd1wD,EACA+G,GAIY,IAHZm4C,EAAOt0C,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GACPsmD,EAAkBtmD,UAAA1H,OAAA,EAAA0H,UAAA,QAAAzL,EAClBkyD,EAAczmD,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAGinD,EAAAA,GAEjB,MAAM,SAAExuC,GAAatc,EAAQuB,QAAQlG,MAAQ,CAAC,EAExC0vD,EAAczuC,GAAU0L,MAAMpf,GAAMA,EAAEkK,OAAS6I,EAAAA,GAAsBqvC,UACrEC,EAAiB3uC,GAAU0L,MAAMpf,GAAMA,EAAEkK,OAAS6I,EAAAA,GAAsBE,cAC9E,IAAKkvC,IAAgBE,EAAgB,CACnC,MAAM5vD,GAAOyuD,EAAAA,EAAAA,IAASoB,EAAAA,EAAAA,IAAsBjyD,EAAM+G,EAASm4C,GAAUmS,GAErE,OAAIH,GACK3/C,EAAAA,EAAAA,GAAWnP,EAAM,CAAC,QAAS,aAAc,CAAE8uD,eAE3C3/C,EAAAA,EAAAA,GAAWnP,EAEtB,CAEA,MAAM6+B,GAASie,IAAWgT,EAAAA,EAAAA,IAAuBnrD,GAC3CorD,EAAiBlxB,EAAS,GAAEA,KAAW,GAEvC7+B,EAAO6uD,EAAkB,CAC7BlqD,UAASmqD,YAAWE,UAAU,EAAMC,mBAEhC38C,GAAc09C,EAAAA,EAAAA,IAA6BpyD,EAAM+G,EAAS3E,GAEhE,MAAO,KACFmP,EAAAA,EAAAA,GAAW4gD,MACVhnD,MAAMknD,QAAQ39C,GAAeA,EAAc,CAACA,IAChDxT,OAAO7B,QACX,C,kHC7FA,QAAyD,uBCgFzD,GAAehB,EAAAA,EAAAA,KAvDyBqB,IAMlC,IANmC,SACvCg0C,EAAQ,SACR4e,EAAQ,UACR3yD,EAAS,aACT4yD,EAAY,QACZC,GACD9yD,EACC,MAAM+yD,GAAcvuD,EAAAA,EAAAA,IAAsBwvC,EAASlJ,YAE7CkoB,GAAmBzuD,EAAAA,EAAAA,GAAUquD,OAAyBnzD,EAAdszD,GAExCE,GAAkBryD,EAAAA,EAAAA,KAAQ,IACzBsyD,EAAAA,GACEznD,MAAMgW,KAAK,CAAEje,OAfF,IAe2BlC,KAAI,IA4CrD,WAAmD,IAAnBuxD,EAAY3nD,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG,GAC7C,MAAMuD,GAAKokD,EAAe,EAAInnD,KAAK+Q,SAAWo2C,EAAe,IAAMnnD,KAAK+Q,SAAW,GAAM,GAAK,GACxF/N,EAAImkD,EAAennD,KAAK+Q,SAAWo2C,EAAe,EAExD,MAAQ,eAAcpkD,MAAMC,EAAImkD,KAAgBpkD,KAAKC,GACvD,CAjD2DykD,CAAuBN,KADxC,IAErC,CAACA,IAEJ,GAAKG,GAAqBJ,EAI1B,OACE3wD,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GD/CM,uBC+CsBlC,GACvCiG,OAAOC,EAAAA,EAAAA,GAAWxG,QAAQkzD,IAAkB,oBAAmBA,QAE9DI,EAAM3xD,KAAI,CAAC8xD,EAAM7vD,KAChB,MAAM2C,EAAS,wBAAuBktD,OACtC,OAAIR,EAEA3wD,EAAAA,GAAAC,cAACghB,EAAAA,EAAW,CACV4nB,WAAYkJ,EAASlJ,WACrB7qC,UAAWoG,EACXH,MAAOA,EACPmtD,qBAAmB,EACnBptD,KAAM4sD,EACNnvD,eAAsB,IAANH,EAAUuvD,OAAUrzD,IAMxCwC,EAAAA,GAAAC,cAAA,OACEkE,IAAK4sD,EACLjwC,IAAI,GACJ9iB,UAAWoG,EACXH,MAAOA,EACPI,WAAW,EACX5C,eAAsB,IAANH,EAAUuvD,OAAUrzD,GACpC,IAGF,G,8NC5EV,SAAgB,KAAO,uBAAuB,OAAS,uBAAuB,gBAAgB,uBAAuB,aAAe,uBAAuB,UAAY,uBAAuB,eAAiB,wBC8CzM6zD,EAAY,IAAMjT,EAAAA,GAElBkT,EAAc,IAAMlT,EAAAA,GAEpBmT,EAAoBnT,EAAAA,GA8J1B,GAAe1hD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAsB,IAApB,YAAE+yC,GAAa/yC,EACtB,MAAM,mBAAEs2B,EAAkB,oBAAE47B,GAAwB50D,GAC9C,gBAAE60D,IAAoBr0D,EAAAA,EAAAA,KAAeR,GAErC80D,GAAcC,EAAAA,EAAAA,KAA+B/0D,EAAQ,mBAE3D,MAAO,CACL60D,gBAAiBA,IAAkBpf,GACnCzc,qBACAg8B,eAAgBJ,EAChBE,cACD,GAZe/0D,EA5JUoB,IAcD,IAdE,YAC7Bs0C,EAAW,SACXN,EAAQ,UACR/zC,EAAS,KACTgG,EAAOqtD,EAAS,WAChBQ,EAAaP,EAAW,gBACxBG,EAAe,mBACf77B,EAAkB,eAClBg8B,EAAc,YACdF,EAAW,eACX7a,EAAc,YACdib,EAAW,WACXC,EAAU,oBACV/Y,GACsBj7C,EACtB,MAAM,mBAAEi0D,IAAuB5zD,EAAAA,EAAAA,MAGzB4G,GAAMrE,EAAAA,EAAAA,IAAuB,MAE7B4rD,EAAW,eAAgBxa,EAE3Bya,GAAoB7tD,EAAAA,EAAAA,KAAQ,IAChCi3B,GAAoBlE,MAAMugC,IAAMvF,EAAAA,EAAAA,IAAeuF,EAAElgB,SAAUA,MAC1D,CAACnc,EAAoBmc,IAClBmgB,EAAe1F,GAAmB2F,YAAY10D,IAE9C,YAAE20D,IAAgBC,EAAAA,EAAAA,GAAe9F,EAAWxa,EAASlJ,gBAAarrC,GAElE80D,GAAmB3zD,EAAAA,EAAAA,KAAQ,KAC/B,IAAK4tD,EAAU,OAAOC,GAAmB+F,iBAAiB90D,GAE1D,IAAK20D,EAAa,OAClB,MAAMI,EAAa58B,GAAoBlE,MAAM+6B,GAAcA,EAAU1a,SAASlV,WAAau1B,EAAY9yB,SACnGizB,iBAAiB90D,GACrB,OAAO+0D,CAAU,GAChB,CAAChG,EAAmB52B,EAAoBw8B,EAAa7F,IAElDkG,GAAW9zD,EAAAA,EAAAA,KAAQ,KACvB,GAAI2zD,EACF,OAAOA,EAGT,IAAKV,GAAgB56B,SACnB,OAGF,MAAM,SAAEA,GAAa46B,EAGrB,OAAO56B,EAFavtB,KAAKe,MAAMf,KAAK+Q,SAAWwc,EAASz1B,SAE3B9D,EAAE,GAC9B,CAAC60D,EAAkBV,IAEhB3X,GAAiBC,EAAAA,EAAAA,IAAkBl1C,EAAKg0C,GAExC0Z,EAAsBR,GAAiB,UAASA,IAChDS,EAAkBF,GAAa,UAASA,IAExCG,GAAsBtwD,EAAAA,EAAAA,GAASowD,GAAsBR,GACrDW,GAAkBvwD,EAAAA,EAAAA,GAASqwD,GAAkBF,GAE7CK,GAAiBn0D,EAAAA,EAAAA,KAAQ,IAC7B8yD,GAAiB//B,MAAMqhC,IAAWrG,EAAAA,EAAAA,IAAeqG,EAAQhhB,MACxD,CAAC0f,EAAiB1f,IAEfihB,EAAmBt1D,QACvBg0D,GAAeoB,IAAmBvG,GAAYqG,IAAwBC,GAElEI,EAAmBhZ,IAAoB+Y,IAAqBnc,GAAmBkb,IAEnFryD,aAAcwzD,EACdvzD,qBAAsBwzD,IACpBvzD,EAAAA,EAAAA,GAAkBozD,OAAkBx1D,GAAW,EAAM,SAEvDkC,aAAc0zD,EACdzzD,qBAAsB0zD,IACpBzzD,EAAAA,EAAAA,GAAkBqzD,OAAkBz1D,GAAW,EAAM,QAEnD81D,GAAc1vD,EAAAA,EAAAA,IAAgB,KAClCouD,EAAmB,CAAE3f,cAAaN,YAAW,KAGxCwhB,GAAmBC,GAAqBC,KAAyB1yD,EAAAA,EAAAA,KAClE2yD,KAAoBnH,GAAc0G,GAAqBM,KAE3D7zD,aAAci0D,GACdh0D,qBAAsBi0D,KACpBh0D,EAAAA,EAAAA,GAAkB8zD,QAAkBl2D,GAAW,GAE7Cq2D,IAAgB3zD,EAAAA,EAAAA,GACpBkE,EAAOmN,KACP2hD,GAAsB9uD,EAAO0vD,UAC7Bjd,GAAkBzyC,EAAOyyC,eACzB74C,GAGF,OACEgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAW61D,GAAe7uD,IAAKA,IAChC6xC,GAAkB8c,IAClB3zD,EAAAA,GAAAC,cAAC8zD,EAAAA,EAAmB,CAClB/1D,UAAW41D,GACX7hB,SAAUA,EACVnc,mBAAoBA,EACpB5xB,KAAMA,EACNg1C,oBAAqBA,KAGvBnC,GAAkB0V,GAClBvsD,EAAAA,GAAAC,cAACghB,EAAAA,EAAW,CACV4nB,WAAYkJ,EAASlJ,WACrB7qC,UAAWoG,EAAOguD,YAClBpuD,KAAMA,EACNgwD,OAAQlC,EACRmC,aAAW,EACXlY,8BAA+B/C,IAGlCoa,IAAuB7G,GACtBvsD,EAAAA,GAAAC,cAACi0D,EAAAA,EAAe,CACd5zD,IAAM,GAAE4xD,KAAgBluD,IACxBhG,WAAWkC,EAAAA,EAAAA,GAAekE,EAAO+vD,aAAcd,GAC/CrvD,MAAMowD,EAAAA,EAAAA,IA9He,IA8HIpwD,GACzBtB,OAAQkwD,EACRyB,KAAMpa,IAAmB6X,EACzBwC,QAASvC,EACTkC,aAAW,EACX3vD,OAAQkvD,GACR3C,QAAS4C,KAGZP,GACClzD,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAACi0D,EAAAA,EAAe,CACd5zD,IAAM,GAAEmyD,KAAYZ,IACpB7zD,WAAWkC,EAAAA,EAAAA,GAAekE,EAAOmwD,OAAQpB,GACzCnvD,KAAM6tD,EACNnvD,OAAQmwD,EACRwB,KAAMpa,EACNqa,QAAM,EACNL,aAAW,EACXpD,QAASyC,IAEV/G,IAAa+F,GAAoBrY,GAChCj6C,EAAAA,GAAAC,cAACu0D,EAAAA,EAAiB,CAChBziB,SAAUA,EACV/zC,UAAWm1D,EACXvC,aAAcnnD,KAAK8C,IArJM,GAqJFvI,EAAuCutD,GAC9DV,QAASyC,KAKb,I,wECpMV,MAQA,EAR4C1xD,IAC1C,MAAM,OAAE6nB,GAAW7nB,EACb6yD,GAAkBtuC,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,mBAAoBoD,GAG3E,OAAOgrC,EAAkBz0D,EAAAA,GAAAC,cAACw0D,EAAoB7yD,QAAYpE,CAAS,C,wECLrE,MAQA,EAR0CoE,IACxC,MAAM,OAAE6nB,GAAW7nB,EACb8yD,GAAgBvuC,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,iBAAkBoD,GAGvE,OAAOirC,EAAgB10D,EAAAA,GAAAC,cAACy0D,EAAkB9yD,QAAYpE,CAAS,C,mHCajE,MAyGA,GAAed,EAAAA,EAAAA,KAzGiBqB,IAE1B,IAF2B,MAC/B4gD,EAAK,KAAE5hD,EAAI,SAAE43D,EAAQ,QAAEtiD,EAAO,4BAAEuiD,EAA2B,eAAEC,EAAc,YAAEC,GAC9E/2D,EACC,MAAM,oBACJg3D,EAAsB,EAAC,qBAAEC,EAAuB,GAC7Cj4D,EAAKqV,QAAiB,CAAC,EAARrV,EAEdk4D,GAAmBN,GAAYhW,IAAUkW,EACzCziD,EAAUrV,EAAKqV,UAAYusC,EAC3BuW,GAAmBv2D,EAAAA,EAAAA,KAAQ,IAC/ByT,GAAWrV,GAAM6hD,OAAS1/C,OAAOC,OAAOpC,EAAK6hD,QAAQr/C,QAAOD,IAAA,IAAC,YAAE61D,GAAa71D,EAAA,OAAK61D,CAAW,SAAI33D,GAC/F,CAACT,EAAMqV,IAEJ+iD,GAAcx2D,EAAAA,EAAAA,KAAQ,IAC1ByT,EAEMC,GAAW6iD,GAAkB31D,QAAQgmB,IAAwB,IAAhBA,EAAIlT,UAAmB9Q,QACnE2zD,GAAkB3zD,QACpBo9C,GAAS5hD,GAAMo4D,aACnB,CAACp4D,EAAM4hD,EAAOuW,EAAkB9iD,EAASC,IAEtC+iD,GAAgBz2D,EAAAA,EAAAA,KAAQ,KAC5B,MAAM02D,EAAyBt4D,EAAK6hD,QAC/B1/C,OAAOC,OAAOpC,EAAK6hD,QAAQxxB,MAAM7H,IAASA,EAAIlT,SAAWkT,EAAI4vC,cAElE,OAAO9iD,GAAYtV,EAAK6hD,SAAWyW,CAAuB,GACzD,CAACt4D,EAAMsV,IAEJijD,GAAgB3W,GAAgB5hD,EAAKu4D,cAMrClnC,IAJsB0D,EAAAA,EAAAA,IAC1B,KAAOyjC,EAAAA,EAAAA,IAAST,GAAeA,IAAgBA,GAC/C,CAACA,KAEqCp3D,QACtCy3D,GAAeJ,GAAuBO,GAAiBX,GAAYK,GAChEC,GAGCO,EAAW93D,QAAQy3D,GAAeG,GAClCt3D,GAAYkC,EAAAA,EAAAA,GAChB,YACAk1D,GAAiB,SAChBI,GAAYb,GAAY,SACzBa,GAAY,UAsDd,OACEx1D,EAAAA,GAAAC,cAACw1D,EAAAA,EAAc,CAAClJ,UAAQ,EAACvuD,UAAU,uBAAuByrB,OAAQ2E,GApDpE,WACE,MAAMsnC,EAAyBV,GAC7Bh1D,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,qBAAsBk1D,GAAiB,UACpEp1D,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAIX23D,EAAwBZ,GAC5B/0D,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,qBACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uBAIX43D,EAAuBX,GAC3Bj1D,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,qBAAsBk1D,GAAiB,WAGlES,EAAsBP,GAAiBH,EAC3Cn1D,EAAAA,GAAAC,cAAA,OAAKjC,UAAWA,IACZs3D,GAAiBt1D,EAAAA,GAAAC,cAAC61D,EAAAA,EAAe,CAACr1D,MAAMs1D,EAAAA,EAAAA,IAAqBZ,WAE/D33D,EAEEw4D,EAAgBrB,IAAakB,IAAuBF,IAA0BD,GAClF11D,EAAAA,GAAAC,cAAA,OAAKjC,UAAWA,GACdgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,2BAIXqD,EAAW,CACfu0D,EAAsBF,EAAwBC,EAAuBE,EAAoBG,GACzFz2D,OAAO7B,SAET,GAAwB,IAApB2D,EAASE,OAEb,OAAwB,IAApBF,EAASE,OAAqBF,EAAS,GAEvCuzD,EACgC,CAChCe,EAAuBE,EAAoBH,EAAwBM,GACnEz2D,OAAO7B,SACwB,GAIjCsC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,qBACZqD,EAGP,CAIK40D,GACc,G,8UC/HrB,SAAgB,KAAO,uBAAuB,UAAY,uBAAuB,OAAS,uBAAuB,MAAQ,uBAAuB,eAAe,uBAAuB,YAAc,uBAAuB,KAAO,uBAAuB,KAAO,uBAAuB,KAAO,uBAAuB,cAAgB,uBAAuB,OAAS,uBAAuB,aAAe,uBAAuB,OAAS,wBCoK3a,GAAev5D,EAAAA,EAAAA,KAxIeqB,IAIxB,IAJyB,gBAC7Bm4D,EAAe,YACfC,EAAW,QACXh2D,GACDpC,EACC,MAAM,sBAAEq4D,IAA0Bh4D,EAAAA,EAAAA,MAC5BC,GAAOC,EAAAA,EAAAA,KAEP+3D,GAAiBC,EAAAA,EAAAA,IAA8BC,EAAAA,KAC/CC,GAAiBC,EAAAA,EAAAA,MACjBC,EAAqBF,EAAeD,EAAAA,MAAqBI,WAEzDC,GAAej4D,EAAAA,EAAAA,KAAQ,KAC3B,IAAK03D,GAAgB90D,OAAQ,OAAOlD,EAAK,WAEzC,MAAMW,GAAYH,EAAAA,EAAAA,MAAYI,MAAMF,KAEpC,OAAOs3D,EAAej3D,MAAM,EAnBV,GAmB4BC,KAAI,CAACvC,EAAQwE,EAAGu1D,KAC5D,MAAM9L,EAASzpD,IAAMu1D,EAAIt1D,OAAS,EAC5BxE,EAAOiC,EAAUlC,GACvB,IAAKC,EACH,OAGF,MAAM+R,GAAQupC,EAAAA,EAAAA,GAAah6C,EAAMtB,GAEjC,OACEiD,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GAAekE,EAAOrH,KAAM25D,GAAsB35D,EAAKo4D,aAAe/wD,EAAO0yD,UAC3FlnD,EAAAA,EAAAA,GAAWd,IAEbi8C,EAAS,GAAK,KACd,GAEL,GACD,CAACsL,EAAgBh4D,EAAMq4D,IAEpBK,GAAiBp4D,EAAAA,EAAAA,KAAQ,KAC7B,MAAMq4D,GAAkBd,EAAgBnQ,aAAe,CACrDj3C,MAAOzQ,EAAK,gCACZkY,KAAM,WACN0gD,QAASA,KACPb,EAAsB,CAAErQ,aAAa,GAAO,GAI1CmR,EAAehB,EAAgBnQ,aAAe,CAClDj3C,MAAOzQ,EAAK,8BACZkY,KAAM,SACN0gD,QAASA,KACPb,EAAsB,CAAErQ,aAAa,GAAQ,GAI3CoR,EAAa,CACjBroD,MAAOzQ,EAAK,+BACZkY,KAAM,kBACN0gD,QAASA,KACPb,EAAsB,CAAEgB,UAAU,GAAO,GAI7C,OAAOC,EAAAA,EAAAA,IAAQ,CAACL,EAAgBE,EAAcC,GAAY,GACzD,CAACjB,EAAgBnQ,YAAa1nD,EAAM+3D,IAEjCkB,GAAkB94D,EAAAA,EAAAA,KAAawP,IACnCA,EAAEuT,iBACF40C,KAAe,GACd,CAACA,IAiDJ,OACEn2D,EAAAA,GAAAC,cAACqW,EAAAA,EAAQ,CACPnW,QAASA,EACTg2D,YAAamB,EACbt5D,WAAWkC,EAAAA,EAAAA,GACTkE,EAAOmN,KACP2kD,EAAgBnQ,aAAe3hD,EAAOmzD,UACtC,sBACA,qBAEFC,gBAAiBpzD,EAAOoK,OACxBuoD,eAAgBA,EAChBU,mBAAiB,GAEhBvB,EAAgBnQ,YA3DjB/lD,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAekE,EAAOszD,KAAM,SAC1C13D,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACbgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,QAASkE,EAAO0K,QAC7C9O,EAAAA,GAAAC,cAAA,MAAIyB,IAAI,OAAO1D,WAAWkC,EAAAA,EAAAA,GAAekE,EAAO+d,KAAM,aACpDniB,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAekE,EAAOmS,KAAM,OAAQ,yBACjDlY,EAAK,mBAGV2B,EAAAA,GAAAC,cAAC03D,EAAAA,EAAK,CACJ35D,UAAWoG,EAAO+wD,YAClB10D,KAAMi2D,GAAqBX,EAAAA,EAAAA,IAAqBW,QAAsBl5D,MAS5EwC,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,SAAUkE,EAAOwzD,gBAC9C53D,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,SAAUkE,EAAOoN,SAC9CxR,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,+BAGjBgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAekE,EAAOszD,KAAM,SAC1C13D,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACbgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,QAASkE,EAAO0K,QAC7C9O,EAAAA,GAAAC,cAAA,MAAIyB,IAAI,OAAO1D,WAAWkC,EAAAA,EAAAA,GAAekE,EAAO+d,KAAM,aAAc9jB,EAAK,oBAG7E2B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACbgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,SAAUkE,EAAOyzD,eAC7CjB,GAEH52D,EAAAA,GAAAC,cAAC03D,EAAAA,EAAK,CACJ35D,UAAWoG,EAAO+wD,YAClB10D,KAAMi2D,GAAqBX,EAAAA,EAAAA,IAAqBW,QAAsBl5D,OAuBrE,I,oGC1If,MAAMs6D,EAAa,IAAIC,KAEvBC,EAAAA,EAAAA,KAAap7D,IACX,IAAK,MAAOq7D,GAAU,OAAEC,MAAaJ,EACnCI,EAAOD,EAASr7D,GAClB,I,iHC3BF,QAAkG,uBCiClG,GAAeF,EAAAA,EAAAA,KArBsBqB,IAI/B,IAJgC,WACpC4H,EAAU,SACVxI,EAAQ,SACR+J,GACDnJ,EACC,OACEiC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GDlBG,uBCoBjB/C,GDpB8J,uBCqB9JwI,IAAeuB,GDrB+G,yBCwB9HlH,EAAAA,GAAAC,cAAA,OAAKjC,UDxB+C,wBCyBlDgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAWoG,IAChBpE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWoG,IAChBpE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWoG,KAEd,ICqTV,IAAe1H,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAA6B,IAA3B,OAAExC,GAAQwC,EACjB,MAAMvC,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAChC,IAAKC,EACH,MAAO,CAAC,EAGV,MAAM,SAAEo7D,EAAQ,iBAAEC,EAAgB,WAAEC,GAAet7D,EAAKu7D,aAAe,CAAC,EAClEC,EAAoBJ,GACrBhmD,EAAAA,EAAAA,KAAWvV,EAAQu7D,KAAan7D,EAAAA,EAAAA,KAAWJ,EAAQu7D,QAAa36D,EAC/Dg7D,EAAoBz7D,EAAKu7D,aAAcG,EAAAA,EAAAA,IAAiB17D,EAAKu7D,kBAAe96D,EAC5Ek7D,EAAsBF,GAAqBJ,GAC7CztC,EAAAA,EAAAA,KAAkB/tB,EAAQG,EAAKU,GAAI26D,QACnC56D,GACIm7D,cAAeC,EAAqBC,aAAcC,GAAuBN,GAAqB,CAAC,EACjGO,GAAoB1hB,EAAAA,EAAAA,IAAqBt6C,IAE7CD,OAAQk8D,EACRvmD,SAAUwmD,EACV/gD,KAAMwT,IACJhZ,EAAAA,EAAAA,KAAyB9V,IAAW,CAAC,EACnC+I,EAAa7I,IAAWk8D,GAAiBC,IAAoBvkD,EAAAA,GAC7DwkD,EAAmBn8D,EAAKqV,SAAWtV,IAAWk8D,GAC/Cl8D,KAAWM,EAAAA,EAAAA,KAAeR,GAAQu8D,iBAEjClnD,EAAO8mD,GAAoB5mD,EAAAA,EAAAA,KAAWvV,EAAQm8D,QAAqBv7D,EACnEmpD,EAAaoS,GAAoBnS,EAAAA,EAAAA,KAAiBhqD,EAAQm8D,QAAqBv7D,EAC/E47D,EAAmBr8D,EAAKu7D,cAAee,EAAAA,EAAAA,KAAuBz8D,EAAQG,EAAKu7D,aAE3EvZ,GAAeua,EAAAA,EAAAA,KAAkB18D,EAAQE,EAAQ4X,EAAAA,GAAgB,gBAEvE,MAAO,CACL3X,OACAsV,SAASC,EAAAA,EAAAA,IAAkBvV,GAAMwV,EAAAA,EAAAA,KAAqB3V,IAAS4V,EAAAA,EAAAA,KAAuB5V,IACtF27D,oBACAK,sBACAE,qBACAJ,sBACAziC,OAAOC,EAAAA,EAAAA,KAAYt5B,EAAQE,EAAQ4X,EAAAA,IACnC/O,aACAuzD,kBACAK,kBAAkBC,EAAAA,EAAAA,IAAuB58D,GACzC68D,cAAe9zD,GAAkC,WAApB+lB,EAC7BguC,iBAAkB98D,EAAO+8D,YAAYC,YAAYr4D,QAAU,GAAK,KAC5D82D,GAAct7D,EAAKu7D,aAAe,CACpCuB,2BAA2BC,EAAAA,EAAAA,KAAqBl9D,EAAQG,EAAKu7D,cAE/DrmD,OACA00C,aACAyS,mBACAra,eACAgb,yBAAyB94D,EAAAA,EAAAA,KAA0BrE,GACpD,GApDeD,EA7OoBoB,IA2BlC,IA3BmC,OACvCjB,EAAM,SACNk9D,EAAQ,UACRC,EAAS,cACTC,EAAa,SACbvF,EAAQ,oBACR3b,EAAmB,KACnBj8C,EAAI,QACJsV,EAAO,KACPJ,EAAI,WACJ00C,EAAU,oBACViS,EAAmB,kBACnBL,EAAiB,0BACjBsB,EAAyB,oBACzBnB,EAAmB,mBACnBI,EAAkB,UAClBqB,EAAS,MACTlkC,EAAK,wBACL8jC,EAAuB,WACvBp0D,EAAU,gBACVuzD,EAAe,iBACfK,EAAgB,cAChBE,EAAa,gBACbC,EAAe,iBACfN,EAAgB,aAChBra,GAAY,YACZoX,IACDp4D,EACC,MAAM,SACJu8B,GAAQ,iBACR8/B,GAAgB,WAChBC,GAAU,eACVC,GAAc,gBACdC,KACEn8D,EAAAA,EAAAA,OAEE,SAAE8I,KAAaC,EAAAA,EAAAA,OACdm6B,GAAmBC,GAAiBC,KAAoBzgC,EAAAA,EAAAA,MACxDy5D,GAAiBC,GAAeC,KAAkB35D,EAAAA,EAAAA,MAClD45D,GAAuBC,GAAqBC,KAAwB95D,EAAAA,EAAAA,MACpE+5D,GAAmBC,GAAiBC,KAAoBj6D,EAAAA,EAAAA,MACxDk6D,GAAyBC,GAAuBC,KAA2Bp6D,EAAAA,EAAAA,MAC3Eq6D,GAAuBC,GAAqBC,KAAyBv6D,EAAAA,EAAAA,MACrEw6D,GAA6BC,GAA2BC,KAA+B16D,EAAAA,EAAAA,MACvF26D,GAAyBC,GAAuBC,KAA2B76D,EAAAA,EAAAA,MAE5E,YAAEu3D,GAAW,QAAElmD,IAAYrV,GAAQ,CAAC,GAEpC,eAAE8+D,GAAc,IAAE72D,KAAQ82D,EAAAA,EAAAA,GAAiB,CAC/C/+D,OACAD,SACAw7D,eACAvZ,gBACA9oB,QACAyiC,sBACAE,sBACAE,qBACAM,mBACAb,oBACAvf,sBACAkhB,gBACAH,0BACAE,cAGI8B,GHxIR,SAA0C9D,GACxC,IAAI+D,EAAQlE,EAAWh8B,IAAIm8B,GAE3B,IAAK+D,EAAO,CACV,MAAOC,EAAQ/D,IAAUgE,EAAAA,EAAAA,IAAajE,GAASp5D,EAAAA,EAAAA,QAC/Cm9D,EAAQ,CAAEG,aAAc,EAAGF,SAAQ/D,UACnCJ,EAAWsE,IAAInE,EAAU+D,EAC3B,CAcA,OAZAK,EAAAA,EAAAA,IAAc,KACZL,EAAOG,eAEA,KACLH,EAAOG,eAEFH,EAAOG,cACVrE,EAAWwE,OAAOrE,EACpB,KAIG+D,EAAMC,MACf,CGkHgCM,CAAkBC,EAAAA,KAE1CvhB,IAAcr3C,EAAAA,EAAAA,IAAgB,KAC9BwO,GACEmnD,EACFgB,QAAgB/8D,EAAW,CAAEi/D,uBAAuB,IAEpDnC,GAAe,CAAEx9D,UAAU,CAAE2/D,uBAAuB,KAMxDniC,GAAS,CAAE78B,GAAIX,EAAQguC,sBAAsB,GAAQ,CAAE2xB,uBAAuB,IAE1E92D,GAAc8zD,GAChBW,KACF,IAGI9C,IAAkB1zD,EAAAA,EAAAA,IAAiBoK,IACvCA,EAAEuT,iBACF40C,KAAcr5D,EAAO,IAGjB4/D,IAAe94D,EAAAA,EAAAA,IAAgB,KACnCs3D,KACA35B,IAAiB,IAGbo7B,IAAa/4D,EAAAA,EAAAA,IAAgB,KACjCy3D,KACAZ,IAAe,IAGXmC,IAAyBh5D,EAAAA,EAAAA,IAAgB,KAC7C43D,KACAZ,IAAqB,IAGjBnN,IAAe7pD,EAAAA,EAAAA,IAAgB,KACnC+3D,KACAZ,IAAiB,IAGbhE,IAAiB8F,EAAAA,EAAAA,GAAsB,CAC3C9/D,OACAkV,OACAyqD,gBACAC,cACAC,0BACAnP,gBACAuM,WACArF,WACAtiD,UACAqnD,oBAGIzf,IAAiBC,EAAAA,EAAAA,IAAkBl1C,GAAKjI,EAAOi8C,OAAsBx7C,IAG3EgC,EAAAA,EAAAA,KAAU,KACJy6C,IAAkB7nC,IAAWrV,QAAgCS,IAAxBT,EAAK+/D,gBAC5CzC,GAAW,CAAEv9D,UACf,GACC,CAACC,EAAMD,EAAQsV,GAAS6nC,KAE3B,MAAM8iB,GAAW9qD,GAAQ00C,IAAcU,EAAAA,EAAAA,IAAap1C,EAAM00C,IAClDqW,cAAeC,KAAwBr9D,EAAAA,EAAAA,GAAkBm9D,IAEjE,IAAKhgE,EACH,OAGF,MAAMqD,GAAO6R,GAAQlV,EAEfiB,IAAYkC,EAAAA,EAAAA,GAChB,4BACAgS,EAAAA,EAAAA,IAASpV,GAAU,UAAY,QAC/BsV,IAAW,QACXzM,GAAc,WACduzD,GAAmB,kBAGrB,OACEl5D,EAAAA,GAAAC,cAACqW,EAAAA,EAAQ,CACPtR,IAAKA,GACLhH,UAAWA,GACXoY,KAAM8mD,EAAAA,GAAgC,KAAGC,EAAAA,EAAAA,IAAmBrgE,EAAQ,SAAU4X,EAAAA,WAAoBlX,EAClGyG,MAAQ,QAAOk2D,MACfjqD,QAASkC,KAAYlL,GACrB6vD,eAAgBA,GAChB52D,QAAS86C,GACTkb,YAAamB,GACbG,mBAAiB,GAEjBz3D,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,SAAU,qBACvCF,EAAAA,GAAAC,cAACI,EAAAA,EAAM,CACLD,KAAMA,GACN00C,gBAAiB7iC,GAAMiC,OACvBurC,WAAYxtC,GAAMiC,OAClBkpD,aAAcH,GACdvd,kBAAmB2d,EAAAA,GAAkBC,SACrC7c,gBAAgB,gBAElBzgD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,wBACbgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiB+8D,IAAuB,yBACvEj9D,EAAAA,GAAAC,cAACs9D,EAAAA,EAAS,CAACxgE,KAAMA,EAAMsV,QAASA,EAASuiD,6BAA2B,EAACE,YAAaiH,MAEnFh/D,EAAKe,cAAgBf,EAAKc,gBACzBmC,EAAAA,GAAAC,cAACu9D,EAAc,CAACt2D,SAAUA,GAAUvB,WAAYA,EAAYxI,SAAU48D,KAG1E/5D,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,QACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACbgC,EAAAA,GAAAC,cAAC0gD,EAAAA,EAAa,CACZvgD,KAAMA,GACNgnD,iBAAe,EACftS,gBAAiBh4C,IAAWmV,GAAMxU,IAAMwU,GAAMiC,OAC9C8kC,oBAAqBA,IAEtB3mC,GAAWrS,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,oBACzBgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,cACdjB,EAAKu7D,aACJt4D,EAAAA,GAAAC,cAACw9D,EAAAA,EAAe,CACdr4D,QAASrI,EAAKu7D,YACdjX,eAAgBwY,KAItB75D,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACZ69D,KACD77D,EAAAA,GAAAC,cAACs9D,EAAAA,EAAS,CAACxgE,KAAMA,EAAM43D,SAAUA,EAAUtiD,QAASA,MAGvD4oD,IACCj7D,EAAAA,GAAAC,cAACy9D,EAAAA,EAAe,CACdj0C,OAAQ6X,GACRzX,QAAS2X,GACT1X,oBAAqBqxC,GACrBp+D,KAAMA,IAGTq+D,IACCp7D,EAAAA,GAAAC,cAACy0D,EAAAA,EAAa,CACZjrC,OAAQ+wC,GACR3wC,QAAS6wC,GACT5wC,oBAAqBwxC,GACrBx+D,OAAQA,IAGXy+D,IACCv7D,EAAAA,GAAAC,cAACw0D,EAAAA,EAAe,CACdhrC,OAAQkxC,GACR9wC,QAASgxC,GACT/wC,oBAAqB2xC,GACrB3+D,OAAQA,IAGX4+D,IACC17D,EAAAA,GAAAC,cAAC09D,EAAAA,EAAW,CACVl0C,OAAQqxC,GACRjxC,QAASmxC,GACTlxC,oBAAqB8xC,GACrBxnD,OAAQtX,EACRkwD,QAAQ,SAGH,K,0BC9Uf,MCsEA,IAAetwD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,EAAM0C,KAA2C,IAAzC,SAAE06D,EAAQ,WAAE4D,GAAYt+D,EAGxE,MAAO,CACLu+D,WAHiB7D,GAA2B,WAAf4D,GAA0BE,EAAAA,EAAAA,KAAiBlhE,EAAQo9D,QAAYx8D,EAI5FugE,eAAeC,EAAAA,EAAAA,KAAoBphE,EAAQ,MAC5C,GANiBD,EAvC2BoB,IAEzC,IAF0C,WAC9C8/D,EAAU,cAAEE,EAAa,gBAAEE,EAAe,uBAAEC,GAC7CngE,EACC,MAAMM,GAAOC,EAAAA,EAAAA,MACP,SAAE4I,IAAaC,EAAAA,EAAAA,MAEfg3D,GAAmB3/D,EAAAA,EAAAA,KAAY,KACnCy/D,EAAgB,CAAE/lD,KAAM,aAAc2yB,QAASgzB,IAC/CK,EAAuBE,EAAAA,GAAgBC,8BAA8B,GACpE,CAACR,EAAYI,EAAiBC,IAEjC,OACEl+D,EAAAA,GAAAC,cAAA,OAAKjC,UD3Cc,wBC4CjBgC,EAAAA,GAAAC,cAAA,OAAKjC,UD5C6C,wBC6C/C+/D,GAAiB/9D,EAAAA,GAAAC,cAACq+D,GAAAA,EAAuB,CAACz8D,QAASk8D,EAAe/5D,KAhBzD,MAkBZhE,EAAAA,GAAAC,cAAA,MAAIjC,UD/C6E,uBC+CpD0D,IAAI,QAAQrD,EAAK,2BAC9C2B,EAAAA,GAAAC,cAAA,KAAGjC,UDhDmH,uBCgDpF0D,IAAI,QACnCrD,EAAKw/D,EAAa,mCAAqC,mBAEzDA,GACC79D,EAAAA,GAAAC,cAACM,GAAAA,EAAM,CACL2P,QAAShJ,EACTq3D,OAAK,EACLC,MAAI,EACJr+D,QAASg+D,EACTn6D,KAAK,UACLrC,MAAOtD,EAAKsD,OAEZ3B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uBACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UD7DwT,wBC8D1TK,EAAK,sCAIR,K,gBClEV,SAAwL,uBCsExL,IAAe3B,EAAAA,EAAAA,KArDYqB,IAA6C,IAA5C,SAAE0gE,EAAQ,eAAEC,GAA2B3gE,EACjE,MAAM,sBAAE4gE,EAAqB,uBAAEC,EAAsB,iBAAEjrD,IAAqBvV,EAAAA,EAAAA,MAEtE4G,GAAMrE,EAAAA,EAAAA,IAAuB,MAC7BtC,GAAOC,EAAAA,EAAAA,MAEbugE,EAAAA,GAAAA,GAAkB75D,GAAM85D,IACtB,MAAM/yD,EAAS+yD,EAAMC,gBAAgB,IAAIC,WAAaF,EAAMG,YAAYlzD,OACxE2yD,EAAe3yD,EAAO,IAGxB,MAAMmzD,GAAmBvgE,EAAAA,EAAAA,KAAQ,IACxBO,OAAOC,OAAOs/D,GAAUvZ,MAAK,CAACC,EAAGC,IAAMA,EAAE+Z,YAAcha,EAAEga,cAC7DztC,MAAM0tC,GAAYA,EAAQC,iBAC5B,CAACZ,IAEEa,GAAiB3gE,EAAAA,EAAAA,KAAQ,IACtB,CAACugE,EAAiBK,YAAaL,EAAiBM,OAAQN,EAAiBO,SAASlgE,OAAO7B,SAAS0S,KAAK,OAC7G,CAAC8uD,IAEEQ,GAAe97D,EAAAA,EAAAA,IAAgB,KACnC+6D,EAAsB,CACpBgB,KAAMT,EAAiBS,KACvBC,aAAa,GACb,IAGEC,GAAej8D,EAAAA,EAAAA,IAAgB,KACnCg7D,EAAuB,CAAEe,KAAMT,EAAiBS,OAChDhsD,EAAiB,CACf7E,MAAOzQ,EAAK,6BAA8B,GAC1C+G,QAAS/G,EAAK,qCAAsCihE,IACpD,IAGJ,OACEt/D,EAAAA,GAAAC,cAAA,OAAKjC,UDrDiD,uBCqDzBgH,IAAKA,GAChChF,EAAAA,GAAAC,cAAA,MAAIjC,UDtD+E,wBCsDrDK,EAAK,yBACnC2B,EAAAA,GAAAC,cAAA,KAAGjC,UDvD8G,wBCwD9GK,EAAK,wBAAyBihE,IAEjCt/D,EAAAA,GAAAC,cAAA,OAAKjC,UD1D6I,wBC2DhJgC,EAAAA,GAAAC,cAACM,GAAAA,EAAM,CAACg+D,OAAK,EAACzlB,QAAM,EAAC90C,KAAK,UAAUhG,UAAWoG,GAAejE,QAASu/D,GACpErhE,EAAK,2BAER2B,EAAAA,GAAAC,cAACM,GAAAA,EAAM,CAACg+D,OAAK,EAACzlB,QAAM,EAAC90C,KAAK,UAAUmM,MAAM,SAAShQ,QAAS0/D,EAAc7hE,UAAWoG,IAClF/F,EAAK,yBAGN,ICVJyhE,GAAmB,IAAI/8D,IAAI,CAAC,IAAK,MA0NvC,IAAerG,EAAAA,EAAAA,KAxNgBqB,IAWzB,IAX0B,WAC9B6/D,EAAU,SACV5D,EAAQ,SACR78D,EAAQ,iBACRo8D,EAAgB,kBAChBwG,EAAiB,gBACjB7J,EAAe,SACfuI,EAAQ,gBACRR,EAAe,uBACfC,EAAsB,0BACtB8B,GACDjiE,EACC,MAAM,SACJu8B,EAAQ,aACR2lC,EAAY,gBACZ1F,EAAe,kBACf2F,IACE9hE,EAAAA,EAAAA,MAEE+hE,GAAex/D,EAAAA,EAAAA,IAAuB,MACtCy/D,GAAsBz/D,EAAAA,EAAAA,KAAO,IAC5B0/D,EAA0BC,IAA+Bh5D,EAAAA,EAAAA,IAAS,GAEnEi5D,EAA4B,aAAf3C,EACb4C,EAA6B,QAAf5C,EACd6C,EACJD,EAAcE,EAAAA,IAAgBH,EAAahK,EAAAA,IAAqByD,EAG5D2G,EAAuBH,GAAeT,EAEtCnG,GAAatD,EAAAA,EAAAA,IAA8BmK,IACjDG,EAAAA,EAAAA,GAAsBhH,GAEtB,MAAMiH,GAAejH,GAAYr4D,QAAU,GAAKu/D,EAAAA,IAC1CC,EAAgBJ,EAClBzK,EAAgBnQ,YAAcib,EAAAA,IAA2BF,EAAAA,IAAiB,GAExE,cAAEG,EAAa,iBAAEC,IAAqBC,EAAAA,EAAAA,GAAavH,IAElDjU,EAAaC,IAAWC,EAAAA,EAAAA,QAAkBroD,EAAWo8D,OAAYp8D,EAAW4jE,EAAAA,KAE7EC,GAAgC1iE,EAAAA,EAAAA,KAAQ,KAC5C,MAAM2iE,EAAgBpiE,OAAOC,OAAOs/D,GAAY,CAAC,GAC3Ct9D,EAAUmgE,EAAc5vC,MAAM0tC,GAAYA,EAAQmC,YACxD,SAAKpgE,IAAWsrC,EAAAA,EAAAA,MAAkBtrC,EAAQg+D,YAAcqC,EAAAA,MAEjDhB,GAAec,EAAcl0C,MAAMgyC,GAAYA,EAAQC,eAAc,GAC3E,CAACmB,EAAa/B,KAEjBj/D,EAAAA,EAAAA,KAAU,KACH6hE,GAA+Bf,EAA4B,EAAE,GACjE,CAACe,KAGJI,EAAAA,EAAAA,GAAWtkE,GAAYy8D,GAAYr4D,OAAS,CAC1C,cAAgByM,IACdA,EAAEuT,iBACF0+C,EAAa,CAAEyB,kBAAmB,EAAG9H,cAAa,EAEpD,gBAAkB5rD,IAChBA,EAAEuT,iBACF0+C,EAAa,CAAEyB,iBAAkB,EAAG9H,cAAa,QAEjDp8D,IAGJgC,EAAAA,EAAAA,KAAU,KACR,GAAKrC,GAAay8D,GAAe+H,EAAAA,GA2BjC,OAFAvqD,SAASiH,iBAAiB,UAAWujD,GAE9B,KACLxqD,SAASmH,oBAAoB,UAAWqjD,EAAc,EAxBxD,SAASA,EAAc5zD,GACrB,IAAM6zD,EAAAA,IAAa7zD,EAAE8zD,UAAcD,EAAAA,IAAa7zD,EAAE+zD,UAAa/zD,EAAEg0D,KAAKt7B,WAAW,SAAU,CACzF,MAAO,CAAEu7B,GAASj0D,EAAEg0D,KAAK1iD,MAAM,cAAgB,GAC/C,IAAK2iD,GAASnC,GAAiBv8D,IAAI0+D,GAAQ,OAE3C,MAAMC,EAAkBvB,IAAyBzK,EAAgBnQ,YAE3Doc,EAAQD,GAAmB,EAAI,EAC/Bn2B,EAAWd,OAAOg3B,GAASE,EAAQ,EAEzC,GAAID,IAAiC,IAAdn2B,EAErB,YADAi0B,EAA0BoC,EAAAA,GAAkBC,UAI9C,GAAIt2B,EAAW6tB,EAAYr4D,OAAS,EAAG,OAEvC+4B,EAAS,CAAE78B,GAAIm8D,EAAY7tB,GAAWjB,sBAAsB,GAC9D,CACF,CAMC,GACA,CAACorB,EAAiB/4D,EAAU6iE,EAA2B1lC,EAAU2lC,EAAcrG,EAAY+G,IAE9F,MAAM,QAAE2B,IAAYC,EAAAA,EAAAA,IAAwB,CAC1CC,QAASrC,EACTsC,WA1G0B,MA6GtBC,GAAsB9+D,EAAAA,EAAAA,IAAgB,KAC1Co8D,EAA0BoC,EAAAA,GAAkBC,UAC5C9H,GAAiB,IAGboI,IAA0B/+D,EAAAA,EAAAA,IAAgB,KAC1Cw8D,EAAoBj/D,QACtBi/D,EAAoBj/D,SAAU,EAGhCuhE,GAAqB,IAGjBpL,IAAkBsL,EAAAA,EAAAA,IAAsB9lE,IACxCsjE,EAAoBj/D,QACtBi/D,EAAoBj/D,SAAU,EAGhCm5B,EAAS,CAAE78B,GAAIX,EAAQguC,sBAAsB,GAAO,GACnD,CAACxQ,GA/HsB,KA+HU,GAE9BuoC,IAAkBj/D,EAAAA,EAAAA,IAAiBoK,IACvC,MAAM8zC,EAAO9zC,EAAE+zC,cAAc7zC,wBACvB1B,EAAIwB,EAAEG,QAAU2zC,EAAK7zC,KACrBxB,EAAIuB,EAAEg0C,QAAUF,EAAKjS,IACvBrjC,EAAIs1C,EAAKh2C,OAASW,EAAIq1C,EAAKr1C,IAC/B2zD,EAAoBj/D,SAAU,EAAI,IAW9B2hE,GC7LO,SACb3C,EACA4C,EACAC,GAGA,MAAMC,GAAuBtiE,EAAAA,EAAAA,IAAuB,MAE9CuiE,GAAuBviE,EAAAA,EAAAA,KAAO,GAC9BwiE,GAAmBxiE,EAAAA,EAAAA,IAAO,GAC1ByiE,GAAsBziE,EAAAA,EAAAA,KAAO,GAC7B0iE,GAAiB1iE,EAAAA,EAAAA,KAAO,GACxB2iE,GAAkB3iE,EAAAA,EAAAA,IAAO,GACzB4iE,GAA2B5iE,EAAAA,EAAAA,KAAO,GAElC6iE,GAA0B5/D,EAAAA,EAAAA,IAAgB,WAAiC,IAAhC6/D,EAAmBx6D,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GAC9Dm6D,EAAoBjiE,SACnB8hE,EAAqB9hE,SAAYg/D,EAAah/D,UAEnD8hE,EAAqB9hE,QAAQ8C,MAAMy/D,QAAU,QAC7CvD,EAAah/D,QAAQwiE,UAvBF,EAyBdphC,EAAAA,IAAckhC,IACjBG,EAAAA,EAAAA,GAAkBzD,EAAah/D,SAGjC+hE,EAAqB/hE,SAAU,EAC/BgiE,EAAiBhiE,QA9BE,EA+BnBiiE,EAAoBjiE,SAAU,EAC9BkiE,EAAeliE,SAAU,EAC3B,IAEM0iE,GAA2BjgE,EAAAA,EAAAA,IAAgB,KAC1Cw/D,EAAoBjiE,SACpB8hE,EAAqB9hE,UAE1B8hE,EAAqB9hE,QAAQ8C,MAAMy/D,QAAU,OAE7CN,EAAoBjiE,SAAU,EAAK,IAG/B2iE,GAAelgE,EAAAA,EAAAA,IAAgB,KACnC,IAAKu8D,EAAah/D,QAAS,OAE3B,GAAI+hE,EAAqB/hE,QAGvB,YAFA+hE,EAAqB/hE,SAAU,GAKjC,MAAM4iE,EAAe5D,EAAah/D,QAAQwiE,UACpCK,EAAeD,EAAeZ,EAAiBhiE,QAC/C8iE,EAAaF,EAAeZ,EAAiBhiE,QAC7C+iE,EAA2B,IAAjBH,EACVI,EAAiB7pD,KAAKC,MAAQ+oD,EAAgBniE,QAEpD,GAAI8hE,EAAqB9hE,QAAS,CAChC,GAAI+iE,IAAYd,EAAoBjiE,QAElC,YADAijE,EAAAA,EAAAA,IAAcZ,EAAyB,CAACrD,EAAah/D,QAAS8hE,EAAqB9hE,WAIrFijE,EAAAA,EAAAA,IAAcP,EAA0BZ,EAAqB9hE,QAC/D,CAGE8iE,IACGZ,EAAeliE,SAAWgjE,EArET,KAsEdJ,EAAe,GAAKR,EAAyBpiE,SAEnD4hE,MACSiB,GAAgBD,EAAe,GACxCf,MAGFG,EAAiBhiE,QAAU4iE,EAC3BV,EAAeliE,QAAU+iE,EACzBZ,EAAgBniE,QAAUmZ,KAAKC,MAC/BgpD,EAAyBpiE,QAAU6iE,GAAgBD,EAAe,CAAC,IAI/DM,GAAczB,EAAAA,EAAAA,IAAsBpf,IACxC,IAAK2c,EAAah/D,QAAS,OAC3B,MAAMmjE,EAAYnE,EAAah/D,QAEVmjE,EAAUC,aAAeD,EAAUE,cACnB,IAAjBhhB,EAAMihB,SAEtBjhB,EAAMihB,OAAS,EACjB1B,MAEAC,MACF,GACC,CAAC7C,EAAc4C,EAAcC,GAlGL,KAuH3B,OAnBAxjE,EAAAA,EAAAA,KAAU,KACR,MAAM8kE,EAAYnE,EAAah/D,QAC/B,GAAKmjE,EAWL,OAT4B,IAAxBA,EAAUX,YACZhhC,EAAAA,EAAAA,KAAgB,KACd6gC,GAAwB,EAAK,IAIjCc,EAAUjmD,iBAAiB,SAAUylD,EAAc,CAAEY,SAAS,IAC9DJ,EAAUjmD,iBAAiB,QAASgmD,EAAa,CAAEK,SAAS,IAErD,KACLJ,EAAU/lD,oBAAoB,SAAUulD,GACxCQ,EAAU/lD,oBAAoB,QAAS8lD,EAAY,CACpD,GACA,CAAClE,EAAckE,IAEVltD,EAAAA,QAEJ3Z,EADFwC,EAAAA,GAAAC,cAAA,OAAK+E,IAAKi+D,EAAsBjlE,UAAU,qBAAqBsC,IAAI,sBAEvE,CDuEkCqkE,CAAiBxE,GARnBv8D,EAAAA,EAAAA,IAAgB,KAC5Cs8D,EAAkB,CAAE9xC,SAAS,EAAMmyC,cAAa,KAGpB38D,EAAAA,EAAAA,IAAgB,KAC5Cs8D,EAAkB,CAAE9xC,SAAS,EAAOmyC,cAAa,KA+BnD,OACEvgE,EAAAA,GAAAC,cAACkmD,EAAAA,EAAc,CACbnoD,WAAWkC,EAAAA,EAAAA,GAAe,0BAA2Bq5D,GAAoB,oBACzEv0D,IAAKm7D,EACL5iD,MAAOooC,EACPif,aAAa,oCACbC,iBAAkBzD,EAAAA,IAClB0D,yBAAuB,EACvBC,eAAgBjC,GAChBkC,UAAWnE,EAAcE,EAAgBV,EACzC1b,WAAYiB,EACZqf,YAAapC,IAEZxB,GACCrhE,EAAAA,GAAAC,cAACilE,GAAkB,CACjB5kE,IAAI,cACJm+D,SAAUA,EACVC,eAAgB4B,IAGnBK,GACC3gE,EAAAA,GAAAC,cAACklE,EAAO,CACN7kE,IAAI,UACJ41D,gBAAiBA,EACjB/1D,QAASuiE,EACTvM,YAAawM,KAGhBhd,GAAapkD,OAtDlB,WACE,MAAM6jE,EAAiBxL,EAAYp8C,QAAQmoC,EAAa,IAElD0f,GAAcC,EAAAA,EAAAA,IAAoB7E,IAAqB,EAE7D,OAAO9a,EAAatmD,KAAI,CAAC5B,EAAI6D,KAC3B,MAAMqzD,EAAWyQ,EAAiB9jE,EAAI+jE,EAChClL,EAAYkG,EAA2BU,GAAiBqE,EAAiB9jE,GAAKw/D,EAAAA,IAEpF,OACE9gE,EAAAA,GAAAC,cAACslE,GAAI,CACHjlE,IAAK7C,EACL+nE,cAAe7Q,EAAWrzD,GAAImkE,EAAAA,EAAAA,IAAYhoE,GAC1CX,OAAQW,EACRk3D,SAAUA,EACVqF,SAAUA,EACVE,cAAegH,EAAiBzjE,GAChCw8D,UAAWgH,EAAcxjE,GACzB08D,UAAWA,EACXnhB,oBAAqBspB,EACrBnM,YAAamB,IACb,GAGR,CA+BMoO,GACE/f,IAAgBA,EAAYpkD,OAE5BvB,EAAAA,GAAAC,cAAC0lE,GAAW,CACV3L,SAAUA,EACV4D,WAAYA,EACZK,gBAAiBA,EACjBC,uBAAwBA,IAI5Bl+D,EAAAA,GAAAC,cAACsmD,EAAAA,EAAO,CAACjmD,IAAI,YAEA,G,yWE9QrB,SAAgB,KAAO,uBAAuB,cAAc,uBAAuB,WAAa,uBAAuB,QAAU,uBAAuB,MAAQ,uBAAuB,YAAc,uBAAuB,SAAS,uBAAuB,MAAQ,uBAAuB,WAAW,uBAAuB,QAAU,wBC2BjU+wD,EAAY,EAAIjT,EAAAA,GAwCtB,GAAe1hD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,EAAM0C,KAA6B,IAA3B,OAAExC,GAAQwC,EAC1D,MAAMvC,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAC1B8oE,EAAkB7oE,IAASA,EAAK27C,YAAaplC,EAAAA,EAAAA,IAAiBvW,EAAM,iBAE1E,MAAO,CACLghE,eAAeC,EAAAA,EAAAA,KAAoBphE,EAAQ,MAC3CgpE,kBACD,GAPiBjpE,EAtC0BoB,IAExC,IAFyC,OAC7CjB,EAAM,cAAEihE,EAAa,gBAAE6H,GACxB7nE,EACC,MAAM,qBAAE8nE,IAAyBznE,EAAAA,EAAAA,MAE3BC,GAAOC,EAAAA,EAAAA,MACP,SAAE4I,IAAaC,EAAAA,EAAAA,MAEf2+D,GAAoBtnE,EAAAA,EAAAA,KAAY,KACpCqnE,EAAqB,CAAE/oE,UAAS,GAC/B,CAACA,EAAQ+oE,IAEZ,OACE7lE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWoG,EAAOmN,MACrBvR,EAAAA,GAAAC,cAAA,OAAKjC,UAAWoG,EAAOvC,SACpBk8D,GAAiB/9D,EAAAA,GAAAC,cAACq+D,EAAAA,EAAuB,CAACz8D,QAASk8D,EAAe/5D,KAAMqtD,KAE3ErxD,EAAAA,GAAAC,cAAA,MAAIjC,UAAWoG,EAAO0K,MAAOpN,IAAI,QAAQrD,EAAK,8BAC9C2B,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAekE,EAAO2O,YAAa3O,EAAO2hE,UAAWrkE,IAAI,QACpErD,EAAK,oCAEPunE,GACC5lE,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACL2P,QAAShJ,EACTq3D,OAAK,EACLp+D,QAAS2lE,EACT9hE,KAAK,UACLrC,MAAOtD,EAAKsD,OAEZ3B,EAAAA,GAAAC,cAAA,OAAKjC,UAAWoG,EAAO4hE,YACpB3nE,EAAK,gCAIR,K,iHC/DV,MCqOA,GAAe3B,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAoC,IAAlC,OAAExC,EAAM,MAAE6hD,EAAK,WAAEh5C,GAAYrG,EACpC,MAAMvC,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAE1Bw7D,GAAc3tC,EAAAA,EAAAA,KAAkB/tB,EAAQE,EAAQ6hD,EAAMsnB,gBACtD,SAAE9N,EAAQ,iBAAEC,EAAgB,WAAEC,GAAeC,GAAe,CAAC,EAC7DC,EAAoBJ,GACrBhmD,EAAAA,EAAAA,KAAWvV,EAAQu7D,KAAan7D,EAAAA,EAAAA,KAAWJ,EAAQu7D,QAAa36D,EAC/Dg7D,EAAoBF,GAAcG,EAAAA,EAAAA,IAAiBH,QAAe96D,EAClEk7D,EAAsBF,GAAqBJ,GAC7CztC,EAAAA,EAAAA,KAAkB/tB,EAAQE,EAAQs7D,QAClC56D,GACIm7D,cAAeC,EAAqBC,aAAcC,GAAuBN,GAAqB,CAAC,EACjGzZ,GAAeua,EAAAA,EAAAA,KAAkB18D,EAAQE,EAAQ6hD,EAAMlhD,GAAI,gBAC3Dw4B,GAAQC,EAAAA,EAAAA,KAAYt5B,EAAQE,EAAQ6hD,EAAMlhD,IAC1C4gD,GAAaC,EAAAA,EAAAA,KAAiB1hD,EAAQE,EAAQ6hD,EAAMlhD,IACpDo3D,EAAiBn3D,QAAQ2gD,GAAY6nB,yBAEnCppE,OAAQk8D,EAAevmD,SAAUwmD,IAAoBvmD,EAAAA,EAAAA,KAAyB9V,IAAW,CAAC,EAElG,MAAO,CACLG,OACAu7D,cACAM,sBACAE,qBACAJ,sBACAH,oBACAxZ,eACAonB,WAAWC,EAAAA,EAAAA,KAAqBxpE,EAAQE,EAAQ6hD,EAAMlhD,IACtDs8D,yBAAyB94D,EAAAA,EAAAA,KAA0BrE,GACnDq5B,WACIoiC,GAAcC,GAAe,CAC/BuB,2BAA2BC,EAAAA,EAAAA,KAAqBl9D,EAAQ07D,IAE1DmB,cAAe9zD,GAAc5I,GAAMU,KAAOu7D,GAAiBC,IAAoBta,EAAMlhD,GACrFo3D,iBACD,GApCel4D,EA/JqBoB,IAqBnC,IArBoC,MACxC4gD,EAAK,WACLh5C,EAAU,OACV7I,EAAM,KACNC,EAAI,MACJkH,EAAK,YACLq0D,EAAW,cACXmB,EAAa,0BACbI,EAAyB,oBACzB7gB,EAAmB,UACnBmtB,EAAS,oBACTzN,EAAmB,oBACnBE,EAAmB,mBACnBE,EAAkB,kBAClBP,EAAiB,cACjB2B,EAAa,wBACbH,EAAuB,UACvBE,EAAS,aACTlb,EAAY,MACZ9oB,EAAK,eACL4+B,GACD92D,EACC,MAAM,SAAEu8B,EAAQ,YAAE+rC,EAAW,iBAAEjM,IAAqBh8D,EAAAA,EAAAA,MAE9CC,GAAOC,EAAAA,EAAAA,MAENgjC,EAAmBC,EAAiBC,IAAoBzgC,EAAAA,EAAAA,MACxDy5D,EAAiBC,EAAeC,IAAkB35D,EAAAA,EAAAA,MAClDk6D,EAAyBC,EAAuBC,IAA2Bp6D,EAAAA,EAAAA,MAC3Eq6D,EAAuBC,EAAqBC,KAAyBv6D,EAAAA,EAAAA,MAEtE,SACJ4zD,GAAQ,SAAE2R,IACR3nB,EACEtsC,GAAUssC,EAAMtsC,cAA8B7U,IAAlBmhD,EAAMtsC,SAAyBtV,EAAKsV,QAEhEk0D,IAAwB3iE,EAAAA,EAAAA,IAAgB,KAC5Cs3D,IACA35B,GAAiB,IAGbm7B,IAAe94D,EAAAA,EAAAA,IAAgB,KACnCyiE,EAAY,CAAEvpE,OAAQC,EAAKU,GAAIkV,QAASgsC,EAAMlhD,IAAK,IAG/Ck/D,IAAa/4D,EAAAA,EAAAA,IAAgB,KACjCy3D,IACAZ,GAAe,KAGX,eAAEoB,GAAc,IAAE72D,KAAQ82D,EAAAA,EAAAA,GAAiB,CAC/C/+D,OACAD,SACAw7D,cACAriC,QACAyiC,sBACAE,sBACAE,qBACAP,oBACAa,iBAAkBza,EAClB3F,sBACA8G,SAAS,EACTf,eAEAmb,gBACAH,0BACAE,cAGIuM,IAAkB5iE,EAAAA,EAAAA,IAAgB,KACtC02B,EAAS,CAAE78B,GAAIX,EAAQ2V,SAAUksC,EAAMlhD,GAAIqtC,sBAAsB,IAE7D2uB,GACFW,GACF,IAGIrD,GCxIO,SAA+Bh5D,GAc3C,IAd4C,MAC7C4gD,EAAK,KACL5hD,EAAI,UACJ0pE,EAAS,UACTN,EAAS,aACTzJ,EAAY,WACZC,GAQD5+D,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEb,OAAOK,EAAAA,EAAAA,KAAQ,KACb,MAAM,SACJg2D,EAAQ,QAAEtiD,EAAO,SAAEi0D,EAAU7oE,GAAIkV,GAC/BgsC,EAEE7hD,EAASC,EAAKU,IAEd,UACJipE,EAAS,kBACTC,EAAiB,cACjBC,EAAa,sBACb/yD,EAAqB,iBACrBgzD,IACEzoE,EAAAA,EAAAA,MAEE0oE,GAAkBC,EAAAA,EAAAA,IAAkBhqE,EAAM4hD,GAC1CqoB,EAAkBjqE,EAAK27C,YAAaplC,EAAAA,EAAAA,IAAiBvW,EAAM,gBAE3DkqE,EAAqB/J,EAAAA,IAAgC,CACzDpuD,MAAO,kBACPyH,KAAM,kBACN0gD,QAASA,KACP4P,EAAiB,CAAE/pE,OAAQC,EAAKU,GAAIgV,SAAUE,GAAU,GAItDu0D,EAAmBvoB,EAAMwW,cAAgBsR,EAC3C,CACA33D,MAAOzQ,EAAK,cACZkY,KAAM,YACN0gD,QAASA,KACP2P,EAAc,CAAE9pE,SAAQ6V,WAAU,QAGpCnV,EAEE2pE,EAAYH,EAAmBrS,EACjC,CACA7lD,MAAOzQ,EAAK,gBACZkY,KAAM,QACN0gD,QAASA,IAAM0P,EAAkB,CAAE7pE,SAAQ6V,UAASgiD,UAAU,KAE9D,CACA7lD,MAAOzQ,EAAK,YACZkY,KAAM,MACN0gD,QAASA,IAAM0P,EAAkB,CAAE7pE,SAAQ6V,UAASgiD,UAAU,UAC3Dn3D,EAED4pE,EAAerqE,EAAKsV,UAAuB,IAAZA,IAAkC,IAAZA,EACvD,CACAvD,MAAOzQ,EAAK,mBACZkY,KAAM,SACN0gD,QAASA,IAAMpjD,EAAsB,CAAE/W,SAAQ6V,UAASN,SAAS,KAEjE,CACAvD,MAAQ,GAAEzQ,EAAK,sBACfkY,KAAM,OACN0gD,QAAS0F,GAGP0K,EAAmBP,EAAmBR,EACxC,CACAx3D,MAAOzQ,EAAK,0BACZkY,KAAM,eACN0gD,QAASA,IAAMyP,EAAU,CAAE5pE,SAAQ6V,UAAS2zD,UAAU,KAEtD,CACAx3D,MAAOzQ,EAAK,yBACZkY,KAAM,cACN0gD,QAASA,IAAMyP,EAAU,CAAE5pE,SAAQ6V,UAAS2zD,UAAU,UACnD9oE,EAED8pE,EAAenB,EAAY,CAC/Br3D,MAAOzQ,EAAK,0BACZkY,KAAM,SACNgxD,aAAa,EACbtQ,QAASyF,QACPl/D,EAEJ,OAAO65D,EAAAA,EAAAA,IAAQ,CACb4P,EACAE,EACAD,EACAE,EACAC,EACAC,GACA,GACD,CAAC3oB,EAAO5hD,EAAM0pE,EAAWpoE,EAAM8nE,EAAWzJ,EAAcC,GAC7D,CD+ByB6K,CAAuB,CAC5C7oB,QACA5hD,OACA0pE,UAAW5R,EACXsR,YACAzJ,aAAc6J,GACd5J,gBAGF,OACE38D,EAAAA,GAAAC,cAACqW,EAAAA,EAAQ,CACPtY,WAAWkC,EAAAA,EAAAA,GD9JM,uBCgKf,OACAyF,GAAc,WACd,uBAEFxF,QAASqmE,GACTviE,MAAOA,EACPmS,KAAM8mD,EAAAA,GAAgC,KAAGC,EAAAA,EAAAA,IAAmBrgE,EAAQ,SAAU6hD,EAAMlhD,WAAQD,EAC5Fu5D,eAAgBA,GAChBU,mBAAiB,EACjBzyD,IAAKA,IAELhF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,QACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACbgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,UAC7BF,EAAAA,GAAAC,cAACygD,EAAAA,EAAS,CAAC/B,MAAOA,EAAO3gD,UD9KkI,uBC8KrGg7C,oBAAqBA,IAC3Eh5C,EAAAA,GAAAC,cAAA,MAAIyB,IAAI,OAAO1D,UAAU,aAAY4R,EAAAA,EAAAA,GAAW+uC,EAAM7vC,SAEvD6vC,EAAMtsC,SAAWrS,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,oBAC/BgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,cACdsoE,IACCtmE,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GACZ,OACA,kBDtLkF,0BC2LrFo4D,GACCt4D,EAAAA,GAAAC,cAACw9D,EAAAA,EAAe,CACdr4D,QAASkzD,EACTjX,eAAgBwY,KAItB75D,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACZ69D,KACD77D,EAAAA,GAAAC,cAACs9D,EAAAA,EAAS,CACRxgE,KAAMA,EACN43D,SAAUA,GACVtiD,QAASA,GACTssC,MAAOA,EACPkW,eAAgBA,MAIrBoG,GACCj7D,EAAAA,GAAAC,cAACq7C,EAAAA,EAAa,CACZ7xB,OAAQ6X,EACRzX,QAAS2X,EACT1X,oBAAqBqxC,EACrBsM,sBAAoB,EACpBlsB,eAAgBmhB,GAChBj8D,KAAMpC,EAAK,+BACXqpE,aAAcrpE,EAAK,YAGtB+8D,GACCp7D,EAAAA,GAAAC,cAACy0D,EAAAA,EAAa,CACZjrC,OAAQ+wC,EACR3wC,QAAS6wC,EACT5wC,oBAAqBwxC,GACrBx+D,OAAQA,EACR6V,QAASgsC,EAAMlhD,KAGV,KEuDf,GAAef,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KACjBC,IACC,MAAME,GAASM,EAAAA,EAAAA,KAAeR,GAAQu8D,iBAChCp8D,EAAOD,GAASE,EAAAA,EAAAA,KAAWJ,EAAQE,QAAUU,GAEjDV,OAAQk8D,EACRvmD,SAAUwmD,IACRvmD,EAAAA,EAAAA,KAAyB9V,IAAW,CAAC,EAEzC,MAAO,CACLG,OACA4sD,eAAgB7sD,IAAWk8D,EAAgBC,OAAkBz7D,EAC7Du8D,yBAAyB94D,EAAAA,EAAAA,KAA0BrE,GACpD,IAEFA,IAAW48D,EAAAA,EAAAA,IAAuB58D,IAfjBD,EA5N0BoB,IASxC,IATyC,KAC7ChB,EAAI,eACJ4sD,EAAc,OACdlgC,EAAM,SACN2tC,EAAQ,cACRuQ,EAAa,oBACb79C,EAAmB,qBACnB89C,EAAoB,wBACpB7N,GACDh8D,EACC,MAAM,gBACJw8D,EAAe,iBAAEsN,EAAgB,WAAExN,IACjCj8D,EAAAA,EAAAA,MAGE4G,GAAMrE,EAAAA,EAAAA,IAAuB,MAG7Bw/D,GAAex/D,EAAAA,EAAAA,IAAuB,MAEtCmnE,GAAsBnnE,EAAAA,EAAAA,IAAuB,OAC7C,SAAEuG,IAAaC,EAAAA,EAAAA,OAErB3H,EAAAA,EAAAA,KAAU,KACJzC,IAASA,EAAK6hD,QAChByb,EAAW,CAAEv9D,OAAQC,EAAKU,IAC5B,GACC,CAACV,EAAMs9D,IAEV,MAAO0N,EAAYC,IAAiB1gE,EAAAA,EAAAA,KAAS,GACvCjJ,GAAOC,EAAAA,EAAAA,KAEP2pE,GAAcrkE,EAAAA,EAAAA,IAAgB,KAClC22D,GAAiB,KAGnB/6D,EAAAA,EAAAA,KAAU,KACHu6D,GAA4BtwC,GAC/BK,KACF,GACC,CAACiwC,EAAyBtwC,EAAQK,IAErC,MAAMo+C,GAAuBtkE,EAAAA,EAAAA,IAAgB,KACtC7G,GACL8qE,EAAiB,CAAEpqE,GAAIV,EAAKU,GAAIqtC,sBAAsB,GAAO,KAGzD,QAAEw3B,IAAYC,EAAAA,EAAAA,IAAwB,CAC1CC,QAASrC,EACTsC,WAnD0B,OAsD5B0F,EAAAA,EAAAA,IAAeL,EAAqBxF,GAAShjE,IAAwB,IAAvB,eAAE26C,GAAgB36C,EAC9D0oE,GAAe/tB,EAAe,IAGhC,MAAM2f,GAAaj7D,EAAAA,EAAAA,KAAQ,IAClB5B,GAAM6hD,QACTwpB,EAAAA,EAAAA,IAAiBlpE,OAAOC,OAAOpC,EAAK6hD,QAAS7hD,EAAKsrE,uBAAuBhpE,KAAIxC,IAAA,IAAC,GAAEY,GAAIZ,EAAA,OAAKY,CAAE,IAC3F,IACH,CAACV,KAEE,cAAEkkE,EAAa,iBAAEC,IAAqBC,EAAAA,EAAAA,GAAavH,EAAY78D,GAAMU,KAEpEkoD,GAAaC,KAAWC,EAAAA,EAAAA,IAAkB,KAC1C9oD,GACLs9D,EAAW,CAAEv9D,OAAQC,EAAKU,IAAK,GAC9Bm8D,GAAa78D,GAAMurE,aAAe1O,EAAWr4D,QAAUxE,EAAKurE,YAAaC,EAAAA,KAEtEC,IAAkB7nE,EAAAA,EAAAA,KAAO,GACzBs8C,GAAYxzB,IAAW2tC,EACvBqR,IAAgB9sC,EAAAA,EAAAA,GAAYshB,IAE9BwrB,KAAkBxrB,KACpBurB,GAAgBrnE,SAAU,IAG5BunE,EAAAA,EAAAA,GAAe,CACbvrE,SAAU8/C,GACV0rB,OAAQV,EACRtI,KAAM5iE,GAAOogE,EAAAA,EAAAA,IAAmBpgE,EAAKU,GAAI,SAAUiX,EAAAA,SAAkBlX,KAGvEgC,EAAAA,EAAAA,KAAU,IAAOy9C,IAAYzuB,EAAAA,EAAAA,GAAsBy5C,QAAezqE,GAAY,CAACyqE,EAAahrB,MAE5Fz9C,EAAAA,EAAAA,KAAU,KACJipE,KAAkBxrB,KAEpBhe,EAAAA,EAAAA,KAAoB,KAClB,IAAKj6B,EAAI7D,QAAS,OAElB,MAAMynE,GAA6BC,EAAAA,EAAAA,OACnCC,EAAAA,EAAAA,GAAqB9jE,EAAI7D,QAASynE,GAElChB,MAEI3qB,IACFurB,GAAgBrnE,SAAU,EAC1B6D,EAAI7D,QAAS8C,MAAM8kE,UAAY,SAE/BP,GAAgBrnE,SAAU,EAC1B6D,EAAI7D,QAAS8C,MAAM8kE,UAAY,GACjC,GAEJ,GACC,CAAC9rB,GAAW2qB,EAAsBa,MAErCjpE,EAAAA,EAAAA,KAAU,KACR,GAAKwqB,EAAAA,GAIL,OAAOhb,EAAAA,EAAAA,IAAchK,EAAI7D,QAAU,CACjCsqD,wBAAyB,aACzBC,QAAUA,CAAC19C,EAAG29C,IAGRA,KAFmBttD,EAAKsD,MAAQiqD,EAAAA,GAAeE,KAAOF,EAAAA,GAAeC,SAGvE0O,KACO,IAKX,GACD,CAACA,EAAiBl8D,EAAKsD,QAmB1B,MAAMo2B,QAA6Bv6B,IAAjBT,GAAM6hD,OAExB,OACE5+C,EAAAA,GAAAC,cAAA,OACE+E,IAAKA,EACLhH,WAAWkC,EAAAA,EAAAA,GCjNM,uBDmNf6nE,GCnN+P,uBDoN/P1pE,EAAKsD,OCpNuC,wBDqN3Co4D,GCrNsH,wBDuNzHiP,gBAAkBv/C,OAA+BjsB,EAAtBssB,GAE3B9pB,EAAAA,GAAAC,cAAA,OAAKxC,GAAG,kBAAkBO,UAAU,eAClCgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLC,OAAK,EACLwD,KAAK,UACLmM,MAAM,cACNhQ,QAAS8nE,EACT53D,UAAWhS,EAAK,UAEhB2B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAGdjB,GACCiD,EAAAA,GAAAC,cAACqmD,EAAAA,EAAa,CACZrH,UAAQ,EACRjhD,UCvO+W,uBDwO/WlB,OAAQC,EAAKU,GACb0C,QAAS+nE,IAIZnrE,GAEGiD,EAAAA,GAAAC,cAACgpE,EAAAA,EAAa,CACZnsE,OAAQC,EAAKU,GACbgV,SAAUiC,EAAAA,GACVgX,gBAAgB,SAChBw9C,kBAAkB,EAClBC,YAAU,EACVjiE,SAAUA,EACVygE,cAAeA,KAKtB5qE,GAAQiD,EAAAA,GAAAC,cAACmpE,EAAAA,EAAgB,CAACtsE,OAAQC,EAAKU,GAAIQ,iBAAiB,EAAOD,UC3P4H,yBD6PhMgC,EAAAA,GAAAC,cAAA,OAAKjC,UC7P0N,yBD+P/NgC,EAAAA,GAAAC,cAACkmD,EAAAA,EAAc,CACbnoD,UAAU,0BACVgH,IAAKm7D,EACL5iD,MAAOooC,GACPkf,iBAAkB0D,EAAAA,IAClBzD,yBAAuB,EACvBE,WAAYpL,GAAYr4D,QAAU,GAAK8nE,EAAAA,IACvC1kB,WAAYiB,GACZ0jB,cAAeC,EAAAA,IACfxE,eAAgB/kE,EAAAA,GAAAC,cAAA,OAAK+E,IAAK8iE,EAAqB9pE,UCxQsS,0BD0QpVN,QAAQioD,IAAapkD,SA/E5B,WACE,MAAM6jE,EAAiBxL,EAAYp8C,QAAQmoC,GAAa,IAExD,OAAOA,IAAatmD,KAAI,CAAC5B,EAAI6D,IAC3BtB,EAAAA,GAAAC,cAACupE,EAAK,CACJlpE,IAAK7C,EACLX,OAAQC,EAAMU,GACdkhD,MAAO5hD,EAAM6hD,OAAQnhD,GACrBwG,MAAQ,SAAQmhE,EAAiB9jE,GAAK+nE,EAAAA,SACtC1jE,WAAYgkD,IAAmBlsD,EAC/Bu7C,oBAAqBspB,EACrBpI,cAAegH,EAAiBzjE,GAChCw8D,UAAWgH,EAAcxjE,MAG/B,CAiEQgsE,GAED1xC,KAAc4tB,IAAapkD,QAC1BvB,EAAAA,GAAAC,cAACsmD,EAAAA,EAAO,CAACjmD,IAAI,cAGfy3B,IAAqC,IAAxB4tB,IAAapkD,QAAgBokD,GAAY,KAAO+jB,EAAAA,KAC7D1pE,EAAAA,GAAAC,cAAC0pE,EAAU,CAAC7sE,OAAQC,EAAKU,KAEvB,I,yDEnRH,IAAKmsE,EAAkB,SAAlBA,GAAkB,OAAlBA,EAAAA,EAAkB,eAAlBA,EAAAA,EAAkB,qBAAlBA,EAAAA,EAAkB,eAAlBA,CAAkB,MAMvB,SAASC,EAAgD5I,GAC9D,OAAOtiE,EAAAA,EAAAA,KAAQ,KACb,MAAMmrE,EAAa5qE,OAAOC,OAAO8hE,GAC3B8I,EAAaD,EAAWvqE,QAAQyqE,GAASA,EAAO,IAAGzoE,OACnD0oE,EAAeH,EAAWvqE,QAAQyqE,GAASA,EAAO,IAAGzoE,OAE3D,OAAQzE,IACN,MAAMm9D,EAAYgH,EAAcnkE,GAChC,OAAkB,IAAdm9D,EACK2P,EAAmB52B,KAI1BinB,IAAciQ,KACXjQ,KAAc,KACb8P,GAAcE,GAAgBhQ,EAAY,GAC1CgQ,EAAeF,GAAc9P,EAAY,EAEtC2P,EAAmBO,QAGrBP,EAAmBQ,IAAI,CAC/B,GACA,CAACnJ,GACN,C,8NC/BA,QAA4F,uBAA5F,EAAiT,uBAAjT,EAAyc,uBAAzc,EAAwe,uBC+BleoJ,EAAsBp/B,OAAOmT,EAAAA,IAsInC,GAAe1hD,EAAAA,EAAAA,KAnI4BqB,IAIrC,IAJsC,KAC1ChB,EAAI,kBACJutE,EAAiB,oBACjBtxB,GACDj7C,EACC,MAAM,SAAEu8B,IAAal8B,EAAAA,EAAAA,MAGfmsE,GAAiB5pE,EAAAA,EAAAA,IAAuB,MAExC6pE,GAAgB7pE,EAAAA,EAAAA,IAAuB,MAEvCtC,GAAOC,EAAAA,EAAAA,MAENmsE,KAAoBC,IAAe/rE,EAAAA,EAAAA,KAAQ,IAC3C5B,EAAK6hD,QAIHwpB,EAAAA,EAAAA,IAAiBlpE,OAAOC,OAAOpC,EAAK6hD,aAASphD,GAAW,GAAM4B,MAAM,EArB5D,GAkBN,IAIR,CAACrC,EAAK6hD,UAEF+rB,EAAkBC,IAAuBtjE,EAAAA,EAAAA,KAAS,IAClDujE,EAAkBC,IAAuBxjE,EAAAA,EAAAA,SAA6B9J,IAG3Ey9C,YAAa8vB,EACbpuB,gBAAiBquB,IACfpuB,EAAAA,EAAAA,IAAc5uC,IACoB,IAAhCy8D,EAAgBtV,cAEpBnnD,EAAEM,kBACFN,EAAEuT,iBAEF+Y,EAAS,CACP78B,GAAIV,EAAKU,GACTgV,SAAUg4D,EAAgBhtE,GAC1BqtC,sBAAsB,EACtBpc,mBAAmBu8C,EAAAA,EAAAA,QACnB,IAmBJ,OAhBAzrE,EAAAA,EAAAA,KAAU,KACR,MAAM0rE,EAAqBX,EAAeppE,QACpCgqE,EAAoBX,EAAcrpE,QACxC,IAAK+pE,IAAuBC,EAAmB,OAE/C,MAAMC,EAAmBF,EAAmBG,YACtCC,EAAkBH,EAAkBE,YAEtC5hE,KAAK8hE,IAAIH,EAAmBE,GAAmBjB,EACjDS,EAAoBrhE,KAAK8C,IAAI6+D,EAAkBE,IAE/CR,OAAoBttE,GAEtBotE,EAAoBQ,EAAmBE,EAAgB,GACtD,CAACb,EAAiBH,IAGnBtqE,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GD9FM,uBCgGfyqE,GDhG4zB,uBCiG5zBE,GDjGi5B,wBCmGn5BnpE,IAAKrD,EAAKsD,MAAQ,WAAQnE,EAC1ByG,MAAO4mE,EAAoB,wBAAuBA,WAAuBrtE,GAExEitE,GACCzqE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWoG,GACdpE,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GDzG0P,uBC2GnQuqE,EAAgBtV,aAAe/wD,GAEjCY,IAAKwlE,EACLrqE,QAAS4qE,EACTp0B,YAAaq0B,GAEbhrE,EAAAA,GAAAC,cAACygD,EAAAA,EAAS,CACR/B,MAAO8rB,EACPzxB,oBAAqBA,IAEvBh5C,EAAAA,GAAAC,cAAA,OAAKjC,UDrHsf,yBCqH5d4R,EAAAA,EAAAA,GAAW66D,EAAgB37D,SACxD+7D,GAAoBF,GACpB3qE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWoG,GACdpE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWoG,MAKtBpE,EAAAA,GAAAC,cAAA,OAAKjC,UD7HosB,wBC8HtsB0sE,EAAYrrE,KAAKs/C,GAChB3+C,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GDhI6K,uBCiIlKy+C,EAAMwW,aAAe/wD,GAE3C9D,IAAKq+C,EAAMlhD,IAEXuC,EAAAA,GAAAC,cAACygD,EAAAA,EAAS,CACR/B,MAAOA,EACP3gD,UDvI8hB,uBCwI9hBg7C,oBAAqBA,IAEvBh5C,EAAAA,GAAAC,cAAA,QAAMjC,UD1IgnB,yBC0I3kB4R,EAAAA,EAAAA,GAAW+uC,EAAM7vC,YAKlE9O,EAAAA,GAAAC,cAAA,OAAKjC,UD/IsuB,2BCkJ7uBysE,GAAmBzqE,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAekE,EDlJmE,yBCkJhC/F,EAAK,YAC5F2B,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GDpJyW,uBCoJtUuqE,GAAiBtV,aAAe/wD,GAC9EY,IAAKulE,EACLpqE,QAAS4qE,EACTp0B,YAAaq0B,GAEZV,KACCO,IAAqBF,GACrB3qE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWoG,GACdpE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWoG,MAKlB,I,0BC3HV,MAAMonE,EAAqB,IAEZ,SAAS1P,EAAgB/9D,GAiCrC,IAjCsC,KACvChB,EAAI,YACJu7D,EAAW,OACXx7D,EAAM,aACNiiD,EAAY,MACZ9oB,EAAK,oBACLyiC,EAAmB,oBACnBE,EAAmB,iBACnBQ,EAAgB,kBAChBb,EAAiB,mBACjBO,EAAkB,oBAClB9f,EAAmB,cACnBkhB,EAAa,UACbD,EAAS,wBACTF,EAAuB,QACvBja,GAkBD/hD,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEP0G,GAAMrE,EAAAA,EAAAA,IAAuB,MAE7B8qE,EAAWnT,IAAenb,EAAAA,EAAAA,IAAgBmb,IAEhDoT,EAAAA,EAAAA,GAAiB5uE,EAAQ2uE,EAAWnT,EAAYF,sBAAmB56D,EAAWk7D,GAE9E,MAAMzc,EAAiBqc,KAAgBqT,EAAAA,EAAAA,IAAkBrT,IACrD3d,EAAAA,EAAAA,IAA4B2d,QAC5B96D,EACEw+C,GAAe15C,EAAAA,EAAAA,GAASg2D,GAAc7wD,EAAAA,EAAAA,IAAoB6wD,EAAa,cAAW96D,GAClF2+C,EAAez+C,QAAQ46D,IAAelc,EAAAA,EAAAA,IAAqBkc,IAE3DsT,GAAoBjtE,EAAAA,EAAAA,KAAQ,KAChC,IAAKi6D,EACH,OAIF,MAAMh6D,GAAYC,EAAAA,EAAAA,MAAYC,MAAMC,KACpC,OAAO65D,EAAoBv5D,KAAK0U,GAAWnV,EAAUmV,KAASxU,OAAO7B,QAAQ,GAC5E,CAACk7D,IAEEiT,GAA4BrtE,EAAAA,EAAAA,KAAY,KAC5C,GAAIugD,GAAgBuZ,GAAevZ,EAAajF,UAA+B,IAAnBwe,EAAY9yD,KACtE,OAAOxF,EAAAA,GAAAC,cAAC4gD,EAAAA,EAAY,CAAC9B,aAAcA,IAGrC,GAAI9oB,GAAOx1B,KAAKc,UAAYxE,GAAMqV,SAAW0tC,GAC3C,OACE9/C,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,eAAe0D,IAAKrD,EAAKsD,MAAQ,OAAS,OACrD3B,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAASK,EAAK,WAC7B4xD,EAAAA,EAAAA,GAAuB,CACtBxvD,KAAMw1B,EAAMx1B,KACZihB,SAAUuU,EAAMvU,SAChB+tC,UAAU,EACVqc,uBAAuB,KAM/B,IAAKxT,EACH,OAGF,GAAImT,EAAU,CACZ,MAAM/1D,EAAS3Y,KAASqW,EAAAA,EAAAA,IAAcrW,IAASu7D,EAAYH,WAAaG,EAAYx7D,QAEpF,OACEkD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uCAAuC0D,IAAKrD,EAAKsD,MAAQ,OAAS,QAC5EoqE,EAAAA,EAAAA,GACC1tE,EACAi6D,EACC5iD,OAAwClY,EAA/B+6D,EACV7iD,EAAS3Y,OAAOS,EAChBouE,EACAlT,EACAI,EACAM,EACA,CAAE/b,YAAY,QACd7/C,OACAA,GAIR,CAEA,MAAMwuE,GAAaC,EAAAA,EAAAA,IAAqB5tE,EAAMvB,EAAQy7D,GAEtD,OACEv4D,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uCAAuC0D,IAAKrD,EAAKsD,MAAQ,OAAS,OAC5EqqE,GACChsE,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,gBAAe4R,EAAAA,EAAAA,GAAWo8D,IAC1ChsE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAQ,MAG3Bs6D,EAAY3rC,aAAgB3sB,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,4CACzCN,QAAQ46D,EAAY4T,iBAAoBlsE,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,2CAkE9D,SACEK,EAAc+G,EAAqB4zC,EAAiCjhC,EAAkBokC,GAEtF,MAAMgwB,EACJnsE,EAAAA,GAAAC,cAACq9C,EAAAA,EAAc,CACbj/C,KAAMA,EACN+G,QAASA,EACTm4C,QAAS7/C,QAAQqa,GACjB+jC,8BAA+B9C,EAC/BozB,YAAU,IAId,IAAKr0D,EACH,OAAOo0D,EAGT,MAAM5rC,GAAY8b,EAAAA,EAAAA,IAAoBj3C,GAEtC,OACEpF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,iBACdgC,EAAAA,GAAAC,cAAA,OACEkE,IAAK4T,EACL+I,IAAI,GACJ9iB,WACEkC,EAAAA,EAAAA,GAAe,uBAAwBi8C,GAAgB,QAAS5b,GAAa,yBAE/El8B,WAAW,KAEZk9C,EAAAA,EAAAA,IAAgBn8C,IAAYpF,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,mBACzCmuE,EAGP,CAlGSE,CAAchuE,EAAMi6D,EAAatf,EAAqBgD,GAAgBC,EAAgBE,GACrF,GAEL,CACD2c,EAAoBJ,EAAqBkT,EAAmB7uE,EAAMD,EAAQm5B,EAAOw1C,EACjFtvB,EAAc2D,EAASzhD,EAAMi6D,EAAaC,EAAmBa,EAAkBpd,EAAcC,EAC7FjD,EAAqB+F,IAqDvB,OAnCAtzC,EAAAA,EAAAA,KAAgB,KACd,MAAMqkC,EAAU9qC,EAAI7D,QAEpB,GAAK44D,GAA4BjqB,EAAjC,CAKA,GAAIoqB,IAAkB0P,EAAAA,EAAmBO,QACvCr6B,EAAQ7rC,MAAMqoE,QAAU,KAExB3pC,EAAAA,EAAAA,KAAgB,KACdmN,EAAQz4B,UAAUxT,IAAI,mBACtBisC,EAAQ7rC,MAAMqoE,QAAU,GAAG,QAExB,IAAIpS,IAAkB0P,EAAAA,EAAmBQ,KAQ9C,OAPAt6B,EAAQ7rC,MAAM8kE,UAAa,mBAAkB9O,EAAY6G,EAAAA,aAEzDn+B,EAAAA,EAAAA,KAAgB,KACdmN,EAAQz4B,UAAUxT,IAAI,qBACtBisC,EAAQ7rC,MAAM8kE,UAAY,EAAE,GAIhC,CAEAhlE,YAAW,MACT4+B,EAAAA,EAAAA,KAAgB,KACdmN,EAAQz4B,UAAUqJ,OAAO,kBAAmB,qBAC5CovB,EAAQ7rC,MAAMqoE,QAAU,GACxBx8B,EAAQ7rC,MAAM8kE,UAAY,EAAE,GAC5B,GACDyC,EAAqBe,EAAAA,IA3BxB,CA2B4C,GAC3C,CAACxS,EAAyBE,EAAWC,IAEjC,CACL2B,eAnDF,WACE,OAAI9+D,GAAMqV,UAAY0tC,EAElB9/C,EAAAA,GAAAC,cAACusE,EAAoB,CACnBzvE,KAAMA,EACNutE,kBAAmBuB,EACnB7yB,oBAAqBA,IAKpB6yB,GACT,EAwCE7mE,MAEJ,C,wECtNe,SAASynE,EAAsCC,GAC5D,MAAMC,GAAcC,EAAAA,EAAAA,KACdC,GAAyClsE,EAAAA,EAAAA,IAAO+rE,GAChDI,GAAuBnxC,EAAAA,EAAAA,GAAY+wC,GAWzC,OAJyB,IAArBA,GAA8BI,IAAyBJ,IACzDG,EAAuC1rE,SAAU,GAG5C,CAAE0rE,yCAAwCE,gCATjD,WACEF,EAAuC1rE,QAAUzD,QAAQgvE,GACzDC,GACF,EAOF,C,kFCbe,SAASxL,EAAavH,EAA6Ct5D,GAChF,MAAM0sE,GAAYruE,EAAAA,EAAAA,KAAQ,KACxB,GAAKi7D,EAIL,OAAOA,EAAWt0C,QAAO,CAACC,EAAK9nB,EAAI6D,KACjCikB,EAAI9nB,GAAM6D,EACHikB,IACN,CAAC,EAA4B,GAC/B,CAACq0C,IAEEqT,GAAgBtxC,EAAAA,EAAAA,GAAYqxC,GAC5BzvC,GAAa5B,EAAAA,EAAAA,GAAYr7B,GAEzB2gE,GAAgBtiE,EAAAA,EAAAA,KAAQ,IACvBquE,GAAcC,GAAiB3sE,IAAQi9B,GAIrC2vC,EAAAA,EAAAA,IAAUF,GAAW,CAACG,EAAO1vE,SACLD,IAAtByvE,EAAcxvE,GAAoB0vE,EAAQF,EAAcxvE,IAAM,MAJ9D,CAAC,GAMT,CAAC6C,EAAK0sE,EAAWzvC,EAAY0vC,IAIhC,MAAO,CACLhM,gBACAC,kBAJuB2I,EAAAA,EAAAA,GAAqB5I,GAMhD,C,8CC5BO,SAASmM,EACd/uE,EAAc+G,EAAqBpG,EAAoCJ,GAEvE,MAAM,SAAEu5D,GAAa/yD,EACrB,IAAK+yD,EACH,OAGF,MAAM1rC,GAASva,EAAAA,EAAAA,IAASimD,GAAYv5D,EAAUu5D,GAAYn5D,EAAUm5D,GAEpE,IAAI6T,GAAatvB,EAAAA,EAAAA,IAAer+C,EAAMouB,GAEtC,MAAM1vB,EAAOiC,EAAUoG,EAAQtI,QAS/B,OARIC,IACE,WAAY0vB,GAAUA,EAAOvY,OAC/B83D,EAAc,GAAE3tE,EAAK,iBAAgBg6C,EAAAA,EAAAA,GAAah6C,EAAMtB,MAC/CswE,EAAAA,EAAAA,IAAYtwE,KACrBivE,GAAe,OAAK3zB,EAAAA,EAAAA,GAAah6C,EAAMtB,OAIpCivE,CACT,C,+RCNA,MAmGA,GAAetvE,EAAAA,EAAAA,KAnGoCqB,IAG7C,IAH8C,QAClDqH,EAAO,cACP6wD,GACDl4D,EACC,MAAM,gBACJ6hD,EAAe,mBAAE0tB,EAAkB,iBAAE35D,IACnCvV,EAAAA,EAAAA,OAEE,WAAEi6D,GAAejzD,EAEjB/G,GAAOC,EAAAA,EAAAA,MACNivE,EAAeC,IAAoBlmE,EAAAA,EAAAA,OACnCmmE,EAAkBC,EAAgBC,IAAmB5sE,EAAAA,EAAAA,IAAQ,GAC9D6sE,GAAoBtrE,EAAAA,EAAAA,IAASmF,EAAAA,EAAAA,IAAoBrC,EAAS,SAC1D4iD,EAAU5iD,EAAQuB,QAAQikC,OAAQ3Y,OAAO+1B,QAEzC6lB,GAAyBjqE,EAAAA,EAAAA,IAAgB,KAC7C+P,EAAiB,CACf7E,MAAOzQ,EAAK,wBACZ+G,QAAS/G,EAAK,mBACdusC,OAAQ,CACNA,OAAQ,4BACRC,QAAS,CACPijC,OAAQ1P,EAAAA,GAAgB2P,OAG5BhjC,WAAY1sC,EAAK,SACjB,IAGE2vE,GAA2BpqE,EAAAA,EAAAA,IAAiBse,IAChDsrD,OAAiBhwE,GACjB8vE,EAAmB,CAAEprD,SACrB2rD,GAAwB,IAGpBI,GAAuBrqE,EAAAA,EAAAA,IAAgB,KAC3C4pE,OAAiBhwE,EAAU,IAGvB0wE,GAAiBtqE,EAAAA,EAAAA,IAAgB8T,UACrCi2D,IACAE,IAGA,MAAM57C,EAAQ7sB,EAAQuB,QAAQikC,OAAQ3Y,MAChCla,QAAgBkzC,EAAAA,GAAmB,cAAah5B,EAAMx0B,YAAa+E,EAAAA,GAAeC,SAClFoV,QAAas2D,MAAMp2D,GAASq2D,MAAMnc,GAAMA,EAAEp6C,SAChDy1D,EAAmB,CACjBprD,KAAM,IAAI2G,KAAK,CAAChR,GAAO,cACvBmwC,SAAS,EACTqmB,QAASp8C,EAAMq8C,YAAY58C,MAAM1mB,QAAyBxN,IAAnBwN,EAAEujE,gBAA6BA,cACtE,IAoBJ,OACEvuE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,kCAAkC0lD,SAAU,EAAGG,KAAK,SAAS1jD,QAlB7CuX,WAC3B2gD,GAAcuV,EACb5lB,EACF0lB,IAEAF,QAAuBW,MAAMP,GAAmBQ,MAAMnc,GAAMA,EAAEp6C,UAGhE+nC,EAAgB,CACd9iD,OAAQsI,EAAQtI,OAChBsjD,QAASh7C,EAAQ3H,GACjBgV,SAAUiC,EAAAA,GACVnP,OAAQ86C,EAAAA,GAAkBmuB,iBAE9B,GAKExuE,EAAAA,GAAAC,cAACI,EAAAA,EAAM,CACL4xB,MAAO7sB,EAAQuB,QAAQikC,OAAQ3Y,MAC/Bw8C,kBAAgB,EAChBC,UAAW1mB,EACXhkD,KAAK,UAEPhE,EAAAA,GAAAC,cAAA,YAAOg2D,KAEPj2D,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,yBAAyBK,EAAK2pD,EAAU,kBAAoB,oBAC5EhoD,EAAAA,GAAAC,cAAC0uE,EAAAA,EAAS,CACRzsD,KAAMqrD,EACN1jD,QAASokD,EACTtqB,SAAUqqB,IAEZhuE,EAAAA,GAAAC,cAACq7C,EAAAA,EAAa,CACZ7xB,OAAQgkD,EACR3+D,MAAOzQ,EAAK,kBACZk9C,eAAgB2yB,EAChBrkD,QAAS8jD,EACTiB,UAAW3Y,MAER,I,eCnDX,MAgMA,GAAev5D,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAwC,IAAtC,QAAE8F,EAAO,SAAEqN,GAAUnT,EAC5B,MAAM,OACJxC,EAAM,SAAEq7D,EAAQ,iBAAEC,EAAgB,QAAEzxD,GAClCvB,EAEE2O,EAASokD,GACT,cAAEQ,EAAa,aAAEE,GAAiBlyD,EAAQikC,QAAU,CAAC,EACrDikC,EAAkBzW,EAClB0W,EAAgBD,GAClBlkD,EAAAA,EAAAA,KAAkB/tB,EAAQE,EAAQ+xE,QAClCrxE,EAEEuxE,IAAYt8D,IAAWu8D,EAAAA,EAAAA,KAAuBpyE,EAAQwI,EAASqN,IAEnEk5C,UAAWsjB,EACXC,YAAaC,GACVJ,IAAa3xE,EAAAA,EAAAA,KAAeR,GAAQwyE,gBAAmB,CAAC,EAEvDryE,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAC1B4Y,EAAS3Y,KAASqW,EAAAA,EAAAA,IAAcrW,IAASgX,IAAWjX,GACpDuyE,GAAc35D,GAAU3B,GAAS5B,EAAAA,EAAAA,KAAWvV,EAAQmX,QAAUvW,EAC9D8xE,EAAa55D,EAAS3Y,OAAOS,EAC7B+xE,EAAqB3yE,EAAO4yE,cAAcx4C,WAAW,GAG3D,MAAO,CACLq4C,aACAC,aACAzW,eACAF,gBACAmW,gBACAC,YACAQ,qBACA5wB,OAVY0a,EAAAA,EAAAA,KAAuBz8D,EAAQwI,GAW3C8zB,uBAAuBC,EAAAA,EAAAA,KAA4Bv8B,MAC/CmyE,GAAa,CACfE,iBACAE,oBAEH,GAxCexyE,EA9L6BoB,IAuB3C,IAvB4C,QAChDqH,EAAO,WACPi4C,EAAU,gBACVoyB,EAAkB,EAAC,YACnBC,EAAW,aACXC,EAAY,WACZN,EAAU,WACVC,EAAU,cACV3W,EAAa,cACbmW,EAAa,aACbjW,EAAY,UACZkW,EAAS,eACTE,EAAc,iBACdE,EAAgB,mBAChBI,EAAkB,cAClBK,EAAa,MACbjxB,EAAK,qBACLkxB,EAAoB,sBACpB32C,EAAqB,8BACrB42C,EAA6B,8BAC7Bh0B,EAA6B,8BAC7BC,EAA6B,2BAC7Bg0B,GACDhyE,EACC,MAAM,iBAAEqsD,EAAgB,gBAAE4lB,IAAoB5xE,EAAAA,EAAAA,MAExCC,GAAOC,EAAAA,EAAAA,KAGP0G,GAAMrE,EAAAA,EAAAA,IAAuB,OAEnCwnE,EAAAA,EAAAA,IAAenjE,EAAK8qE,IACpBpE,EAAAA,EAAAA,GAAiBtmE,EAAQtI,OAAQsI,EAAQgzD,iBAAkB0W,IAC3DmB,EAAAA,EAAAA,GAAgBjrE,EAAKI,EAAQtI,OAAQiyE,EAAWE,EAAgBE,EAAkBO,IAElFlwE,EAAAA,EAAAA,KAAU,KACR,GAAK4F,EAAQuvD,SAEb,MAAO,KACLob,IAA6B,CAAEG,0BAA2B,CAAC9qE,EAAQ3H,IAAK0yE,WAAW,GAAO,CAC3F,GACA,CAACJ,EAA4B3qE,EAAQuvD,SAAUvvD,EAAQ3H,KAE1D,MAAM2yE,EAAwBX,GAAmB,GAC1CrhD,EAASiiD,IAAatvE,EAAAA,EAAAA,GAAQqvE,GAC/BE,EAAS5yE,QAAQ0H,EAAQuB,QAAQikC,QAAQnqC,KAAKimC,WAAW,eACzD6pC,EAAqD,wBAAjCnrE,EAAQuB,QAAQikC,QAAQ1yB,MAAkC9S,EAAQuB,QAAQikC,OAAQ3Y,OAE5GzyB,EAAAA,EAAAA,KAAU,KACJ4wE,GAIJrsE,WAAWssE,EAvDU,GAuDCZ,EAAmC,GACxD,CAACA,EAAiBY,EAAWD,IAEhC,MAAMnzB,GAAY/C,EAAAA,EAAAA,IAAkBl1C,EAAK+2C,GAEnCy0B,GAAwB7vE,EAAAA,EAAAA,IAAO,MACnC,MAAM60D,EAAWqa,GAAsB1uE,SAAWiE,EAAQ3H,IAAMoyE,EAAqB1uE,QACrF,OAAOmvE,IAAWlrE,EAAQizD,YAAc7C,CACzC,EAHoC,KAKrCh2D,EAAAA,EAAAA,KAAU,KACJy9C,GAAauzB,EAAsBrvE,UACrCqvE,EAAsBrvE,SAAU,EAChC6uE,IACF,GACC,CAAC/yB,EAAW+yB,IAEf,MAAM,qBAAErwE,IAAyBC,EAAAA,EAAAA,GAAkBwuB,OAAS5wB,EAAW4yE,GAAuB,GAGxFxxE,GAAYC,EAAAA,EAAAA,MAAYC,MAAMC,KAC9B0xE,GAAc9xE,EAAAA,EAAAA,KAAQ,IACnBg6D,EACHA,EAAct5D,KAAK0U,GAAWnV,IAAYmV,KAASxU,OAAO7B,cAC1DF,GACH,CAACm7D,EAAe/5D,IAEbq3D,GAAgBz3D,EAAAA,EAAAA,KAAY,KACzButE,EAAAA,EAAAA,GACL1tE,EACA+G,EACAiqE,EACAC,EACAmB,EACA3B,EACAjW,EACAla,EACA,CAAEtB,cACFvB,EACAC,IAED,CACDsB,EAAYh/C,EAAM+G,EAAS02C,EAA+BC,EAC1DuzB,EAAYD,EAAYxW,EAAciW,EAAe2B,EAAa9xB,KAG9D,kBACJ9vB,GAAiB,oBAAEC,GAAmB,wBACtC8c,GAAuB,kBAAE7c,GAAiB,uBAC1CC,GAAsB,sBAAEC,KACtBC,EAAAA,EAAAA,GAAuBlqB,GACrB0rE,QAA6ClzE,IAAxBsxB,GAkB3B,GADyB8gD,GAAkD,0BAAjCxqE,EAAQuB,QAAQikC,QAAQnqC,KAEhE,OAAOT,EAAAA,GAAAC,cAAA,QAAM+E,IAAKA,IAGpB,GAAIq4C,EACF,OAAOr9C,EAAAA,GAAAC,cAAA,QAAM+E,IAAKA,EAAKhH,UAAU,2BAA2Bi4D,KAqB9D,MAAMj4D,IAAYkC,EAAAA,EAAAA,GAChB,kCACA6uE,IAAcI,GAAoB,WACjCmB,GAAUC,IAAsB,kBACjCG,IAAsB,gBACtBf,GAAgB,gBACfW,IAAWC,GAAqB,aACjC5wE,GAGF,OACEK,EAAAA,GAAAC,cAAA,OACE+E,IAAKA,EACLvH,IAAIkkD,EAAAA,EAAAA,IAAiBv8C,EAAQ3H,IAC7BO,UAAWA,GACX,kBAAiBoH,EAAQ3H,GACzB,iBAAgB2H,EAAQuvD,eAAYn3D,EACpCm5C,YA3DqB3oC,KACvB2iE,EAAAA,EAAAA,GAAwB3iE,GACxB49B,GAAwB59B,EAAE,EA0DxB+hB,cAAehB,KAEbwhD,GAAqBvwE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,0BAA0Bi4D,KAChEqa,GArCDtwE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,sBAAsB0lD,SAAU,EAAGG,KAAK,SAAS1jD,QArBtCywE,KAC7BxmB,EAAiB,CACfkmB,QAAQ,EACRhlB,WAAY+jB,GAAY5xE,GACxBozE,SAAUlY,IAAgB,GAC1BmY,aAAc1rE,EAAQuB,QAAQikC,QAAQmmC,QAAU,GAChD,GAgBE/wE,EAAAA,GAAAC,cAACq+D,EAAAA,EAAuB,CACtBh+D,IAAK8E,EAAQ3H,GACboE,QAAS0tE,EACTlb,KAAMn7B,EACNo7B,QAAM,EACN0c,gBAAc,IAEhBhxE,EAAAA,GAAAC,cAAA,cAAS5B,EAAK,2BACd2B,EAAAA,GAAAC,cAAA,YAAO5B,EAAK,4BAA6BA,EAAK,SAAU+G,EAAQuB,QAAQikC,QAAQmmC,OAAQ,OAExF/wE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,yBAAyBK,EAAK,2BA2B/CkyE,GACCvwE,EAAAA,GAAAC,cAACgxE,EAA4B,CAC3B7rE,QAASA,EACT6wD,cAAeA,IAGlBnnC,IACC9uB,EAAAA,GAAAC,cAACixE,EAAAA,EAAoB,CACnBznD,OAAQoF,GACR3S,OAAQ4S,GACR1pB,QAASA,EACTsmB,gBAAgB,SAChB7B,QAASmF,GACTlF,oBAAqBmF,KAGrB,I,6NCzPV,MAQA,EARgDrtB,IAC9C,MAAM,OAAE6nB,GAAW7nB,EACbuvE,GAAsBhrD,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,uBAAwBoD,GAGnF,OAAO0nD,EAAsBnxE,EAAAA,GAAAC,cAACkxE,EAAwBvvE,QAAYpE,CAAS,EC8a7E,GAAed,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAMC,KAEW,IAFT,OACPC,EAAM,SAAE2V,EAAQ,gBAAEiZ,EAAe,SAAExkB,GACpCrK,EACC,MAAME,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAC1Bu5B,EAAY34B,QAAQX,IAAQqW,EAAAA,EAAAA,IAAcrW,IAC1Cu2B,GAAW89C,EAAAA,EAAAA,KAAmBx0E,GAC9By0E,GAAsBC,EAAAA,EAAAA,KAA0B10E,GAChD22C,GAAYrhC,EAAAA,EAAAA,IAASpV,IACrB,eAAEy0E,GAAmB30E,EAAO82B,SAASC,MAE3C,IAAK52B,GAAQA,EAAKmY,eAAgBuhB,EAAAA,EAAAA,KAAqB75B,GACrD,MAAO,CACL40E,QAAQ,EACRl+C,WACA+9C,sBACAE,kBAIJ,MAAMtoD,GAAM4J,EAAAA,EAAAA,KAAUj2B,EAAQE,GACxBm2B,EAAgBsgB,OAAiD/1C,GAArCqV,EAAAA,EAAAA,KAAmBjW,EAAQE,GACvD8sD,EAAerW,GAAYvgC,EAAAA,EAAAA,KAAmBpW,EAAQE,QAAUU,EAChEi0E,EAAWx+C,GAAgB22B,EAC3Bh9B,GAAiBC,EAAAA,EAAAA,KAAqBjwB,EAAQE,GAC9C40E,EAAmC,WAApBhmD,GAAgCjZ,IAAaiC,EAAAA,GAC5Di9D,EAAyC,WAApBjmD,GAAgCjZ,IAAaiC,EAAAA,GAClE4hB,GAAqBC,EAAAA,EAAAA,KAAyB35B,EAAQsK,GAEtD0qE,IAAgBr+B,IAAYs+B,EAAAA,EAAAA,KAAoBj1E,EAAQE,GACxDg1E,EAAgBp0E,QAAQurB,GAAO2oD,GAC/BG,GAAeD,GAAiBp0E,SAAQs0E,EAAAA,EAAAA,KAA0Bp1E,EAAQE,IAC1Em1E,EAAaL,IAAkB3oD,EAC/BipD,EAAex0E,SAClBg0E,GAAgB30E,EAAKqV,WAAaikB,IAAagH,EAAAA,EAAAA,IAAiBtgC,KAAUA,EAAKo1E,aAE5EC,EAAYV,GAAgBC,EAC5BU,EAAUC,EAAAA,KAAuBpgE,EAAAA,EAAAA,IAASnV,EAAKU,MAAQmvB,IAAmB3D,EAC1EspD,EAAUb,IAAiB9kD,IAAmBslD,EAC9CM,EAAWd,IAAiBQ,EAC5BO,EAAoBH,EAAAA,IAAuBZ,GAAgB30E,EAAKe,aAChE40E,EAAqBJ,EAAAA,IAAuBZ,IAAiB30E,EAAKe,eAClEf,EAAKs3B,aAAas+C,YAAe51E,EAAK27C,YAAab,EAAAA,EAAAA,IAAiB96C,IACpE61E,EAAoBlB,GAAgBz+C,GAAc2/C,kBAClDC,EAAsBnB,EAAez+C,GAAc6/C,qBAAkBt1E,EACrEu1E,EAAmBr1E,QAAQX,GAAMo1E,aAAep1E,EAAKi2E,cACrDC,EAAwBv1E,QAAQX,GAAMo1E,aAAep1E,EAAKm2E,eAC1DC,IAAelyE,EAAAA,EAAAA,KAA0BrE,GAEzCw2E,EAAgB11E,SAAQ21E,EAAAA,EAAAA,KAAuCz2E,EAAQE,IAG7E,MAAO,CACL00E,QAAQ,EACRn7C,YACAC,qBACAy7C,cACAD,gBACAI,eACAE,YACAC,UACAE,UACAK,oBACAJ,WACAC,oBACAC,qBACAG,sBACAE,mBACAE,wBACAE,cACAG,cApBmBC,EAAAA,EAAAA,KAAuB32E,EAAQE,KAAY20E,GAAU+B,sBAqBxEJ,gBACA/B,sBACA/9C,WACAi+C,iBACAkC,qBAAsB12E,EAAK22E,iBAC3BzB,aACD,GA7Eet1E,EAzW6BoB,IA+B3C,IA/B4C,OAChDjB,EAAM,SACN2V,EAAQ,OACR++D,EAAM,SACNtqE,EAAQ,UACRmvB,EAAS,YACT07C,EAAW,cACXD,EAAa,WACbG,EAAU,aACVC,EAAY,UACZE,EAAS,QACTC,EAAO,QACPE,EAAO,kBACPK,EAAiB,SACjBJ,EAAQ,kBACRC,EAAiB,mBACjBC,EAAkB,oBAClBG,EAAmB,mBACnBv8C,EAAkB,WAClB6yC,EAAU,iBACVD,EAAgB,iBAChB6J,EAAgB,sBAChBE,EAAqB,YACrBE,EAAW,aACXG,EAAY,cACZF,EAAa,oBACb/B,EAAmB,SACnB/9C,EAAQ,qBACRmgD,EAAoB,eACpBlC,EAAc,cACd5J,GACD5pE,EACC,MAAM,YACJ41E,EAAW,eACXC,EAAc,oBACdC,EAAmB,WACnBC,EAAU,4BACVC,EAA2B,4BAC3BC,EAA2B,iBAC3BrgE,EAAgB,SAChB2mB,EAAQ,uBACR25C,GAAsB,uBACtBC,GAAsB,sBACtBC,GAAqB,iBACrB36B,GAAgB,YAChB46B,KACEh2E,EAAAA,EAAAA,MAEEi2E,IAAgB1zE,EAAAA,EAAAA,IAA0B,MAC1CtC,IAAOC,EAAAA,EAAAA,MACN2pB,GAAYqsD,KAAiBhtE,EAAAA,EAAAA,KAAS,IACtCitE,GAAcC,KAAmBltE,EAAAA,EAAAA,SAAsC9J,GAExEi3E,IAAuB7wE,EAAAA,EAAAA,IAAgB,KAC3C0wE,IAAc,GACd,MAAMxyB,EAAOuyB,GAAclzE,QAAS+M,wBACpCsmE,GAAgB,CAAEhoE,EAAGs1C,EAAK4yB,MAAOjoE,EAAGq1C,EAAK6yB,QAAS,IAG9CC,IAAwBhxE,EAAAA,EAAAA,IAAgB,KAC5C0wE,IAAc,EAAM,IAGhBO,IAAuBjxE,EAAAA,EAAAA,IAAgB,KAC3C4wE,QAAgBh3E,EAAU,IAGtBs3E,IAAuBlxE,EAAAA,EAAAA,IAAgB,KAC3C+vE,EAAY,CAAE72E,WACVm2E,GACFt/D,EAAiB,CACfvO,QAAqB/G,GAAZg4B,EAAiB,sCAA8C,sCAE5E,IAGI0+C,IAAiBnxE,EAAAA,EAAAA,IAAgB,KACrCgwE,EAAe,CAAEnsC,QAAS,UAAW,IAGjCutC,IAAmBpxE,EAAAA,EAAAA,IAAgB,KACvCkwE,EAAW,CAAEh3E,UAAS,IAGlBm4E,IAAgBrxE,EAAAA,EAAAA,IAAgB,KACpCwwE,GAAY,CAAErgE,OAAQjX,GAAS,IAG3Bo4E,IAAuBtxE,EAAAA,EAAAA,IAAgB,KAEzCqwE,GADEb,EACqB,CAAEt2E,SAAQq4E,oBAAgB33E,GAI5B,CAAEV,SAAQq4E,eAAgB9D,GAAsB,IAGnE+D,IAA0BxxE,EAAAA,EAAAA,IAAgB,KAC9CowE,EAA4B,CAAElG,OAAQuH,EAAAA,GAAkBC,cAAe,IAGnEC,IAAoB3xE,EAAAA,EAAAA,IAAgB,KACpCulE,EACFxB,OAIFkM,IAEI3sE,EAEkBkQ,SAASkY,cAAgC,uBACjDpY,QACHi8D,GAET3tD,EAAAA,EAAAA,KAAe,MACbyZ,EAAAA,EAAAA,IAAoBu2C,EAAsB,IAG5CzxE,WAAWyxE,EAzHa,KA0H1B,IAGIC,IAAwB7xE,EAAAA,EAAAA,IAAgB,KAC5C02B,EAAS,CAAE78B,GAAIX,EAAQ2V,SAAUiC,EAAAA,IAAiB,IAO9CghE,IAA0B9xE,EAAAA,EAAAA,IAAiBoK,IAC1CokE,GAAczQ,EAAAA,KAAU3zD,EAAE2nE,WAI/B3nE,EAAEuT,iBACFg0D,KAAmB,IAGfK,IAAsBhyE,EAAAA,EAAAA,IAAgB,CAACiyE,EAAiBC,KAC5D,MACMC,EAAkB,oBADLD,EAAShgE,MAAM,KAAK,GACekgE,gBAChD7zD,EAAO9jB,GAAK03E,GAClB,GAAI5zD,IAAS4zD,EACX,OAAO13E,GAAKw3E,EAAS1zD,GAGvB,MACM8zD,EADkB,IAAIC,KAAKC,aAAa,CAAC7iD,GAAW,CAAEpb,KAAM,aAC3Bk+D,GAAGN,GAC1C,OAAOz3E,GAAM,GAAEw3E,SAAgBI,EAAe,IAG1CjQ,IAAarnE,EAAAA,EAAAA,KAAQ,IACrBy0E,EAAsB/0E,GAAK,sBAExBu3E,GAAoB,oBAAqBvE,IAC/C,CAACA,EAAqBuE,GAAqBxC,EAAe/0E,KAEvDg4E,IAAqB13E,EAAAA,EAAAA,KAAQ,KACjC,GAAK80E,EAEL,OAAOmC,GAAoB,yBAA0BnC,EAAqB,GACzE,CAACmC,GAAqBnC,IAEnB6C,IAAa1yE,EAAAA,EAAAA,IAAgB,KACjCswE,GAAuB,CAAEp3E,SAAQknC,WAAW,IAC5CiwC,GAAuB,CAAEn3E,SAAQq4E,oBAAgB33E,GAAY,IAGzD+4E,IAAuB3yE,EAAAA,EAAAA,IAAgB,KAC3CuwE,GAAsB,CAAEr3E,UAAS,IAG7B05E,IAAuB5yE,EAAAA,EAAAA,IAAgB,KACtC6vE,IAELj6B,GAAiB,CACf+3B,eAAgB,IAAIA,EAAgBkC,KAEtCQ,GAAuB,CAAEn3E,SAAQq4E,oBAAgB33E,IAEjDmW,EAAiB,CAAEvO,QAASwwE,GAAoB,wBAAyBnC,KAAwB,KAGnGhS,EAAAA,EAAAA,GAAW,CACT,QAASiU,KAGX,MAAMe,IAAkE93E,EAAAA,EAAAA,KAAQ,IACvEW,IAAA,IAAC,UAAEo3E,EAAS,OAAEjtD,GAAQnqB,EAAA,OAC3BU,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLC,OAAK,EACL0P,OAAQomB,EACRnmB,MAAM,cACNnM,KAAK,UACLhG,UAAWyrB,EAAS,SAAW,GAC/BtpB,QAASu2E,EACTrmE,UAAWhS,GAAK,qBAEhB2B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAAqB,mBAC3B,GAEV,CAACs4B,EAAoBj4B,KAExB,OACE2B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,kBACXmrE,GAAcmK,GACdtzE,EAAAA,GAAAC,cAAC02E,EAAAA,EAAY,CACX34E,UAAU,2CACV44E,QAASH,GACT9sD,UAAU,SAEV3pB,EAAAA,GAAAC,cAACmqB,EAAAA,EAAQ,CAAC7T,KAAK,WAAWpW,QAAS+0E,IAChClP,IAEHhmE,EAAAA,GAAAC,cAACmqB,EAAAA,EAAQ,CAAC7T,KAAK,UAAUpW,QAASo2E,IAC/Bl4E,GAAK,2BAER2B,EAAAA,GAAAC,cAACmwB,EAAAA,EAAa,MACbqjD,GACIzzE,EAAAA,GAAAC,cAACmqB,EAAAA,EAAQ,CAAC7T,KAAK,YAAYpW,QAASq2E,IAAuBH,IAChEr2E,EAAAA,GAAAC,cAACmqB,EAAAA,EAAQ,CAAC7T,KAAK,eAAepW,QAASm2E,IAAaj4E,GAAK,WAG3D6I,GACAlH,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACGq4D,IAAqB+J,IAA0Bf,GAAgBa,IAC9D/yE,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLyD,KAAK,OACLkM,QAAM,EACNquD,OAAK,EACLp+D,QAAS20E,IAERz2E,GAAKg4B,EAAY,qBAAuB,qBAG5C6yC,GAAoB+J,GACnBjzE,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLyD,KAAK,OACLkM,QAAM,EACNquD,OAAK,EACLp+D,QAAS20E,IAERz2E,GAAK,uBAGT6qE,GAAoB6I,GACnB/xE,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLyD,KAAK,OACLkM,QAAM,EACNquD,OAAK,EACLp+D,QAAS40E,IAER12E,GAAK,aAGT6qE,GAAoB4I,GACnB9xE,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLyD,KAAK,OACLkM,QAAM,EACNquD,OAAK,EACLp+D,QAAS60E,IAER32E,GAAK,eAGT6qE,GAAoB+I,GACnBjyE,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLyD,KAAK,OACLkM,QAAM,EACNquD,OAAK,EACLp+D,QAAS80E,IAER52E,GAAK,YAGT+zE,GACCpyE,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLC,OAAK,EACL0P,OAAQomB,EACRnmB,MAAM,cACNnM,KAAK,UACL7D,QAASo1E,GACTllE,UAAWhS,GAAK,mCAEhB2B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,mBAAmB,oBAGnCq0E,GACCryE,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLC,OAAK,EACL2P,MAAM,cACNnM,KAAK,UAEL7D,QAxKZ,WACE4zE,EAA4B,CAAEhgE,OAAQjX,GACxC,EAuKYuT,UAAU,QAEVrQ,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,kBAAkB,sBAKrCmrE,GAAczrE,QAAQm1E,IACtB7yE,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLC,OAAK,EACLxC,UAAU,eACVkS,OAAQomB,EACRnmB,MAAM,cACNnM,KAAK,UACL7D,QAASi1E,GACT/kE,UAAuBhS,GAAZg4B,EAAiB,oBAA4B,mBAExDr2B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,iBAAiB,mBAC9BgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,SAAS60E,IAG5B7yE,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLyE,IAAKqvE,GACLr2E,UAAWiqB,GAAa,SAAW,GACnCznB,OAAK,EACL0P,QAAShJ,EACTlD,KAAK,UACLmM,MAAM,cACNka,SAAUmnD,EACVnhE,UAAU,eACVlQ,QAASs0E,IAETz0E,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,iBAAiB,oBAE/Bu2E,IACCv0E,EAAAA,GAAAC,cAACkxE,EAAmB,CAClBr0E,OAAQA,EACR2V,SAAUA,EACVgX,OAAQxB,GACR/L,OAAQq4D,GACRsC,iBAAkB3vE,IAAagiE,EAC/B7yC,UAAWA,EACX07C,YAAaA,EACbG,aAAcA,EACdE,UAAWA,EACXC,QAASA,EACTE,QAASA,EACTK,kBAAmBA,EACnBJ,SAAUA,EACVC,kBAAmBA,EACnBC,mBAAoBA,EACpBG,oBAAqBA,EACrBiE,oBAAqB1B,GACrB2B,iBAAkB5N,EAClB6N,mBAAoBlC,GACpBmC,cAAe1B,GACf2B,kBAAmBzB,GACnB5rD,QAAS+qD,GACT9qD,oBAAqB+qD,KAGrB,KAqFV,SAASW,IACP,MAAM2B,EAAc//D,SAASkY,cAAgC,mCAC7D6nD,GAAajgE,OACf,C,wKC/gBA,QAAwD,uBCsBlDkgE,EAAwB,SAkC9B,GAAe16E,EAAAA,EAAAA,KAhCqBqB,IAE9B,IAF+B,KACnCwY,EAAI,MAAEpR,GACPpH,EACC,MAAM,cAAEs5E,IAAkBlwE,EAAAA,EAAAA,MACpBQ,GAAYrF,EAAAA,EAAAA,IAASg1E,EAAAA,EAAAA,IAAqB/gE,IAAO,EAAO/T,EAAAA,GAAe+0E,MAEvEC,GAAU74E,EAAAA,EAAAA,KAAQ,KACtB,IAAKgJ,EAAW,MAAO,GACvB,MAAMwI,EAAkB,SAAVhL,EAZO,qBACC,qBAahBsyE,EAA8B9vE,EAAUsR,QAAQm+D,EAAuBjnE,GACvEunE,GAAM,IAAI57D,WAAYC,gBAAgB07D,EAA6B,iBAMzE,OALAC,EAAI13D,iBAAiB,QAAQ7T,SAASglD,IACpCA,EAAKltD,MAAMmN,OAASjB,EACpBghD,EAAKltD,MAAM0zE,YAnBe,OAmBsB,IAG1C,2BAA0BD,EAAI91D,gBAAgBg2D,WAAW,GAChE,CAACjwE,EAAWxC,IAEf,OACEnF,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GD7CK,uBC6CuB,QAASm3E,GAAiBjzE,IAClEpE,EAAAA,GAAAC,cAAA,OACEkE,IAAKqzE,EACL12D,IAAI,GACJ9iB,WAAWkC,EAAAA,EAAAA,GDjDoE,wBCiDtCm3E,GAAiBjzE,GAC1DC,WAAW,IAEX,IC6DR,GAAe3H,EAAAA,EAAAA,KAvFqBqB,IAQ9B,IAR+B,IACnCkrB,EAAG,MACH9jB,EAAK,OACLrI,EAAM,SACN2V,EAAQ,aACRolE,EAAY,aACZttD,EAAY,aACZC,GACDzsB,EACC,MAAM,cAAE48B,EAAa,gBAAEm9C,IAAoB15E,EAAAA,EAAAA,MAErCC,GAAOC,EAAAA,EAAAA,KAEPiY,GAAO5X,EAAAA,EAAAA,KAAQ,IACZsqB,EAAI8uD,MAAMrmD,MAAKpyB,IAAA,IAAC,KAAE6iB,GAAM7iB,EAAA,MAAc,mBAAT6iB,CAAyB,KAAG/K,UAC/D,CAAC6R,EAAI8uD,SAED9vD,EAAY+vD,EAAUC,IAAal3E,EAAAA,EAAAA,MACnCwzE,EAAcC,IAAmBltE,EAAAA,EAAAA,SAAsC9J,GAExEuxB,GAAoBnrB,EAAAA,EAAAA,IAAiBoK,IACzCA,EAAEuT,iBACF,MAAMugC,EAAO9zC,EAAE+zC,cAAc7zC,wBAC7BsmE,EAAgB,CAAEhoE,EAAGs1C,EAAK4yB,MAAOjoE,EAAGq1C,EAAK6yB,SACzCpqD,IACAytD,GAAU,IAGN/8B,GAAcr3C,EAAAA,EAAAA,IAAgB,KAEhC+2B,EADEk9C,EACY,CACZ5uD,MACAivD,gBAAgB,GAGJ,CACZjvD,MACAnsB,OAAQA,EACR2V,YAEJ,IAGI0lE,GAAkBv0E,EAAAA,EAAAA,IAAgB,KACtCq0E,IACAztD,GAAc,IAGV4tD,GAA0Bx0E,EAAAA,EAAAA,IAAgB,KAC9C4wE,OAAgBh3E,EAAU,IAGtB66E,GAAkBz0E,EAAAA,EAAAA,IAAgB,KACtCk0E,EAAgB,CACdzyC,MAAOpc,EAAIxrB,GACXumC,WAAW,GACX,IAGJ,OACEhkC,EAAAA,GAAAC,cAACmqB,EAAAA,EAAQ,CACP9pB,IAAK2oB,EAAIxrB,GACT0yB,WAAY5Z,GAAQvW,EAAAA,GAAAC,cAACq4E,EAAa,CAAC/hE,KAAMA,EAAMpR,MAAOA,IACtDoR,KAAOA,OAAgB/Y,EAAT,OACd2C,QAAS86C,EACTlrB,cAAehB,GAEd9F,EAAIsvD,UACJhE,GACCv0E,EAAAA,GAAAC,cAACupB,EAAAA,EAAI,CACHC,OAAQxB,EACR0B,UAAU,QACV1lB,MAAQ,SAAQswE,EAAa/nE,YAAY+nE,EAAa9nE,OACtDzO,UAAU,0BACV0rB,WAAS,EACT8uD,YAAU,EACV3uD,QAASsuD,EACTruD,oBAAqBsuD,GAErBp4E,EAAAA,GAAAC,cAACmqB,EAAAA,EAAQ,CAAC7T,KAAK,OAAOgxD,aAAW,EAACpnE,QAASk4E,GAAkBh6E,EAAK,sBAI7D,G,wECrGf,MAQA,EAR+CuD,IAC7C,MAAM,OAAE6nB,GAAW7nB,EACb40C,GAAqBrwB,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,sBAAuBoD,GAGjF,OAAO+sB,EAAqBx2C,EAAAA,GAAAC,cAACu2C,EAAuB50C,QAAYpE,CAAS,C,wECL3E,MAQA,EAR2CoE,IACzC,MAAM,OAAE6nB,GAAW7nB,EACb62E,GAAatyD,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,kBAAmBoD,GAGrE,OAAOgvD,EAAaz4E,EAAAA,GAAAC,cAACw4E,EAAe72E,QAAYpE,CAAS,C,kJCC3D,MAmCA,GAAed,EAAAA,EAAAA,KAnCkBqB,IAA0C,IAAzC,QAAE26E,EAAO,UAAEC,EAAS,aAAE1xD,GAAclpB,EACpE,MAAO66E,EAAWC,EAAaC,IAAiB/3E,EAAAA,EAAAA,KAY1C/C,GAAYkC,EAAAA,EAAAA,GAChB,aACA04E,GAAa,WAGf,OACE54E,EAAAA,GAAAC,cAAA,OACEjC,UAAWA,EACX+6E,OAAQ9xD,EACRkvC,YAAa0iB,EACb5T,YApBqBj3D,IACvB,MAAQgrE,cAAeC,GAAajrE,EAEhCirE,GACFjrE,EAAEM,kBAGJwqE,GAAe,EAcb,oBAEA94E,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,kBACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAY,cAAY06E,EAAU,QAAU,cACjD14E,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,SAAQ,iCACrB26E,GAAa34E,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,eAAe06E,EAAU,iBAAmB,wBAExE,ICvBH,IAAK3lC,EAAa,SAAbA,GAAa,OAAbA,EAAa,YAAbA,EAAa,oBAAbA,EAAa,uBAAbA,CAAa,MAMzB,MAoFA,GAAer2C,EAAAA,EAAAA,KAlFgBqB,IAEzB,IAF0B,OAC9B0rB,EAAM,UAAEwpB,EAAS,OAAEE,EAAM,aAAElsB,GAC5BlpB,EAEC,MAAMm7E,GAAiBv4E,EAAAA,EAAAA,IAAe,MAChCw4E,GAAgBx9C,EAAAA,EAAAA,GAAYsX,IAC5B,aAAEvzC,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAAkB6pB,IAEjEjqB,EAAAA,EAAAA,KAAU,IAAOiqB,GAAS+E,EAAAA,EAAAA,GAAsB2kB,QAAU31C,GAAY,CAACisB,EAAQ0pB,IAE/E,MAAMimC,GAAkBx1E,EAAAA,EAAAA,IAAgB8T,UACtC,MAAQ2hE,aAAcC,GAAOtrE,EAC7B,IAAIsT,EAAgB,GAEpB,KAAIg4D,EAAGh4D,OAASg4D,EAAGh4D,MAAM/f,OAAS,IAAO+3E,EAAG/7D,OAAU+7D,EAAG/7D,MAAMhc,QAExD,GAAI+3E,EAAG/7D,OAAS+7D,EAAG/7D,MAAMhc,OAAS,EAAG,CAC1C,MAAMg4E,QAAoB/3D,EAAAA,EAAAA,GAA8B83D,EAAG/7D,OACvDg8D,GAAah4E,SACf+f,EAAQA,EAAMc,OAAOm3D,GAEzB,OANEj4D,EAAQA,EAAMc,OAAO5Y,MAAMgW,KAAK85D,EAAGh4D,QAQrC6xB,IACAlsB,EAAa3F,GAAO2xB,QAAoBz1C,EAAU,IAG9Cg8E,GAAuB51E,EAAAA,EAAAA,IAAiBoK,IAC5C,MAAQqrE,aAAcC,GAAOtrE,EAEzBsrE,EAAGh4D,OAASg4D,EAAGh4D,MAAM/f,OAAS,IAChC4xC,IACAlsB,EAAazd,MAAMgW,KAAK85D,EAAGh4D,QAAQ,GACrC,IAGIuhD,GAAkBj/D,EAAAA,EAAAA,IAAiBoK,IACvCA,EAAEM,kBAEF,MAAQ+Z,OAAQoxD,EAAYT,cAAeC,GAAajrE,EAGnDyrE,EAA8B3vE,QAAQ,4BAA8BmvE,IACvEC,EAAe/3E,QAAUsD,OAAOV,YAAW,KACzCovC,GAAQ,GA9Cc,KAgD1B,IASF,IAAKzzC,EACH,OAGF,MAAMg6E,EAAoBzmC,GAAakmC,EAEjCn7E,GAAYkC,EAAAA,EAAAA,GAChB,WACAP,GAGF,OACEK,EAAAA,GAAAC,cAAC05E,EAAAA,EAAM,CAACtnC,YAAY,0BAClBryC,EAAAA,GAAAC,cAAA,OACEjC,UAAWA,EACXinE,YAAapC,EACb+W,WAtBiBC,KACjBX,EAAe/3E,SACjBsD,OAAOq1E,aAAaZ,EAAe/3E,QACrC,EAoBI43E,OAAQ5lC,EACRhzC,QAASgzC,GAETnzC,EAAAA,GAAAC,cAAC85E,EAAU,CAAC9yD,aAAcmyD,EAAiBT,WAAYe,IACtDA,GAAqB15E,EAAAA,GAAAC,cAAC85E,EAAU,CAAC9yD,aAAcuyD,EAAsBd,SAAO,KAExE,G,wECpGb,MAQA,EARyC92E,IACvC,MAAM,OAAE6nB,GAAW7nB,EACb60C,GAAetwB,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,gBAAiBoD,GAGrE,OAAOgtB,EAAez2C,EAAAA,GAAAC,cAACw2C,EAAiB70C,QAAYpE,CAAS,C,4rBCJhD,MAAMw8E,EAKnBC,WAAAA,CACEC,EACQ5V,EACAxsD,GACR,KAFQwsD,UAAAA,EAAsB,KACtBxsD,QAAAA,EAA6BqiE,EAAA,qBAAAA,EAAA,kBALnB,GAOlBC,KAAKtzE,MAAQsQ,SAASnX,cAAc,SACpCm6E,KAAKtzE,MAAM3C,IAAM+1E,EACjBE,KAAKtzE,MAAMoiD,yBAA0B,EACrCkxB,KAAKtzE,MAAMmiD,OAAQ,EACfnxC,EAAQ7T,OACVm2E,KAAKtzE,MAAM8Z,aAAa,QAAS9I,EAAQ7T,OAE3Cm2E,KAAKtzE,MAAM7C,MAAM8nC,SAAW,WAC5BquC,KAAKtzE,MAAMuzE,OAEND,KAAKtiE,QAAQw8C,SAChB8lB,KAAKtzE,MAAMqiD,MAAO,IAGpBxmB,EAAAA,EAAAA,KAAgB,KACdy3C,KAAK9V,UAAU/sD,YAAY6iE,KAAKtzE,OAEhCszE,KAAKE,4BAA4B,GAErC,CAEOjmB,IAAAA,IACD+lB,KAAK9xE,WAAc8xE,KAAKtzE,QAC5BszE,KAAKE,6BACDF,KAAKtzE,MAAMyzE,SACbC,EAAAA,EAAAA,GAASJ,KAAKtzE,OAEhBszE,KAAK9xE,WAAY,EACnB,CAEO2d,KAAAA,GACAm0D,KAAK9xE,WAAc8xE,KAAKtzE,QACxBszE,KAAKtzE,MAAMyzE,QACdH,KAAKtzE,MAAMmf,QAEbm0D,KAAK9xE,WAAY,EACnB,CAEOmyE,OAAAA,GACLL,KAAKn0D,QACLm0D,KAAKtzE,OAAO4Z,SACZ05D,KAAKtzE,WAAQtJ,CACf,CAEOk9E,cAAAA,CAAe3uC,GACpBquC,KAAKtiE,QAAQi0B,SAAWA,EACxBquC,KAAKE,4BACP,CAEQA,0BAAAA,GACN,MAAM,KAAEt2E,EAAM+nC,UAAU,EAAEv/B,EAAC,EAAEC,IAAQ2tE,KAAKtiE,SAC1C0N,EAAAA,EAAAA,KAAe,KACb,IAAK40D,KAAKtzE,MAAO,OACjB,MAAMA,EAAQszE,KAAKtzE,OACb,MAAEgF,EAAK,OAAEC,GAAWquE,KAAK9V,UAAUp2D,yBACzCy0B,EAAAA,EAAAA,KAAgB,KACd77B,EAAM7C,MAAMgK,KAAQ,GAAExE,KAAKjJ,MAAMgM,EAAIV,OACrChF,EAAM7C,MAAM4rC,IAAO,GAAEpmC,KAAKjJ,MAAMiM,EAAIV,OACpCjF,EAAM7C,MAAM6H,MAAS,GAAE9H,MACvB8C,EAAM7C,MAAM8H,OAAU,GAAE/H,KAAQ,GAChC,GAEN,E,+GCtDF,MAAM22E,EAAO,KAAOv8B,EAAAA,G,yBCSpB,MAKMw8B,EAAiB,iBA6CjBC,EAA8B,IAG9BC,EAAc,CAClB,MAAO,SAAU,QAAS,SAAU,WAAY,OAAQ,MAAO,OAAQ,YAAa,UAAW,UAAW,SAmhB5G,GAAep+E,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAiD,IAA/C,OAAExC,EAAM,SAAE2V,GAAoBnT,EACrC,MAAM,oBAAEy7E,GAAwBn+E,EAAO82B,SAASC,MAEhD,MAAO,CACLonD,sBACA7uD,aAAcpvB,GAAU2V,GAAW0Z,EAAAA,EAAAA,KAAmBvvB,EAAQE,EAAQ2V,QAAYjV,EAClFg5B,oBAAoBC,EAAAA,EAAAA,KAAqB75B,GACzCs8B,uBAAuBC,EAAAA,EAAAA,KAA4Bv8B,GACpD,GATeD,EAngB4BoB,IA+B1C,IA/B2C,IAC/CiH,EAAG,GACHvH,EAAE,OACFX,EAAM,aACN87B,EAAY,uBACZoiD,EAAsB,aACtBrlC,EAAY,kBACZD,EAAiB,gBACjB7b,EAAe,QACfN,EAAO,SACPp8B,EAAQ,QACR8zB,EAAO,YACP2kB,EAAW,wBACX/E,EAAuB,qBACvBC,EAAoB,kBACpB+E,EAAiB,iBACjB9X,EAAgB,aAChB+X,GAAY,oBACZC,GAAmB,oBACnBC,GAAmB,4BACnBC,GAA2B,aAC3B/pB,GAAY,mBACZsK,GAAkB,sBAClB0C,GAAqB,oBACrB6hD,GAAmB,SACnB7kC,GAAQ,kBACRC,GAAiB,OACjBtD,GAAM,SACNooC,GAAQ,QACRxhD,GAAO,OACPC,IACD37B,EACC,MAAM,gBACJm9E,GAAe,mBACfC,GAAkB,oCAClBtgD,KACEz8B,EAAAA,EAAAA,MAGJ,IAAI68B,IAAWt6B,EAAAA,EAAAA,IAAuB,MAClCqE,IACFi2B,GAAWj2B,GAIb,MAAMo2E,IAAsBz6E,EAAAA,EAAAA,IAAe,MAErC06E,IAAW16E,EAAAA,EAAAA,IAAuB,MAElC26E,IAAmB36E,EAAAA,EAAAA,IAAuB,MAE1C46E,IAAkB56E,EAAAA,EAAAA,IAA0B,MAE5C66E,IAAoB76E,EAAAA,EAAAA,IAA0B,MAE9C86E,IAAuB96E,EAAAA,EAAAA,IAAuB,MAE9CtC,IAAOC,EAAAA,EAAAA,KACPo9E,IAAuB/6E,EAAAA,EAAAA,KAAO,IAC7Bg7E,GAAqBC,GAAmBC,KAAsB96E,EAAAA,EAAAA,MAC9D+6E,GAA6BC,KAAkCz0E,EAAAA,EAAAA,OAC/D00E,GAAeC,KAAoB30E,EAAAA,EAAAA,OACnC40E,GAAyBC,KAA8B70E,EAAAA,EAAAA,KAAkB,IAC1E,SAAEJ,KAAaC,EAAAA,EAAAA,MACfi1E,GAAiBl1E,KAAaiQ,EAAAA,IAAUklE,EAAAA,KAEvCC,GAAoBC,KAAyBj1E,EAAAA,EAAAA,KAAS,IAE7D9H,EAAAA,EAAAA,KAAU,KACR+8E,GAAsB7+E,QAAQmzC,GAA2BC,GAAsB,GAC9E,CAACA,EAAsBD,IAE1B,MAAM2rC,IAAiB54E,EAAAA,EAAAA,IAAgB,KACrC24E,IAAsB,EAAM,KD9IjB,SACbtrD,EACAgK,EACAsgD,EACAC,EACAC,EACAgB,EACAvjD,EACAK,EACAp8B,GAEA,MAAMu/E,GAAcC,EAAAA,EAAAA,GAAwB1hD,GAAW1B,GACjDqjD,GAAcC,EAAAA,EAAAA,GAAeH,GAAa,GAC1CI,GAAcn8E,EAAAA,EAAAA,IAAuC,IAAIo3D,KAEzDglB,GAAen5E,EAAAA,EAAAA,IAAiBklC,IACpCA,EAAI38B,SAAS1O,IACX,MAAMu/E,EAASF,EAAY37E,QAAQ26B,IAAIr+B,GACnCu/E,IACFA,EAAOvC,UACPqC,EAAY37E,QAAQm7D,OAAO7+D,GAC7B,GACA,IAGEw/E,GAAsBr5E,EAAAA,EAAAA,IAAgB,KAC1C,KAAK21B,GAAY0B,EAAS95B,SAAYo6E,EAAgBp6E,SAAYq6E,EAAkBr6E,SAAS,OAE7F,MAAMvE,GAASiC,EAAAA,EAAAA,MACTq+E,EAAmB,IAAIn6E,IAAI+5E,EAAY37E,QAAQmsB,QAChC9jB,MAAMgW,KAAKyb,EAAS95B,QAAQ6e,iBAA8B,kBAElE7T,SAAS2jC,IACpB,IAAKA,EAAQxvB,QAAQjG,SACnB,OAEF,MAAM8iE,EAAY,GAAEV,IAAW3sC,EAAQxvB,QAAQjG,WAAWqiE,GAAe,KACnE7zC,EAAaiH,EAAQxvB,QAAQuoB,WAEnCq0C,EAAiB5gB,OAAO6gB,GAExB,MAAMC,GAAWC,EAAAA,EAAAA,IAAgCx0C,GACjD,IAAKu0C,EACH,OAGF,MAAME,EAAe/B,EAAgBp6E,QAAS+M,wBACxCqvE,EAAgBztC,EAAQ5hC,wBACxB1B,GAAIhM,EAAAA,EAAAA,KAAO+8E,EAActvE,KAAOqvE,EAAarvE,MAAQqvE,EAAaxxE,MAAO,GACzEW,GAAIjM,EAAAA,EAAAA,KAAO+8E,EAAc1tC,IAAMytC,EAAaztC,KAAOytC,EAAavxE,OAAQ,GAE9E,GAAI+wE,EAAY37E,QAAQoC,IAAI45E,GAG1B,YAFeL,EAAY37E,QAAQ26B,IAAIqhD,GAChCzC,eAAeluE,EAAGC,GAI3B,MAAM2lD,EAAcx1D,EAAOu6B,aAAap4B,KAAK8pC,GAC7C,IAAKupB,EACH,OAEF,MAAMorB,EAAOprB,GAAaqrB,iBAAkBC,EAAAA,EAAAA,KAAgC9gF,EAAQw1D,EAAYqrB,gBAC1FE,EAAW,CACflB,EAAU5zC,EAAY6zC,GACtBn9E,OAAO7B,SAAS0S,KAAK,MAsF7BsH,eAA2BpY,GAwBI,IAxBH,YAC1B8yD,EAAW,gBACXmpB,EAAe,kBACfC,EAAiB,qBACjBC,EAAoB,SACpBkC,EAAQ,OACRC,EAAM,SACNR,EAAQ,SACRrxC,EAAQ,KACRyxC,EAAI,UACJK,EAAS,YACTjB,GAaDt9E,EACC,GAAI8yD,EAAYzB,SAAU,CACxB,MAAMxgD,EAAQiiD,EAAY0rB,oBAAsBD,GAAYE,EAAAA,EAAAA,IAASF,QAAargF,EAE5EwgF,SADgBC,EAAAA,EAAAA,MACCn6D,KACrBs5D,EACAI,EAAOhC,EAAkBr6E,QAAWo6E,EAAgBp6E,QACpDw8E,EACA,CACE35E,KAAM22E,EACNuD,OAAQnyC,EACRoyC,eAAgBX,GAElBI,EACAztE,EAAQ,CAACA,EAAM8hD,EAAG9hD,EAAMiuE,EAAGjuE,EAAMi1C,QAAK5nD,GAGxC,MAAO,CACL62D,KAAMA,IAAM2pB,EAAO3pB,OACnBpuC,MAAOA,IAAM+3D,EAAO/3D,QACpBw0D,QAASA,IAAMuD,EAAOK,WAAWT,GACjClD,eAAgBA,CAACluE,EAAWC,IACnBuxE,EAAOM,sBAAsBV,EAAQ,CAAEpxE,IAAGC,MAGvD,CAEA,GAAI2lD,EAAYpK,QAAS,CACvB,MAAM/jD,EAAQmuD,EAAY0rB,oBAAsBlB,EAAe,WAAUA,UAAiBp/E,EACpF+gF,EAAgB,IAAIvE,EACxBoD,EACA3B,EAAqBt6E,QACrB,CAAE6C,KAAM22E,EAAM5uC,WAAU9nC,UAE1B,MAAO,CACLowD,KAAMA,IAAMkqB,EAAclqB,OAC1BpuC,MAAOA,IAAMs4D,EAAct4D,QAC3Bw0D,QAASA,IAAM8D,EAAc9D,UAC7BC,eAAgBA,CAACluE,EAAWC,IAAc8xE,EAAc7D,eAAe,CAAEluE,IAAGC,MAEhF,CAEA,MAAM,IAAI+xE,MAAM,gCAClB,EAvJMC,CAAa,CACXrsB,cACAmpB,kBACAC,oBACAC,uBACAkC,WACAC,OAAQT,EACRC,WACAI,OACAzxC,SAAU,CAAEv/B,IAAGC,KACfoxE,UAAWnB,EACXE,gBACCxO,MAAMsQ,IACHxlD,GACFwlD,EAAUrqB,OAGZyoB,EAAY37E,QAAQi7D,IAAI+gB,EAAUuB,EAAU,GAC5C,IAGJ3B,EAAavzE,MAAMgW,KAAK09D,GAAkB,KAG5C19E,EAAAA,EAAAA,KAAU,KACDm/E,EAAAA,EAAAA,IAAkC1B,IACxC,CAACA,KAEJz9E,EAAAA,EAAAA,KAAU,KACHyxB,KAAcgK,EAAS95B,SAAYo6E,EAAgBp6E,SAAYhE,GAAao8B,GAMjF/T,EAAAA,EAAAA,KAAe,KACby3D,GAAqB,IANrBF,EAAavzE,MAAMgW,KAAKs9D,EAAY37E,QAAQmsB,QAO5C,GACD,CAAC2D,EAASgsD,EAAqBhiD,EAAU8hD,EAAcxB,EAAiBp+E,EAAUo8B,KAErF9tB,EAAAA,EAAAA,KAAgB,KACd2L,SAASwK,gBAAgB3d,MAAMqnB,YAAY,8BAA+BsxD,GAAe,OAAO,GAC/F,CAACA,KAEJroE,EAAAA,EAAAA,IAAsBxW,IAAuB,IAArB6gF,GAAgB7gF,OACdP,IAApBohF,GAAiClC,IAAgBkC,GACnD3B,GACF,GACC,CAACP,EAAaO,IAEjB,MAAM4B,GAA+BC,EAAAA,EAAAA,GACnC7B,EACA,CAACA,GA/He,KAiIhB,IAEFpe,EAAAA,EAAAA,GAAkB0c,EAAiBsD,GAEnC,MAAME,GAAkBn7E,EAAAA,EAAAA,IAAgB,KACtCk5E,EAAY37E,QAAQgL,SAAS6wE,IAC3BA,EAAO/2D,OAAO,GACd,IAGE+4D,GAAoBp7E,EAAAA,EAAAA,IAAgB,KACnCs1B,GAIL4jD,EAAY37E,SAASgL,SAAS6wE,IAC5BA,EAAO3oB,MAAM,GACb,IAGE4qB,GAAyBr7E,EAAAA,EAAAA,IAAgB,MAC7C4hB,EAAAA,EAAAA,IAAew5D,EAAkB,KAMnC51C,EAAAA,EAAAA,GAAkB21C,EAAiBE,EACrC,CCHEC,CACEjuD,EACAgK,GACAsgD,GACAC,GACAC,GACA/lC,EACAxc,GACAK,EACAp8B,GAGF,MAAMgiF,GAAiBnE,EAjHiB,IAmHpCrlC,EAlH+B,IAkHgBzuC,GAAW,IAAM,IAC9Dk4E,IAAoBx7E,EAAAA,EAAAA,IAAgB,WAAsB,IAArBy7E,EAAQp2E,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,IACjDq2E,EAAAA,EAAAA,KAAoB,KAClB,MAAMC,EAAWtkD,GAAS95B,QAASkqB,QAAyB,IAAGuvD,KACzD4E,EAAgBv0C,OAAOs0C,EAASt7E,MAAM8H,OAAOkN,QAAQ,KAAM,KAC3DwmE,EAAQnE,GAAiBn6E,SACzB,aAAEojE,GAAiBkb,EACnBC,EAAYj2E,KAAKC,IAAI66D,EAAc4a,IAEzC,GAAIO,IAAcF,EAChB,OAGF,MAAMG,EAAcpb,EAAe4a,GAEnC,SAASS,IACP,MAAMC,EAAqBp2E,KAAKjJ,MA7KL,GA8KIiJ,KAAKq2E,IAAIr2E,KAAK8hE,IAAImU,EAAYF,KAE7DD,EAASt7E,MAAM8H,OAAU,GAAE2zE,MAC3BH,EAASt7E,MAAM47E,mBAAsB,GAAEA,MACvCN,EAASloE,UAAU0oE,OAAO,YAAaJ,EACzC,CAEA,OAAIN,OAEF18C,EAAAA,EAAAA,IAAgBi9C,GAGTA,CACT,GAEJ,KAEAn0E,EAAAA,EAAAA,KAAgB,KACTuvE,GACLoE,IAAkB,EAAM,GACvB,CAACpE,EAAwBoE,KAE5B,MAAMY,IAAUr/E,EAAAA,EAAAA,IAAOswB,MACvBxlB,EAAAA,EAAAA,KAAgB,KACd,MAAMoQ,EAAO1e,EAAW8zB,IAAY,GAEhCpV,IAASof,GAAS95B,QAASwe,YAC7Bsb,GAAS95B,QAASwe,UAAY9D,GAG5BA,IAASw/D,GAASl6E,QAASwe,YAC7B07D,GAASl6E,QAASwe,UAAY9D,GAG5BA,IAASmkE,GAAQ7+E,UACnB6+E,GAAQ7+E,QAAU0a,EAElBujE,IAAmBvjE,GACrB,GACC,CAACoV,EAAS9zB,EAAUiiF,MAELz+E,EAAAA,EAAAA,IAAO7D,GACfqE,QAAUrE,EACpB,MAAMmjF,IAAar8E,EAAAA,EAAAA,IAAgB,KAC5Bq3B,GAAS95B,WAIV++E,EAAAA,EAAAA,MACFn8E,WAAWk8E,GAhOM,MAoOnB/gD,EAAAA,EAAAA,GAAqBjE,GAAS95B,SAAS,IAGnCg/E,IAA2Bv8E,EAAAA,EAAAA,IAAgB,KAC/Ci4E,KAjLJ,WACE,MAAMx9C,EAAY55B,OAAO65B,eACpBD,IAIDA,EAAUgS,gBACZhS,EAAUgS,kBACDhS,EAAU+hD,OACnB/hD,EAAU+hD,QAEd,CAuKIC,EAAgB,IAGlB,SAASC,KAEP,GAAInpE,EAAAA,GACF,OAAO,EAGT,MAAMknB,EAAY55B,OAAO65B,eACzB,IAAKD,IAAcA,EAAUI,YAAci9C,GAAqBv6E,QAK9D,OAJA06E,KACIQ,EAAAA,IACFF,IAA2B,IAEtB,EAGT,MAAMz9C,EAAiBL,EAAUM,WAAW,GACtC4hD,EAAe7hD,EAAevkB,WAAWotB,OAC/C,QACE0O,MACIrX,EAAAA,EAAAA,GAAuBF,EAAgB7E,GAAmBlb,EAAAA,OAC1D4hE,IACD57C,EAAAA,EAAAA,GAAqB47C,KACpB7hD,EAAe8hD,gBAEnB3E,MACO,EAIX,CAEA,SAAS4E,KACP,IAAKH,KACH,OAGF,GAAIpE,GACF,OAGF,MAAMx9C,EAAiBj6B,OAAO65B,eAAgBK,WAAW,GACnD+hD,EAAgBhiD,EAAexwB,wBAC/ByyE,EAAe1lD,GAAS95B,QAASkqB,QAAyB,IAAGuvD,KAAmB1sE,wBAEtF,IAAI1B,EAAKk0E,EAAczyE,KAAOyyE,EAAc50E,MAAQ,EAAK60E,EAAa1yE,KAElEzB,EAAIquE,EACNruE,EAAIquE,EACKruE,EAAIm0E,EAAa70E,MAAQ+uE,IAClCruE,EAAIm0E,EAAa70E,MAAQ+uE,GAG3BkB,GAA+B,CAC7BvvE,IACAC,EAAGi0E,EAAc7wC,IAAM8wC,EAAa9wC,MAGtCosC,GAAiBv9C,GACjBk9C,IACF,CAEA,SAASgF,KACHxF,GAAoBj6E,SACtBsD,OAAOq1E,aAAasB,GAAoBj6E,SAG1Ci6E,GAAoBj6E,QAAUsD,OAAOV,WAAW08E,GA/Pb,IAgQrC,EAiHAjhF,EAAAA,EAAAA,KAAU,KACJwqB,EAAAA,IAIA8rB,IACFmqC,IACF,GACC,CAACnjF,EAAQmjF,GAAY/zD,GAAc4pB,MAEtCt2C,EAAAA,EAAAA,KAAU,KACR,IACG1C,GACE+8B,IAAoBlb,EAAAA,KACpBo3B,IACAqmC,IACA5lD,GAEH,OAGF,MAAMqqD,EAAyB7yE,IAC7B,IAAI8yE,EAAAA,EAAAA,MACF,OAGF,MAAM,IAAExgF,GAAQ0N,EACVqa,EAASra,EAAEqa,OAEjB,IAAKA,GAAUyyD,EAAYh8D,SAASxe,GAClC,OAGF,MAAMme,EAAQwc,GAAS95B,QACjB4/E,EAAuB3pE,SAASknB,gBAAgB0iD,YAEtD,MACI1gF,EAAIomC,WAAW,UAAa14B,EAAE2nE,UAAoB,UAARr1E,KAAsBygF,GACnD,SAAX/yE,EAAEg0D,OAAoBh0D,EAAE+zD,SAAW/zD,EAAE8zD,UAA+B,UAAnBz5C,EAAOjI,UAM5D3B,GACG4J,IAAW5J,GACQ,UAAnB4J,EAAOjI,SACY,aAAnBiI,EAAOjI,UACNiI,EAAO44D,kBACX,EACA/hD,EAAAA,EAAAA,GAAqBzgB,GAAO,GAAM,GAElC,MAAMyiE,EAAW,IAAIC,cAAcnzE,EAAEkK,KAAMlK,GAC3CyQ,EAAMqgB,cAAcoiD,EACtB,GAKF,OAFA9pE,SAASiH,iBAAiB,UAAWwiE,GAAuB,GAErD,KACLzpE,SAASmH,oBAAoB,UAAWsiE,GAAuB,EAAK,CACrE,GACA,CAAC/jF,EAAQ+8B,EAAiBuiD,GAAgB5lD,GAAoBuf,MAEjEv2C,EAAAA,EAAAA,KAAU,KACR,MAAM4hF,GAAkB1vE,EAAAA,EAAAA,KAAU1D,IAClB,QAAVA,EAAE1N,MAAkBwgF,EAAAA,EAAAA,QACtB9yE,EAAEuT,kBACFohB,EAAAA,EAAAA,IAAgBs9C,IAClB,GAxb6B,KAybA,GAAM,GAErC,OAAOoB,EAAAA,EAAAA,GAAyB,CAAEC,MAAOF,GAAkB,GAC1D,CAACnB,MAEJzgF,EAAAA,EAAAA,KAAU,KACR,MAAMif,EAAQwc,GAAS95B,QAEvB,SAASogF,IACP9iE,EAAMuuB,MACR,CAMA,OAJIgJ,IACFv3B,EAAMJ,iBAAiB,QAASkjE,GAG3B,KACL9iE,EAAMF,oBAAoB,QAASgjE,EAAc,CAClD,GACA,CAACvrC,KAEJ,MAAMrN,IAAY7W,EAAAA,EAAAA,IAAgB,IAAMp0B,QAAQP,GAAY8zB,MAAY,CAAC9zB,EAAU8zB,IAE7EjzB,IAAYkC,EAAAA,EAAAA,GAChB,+BACAyoC,IAAa,UACbqN,IAAuB,kBAGzB,OACEh2C,EAAAA,GAAAC,cAAA,OAAKxC,GAAIA,EAAI0C,QAAS61C,GAAsBG,QAAoB34C,EAAWkE,IAAKrD,GAAKsD,MAAQ,WAAQnE,GACnGwC,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiB06E,GAC3CK,SAAUA,GACV96E,QAAU66E,GAA2Bj9C,OAAiCvgC,EA7G5E,WACMw9E,GAA0Bj9C,GAC9BlD,GAAoC,CAAE/9B,UACxC,GA4GMkD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACbgC,EAAAA,GAAAC,cAAA,OACE+E,IAAKi2B,GACLx9B,GAAIo8B,GAAmBlb,EAAAA,IACvB3gB,UAAWA,GACX4xC,gBAAiBorC,GAA0Bj9C,EAC3C8lB,KAAK,UACLniD,IAAI,OACJgiD,SAAU,EACVvjD,QAAS8/E,GACTt8B,SAhKV,SAAsB31C,GACpB,MAAM,UAAE2R,EAAS,YAAE3C,GAAgBhP,EAAE+zC,cAKrC,GAHA7L,GArUc,SAqULv2B,EAA0B,GAAKA,IAIrCqK,EAAAA,MACIhN,IAAgBA,EAAYzb,UAE3BgjC,EAAAA,KAAsB5kB,EAAUb,SAAS,kBAC1Ca,EAAUb,SAAS,gBACxB,CACA,MAAMuf,EAAY55B,OAAO65B,eACrBD,IACFpD,GAAS95B,QAAS6rC,OAClB3O,EAAUgS,mBACVnR,EAAAA,EAAAA,GAAqBjE,GAAS95B,SAAU,GAE5C,CACF,EA6IUqgF,UArMV,SAAuBxzE,GAErB,MAAM,YAAEyzE,GAAgBzzE,EAElB6N,EAAOoV,IACb,IAAKwwD,IAAgB5lE,IAAS7N,EAAE8zD,SAAW9zD,EAAE+zD,SAAU,CACrD,MAAML,EAA6B,cAAV1zD,EAAE1N,IAAsB,EAAc,YAAV0N,EAAE1N,KAAqB,OAAI9C,EAChF,GAAIkkE,EAIF,OAHA1zD,EAAEuT,sBAEF45D,GAAmB,CAAEzZ,oBAGzB,CAEK+f,GAAyB,UAAVzzE,EAAE1N,KAAoB0N,EAAE2nE,SAahC8L,GAAyB,YAAVzzE,EAAE1N,KAAsBub,GAAS7N,EAAE8zD,SAAY9zD,EAAE+zD,SAAY/zD,EAAE0zE,OAIxF1zE,EAAEqa,OAAOhK,iBAAiB,QAASuiE,GAA6B,CAAEe,MAAM,KAHxE3zE,EAAEuT,iBACF25D,OAbGkB,KAE0B,UAAxBrB,KAAoC/sE,EAAE2nE,UACX,eAAxBoF,KAAyC/sE,EAAE+zD,SAAW/zD,EAAE8zD,YAG9D9zD,EAAEuT,iBAEFs6D,KACAhpC,KAQN,EAoKU8D,YArOV,SAAyB3oC,GAcvB,SAAS4zE,EAAuBC,GAC1BA,aAAcV,eAA4B,QAAXU,EAAGvhF,KAA4B,WAAXuhF,EAAGvhF,MAI1DyD,YAAW,KACT23E,GAAqBv6E,SAAU,CAAK,GAvUR,KA0U9BsD,OAAO8Z,oBAAoB,UAAWqjE,GACtCn9E,OAAO8Z,oBAAoB,YAAaqjE,GAC1C,CAxBiB,IAAb5zE,EAAEQ,OAOFktE,GAAqBv6E,UAIzBu6E,GAAqBv6E,SAAU,EAe/BiW,SAASiH,iBAAiB,YAAaujE,GACvCxqE,SAASiH,iBAAiB,UAAWujE,KA1BhB5zE,EAAE+zC,cAAc12B,QAAS,2BAA6Brd,EAAEqa,QAEhEhK,iBAAiB,UAAWuiE,GAA6B,CAAEe,MAAM,GAyBhF,EAyMU5xD,cAAessD,EAAAA,GA7IzB,SAAkCruE,GAC3BsyE,OAILnE,IAA4BD,IAEvBA,GAMHL,MALA7tE,EAAEuT,iBACFvT,EAAEM,kBAEFmyE,MAIJ,OA8HiEjjF,EACvDskF,cAAezF,EAAAA,GAAauE,QAA8BpjF,EAC1D,aAAYo4C,EACZnc,QAASA,GACTC,OAAQA,MAERmc,GACA71C,EAAAA,GAAAC,cAAA,QACEjC,WAAWkC,EAAAA,EAAAA,GACT,oBACC86E,IAA2Bj9C,GAAoB,aAElDr8B,IAAI,SAEFs5E,IAA2Bj9C,GACxB/9B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,0CACjBs+E,GACCt8E,EAAAA,GAAAC,cAAC8hF,EAAAA,EAAS,CAAClM,QAAShlC,EAA0BmxC,OAAQlxC,EAAuBmxC,MAAOzF,KAClF5mC,GAGR51C,EAAAA,GAAAC,cAAA,UAAQ+E,IAAKu2E,GAAiBv9E,UAAU,kBACxCgC,EAAAA,GAAAC,cAAA,UAAQ+E,IAAKw2E,GAAmBx9E,UAAU,kBAC1CgC,EAAAA,GAAAC,cAAA,OAAK+E,IAAKy2E,GAAsBz9E,UAAU,+BAG9CgC,EAAAA,GAAAC,cAAA,OAAK+E,IAAKs2E,GAAkBt9E,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiB06E,EAAgB,UACrF56E,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACbgC,EAAAA,GAAAC,cAAA,OAAK+E,IAAKq2E,GAAUr9E,WAAWkC,EAAAA,EAAAA,GAAelC,GAAW,SAAU0D,IAAI,gBAGzDlE,IAAjBo7B,GACC54B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,uBAAuB0D,IAAI,QACvCk3B,GAGL54B,EAAAA,GAAAC,cAACiiF,EAAAA,EAAa,CACZz4D,OAAQkyD,GACRwG,eAAgBrG,GAChBE,cAAeA,GACfC,iBAAkBA,GAClBpyD,QAASs2D,KAEVtqC,GAAqB71C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,uBAAsB4R,EAAAA,EAAAA,GAAWimC,IACnE,I,yKCjmBV,MAQA,EARuCj0C,IACrC,MAAM,OAAE6nB,GAAW7nB,EACbwgF,GAAaj8D,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,cAAeoD,GAGjE,OAAO24D,EAAapiF,EAAAA,GAAAC,cAACmiF,EAAexgF,QAAYpE,CAAS,ECqM3D,GAAed,EAAAA,EAAAA,KA7JwBqB,IAyBjC,IAzBkC,OACtCjB,EAAM,SACN2V,EAAQ,SACRvL,EAAQ,YACR02B,EAAW,gBACXD,EAAe,kBACfyX,EAAiB,QACjB7b,EAAO,iBACPyH,EAAgB,SAChBwU,EAAQ,kBACRtJ,EAAiB,iBACjBnO,EAAgB,mBAChB7B,EAAkB,UAClBl+B,EAAS,eACT01C,EAAc,iBACd6B,EAAmBxM,EAAAA,IAA2B,eAC9C9H,EAAc,gBACdC,EAAe,oBACf6S,EAAmB,gBACnBuB,EAAe,YACfD,EAAW,eACXrB,EAAc,cACdC,EAAa,oBACblT,EAAmB,gBACnBM,GACDtjC,EACC,MAAM,sBACJskF,EAAqB,kBACrBC,EAAiB,eACjB/nD,EAAc,qBACdK,IACEx8B,EAAAA,EAAAA,MAGEmkF,GAAa5hF,EAAAA,EAAAA,IAAuB,OAEnC6hF,EAAoBC,IAA+B1hF,EAAAA,EAAAA,MACnD+tB,EAAqB4zD,IAA0Bp7E,EAAAA,EAAAA,SAAsC9J,GAEtFmlF,GAA4BziF,EAAAA,EAAAA,GAChC,6BACCq5B,GAAW,YACZipD,EACKxhD,GAAoB,cACpBA,GAAoB,cAGrB4hD,GAA2Bh/E,EAAAA,EAAAA,IAAgB,KAC/Cm9B,MACAM,MACAJ,IACA,MAAM4hD,EAAYN,EAAWphF,QAC7B,IAAK0hF,EAAW,OAChB,MAAM,EAAEr2E,EAAC,EAAEC,GAAMo2E,EAAU30E,wBAC3Bw0E,EAAuB,CAAEl2E,IAAGC,KAAI,IAG5Bq2E,GAAmBl/E,EAAAA,EAAAA,IAAiBsU,IAC3B,aAATA,GACFmqE,EAAsB,CAAEz/D,MAAO,KAC/B0/D,EAAkB,CAAE1/D,WAAOplB,MAE3B8kF,EAAkB,CAAE1/D,MAAO,KAC3By/D,EAAsB,CAAEz/D,WAAOplB,IACjC,IAGIulF,GAAuBn/E,EAAAA,EAAAA,IAAgB,KAC3C,MAAM26B,EAAennB,SAASkY,cAC5B4c,EAAoB82C,EAAAA,IAAoCztC,GAGrDruC,GAAYq3B,IAAiBnnB,SAASsH,eAK3C6f,GAAcyO,OACdjpC,YAAW,KACTg9B,MACAE,GAAgB,GAnHgB,MA4GhCA,GAQ+B,IAG7B9R,GAAoBvrB,EAAAA,EAAAA,IAAgB,IAAM2+E,EAAWphF,UACrDiuB,GAAiBxrB,EAAAA,EAAAA,IAAgB,IAAM2+E,EAAWphF,SAASkqB,QAAQ,mCACnEgE,GAAiBzrB,EAAAA,EAAAA,IAAgB,IAAMwT,SAASkY,cAAc,kCAC9D2zD,GAAYr/E,EAAAA,EAAAA,IAAgB,KAAM,CAAG40E,YAAY,OAEjD,UACJ7uD,EAAS,UAAEC,GAAS,iBAAE2F,GAAgB,iBAAEC,GAAkBvrB,MAAOwrB,KAC/DC,EAAAA,EAAAA,GACFZ,EACAK,EACAC,EACAC,EACA4zD,GAGF,OACEjjF,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACG3J,EACClH,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLvC,UAAW2kF,EACXniF,OAAK,EACL2P,MAAM,cACNhQ,QAAS6gC,EAAmBE,EAAkB6hD,EAC9C1yE,UAAU,gCAEVrQ,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,oBACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uBACZgjC,IAAqBwhD,GAAsBxiF,EAAAA,GAAAC,cAACm2C,EAAAA,EAAO,CAACjmC,MAAM,UAG7DnQ,EAAAA,GAAAC,cAACmpB,EAAAA,EAAqB,CACpBprB,WAAWkC,EAAAA,EAAAA,GAAe,qBAAsB8gC,GAAoB,aACpExgC,OAAK,EACL2P,MAAM,cACNkZ,WAAYu5D,EACZvyE,UAAU,gCAEVrQ,EAAAA,GAAAC,cAAA,OAAK+E,IAAKu9E,EAAYvkF,UAAU,wBAChCgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAIjBgC,EAAAA,GAAAC,cAACmiF,EAAU,CACTtlF,OAAQA,EACR2V,SAAUA,EACVgX,OAAQuX,GAAoBtjC,QAAQw+B,GACpC0B,YAAaA,EACbD,gBAAiBA,EACjByX,kBAAmBA,EACnBI,SAAUA,EACVlxC,OAAQm+E,EACR54D,QAASqX,EACT+S,cAAeA,EACfqB,gBAAiBA,EACjBvB,oBAAqBA,EACrBsB,YAAaA,EACbrB,eAAgBA,EAChBkvC,aAAcJ,EACdvoD,eAAgBA,EAChBK,qBAAsBA,EACtBsR,kBAAmBA,EACnBnO,iBAAkBA,EAClB//B,WAAWkC,EAAAA,EAAAA,GAAelC,EAAW01C,GAAkB,wBACvD/pB,UAAWuiB,EAAoBviB,OAAYnsB,EAC3CosB,UAAWsiB,EAAoBtiB,QAAYpsB,EAC3C+xB,iBAAkB2c,EAAoB3c,QAAmB/xB,EACzDgyB,iBAAkB0c,EAAoB1c,QAAmBhyB,EACzDyG,MAAOioC,EAAoBzc,QAAYjyB,IAExC,G,6LCpKP,MAAM2lF,EAAsE,CAC1EC,EAAG,OACHC,OAAQ,OACRC,EAAG,SACHC,GAAI,SACJC,EAAG,YACHC,IAAK,gBACLC,KAAM,YACNC,KAAM,WAEFC,EAAaxsE,SAASnX,cAAc,OA4c1C,GAAevD,EAAAA,EAAAA,KA1cqBqB,IAM9B,IAN+B,OACnC0rB,EAAM,eACN04D,EAAc,cACdnG,EAAa,iBACbC,EAAgB,QAChBpyD,GACD9rB,EAEC,MAAMoiE,GAAex/D,EAAAA,EAAAA,IAAuB,MAEtCkjF,GAAkBljF,EAAAA,EAAAA,IAAyB,OAC3C,aAAEjB,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAAkB6pB,IAC1Dq6D,EAAmBC,EAAiBC,IAAoBjjF,EAAAA,EAAAA,MACxDkjF,EAASC,IAAc58E,EAAAA,EAAAA,IAAS,KAChC68E,EAAeC,IAAoB98E,EAAAA,EAAAA,KAAS,IAC5C+8E,EAAgBC,IAAqBh9E,EAAAA,EAAAA,OACrCi9E,EAAqBC,IAA0Bl9E,EAAAA,EAAAA,IAA+B,CAAC,IAEtF9H,EAAAA,EAAAA,KAAU,IAAOiqB,GAAS+E,EAAAA,EAAAA,GAAsB3E,QAAWrsB,GAAY,CAACisB,EAAQI,KAChF46D,EAAAA,EAAAA,GACEh7D,EACA02C,EACAt2C,GACA,IAGFrqB,EAAAA,EAAAA,KAAU,KACJskF,EACFD,EAAgB1iF,QAAS+V,SAEzBgtE,EAAW,IACXE,GAAiB,GACnB,GACC,CAACN,KAEJtkF,EAAAA,EAAAA,KAAU,KACHE,IACHskF,IACAQ,EAAuB,CAAC,GACxBF,OAAkB9mF,GACpB,GACC,CAACwmF,EAAkBtkF,KAEtBF,EAAAA,EAAAA,KAAU,KACR,IAAKiqB,IAAWuyD,EACd,OAGF,MAAM0I,EAAwC,CAAC,EAC/C,IAAI,cAAEC,GAAkB3I,EAAc4I,wBACtC,KAAOD,GAAiBA,EAAclnF,KAAOkhB,EAAAA,KAAmB,CAC9D,MAAMkmE,EAAa1B,EAAwBwB,EAAcvkE,SACrDykE,IACFH,EAAgBG,IAAc,GAGhCF,EAAgBA,EAAcA,aAChC,CAEAH,EAAuBE,EAAgB,GACtC,CAACj7D,EAAQuyD,EAAe+H,IAE3B,MAAMe,GAAmBlhF,EAAAA,EAAAA,IAAgB,KACvC,IAAKo4E,EACH,OAGF,MAAM39C,EAAY55B,OAAO65B,eACrBD,IACFA,EAAUgS,kBACVhS,EAAUiS,SAAS0rC,GACrB,IAGI+I,GAAsBnhF,EAAAA,EAAAA,IAAgB,KAC1C,MAAMy6B,EAAY55B,OAAO65B,eACrBD,GACF49C,EAAiB59C,EAAUM,WAAW,GACxC,IAGIqmD,GAAkBphF,EAAAA,EAAAA,IAAiBqhF,IACvC,GAAKjJ,EASL,OANA4H,EAAWsB,gBAAgBlJ,EAAcmJ,iBACrCF,GACFrB,EAAW5jE,iBAAiBolE,EAAAA,IAA6Bj5E,SAASkQ,IAChEA,EAAGgE,YAAYhE,EAAGmE,aAAa,OAAQ,IAGpCojE,EAAWjkE,SAAS,IAGvB0lE,GAAqBzhF,EAAAA,EAAAA,IAAgB,KACzC,GAAKo4E,EAIL,OAAOA,EAAc4I,wBAAwBD,aAAa,IAG5D,SAASW,IACP,MAAM7mE,EAAQolE,EAAgB1iF,QAC9B,IAAKsd,EACH,OAGF,MAAM,YAAE4sD,EAAW,YAAEjgD,EAAW,WAAEm6D,GAAe9mE,EACjD,GAAI2M,GAAeigD,EAEjB,YADAiZ,OAAkB9mF,GAIpB,IAAIQ,EAAY,GACZunF,EAAan6D,EAAcigD,IAC7BrtE,EAAY,cAEVunF,EAAa,IACfvnF,GAAa,cAGfsmF,EAAkBtmF,EACpB,CAOA,SAASwnF,EAAyBllF,GAChC,GAAIikF,EAAoBjkF,GACtB,MAAO,SAGT,GAAY,cAARA,GAA+B,kBAARA,GACzB,GAAIpB,OAAOouB,KAAKi3D,GAAqBn3D,MAClCq4D,GAASA,IAASnlF,GAAO5C,QAAQ6mF,EAAoBkB,MAEtD,MAAO,gBAEJ,GAAIlB,EAAoBmB,WAAanB,EAAoBoB,cAC9D,MAAO,UAIX,CAEA,MAAMC,GAAoBhiF,EAAAA,EAAAA,IAAgB,KACxC,GAAI2gF,EAAoBsB,QAAS,CAC/B,MAAM/1C,EAAUu1C,IAChB,IACGrJ,IACGlsC,GACDA,EAAQxvB,QAAQC,aAAeQ,EAAAA,GAAsBqvC,UACpDtgB,EAAQ9yB,YAEZ,OASF,OANA8yB,EAAQzvB,YAAYyvB,EAAQ9yB,kBAC5BwnE,GAAwBE,IAAe,IAClCA,EACHmB,SAAS,KAIb,CAEA,MAAMplF,EAAOukF,IACb5tE,SAASs4B,YACP,cAAc,EAAQ,2CAA0C3uB,EAAAA,GAAsBqvC,YAAY3vD,YAEpGopB,GAAS,IAGLi8D,GAAiBliF,EAAAA,EAAAA,IAAgB,KACrC4gF,GAAwBE,IAEtBttE,SAASs4B,YAAYg1C,EAAgBqB,KAAO,eAAiB,QAC7D7mF,OAAOouB,KAAKo3D,GAAiBv4E,SAAS7L,IACvB,WAARA,GAA4B,cAARA,IAAwB5C,QAAQgnF,EAAgBpkF,KACvE8W,SAASs4B,YAAYpvC,EACvB,IAGFykF,IACO,IACFL,EACHqB,MAAOrB,EAAgBqB,QAEzB,IAGEC,GAAmBpiF,EAAAA,EAAAA,IAAgB,KACvCwT,SAASs4B,YAAY,UACrBq1C,IACAP,GAAwBE,IAAe,IAClCA,EACHuB,QAASvB,EAAgBuB,UACxB,IAGCC,GAAsBtiF,EAAAA,EAAAA,IAAgB,KAC1CwT,SAASs4B,YAAY,aACrBq1C,IACAP,GAAwBE,IAAe,IAClCA,EACHyB,WAAYzB,EAAgByB,aAC3B,IAGCC,GAA0BxiF,EAAAA,EAAAA,IAAgB,KAC9C,GAAI2gF,EAAoBoB,cAAe,CACrC,MAAM71C,EAAUu1C,IAChB,IACGrJ,IACGlsC,GACmB,QAApBA,EAAQ1vB,UACP0vB,EAAQ9yB,YAEZ,OASF,OANA8yB,EAAQzvB,YAAYyvB,EAAQ9yB,kBAC5BwnE,GAAwBE,IAAe,IAClCA,EACHiB,eAAe,KAInB,CAEA,MAAMllF,EAAOukF,IACb5tE,SAASs4B,YAAY,cAAc,EAAQ,QAAOjvC,WAClDopB,GAAS,IAGLw8D,GAAsBziF,EAAAA,EAAAA,IAAgB,KAC1C,GAAI2gF,EAAoBmB,UAAW,CACjC,MAAM51C,EAAUu1C,IAChB,IACGrJ,IACGlsC,GACmB,SAApBA,EAAQ1vB,UACP0vB,EAAQ9yB,YAEZ,OASF,OANA8yB,EAAQzvB,YAAYyvB,EAAQ9yB,kBAC5BwnE,GAAwBE,IAAe,IAClCA,EACHgB,WAAW,KAIf,CAEA,MAAMjlF,EAAOukF,GAAgB,GAC7B5tE,SAASs4B,YAAY,cAAc,EAAQ,6CAA4CjvC,YACvFopB,GAAS,IAGLy8D,GAAuB1iF,EAAAA,EAAAA,IAAgB,KAC3C,MAAM2iF,IAAoBC,EAAAA,EAAAA,GAAevC,IAAY,IAAInuE,MAAM,KAAKzW,IAAIonF,WAAWr2E,KAAK,KAExF,GAAI+zE,EAAe,CACjB,MAAMr0C,EAAUu1C,IAChB,IAAKv1C,GAA+B,MAApBA,EAAQ1vB,QACtB,OAOF,OAJC0vB,EAA8B15B,KAAOmwE,OAEtC18D,GAGF,CAEA,MAAMppB,EAAOukF,GAAgB,GAC7BF,IACA1tE,SAASs4B,YACP,cACA,EACC,WAAU62C,yCAAwD9lF,SAErEopB,GAAS,IAGL+3C,GAAgBh+D,EAAAA,EAAAA,IAAiBoK,IACrC,MAUMipD,EAVqD,CACzDyvB,EAAG3C,EACH3+B,EAAG0gC,EACHlxE,EAAGsxE,EACH5kF,EAAG0kF,EACHW,EAAGN,EACHtwE,EAAGqwE,EACHQ,EAAGhB,GCjWM,SAAyB53E,GACtC,MAAM1N,EAAM0N,EAAE1N,KAAO0N,EAAEg0D,KAEvB,OAAO1hE,EAAIomC,WAAW,OAASpmC,EAAIlB,MAAM,GAAG8jB,cAAgB5iB,CAC9D,CDgWoCumF,CAAgB74E,KAG9CA,EAAE0zE,SACG1zE,EAAE+zD,SAAW/zD,EAAE8zD,UAChB7K,IAKNjpD,EAAEuT,iBACFvT,EAAEM,kBACF2oD,IAAS,KAGXz3D,EAAAA,EAAAA,KAAU,KACJiqB,GACFrS,SAASiH,iBAAiB,UAAWujD,GAGhC,IAAMxqD,SAASmH,oBAAoB,UAAWqjD,KACpD,CAACn4C,EAAQm4C,IAEZ,MAAMvjE,GAAOC,EAAAA,EAAAA,KASb,IAAKoB,EACH,OAGF,MAAM1B,GAAYkC,EAAAA,EAAAA,GAChB,gBACAP,EACAmkF,GAAqB,sBAGjBgD,GAA0B5mF,EAAAA,EAAAA,GAC9B,iCACAxC,QAAQumF,EAAQ1iF,SAAW,SAGvB0C,GAAQk+E,EACT,SAAQA,EAAe31E,aAAa21E,EAAe11E,8BAA8B01E,EAAe31E,OACjG,GAEJ,OACExM,EAAAA,GAAAC,cAAA,OACE+E,IAAKm7D,EACLniE,UAAWA,EACXiG,MAAOA,GACPu9E,UA/BJ,SAAgCxzE,GAChB,UAAVA,EAAE1N,KAAmBwjF,IACvBwC,IACAt4E,EAAEuT,iBAEN,EA4BIo1B,YAAatgC,EAAAA,GAEbrW,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,yBACbgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACL4P,MAAM,cACNE,UAAU,eACVrS,UAAWwnF,EAAyB,WACpCrlF,QAASylF,GAET5lF,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,0BAEfgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACfgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACL4P,MAAM,cACNE,UAAU,YACVrS,UAAWwnF,EAAyB,QACpCrlF,QAAS2lF,GAET9lF,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,oBAEfgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACL4P,MAAM,cACNE,UAAU,cACVrS,UAAWwnF,EAAyB,UACpCrlF,QAAS6lF,GAEThmF,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sBAEfgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACL4P,MAAM,cACNE,UAAU,kBACVrS,UAAWwnF,EAAyB,aACpCrlF,QAAS+lF,GAETlmF,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,0BAEfgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACL4P,MAAM,cACNE,UAAU,qBACVrS,UAAWwnF,EAAyB,iBACpCrlF,QAASimF,GAETpmF,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,6BAEfgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACL4P,MAAM,cACNE,UAAU,iBACVrS,UAAWwnF,EAAyB,aACpCrlF,QAASkmF,GAETrmF,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,yBAEfgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACfgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CAAC4P,MAAM,cAAcE,UAAWhS,EAAK,2BAA4B8B,QAAS4jF,GAC/E/jF,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAIjBgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,8BACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,yBACbgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CAAC4P,MAAM,cAAcE,UAAWhS,EAAK,UAAW8B,QAAS6jF,GAC9DhkF,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,0BAEfgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BAEfgC,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAe,uCAAwCmkF,IAElErkF,EAAAA,GAAAC,cAAA,SACE+E,IAAK6+E,EACL7lF,UAAU,+BACVka,KAAK,OACL/M,MAAO84E,EACPruC,YAAY,eACZ6N,aAAa,MACbsjC,UAAU,MACVrlF,IAAI,OACJiiD,SAvTZ,SAA6B31C,GAC3Bk2E,EAAWl2E,EAAEqa,OAAOld,OACpBm6E,GACF,EAqTYrK,SAAUqK,KAIdtlF,EAAAA,GAAAC,cAAA,OAAKjC,UAAW8oF,GACd9mF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACfgC,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACL4P,MAAM,cACNE,UAAWhS,EAAK,QAChBL,UAAU,gBACVmC,QAASmmF,GAETtmF,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,wBAKjB,G,kDE3fK0Z,eAAe8J,EAA8BwlE,GAC1D,MAAM1lE,EAAgB,GAEtB,SAAS2lE,EAAwBnoB,EAA+B1yD,GAC9D,OAAO,IAAI4V,SAAS2D,IAClB,GAAIm5C,aAAiBj2C,KACnBvH,EAAM9f,KAAKs9D,GACXn5C,EAAQm5C,QACH,GAAIA,EAAMooB,OAAQ,CACvB,MAAMC,EAAW/6E,EAAKg7E,YACrBtoB,EAA8B58C,MAAMA,IACnCZ,EAAM9f,KAAK0gB,GACXyD,EAAQzD,EAAK,IACZ,KAGGilE,GACF7lE,EAAM9f,KAAK2lF,GAEbxhE,EAAQwhE,EAAS,GAErB,MAAWroB,EAAMuoB,aACIvoB,EAAmCwoB,eAC5CC,aAAaC,IACrB,MAAMC,EAAkB,GACxB,IAAK,IAAInmF,EAAI,EAAGA,EAAIkmF,EAAQjmF,OAAQD,IAClCmmF,EAAgBjmF,KAAKylF,EAAwBO,EAAQlmF,GAAI8K,IAE3DuZ,EAAQ3D,QAAQC,IAAIwlE,GAAiB,GAEzC,GAEJ,CAEA,MAAMA,EAAkB,GACxB,IAAK,IAAInmF,EAAI,EAAGA,EAAI0lF,EAAkBzlF,OAAQD,IAAK,CACjD,MAAM8K,EAAO46E,EAAkB1lF,GAC/B,GAAkB,SAAd8K,EAAKs7E,KAAiB,CACxB,MAAM5oB,EAAQ1yD,EAAKu7E,oBAAsBv7E,EAAKg7E,YAC1CtoB,GACF2oB,EAAgBjmF,KAAKylF,EAAwBnoB,EAAO1yD,GAExD,CACF,CAIA,aAFM4V,QAAQC,IAAIwlE,IAEXl/D,EAAAA,EAAAA,IAAcjH,EACvB,C,mCClDA,MAAMsmE,EAAQ,oBACRC,EAAW,mBACXC,EAAgB,oBAChBC,EAAoB,OAEnB,SAASrjD,EAAiB7oB,GAC/B,OAAOA,EACJ5C,QAAQ4uE,EAAU,KAClB5uE,QAAQ2uE,EAAO,MACf3uE,QAAQ6uE,EAAe,IACvB7uE,QAAQ8uE,EAAmB,GAChC,C,mCCXA,MAAMC,EAAsB,EAErB,SAASppD,EAAuBF,EAAuB5E,GAC5D,MAAM,wBAAE8qD,GAA4BlmD,EACpC,IAAIupD,EAAiCrD,EACjCsD,EAAa,EACjB,KAAOD,GAAcA,EAAWxqF,KAAOq8B,GAAWouD,EAAaF,GAC7DC,EAAaA,EAAWtD,cACxBuD,IAGF,OAAOxqF,QAAQuqF,GAAcA,EAAWxqF,KAAOq8B,EACjD,C,iMCSA,MAAMquD,EAAW,IACXC,EAAmB,IAAIhlE,OAAQ,IAAGohB,EAAAA,EAAalhB,WAAY,KAC3D+kE,EAAuB,IAAIjlE,OAAQ,GAAEC,EAAAA,IAAgBC,UAAW,KAEvD,SAASugB,EACtBG,EACA/S,EACAkK,EACAI,EACAN,EACA9D,GAEA,MAAM,wBAAEmxD,EAAuB,yBAAEC,IAA6BnqF,EAAAA,EAAAA,OAEvD+lC,EAAkBC,EAAoBC,IAAwBtjC,EAAAA,EAAAA,IAAQ,GAEvEynF,GAA4B/hD,EAAAA,EAAAA,KAAqB,KACrD,MAAM5qB,EAAOoV,IACb,IAAK+S,IAAcnoB,IAAS0f,KAAqBktD,UAAW,OAG5D,IADiB5sE,EAAKyD,MAAMilB,EAAAA,GAAqBC,EAAAA,EAAenhB,EAAAA,KACjD,OAEf,MAAMqlE,GAAsBC,EAAAA,EAAAA,IAAuB1tD,EAAS95B,SAE5D,OAAOunF,EAAoBppE,MAAMilB,EAAAA,GAAqB6jD,EAAmBC,KAAwB,EAAE,GAClG,CAACp3D,EAASsK,EAAmBN,EAAU+I,GAAYmkD,GAEhDS,GAAeh3D,EAAAA,EAAAA,GACnB42D,EAA2B,CAACA,EAA2Bv3D,EAASsK,IAAoB,GAGhFp+B,GAAW20B,EAAAA,EAAAA,IAAgB,IAAMp0B,QAAQkrF,MAAiB,CAACA,IAC3DC,EAAkBnrF,QAAQy5B,GAAc51B,SAE9C/B,EAAAA,EAAAA,KAAU,KACR,IAAKwkC,IAAc7mC,EAAU,OAE7B,MAAM2rF,EAAYF,IACdE,EACGD,GACHP,EAAwB,CACtBhpD,MAAOiF,EAAAA,GAAqBukD,EAAYA,EAAUxpE,MAAM,kBAAkB,KAI9EipE,GACF,GACC,CAACvkD,EAAW7mC,EAAUyrF,EAAcC,EAAiBN,EAA0BD,IAElF,MAAM1kD,GAAoBhgC,EAAAA,EAAAA,IAAiB07B,IACzC,MAAMwpD,EAAYF,IAClB,IAAK5kD,IAAc8kD,EAAW,OAE9B,MAAM7xE,EAAUgkB,EAAS95B,QACnBunF,GAAsBC,EAAAA,EAAAA,IAAuB1xE,GAC7C8xE,EAAYxkD,EAAAA,GACdukD,EAEAA,EAAU7vE,QAAQ,wBAAyB,QACzC+vE,EAAQ,IAAI5lE,OAAQ,IAAG2lE,UAAmB,IAE1CE,EADUP,EAAoBppE,MAAM0pE,GAAQ,GAC5BznF,OAASunF,EAAUvnF,OACnC48B,EAAUuqD,EAAoBzvE,QAAQ+vE,GAAOzpD,EAAAA,EAAAA,IAAqBD,GAAO4pD,OAAOD,IAChFE,EAAqBlyE,EAAQ0I,UAAUV,UAAUypE,EAAoBnnF,QAE3E45B,EAAS,GAAEgD,IAAUgrD,MAErBlqD,EAAAA,EAAAA,KAAoB,MAClBC,EAAAA,EAAAA,GAAqBjoB,GAAS,GAAM,EAAK,GACzC,IAKJ,OAFAzX,EAAAA,EAAAA,IAAU6kC,EAAsB,CAACA,EAAsBpT,IAEhD,CACLyS,yBAA0BhmC,QAAQP,GAAY0rF,IAAoB1kD,GAClER,wBAAyBS,EACzBR,oBAEJ,C,iOCnEA,IAAIwlD,EACAC,EACAC,EAEAC,EACAC,EACJ,MAAMC,EAAe,GACfC,EAAoB,EAEpBvB,EAAW,IAEXwB,GAA0B1mE,EAAAA,EAAAA,IAiJhC,SAA6BlkB,EAA6B6qF,EAA0BvpD,GAClF,OAAKthC,GAAS6qF,EAAeroF,OAItBrC,OAAOC,QAAO0qF,EAAAA,EAAAA,IAAW9qF,EAAM6qF,IAAiBxqF,MAAM,EAAGihC,GAHvDF,EAAAA,CAIX,IAtJM2pD,GAAqB7mE,EAAAA,EAAAA,IAwJ3B,SACElkB,EACA60B,EACAC,GAEA,MAAM6iB,EAASx3C,OAAOC,OAAOJ,GAEvBgrF,GAAWC,EAAAA,EAAAA,IAA4BtzC,EAAQ,UAC/CuzC,EAAsBr2D,GACxBs5C,EAAAA,EAAAA,IAAUt5C,GAAoBs2D,GACvBhrF,OAAOC,QAAO0qF,EAAAA,EAAAA,IAAWE,EAAUG,MAE1C,CAAC,EACCC,EAAkBt2D,GACpBq5C,EAAAA,EAAAA,IAAUr5C,GAAgBq2D,GACnBhrF,OAAOC,QAAO0qF,EAAAA,EAAAA,IAAWE,EAAUG,MAE1C,CAAC,EAECE,EAAY,IAAKH,KAAwBE,GACzCxyD,EAAY,GAAgBvV,OAAOljB,OAAOouB,KAAK28D,GAAsB/qF,OAAOouB,KAAK68D,IAEjFE,EAAS3zC,EAAOpxB,QAAO,CAACxa,EAAQw0B,KACpCA,EAAMgrD,MAAMn+E,SAASgW,IACdrX,EAAOqX,KACVrX,EAAOqX,GAAQ,IAGjBrX,EAAOqX,GAAM3gB,KAAK89B,EAAM,IAGnBx0B,IACN,CAAC,GAEEw/E,EAAQprF,OAAOouB,KAAK+8D,GACpBE,EAAe5yD,EAASrS,QAAO,CAAC/Y,EAAKi+E,IAAY/gF,KAAK8C,IAAIA,EAAKi+E,EAAQjpF,SAAS,GAEtF,MAAO,CACL6oF,YACAzyD,WACA0yD,SACAC,QACAC,eAEJ,IAnMME,GAAsBxnE,EAAAA,EAAAA,IAqM5B,SAAyBynE,EAAkBnrF,EAAgB8gC,GACzD,MAAM,UACJ+pD,EAAS,SAAEzyD,EAAQ,OAAE0yD,EAAM,MAAEC,EAAK,aAAEC,GAClCG,EAEJ,IAAIC,EAAmB,GAEvB,GAAIprF,EAAOgC,OAASgpF,EAClB,OAAOpqD,EAAAA,EAGT,MAAMyqD,EAAkBjzD,EAASp4B,QAAQirF,GAAYA,EAAQ9jD,WAAWnnC,KAAS2lD,OACjFylC,EAAUA,EAAQvoE,OAAOljB,OAAOC,QAAO0qF,EAAAA,EAAAA,IAAWO,EAAYQ,IAAkBC,QAGhF,MAAMC,EAAeR,EAAM/qF,QAAQ4iB,GAASA,EAAKukB,WAAWnnC,KAK5D,OAJAorF,EAAUA,EAAQvoE,OAAOljB,OAAOC,QAAO0qF,EAAAA,EAAAA,IAAWQ,EAAQS,IAAeD,QAEzEF,GAAUI,EAAAA,EAAAA,IAAOJ,GAEZA,EAAQppF,OAINopF,EAAQvrF,MAAM,EAAGihC,GAHfF,EAAAA,CAIX,IA5NA,IACEopD,EAAkB,wCAClBC,EAAoB,SACtB,CAAE,MAAOx7E,GAEPu7E,EAAkB,yCAClBC,EAAoB,aACtB,CAEe,SAAS/lD,EACtBO,EACA/S,EACAkK,GAKA,IAJArB,EAAO7wB,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG0V,EAAAA,IACVirE,EAAwB3gF,UAAA1H,OAAA,EAAA0H,UAAA,QAAAzL,EACxBo2B,EAA4C3qB,UAAA1H,OAAA,EAAA0H,UAAA,QAAAzL,EAC5Cq2B,EAAwC5qB,UAAA1H,OAAA,EAAA0H,UAAA,QAAAzL,EAExC,MAAO2mC,EAAkBC,EAAoBC,IAAwBtjC,EAAAA,EAAAA,IAAQ,IAEtEhC,EAAMisF,IAAW1jF,EAAAA,EAAAA,OACjBg8B,EAAgB2nD,IAAqB3jF,EAAAA,EAAAA,IAAkB64B,EAAAA,IACvDoD,EAAsB2nD,IAA2B5jF,EAAAA,EAAAA,IAAuB64B,EAAAA,IAG/E3gC,EAAAA,EAAAA,KAAU,KAGR,SAASogF,IACPoL,EAAQ1B,EAAU5yC,OACpB,CAJK1S,IAMDslD,EACF1J,IAiGNloE,iBAQE,OAPK0xE,IACHA,EAAmB,qCACnBC,SAAsBD,GAAkBrlE,QAExCulE,GAAY6B,EAAAA,EAAAA,IAAgB9B,IAGvBD,CACT,CAxGMgC,GAAkBhd,KAAKwR,GACzB,GACC,CAAC57C,IAEJ,MAAMqnD,GAA2B5kD,EAAAA,EAAAA,KAAqB,KACpD,MAAM5qB,EAAOoV,IACb,OAAO+S,GAAanoB,EAAKiD,SAAS,MAAO4lB,EAAAA,EAAAA,GAAiB7oB,GAAMyD,MAAMiqE,KAAmB,GAAGhiD,YAAS/pC,CAAS,GAC7G,CAACyzB,EAAS+S,GAAYmkD,GAEnBmD,GAAe15D,EAAAA,EAAAA,GACnBy5D,EAA0B,CAACA,EAA0Bp6D,IAAU,GAG3Ds6D,GAAiB3nF,EAAAA,EAAAA,IAAiB8yC,IAGtC,GAFAu0C,EAAkBv0C,GAEdA,IAAWvW,EAAAA,EAEb,YADA+qD,EAAwB/qD,EAAAA,GAI1B,MAAMqrD,EAAe90C,EAAOr3C,KAAKigC,GAAUA,EAAMmsD,SAC3Ct0D,GAAeu0D,EAAAA,EAAAA,KACnBC,EAAAA,EAAAA,MAA2B9sF,EAAAA,EAAAA,MAAa2sF,GACxC,MAEFN,EAAwB/zD,EAAa,IAGjCqM,GAAc5/B,EAAAA,EAAAA,IAAgB,SAAC07B,GAAgD,IAApBssD,EAAO3iF,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GACtE,MAAM4S,EAAOoV,IACb,IAAKpV,EAAM,OAEX,MAAMgwE,EAAUhwE,EAAKiwE,YAAY,IAAKF,EAAU/vE,EAAKiwE,YAAY,KAAO,OAAItuF,GAE5E,IAAiB,IAAbquF,EAAgB,CAClB,MAAME,EAA6B,iBAAVzsD,GAAqB1vB,EAAAA,EAAAA,GAAW0vB,EAAO,CAAC,gBAAiBC,EAAAA,EAAAA,IAAqBD,GACvGnE,EAAS,GAAEtf,EAAKoD,UAAU,EAAG4sE,KAAWE,KAExC,MAAMxtD,EAAezE,IAAYnb,EAAAA,IAC7BvH,SAASkY,cAA8ByZ,EAAAA,KACvC3xB,SAASonB,eAAe1E,IAE5BmF,EAAAA,EAAAA,KAAoB,MAClBC,EAAAA,EAAAA,GAAqBX,GAAc,GAAM,EAAK,GAElD,CAEAgtD,EAAeprD,EAAAA,EACjB,IAqCA,OAnCA3gC,EAAAA,EAAAA,KAAU,KACR,MAAMwsF,EAAYV,IAClB,IAAKU,IAAcjtF,EAEjB,YADAwsF,EAAeprD,EAAAA,GAIjB,MAAM8rD,EAAsBD,EAAUzqF,OAAS,GAAKyqF,EAAUE,SAAS,KAEjE3sF,EAASysF,EAAU/sE,UAAU,EAAGgtE,EAAsB,EAAID,EAAUzqF,OAAS,OAAI/D,GACvF,IAAImtF,EAAmBxqD,EAAAA,EAEvB,GAAK5gC,GAEE,GAAuB,IAAlBA,EAAOgC,QAAgBioF,EAAkB2C,KAAK5sF,IAAYA,EAAOgC,QAAUmoF,EAAmB,CACxG,MAAMgB,EAAUZ,EAAmB/qF,EAAM60B,EAAmBC,GAC5D82D,EAAUF,EAAoBC,EAASnrF,EAAO2jB,cAAeumE,EAC/D,OAJEkB,EAAUhB,EAAwB5qF,EAAM6qF,EAAgBH,GAMrDkB,EAAQppF,OAKT0qF,EACFzoD,EAAYmnD,EAAQ,GAAGc,QAAQ,GAE/BF,EAAeZ,GAPfY,EAAeprD,EAAAA,EAQjB,GACC,CACDvM,EAAmB70B,EAAMusF,EAAcz3D,EAAe2P,EAAaomD,EAAgB2B,KAGrF/rF,EAAAA,EAAAA,IAAU6kC,EAAsB,CAACA,EAAsBpT,IAEhD,CACLmS,mBAAoB1lC,QAAQ4lC,EAAe/hC,QAAUgiC,EAAqBhiC,UAAY4iC,EACtFd,kBAAmBe,EACnBd,iBACAC,uBACAC,cAEJ,C,oLC7JA,MAAM2kD,EAAW,IAEjB,IAAIiE,EACJ,IACEA,EAAqB,iCACvB,CAAE,MAAOp+E,GAEPo+E,EAAqB,6BACvB,CAEe,SAASjnD,EACtBnB,EACA/S,EACAkK,EACAI,EACAN,EACA7D,EACAE,EACArD,GAEA,MAAOqgB,EAAe+3C,IAAoB/kF,EAAAA,EAAAA,OACnC68B,EAAkBC,EAAoBC,IAAwBtjC,EAAAA,EAAAA,IAAQ,GAEvEurF,GAA8B7lD,EAAAA,EAAAA,KAAqB,KACvD,MAAM5qB,EAAOoV,IACb,IAAK+S,IAAczI,KAAqBktD,YAAc5sE,EAAKiD,SAAS,KAAM,OAE1E,MAAM4pE,GAAsBC,EAAAA,EAAAA,IAAuB1tD,EAAS95B,SAE5D,OAAOujC,EAAAA,EAAAA,GAAiBgkD,GAAqBppE,MAAM8sE,KAAsB,GAAG7kD,MAAM,GACjF,CAACvD,EAAW/S,EAASsK,EAAmBN,GAAWktD,GAEhDoE,GAAiB36D,EAAAA,EAAAA,GACrB06D,EAA6B,CAACA,EAA6Br7D,EAASsK,IAAoB,GAGpFixD,GAAoB56D,EAAAA,EAAAA,IAAiB,IAClCoS,GAAa/S,IAAUyV,WAAW,MACxC,CAACzV,EAAS+S,KAEbxkC,EAAAA,EAAAA,KAAU,KACR,MAAMitF,EAAcF,IAEpB,IAAKE,IAAiBr1D,IAAoBE,EAExC,YADA+0D,OAAiB7uF,GAKnB,MAAMoB,GAAYC,EAAAA,EAAAA,MAAYC,MAAMC,KACpC,IAAKH,EAEH,YADAytF,OAAiB7uF,GAInB,MAAMkvF,EAAYt1D,GAAkB9R,QAAO,CAACC,EAAeonE,KACrDA,EAAO54E,SAAWkgB,GACpB1O,EAAI/jB,KAAKmrF,EAAO54E,QAGXwR,IACN,IAEGhmB,EAASktF,EAAYxtE,UAAU,GAC/B2tE,GAAcC,EAAAA,EAAAA,KAAkB9B,EAAAA,EAAAA,IAAO,IACtCyB,KAAuBl1D,GAAoB,MAC5Co1D,GAAa,KACf9tF,EAAWW,GAEf8sF,EAAiBntF,OAAOC,QAAO0qF,EAAAA,EAAAA,IAAWjrF,EAAWguF,IAAc,GAClE,CAAC34D,EAAemD,EAAkBE,EAAiBi1D,EAAgBC,IAEtE,MAAMvnD,GAAgBrhC,EAAAA,EAAAA,IAAgB,SAACqO,GAAsC,IAAvB66E,EAAU7jF,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GAC9D,IAAKgJ,EAAK+B,aAAc2jC,EAAAA,EAAAA,IAAuB1lC,GAC7C,OAGF,MAAM0D,GAAe6qC,EAAAA,EAAAA,IAAgBvuC,GAC/B86E,GAAsBp1C,EAAAA,EAAAA,IAAuB1lC,IAAS,GACtD+6E,EAAer3E,EAChB,IAAGA,IACH,uEAEqBoL,EAAAA,GAAsBC,yCAC1B/O,EAAKxU,0EAGpBsvF,QAED91E,EAAUgkB,EAAS95B,QAEnB8rF,EAA2BC,GADLvE,EAAAA,EAAAA,IAAuB1xE,IAE7C40E,EAAUoB,EAAyBnB,YAAY,KAC/CqB,GAAsBx3E,EAAeA,EAAapU,OAAS,EAAIwrF,EAAoBxrF,SACpF0rF,EAAyB1rF,OAASsqF,GAEvC,IAAiB,IAAbA,EAAgB,CAClB,MAAM1tD,EAAW,GAAE8uD,EAAyBG,OAAO,EAAGvB,KAAWmB,UAC3D7D,EAAqB+D,EAAoBj2E,EAAQ0I,WAAWV,UAAUguE,EAAyB1rF,QAC/F8rF,GAAgBC,EAAAA,EAAAA,IAAiBr2E,GACvCkkB,EAAS,GAAEgD,IAAUgrD,MAErBlqD,EAAAA,EAAAA,KAAoB,KAClB,MAAMsuD,EAAmBF,EAAgBF,EAAqB,GAC9DjuD,EAAAA,EAAAA,GAAqBjoB,EAAS61E,GAC1BS,GAAoB,IACtBC,EAAAA,EAAAA,IAAiBv2E,EAASs2E,EAC5B,GAEJ,CAEAlB,OAAiB7uF,EACnB,IAIA,OAFAgC,EAAAA,EAAAA,IAAU6kC,EAAsB,CAACA,EAAsBpT,IAEhD,CACL8T,qBAAsBrnC,QAAQ42C,GAAe/yC,SAAW4iC,GACxDa,oBAAqBZ,EACrBa,gBACAC,qBAAsBoP,EAE1B,CAIA,SAAS44C,EAAoBrxE,GAC3B,OAAOA,EAAK5C,QAAQ,kCAAmC,OACzD,C,6LCnJA,MCgHA,GAAevc,EAAAA,EAAAA,KApFf,SAAkBqB,GAEL,IAFM,MACjBy3B,EAAK,UAAEi4D,EAAS,YAAE/xC,EAAW,YAAEgyC,GACtB3vF,EACT,MAAM,gBAAE4vF,EAAe,qBAAEC,EAAoB,iBAAEj6E,IAAqBvV,EAAAA,EAAAA,MAE9DC,GAAOC,EAAAA,EAAAA,MACP,SAAE4I,IAAaC,EAAAA,EAAAA,MACf0mF,EAAYr4D,GAAS,cAAeA,EACpC53B,EAAW43B,GAAS,YAAaA,EACjC1uB,EAAQlJ,EAAW43B,EAAM7uB,QAAQG,WAAQtJ,EACzCswF,EAAYlwF,GAAWmwF,EAAAA,EAAAA,IAAkBv4D,QAASh4B,EAClDwwF,GAAa1rF,EAAAA,EAAAA,GAASwrF,GACtB5rF,EAAYtE,EAAYkJ,EAAQA,EAAM5E,WAAWC,QAAUqzB,EAAM7uB,QAAQsrB,OAAO/vB,WAAWC,aAAW3E,EACtG4/E,GAAWt9E,EAAAA,EAAAA,GAAiBkuF,GAAY,IACxC,aAAEtuF,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAAkBlC,QAAQ0/E,IACnE6Q,GAAuBrwC,EAAAA,EAAAA,GAC3B17C,EACA2rF,IAAcJ,EACdvmF,IAAa22C,EAAAA,IAGTzuC,GAAgBlP,EAAAA,EAAAA,GDjDD,uBCmDnB,gBACEwtF,GAAeG,IDpD+I,uBCqDhKA,GDrDiM,uBCsDjMJ,GDtDoD,yBCyDtDjuF,EAAAA,EAAAA,KAAU,MACJg2B,GAAW53B,GAAYiwF,GACzBD,EAAqB,CAAEx5E,OAAQohB,EAAMphB,OAAQ85E,SAAU,CAAC14D,EAAM/3B,KAChE,GACC,CAAC+3B,EAAOq4D,EAAWjwF,IAEtB,MAAMq9C,GAAcr3C,EAAAA,EAAAA,IAAgB,KAC9BiqF,EACFl6E,EAAiB,CACfvO,QAAS/G,EAAK,mBAKlBsvF,EAAgB,CACdv5E,OAAQohB,EAAOphB,OACfse,QAAS8C,EAAO/3B,GAChB0wF,cAAc,EACdC,eAAe,GACf,IAGJ,OACEpuF,EAAAA,GAAAC,cAAA,OACEjC,UAAWoR,EACXjP,QAASutF,EAAczyC,OAAcz9C,IAEnCqwF,GAAaJ,GAAaztF,EAAAA,GAAAC,cAAA,UAAQ+E,IAAKipF,EAAsBjwF,UAAU,yBACxE0B,GACCM,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAA,OACEkE,IAAKi5E,EACLt8D,IAAI,GACJ9iB,WAAWkC,EAAAA,EAAAA,GD1FqG,uBC0FxEutF,GD1FyC,uBC0FR9tF,GACzE0E,WAAW,IAEZzG,GAAYoC,EAAAA,GAAAC,cAACouF,EAAAA,EAAgB,CAAC74D,MAAOA,EAAOx3B,UAAW2B,KAG3DkuF,GACC7tF,EAAAA,GAAAC,cAAA,YACED,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GDlGkN,uBCkG/K,2BAA4B,mBAC5E7B,EAAK,yBAGTX,QAAQoJ,GAAO2B,WACdzI,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,2BACZ+R,EAAAA,EAAAA,IAAoBjJ,EAAO2B,WAG/BizC,GAAe17C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAGtC,G,wECtGA,MAQA,EARiD4D,IAC/C,MAAM,OAAE6nB,GAAW7nB,EACbsvE,GAAuB/qD,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,wBAAyBoD,GAGrF,OAAOynD,EAAuBlxE,EAAAA,GAAAC,cAACixE,EAAyBtvE,QAAYpE,CAAS,C,qPC6C/E,MAuKA,EAvK4BO,IAoBtB,IApBuB,GAC3BN,EAAE,QACF2H,EAAO,oBACP4zC,EAAmB,UACnBvzC,EAAS,YACTyzC,EAAW,eACXo1C,EAAc,WACd3oF,EAAU,eACVL,EAAc,YACdipF,EAAW,KACXvqF,EAAO,SAAQ,WACfwqF,EAAU,YACVC,EAAW,eACXzd,EAAc,qBACd0d,EAAoB,cACpB9oF,EAAa,YACb81C,EAAW,MACXv2C,EAAK,QACLhF,EAAO,eACPmG,GACDvI,EAEC,MAAMiH,GAAMrE,EAAAA,EAAAA,IAAuB,MAE7BsxB,GAAS08D,EAAAA,EAAAA,IAAgBvpF,KAAYwpF,EAAAA,EAAAA,IAAuBxpF,GAC5Dw1C,EAAe3oB,EAAMla,QAErBkiC,GAAiBC,EAAAA,EAAAA,IAAkBl1C,EAAKg0C,IAExC,SAAE9xC,IAAaC,EAAAA,EAAAA,OACdkzC,EAAeC,IAAoBhzC,EAAAA,EAAAA,IAAS4xC,GAC7C3xC,EAAa8yC,GAAiBJ,GAC9B,UACJtyC,EAAS,aAAEE,IACTE,EAAAA,EAAAA,IAAyBN,EAAAA,EAAAA,IAAoBrC,EAASpB,IAAQuD,GAC5DihD,EAAgB5N,GAAgBjzC,EAEhCknF,EAAwBnxF,QAAQ6wF,IAC/B9wC,IAAan2C,EAAAA,EAAAA,KAAUkhD,GACxB9K,EAAUhgD,QAAQ8qD,GAClB7K,GAAWmxC,EAAAA,EAAAA,GAAwB1pF,EAASs4C,GAC5CuwC,IAAuBa,EAAAA,EAAAA,GAAwB1pF,GAAUypF,GACzD3rF,IAAkBC,EAAAA,EAAAA,IAAoBu6C,GACtCz7C,IAAe04C,EAAAA,EAAAA,IAA4Bv1C,IAE1Cq8C,GAAe,CAAGC,KAAe3gD,EAAAA,EAAAA,GAAQkxB,EAAMsO,YAGpD14B,aAAcC,KACZC,EAAAA,EAAAA,IACFN,EAAAA,EAAAA,IAAoBrC,EAAS,aAAcQ,GAAegC,EAAAA,EAAAA,IAAsBxC,EAAS,cAGrF,YACJiI,GAAW,eAAEC,GAAc,iBAAEC,KAC3BC,EAAAA,EAAAA,IACFpI,EACAE,IAAmBM,EAAgBkC,GAAmBD,GACtDN,IAAeihD,GAEXumC,IAAiD,KAA/BpzD,EAAAA,EAAAA,GAAY0e,IAGlC36C,aAAc+N,GACd9N,qBAAsB+N,KACpB9N,EAAAA,EAAAA,GAAkB0N,QAAgB9P,EAAWuxF,GAAiB,SAEhErvF,aAAcsvF,GACdrvF,qBAAsBsvF,KACpBrvF,EAAAA,EAAAA,IAAmB4oD,IAAkBnO,GAEnCY,IAAcr3C,EAAAA,EAAAA,IAAgB,KAC9ByJ,GACF/G,IAAiBlB,GAIdojD,EAKD/G,GACFC,KAIFvhD,IAAUiF,EAAQ3H,IAThB68C,GAAkB40C,IAAeA,GASd,IAGjBpmF,IAAQC,EAAAA,EAAAA,IAAa3D,IAC3BojC,EAAAA,EAAAA,IAA4BlpC,IAAgC,IAA9B6vF,GAAyB7vF,EACrD,IAAKovF,EAIH,YAHIS,GACFnqF,EAAI7D,QAASkqB,QAAwB+jE,EAAAA,KAA2BjvE,gBAAgBkvE,EAAAA,MAKpF,MAAMC,EAAYtqF,EAAI7D,QAASkqB,QAAwB+jE,EAAAA,KACnD5mC,GACF+mC,EAAAA,EAAAA,GAAoB/mC,EAAe1/C,GAAOnD,EAAYR,GAAOipE,MAAMohB,KACjE7sD,EAAAA,EAAAA,KAAgB,KACd2sD,EAAUrrF,MAAMqnB,YAAY,gBAAiBkkE,GAC7CF,EAAU1uE,aAAayuE,EAAAA,IAA2B,GAAG,GACrD,IAGJC,EAAUj4E,UAAUxT,IAAI,qBAC1B,GACC,CAAC6qF,EAAsBlmC,EAAe1/C,GAAOwlF,EAAgB3oF,EAAYR,IAE5E,MAAM,MAAE2G,GAAK,OAAEC,GAAM,QAAE0jF,IAAYjB,IAAckB,EAAAA,EAAAA,IAAyBtqF,EAASqpF,EAAahpF,EAAWyB,GAErGlJ,IAAYkC,EAAAA,EAAAA,GAChB,eACCmN,KAAgB2jE,GAAkB,cACnCye,IAAW,cACX3jF,KAAUC,IAAU,eACpBA,GAAS4jF,EAAAA,IAAoB,kBAGzBC,GAAkBpB,EAAc,WAAU1iF,eAAkB0iF,EAAWhiF,aAAagiF,EAAW/hF,OAAS,GACxGxI,GAAiB,WAATD,EAAqB,WAAU+H,QAAY6jF,UAAoBpyF,EAE7E,OACEwC,EAAAA,GAAAC,cAAA,OACExC,GAAIA,EACJuH,IAAKA,EACLhH,UAAWA,GACXiG,MAAOA,GACP9D,QAASkN,QAAc7P,EAAYy9C,IAElC4zC,GAAyB7uF,EAAAA,GAAAC,cAAA,UAAQ+E,IAAKipF,GAAsBjwF,UAAU,yBACvEgC,EAAAA,GAAAC,cAAA,OACEkE,IAAKqkD,EACLxqD,WAAWkC,EAAAA,EAAAA,GAAe,aAAc2uF,GAAyB,mBACjE/tE,IAAI,GACJ7c,MAAOsqF,EAAe,UAASA,WAAkB/wF,EACjD6G,WAAYq3C,IAEb+B,GACCz9C,EAAAA,GAAAC,cAAA,UAAQ+E,IAAK24C,EAAU3/C,WAAWkC,EAAAA,EAAAA,GAAe,YAAagD,MAE/Dw4C,GAAe17C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAC/ByP,KAAwBuhF,IACvBhvF,EAAAA,GAAAC,cAAA,OAAKjC,UAAY,iBAAgB0P,MAC/B1N,EAAAA,GAAAC,cAACsQ,EAAAA,EAAe,CAAC5E,SAAU4B,GAAkBpN,QAASkN,GAAc4tC,QAAcz9C,KAGrFwxF,IACIhvF,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe,OAAQ,gBAAiB+uF,MAC3DjvF,EAAAA,GAAAC,cAAC+8C,EAAAA,EAAY,CACXC,UAAWwE,GACXI,eAAa,EACb5/C,aAAcA,GACd6J,MAAOA,GACPC,OAAQA,GACR/N,UAAU,kBAEXsP,IACCtN,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,6BAA6ByL,KAAKjJ,MAAyB,IAAnB+M,IAAwB,KAE9E,C,+IC/MV,MAAMsiF,EAAgB,EAAIzxC,EAAAA,GAUpB0xC,GAAKC,EAAAA,EAAAA,GAAuB,4BA8DlC,GAAerzF,EAAAA,EAAAA,KA5DgCqB,IAMzC,IAN0C,SAC9Cg0C,EAAQ,QACRxY,EAAO,kBACPy2D,EAAiB,OACjBC,EAAM,iBACN38C,GACDv1C,EACC,MAAMmyF,GAAkB5tF,EAAAA,EAAAA,GAAU,UAASyvC,EAASo+C,iBAAiB1yF,MAAO87B,GAAWy2D,GACjFroF,GAAYrF,EAAAA,EAAAA,GAAU,WAAUyvC,EAASq+C,iBAAiB3yF,MAAO87B,GAAWy2D,GAC5EK,GAAiB/tF,EAAAA,EAAAA,GAAU,WAAUyvC,EAAS6a,YAAYnvD,MAAOuyF,IAChEz8B,EAAmBC,IAAuBzyD,EAAAA,EAAAA,MAE1CuvF,EAAY,CAAGC,IAAqBxvF,EAAAA,EAAAA,IAAQ,IAC5CqG,EAAaopF,EAAUC,IAAc1vF,EAAAA,EAAAA,KAM5C,OACEf,EAAAA,GAAAC,cAAA,OACEjC,UAAW8xF,EAAG,IAAKG,GAAU,UAC7B9vF,QAPJ,WACEmzC,EAAiBvB,EAASA,SAC5B,EAMIhoB,aAAcwP,IAAY+2D,EAAcE,OAAWhzF,GAElDwyF,GACChwF,EAAAA,GAAAC,cAAA,OACEjC,UAAW8xF,EAAG,eACd3rF,IAAKksF,EACLvvE,IAAI,GACJzc,WAAW,KAGbkvD,IAAsBy8B,GACtBhwF,EAAAA,GAAAC,cAACi0D,EAAAA,EAAe,CACd5zD,IAAKyxC,EAASo+C,iBAAiB1yF,GAC/BiF,OAAQwtF,EACR77B,KAAMi8B,EACNh8B,QAAM,EACNtwD,KAAM6rF,EACNh/B,QAAS0/B,EACTt8B,aAAW,KAGbq8B,IAAgBN,GAChBhwF,EAAAA,GAAAC,cAACi0D,EAAAA,EAAe,CACd5zD,IAAKyxC,EAASq+C,iBAAiB3yF,GAC/BiF,OAAQiF,EACR0sD,KAAMjtD,EACNktD,QAAM,EACNtwD,KAAM6rF,EACNvrF,OAAQkvD,EACR3C,QAAS4/B,EACTx8B,aAAW,IAGX,IC9CJ67B,GAAKC,EAAAA,EAAAA,GAAuB,oBA2FlC,GAAerzF,EAAAA,EAAAA,KAxFwBqB,IAYjC,IAZkC,sBACtCs1C,EAAqB,aACrBxd,EAAY,iBACZ66D,EAAgB,iBAChBC,EAAgB,mBAChBC,EAAkB,UAClBr9C,EAAS,QACTha,EAAO,sBACPL,EAAqB,iBACrBoa,EAAgB,WAChBE,EAAU,UACVx1C,GACDD,EAEC,MAAMiH,GAAMrE,EAAAA,EAAAA,IAAuB,MAC7BtC,GAAOC,EAAAA,EAAAA,KAEPs3B,GAAqBj3B,EAAAA,EAAAA,KAAQ,KACjC,MAAMkyF,EAAYx9C,GAAuBh0C,KAAKmtD,IAC5C,IAAIA,EAAkBskC,aACjBv9C,GAAem9C,IAAqBK,EAAAA,EAAAA,IAAgBvkC,EAAkBza,SAAU2+C,QAGjFE,GAAsBD,GAAoBA,EAAiBpvF,QAAUqvF,IACnED,EAAiBvjE,MAAK9tB,IAAA,IAAC,SAAEyyC,GAAUzyC,EAAA,OAAKotD,EAAAA,EAAAA,IAAe3a,EAAUya,EAAkBza,SAAS,KAGlG,OAAOya,CAAiB,IACvBjtD,OAAO7B,UAAY,GAEtB,OAAOszF,EAAAA,EAAAA,IAAcH,EAAWh7D,EAAa,GAC5C,CAACwd,EAAuBs9C,EAAkBD,EAAkBn9C,EAAWq9C,EAAoB/6D,IAExFo7D,GAAoBtyF,EAAAA,EAAAA,KAAQ,IACKuyF,IAA9Bt7D,EAAmBr0B,OACtBq0B,EACAA,EAAmBx2B,MAAM,EAtCR,IAuCpB,CAACw2B,IACEu7D,EAAiBF,EAAkB1vF,OAASq0B,EAAmBr0B,OAE/D6vF,GAAsBzyF,EAAAA,EAAAA,KAAQ,KAClC,MAAM0yF,EAAkBV,GAAkBpxF,QAAO1C,IAAA,IAAC,YAAEy0F,GAAaz0F,EAAA,YAAqBW,IAAhB8zF,CAAyB,KAAK,GACpG,OAAO,IAAIvuF,IAAIsuF,EAAgBhyF,KAAIuS,IAAA,IAAC,SAAEmgC,GAAUngC,EAAA,OAC9Cq/E,EAAkBM,WAAWt/B,GAAMA,IAAKvF,EAAAA,EAAAA,IAAeuF,EAAElgB,SAAUA,IAAU,IAC5E,GACF,CAAC4+C,EAAkBM,IAEhBO,GAAsB5tF,EAAAA,EAAAA,IAAgB,KAC1C,MAAM6tF,EAAQzsF,EAAI7D,SAAS+M,yBAA2B,CAAE1B,EAAG,EAAGC,EAAG,GACjE+mC,EAAW,CACThnC,EAAGilF,EAAMjlF,EACTC,EAAGglF,EAAMhlF,GACT,IAGJ,GAAKwkF,EAAkB1vF,OAEvB,OACEvB,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe4vF,EAAG,IAAKzxF,EAAKsD,OAAS,SAAU3D,GAAYgH,IAAKA,GAC9EhF,EAAAA,GAAAC,cAAA,OAAKjC,UAAW8xF,EAAG,eAAgBzxF,EAAKsD,OAAS,WACjD3B,EAAAA,GAAAC,cAAA,OAAKjC,UAAW8xF,EAAG,kBACjB9vF,EAAAA,GAAAC,cAAA,OAAKjC,UAAW8xF,EAAG,aAAczxF,EAAKsD,OAAS,WAC/C3B,EAAAA,GAAAC,cAAA,OAAKjC,UAAW8xF,EAAG,SAAUpuF,IAAKrD,EAAKsD,MAAQ,WAAQnE,GACpDyzF,EAAkB5xF,KAAI,CAAC0yC,EAAUzwC,IAChCtB,EAAAA,GAAAC,cAACyxF,EAAwB,CACvBpxF,KAAKqxF,EAAAA,EAAAA,IAAqB5/C,EAASA,UACnCxY,QAASA,EACT+Z,iBAAkBA,EAClBvB,SAAUA,EACVi+C,mBAAoB92D,EACpB+2D,OAAQmB,EAAoB7tF,IAAIjC,OAGnC6vF,GACCnxF,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACL4P,MAAM,cACNnS,UAAW8xF,EAAG,aACd3vF,QAASqxF,GAETxxF,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sBAKjB,G,mRCnEV,MAgNA,EAhN4BD,IAgBtB,IAhBuB,GAC3BN,EAAE,QACF2H,EAAO,8BACP02C,EAA6B,8BAC7BC,EAA6B,UAC7Bt2C,EAAS,YACTyzC,EAAW,YACX04C,EAAW,eACXtsF,EAAc,YACdipF,EAAW,WACXC,EAAU,YACVC,EAAW,cACX7oF,EAAa,YACb81C,EAAW,QACXv7C,EAAO,eACPmG,GACDvI,EAEC,MAAMiH,GAAMrE,EAAAA,EAAAA,IAAuB,MAE7B8mD,GAAW9mD,EAAAA,EAAAA,IAAyB,MAEpCmG,GAASy6C,EAAAA,EAAAA,IAAgBn8C,KAAYysF,EAAAA,EAAAA,IAAuBzsF,GAC5Dw1C,EAAe9zC,EAAMiR,SAEpB0pC,EAAe,CAAGC,IAAe3gD,EAAAA,EAAAA,GAAQ+F,EAAMy5B,WAEhDuxD,GAA2B53C,EAAAA,EAAAA,IAAkBl1C,EAAK82C,GAClDi2C,GACJ73C,EAAAA,EAAAA,IAAkBl1C,EAAK+2C,IACpB+1C,EAECE,GAAoBrxF,EAAAA,EAAAA,IAAOmxF,GAC7BC,IAA6BC,EAAkB7wF,UACjD6wF,EAAkB7wF,SAAU,GAG9B,MAAM,SAAE+F,IAAaC,EAAAA,EAAAA,OACdkzC,EAAeC,IAAoBhzC,EAAAA,EAAAA,IAAS4xC,GAC7C3xC,EAAa7J,QAAQ28C,GAAiBy3C,IACrCG,EAAeC,IAAoB5qF,EAAAA,EAAAA,IAAS5J,QAAQk0F,IAAgBnwC,IAErE0wC,GAAgB1qF,EAAAA,EAAAA,IAAoBrC,EAAS,WAC5CgtF,KAAwB9qF,EAAAA,EAAAA,IAAS5J,QAAQy0F,GAAiBlnC,EAAAA,GAA0BknC,MACrF,UAAExqF,GAAS,aAAEE,KAAiBE,EAAAA,EAAAA,GAClCoqF,GAAgB5qF,GAAYK,EAAAA,EAAAA,IAAsBxC,EAAS,WAEvDojD,GAAgB5N,GAAgBjzC,IAC/B0qF,GAAeC,KAAmBvxF,EAAAA,EAAAA,KAEnCkB,IAAe04C,EAAAA,EAAAA,IAA4Bv1C,GAC3CmtF,GAAW70F,QAAQuE,IACnB4sF,GAAwBnxF,QAAQ6wF,GAEhCiE,IAAmB/qF,EAAAA,EAAAA,IAAoBrC,EAAS,YAC/CqtF,KAAsBnrF,EAAAA,EAAAA,IAAS5J,QAAQ80F,IAAoBvnC,EAAAA,GAA0BunC,MACtFE,GAAiBZ,EACjBzvF,IAAiBC,EAAAA,EAAAA,GAASkwF,IAAmBE,IAC7ClvF,IAAoBL,EAAAA,EAAAA,IAAoBovF,IAAYlwF,MAAoBgwF,IAExE30C,IAAW60C,IAAYlwF,IAAkBgwF,GACzC10C,IAAWmxC,EAAAA,EAAAA,GAAwB1pF,EAASs4C,IAC5CuwC,IAAuBa,EAAAA,EAAAA,GAAwB1pF,GAAUypF,IACzD3rF,IAAkBC,EAAAA,EAAAA,IAAoBu6C,IAEtCi1C,GAAWnqC,IAAiBwpC,EAAkB7wF,QAE9CyxF,IAAgBC,EAAAA,EAAAA,GAAoBprC,GAAU,GAAOkrC,KACnD9qF,aAAcC,KAAqBC,EAAAA,EAAAA,IACzCN,EAAAA,EAAAA,IAAoBrC,EAAS,aAC5BQ,GACDgC,EAAAA,EAAAA,IAAsBxC,EAAS,cAG3B,YAAEiI,GAAW,eAAEC,GAAc,iBAAEC,KAAqBC,EAAAA,EAAAA,IACxDpI,EACAE,IAAmBM,EAAgBkC,GAAmBD,IACrDN,IAAe8qF,KAAkBD,IAAyBxsF,GAGvDmpF,IAAiD,KAA/BpzD,EAAAA,EAAAA,GAAY0e,IAElC36C,aAAc+N,GACd9N,qBAAsB+N,KACpB9N,EAAAA,EAAAA,GAAkB0N,KAAmBslF,QAAep1F,EAAWuxF,KAEjEpvF,qBAAsBmzF,KACpBlzF,EAAAA,EAAAA,GAAkBlC,SAAS28C,GAAiBmO,MAAmBypC,IAAkBxkF,MAE9E5I,GAAckuF,KAAmBzrF,EAAAA,EAAAA,IAAiB,GACnD0rF,IAAmBpvF,EAAAA,EAAAA,IAAiBoK,IACxC+kF,GAAgBtpF,KAAK8C,IAAI,EAAGyB,EAAE+zC,cAAc+G,YAAc,GAAG,IAGzDrgD,IAAYwiC,OAAOgoD,SAASxrC,EAAStmD,SAASsH,UAAYg/C,EAAStmD,SAASsH,SAAW3B,EAAM2B,WAAa,EAE1GK,IAAQC,EAAAA,EAAAA,IAAa3D,GACrB8tF,GAAiBx1F,SAAQm0F,EAAAA,EAAAA,IAAuBzsF,KAChD,MACJ0G,GAAK,OAAEC,IACLyiF,IAAc2E,EAAAA,EAAAA,IAAyBrsF,EAAOgC,GAAO2lF,EAAayE,GAAgBztF,EAAWyB,GAE3F+zC,IAAcr3C,EAAAA,EAAAA,IAAgB,KAC9ByJ,GACF/G,IAAiBlB,GAIfQ,GACFxH,EAAAA,EAAAA,MAAaoI,2BAA2B,CAAEpB,YAIvCojD,IAKDA,KAAkBypC,GACpBC,GAAiB,GAGfzwC,EACFC,IAIFvhD,IAAUiF,EAAQ3H,KAbhB68C,GAAkB40C,IAAeA,GAad,IAGjBlxF,IAAYkC,EAAAA,EAAAA,GAChB,oBACCmN,IAAe,cAChBtB,GAAS4jF,EAAAA,IAAoB,kBAIzB1rF,GAAS,WAAU8H,QADDyiF,EAAc,WAAU1iF,eAAkB0iF,EAAWhiF,aAAagiF,EAAW/hF,OAAS,KAG9G,OACEzM,EAAAA,GAAAC,cAAA,OACE+E,IAAKA,EACLvH,GAAIA,EACJO,UAAWA,GACXiG,MAAOA,GACP9D,QAASkN,QAAc7P,EAAYy9C,IAElC4zC,IAAyB7uF,EAAAA,GAAAC,cAAA,UAAQ+E,IAAKipF,GAAsBjwF,UAAU,yBACtE20F,IACC3yF,EAAAA,GAAAC,cAAC8oD,EAAAA,EAAc,CACb/jD,IAAKyiD,EACLtjD,IAAKqkD,GACLxqD,WAAWkC,EAAAA,EAAAA,GAAe,aAAc2uF,IAAyB,mBACjE7lC,QAASipC,GAAiBF,IAA6Ba,GACvD3pC,OAAK,EACLE,MAAI,EACJC,aAAW,EACX/kD,WAAYq3C,EACZ03C,aAAcJ,GACd3pC,QAASipC,GACTruF,MAAOsqF,EAAe,UAASA,WAAkB/wF,IAGrDwC,EAAAA,GAAAC,cAAA,OACEkE,IAAK9B,GACLrE,WAAWkC,EAAAA,EAAAA,GAAe,YAAasD,GAAmBqrF,IAAyB,mBACnF/tE,IAAI,GACJ7c,MAAOsqF,EAAe,UAASA,YAAmB/wF,EAClD6G,WAAYq3C,IAEb62C,KAAaE,IACZzyF,EAAAA,GAAAC,cAAA,UACE+E,IAAK24C,GACL3/C,WAAWkC,EAAAA,EAAAA,GAAe,YAAagD,MAG1Cw4C,GAAe17C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAChCgC,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe,OAAQ,kBAAmB4yF,MACxD9yF,EAAAA,GAAAC,cAAC+8C,EAAAA,EAAY,CACXC,UAAWwE,EACXI,eAAa,EACb5/C,aAAcA,GACd6J,MAAOA,GACPC,OAAQA,GACR/N,UAAU,kBAEXyP,IACCzN,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiBwN,KAC9C1N,EAAAA,GAAAC,cAACsQ,EAAAA,EAAe,CAAC5E,SAAU4B,GAAkBpN,QAAS86C,OAGxDZ,IAAkBmO,IAClBxoD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,wBAEdsP,IAAoBslF,KAAiBhtF,EAKpC5F,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACZ8I,EAAM6R,MAAQ,OAAQ5I,EAAAA,EAAAA,IAAoBtG,KAAK8C,IAAI9D,GAAW5D,GAAc,IAC5E+tF,IAAiB5yF,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,8CANjCgC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,6BACZqP,IAAezH,EAAkB,GAAE6D,KAAKjJ,MAAyB,IAAnB+M,OAA6B,OAQ7E,C,oNCzOV,MAmKA,GAAe7Q,EAAAA,EAAAA,KA/IeqB,IAexB,IAfyB,QAC7BqH,EAAO,oBACP4zC,EAAmB,UACnBvzC,EAAS,YACTyzC,EAAW,YACX04C,EAAW,UACXt/D,EAAS,YACTm8D,EAAW,cACX7oF,GAAgB,EAAK,YACrB81C,EAAW,YACXgyC,EAAW,MACXl4D,EAAK,MACLrwB,EAAK,aACLo0C,EAAY,sBACZ85C,GACDt1F,EACC,MAAM,iBAAEu1F,IAAqBl1F,EAAAA,EAAAA,MACvBg0B,GAAUq8B,EAAAA,EAAAA,IAAkBrpD,IAC5B,SAAE8B,IAAaC,EAAAA,EAAAA,MAEf9I,GAAOC,EAAAA,EAAAA,KAEPi1F,GAAmB3vF,EAAAA,EAAAA,IAAgB,KACvC21C,GAAe,IAGXi6C,GAAyB5vF,EAAAA,EAAAA,IAAgB,KACxCwuB,GACLkhE,EAAiB,CACf55E,IAAK0Y,EAAQ1Y,KACb,KAGI8b,MAAOhI,GAAc4E,GAAW,CAAC,EAIzC,IAFAqhE,EAAAA,EAAAA,GAAejmE,GAAWpZ,OAAQoZ,GAAW/vB,GAAI+3B,IAE5CpD,EACH,OAGF,MAAM,SACJw8B,EAAQ,IACRl1C,EAAG,WACHs1C,EAAU,MACVlgD,EAAK,YACLiE,EAAW,MACXkf,EAAK,MACLnrB,EAAK,KACLoR,GACEka,EACEshE,EAtEmB,mBAsETx7E,EAEVy7E,EAAsBrhE,GADLkD,GAAS,cAAeA,OACyCh4B,ECpGnF,SAA8B0a,GACnC,OAAQA,GACN,IAAK,2BACL,IAAK,6BACL,IAAK,wBACH,MAAO,+BACT,IAAK,mBACH,MAAO,0BACT,IAAK,eACH,MAAO,sBACT,IAAK,qBACH,MAAO,6BACT,IAAK,sBACH,MAAO,qCACT,IAAK,qBACL,IAAK,gBACH,MAAO,wBACT,IAAK,mBACH,MAAO,0BACT,IAAK,gBACH,MAAO,uBACT,IAAK,kBACH,MAAO,0BACT,IAAK,oBACH,MAAO,eACT,IAAK,iBACH,MAAO,wBACT,IAAK,yBACH,MAAO,wBACT,QACE,OAEN,CDoE6D07E,CAAqB17E,GAC1E+2C,GAAuBC,EAAAA,EAAAA,GAASn8C,EA1EhB,KA2EhB8gF,EAAYn2F,QAAQuxD,GAAwBngD,GAAS8/C,GAC3D,IAAIklC,GAAgB,EACpB,GAAID,GAAazhE,GAASH,QAAUG,EAAQtrB,MAAO,CACjD,MAAM,MAAEgF,EAAK,OAAEC,IAAW2jF,EAAAA,EAAAA,IAAyBtqF,OAAS5H,OAAWA,EAAW0J,GAClF4sF,EAAgBhoF,IAAUC,CAC5B,CACA,MAAMgoF,GAAsB9hE,GAASnrB,IAAUyyC,IAAiBu6C,EAE1D91F,GAAYkC,EAAAA,EAAAA,GAChB,UACAoyB,GAAa,aACbwhE,GAAiB,qBAChB7hE,IAAUnrB,IAAUwrB,GAAa,gBAClCxrB,GAAS,cACR+sF,GAAa,aACdF,GAAsB,qBAgBxB,OACE3zF,EAAAA,GAAAC,cAAA,OACEjC,UAAWA,EACX,gBAAe4wD,GAAYI,GAAY,GACvCttD,IAAI,QAEJ1B,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,mBAAoBwzF,GAAW,aAC3DA,GACC1zF,EAAAA,GAAAC,cAAC+zF,EAAAA,EAAS,CAACx+D,MAAOA,EAAOkmB,YAAaA,EAAagyC,YAAaA,EAAaD,WAAS,IAEvFx7D,IAAUnrB,GACT9G,EAAAA,GAAAC,cAACg0F,EAAAA,EAAK,CACJ7uF,QAASA,EACT4zC,oBAAqBA,EACrBvzC,UAAWA,EACXyzC,YAAaA,EACbl1C,KAAM8vF,EAAgB,YAAc,SACpCrF,YAAaA,EACbzd,gBAAiB+iB,EACjBnuF,cAAeA,EACf81C,YAAaA,EACbv2C,MAAOA,EACPhF,QAAS4zF,EAAqBR,OAAmB/1F,EACjD8I,eAAgB+sF,IAGnBQ,GACC7zF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBACbgC,EAAAA,GAAAC,cAACovD,EAAAA,EAAQ,CAACrxD,UAAU,YAAY0b,IAAKA,EAAKjZ,KAAMmuD,GAAYI,KAC1D18B,GAAaxjB,GACb9O,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,eAAc4R,EAAAA,EAAAA,GAAWd,IAEvCmgD,GACCjvD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAAoB4R,EAAAA,EAAAA,GAAWq/C,EAAsB,CAAC,QAAS,UAIhF38B,GAAaxrB,GACb9G,EAAAA,GAAAC,cAACi0F,EAAAA,EAAK,CACJ9uF,QAASA,EACT02C,8BAA+B9C,EAC/BvzC,UAAWA,EACXyzC,YAAaA,EACb04C,YAAaA,EACbnD,YAAaA,EACb7oF,cAAeA,EACf81C,YAAaA,EACbv7C,QAAS4zF,EAAqBR,OAAmB/1F,EACjD8I,eAAgB+sF,KAIrBM,IAjEsB9d,EAiEkB8d,EA/DzC3zF,EAAAA,GAAAC,cAACM,EAAAA,EAAM,CACLvC,UAAU,wBACVgG,KAAK,OACLmM,MAAM,uBACNhQ,QAASqzF,GAERn1F,EAAKw3E,MARZ,IAA2BA,CAkEnB,G,mCEzLV,MAAMse,EAA2B,CAC/BC,KAAM,CACJC,SAAU,mBACVC,SAAU,iBAEZC,MAAO,CACLF,SAAU,mBACVC,SAAU,qBAIC,SAAS/E,EACtBprF,EAAa2E,EAAgBnD,EAAsBR,GAEnD,OAAIQ,EACKqc,QAAQ2D,QAAQwuE,EAAyBhvF,GAAS,SAAS2D,EAAQ,WAAa,aAK3F4O,eAAyCvT,EAAa2E,GACpD,MAAMyP,EAAM,IAAIi8E,MAChBj8E,EAAIpU,IAAMA,EACVoU,EAAIk8E,YAAc,YAEbl8E,EAAIzM,aACD,IAAIkW,SAAS2D,IACjBpN,EAAIm8E,OAAS/uE,CAAO,IAIxB,MAAMja,EAAS0L,SAASnX,cAAc,UAChC+L,EAAMN,EAAOO,WAAW,MAE9BP,EAAOI,MAAQyM,EAAIzM,MACnBJ,EAAOK,OAASwM,EAAIxM,OAEpBC,EAAI2oF,UAAUp8E,EAAK,EAAG,EAAGA,EAAIzM,MAAOyM,EAAIxM,QAExC,MAAMS,EAAI1D,EAAQyP,EAAIzM,MAAQ,EAAI,EAC5BW,EAAI8L,EAAIxM,OAAS,EAGvB,MAAQ,QADMvC,MAAMgW,KAAKxT,EAAI4oF,aAAapoF,EAAGC,EAAG,EAAG,GAAGrD,MACjCgH,KAAK,OAC5B,CA3BSykF,CAA0B1wF,EAAK2E,EACxC,C,wFCRA,MAAMgsF,EAAwB,GACxBC,EAA8B,GACvBC,EAA4B,GAAK52C,EAAAA,GACxC62C,EAAkBH,EAAwB12C,EAAAA,GACnCuxC,EAAmB,EAAIvxC,EAAAA,GAE7B,SAAS82C,EAAiBz0F,EAAe00F,GAC9C,OAAQ10F,GAAMc,QAAU,GAAKwzF,GAA+BI,EACxDH,EACAC,CACN,CAEO,SAASvF,EACdtqF,EAAqBqpF,EAAuBhpF,EAAqByB,GAEjE,MAAM4B,GAAQC,EAAAA,EAAAA,IAAa3D,GACrB6sB,GAAQ08D,EAAAA,EAAAA,IAAgBvpF,KAAYwpF,EAAAA,EAAAA,IAAuBxpF,GAC3D0B,GAAQy6C,EAAAA,EAAAA,IAAgBn8C,GAExBgwF,EAAiB13F,SAAQkxF,EAAAA,EAAAA,IAAuBxpF,IAChD8tF,EAAiBx1F,SAAQm0F,EAAAA,EAAAA,IAAuBzsF,KAChD,MAAE0G,EAAK,OAAEC,GAAWkmB,GACtBojE,EAAAA,EAAAA,IAA+BpjE,EAAOnpB,EAAO2lF,EAAa2G,EAAgB3vF,EAAWyB,IACrFisF,EAAAA,EAAAA,IAAyBrsF,EAAQgC,EAAO2lF,EAAayE,EAAgBztF,EAAWyB,GAG9EouF,EAAgBJ,GADFpmC,EAAAA,EAAAA,IAAe1pD,IAGnC,IAAImwF,EAAgB,EAChBzpF,EAAQwpF,GAAiBA,EAAgBxpF,EAAQgpF,IACnDS,EAAgBD,EAAgBxpF,GAE9BC,EAASwpF,EAAgB5F,GAAoBA,EAAmB5jF,EAASwpF,EAAgBT,IAC3FS,EAAgB5F,EAAmB5jF,GAGrC,MAAMypF,EAAa/rF,KAAKjJ,MAAMsL,EAAQypF,GAChCE,EAAchsF,KAAKjJ,MAAMuL,EAASwpF,GAExC,MAAO,CACLzpF,MAAO0pF,EACPzpF,OAAQ0pF,EACRhG,QAAS+F,EAAaF,GAAiBG,EAAc9F,EAEzD,C,kFChDe,SAASb,EACtB1pF,EACA6lB,EACAyqE,GAEA,MAAM,SAAExuF,IAAaC,EAAAA,EAAAA,MAEfhF,EAAUuzF,IAAa/6C,EAAAA,EAAAA,IAA4Bv1C,GAEzD,OAAOw4C,EAAAA,EAAAA,GACLz7C,EACAzE,QAAQutB,GACR/jB,IAAa22C,EAAAA,GAEjB,C,wECdA,MAAM83C,EAAsB,IACtBC,EAAyB,IACzBC,EAAe,GAEN,SAAS5lB,EACtBzyB,EACA1gD,EACAiyE,EACAE,EACAE,EACA2mB,EACApmB,GAEA,MAAMqmB,GAAiBp1F,EAAAA,EAAAA,KAAQ+uE,IAE/BjkE,EAAAA,EAAAA,KAAgB,KACd,MAAMuqF,EAAcD,EAAe50F,QAGnC,GAFA40F,EAAe50F,SAAU,EAErB4tE,GAAavxB,EAAWr8C,QAAS,CACnC,MAAM80F,EAAoBz4C,EAAWr8C,QAAQkqB,QAAwB,gBAE/D6qE,EAAa/mB,EAEbyQ,EAAOA,KAAMuW,EAAAA,EAAAA,IACjBF,EACAz4C,EAAWr8C,QACX+0F,EAAa,MAAQ,cACrBL,OACmBr4F,IAAnByxE,EAAgCinB,EAAaP,EAAsBC,OAA0Bp4F,EAC7FyxE,OACAzxE,EACAs4F,GACA,GAGEE,GAEF1W,EAAAA,EAAAA,IAAoBM,IAEpBp6D,EAAAA,EAAAA,KAAe,MACbmd,EAAAA,EAAAA,IAAgBi9C,IAAQ,GAG9B,IACC,CACDpiC,EAAY1gD,EAAQiyE,EAAWE,EAAgBE,EAAkB2mB,GAErE,C,wECjDA,MAEMM,EAAuB,IAAIr+B,IAElB,SAAStb,EACtBb,EACA9+C,EACA8R,EACAynF,GAEA,MAAMC,EAAqBD,GAAyBznF,EAChDgtC,GAAkB26C,WAAWF,KAAyBznF,QAAapR,GAEjE,UAAEg5F,EAAS,KAAE/1F,GAAS61F,GAAsB,CAAC,EAUnD,OARA92F,EAAAA,EAAAA,KAAU,KACH1C,GAAW8R,IAEXnO,QAAsBjD,IAAdg5F,GAA2BH,GA0C5C,SACEv5F,EACA8R,EACAumE,GAEA,MAAMshB,EAAuBL,EAAqBt6D,IAAIq5C,IAAmB,IAAIpd,IACvEjsC,EAAa2qE,EAAqB36D,IAAIh/B,IAAW,GAEnDgvB,EAAWhN,SAASlQ,KAKxBkd,EAAWtqB,KAAKoN,GAChB6nF,EAAqBr6B,IAAIt/D,EAAQgvB,GACjCsqE,EAAqBh6B,IAAI+Y,EAAgBshB,IAEzCr4F,EAAAA,EAAAA,MAAas4F,+BAA+B,CAAE55F,SAAQgvB,aAAYqpD,oBARhEwhB,GAWJ,CA7DMC,CAAsB95F,EAAQ8R,EAAWynF,EAC3C,GACC,CAACv5F,EAAQ2D,EAAM+1F,EAAW5nF,EAAWynF,IAEnCv5F,GAAW8R,EAOT,CACL4nF,YACAh6C,eAAgB/7C,GART,CACL+1F,WAAW,EACXh6C,oBAAgBh/C,EAQtB,CAEA,MAAMm5F,GAA0BE,EAAAA,EAAAA,KAEhC,WACE,MAAM,kBAAEC,IAAsB14F,EAAAA,EAAAA,MAC9B,IAAI24F,GAAiB,EACrBX,EAAqBjqF,SAAQ,CAAClN,EAAOk2E,KACnCl2E,EAAMkN,SAAQ,CAAC2f,EAAYhvB,KACzB,MAAMk6F,EAAwBlrE,EAAW1sB,MAAM,EA3CnB,IA6CxB43F,EAAsBz1F,OAASuqB,EAAWvqB,SAC5Cw1F,GAAiB,GAGnBD,EAAkB,CAAEh6F,SAAQgvB,WAAYkrE,EAAuB7hB,mBAiCrE,SACEr4E,EACAgvB,EACAqpD,GAEA,MAAMshB,EAAuBL,EAAqBt6D,IAAIq5C,GACtD,IAAKshB,GAAsBzyF,KAEzB,YADAoyF,EAAqB95B,OAAO6Y,GAI9B,MAAM8hB,EAAgBR,EAAqB36D,IAAIh/B,GAC/C,IAAKm6F,GAAe11F,OAElB,YADAk1F,EAAqBn6B,OAAOx/D,GAI9B,MAAMo6F,EAAgBD,EAAc13F,QAAQ9B,IAAQquB,EAAWhN,SAASrhB,KAExE,IAAKy5F,GAAe31F,OAKlB,OAJAk1F,EAAqBn6B,OAAOx/D,QACvB25F,EAAqBzyF,MACxBoyF,EAAqB95B,OAAO6Y,IAKhCshB,EAAqBr6B,IAAIt/D,EAAQo6F,EACnC,CA3DMC,CAA0Br6F,EAAQk6F,EAAuB7hB,EAAe,GACxE,IAGA4hB,GACFJ,GAEJ,GAzDuB,I,wECHR,SAASroE,EAAmC8oE,EAAiBC,GAC1E,MAAMpsE,OAAuBztB,IAAV65F,EACb7uB,GAAkB7nE,EAAAA,EAAAA,IAAOsqB,GACzBqsE,GAAa32F,EAAAA,EAAAA,MACbgsE,GAAcC,EAAAA,EAAAA,KAkCpB,OAhCA/6C,EAAAA,EAAAA,IAAc,KACR5G,IAIJu9C,EAAgBrnE,SAAU,EAEtBm2F,EAAWn2F,UACb24E,aAAawd,EAAWn2F,SACxBm2F,EAAWn2F,aAAU3D,GACvB,GAEC45F,IAEH53F,EAAAA,EAAAA,KAAU,KACR,GAAIyrB,GAAcu9C,EAAgBrnE,QAChC,OAGF,MAAMy+E,EAAOA,KACXpX,EAAgBrnE,SAAU,EAC1BwrE,GAAa,EAGX0qB,EAAS,EACXC,EAAWn2F,QAAUsD,OAAOV,WAAW67E,EAAMyX,GAE7CzX,GACF,GAECwX,GAEI5uB,EAAgBrnE,OACzB,C,iOC6HA,SAAezE,EAAAA,EAAAA,KA9If,SAA0BqB,GAAiC,IAAhC,KAAEqC,EAAI,WAAEmgE,GAAsBxiE,EACvD,MAAM,SACJu8B,EAAQ,iBACRutC,EAAgB,gBAChB8lB,EAAe,oBACf4J,IACEn5F,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KAEP0G,GAAMrE,EAAAA,EAAAA,IAAuB,MAE7BuT,EAAS,WAAY9T,GAAQA,EAAK8T,OAClCmiB,IAAankB,EAAAA,EAAAA,IAAS9R,EAAK3C,KAEjC+5F,EAAAA,EAAAA,GAAkBp3F,EAAK3C,IAEvB,MAAM,kBACJoxB,EAAiB,oBAAEC,EAAmB,wBACtC8c,EAAuB,kBAAE7c,EAAiB,uBAC1CC,EAAsB,sBAAEC,IACtBC,EAAAA,EAAAA,GAAuBlqB,GAErBmqB,GAAoBvrB,EAAAA,EAAAA,IAAgB,IAAMoB,EAAI7D,UAC9CiuB,GAAiBxrB,EAAAA,EAAAA,IAAgB,IAAMwT,SAASE,OAChD+X,GAAiBzrB,EAAAA,EAAAA,IAAgB,IAAMoB,EAAI7D,QAASmuB,cAAc,sCAClE2zD,GAAYr/E,EAAAA,EAAAA,IAAgB,KAAM,CAAG40E,YAAY,EAAMif,SAAS,OAEhE,UACJ9tE,EAAS,UAAEC,EAAS,iBAAE2F,EAAgB,iBAAEC,EAAkBvrB,MAAOwrB,IAC/DC,EAAAA,EAAAA,GACFZ,EACAK,EACAC,EACAC,EACA4zD,GAGIhoC,GAAcr3C,EAAAA,EAAAA,IAAgB,KAC9BirB,GAEJ8+D,EAAgB,CAAEv5E,OAAQhU,EAAK3C,GAAI8H,OAAQ83D,EAAAA,GAAkBq6B,aAAc,IAGvE/6C,GAAkB/4C,EAAAA,EAAAA,IAAiBoK,KACvC2pF,EAAAA,EAAAA,GAAoC3pF,GACpC49B,EAAwB59B,EAAE,IAGtB4pF,GAAqBh0F,EAAAA,EAAAA,IAAgB,KACzCikE,EAAiB,CAAEpqE,GAAI2C,EAAK3C,GAAIqtC,sBAAsB,EAAM+sD,WAAY,WAAY,IAGhFC,GAAwBl0F,EAAAA,EAAAA,IAAgB,KAC5CikE,EAAiB,CAAEpqE,GAAI2C,EAAK3C,GAAIqtC,sBAAsB,EAAM+sD,WAAY,kBAAmB,IAGvFE,GAAiBn0F,EAAAA,EAAAA,IAAgB,KACrC02B,EAAS,CAAE78B,GAAI2C,EAAK3C,GAAIqtC,sBAAsB,GAAO,IAGjDktD,GAAoBp0F,EAAAA,EAAAA,IAAgB,KACxCikE,EAAiB,CAAEpqE,GAAI2C,EAAK3C,GAAIqtC,sBAAsB,GAAO,IAGzDmtD,GAAoBr0F,EAAAA,EAAAA,IAAgB,KACxC2zF,EAAoB,CAAEnjF,OAAQhU,EAAK3C,GAAI25D,UAAWmJ,GAAa,IAGjE,OACEvgE,EAAAA,GAAAC,cAAA,OACE+E,IAAKA,EACL6+C,KAAK,SACL,eAAczjD,EAAK3C,GACnBimD,SAAU,EACV1lD,UAAWoG,EAAAA,EAAOhE,KAClBu2C,YAAagG,EACbx8C,QAAS86C,EACTlrB,cAAehB,GAEf/uB,EAAAA,GAAAC,cAACI,EAAAA,EAAM,CACLD,KAAMA,EACNq/C,WAAS,EACTC,kBAAmB2d,EAAAA,GAAkBq6B,YACrCj3C,gBAAgB,SAElBzgD,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAekE,EAAAA,EAAO+d,KAAM/hB,EAAK83F,kBAAoB9zF,EAAAA,EAAO+zF,sBACzEjkF,EAAS7V,EAAK,YAAaq+C,EAAAA,EAAAA,IAAer+C,EAAM+B,SAE1B5C,IAAxBsxB,GACC9uB,EAAAA,GAAAC,cAACupB,EAAAA,EAAI,CACHC,OAAQoF,EACRU,iBAAkBA,EAClBC,iBAAkBA,EAClB7F,UAAWA,EACXC,UAAWA,EACX3lB,MAAOwrB,EACPzxB,WAAWkC,EAAAA,EAAAA,GAAe,0BAA2BkE,EAAAA,EAAOg0F,aAC5D1uE,WAAS,EACT8uD,YAAU,EACV3uD,QAASmF,EACTlF,oBAAqBmF,GAEpB/a,EACClU,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAACmqB,EAAAA,EAAQ,CAACjqB,QAASy3F,EAAoBrhF,KAAK,cACzClY,EAAK,mCAER2B,EAAAA,GAAAC,cAACmqB,EAAAA,EAAQ,CAACjqB,QAAS23F,EAAuBvhF,KAAK,WAC5ClY,EAAK,uCAIV2B,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,MACIwlB,GACAr2B,EAAAA,GAAAC,cAACmqB,EAAAA,EAAQ,CAACjqB,QAAS43F,EAAgBxhF,KAAK,WACrClY,EAAK,qBAGTg4B,EACCr2B,EAAAA,GAAAC,cAACmqB,EAAAA,EAAQ,CAACjqB,QAAS63F,EAAmBzhF,KAAK,WACxClY,EAAK,gCAGR2B,EAAAA,GAAAC,cAACmqB,EAAAA,EAAQ,CAACjqB,QAAS63F,EAAmBzhF,KAAK,QACxClY,EAAK,kCAGV2B,EAAAA,GAAAC,cAACmqB,EAAAA,EAAQ,CACPjqB,QAAS83F,EACT1hF,KAAMgqD,EAAa,YAAc,WAEhCliE,EAAKkiE,EAAa,8BAAgC,gCAQnE,IC5FA,GAAe7jE,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAiC,IAA/B,WAAEihE,GAAYjhE,EACrB,MAAQ+4F,gBAAgB,OAAEtlC,EAAM,SAAEulC,IAAe17F,EAAOy8B,QAIxD,MAAO,CACLg/D,eAAgB93B,EAAa+3B,EAAWvlC,EACxCn0D,UALgBhC,EAAOkC,MAAMC,KAM7BC,UALgBpC,EAAOqC,MAAMF,KAM9B,GAVepC,EAhDpB,SAAoBoB,GAOM,IAPL,WACnBwiE,EAAU,UACVviE,EAAS,eACTq6F,EAAc,UACdz5F,EAAS,UACTI,EAAS,UACTu5F,GACsBx6F,EACtB,MAAMM,GAAOC,EAAAA,EAAAA,KACP8Q,GAAgBlP,EAAAA,EAAAA,GACpBkE,EAAAA,EAAOmN,MACN8mF,EAAe92F,QAAU6C,EAAAA,EAAOo0F,OACjCD,GAAan0F,EAAAA,EAAOq0F,QACpBz6F,EACA,gBAIIgH,GAAMrE,EAAAA,EAAAA,IAAuB,MAInC,OAFA+3F,EAAAA,EAAAA,GAAoB1zF,GAAKimE,EAAAA,EAAAA,OAGvBjrE,EAAAA,GAAAC,cAAA,OACE+E,IAAKA,EACLvH,GAAG,cACHO,UAAWoR,EACX1N,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAEzB66F,EAAeh5F,KAAK+U,IACnB,MAAMhU,EAAOxB,EAAUwV,IAAWpV,EAAUoV,GAE5C,GAAKhU,EAIL,OACEJ,EAAAA,GAAAC,cAAC04F,EAAiB,CAChBr4F,IAAK8T,EACLhU,KAAMA,EACNmgE,WAAYA,GACZ,IAKZ,I,yKCkCA,SAAe7jE,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,EAAM0C,KAAiC,IAA/B,WAAEihE,GAAYjhE,EAC9D,MAAQ+4F,gBAAgB,SAAEC,EAAQ,OAAEvlC,IAAan2D,EAAOy8B,SAChDtE,aAAa,cAAE6jE,EAAa,sBAAEC,KAA4Bz7F,EAAAA,EAAAA,KAAeR,GAC3EilD,GAAgB8P,EAAAA,EAAAA,KAA+B/0D,EAAQ,yBAE7D,MAAO,CACLq3B,cAAer3B,EAAOq3B,cACtBokE,eAAgB93B,EAAa+3B,EAAWvlC,EACxC3kC,QAASmyC,GAAcs4B,GAAyBD,EAChD/2C,gBACAjjD,UAAWhC,EAAOkC,MAAMC,KACxBC,UAAWpC,EAAOqC,MAAMF,KACzB,GAZiBpC,EAxEpB,SAAqBoB,GASK,IATJ,cACpBk2B,EAAa,eACbokE,EAAc,UACdz5F,EAAS,UACTI,EAAS,QACT85F,EAAO,QACP1qE,EAAO,WACPmyC,EAAU,cACV1e,GACsB9jD,EACtB,MAAM,kBAAEmiE,IAAsB9hE,EAAAA,EAAAA,MAExBC,GAAOC,EAAAA,EAAAA,KAEPgT,GAAQ3S,EAAAA,EAAAA,KAAQ,IACU,IAA1B05F,EAAe92F,OACV,CAAC3C,EAAUy5F,EAAe,KAAOr5F,EAAUq5F,EAAe,KAG5DA,EACJh5F,KAAK5B,GAAOmB,EAAUnB,IAAOuB,EAAUvB,KACvC8B,QAAQa,GAASA,GAAQA,EAAK3C,KAAOw2B,IACrC70B,MAAM,EAAG25F,EAAAA,KACTC,WACF,CAAC/kE,EAAeokE,EAAgBz5F,EAAWI,IAExCi6F,GAAiBt6F,EAAAA,EAAAA,KAAQ,IACtB05F,EAAej5F,MAAM,EA7BV,IA8BjB,CAACi5F,KACJb,EAAAA,EAAAA,GAAkByB,GAElB,MAAMh8C,EAAY67C,GAAW1qE,GAEvB,aAAE1uB,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAAkBq9C,OAAWz/C,OAAWA,EAAW,QAalG,IAXAgC,EAAAA,EAAAA,KAAU,KACHqiD,IACD5E,IACF4rB,EAAAA,EAAAA,IAA4B2C,EAAAA,GAAqBe,EAAAA,MACjD2sB,EAAAA,EAAAA,IAAe34B,MAEfsI,EAAAA,EAAAA,IAA4B2C,EAAAA,GAAqBe,EAAAA,MACjD4sB,EAAAA,EAAAA,IAAe54B,IACjB,GACC,CAACA,EAAYtjB,EAAW4E,IAEtBniD,EAIL,OACEM,EAAAA,GAAAC,cAAA,UACEiY,KAAK,SACLza,GAAG,eACHO,WAAWkC,EAAAA,EAAAA,GAAekE,EAAAA,EAAOmN,KAAM5R,GACvC,aAAYtB,EAAK,+BACjB8B,QAASA,IAAM+/D,EAAkB,CAAE9xC,SAAS,EAAMmyC,eAClD7+D,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAEzB8T,EAAMjS,KAAKe,GACVJ,EAAAA,GAAAC,cAACI,EAAAA,EAAM,CACLC,IAAKF,EAAK3C,GACV2C,KAAMA,EACN4D,KAAK,OACLhG,UAAWoG,EAAAA,EAAOoN,OAClB4nF,gBAAc,MAKxB,I,oIChGO,MAAM5tB,EAAqB,IAC5B6tB,EAAgB,IAAOj7C,EAAAA,GACvBk7C,EAAiB,GACjBC,EAAgB,MAASn7C,EAAAA,GACzBo7C,EAAgB,KAAQp7C,EAAAA,GAExBq7C,EAAqC,IAAI12F,IAExC,SAASo2F,EAAe54B,GAC7Bm5B,IAEA,MAAM,UACJp1B,EAAS,QAAEq1B,EAAO,eAAEC,EAAc,YAAEC,EAAW,cAAEC,GAC/CC,EAAgBx5B,GAEpB,KAAKo5B,GAAYG,GAAkBD,GAAgBv1B,GAAcs1B,GAC/D,OAGF,MAAQjlB,OAAQqlB,EAActlB,MAAOulB,GAAgBL,EAAe1rF,wBAC9DgsF,EAAQF,EAAeX,EAGvBc,EAAmBL,EAAc,GACjCM,EAAoBN,EAAcA,EAAcv4F,OAAS,GACzD84F,EAASC,EAAUH,GAEzB3wF,MAAMgW,KAAKq6E,GAAab,UAAU7sF,SAAQ,CAAC/L,EAAMm6F,EAAKx8F,KAAiB,IAAf,OAAEwD,GAAQxD,EAChE,MAAMN,EAAK68F,EAAUl6F,GACrB,IAAK3C,EAAI,OACT,MAAMstD,EAASttD,IAAO48F,EACtB,IAAIG,EAAeC,EAAed,EAASl8F,GACvCi9F,EAASpB,EAAiBiB,EAAQ,EAStC,GARKC,IAIHA,EAHeD,IAAUh5F,EAAS,EAGV64F,EAAoBD,EAC5CO,EAASpB,IAGNkB,EAAc,OAEnB,IAEE3qD,IAAK8qD,EACL1sF,KAAM2sF,EACN9uF,MAAO+uF,GACLL,EAAatsF,wBAEjB,MACED,KAAM6sF,EACNhvF,MAAOivF,GACL36F,EAAK8N,wBAET,GAAI4sF,EAASb,EACX,OAGFW,GAAYrB,EACZsB,GAAa,EAAItB,EAEjB,MAAMyB,EAAiBJ,EAAWE,EAC5BG,EAAiBN,EAAUT,EAC3BgB,EAAYL,EAAYE,EAE9BJ,GAAWpB,EAEX,MAAM4B,EAAeL,EAASF,EAAW,EAAIrB,EACvC6B,EAAelB,EAAQS,EAAUpB,EACjC8B,EAAUN,GAAWF,EAAY,EAAItB,IAE3C52D,EAAAA,EAAAA,KAAgB,KACd,IAAK63D,EAAc,OACnB,MAAMc,EAAQC,EAAYn7F,GAE1B,IAAIo7F,EAGAd,EAASpB,GACXkC,EAASD,EAAYf,GACjBzvC,GACFywC,EAAOnkF,UAAUxT,IAAI43F,EAAAA,EAAcC,YAIrCJ,EAAMjkF,UAAUxT,IAAI43F,EAAAA,EAAcE,mBAGpCC,EAAAA,EAAAA,IAAYN,EAAO,CACjBzrD,IAAM,GAAEqqD,MACRjsF,KAAO,GAAE6sF,MACTJ,OAAS,GAAEA,IACXpuB,QAASkvB,EAAS,IAAM,GACxBzyB,UAAY,eAAciyB,QAAqBC,iBAA8BC,OAG3EM,IACFI,EAAAA,EAAAA,IAAYJ,EAAQ,CAClB3rD,IAAM,GAAE8qD,MACR1sF,KAAO,GAAE2sF,MACTF,OAAS,GAAEA,MAIfp2B,EAAU/sD,YAAY+jF,GAClBE,GACFl3B,EAAU/sD,YAAYikF,GAExBhB,EAAanjF,UAAUxT,IAAI,aAC3BzD,EAAKiX,UAAUxT,IAAI,cAEnB8+B,EAAAA,EAAAA,KAAgB,MACdi5D,EAAAA,EAAAA,IAAYN,EAAO,CACjBhvB,QAAS,GACTvD,UAAW,KAGTyyB,GACFI,EAAAA,EAAAA,IAAYJ,EAAQ,CAClBlvB,QAAS,IACTvD,UAAY,eAAcoyB,QAAmBC,iBAA4BC,OAG3EC,EAAMjkF,UAAUxT,IAAI43F,EAAAA,EAAcI,iBAGpC,MAAMlqF,EAAKmqF,GAAsB,MAC/Bn5D,EAAAA,EAAAA,KAAgB,KACV2hC,EAAUy3B,SAAST,IACrBh3B,EAAU/zB,YAAY+qD,GAEpBE,GAAUl3B,EAAUy3B,SAASP,IAC/Bl3B,EAAU/zB,YAAYirD,GAExBhB,GAAcnjF,UAAUqJ,OAAO,aAC/BtgB,EAAKiX,UAAUqJ,OAAO,YAAY,GAClC,GACD8qD,EAAqBe,EAAAA,KAExBktB,EAAU51F,IAAI8N,EAAG,GACjB,GACF,GAEN,CAEO,SAASunF,EAAe34B,GAC7Bm5B,IAEA,MAAM,UACJp1B,EAAS,QACTq1B,EAAO,cACPG,EAAa,YACbD,EAAW,eACXD,GACEG,EAAgBx5B,GAEpB,KAAKo5B,GAAYG,GAAkBD,GAAgBv1B,GAAcs1B,GAC/D,OAEF,MAAQllB,MAAOulB,GAAgBL,EAAe1rF,wBAGxCisF,EAAmBL,EAAc,GACjCM,EAAoBN,EAAcA,EAAcv4F,OAAS,GACzD84F,EAASC,EAAUH,GAEzB3wF,MAAMgW,KAAKq6E,GAAab,UAAU7sF,SAAQ,CAAC/L,EAAMm6F,EAAKj7F,KAAiB,IAAf,OAAEiC,GAAQjC,EAChE,MAAM7B,EAAK68F,EAAUl6F,GACrB,IAAK3C,EAAI,OACT,MAAMstD,EAASttD,IAAO48F,EACtB,IAAIG,EAAeC,EAAed,EAASl8F,GACvCi9F,EAASpB,EAAiBiB,EAAQ,EAStC,GARKC,IAIHA,EAHeD,IAAUh5F,EAAS,EAGV64F,EAAoBD,EAC5CO,EAASpB,IAGNkB,EAAc,OAEnB,MACE3qD,IAAK8qD,EACL1sF,KAAM2sF,EACN9uF,MAAO+uF,GACLz6F,EAAK8N,wBAET,IACED,KAAM6sF,EACNhvF,MAAOivF,EACPlrD,IAAKqqD,GACHM,EAAatsF,wBAEjB,GAAI0sF,EAAWX,EACb,OAGFa,GAAUvB,EACVwB,GAAW,EAAIxB,EAEf,MAAM4B,EAAeL,EAASF,EACxBQ,EAAelB,EAAQS,EAAUnB,EACjC6B,EAAUN,EAAUF,EAE1BX,GAASX,EAET,MAAMyB,EAAiBJ,EAAWE,EAAS,EAAIvB,EACzC0B,EAAiBN,EAAUT,EAAQX,EACnC2B,EAAYL,GAAaE,EAAU,EAAIxB,IAE7C52D,EAAAA,EAAAA,KAAgB,KACd,MAAM24D,EAAQC,EAAYn7F,GAC1B,IAAIo7F,EAEAd,EAASpB,GACXkC,EAASD,EAAYf,GACjBzvC,GACFywC,EAAOnkF,UAAUxT,IAAI43F,EAAAA,EAAcC,YAGrCJ,EAAMjkF,UAAUxT,IAAI43F,EAAAA,EAAcE,iBAAkBF,EAAAA,EAAcI,kBAGpED,EAAAA,EAAAA,IAAYN,EAAO,CACjBzrD,IAAM,GAAE8qD,MACR1sF,KAAO,GAAE2sF,MACT9uF,MAAQ,GAAE+uF,MACVH,OAAS,GAAEA,MAGTc,IACFI,EAAAA,EAAAA,IAAYJ,EAAQ,CAClB3rD,IAAM,GAAEqqD,MACRjsF,KAAO,GAAE6sF,MACTJ,OAAS,GAAEA,IACXpuB,QAAS,IACTvD,UAAY,eAAciyB,QAAqBC,iBAA8BC,OAIjF96F,EAAKiX,UAAUxT,IAAI,aACnB22F,EAAcnjF,UAAUxT,IAAI,aAE5BygE,EAAU/sD,YAAY+jF,GAClBE,GACFl3B,EAAU/sD,YAAYikF,IAGxB74D,EAAAA,EAAAA,KAAgB,MACdi5D,EAAAA,EAAAA,IAAYN,EAAO,CACjBhvB,QAASkvB,EAAS,IAAM,GACxBzyB,UAAY,eAAcoyB,QAAmBC,iBAA4BC,OAGvEG,GACFI,EAAAA,EAAAA,IAAYJ,EAAS,CACnBlvB,QAAS,GACTvD,UAAW,KAGbuyB,EAAMjkF,UAAUqJ,OAAO+6E,EAAAA,EAAcI,iBAGvC,MAAMlqF,EAAKmqF,GAAsB,MAC/Bn5D,EAAAA,EAAAA,KAAgB,KACV2hC,EAAUy3B,SAAST,IACrBh3B,EAAU/zB,YAAY+qD,GAEpBE,GAAUl3B,EAAUy3B,SAASP,IAC/Bl3B,EAAU/zB,YAAYirD,GAExBp7F,EAAKiX,UAAUqJ,OAAO,aACtB85E,EAAcnjF,UAAUqJ,OAAO,YAAY,GAC3C,GACD8qD,EAAqBe,EAAAA,KAExBktB,EAAU51F,IAAI8N,EAAG,GACjB,GACF,GAEN,CAEA,SAASooF,EAAgBx5B,GACvB,IAAI+D,EAAYltD,SAASonB,eAAe,cAIxC,GAHI8lC,GAAa/D,IACf+D,EAAYA,EAAUh1C,cAA2B,oBAE9Cg1C,EAAW,MAAO,CAAC,EACxB,MAAMq1B,EAAUr1B,EAAUh1C,cAA2B,iBAC/C0sE,EAAS13B,EAAUh1C,cAA2B,gBAC9CsqE,EAAiBt1B,EAAUh1C,cAA2B,gBACtDuqE,EAAcmC,GAAQh8E,iBAA+B,IAAGi8E,EAAAA,EAAa77F,QACrE05F,EAAgBH,GAAS35E,iBAA8B,WAE7D,MAAO,CACLskD,YACAq1B,UACAC,iBACAC,cACAC,gBAEJ,CAEA,SAASyB,EAAYW,GACnB,MAAMZ,EAAQY,EAAS//E,WAAU,GACjCm/E,EAAMjkF,UAAUxT,IAAI43F,EAAAA,EAAcH,OAGlCA,EAAMjkF,UAAUqJ,OAAO,aAEvB46E,EAAMj3F,WAAY,EAClBi3F,EAAMa,cAAgB9lF,EAAAA,EAEtB,MAAM+lF,EAAeF,EAAS5sE,cAAc,UAC5C,GAAI8sE,EAAc,CAChB,MAAM1wF,EAAS4vF,EAAMhsE,cAAc,UACnC5jB,GAAQO,WAAW,OAAO0oF,UAAUyH,EAAc,EAAG,EACvD,CAEA,OAAOd,CACT,CAEA,SAAShB,EAAUj+E,GACjB,OAAOA,EAAGmE,aAAa,eACzB,CAEA,SAASi6E,EAAep+E,EAAiB5e,GACvC,OAAO4e,EAAGiT,cAA4B,kBAAiB7xB,MACzD,CAEA,SAASq+F,EAAsBO,EAA8BC,GAC3D,MAAMC,EAAUx4F,WAAWs4F,EAAUC,GAErC,MAAO,KACLxiB,aAAayiB,GACbF,GAAU,CAEd,CAEA,SAAS3C,IACPD,EAAUttF,SAASwF,GAAOA,MAC1B8nF,EAAU+C,OACZ,C,iHCvVA,MAAMC,EAAgD,CAAC,EAKjDC,GAAaz2E,EAAAA,EAAAA,IADS,KAsF5B,EAjFA,SAA2B7R,EAA2BuoF,IACpDn9F,EAAAA,EAAAA,KAAU,MAYQgK,MAAMknD,QAAQt8C,GAAUA,EAAS,CAACA,IAE1CjI,SAAS1O,IACf,MAAMi1B,EAAUiqE,IAAiB99F,EAAAA,EAAAA,MAAYw6B,QAAQujE,SAASn/F,IAAKm8D,aAAa,GAC3ElnC,GAfehb,iBACdglF,EACNG,EAAY1wF,SAAQpO,IAAsB,IAArB,KAAE4hE,EAAI,OAAE1lD,GAAQlc,EACnCktD,EAAAA,GAAkB0U,EAAM1lD,GAAQm0D,MAAMtjE,IAChCmP,IAAWzX,EAAAA,GAAes6F,aA4DxC,SAA4BpjF,GAC1B,MAAMqjF,EAAO3lF,SAAS2lF,KAChBj2F,EAAQsQ,SAASnX,cAAc,SACrC6G,EAAMk2F,QAAU,OAChBl2F,EAAM3C,IAAMuV,EACZ5S,EAAMmiD,OAAQ,EACdniD,EAAMm2F,UAAW,EACjBn2F,EAAM7C,MAAMy/D,QAAU,OACtBq5B,EAAKxlF,YAAYzQ,GAEjB/C,YAAW,KACTg5F,EAAKxsD,YAAYzpC,EAAM,GApFU,IAsFrC,CAxEYo2F,CAAmBpyF,EACrB,GACA,GACF,EAQFqyF,CAWN,SAA+B/oF,EAAgBse,GAC7C,MAAM0qE,GAAcC,EAAAA,EAAAA,MAAkBx+F,EAAAA,EAAAA,MAAauV,GACnD,IAAKgpF,IAAgBA,EAAYxjC,YAAYr4D,OAC3C,MAAO,GAGT,MAAM+7F,EAZR,SAAmCx0D,EAAUy0D,EAAcC,GACzD,MAAMxyC,EAAeliB,EAAItrB,QAAQ+/E,GAEjC,OAAOz0D,EAAI1pC,MAAM4rD,EAS0DyyC,EAT7BzyC,EAS6ByyC,EAR7E,CAQqBC,CAAuBN,EAAYxjC,WAAYlnC,GAE5DmqE,EAA0D,GA0BhE,OAzBAS,EAAWnxF,SAASwxF,IAClB,GAAIlB,EAAiBroF,IAAS7Q,IAAIo6F,GAChC,OAGF,MAAMnoE,EAAQ4nE,EAAYr+F,KAAK4+F,GAC1BnoE,GAAW,YAAaA,IAK7BqnE,EAAYr7F,KAAK,CACfm+D,MAAMouB,EAAAA,EAAAA,IAAkBv4D,EAAO,QAC/Bvb,OAAQub,EAAM7uB,QAAQG,MAAQtE,EAAAA,GAAes6F,YAAct6F,EAAAA,GAAeC,UAG5Eo6F,EAAYr7F,KAAK,CAAEm+D,MAAMouB,EAAAA,EAAAA,IAAkBv4D,GAAQvb,OAAQzX,EAAAA,GAAeC,UAEtE+yB,EAAM7uB,QAAQi3F,UAChBf,EAAYr7F,KAAK,CAAEm+D,MAAMouB,EAAAA,EAAAA,IAAkBv4D,EAAO,QAAQ,GAAQvb,OAAQzX,EAAAA,GAAes6F,cAG3FL,EAAiBroF,IAAWqoF,EAAiBroF,IAAW,IAAIrR,KAAOc,IAAI85F,GAAe,IAGjFd,CACT,CA9CoBgB,CAAsBpgG,EAAIi1B,GAAS,GACjD,GACD,CAACiqE,EAAevoF,GACrB,C,mLCvCA,QAA6D,uBCyG7D,GAAe1X,EAAAA,EAAAA,KA1EoBqB,IAOnB,IAPoB,MAClCy3B,EAAK,UACLsoE,EAAS,MACTvD,EAAK,UACLv8F,EAAS,MACTiG,EAAK,UACLwpF,GACS1vF,EACT,MAAM,kBAAEi9B,IAAsB58B,EAAAA,EAAAA,MAGxB4G,GAAMrE,EAAAA,EAAAA,IAAuB,OAC5Bo9F,EAAiBC,IAAsB12F,EAAAA,EAAAA,IAAS,IAAM82C,EAAAA,KAEvD,OAAEhqC,EAAM,GAAE3W,EAAE,UAAEozF,GAAcr7D,GAC5B,SAAEuc,EAAQ,OAAEksD,EAAM,UAAEC,GAAcJ,EAElCznE,IAAankB,EAAAA,EAAAA,IAASkC,GACtBi+B,EAAe,IAAEC,EAAAA,EAAAA,IAAYl+B,EAAQ3W,MAAO88F,KAAS9M,EAAY,UAAY,WAE7E0Q,GAAgBx/F,EAAAA,EAAAA,KAAQ,IAC5BkyF,GAAWn/D,MAAMugC,IAAMvF,EAAAA,EAAAA,IAAeuF,EAAElgB,SAAUA,MAAYk3C,OAC7D,CAACl3C,EAAU8+C,IACRuN,GAAsB3Q,GAAa/vF,QAAQygG,IAAkB9nE,EAE7DgoE,GAAwBz6F,EAAAA,EAAAA,IAAgB,KAC5C,IAAKoB,EAAI7D,QAAS,OAClB,MAAM4K,EAAS/G,EAAI7D,QAAQm9F,aAC3BN,EAAmBv0F,KAAKjJ,MA/BK,GA+BCuL,GAAmC,KAGnEwI,EAAAA,EAAAA,IAAsBjV,IAAyB,IAAvBi/F,GAAkBj/F,EACpC5B,QAAQygG,KAAmBzgG,QAAQ6gG,IACrCF,GACF,GACC,CAACF,KAEJt/B,EAAAA,EAAAA,GAAkB75D,EAAKq5F,GAEvB,MAAMpjD,GAAcr3C,EAAAA,EAAAA,IAAgB,KAClCo3B,EAAkB,CAChB5mB,SACAse,QAASj1B,EACT40C,cACAN,YACA,IAGJ,OACE/xC,EAAAA,GAAAC,cAAA,OACE+E,IAAKA,EACLhH,WAAWkC,EAAAA,EAAAA,GDlFqL,uBCkF5I+9F,GDlF0K,uBCkFnJjgG,GAC3EiG,OAAOC,EAAAA,EAAAA,GAAWD,EAAQ,wBAAuB85F,OACjD59F,QAAS86C,GAETj7C,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GDvFqP,uBCuFnNg+F,GDvFoP,0BCyFnSl+F,EAAAA,GAAAC,cAAC22C,EAAAA,EAAqB,CACpB54C,WAAWkC,EAAAA,EAAAA,GD1FwT,uBC0FxRk+F,GD1F2T,wBC2FtWrsD,SAAUA,EACVM,YAAaA,EACbruC,KAAM+5F,EACNlsC,WAjEuB,EAiEXksC,EACZjsC,YAAa27B,EACb17B,YAAa07B,IAEd2Q,GACCp+F,EAAAA,GAAAC,cAAA,QAAMjC,UDnGuY,wBCmGrWmgG,GAEtC,IC/EJK,EAAqB,EAAI,GACzBC,EAA6B,EAAIrgD,EAAAA,GA8EvC,SAASsgD,EAAaZ,GACpB,MAAM,EACJtxF,EAAC,EAAEC,EAAC,MAAEX,EAAK,OAAEC,EAAM,SAAE4yF,GACnBb,EAAUc,YAEd,OAAO16F,EAAAA,EAAAA,GACJ,SAAQsI,KACR,QAAOC,KACP,UAASX,KACT,WAAUC,KACV,qBAAoB4yF,8BAEzB,CAEA,SAAejiG,EAAAA,EAAAA,KA1FUqB,IAET,IAFU,MACxBy3B,EAAK,SAAEr4B,EAAQ,UAAEa,GACRD,EACT,MAAM,aAAE8gG,IAAiBzgG,EAAAA,EAAAA,MAGnB4G,GAAMrE,EAAAA,EAAAA,IAAuB,MAE7Bk7B,GAAaijE,EAAAA,EAAAA,MAEnBt/F,EAAAA,EAAAA,KAAU,KACR,IAAKwF,EAAI7D,UAAYhE,EAAU,OAC/B,MAAM2yC,EAAU9qC,EAAI7D,QAEpB,GAAI06B,EAAW/vB,MAAQizF,EAAAA,IAIrB,YAHAp8D,EAAAA,EAAAA,KAAgB,KACdmN,EAAQ7rC,MAAMunB,eAAe,gBAAgB,IAKjD,MAAMwzE,EAAgBnjE,EAAW9vB,OAAS0yF,EAIpC3yF,EAFoB+vB,EAAW/vB,MAAQkzF,EAEXR,EAAqBQ,EAAgBR,EAAqB3iE,EAAW/vB,OACvG62B,EAAAA,EAAAA,KAAgB,KACdmN,EAAQ7rC,MAAMqnB,YAAY,gBAAkB,GAAExf,MAAU,GACxD,GACD,CAAC3O,EAAU0+B,IAEd,MAMMojE,EAAazpE,EAAMypE,WAEzB,OACEj/F,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GFlES,wBEkEuB/C,GFlE6C,uBEkEjBa,GACvEgH,IAAKA,GAEJi6F,GAAY5/F,KAAI,CAACy+F,EAAWx8F,KAC3B,OAAQw8F,EAAU5lF,MAChB,IAAK,WACL,IAAK,QACH,OACElY,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAekE,EAAkBjH,GF3EiE,wBE4E7G8G,MAAOy6F,EAAaZ,GACpB39F,QAASA,IArBO29F,KACL,aAAnBA,EAAU5lF,MAA0C,UAAnB4lF,EAAU5lF,MAC7C2mF,EAAa,CAAEK,SAAUpB,EAAUqB,KACrC,EAkB2BC,CAAqBtB,KAG1C,IAAK,oBACH,OACE99F,EAAAA,GAAAC,cAACo/F,EACC,CACA/+F,IAAM,GAAEw9F,EAAU5lF,QAAQ5W,IAC1Bk0B,MAAOA,EACPsoE,UAAWA,EACXvD,MAAOj5F,EACPmsF,WAAYtwF,EACZa,UAAWoG,EACXH,MAAOy6F,EAAaZ,KAG1B,QACE,OACJ,IAEE,G,8FC3FV,MAAMwB,EAAwB,IAEf,SAASzM,EACtB7tF,EAAwCu6F,EAAqCt0E,GAE7E,MAAM,iBAAEtX,IAAqBvV,EAAAA,EAAAA,MACvBC,GAAOC,EAAAA,EAAAA,MACNs0F,EAAe4M,IAAoBl4F,EAAAA,EAAAA,KAAS,GAE7Cm4F,GAAoB77F,EAAAA,EAAAA,IAAgB,KACxC47F,GAAiB,GACbD,GAEJ5rF,EAAiB,CACfvO,QAASs6F,EAAAA,GAAYrhG,EAAK,4BAA8BA,EAAK,6BAC7DoK,SAAU62F,GACV,IAGEK,GAAU/7F,EAAAA,EAAAA,IAAiB4/C,IAC/B,MAAMn7B,EAASm7B,EAAMzB,eACf,MAAEjiC,GAAUuI,EACbvI,IAGc,IAAfA,EAAMkiD,MAA6B,IAAfliD,EAAMkiD,MAC5By9B,IACF,IAGIG,GAAYh8F,EAAAA,EAAAA,IAAiB4/C,IACjC,MAAMn7B,EAASm7B,EAAMzB,cAEhB15B,EAAOjP,aAAgBiP,EAAOlP,YACjCsmF,GACF,IAoBF,OAjBAjgG,EAAAA,EAAAA,KAAU,KACR,GAAIyrB,EAAY,OAEhB,MAAM,QAAE9pB,GAAY6D,EACpB,OAAK7D,GAILA,EAAQkd,iBAAiB,QAASshF,GAClCx+F,EAAQkd,iBAAiB,UAAWuhF,GAE7B,KACLz+F,EAAQod,oBAAoB,QAASohF,GACrCx+F,EAAQod,oBAAoB,UAAWqhF,EAAU,QATnD,CAUC,GACA,CAAC30E,EAAYjmB,IAET4tF,CACT,C,4FCtDA,MAAMiN,EAAmB,KACnBC,EAAyB,IAAI/nC,IACnC,IAAIgoC,EAAgB,IAAIh9F,IACxB,MAGMi9F,GAAgBnJ,EAAAA,EAAAA,KAAS,KAC7B,MAAMoJ,EAAQz2F,MAAMgW,KAAKugF,GACnBG,EAAcD,EAAM7gG,MAAM,EALR,KAMlB+gG,EAAaF,EAAM7gG,MAAMghG,MAE/BhiG,EAAAA,EAAAA,MAAaiiG,kBAAkB,CAC7BC,QAASJ,IAGXA,EAAY/zF,SAAS1O,GAAOqiG,EAAuB1jC,IAAI3+D,EAAI6c,KAAKC,SAEhEwlF,EAAgB,IAAIh9F,IAAIo9F,GAGpBJ,EAAc/7F,MAChBg8F,GACF,GAlBuB,KAqBV,SAASp/B,EAAsB93B,GAC5C,MAAMx3B,GAAQ3S,EAAAA,EAAAA,KAAQ,KACpB,MAAM/B,GAASiC,EAAAA,EAAAA,MACf,OAAOiqC,GAAKzpC,KAAK5B,IAAOyvB,EAAAA,EAAAA,KAAWtwB,EAAQa,KAAK8B,OAAO7B,QAAQ,GAC9D,CAACorC,IAEEy3D,GAAkB5hG,EAAAA,EAAAA,KAAQ,KAC9B,MAAM/B,GAASiC,EAAAA,EAAAA,MACf,OAAOyS,GAAO/R,QAAQa,IACpB,MAAMogG,EAAkBV,EAAuBhkE,IAAI17B,EAAK3C,KAAO,EAC/D,GAAI6c,KAAKC,MAAQimF,EAAkBX,EACjC,OAAO,EAGT,IAAI3tF,EAAAA,EAAAA,IAAS9R,EAAK3C,IAAK,CACrB,MAAMwU,EAAO7R,EACP8+C,GAAS0H,EAAAA,EAAAA,KAAiBhqD,EAAQqV,EAAKxU,IACvCgjG,EAAoBvhD,GAA0B,oBAAhBA,EAAOhnC,KAC3C,OAAQjG,EAAKyuF,YAAczuF,EAAKiC,UAAWqjC,EAAAA,EAAAA,IAAUtlC,KAAU7R,EAAKo3C,WAAaipD,CACnF,CAAO,CACL,MAAM1jG,EAAOqD,EACb,OAAOgT,EAAAA,EAAAA,IAAcrW,EACvB,KACCsC,KAAK4S,GAASA,EAAKxU,IAAG,GACxB,CAAC6T,KAEJ9R,EAAAA,EAAAA,KAAU,KACJ+gG,GAAiBh/F,SACnBg/F,EAAgBp0F,SAAS1O,GAAOsiG,EAAcl8F,IAAIpG,KAClDuiG,IACF,GACC,CAACO,GACN,C,yFClDO,MAAMI,EAAwC,CACnD,CAAEpqF,KAAM,OAAQzH,MAAO,iBAAkBxO,IAAK,YAC9C,CAAEiW,KAAM,eAAgBzH,MAAO,oBAAqBxO,IAAK,eACzD,CAAEiW,KAAM,QAASzH,MAAO,eAAgBxO,IAAK,UAC7C,CAAEiW,KAAM,UAAWzH,MAAO,iBAAkBxO,IAAK,YACjD,CAAEiW,KAAM,OAAQzH,MAAO,aAAcxO,IAAK,SAG/BsgG,EAAwC,CACnD,CAAErqF,KAAM,OAAQzH,MAAO,cAAexO,IAAK,gBAC3C,CAAEiW,KAAM,UAAWzH,MAAO,iBAAkBxO,IAAK,mBACjD,CAAEiW,KAAM,YAAazH,MAAO,aAAcxO,IAAK,gBAG3CugG,EAA2D,CAC/D,kBAAmB,OAAQ,WAAY,SAAU,WAAY,eAEzDC,EAA2D,CAC/D,kBAAmB,kBAAmB,eAAgB,eAGjD,SAASC,EAAkB/kC,EAAqBglC,EAA+BC,GACpF,IAAIC,EAA4B,GAC5BC,EAA6C,GAEjD,GAAa,aAATH,EAAqB,CACvB,MAAM,gBACJI,KACGC,GACDJ,EACAjlC,EAAMqlC,gBAAkB,CAAC,GACzBC,EAAAA,EAAAA,IACAtlC,EAAMulC,OACNV,GAGJK,EAAkBE,GAAmB,GACrCD,EAAqBjiG,OAAOouB,KAAK+zE,GAC9B9hG,QAAQe,GAAQ5C,QAAQ2jG,EAAe/gG,KAC5C,KAAO,CACL,MAAM,gBACJkhG,KACGC,GACDR,EACAjlC,EAAMylC,gBAAkB,CAAC,GACzBH,EAAAA,EAAAA,IACAtlC,EAAMulC,OACNT,GAGJI,EAAkBM,GAAmB,GACrCL,EAAqBjiG,OAAOouB,KAAKm0E,GAC9BliG,QAAQe,GAAQ5C,QAAQ+jG,EAAenhG,KAC5C,CAEA,MAAO,CACL4gG,kBACAC,oBAEJ,CAEA,SAASO,EAAuBL,GAC9B,GAAIA,EAAgB,CAClB,MAAM,gBACJD,KACGO,GACDN,EAEJ,GACEniG,OAAOC,OAAOwiG,GAASpiG,OAAO7B,SAAS6D,OAAS,GAC5C6/F,GAAiB7/F,OAErB,MAAO,GAGT,GAAIogG,EAAQ34E,KACV,MAAO,OACF,GAAI24E,EAAQC,OACjB,MAAO,SACF,GAAID,EAAQE,SACjB,MAAO,WACF,GAAIF,EAAQG,SACjB,MAAO,WACF,GAAIH,EAAQI,YACjB,MAAO,cAEX,CAEA,MAAO,EACT,CAyBA,MAAMC,EAA8B,CAClChB,KAAM,SACNiB,WAAY,GACZV,OAAQ,CACNzyF,MAAO,GACPsyF,gBAAiB,GACjBI,gBAAiB,KAIfU,EAA6DA,CACjElmC,EACApxB,KAEA,OAAQA,EAAO1yB,MACb,IAAK,WACH,MAAO,IACF8jD,EACHulC,OAAQ,IACHvlC,EAAMulC,OACTzyF,MAAO87B,EAAOC,SAEhBlC,WAAW,GAEf,IAAK,cACH,MAAO,IACFqzB,EACHhC,SAAUpvB,EAAOC,QACjBm2D,KAAM,QAEV,IAAK,qBACH,MAAO,IACFhlC,EACHqlC,gBAAgBC,EAAAA,EAAAA,IACdtlC,EAAMulC,OACNV,IAGN,IAAK,qBACH,MAAO,IACF7kC,EACHylC,gBAAgBH,EAAAA,EAAAA,IACdtlC,EAAMulC,OACNT,IAGN,IAAK,oBACH,MAAO,IACF9kC,EACHqlC,eAAgBz2D,EAAOC,QACvBo3D,WAAY,IAEhB,IAAK,oBACH,MAAO,IACFjmC,EACHylC,eAAgB72D,EAAOC,QACvBo3D,WAAY,IAEhB,IAAK,cACH,OAAIjmC,EAAMqlC,eACD,IACFrlC,EACHulC,OAAQ,KACHY,EAAAA,EAAAA,IAAKnmC,EAAMulC,OAAQV,GACtB/xF,MAAOktD,EAAMulC,OAAOzyF,MAAQktD,EAAMulC,OAAOzyF,MAAQ4yF,EAAuB1lC,EAAMqlC,mBAC3ErlC,EAAMqlC,gBAEXA,oBAAgB7jG,EAChBykG,WAAY,GACZt5D,WAAW,GAEJqzB,EAAMylC,eACR,IACFzlC,EACHulC,OAAQ,KACHY,EAAAA,EAAAA,IAAKnmC,EAAMulC,OAAQT,MACnB9kC,EAAMylC,gBAEXA,oBAAgBjkG,EAChBykG,WAAY,GACZt5D,WAAW,GAGNqzB,EAEX,IAAK,aAAc,CACjB,MAAQv+D,GAAIu8D,EAAQ,YAAEjnD,KAAgBwuF,GAAW32D,EAAOC,QAExD,MAAO,CACLm2D,KAAM,OACNhnC,WACAunC,SACAU,WAAY,GAEhB,CACA,IAAK,gBACH,MAAO,IACFjmC,EACHimC,WAAYr3D,EAAOC,SAGvB,IAAK,eACH,MAAO,IACFmxB,EACHrzB,UAAWiC,EAAOC,SAGtB,IAAK,eACH,MAAO,IACFmxB,EACHjkC,UAAW6S,EAAOC,SAGtB,IAAK,WACH,MAAO,IACFmxB,EACHjkC,WAAW,EACXjY,MAAO8qB,EAAOC,SAGlB,IAAK,gBACH,MAAO,IACFmxB,EACHulC,OAAQ,IACHvlC,EAAMulC,OACTa,WAAYx3D,EAAOC,UAGzB,IAAK,QACH,OAAOm3D,EACT,QACE,OAAOhmC,EACX,EAOF,EAJ0BqmC,KACjBC,EAAAA,EAAAA,GAAWJ,EAAgBF,E,mGCnQ7B,SAASv7D,EACd87D,EACAC,EACAC,GAEA,IADAC,EAAOz5F,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GAEP,OAAO61E,EAAAA,EAAAA,IAAsB6jB,IAC3BA,EAASJ,IAAW,GAEnBC,EAAMC,EAAiBC,EAC5B,CAEO,SAASE,EACdC,EACAvG,GAGA,MAAMwG,EAAoBr8D,GAAqB,IAAMo8D,KAAY,CAACA,GAAWvG,EAFtErzF,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,IAIP,OAAO2oB,EAAAA,EAAAA,GACLkxE,EAAmB,CAACA,EAAmBD,IAAW,EAEtD,CAEO,SAAStxE,EACdgxE,EACAC,EACAlG,GAGA,IAFAoG,EAAOz5F,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GACP85F,EAAM95F,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GAEN,OAAO25D,EAAAA,EAAAA,IAAsB+/B,IAC3BA,EAASJ,IAAW,GAEnBC,EAAMlG,EAAIoG,EAASK,EACxB,CAEO,SAASC,EACdH,EACAvG,GAIA,MAAM2G,EAAoB1xE,GAAqB,IAAMsxE,KAAY,CAACA,GAAWvG,EAHtErzF,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GACDA,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,IAIN,OAAO2oB,EAAAA,EAAAA,GACLqxE,EAAmB,CAACA,EAAmBJ,IAAW,EAEtD,C,kJCsMA,QAxOuB,SACrBK,EACAC,EACAC,EACAj/F,EACAk/F,EACAxpF,EACAypF,GAMG,IALHC,EAAUt6F,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GACVu6F,EAAgCv6F,UAAA1H,OAAA,EAAA0H,UAAA,QAAAzL,EAChCimG,EAAkCx6F,UAAA1H,OAAA,EAAA0H,UAAA,QAAAzL,EAClCkmG,EAAUz6F,UAAA1H,OAAA,SAAA/D,IAAAyL,UAAA,KAAAA,UAAA,IACV06F,EAAiB16F,UAAA1H,OAAA,SAAA/D,IAAAyL,UAAA,KAAAA,UAAA,IAGjB,MAAM26F,GAAgBjjG,EAAAA,EAAAA,IAAoC,OAEnD2H,EAAWu7F,IAAgBv8F,EAAAA,EAAAA,KAAS,GAC3C,IAAIw8F,EAAgBx7F,EAEpB,MAAOzD,EAAckuF,IAAmBzrF,EAAAA,EAAAA,IAAiB,GAEnDW,GAAoBrE,EAAAA,EAAAA,IAAgB,KACxCigG,GAAa,GACTJ,GAAeA,GAAe,KAGpC5xE,EAAAA,EAAAA,IAAc,KACZ+xE,EAAcziG,SAAU4iG,EAAAA,EAAAA,IAASb,EAASE,GAAW,CAACY,EAAWh2F,KAC/D,OAAQg2F,GACN,IAAK,SAAU,CACb,MAAM,UACJC,EAAS,gBAAEC,EAAe,YAAEC,EAAW,MAAEC,GACvCR,EAAcziG,QAClB0iG,GAAa,IAEbQ,EAAAA,EAAAA,GAAqBxqF,EAqJ/B,SAA2B+pF,GACzB,IAAIU,EAAsC,CAAC,EAC3C,GAAIV,GAAiBA,EAAcziG,QAAS,CAC1C,MAAM,KACJkzD,EAAI,MAAEpuC,EAAK,eAAEzd,EAAc,MAAE47F,EAAK,iBAAEG,EAAgB,qBAAEC,EAAoB,QAAE15C,EAAO,OAAEC,GACnF64C,EAAcziG,QAClBmjG,EAAgB,CACdjwC,KAAMA,KACJA,EAAK+vC,EAAMjgG,IAAI,EAEjB8hB,MAAOA,KACLA,GAAO,EAETP,KAAMA,KACJO,IACAzd,EAAe,IACfpK,EAAAA,EAAAA,MAAaqmG,kBAAkB,EAEjCC,aAAelhD,IACb,MAAMmhD,EAAWnhD,EAAMohD,YA9ML,GA+MlBp8F,EAAeiB,KAAK8C,IAAI63F,EAAMt7C,YAAc67C,EAAU,GAAG,EAE3DE,YAAcrhD,IACZ,MAAMmhD,EAAWnhD,EAAMohD,YAlNL,GAmNlBp8F,EAAeiB,KAAKC,IAAI06F,EAAMt7C,YAAc67C,EAAUP,EAAM37F,UAAU,EAExEq8F,OAASthD,IACHA,EAAMuhD,UACRv8F,EAAeg7C,EAAMuhD,SACvB,GAICh6C,MACHu5C,EAAcU,UAAY,KACxBT,GAAkB,GAGjBz5C,MACHw5C,EAAcW,cAAgB,KAC5BT,GAAsB,EAG5B,CACA,OAAOF,CACT,CAlMyCY,CAAkBtB,KACjDuB,EAAAA,EAAAA,IAAiB,WACjB,MAAM,YAAEC,IAAgBhoG,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OACvColG,EAAUmB,EAAY//E,QACtB8+E,EAAYzmG,QAAQ0nG,EAAY/yF,UAChC,MAAM5J,EAAW27F,EAAM37F,UAAYwiC,OAAOgoD,SAASmR,EAAM37F,UAAY27F,EAAM37F,SAAW06F,GACpE,UAAdC,GAAyB36F,EAAW48F,EAAAA,MACtCnB,EAAgBkB,EAAYE,eAG9BC,EAAAA,EAAAA,IAAiB,CACf98F,SAAU27F,EAAM37F,UAAY,EAC5B68F,aAAclB,EAAMkB,aACpBv5D,SAAUq4D,EAAMt7C,cAElB,KACF,CACA,IAAK,eAAgB,CACnB,MAAM,MAAEs7C,GAAUR,EAAcziG,SAChCokG,EAAAA,EAAAA,IAAiB,CACf98F,SAAU27F,EAAM37F,UAAY,EAC5B68F,aAAclB,EAAMkB,aACpBv5D,SAAUq4D,EAAMt7C,cAElB,KACF,CACA,IAAK,UACH+6C,GAAa,IACbsB,EAAAA,EAAAA,IAAiB,UACjB,MACF,IAAK,eAAgB,CACnB,MAAM,MAAEf,GAAUR,EAAcziG,QAC1BsH,EAAW27F,EAAM37F,UAAYwiC,OAAOgoD,SAASmR,EAAM37F,UAAY27F,EAAM37F,SAAW06F,EACjFQ,GAAmB5Q,EAAgBqR,EAAMt7C,YAAcrgD,GAC5D,KACF,CACA,IAAK,WACH08F,EAAAA,EAAAA,IAAiB,UAKrB9B,IAAWW,KAAah2F,EAAE,GACzBw1F,EAAav7F,GAEhB,MAAM,MAAEm8F,GAAUR,EAAcziG,QAE3BmH,GAAc87F,EAAM7pB,SACvBspB,GAAa,GAGbC,GAAgB,GAGdR,GACFA,EAAOc,EACT,GACC,CAAClB,KAEJ1jG,EAAAA,EAAAA,KAAU,KACJ8I,GAAauR,IAAU2rF,EAAAA,EAAAA,IAAe3rF,EAAS,GAClD,CAACA,EAAUvR,IAEd,MAAM,KACJ+rD,EAAI,MACJpuC,EAAK,eACLzd,EAAc,MACd47F,EAAK,QACL3pB,EAAO,UACPwpB,EAAS,KACTv+E,EAAI,QACJolC,EAAO,OACPC,EAAM,iBACNw5C,EAAgB,qBAChBC,EAAoB,gBACpBN,EAAe,YACfC,GACEP,EAAcziG,QACZsH,EAAW27F,EAAM37F,UAAYwiC,OAAOgoD,SAASmR,EAAM37F,UAAY27F,EAAM37F,SAAW06F,GAGtF3jG,EAAAA,EAAAA,KAAU,MACJiJ,IAAag9F,EAAAA,EAAAA,GAAwBrB,IAAWT,GAClD5Q,EAAgBqR,EAAMt7C,YAAcrgD,EACtC,GACC,CAACA,EAAU5D,EAAcu/F,EAAOT,KAGnCnkG,EAAAA,EAAAA,KAAU,IAAM,KACdi7E,EAAQipB,EAAW,GAClB,CAACjpB,EAASipB,KAGbnvF,EAAAA,EAAAA,IAAsBxW,IAA+B,IAA7B2nG,EAAgBC,GAAQ5nG,EAC1C2nG,IAAmBnC,GAAcp/F,IAAQwhG,GAKzCvB,EAAMjgG,KAAOigG,EAAM7pB,QAInBgpB,GAAcp/F,IAAQmE,GACxB+rD,EAAKlwD,EACP,GACC,CAACo/F,EAAYp/F,EAAKmE,EAAW+rD,EAAM+vC,EAAMjgG,IAAKigG,EAAM7pB,SAEvD,MAAMqrB,GAAgBhiG,EAAAA,EAAAA,IAAgB,KAChCO,GACFkwD,EAAKlwD,EACP,IAGIoE,GAAY3E,EAAAA,EAAAA,IAAgB,KAC5B0E,EACF2d,IAEA2/E,GACF,IAGIC,GAAUjiG,EAAAA,EAAAA,IAAiBkiG,IAC/Bt9F,EAAes9F,GACXr9F,GACFsqF,EAAgBqR,EAAMt7C,YAAcrgD,EACtC,IAGF,MAAO,CACLH,UAAWw7F,EACXj/F,eACA0D,YACA0d,QACAouC,KAAMuxC,EACNlgF,OACAld,eAAgBq9F,EAChB5B,YACA8B,WAAY3B,EACZ37F,WACA87F,mBACAC,uBACA15C,UACAC,SACAm5C,kBACAC,cAEJ,C,wECvMe,SAAS96D,EAAgBgzD,GACtC,MAAM2J,GAAepiG,EAAAA,EAAAA,GAAgBy4F,IAErC78F,EAAAA,EAAAA,KAAU,KAAMymG,EAAAA,EAAAA,IAAeD,IAAe,CAACA,GACjD,C,8FCFA,MAAME,EAAS,EACTC,EAAa,EAEJ,SAASvoD,EACtBz7C,GAMA,IALA8oB,EAAUhiB,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GACVm9F,EAAiBn9F,UAAA1H,OAAA,EAAA0H,UAAA,QAAAzL,EACjBkP,EAAMzD,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAGi9F,EACTG,EAAuBp9F,UAAA1H,OAAA,EAAA0H,UAAA,QAAAzL,EACvB8oG,EAAwBr9F,UAAA1H,OAAA,EAAA0H,UAAA,QAAAzL,EAGxB,MAAM2L,GAAYxI,EAAAA,EAAAA,IAA0B,MACtC4lG,GAAY5lG,EAAAA,EAAAA,MAmDlB,OAjDAkxB,EAAAA,EAAAA,IAAc,KACP5G,IACHs7E,EAAUplG,SAAU,EACtB,GACC,CAACgB,EAAS8oB,KAEbzrB,EAAAA,EAAAA,KAAU,KACR,MAAMkM,EAASvC,EAAUhI,QAEzB,IAAKgB,IAAYuJ,GAAUuf,GAAcs7E,EAAUplG,QACjD,OAGFolG,EAAUplG,SAAU,EAEpB,MAAMoX,EAAM,IAAIi8E,MAEVgS,EAAcA,KAClB,MAAM16F,EAAQu6F,GAAkB9tF,EAAIzM,MAC9BC,EAASu6F,GAAmB/tF,EAAIxM,OAChCC,EAAMN,EAAOO,WAAW,KAAM,CAAEw6F,OAAO,KAE7C9jE,EAAAA,EAAAA,KAAgB,KACdj3B,EAAOI,MAAQA,EACfJ,EAAOK,OAASA,EAEZ8xC,EAAAA,KACF7xC,EAAIzM,OAAU,QAAOmN,QAGvBV,EAAI2oF,UAAUp8E,EAAe,GAAT7L,EAAsB,GAATA,EAAYZ,EAAiB,EAATY,EAAYX,EAAkB,EAATW,GAErEmxC,EAAAA,KACH6oD,EAAAA,EAAAA,GAAS16F,EAAK,EAAG,EAAGF,EAAOC,EAAQW,EAAQy5F,EAC7C,GACA,EAGJ5tF,EAAIm8E,OAAS,KACP0R,GACF5gF,EAAAA,EAAAA,IAAeghF,GAEfA,GACF,EAGFjuF,EAAIpU,IAAMhC,CAAO,GAChB,CAACA,EAAS8oB,EAAYq7E,EAAiBD,EAAgB35F,EAAQ05F,IAE3Dj9F,CACT,C,mHCzDA,MA6HA,EA7H8B,SAAApL,GAsBJ,IAtBK,KAC7BhB,EAAI,KACJkV,EAAI,SACJ+nD,EAAQ,SACRrF,EAAQ,QACRtiD,EAAO,gBACPqnD,EAAe,aACfgD,EAAY,WACZC,EAAU,uBACVC,EAAsB,aACtBnP,GAYD1vD,EAAE4oG,EAAU19F,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GACX,MAAM5K,GAAOC,EAAAA,EAAAA,MAEP,OAAE4V,GAAWjC,GAAQ,CAAC,EACtB20F,EAAyB30F,GAAMxU,KAAOopG,EAAAA,IAE5C,OAAOloG,EAAAA,EAAAA,KAAQ,KACb,IAAK5B,EACH,OAGF,MAAM,iBACJ+pG,EAAgB,qBAChBlzF,EAAoB,mBACpBmzF,EAAkB,iBAClBC,EAAgB,iBAChBngC,IACEzoE,EAAAA,EAAAA,MAEE6oE,EAAqB/J,EAAAA,IAAgC,CACzDpuD,MAAOm4F,EAAAA,GAAc,qBAAuB,kBAC5C1wF,KAAM,kBACN0gD,QAASA,KACP4P,EAAiB,CAAE/pE,OAAQC,EAAKU,IAAK,GAInCypG,EAAoBxtC,EAAkB,CAC1C5qD,MAAOzQ,EAAK,+BACZkY,KAAM,SACN0gD,QAAS2F,QACPp/D,EAEE2pE,EAAYxS,EACd,CACA7lD,MAAOzQ,EAAK,gBACZkY,KAAM,QACN0gD,QAASA,IAAM6vC,EAAiB,CAAErpG,GAAIV,EAAKU,GAAIu8D,SAAUA,KAEzD,CAAElrD,MAAOzQ,EAAK,YAAakY,KAAM,MAAO0gD,QAASA,IAAM6vC,EAAiB,CAAErpG,GAAIV,EAAKU,GAAIu8D,SAAUA,KAE/FoN,EAAa/0D,EACf,CACAvD,MAAOzQ,EAAK,mBACZkY,KAAM,SACN0gD,QAASA,IAAMrjD,EAAqB,CAAE9W,OAAQC,EAAKU,GAAI4U,SAAS,KAEhE,CACAvD,MAAQ,GAAEzQ,EAAK,sBACfkY,KAAM,OACN0gD,QAAS0F,GAGb,GAAIgqC,EACF,OAAOtvC,EAAAA,EAAAA,IAAQ,CAAC4P,EAAoBE,EAAW+/B,EAAmB9/B,IAGpE,MAAM+/B,EAAoBpqG,EAAKo4D,aAAep4D,EAAKu4D,cAC/C,CAAExmD,MAAOzQ,EAAK,cAAekY,KAAM,YAAa0gD,QAASA,IAAM+vC,EAAiB,CAAEvpG,GAAIV,EAAKU,WAC3FD,EACE4pG,EAAuBrqG,EAAKo4D,aAAep4D,EAAKu4D,eAAmBv4D,EAAKqV,aAE1E5U,EADA,CAAEsR,MAAOzQ,EAAK,gBAAiBkY,KAAM,SAAU0gD,QAASA,IAAM+vC,EAAiB,CAAEvpG,GAAIV,EAAKU,MAGxF4pG,GAAgBC,EAAAA,EAAAA,IAAevqG,GACjC,CAAE+R,MAAOzQ,EAAK,aAAckY,KAAM,YAAa0gD,QAASA,IAAM8vC,EAAmB,CAAEtpG,GAAIV,EAAKU,MAC5F,CAAEqR,MAAOzQ,EAAK,WAAYkY,KAAM,UAAW0gD,QAASA,IAAM8vC,EAAmB,CAAEtpG,GAAIV,EAAKU,MAGtF8pG,EADY95C,KAAiBr6C,EAAAA,EAAAA,IAAcrW,KAASswE,EAAAA,EAAAA,IAAYtwE,IAAUkV,IAASA,EAAKiC,QAE1F,CAAEpF,MAAOzQ,EAAK,qBAAsBkY,KAAM,OAAQ0gD,QAASxJ,QAC3DjwD,EAEE8pE,EAAe,CACnBx4D,OAAOoD,EAAAA,EAAAA,IAASnV,EAAKU,IACjBY,EAAK,UACLA,GAAKmpG,EAAAA,EAAAA,IAAiBzqG,GACpB,cACCqW,EAAAA,EAAAA,IAAcrW,GAAQ,eAAiB,oBAC9CwZ,KAAM,SACNgxD,aAAa,EACbtQ,QAASyF,GAGL+qC,OAA0BjqG,IAAbw8D,EAEnB,OAAO3C,EAAAA,EAAAA,IAAQ,CACb4P,EACAigC,EACAC,EACAC,EACAjgC,GACCjzD,GAAUkzD,GACVlzD,IAAW0yF,IAA2Ba,GAAcJ,EACrDE,EACAjgC,GACA,GACD,CACDvqE,EAAMkV,EAAMynD,EAAiBr7D,EAAMu+D,EAAwBjI,EAAUgyC,EAAYt0F,EACjFqqD,EAAcC,EAAYlP,EAAcuM,EAAU9lD,EAAQ0yF,GAE9D,C,mFChGA,QAzBA,SAA6Bc,EAAuCtQ,GAAgD,IAAjBuQ,EAAO1+F,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GACxG,MAAMs5F,EAAWnL,EAAesQ,EAAsC,IAAOA,EAC7EtQ,IAAAA,EAAiB,CAACsQ,IAElB,MAAO7E,EAAUF,IAAYvnE,EAAAA,EAAAA,KACvBwsE,GAAc3kE,EAAAA,EAAAA,GAAYs/D,GAEhC,SAASsF,IACP,MAAMC,EAAkBF,EAAYzmG,QAChCwmG,EACDG,EAAqCnF,GAEtCA,EAAUmF,IAEd,CAQA,OALAj2E,EAAAA,EAAAA,GAAcg2E,EAAoBzQ,IAGlC2Q,EAAAA,EAAAA,GAAgBF,EAAoBzQ,GAE7ByL,CACT,C,8FCmBA,QAxCA,SAA4BmF,EAAmC5Q,GAAgD,IAAjBuQ,EAAO1+F,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GACnG,MAAMs5F,EAAWnL,EAAe4Q,EAAkC,IAAQA,IAC1E5Q,IAAAA,EAAiB,CAAC4Q,IAElB,MAAMC,GAAWtnG,EAAAA,EAAAA,MACXgsE,GAAcC,EAAAA,EAAAA,KACdg7B,GAAc3kE,EAAAA,EAAAA,GAAYs/D,GAEhC,SAASsF,IAAmC,IAAhBK,EAAMj/F,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GAChC,MAAM6+F,EAAkBF,EAAYzmG,QACpC,GAAIwmG,EACDG,GAAsC1nE,IACjC6nE,EAAS9mG,UAAYi/B,IACvB6nE,EAAS9mG,QAAUi/B,EACnBusC,IACF,QAEG,CACL,MAAMvsC,EAAY0nE,IACdG,EAAS9mG,UAAYi/B,IACvB6nE,EAAS9mG,QAAUi/B,EAEd8nE,GACHv7B,IAGN,CACF,CAUA,OARA96C,EAAAA,EAAAA,IAAc,KACZg2E,GAAmB,EAAK,GAEvBzQ,IAGH2Q,EAAAA,EAAAA,GAAgBF,EAAoBzQ,GAE7B6Q,EAAS9mG,OAClB,C,6DCpDe,SAASuqE,EACtB5uE,EACA8R,EACAxJ,EACA+iG,GAEA,MAAM,YAAEC,IAAgBhqG,EAAAA,EAAAA,OAExBoB,EAAAA,EAAAA,KAAU,KACJoP,IAAcxJ,GAChBgjG,EAAY,CAAEtrG,SAAQ8R,UAAWA,EAAYu5F,iBAAkBA,GACjE,GACC,CAACrrG,EAAQsI,EAASwJ,EAAWu5F,GAClC,C,wECaA,QAtBA,SACE/zF,EACAse,EACA8C,GAEA,MAAM,qBAAEo4D,IAAyBxvF,EAAAA,EAAAA,MAE3BiqG,GAAqB1pG,EAAAA,EAAAA,KAAQ,KACjC,MAAM2pG,GAAYzR,EAAAA,EAAAA,IAASjJ,EAVD,KAU8C,GACxE,MAAO,KACL0a,EAAU,CAAEl0F,OAAQA,EAAS85E,SAAU,CAACx7D,IAAY,CACrD,GACA,CAACA,EAASte,KAEb5U,EAAAA,EAAAA,KAAU,KAEJ4U,GAAUse,KADW8C,KAAW,YAAaA,MAAS,cAAeA,KAEvE6yE,GACF,GACC,CAACA,EAAoB7yE,EAAO9C,EAASte,GAC1C,C,2FCjBO,SAASkiD,EAA8B0D,GAC5C,MAAM2S,GAAcC,EAAAA,EAAAA,KAIpB,OAFAptE,EAAAA,EAAAA,KAAU,KAAM+oG,EAAAA,EAAAA,IAAsBvuC,EAAU2S,IAAc,CAAC3S,EAAU2S,KAElE67B,EAAAA,EAAAA,IAAcxuC,EACvB,CAEO,SAASvD,IACd,MAAMkW,GAAcC,EAAAA,EAAAA,KAIpB,OAFAptE,EAAAA,EAAAA,KAAU,KAAMipG,EAAAA,EAAAA,IAA0B97B,IAAc,CAACA,KAElD+7B,EAAAA,EAAAA,KACT,CAEO,SAASC,IACd,MAAMh8B,GAAcC,EAAAA,EAAAA,KAIpB,OAFAptE,EAAAA,EAAAA,KAAU,KAAMopG,EAAAA,EAAAA,IAAsBj8B,IAAc,CAACA,KAE9Ck8B,EAAAA,EAAAA,KACT,C,mFC5Be,SAASC,IAA8C,IAA1BvvC,EAAgBtwD,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GAC1D,MAAM8/F,GAA4BpoG,EAAAA,EAAAA,IAAO44D,GACnCyvC,GAAwBroG,EAAAA,EAAAA,KAAO,GAC/BgsE,GAAcC,EAAAA,EAAAA,MAEpB/6C,EAAAA,EAAAA,IAAc,KACR0nC,IACFwvC,EAA0B5nG,SAAU,EACtC,GACC,CAACo4D,IAEJ,MAAM0vC,GAA+BrlG,EAAAA,EAAAA,IAAgB,KACnDmlG,EAA0B5nG,SAAU,EACpC6nG,EAAsB7nG,SAAU,EAChCwrE,GAAa,IAGTu8B,GAAiCtlG,EAAAA,EAAAA,IAAgB,KACrDolG,EAAsB7nG,SAAU,EAChCwrE,GAAa,IAGf,MAAO,CACLw8B,uBAAwBJ,EAA0B5nG,QAClDioG,mBAAoBJ,EAAsB7nG,QAC1C8nG,+BACAC,iCAEJ,C,6DC9Be,SAAS1tE,EAAqB6tE,GAC3C,MAAOC,EAAUC,IAAYnuE,EAAAA,EAAAA,KA+B7B,OA7BA57B,EAAAA,EAAAA,KAAU,KACR,SAASgqG,IACP,MAAMnrE,EAAY55B,OAAO65B,eACzB,IAAKD,GAAWI,WAAY,OAE5B,MAAMwR,EAAQ5R,EAAUM,WAAW,GACnC,IAAKsR,EACH,OAIF,IADgB74B,SAASkY,cAAc+5E,GAErC,OAGF,MAAM,wBAAEzkB,GAA4B30C,GACpB20C,aAAmC6kB,QAC/C7kB,EACAA,EAAwBD,eAChBt5D,QAAQg+E,IAClBE,EAASt5D,EAEb,CAIA,OAFA74B,SAASiH,iBAAiB,kBAAmBmrF,GAEtC,IAAMpyF,SAASmH,oBAAoB,kBAAmBirF,EAAkB,GAC9E,CAACH,EAAeE,IAEZD,CACT,C,kDCnCA,MA4BA,EA5B4B,SAC1BnpC,EACAl1C,GAEG,IADHy+E,EAAoBzgG,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,IAEpBzJ,EAAAA,EAAAA,KAAU,KACR,GAAIyrB,EACF,OAGF,MAAMq5C,EAAYnE,EAAah/D,QAE/B,SAAS2iE,EAAa91D,GAEfA,EAAE27F,SACLrlC,EAAWihB,YAAcv3E,EAAEy2D,OAAS,EAChCilC,GAAsB17F,EAAEuT,iBAEhC,CAIA,OAFA+iD,EAAUjmD,iBAAiB,QAASylD,EAAc,CAAEY,SAAUglC,IAEvD,KACLplC,EAAU/lD,oBAAoB,QAASulD,EAAa,CACrD,GACA,CAAC3D,EAAcl1C,EAAYy+E,GAChC,C,6DCvBA,MAAME,EAAc,IAAI7mG,IAAI,CAAC,QAAS,WAAY,WAE5CsgG,GAAWwG,EAAAA,EAAAA,KAGV,SAASpoC,EAAWqoC,IACzBtqG,EAAAA,EAAAA,KAAU,KACR,IAAKsqG,EACH,OAGF,MAAMtiB,EAAUtoF,OAAOsoF,QAAQsiB,GAc/B,OAAOzG,EAASrrC,aAZhB,SAAuBhqD,IAgB3B,SAAyBA,GACvB,QAAIA,EAAEqa,kBAAkBnI,eACd0pF,EAAYrmG,IAAIyK,EAAEqa,OAAOjI,QAIrC,EArBW2pF,CAAgB/7F,IAIrBw5E,EAAQr7E,SAAQpO,IAAuB,IAArBisG,EAAQ/yC,GAAQl5D,GCmDjC,SAA0BisG,GAC/B,OAAQxmD,GAlCV,SAAuBwmD,EAAgBxmD,GACrC,MAAM,IACJ1iC,EAAG,KAAEmpF,EAAI,KAAEC,EAAI,IAAEC,EAAG,MAAEhoC,EAAK,IAAE7hE,GAC3B0pG,GACE,OACJtoB,EAAM,QAAE3f,EAAO,QAAED,EAAO,SAAE6T,EAAUr1E,IAAK8pG,GACvC5mD,EAEJ,GAAI1iC,IAAQ4gE,EACV,OAAO,EAGT,GAAIyoB,GACF,IAAKpoC,IAAYD,EACf,OAAO,MAEJ,CACL,GAAImoC,IAASloC,EACX,OAAO,EAET,GAAImoC,IAASpoC,EACX,OAAO,CAEX,CACA,OAAIK,IAAUwT,GAIPj4E,QAAQ4C,IACT8pG,EAAWlnF,gBAAkB5iB,EAAI4iB,eAChCsgC,EAAMwe,KAAK/oD,QAAQ,MAAO,IAAIiK,gBAAkB5iB,EAAI4iB,eAC7D,CAGoBmnF,CA1Db,SAAqBL,GAC1B,MAAM18E,EAAO08E,EACV9mF,cACApN,MAAM,KACNzW,KAAKirG,GAASA,EAAK/iE,SAEhBgjE,EAA+B,CACnCzpF,IAAKwM,EAAKxO,SAAS,OACnBmrF,KAAM38E,EAAKxO,SAAS,QACpBorF,KAAM58E,EAAKxO,SAAS,QACpBqrF,IAAK78E,EAAKxO,SAAS,OACnBqjD,MAAO70C,EAAKxO,SAAS,UAGjB0rF,EAAe,CAAC,MAAO,OAAQ,OAAQ,QAAS,OAItD,MAAO,IACFD,EACHjqG,IAJcgtB,EAAKoE,MAAMpxB,IAASkqG,EAAa1rF,SAASxe,KAM5D,CAoCkCmqG,CAAYT,GAASxmD,EACvD,EDpDYknD,CAAiBV,EAAjBU,CAAyB18F,IAC3BipD,EAAQjpD,EACV,GAEJ,GAE0C,GACzC,CAAC87F,GACN,CAxBA1yF,SAASwK,gBAAgBvD,iBAAiB,UAAWglF,EAASsH,a,wEED9D,MAAMC,EAAiB,IACjBC,EAAsB,IAEb,SAASC,EACtB7vE,EACAxR,EACAI,GAEA,MAAM,SAAE3iB,IAAaC,EAAAA,EAAAA,OAErB3H,EAAAA,EAAAA,KAAU,KACJiqB,EACGviB,GACHnD,YAAW,MACT4+B,EAAAA,EAAAA,KAAgB,KACV1H,EAAS95B,SAASusF,aACpBzyD,EAAS95B,QAAQ+V,OACnB,GACA,GACD0zF,IAGD3vE,EAAS95B,SAASusF,aACpBzyD,EAAS95B,QAAQ6rC,OAGfnjB,GACF9lB,WAAW8lB,EAASghF,GAExB,GACC,CAAC5vE,EAAU/zB,EAAUuiB,EAAQI,GAClC,C,kHC1BA,MAAMkhF,EAAqB,IACrBC,EAAoB,KACpBC,EAAoB,IAEX,SAASljG,EACtBmjG,GAKA,IAJAppG,EAAMmH,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GACNkiG,EAAWliG,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAGzG,EAAAA,GAAeC,QAC7B40F,EAAsBpuF,UAAA1H,OAAA,EAAA0H,UAAA,QAAAzL,EACtB4tG,EAAaniG,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GAEb,MAAMtB,EAAYujG,EAAYjgD,EAAAA,GAA0BigD,QAAa1tG,EAC/D6tG,EAAcC,EAAAA,IAA4BH,IAAgB3oG,EAAAA,GAAes6F,YACzEnwB,GAAcC,EAAAA,EAAAA,KACdnvE,GAAK8tG,EAAAA,EAAAA,MACJ1jG,EAAc2jG,IAAmBlkG,EAAAA,EAAAA,IAASK,IAAc0jG,EAAc,EAAI,GAC3EI,GAAe9qG,EAAAA,EAAAA,MAEf+qG,GAAiB/sG,EAAAA,EAAAA,KAAQ,KACtBk4F,EAAAA,EAAAA,KAAUlrF,IACX8/F,EAAatqG,WAAak2F,GAAU/8E,KAAKC,MAAQkxF,EAAatqG,QAAUk2F,IAC1EmU,EAAgB7/F,EAClB,GACCs/F,GAAmB,IACrB,CAAC5T,IAiDJ,OA/CA73F,EAAAA,EAAAA,KAAU,MACHsC,GAAUopG,IACRvjG,EAmBM0jG,GACTtnG,YAAW,KACTynG,EAAgBT,EAAmB,GAClCC,IArBHQ,EAAgB,GAEZC,EAAatqG,SACf8pD,EAAAA,GAA2BygD,GAG7BD,EAAatqG,QAAUmZ,KAAKC,MAE5B0wC,EAAAA,GAAkBigD,EAAWC,EAAaC,EAAeM,EAAgBjuG,GAAI2wE,MAAK,KAChF,MAAMu9B,EAAYrxF,KAAKC,MAAQkxF,EAAatqG,QAC5CsqG,EAAatqG,aAAU3D,GAElB65F,GAASsU,GAAatU,EACzB1qB,IAEA5oE,WAAW4oE,EAAa0qB,EAAQsU,EAClC,KAON,GACC,CACD7pG,EAAQopG,EAAWvjG,EAAWwjG,EAAax+B,EAAa0+B,EAAahU,EAAOqU,EAAgBN,EAAe3tG,KAG7G+B,EAAAA,EAAAA,KAAU,KACJsC,GAAU2pG,EAAatqG,UACzB8pD,EAAAA,GAA2BygD,GAC3BF,EAAgB,GAChBC,EAAatqG,aAAU3D,EACzB,GACC,CAACkuG,EAAgB5pG,KAEpBtC,EAAAA,EAAAA,KAAU,IACD,KACD0rG,GACFjgD,EAAAA,GAA2BigD,EAAWztG,EACxC,GAED,CAACA,EAAIytG,IAED,CAAEvjG,YAAWE,eACtB,C,wECjFA,MAAM+jG,EAAqB,IAC3B,IAAIC,EAEW,SAASlkF,EACtB8B,EAAiBI,GACjB,IAD8CiiF,EAAgB7iG,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG2iG,EAAoB3gF,EAAUhiB,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GAE/F,MAAM8iG,GAAgBprG,EAAAA,EAAAA,KAAO,GAEvB+mB,GAAkB9jB,EAAAA,EAAAA,IAAgB,KACtCmoG,EAAc5qG,SAAU,CAAI,IAqC9B,OAlCA3B,EAAAA,EAAAA,KAAU,KACJqsG,IACF/xB,aAAa+xB,GACbA,OAAeruG,IAGbisB,GAAWO,EAAAA,IAAiBiB,IAC9B4gF,EAAepnG,OAAOV,YAAW,KAC1BgoG,EAAc5qG,SACjB0oB,GACF,GACoB,EAAnBiiF,GACL,GACC,CAAC7gF,EAAYxB,EAAQqiF,EAAkBjiF,IAqBnC,EAnBkBjmB,EAAAA,EAAAA,IAAgB,KACvCmoG,EAAc5qG,SAAU,CAAI,KAGLyC,EAAAA,EAAAA,IAAgB,KACvCmoG,EAAc5qG,SAAU,EAEpB0qG,IACF/xB,aAAa+xB,GACbA,OAAeruG,GAGjBquG,EAAepnG,OAAOV,YAAW,KAC1BgoG,EAAc5qG,SACjB0oB,GACF,GACCiiF,EAAiB,IAGsBpkF,EAC9C,C,mFC9Ce,SAASskF,EAA0B7qG,EAAYsH,GAC5D,MAAMwjG,GAAOtwE,EAAAA,EAAAA,GAAYx6B,GAAS,GAC5Bm2F,GAAa32F,EAAAA,EAAAA,MACbgsE,GAAcC,EAAAA,EAAAA,KAEds/B,EAAmB/qG,QAEnBgrG,EAAgBF,QAiBtB,OAfIC,GAAoB5U,EAAWn2F,UACjC24E,aAAawd,EAAWn2F,SACxBm2F,EAAWn2F,aAAU3D,IAGvBq0B,EAAAA,EAAAA,IAAc,KAERppB,IAAayjG,GAAoBC,IAAkB7U,EAAWn2F,UAChEm2F,EAAWn2F,QAAUsD,OAAOV,YAAW,KACrCuzF,EAAWn2F,aAAU3D,EACrBmvE,GAAa,GACZlkE,GACL,GACC,CAACA,EAAUkkE,EAAau/B,EAAkBC,IAErC7U,EAAWn2F,SAAYsH,IAAYyjG,EAA6BD,EAAV9qG,CAChE,C,6DCvBe,SAASmhG,EACtB8J,EACAC,GAEA,MAAM1/B,GAAcC,EAAAA,EAAAA,KACd0/B,GAAa3rG,EAAAA,EAAAA,IAAOyrG,GACpBpwC,GAAQr7D,EAAAA,EAAAA,IAAO0rG,GAEfE,GAAW/tG,EAAAA,EAAAA,KAAaosC,IAC5BoxB,EAAM76D,QAAUmrG,EAAWnrG,QAAQ66D,EAAM76D,QAASypC,GAClD+hC,IACO3Q,EAAM76D,UACZ,IAEH,MAAO,CACL66D,EAAM76D,QACNorG,EAEJ,C,kDCxBe,SAASjkE,EAAgBg0D,EAAYoG,EAAmBK,GAAkC,IAAhBP,EAASv5F,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG,GACnG,OAAO25D,EAAAA,EAAAA,IAAsBjxD,IAC3BA,GAAI,GAEH6wF,EAAMlG,EAAIoG,EAASK,EACxB,C,6HCEA,MAQA,EAR0CnhG,IACxC,MAAM,OAAE6nB,GAAW7nB,EACb4qG,GAAgBrmF,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,iBAAkBoD,GAGvE,OAAO+iF,EAAgBxsG,EAAAA,GAAAC,cAACusG,EAAkB5qG,QAAYpE,CAAS,ECmDjE,EArDoB2/B,CAClBhH,EACAs2E,EACAC,KAEA,MAAMruG,GAAOC,EAAAA,EAAAA,MACNquG,EAAaC,IAAkBtlG,EAAAA,EAAAA,MAEhC2mC,GAAwBrqC,EAAAA,EAAAA,IAAgB,SAAC4B,GAAqC,IAAzBqnG,EAAY5jG,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GAErE,MAAMukC,EAAc/jC,KAAKjJ,MAAMiJ,KAAK8C,IAAI/G,EAAKsnG,UAAWxyF,KAAKC,MAAQ,KAAa,MAC7EsyF,EAAe,GAAIE,EAAAA,EAAAA,OACxBJ,IAAcn/D,GACdo/D,OAAepvG,EACjB,IAEMwvG,GAAmCppG,EAAAA,EAAAA,IAAgB,KACvDqqC,EAAsB,IAAI3zB,KAA6B,IAAxBo4B,EAAAA,MAA+B,EAAK,IAG/Du6D,GAAsBrpG,EAAAA,EAAAA,IAAgB,KAC1CgpG,OAAepvG,GACfivG,KAAY,IAGRxvE,GAAkBr5B,EAAAA,EAAAA,IAAiBspG,IACvCN,GAAe,IAAMM,GAAc,IAG/B37D,EAAuBm7D,EAAS,IAAIpyF,KAAc,IAAToyF,GAAiB,IAAIpyF,KACpEi3B,EAAqBC,WAAW,GAChCD,EAAqBE,gBAAgB,GAErC,MAAMC,EAAmB,IAAIp3B,KAiB7B,OAhBAo3B,EAAiBC,YAAYD,EAAiBE,cAAgB,GAgBvD,CAAC3U,EAbNj9B,EAAAA,GAAAC,cAACusG,EAAa,CACZ/iF,OAAQ/rB,QAAQivG,GAChBQ,gBAAc,EACdC,WAAY77D,EAAqBu7D,UACjCO,OAAOC,EAAAA,EAAAA,IAAc57D,GACrB67D,cAAY,EACZC,kBAAmBr3E,EAAyB93B,EAAK,gCAA6Bb,EAC9EqsB,QAASojF,EACThqD,SAAUhV,EACVw/D,oBAAqBt3E,EAAyB62E,OAAmCxvG,IAInD,C,mFCtDpC,MASA,EAT6B8+B,CAACx/B,EAAiB2V,KACtC9T,EAAAA,EAAAA,KAAQ,KACNk4F,EAAAA,EAAAA,KAAUjsD,IACV9tC,GAAW2V,IAChBrU,EAAAA,EAAAA,MAAai+B,kBAAkB,CAAEv/B,SAAQ2V,WAAUm4B,UAAS,GAC3D7H,EAAAA,MACF,CAACjmC,EAAQ2V,G,6DCVC,SAAS2oB,EAAasyE,GACnC,MAAMC,GAAYhtG,EAAAA,EAAAA,MAElB,OADAgtG,EAAUxsG,UAAVwsG,EAAUxsG,SAAY+6D,EAAAA,EAAAA,IAAgBwxC,IAC/BC,EAAUxsG,OACnB,C,uECHO,SAAS4mG,EAAgBxzC,EAA4B6iC,GAE1D,MAAMwW,GAAajtG,EAAAA,EAAAA,KAAO,GACtBitG,EAAWzsG,UACbysG,EAAWzsG,SAAU,EAErBi2F,GAAcjrF,SAAS0hG,KACjBt4C,EAAAA,EAAAA,IAASs4C,IACXA,EAAWC,UAAUv5C,EACvB,MAIJ8H,EAAAA,EAAAA,IAAc,IACL,MACL0xC,EAAAA,EAAAA,IAAcx5C,EAAO,GAG3B,C,kDCLA,QAhBA,SAAoB8nC,EAAsBhF,GACxC,MAAM2W,GAAgBrtG,EAAAA,EAAAA,IAAO07F,IAE7B5wF,EAAAA,EAAAA,KAAgB,KACduiG,EAAc7sG,QAAUk7F,CAAQ,GAC/B,CAACA,KAEJ78F,EAAAA,EAAAA,KAAU,KACR,GAAqB,iBAAV63F,EACT,OAEF,MAAM55F,EAAKsG,YAAW,IAAMiqG,EAAc7sG,WAAWk2F,GACrD,MAAO,IAAMvd,aAAar8E,EAAG,GAC5B,CAAC45F,GACN,C,wdCmEA,MAAM4W,EAKJh0B,WAAAA,CACS5xD,EACC6tB,EACAg4D,GACR,KAHO7lF,OAAAA,EAAc,KACb6tB,SAAAA,EAAsC,KACtCg4D,QAAAA,EAAgB/zB,EAAA,qBAPF,IAAIpiB,KAA4BoiB,EAAA,+BAEtB,IAAIpiB,IAOtC,CAGO0iB,OAAAA,GACP,CAEA32D,IAAAA,GAAqB,QAAAqqF,EAAAllG,UAAA1H,OAAb2sC,EAAI,IAAA1kC,MAAA2kG,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJlgE,EAAIkgE,GAAAnlG,UAAAmlG,GACVh0B,KAAKi0B,YAAY,CACfn2F,KAAM,OACNg2B,QAEJ,CAEAogE,OAAAA,CAAQC,GACN,MAAM,cAAEC,EAAa,wBAAEC,GAA4Br0B,KAE7CxrE,GAAY8/F,EAAAA,EAAAA,KACZ7jE,EAA0B,CAC9B3yB,KAAM,aACNtJ,eACG2/F,GAGCI,EAAe,CAAE//F,aAGjBggG,EAAwB,IAAI5sF,SAAQ,CAAC2D,EAASC,KAClD1mB,OAAO2vG,OAAOF,EAAc,CAAEhpF,UAASC,UAAS,IAGlD,GAAqD,mBAA1CilB,EAAQqD,KAAKrD,EAAQqD,KAAK3sC,OAAS,GAAmB,CAC/DspC,EAAQikE,cAAe,EAEvB,MAAMzS,EAAWxxD,EAAQqD,KAAK6gE,MAC9BJ,EAAatS,SAAWA,EACxBoS,EAAwBryC,IAAIigC,EAAUsS,EACxC,CAeA,OAbAH,EAAcpyC,IAAIxtD,EAAW+/F,GAC7BC,EACGI,OAAM,KAAe,IACrBC,SAAQ,KACPT,EAAclyC,OAAO1tD,GAEjB+/F,EAAatS,UACfoS,EAAwBnyC,OAAOqyC,EAAatS,SAC9C,IAGJjiB,KAAKi0B,YAAYxjE,GAEV+jE,CACT,CAEAM,cAAAA,CAAeC,GACbA,EAAiBC,YAAa,EAE9B,MAAM,UAAExgG,GAAcwrE,KAAKq0B,wBAAwB3yE,IAAIqzE,IAAqB,CAAC,EACxEvgG,GAILwrE,KAAKi0B,YAAY,CACfn2F,KAAM,iBACNtJ,aAEJ,CAEAygG,SAAAA,CAAUjmG,GACR,MAAM,cAAEolG,EAAa,QAAEN,GAAY9zB,KACnC,GAAIhxE,EAAK8kG,UAAYA,EAOrB,GAHkB,WAAd9kG,EAAK8O,MAAqBkiE,KAAKlkC,UACjCkkC,KAAKlkC,SAAS9sC,EAAK8gC,QAEH,mBAAd9gC,EAAK8O,KAA2B,CAClC,MAAMy2F,EAAeH,EAAc1yE,IAAI1yB,EAAKwF,WACxC+/F,IACEvlG,EAAK0W,MACP6uF,EAAa/oF,OAAOxc,EAAK0W,OAEzB6uF,EAAahpF,QAAQvc,EAAKkmG,UAGhC,MAAO,GAAkB,mBAAdlmG,EAAK8O,KAA2B,CACzC,MAAMy2F,EAAeH,EAAc1yE,IAAI1yB,EAAKwF,WAC5C+/F,GAActS,cAAcjzF,EAAKmmG,aACnC,MAAO,GAAkB,mBAAdnmG,EAAK8O,KACd,MAAM,IAAIsmE,MAAMp1E,EAAK0W,OAAO1a,QAEhC,CAEQipG,WAAAA,CAAYjlG,GAClBA,EAAK8kG,QAAU9zB,KAAK8zB,QAEpB9zB,KAAK/xD,OAAOgmF,YAAYjlG,EAC1B,EAGK,SAASomG,EACdC,EACAv5D,EACAg4D,GAEA,MAAMwB,EAAY,IAAIzB,EAAkBwB,EAAQv5D,EAAUg4D,GAE1D,SAASyB,EAAa5xG,GAA+B,IAA9B,KAAEqL,GAA0BrL,EACjD2xG,EAAUL,UAAUjmG,EACtB,CAQA,OANAqmG,EAAOpxF,iBAAiB,UAAWsxF,GAEnCD,EAAUj1B,QAAU,KAClBg1B,EAAOlxF,oBAAoB,UAAWoxF,EAAc,EAG/CD,CACT,C,gFC9MA,MAAME,EAAmB,IAEnBC,EAAsC,IAAI93C,IAEjC,SAAS+3C,EAAwBxrC,EAAwBr2D,GAA2C,IAA7BxF,EAAQQ,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG2mG,GAC1F3uG,EAAAA,EAAAA,MAA0BpC,EAAAA,EAAAA,SAC7B4J,EAAW,GAGb,MAAM9G,EAA0C,QAAlC2iE,EAAU9jD,aAAa,QAC/B,WACJ+kE,EAAYla,YAAa0kC,EAAc,YAAE3kF,EAAa9K,SAAS,SAAE0vF,IAC/D1rC,EAEJ,IAAInT,EAAOljD,EAAOs3E,EAElB,GAAIp0B,EAAO,EAAG,CACZ,MAAM8+C,GAAiB1qB,GAAc5jF,GAAS,EAAI,GAClDwvD,EAAO1nD,KAAK8C,IAAI4kD,EAAM8+C,EACxB,MAAO,GAAI9+C,EAAO,EAAG,CACnB,MAAM8+C,EAAgB7kF,GAAem6D,EAAawqB,GAClD5+C,EAAO1nD,KAAKC,IAAIynD,EAAM8+C,EACxB,CAEA,GAAa,IAAT9+C,EACF,OAAOnvC,QAAQ2D,UAGbqqF,GAAYH,EAAStsG,IAAIysG,IAC3BH,EAAS/zE,IAAIk0E,EAAbH,GAGF,MAAMxnF,EAASk9D,EAAap0B,EAE5B,OAAO,IAAInvC,SAAe2D,KACxBgd,EAAAA,EAAAA,KAAgB,KACd,GAAiB,IAAbl6B,EAGF,OAFA67D,EAAUihB,WAAal9D,OACvB1C,IAIF,IAAIuqF,GAAY,EAChB,MAAMzyG,EAAKgM,KAAK+Q,SAASL,WACzBmqD,EAAUhkD,QAAQ0vF,SAAWvyG,EAC7BoyG,EAASzzC,IAAI3+D,GAAI,KACfyyG,GAAY,CAAI,IAGlB5rC,EAAUrgE,MAAMksG,eAAiB,OAEjC,MAAMC,EAAU91F,KAAKC,OAErB81F,EAAAA,EAAAA,KAAQ,KACN,GAAIH,EAAW,OAAO,EAEtB,MAAMI,EAAI7mG,KAAKC,KAAK4Q,KAAKC,MAAQ61F,GAAW3nG,EAAU,GAEhD8nG,EAAcp/C,GAAQ,EAgBpC,SAAoBm/C,GAClB,OAAO,GAAM,EAAIA,IAAM,GACzB,CAlBwCE,CAAWF,IAU3C,OATAhsC,EAAUihB,WAAa97E,KAAKjJ,MAAM6nB,EAASkoF,GAEvCD,GAAK,IACPhsC,EAAUrgE,MAAMksG,eAAiB,UAC1B7rC,EAAUhkD,QAAQ0vF,SACzBH,EAASvzC,OAAO7+D,GAChBkoB,KAGK2qF,EAAI,CAAC,GACX3tE,EAAAA,GAAgB,GACnB,GAEN,C,gJC3DA,IACI8tE,EADA7vG,GAAc,EAGH,SAASu1F,IAAsD,QAAAgY,EAAAllG,UAAA1H,OAArC2sC,EAAI,IAAA1kC,MAAA2kG,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJlgE,EAAIkgE,GAAAnlG,UAAAmlG,GAC3CqC,EAAcviE,EAAK9uC,MAAM,EAAG,GAE5B,MAAMsxG,EAASC,KAAwBF,GAGvC,GAD+BviE,EAAK,GAElC,OAAOwiE,GAGT/tE,EAAAA,EAAAA,IAAgB+tE,EAElB,CAEO,SAASE,IACThwG,KAILiwG,EAAAA,EAAAA,OAEArrF,EAAAA,EAAAA,KAAe,MACbmd,EAAAA,EAAAA,IAAgBguE,KAAwBF,GAAc,IAE1D,CAEA,SAASE,EACPrsC,EACAx0B,EACA/D,GAMA,IALA+kE,EAAM7nG,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG,EACT8nG,EAAW9nG,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG+nG,EAAAA,IACdC,EAA+BhoG,UAAA1H,OAAA,EAAA0H,UAAA,QAAAzL,EAC/B0zG,EAAsBjoG,UAAA1H,OAAA,EAAA0H,UAAA,QAAAzL,EACtB2zG,EAAoCloG,UAAA1H,OAAA,EAAA0H,UAAA,QAAAzL,EAGlCyzG,IAAmBG,EAAAA,GAAeC,SAC9BpwG,EAAAA,EAAAA,MAA0BpC,EAAAA,EAAAA,SAE9BqyG,EAAgB,GAGlB,MAAQ/2C,UAAWm3C,EAAY9sC,aAAc+sC,GAAkBzhE,GACvD6zB,UAAW6tC,EAAkBhtC,aAAcitC,EAAe,aAAEltC,GAAiBD,EAC/EotC,EAAwBP,GAA8B7sC,EAAUhkD,QAAQqxF,aAC1E1mE,OAAOq5B,EAAUhkD,QAAQqxF,cACzBF,EAEJ,IAAIG,EACJ,OAAQ7lE,GACN,IAAK,QACH6lE,EAAYN,EAAaR,GAAWz0B,EAAAA,GAAa,EAAI,GACrD,MACF,IAAK,MACHu1B,EAAYN,EAAaC,EAAgBT,EAAUY,EACnD,MAEF,IAAK,UACL,IAAK,SACL,IAAK,cACHE,EAAWL,EAAgBG,EACtBJ,EAAaC,EAAgB,EAAIG,EAAwB,EACzDJ,EAAaR,EAItB,MAAMe,EA8DR,SACEvtC,EACAstC,GAGA,IAFAb,EAAW9nG,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG+nG,EAAAA,IACdC,EAA+BhoG,UAAA1H,OAAA,EAAA0H,UAAA,QAAAzL,EAE/B,MAAM,UAAEmmE,GAAcW,EAEtB,QAAuB9mE,IAAnByzG,EAA8B,CAChC,MAAMnqE,EAAS8qE,EAAWjuC,EAE1B,GAAI78B,GAAUiqE,EACZ,OAAOptC,GAAa78B,EAASiqE,GACxB,GAAIjqE,EAASiqE,EAClB,OAAOptC,GAAa78B,EAASiqE,EAEjC,KAAO,IAAIE,IAAmBG,EAAAA,GAAeU,GAC3C,OAAOF,EAAWb,EACb,GAAIE,IAAmBG,EAAAA,GAAeW,KAC3C,OAAOtoG,KAAK8C,IAAI,EAAGqlG,EAAWb,EAChC,CAEA,OAAOptC,CACT,CArFqBquC,CAAoB1tC,EAAWstC,EAAUb,EAAaE,GAEzE,IAAI9/C,EAAOygD,EAAWC,EACtB,GAAI1gD,EAAO,EAAG,CACZ,MAAM8+C,GAAiB4B,EACvB1gD,EAAO1nD,KAAK8C,IAAI4kD,EAAM8+C,EACxB,MAAO,GAAI9+C,EAAO,EAAG,CACnB,MAAM8+C,EAAgB1rC,GAAgBstC,EAAaH,GACnDvgD,EAAO1nD,KAAKC,IAAIynD,EAAM8+C,EACxB,CAEA,MAAMgC,EAAUxoG,KAAK8hE,IAAIpa,GAEzB,MAAO,KACL,GAAI8gD,EAAU,EAKZ,YAJIT,IAAqBK,IACvBvtC,EAAUX,UAAYkuC,IAM1B,MAAMxpF,EAASwpF,EAAa1gD,EAE5B,GAAsB,IAAlB+/C,EAEF,YADA5sC,EAAUX,UAAYt7C,GAIxBznB,GAAc,EAEd,MAAM4vG,EAAayB,GAAWC,EAAAA,IAA4CC,EAAkBC,EACtF3pG,EAAWyoG,GACfmB,EAAAA,IACGJ,EAAUjB,EAAAA,KAA6BsB,EAAAA,IAA2BD,EAAAA,KAEjEjC,EAAU91F,KAAKC,MACfg4F,GAAuB1pC,EAAAA,EAAAA,OAE7B2pC,EAAAA,EAAAA,KAAc,KACZ,MAAMlC,EAAI7mG,KAAKC,KAAK4Q,KAAKC,MAAQ61F,GAAW3nG,EAAU,GAChD8nG,EAAcp/C,GAAQ,EAAIq/C,EAAWF,IACrCvsC,EAAet6D,KAAKjJ,MAAM6nB,EAASkoF,GAWzC,OATAjsC,EAAUX,UAAYI,EAEtBnjE,EAAc0vG,EAAI,GAAKvsC,IAAiB17C,EAEnCznB,IACH6vG,OAAcjzG,EACd+0G,KAGK3xG,CAAW,GACjB+hC,EAAAA,GAAgB,CAEvB,CAEO,SAAS8vE,IACd,OAAO7xG,CACT,CA2BA,SAASuxG,EAAgB7B,GACvB,OAAO,GAAM,EAAIA,IAAM,GACzB,CAEA,SAAS8B,EAAe9B,GACtB,OAAO,GAAM,EAAIA,IAAM,GACzB,C,gJC7JA,MAAMoC,EAAS,IAAI36C,IACnB,IAGI46C,EAHAC,EAAwB,GACxBC,EAAwB,GA0D5B,SAASC,EAAS5P,EAAkB6P,GAClC,MAAMC,EAAeL,GAAkBD,EAAO52E,IAAI62E,GAC9CK,IACFA,EAAapsG,MAAMqf,QACnB+sF,EAAapsG,MAAMkiD,YAAc,EAC7BkqD,EAAavP,eAAeuP,EAAavP,iBAG/C,MAEMwP,EAAcC,EAAgBhQ,GAFrB9lG,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OAAaumG,YAAY7/F,QAAU8J,EAAAA,GAAYC,OAExByjG,GACrD,IAAKE,EACH,OAGF,IAAKP,EAAOnvG,IAAI0vG,GAId,YAFA70G,EAAAA,EAAAA,MAAa+0G,iBAAgBC,EAAAA,EAAAA,IAAgBC,EAAaJ,GAAaljD,aAKzE,MAAMujD,EAAYZ,EAAO52E,IAAIm3E,GAEzBK,EAAU9P,aACZ8P,EAAU9P,cAGZmP,EAAiBM,EAEbK,EAAU1sG,MAAMzC,MAClBq2E,EAAAA,EAAAA,GAAS84B,EAAU1sG,MAEvB,CAEO,SAAS2sG,IACd,MAAMP,EAAeL,GAAkBD,EAAO52E,IAAI62E,GAC9CK,GACFA,EAAapsG,MAAMqf,OAEvB,CAEO,SAAS89E,EACdb,EACAE,EACAnsC,EACAusC,EACAC,GAEA,IAAKiP,EAAOnvG,IAAI2/F,GAAU,CACxB,MAAMsQ,EAxGV,SACEtQ,EACAhrF,EACAsrF,EACAC,GAEA,MAAM78F,EAAQ,IAAI6sG,MAElB,SAASC,EAAY1P,GACnB,OAAQh2F,IACD0kG,EAAOnvG,IAAI2/F,MAIZuC,EAAAA,EAAAA,GAAwB7+F,IAI5B8rG,EAAO52E,IAAIonE,GAAUG,SAASl3F,SAAS8qD,IACrCA,EAAQ+sC,EAAWh2F,EAAE,IACrB,CAEN,CAoBA,OAlBApH,EAAMyX,iBAAiB,aAAcq1F,EAAY,iBACjD9sG,EAAMyX,iBAAiB,OAAQq1F,EAAY,WAC3C9sG,EAAMyX,iBAAiB,QAASq1F,EAAY,YAC5C9sG,EAAMyX,iBAAiB,YAAaq1F,EAAY,gBAChD9sG,EAAMyX,iBAAiB,aAAcq1F,EAAY,iBACjD9sG,EAAMyX,iBAAiB,UAAWq1F,EAAY,cAC9C9sG,EAAMyX,iBAAiB,SAAS,KACzBq0F,EAAOnvG,IAAI2/F,MAIZuC,EAAAA,EAAAA,GAAwB7+F,IAI5BksG,EAAS5P,GAAQ,IAGZ,CACLt8F,QACAsR,OACAksF,MAAO,IAAIuP,MAAM/sG,EAAO,CACtBk1B,IAAKA,CAACzT,EAAQ/nB,IAAgC+nB,EAAO/nB,KAEvD+iG,SAAU,GACVG,cACAC,gBAEJ,CAoDkBmQ,CAAY1Q,EAASE,EAAWI,EAAaC,GAC3DiP,EAAOt2C,IAAI8mC,EAASsQ,GAwIxB,SAAyBA,EAActQ,GAClB,UAAfsQ,EAAMt7F,MAAqB26F,EAAW/zF,SAASokF,KACjD2P,EAAWrxG,KAAK0hG,GAChB2P,EAAW3tD,KAAK2uD,IAGC,UAAfL,EAAMt7F,MAAqB06F,EAAW9zF,SAASokF,KACjD0P,EAAWpxG,KAAK0hG,GAChB0P,EAAW1tD,KAAK2uD,GAEpB,CAjJIC,CAAgBN,EAAOtQ,EACzB,CACA,MAAM,MAAEt8F,EAAK,MAAEw9F,EAAK,SAAEf,GAAaqP,EAAO52E,IAAIonE,GAI9C,OAFAG,EAAS7hG,KAAKy1D,GAEP,CACL5C,IAAAA,CAAKlwD,GACH,IAAKyC,EAAM2zE,OAAQ,OACnB,MAAMy4B,EAAeL,GAAkBD,EAAO52E,IAAI62E,GAC9CK,GAAgBL,IAAmBzP,IACrC8P,EAAapsG,MAAMqf,QACnB+sF,EAAapsG,MAAMkiD,YAAc,GAC7B28C,EAAAA,EAAAA,GAAwBuN,EAAapsG,SACvCosG,EAAapsG,MAAM0Z,QAAQyzF,sBAAwB,QAEjDf,EAAavP,eAAeuP,EAAavP,iBAG/CkP,EAAiBzP,EAEZt8F,EAAMzC,MACTyC,EAAMzC,IAAMA,EACZyC,EAAMo2F,QAAU,OAEZ74F,EAAI2a,SAAS,kBAAoByjB,EAAAA,YAC5B37B,EAAM0Z,QAAQyzF,uBACrBC,EAAAA,EAAAA,GAA4BptG,MAIhC4zE,EAAAA,EAAAA,GAAS5zE,GA+Hf,SAAsBsR,EAAqBgrF,GACzC,IAAI9lG,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OAAao1G,aAAaC,iBAAmBC,EAAAA,GAAoBC,MAAO,OAC3F,MAAM,OAAEt3G,IAAWs2G,EAAAA,EAAAA,IAAgBC,EAAanQ,GAASnzC,YACnDskD,GAAe3hG,EAAAA,EAAAA,MAAyB7T,EAAAA,EAAAA,QAAc/B,OACtDw3G,EAAe72G,GACnBA,EAAGipC,WAAY,MAAK5pC,MAAcu3G,GAAgB52G,EAAGipC,WAAY,MAAK2tE,KAG3D,UAATn8F,IACF26F,EAAaA,EAAWtzG,OAAO+0G,IAGpB,UAATp8F,IACF06F,EAAaA,EAAWrzG,OAAO+0G,GAEnC,CA7IMC,CAAanR,EAAWF,EAC1B,EAEAj9E,KAAAA,GACM0sF,IAAmBzP,GACrBt8F,EAAMqf,OAEV,EAEAP,IAAAA,GACE,GAAIitF,IAAmBzP,EAAS,CAE9B,MAAMyC,EAAU/+F,EAAMzC,IACtByC,EAAMqf,SAENgZ,EAAAA,EAAAA,KAAoB,KAClBr4B,EAAMzC,IAAM,GACZyC,EAAMzC,IAAMwhG,CAAO,GAEvB,CACF,EAEAn9F,cAAAA,CAAes9F,GACT6M,IAAmBzP,IACjBt8F,EAAM4tG,SACR5tG,EAAM4tG,SAAS1O,GAEfl/F,EAAMkiD,YAAcg9C,EAG1B,EAEA7B,SAAAA,CAAU5+E,GACJstF,IAAmBzP,IACrBt8F,EAAMye,OAASA,EACfze,EAAMqiD,OAAQ,EAElB,EAEAi7C,eAAAA,CAAgBuQ,GACV9B,IAAmBzP,IACrBt8F,EAAM0+F,aAAemP,EAEzB,EAEAtQ,WAAAA,CAAYl7C,GAERriD,EAAMqiD,WADMzrD,IAAVyrD,GACariD,EAAMqiD,MAEPA,CAElB,EAEAm7C,QAEAG,gBAAAA,GACEuO,EAAS5P,EACX,EAEAn4C,OAAMA,KACImoD,EAAgBhQ,GAAS9lG,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OAAaumG,YAAY7/F,QAG3EulD,QAAOA,KACGooD,EAAgBhQ,GAAS9lG,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OAAaumG,YAAY7/F,QAAQ,GAGnFi/F,oBAAAA,GACEsO,EAAS5P,GAAS,EACpB,EAEAzoB,OAAAA,GAAuC,IAA/Bi6B,EAAqBzrG,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GAC3B,MAAMuqG,EAAQd,EAAO52E,IAAIonE,GACpBsQ,IAILA,EAAMnQ,SAAWmQ,EAAMnQ,SAAS9jG,QAAQo1G,GAAMA,IAAM19C,IAE/Cu8C,EAAMnQ,SAAS9hG,SAClBiyG,EAAM5sG,MAAMqf,QACZysF,EAAOp2C,OAAO4mC,GAEVwR,GAgCZ,SAAyBlB,EAActQ,GACrC,MAAM0R,EAAiBv4F,GAAgBA,IAAO6mF,EAC3B,UAAfsQ,EAAMt7F,OACR26F,EAAaA,EAAWtzG,OAAOq1G,IAGd,UAAfpB,EAAMt7F,OACR06F,EAAaA,EAAWrzG,OAAOq1G,GAEnC,CAxCUC,CAAgBrB,EAAOtQ,GAGrBA,IAAYyP,IACdA,OAAiBn1G,IAGvB,EAEJ,CAkDA,SAAS01G,EAAgB3V,GAA2E,IAAvDh4F,EAAM0D,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAGoG,EAAAA,GAAYC,OAAQyjG,EAAwB9pG,UAAA1H,OAAA,EAAA0H,UAAA,QAAAzL,EAChG,MACMyiG,EAlDR,SAAuBuT,GACrB,OAAQA,EAAMt7F,MACZ,IAAK,QAAS,OAAO26F,EACrB,IAAK,QAAS,OAAOD,EACrB,QAAS,OAEb,CA4CgBkC,CADApC,EAAO52E,IAAIyhE,IAEzB,IAAK0C,EAAO,OAEZ,GAAI16F,IAAW8J,EAAAA,GAAYE,OAAQ,CACjC,MAAMgrF,EAAQ0F,EAAMziF,QAAQ+/E,GAC5B,GAAIhD,EAAQ,EAAG,OAEf,OAAO0F,EAAM1F,GADKwY,GAAkB,EAAI,GAE1C,CAEA,MAAM,OAAEj2G,IAAWs2G,EAAAA,EAAAA,IAAgBC,EAAa9V,GAAWxtC,YACrDglD,EAAY9U,EAAM1gG,QAAQ9B,GAAOA,EAAGipC,WAAY,MAAK5pC,OACrDy9F,EAAQwa,EAAUv3F,QAAQ+/E,GAChC,GAAIhD,EAAQ,EAAG,OACf,IAAI5uC,EAAYpmD,IAAW8J,EAAAA,GAAYC,QAAU,EAAI,EAErD,OADIyjG,IAAgBpnD,IAAc,GAC3BopD,EAAUxa,EAAQ5uC,EAC3B,CAEO,SAAShjD,EAAYvD,GAC1B,MAAQ,IAAE4qD,EAAAA,EAAAA,IAAc5qD,MAAYA,EAAQI,MAC9C,CAEA,SAAS6tG,EAAanQ,GAGpB,MAAO,CACLnzC,WAHiBmzC,EAAQ5jF,MAAM,qBAAsB,GAIrD9Z,KAHWylC,OAAOi4D,EAAQptF,MAAM,KAAKi5F,OAKzC,CAGA,SAAS8E,EAAkBmB,EAAeC,GACxC,IAAKD,IAAQC,EAAK,OAAO,EACzB,MAAQzvG,KAAM0vG,EAASnlD,WAAYolD,GAAW9B,EAAa2B,IACnDxvG,KAAM4vG,EAASrlD,WAAYslD,GAAWhC,EAAa4B,GACrDjrC,EAAOorC,EAAUF,EACvB,OAAgB,IAATlrC,EAAaqrC,EAAOC,cAAcH,GAAUnrC,CACrD,C,4gBC3VO,IAAKpe,EAAc,SAAdA,GAAc,OAAdA,EAAAA,EAAc,WAAdA,EAAAA,EAAc,eAAdA,EAAAA,EAAc,eAAdA,EAAAA,EAAc,iBAAdA,CAAc,MA+DnB,MAAM2pD,EAA4B,GACnCC,EAAkB,GAClBC,EAAkB,GAClBC,EAA2B,IAC3BC,EAA2B,IAEjC,SAASC,EAAYzwD,EAAUC,GAC7B,OAAKA,EACE37C,KAAKosG,MAAOzwD,EAAE0wD,MAAQ3wD,EAAE2wD,MAAS1wD,EAAE2wD,MAAQ5wD,EAAE4wD,OADrC,CAEjB,CAEA,SAASC,EAAe7wD,EAAUC,GAChC,MAAO,CACL54C,GAAI24C,EAAE2wD,MAAQ1wD,EAAE0wD,OAAS,EACzBrpG,GAAI04C,EAAE4wD,MAAQ3wD,EAAE2wD,OAAS,EAE7B,CAEA,IAAIE,EAAgB,EACpB,MAAMC,EAAW,IC7DV,MAeLj8B,WAAAA,GAKwB,IALZ,UACVk8B,EAAY,EAAC,YACbC,EAAc,IAAG,UACjBC,EAAY,IAAG,MACfhf,EAAQ,KACOpuF,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG,CAAC,EAACkxE,EAAA,yBAAAA,EAAA,2BAAAA,EAAA,yBAAAA,EAAA,qBAAAA,EAAA,4BAAAA,EAAA,8BAAAA,EAAA,+BACpBC,KAAK+7B,UAAYA,EACjB/7B,KAAKg8B,YAAcA,EACnBh8B,KAAKi8B,UAAYA,EACjBj8B,KAAKid,MAAQA,EACbjd,KAAKk8B,aAAe,IAAI9sG,MAAuB,EAAjB4wE,KAAK+7B,WAAexsG,KAAK,GACvDywE,KAAKm8B,eAAiB,IAAI/sG,MAAuB,EAAjB4wE,KAAK+7B,WAAexsG,KAAK,GACzDywE,KAAKo8B,gBAAkB,IAAIhtG,MAAuB,EAAjB4wE,KAAK+7B,WAAexsG,KAAK,EAC5D,CAEA8sG,KAAAA,CAAMzoG,GACJ,IAAI0oG,EAWJ,YATqBl5G,KADrBwQ,EAAIA,EAAE2oG,eAAiB3oG,GACjB4oG,WACJF,EAAY1oG,EAAE4oG,gBACQp5G,IAAbwQ,EAAEy2D,OACXiyC,GAAwB,GAAZ1oG,EAAEy2D,YACQjnE,IAAbwQ,EAAE6oG,QAAqC,IAAb7oG,EAAE6oG,SACrCH,GAAwB,GAAZ1oG,EAAE6oG,QAEhBz8B,KAAKo8B,gBAAgBh1G,KAAK8Y,KAAKC,OAC/B6/D,KAAKo8B,gBAAgBr0C,QACjBu0C,EAAY,GACdt8B,KAAKk8B,aAAa90G,KAAKk1G,GACvBt8B,KAAKk8B,aAAan0C,QACXiY,KAAK08B,UAAU,KAEtB18B,KAAKm8B,eAAe/0G,KAAKk1G,GACzBt8B,KAAKm8B,eAAep0C,QACbiY,KAAK08B,WAAW,GAE3B,CAEAA,SAAAA,CAAUnrD,GACR,MAAMorD,GAA4B,IAAfprD,EAAmByuB,KAAKm8B,eAAiBn8B,KAAKk8B,aACjE,QAAsB94G,IAAlBu5G,EAAW,GAAkB,OAAOprD,EACxC,GACEyuB,KAAKo8B,gBAAiC,EAAjBp8B,KAAK+7B,UAAgB,GAAK/7B,KAAKid,MAAQ/8E,KAAKC,OAC9Dw8F,EAAW,KAAOA,EAA4B,EAAjB38B,KAAK+7B,UAAgB,GAErD,OAAO,EAET,MAAMa,EAAgBD,EAAW33G,MAAM,EAAGg7E,KAAK+7B,WACzCc,EAAgBF,EAAW33G,MAAMg7E,KAAK+7B,UAA4B,EAAjB/7B,KAAK+7B,WACtDe,EAASF,EAAc1xF,QAAO,CAACgrF,EAAGv6F,IAAMu6F,EAAIv6F,IAC5CohG,EAASF,EAAc3xF,QAAO,CAACgrF,EAAGv6F,IAAMu6F,EAAIv6F,IAC5CqhG,EAAaF,EAASF,EAAcz1G,OACpC81G,EAAaF,EAASF,EAAc11G,OAC1C,OAAOkI,KAAK8hE,IAAI6rC,GAAc3tG,KAAK8hE,IAAI8rC,EAAaj9B,KAAKi8B,YACpDj8B,KAAKg8B,YAAc3sG,KAAK8hE,IAAI8rC,EACnC,GDT4B,CAC5BlB,UAAW,EACXC,YAAa,GACbC,UAAW,GACXhf,MAAO,MAGF,SAASroF,EAAc8gC,EAAsBh4B,GAClD,IAAIw/F,EACAC,GAAW,EACXC,GAAY,EACZC,GAAY,EACZC,EAAkB,EAClBC,EAAY7/F,EAAQ8/F,aAAe,EACnCC,EAAoB,CACtBrrG,EAAG,EACHC,EAAG,GAEDqrG,EAAiB,CACnBtrG,GAAG,EACHC,GAAG,GAEL,MAAMsrG,EAAoBl8E,EAAAA,EAAWC,MACrC,IAIIk8E,EAJAC,EAAqB,CACvBzrG,EAAGurG,EAAkBjsG,MAAQ,EAC7BW,EAAGsrG,EAAkBhsG,OAAS,GAGhC,MAAMmsG,EAAUpgG,EAAQogG,SAAW,EAC7BC,EAAUrgG,EAAQqgG,SAAW,EAEnC,SAASlpG,EAAUjB,GACjB,IAAI8J,EAAQsgG,0BACTpqG,EAAEqa,OAAuBve,QAAQgO,EAAQsgG,2BACtCpqG,EAAEqa,OAAuBgD,QAAQvT,EAAQsgG,yBAF/C,CASA,GAFAd,EAAetpG,EAEA,cAAXA,EAAEkK,MACCJ,EAAQugG,gBAAkBvgG,EAAQ3I,QACrCnB,EAAEuT,iBAGJnK,SAASiH,iBAAiB,YAAai6F,GACvClhG,SAASiH,iBAAiB,UAAWnP,QAChC,GAAe,eAAXlB,EAAEkK,KAAuB,CAGlC,MAAMmQ,EAASra,EAAEqa,OACjBA,EAAOhK,iBAAiB,YAAai6F,EAAQ,CAAE5zC,SAAS,IACxDr8C,EAAOhK,iBAAiB,WAAYnP,GACpCmZ,EAAOhK,iBAAiB,cAAenP,GAEnC,YAAalB,SACCxQ,IAAZwQ,EAAE8nG,QACJ9nG,EAAE8nG,MAAQ9nG,EAAEuqG,QAAQ,GAAGzC,YAGTt4G,IAAZwQ,EAAE+nG,QACJ/nG,EAAE+nG,MAAQ/nG,EAAEuqG,QAAQ,GAAGxC,OAGA,IAArB/nG,EAAEuqG,QAAQh3G,SACZm2G,EAAkB9B,EAAY5nG,EAAEuqG,QAAQ,GAAIvqG,EAAEuqG,QAAQ,IACtDN,EAAqBjC,EAAehoG,EAAEuqG,QAAQ,GAAIvqG,EAAEuqG,QAAQ,KAGlE,CAEIzgG,EAAQ0gG,YACVphG,SAASE,KAAKD,UAAUxT,IAAI,mBAG1BiU,EAAQ7I,WACV6I,EAAQ7I,UAAUjB,EAxCpB,CA0CF,CAEA,SAASkB,EAAUlB,GACbspG,IACEx/F,EAAQ0gG,YACVphG,SAASE,KAAKD,UAAUqJ,OAAO,mBAGjCtJ,SAASmH,oBAAoB,UAAWrP,GACxCkI,SAASmH,oBAAoB,YAAa+5F,GACzChB,EAAajvF,OAAuB9J,oBAAoB,cAAerP,GACvEooG,EAAajvF,OAAuB9J,oBAAoB,WAAYrP,GACpEooG,EAAajvF,OAAuB9J,oBAAoB,YAAa+5F,GAElEnhG,EAAAA,IAAUW,EAAQ2zC,yBACpBjiD,MAAMgW,KAAKpI,SAAS4I,iBAA8BlI,EAAQ2zC,0BACvDt/C,SAASssG,IACRA,EAAWx0G,MAAMy0G,SAAW,EAAE,IAIhC1qG,IACEupG,EACEz/F,EAAQ5I,WACV4I,EAAQ5I,UAAUlB,GAEA,YAAXA,EAAEkK,OACPJ,EAAQ6gG,eAAiBr+F,KAAKC,MAAQ07F,EAAgB,IACxDn+F,EAAQ6gG,cAAc3qG,EAAG,CACvB4qG,QAAStB,EAAcxB,MACvB+C,QAASvB,EAAcvB,SAEhBj+F,EAAQ3X,SAAc,WAAY6N,GAAmB,IAAbA,EAAEQ,QACnDsJ,EAAQ3X,QAAQ6N,GAElBioG,EAAgB37F,KAAKC,SAK3Bg9F,GAAW,EACXC,GAAY,EACZC,GAAY,EACZC,EAAkB,EAClBC,GAAYmB,EAAAA,EAAAA,IAAMnB,EAAWO,EAASC,GACtCH,OAAmBx6G,EACnBq6G,EAAoB,CAClBrrG,EAAG,EACHC,EAAG,GAELqrG,EAAiB,CACftrG,GAAG,EACHC,GAAG,GAEL,MAAMssG,EAAgBl9E,EAAAA,EAAWC,MACjCm8E,EAAqB,CACnBzrG,EAAGusG,EAAcjtG,MAAQ,EACzBW,EAAGssG,EAAchtG,OAAS,GAE5BurG,OAAe95G,CACjB,CAEA,SAAS86G,EAAOtqG,GACd,GAAIspG,EAAc,CAChB,GAAe,cAAXtpG,EAAEkK,MAAyB,YAAalK,SAC1BxQ,IAAZwQ,EAAE8nG,QACJ9nG,EAAE8nG,MAAQ9nG,EAAEuqG,QAAQ,GAAGzC,YAGTt4G,IAAZwQ,EAAE+nG,QACJ/nG,EAAE+nG,MAAQ/nG,EAAEuqG,QAAQ,GAAGxC,OAGrBj+F,EAAQkhG,QAAUtB,EAAkB,GAA0B,IAArB1pG,EAAEuqG,QAAQh3G,QAAc,CACnE,MAAM03G,EAAcrD,EAAY5nG,EAAEuqG,QAAQ,GAAIvqG,EAAEuqG,QAAQ,IAClDW,EAAclD,EAAehoG,EAAEuqG,QAAQ,GAAIvqG,EAAEuqG,QAAQ,IACrDY,EAAcD,EAAY1sG,EAAIyrG,EAAmBzrG,EACjD4sG,EAAcF,EAAYzsG,EAAIwrG,EAAmBxrG,EACjD4sG,EAAaJ,EAAcvB,EACjC5/F,EAAQkhG,OAAOhrG,EAAG,CAChBqrG,aACAC,eAAgBrB,EAAmBzrG,EACnC+sG,eAAgBtB,EAAmBxrG,EACnC0sG,cACAC,cACAI,eAAgBN,EAAY1sG,EAC5BitG,eAAgBP,EAAYzsG,IAEX,IAAf4sG,IAAkB9B,GAAW,EACnC,CAGF,MAAM4B,EAAcnrG,EAAE8nG,MAASwB,EAAaxB,MACtCsD,EAAcprG,EAAE+nG,MAASuB,EAAavB,OAExCtsG,KAAK8hE,IAAI4tC,IAAgB3D,GAAmB/rG,KAAK8hE,IAAI6tC,IAAgB5D,KACvE+B,GAAW,GAGb,IAAImC,GAAsB,EAEtB5hG,EAAQ3I,SACV2I,EAAQ3I,OAAOnB,EAAGspG,EAAc,CAC9B6B,cACAC,gBAEFM,GAAsB,GAGpB5hG,EAAQ4zC,UAAY8rD,IACtBA,EAaN,SAAiBxpG,EAAgCmrG,EAAqBC,GAEpE,GAAIjiG,EAAAA,GAAQ,CACV,MAAM3K,EAAKwB,EAAqBuqG,QAAQ,GAAGzC,MAC3C,GAAItpG,GAAK+oG,GAA6B/oG,GAAKqvB,EAAAA,EAAWC,MAAMhwB,MAAQypG,EAClE,OAAO,CAEX,CAEA,MAAMoE,EAAOlwG,KAAK8hE,IAAI4tC,GAChBS,EAAOnwG,KAAK8hE,IAAI6tC,GAEtB,GAAID,GAAeC,GACH3vG,KAAK8C,IAAIotG,EAAMC,GAAQnwG,KAAKC,IAAIiwG,EAAMC,GAExC,EACV,OAAO,EAIX,IAAIC,EAOJ,GANIF,GAAQlE,EACVoE,EAAO,IACED,GAAQnE,IACjBoE,EAAO,MAGJA,EACH,OAAO,EAGT,GAAK7B,GAEE,GAAIA,IAAqB6B,EAE9B,OAAO,OAHP7B,EAAmB6B,EAMrB,OAiGJ,SACE7rG,EACA8rG,EACAX,EACAC,EACA1tD,GAEA,MAAyB,MAArBouD,EAEOpuD,EAAQ19C,EADbmrG,EAAc,EACEvtD,EAAeE,KAEfF,EAAeC,OAEL,MAArBiuD,GAEApuD,EAAQ19C,EADborG,EAAc,EACExtD,EAAekmD,GAEflmD,EAAemmD,KAKvC,CAvHWgI,CAAa/rG,EAAG6rG,EAAMV,EAAaC,EAAathG,EAAQ4zC,QACjE,CApDkBA,CAAQ19C,EAAGmrG,EAAaC,GACpCM,EAAsBlC,GAGpBrgG,EAAAA,IAAUuiG,GAAuB5hG,EAAQ2zC,yBAC3CjiD,MAAMgW,KAAKpI,SAAS4I,iBAA8BlI,EAAQ2zC,0BACvDt/C,SAASssG,IACRA,EAAWx0G,MAAMy0G,SAAW,QAAQ,GAG5C,CACF,CA2CA,MAAMsB,GAAmBtoG,EAAAA,EAAAA,IAASxC,EAAWymG,GAA0B,GACjEsE,GAAmBvoG,EAAAA,EAAAA,IAASxC,EAAWwmG,GAA0B,GAEvE,SAASwE,EAAelsG,GAClBupG,IACJtoG,EAAUjB,GACVupG,GAAW,EACXU,EAAqB,CAAEzrG,EAAGwB,EAAExB,EAAGC,EAAGuB,EAAEvB,GACtC,CA2CA,SAAS0tG,EAAQnsG,GACf,IAAK8J,EAAQkhG,SAAWlhG,EAAQ3I,OAAQ,OACxC,GAAI2I,EAAQsgG,0BACTpqG,EAAEqa,OAAuBve,QAAQgO,EAAQsgG,0BACtCpqG,EAAEqa,OAAuBgD,QAAQvT,EAAQsgG,0BAE7C,OAEFpqG,EAAEuT,iBACFvT,EAAEM,kBACF,MAAM,cAAE8rG,EAAgB,GAAMtiG,EAC9B,GAAIA,EAAQ6gG,eAAiBz5G,OAAOm7G,GAAGrsG,EAAE27F,QAAS,IAAMzqG,OAAOm7G,GAAGrsG,EAAEy2D,QAAS,IAAMz2D,EAAE+zD,QAKnF,OAJAm4C,EAAelsG,GACf2pG,EAAYA,EAAY,EAAI,EAAIyC,EAChCtiG,EAAQ6gG,cAAc3qG,EAAG,CAAE4qG,QAAS5qG,EAAE8nG,MAAO+C,QAAS7qG,EAAE+nG,aACxDwB,GAAW,GAGb,MAAM+C,EAAiBtsG,EAAE8zD,SAAW9zD,EAAE+zD,SAAW/zD,EAAE2nE,SAInD,GAHI2kC,GA5DN,SAAqBtsG,GACnB,IAAK8J,EAAQkhG,OAAQ,OACrBkB,EAAelsG,GACf,MAAMmrG,EAAcnrG,EAAExB,EAAIyrG,EAAmBzrG,EACvC4sG,EAAcprG,EAAEvB,EAAIwrG,EAAmBxrG,EACvC8tG,GAAQzB,EAAAA,EAAAA,IAAM9qG,EAAEy2D,QAAS,GAAI,IACnCkzC,GAAqB,IAAR4C,EACb5C,GAAYmB,EAAAA,EAAAA,IAAMnB,EAAqB,GAAVO,EAAyB,EAAVC,GAC5CV,GAAY,EACZ3/F,EAAQkhG,OAAOhrG,EAAG,CAChBwsG,MAAMh6G,EAAAA,EAAAA,IAAMm3G,EAAW,GACvB2B,eAAgBrB,EAAmBzrG,EACnC+sG,eAAgBtB,EAAmBxrG,EACnC0sG,cACAC,cACAI,eAAgBxrG,EAAExB,EAClBitG,eAAgBzrG,EAAEvB,IAEpBwtG,EAAiBjsG,EACnB,CA0CIysG,CAAYzsG,IAETssG,IAAmB7C,EAAW,CAEjC,MAAMiD,EAAcxE,EAASO,MAAMzoG,IACjB,IAAd2pG,GAAmB+C,IA7C3B,SAAqB1sG,GACnB,IAAK8J,EAAQ3I,OAAQ,OACrB+qG,EAAelsG,GAEV8pG,EAAetrG,GAAK/C,KAAKkxG,KAAK9C,EAAkBrrG,KAAO/C,KAAKkxG,KAAK3sG,EAAE27F,UACtEkO,EAAkBrrG,GAAKwB,EAAE27F,QAEtBmO,EAAerrG,GAAKhD,KAAKkxG,KAAK9C,EAAkBprG,KAAOhD,KAAKkxG,KAAK3sG,EAAEy2D,UACtEozC,EAAkBprG,GAAKuB,EAAEy2D,QAE3B,MAAM,EAAEj4D,EAAC,EAAEC,GAAMorG,EACjB//F,EAAQ3I,OAAOnB,EAAGspG,EAAe,CAC/B6B,YAAa3sG,EACb4sG,YAAa3sG,IACZ,CAACmuG,EAAIlmE,KACNojE,EAAiB,CAAEtrG,EAAGouG,EAAInuG,EAAGioC,EAAI,IAEnCslE,EAAiBhsG,EACnB,CA4BM6sG,CAAY7sG,EAEhB,CACF,CAMA,OAJA8hC,EAAQzxB,iBAAiB,QAAS87F,GAClCrqE,EAAQzxB,iBAAiB,YAAapP,GACtC6gC,EAAQzxB,iBAAiB,aAAcpP,EAAW,CAAEy1D,SAAU5sD,EAAQgjG,eAE/D,KACL5rG,IACA4gC,EAAQvxB,oBAAoB,QAAS47F,GACrCrqE,EAAQvxB,oBAAoB,aAActP,GAC1C6gC,EAAQvxB,oBAAoB,YAAatP,EAAU,CAEvD,C,yGEzZO,SAAS8rG,EAAQC,GACtB,MAAO,CACLC,SAASD,EAAM/7F,UAAU,EAAG,GAAI,IAChCg8F,SAASD,EAAM/7F,UAAU,EAAG,GAAI,IAChCg8F,SAASD,EAAM/7F,UAAU,EAAG,GAAI,IAEpC,CAOO,SAASi8F,EAAQF,GACtB,MAAMG,EAAKH,EAAM,GAAG7gG,SAAS,IACvBihG,EAAKJ,EAAM,GAAG7gG,SAAS,IACvBkhG,EAAKL,EAAM,GAAG7gG,SAAS,IAC7B,OAAqB,GAAbghG,EAAG55G,OAAc,IAAM45G,EAAKA,IAAoB,GAAbC,EAAG75G,OAAc,IAAM65G,EAAKA,IAAoB,GAAbC,EAAG95G,OAAc,IAAM85G,EAAKA,EAC5G,CAaO,SAASC,EAAOv9G,GAAgE,IAA9Dk0D,EAAGmsB,EAAGh5B,GAA4BrnD,EACzDk0D,GAAK,IACLmsB,GAAK,IACLh5B,GAAK,IAEL,IACIuvD,EAAY5+F,EADZxJ,EAAM9C,KAAK8C,IAAI0lD,EAAGmsB,EAAGh5B,GAAI17C,EAAMD,KAAKC,IAAIuoD,EAAGmsB,EAAGh5B,GACvBm2D,EAAYhvG,EAEnCsoC,EAAItoC,EAAM7C,EAGd,GAFAqM,EAAW,GAAPxJ,EAAW,EAAIsoC,EAAItoC,EAEnBA,GAAO7C,EACTirG,EAAI,MACC,CACL,OAAQpoG,GACN,KAAK0lD,EACH0iD,GAAKv2B,EAAIh5B,GAAKvQ,GAAKupC,EAAIh5B,EAAI,EAAI,GAC/B,MACF,KAAKg5B,EACHu2B,GAAKvvD,EAAI6M,GAAKpd,EAAI,EAClB,MACF,KAAKuQ,EACHuvD,GAAK1iD,EAAImsB,GAAKvpC,EAAI,EAItB8/D,GAAK,CACP,CAEA,MAAO,CAACA,EAAG5+F,EAAGwlG,EAChB,CAaO,SAASC,EAAOl8G,GAAgE,IACjF2yD,EAAYmsB,EAAYh5B,GADLuvD,EAAG5+F,EAAGwlG,GAA4Bj8G,EAGrDgC,EAAImI,KAAKe,MAAU,EAAJmqG,GACf8G,EAAQ,EAAJ9G,EAAQrzG,EACZslF,EAAI20B,GAAK,EAAIxlG,GACb2lG,EAAIH,GAAK,EAAIE,EAAI1lG,GACjBu6F,EAAIiL,GAAK,GAAK,EAAIE,GAAK1lG,GAE3B,OAAQzU,EAAI,GACV,KAAK,EACH2wD,EAAIspD,EACJn9B,EAAIkyB,EACJlrD,EAAIwhC,EACJ,MACF,KAAK,EACH30B,EAAIypD,EACJt9B,EAAIm9B,EACJn2D,EAAIwhC,EACJ,MACF,KAAK,EACH30B,EAAI20B,EACJxI,EAAIm9B,EACJn2D,EAAIkrD,EACJ,MACF,KAAK,EACHr+C,EAAI20B,EACJxI,EAAIs9B,EACJt2D,EAAIm2D,EACJ,MACF,KAAK,EACHtpD,EAAIq+C,EACJlyB,EAAIwI,EACJxhC,EAAIm2D,EACJ,MACF,KAAK,EACHtpD,EAAIspD,EACJn9B,EAAIwI,EACJxhC,EAAIs2D,EAIR,MAAO,CACLjyG,KAAKjJ,MAAU,IAAJyxD,GACXxoD,KAAKjJ,MAAU,IAAJ49E,GACX30E,KAAKjJ,MAAU,IAAJ4kD,GAEf,CAEO1tC,eAAeikG,EAAgBjiG,GAEpC,MACMkiG,EAAuC,CAAC,EAAG,EAAG,GACpD,IAAIxyG,EACA0C,EACAC,EAEAxK,EADAD,GAAK,EAELu6G,EAAgC,CAAC,EAAG,EAAG,GACvC5yB,EAAQ,EAEZ,MAAMv9E,EAAS0L,SAASnX,cAAc,UAChC0kB,EAAUjZ,EAAOO,YAAcP,EAAOO,WAAW,MACvD,IAAK0Y,EACH,OAAOi3F,EAGT,MAAME,QAActjG,EAAAA,EAAAA,IAAakB,GACjC3N,EAAS+vG,EAAMC,eAAiBD,EAAMt3C,cAAgBs3C,EAAM/vG,OAC5DD,EAAQgwG,EAAME,cAAgBF,EAAMzwC,aAAeywC,EAAMhwG,MACzDJ,EAAOK,OAASA,EAChBL,EAAOI,MAAQA,EAEf6Y,EAAQgwE,UAAUmnB,EAAO,EAAG,GAE5B,IACE1yG,EAAOub,EAAQiwE,aAAa,EAAG,EAAG9oF,EAAOC,EAC3C,CAAE,MAAOiC,GACP,OAAO4tG,CACT,CAKA,IAHAr6G,EAAS6H,EAAKA,KAAK7H,QAGXD,GAAK09D,IAAiBz9D,GACH,IAArB6H,EAAKA,KAAK9H,EAAI,OAChB2nF,EACF4yB,EAAI,IAAMzyG,EAAKA,KAAK9H,GACpBu6G,EAAI,IAAMzyG,EAAKA,KAAK9H,EAAI,GACxBu6G,EAAI,IAAMzyG,EAAKA,KAAK9H,EAAI,IAO1B,OAJAu6G,EAAI,GAAKpyG,KAAKe,MAAMqxG,EAAI,GAAK5yB,GAC7B4yB,EAAI,GAAKpyG,KAAKe,MAAMqxG,EAAI,GAAK5yB,GAC7B4yB,EAAI,GAAKpyG,KAAKe,MAAMqxG,EAAI,GAAK5yB,GAEtB4yB,CACT,CAEO,SAASI,EAAaC,GAC3B,MAAOjqD,EAAGmsB,EAAGh5B,GAAK82D,EAElB,MADa,MAASjqD,EAAI,MAASmsB,EAAI,MAASh5B,CAElD,CAGO,SAAS+2D,EAAgBD,GAC9B,IAAKE,EAAKC,EAAYlxG,GAASmwG,EAAQY,GAOvC,OALAG,EAAa5yG,KAAKC,IAAI,EAAG2yG,EAAa,IAAO,IAAO,EAAIA,IACxDlxG,EAAQA,EAAQ,GACZ1B,KAAK8C,IAAI,EAAW,IAARpB,GACZ1B,KAAK8C,IAAI,EAAG9C,KAAKC,IAAI,EAAG,EAAY,IAARyB,IAExB,QAAa,IAANixG,MAA2B,IAAbC,OAA8B,IAARlxG,SACrD,C,iBC3Me,SAASmxG,EAAc/6G,EAAgBg5F,GACpD,OAAOA,EAAQ9wF,KAAKe,MAAM+vF,EAAQh5F,GAAUA,CAC9C,C,iECMA,MAAMg7G,EAAkB,GAClBC,EAAiB,IAEvB,IAAIC,EAAsC,GACtCC,GAAU,EAEC,SAASC,EAASjjG,EAAa9B,GAC5C6kG,EAAiBj7G,KAAK,CAAEkY,MAAK9B,aACxB8kG,IACHA,GAAU,EACV34G,YAAW2T,gBAOfA,iBACE,IAAIuxE,EAAQ,EACZ,IAAK,MAAM2zB,KAAmBH,EAC5BI,EAAYD,GACZ3zB,IACIA,IAAUszB,UACNt2F,EAAAA,EAAAA,IAAMu2F,GACZvzB,EAAQ,GAGZwzB,EAAmB,EACrB,CAjBYK,GACNJ,GAAU,CAAK,GACdF,GAEP,CAeA,SAASK,EAAW9+G,GAAqC,IAApC,IAAE2b,EAAG,SAAE9B,GAA2B7Z,EACrD,MAAM+W,EAAOsC,SAASnX,cAAc,KACpC6U,EAAKsB,KAAOsD,EACZ5E,EAAK6nG,SAAW/kG,EAChB,IACE9C,EAAKioG,OACP,CAAE,MAAOzjG,GAEPuG,QAAQC,MAAMxG,EAChB,CACF,C,6DC7Ce,SAAS4lB,EAAqB4Q,EAAsBktE,EAAiBC,GAClF,IAAKD,GAASltE,IAAY14B,SAASsH,cACjC,OAGF,MAAM2f,EAAY55B,OAAO65B,eACnB2R,EAAQ74B,SAAS84B,cACjBH,EAAYD,EAAQC,WAAaD,EAElC9lB,EAAAA,IAAiBizF,GAA0BltE,GAAcA,EAAUmtE,WAKxEjtE,EAAMktE,mBAAmBF,EAAuBntE,EAAUC,GAE1DE,EAAMmtE,UAAS,GACf/+E,EAAUgS,kBACVhS,EAAUiS,SAASL,KARjBzqB,EAAAA,EAAAA,KAAe,IAAMsqB,EAAQ54B,SASjC,C,kDCpBA,MAAMmmG,EAAe,EAEN,SAASC,IACtB,MAAMj/E,EAAY55B,OAAO65B,eACzB,IAAIi/E,EAAoBl/E,GAAWI,WAAaJ,EAAUM,WAAW,GAAGwmD,qBAAkB3nF,EAE1F,MAAMggH,EAA2Bn/E,GAAWo/E,WAAap/E,EAAUq/E,YAAc,GAC5EC,EAAuBt/E,EAAUo/E,UAAWG,EAAAA,KACjD,IAAKL,GAA6D,IAAxCA,EAAkBM,kBAC1C,OAGF,MAAM/xF,EAAatiB,MAAMgW,KAAK+9F,EAAkBO,UAC7Cx4F,QAAO,CAACxa,EAAQmR,IACXA,EAAK2B,WAAay/F,GAAgBphG,EAAK5E,UAAU0kF,SAAS,sBACrDvyF,MAAMgW,KAAKvD,EAAK+D,iBAAiB,aACrCsF,QAAO,CAACC,EAAKw4F,IAAcx4F,EAAInD,OAAO6oB,OAAQ8yE,EAA0Bz9F,QAAQ1R,aAAa9D,GACvFmR,EAAK2B,WAAay/F,GAAgBphG,EAAK5E,UAAU0kF,SAAS,WAC5DjxF,EAAOsX,OAAO6oB,OAAQhvB,EAAqBqE,QAAQ1R,YAGrD9D,GACN,IAGL,KAAOyyG,EAAkBS,YACvBT,EAAkBhtE,YAAYgtE,EAAkBS,YAQlD,OANAT,OAAoB//G,EAEfggH,GACH1xF,EAAWijF,MAGNjjF,CACT,CAEA,SAAS6xF,EAAuB7tE,EAAe9xC,GAC7C,QAAI8xC,EAAQlyB,WAAay/F,IAAiBvtE,EAAwBz4B,UAAU0kF,SAAS/9F,OAI9E8xC,EAAQm4C,YAAa01B,EAAuB7tE,EAAQm4C,WAAYjqF,EACzE,C,0DC3CA,MAAMigH,EAAiB,IAEhB,SAASllG,EAAW+iG,EAAsBoC,GAAkE,IAAnDC,EAAkBl1G,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG,YACnF,MAAMyQ,EAAMoiG,aAAiBh2F,KAAO9N,IAAIC,gBAAgB6jG,GAASA,EAC3DvjG,EAAM,IAAIi8E,MAChB,OAAO,IAAIxyE,SAAS2D,IAClBpN,EAAIm8E,OAAS,KACXxoF,EAAMqM,EAAKA,EAAIzM,MAAQoyG,EAAO3lG,EAAIxM,OAASmyG,EAAOC,GAC/C/vC,MAAMv2D,IACL,IAAKA,EAAM,MAAM,IAAI2mE,MAAM,wBAC3B,OAAOxmE,IAAIC,gBAAgBJ,EAAK,IAEjCu2D,KAAKzoD,GACLspF,SAAQ,KACH6M,aAAiBh2F,MACnB9N,IAAIgB,gBAAgBU,EACtB,GACA,EAENnB,EAAIpU,IAAMuV,CAAG,GAEjB,CAEO,SAAS0kG,EACdtC,EAAsBhwG,EAAeC,GACpB,IADoCoyG,EAAkBl1G,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG,YAE1E,MAAMyQ,EAAMoiG,aAAiBh2F,KAAO9N,IAAIC,gBAAgB6jG,GAASA,EAC3DvjG,EAAM,IAAIi8E,MAChB,OAAO,IAAIxyE,SAAS2D,IAClBpN,EAAIm8E,OAAS,KACXxoF,EAAMqM,EAAKzM,EAAOC,EAAQoyG,GACvB/vC,MAAMv2D,IACL,IAAKA,EAAM,MAAM,IAAI2mE,MAAM,wBAC3B,OAAOxmE,IAAIC,gBAAgBJ,EAAK,IAEjCu2D,KAAKzoD,GACLspF,SAAQ,KACH6M,aAAiBh2F,MACnB9N,IAAIgB,gBAAgBU,EACtB,GACA,EAENnB,EAAIpU,IAAMuV,CAAG,GAEjB,CAEAhC,eAAexL,EACbqM,EAAuBzM,EAAeC,GAChB,IADgCoyG,EAAkBl1G,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG,YAG3E,KAAI,sBAAuBxE,QA6BzB,OAAO45G,EAAa9lG,EAAKzM,EAAOC,OAAQvO,EAAW2gH,GA5BnD,IACE,MAAMG,QAAe75G,OAAO85G,kBAAkBhmG,EAC5C,CAAEimG,YAAa1yG,EAAO2yG,aAAc1yG,EAAQ2yG,cAAe,SAC7D,GAAIJ,EAAOvyG,SAAWA,GAAUuyG,EAAOxyG,QAAUA,EAC/C,MAAM,IAAI0yE,MAAM,sCAElB,MAAMmgC,QAAqBhD,EAAAA,EAAAA,IAAgBpjG,EAAIpU,KACzCy6G,GAAY3C,EAAAA,EAAAA,IAAa0C,GAAgBV,EAAiB,OAAS,OACzE,aAAa,IAAIj8F,SAAS68F,IACxB,MAAMnzG,EAAS0L,SAASnX,cAAc,UACtCyL,EAAOI,MAAQwyG,EAAOxyG,MACtBJ,EAAOK,OAASuyG,EAAOvyG,OACvB,MAAM+yG,EAAQpzG,EAAOO,WAAW,MAChC6yG,EAAMlzG,UAAYgzG,EAClBE,EAAMC,SAAS,EAAG,EAAGrzG,EAAOI,MAAOJ,EAAOK,QAC1C,MAAMC,EAAMN,EAAOO,WAAW,kBAC1BD,EACFA,EAAIgzG,wBAAwBV,GAE5BQ,EAAMnqB,UAAU2pB,EAAQ,EAAG,GAE7B5yG,EAAOuzG,OAAOJ,EAAKV,EAAW,GAElC,CAAE,MAAOnwG,GAEP,OAAOqwG,EAAa9lG,EAAKzM,EAAOC,OAAQvO,EAAW2gH,EACrD,CAIJ,CAEAzmG,eAAe2mG,EACb9lG,EAAuBzM,EAAeC,GAChB,IADgCmzG,EAAYj2G,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG,GAAKk1G,EAAkBl1G,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG,YAE/F,MAAMyC,EAAS0L,SAASnX,cAAc,UAChC+L,EAAMN,EAAOO,WAAW,MACxBkzG,EAAK/nG,SAASnX,cAAc,UAC5Bm/G,EAAOD,EAAGlzG,WAAW,MAK3B,GAHAP,EAAOI,MAAQA,EACfJ,EAAOK,OAASA,EAEZwM,EAAIzM,MAAQozG,EAAOpzG,EAAO,CAC5B,MAAMuzG,EAAM,EAAIH,EAChB,IAAII,EAAM,CACRxzG,MAAOrC,KAAKe,MAAM+N,EAAIzM,MAAQozG,GAC9BnzG,OAAQtC,KAAKe,MAAM+N,EAAIxM,OAASmzG,IAQlC,IALAC,EAAGrzG,MAAQwzG,EAAIxzG,MACfqzG,EAAGpzG,OAASuzG,EAAIvzG,OAEhBqzG,EAAKzqB,UAAUp8E,EAAK,EAAG,EAAG+mG,EAAIxzG,MAAOwzG,EAAIvzG,QAElCuzG,EAAIxzG,MAAQozG,EAAOpzG,GACxBwzG,EAAM,CACJxzG,MAAOrC,KAAKe,MAAM80G,EAAIxzG,MAAQozG,GAC9BnzG,OAAQtC,KAAKe,MAAM80G,EAAIvzG,OAASmzG,IAElCE,EAAKzqB,UAAUwqB,EAAI,EAAG,EAAGG,EAAIxzG,MAAQuzG,EAAKC,EAAIvzG,OAASszG,EAAK,EAAG,EAAGC,EAAIxzG,MAAOwzG,EAAIvzG,QAGnFC,EAAI2oF,UAAUwqB,EAAI,EAAG,EAAGG,EAAIxzG,MAAOwzG,EAAIvzG,OAAQ,EAAG,EAAGL,EAAOI,MAAOJ,EAAOK,OAC5E,MACEC,EAAI2oF,UAAUp8E,EAAK,EAAG,EAAG7M,EAAOI,MAAOJ,EAAOK,QAGhD,MAAM4yG,QAAqBhD,EAAAA,EAAAA,IAAgBpjG,EAAIpU,KACzCy6G,GAAY3C,EAAAA,EAAAA,IAAa0C,GAAgBV,EAAiB,OAAS,OAIzE,OAHAjyG,EAAIJ,UAAYgzG,EAChB5yG,EAAIuzG,yBAA2B,mBAC/BvzG,EAAI+yG,SAAS,EAAG,EAAGrzG,EAAOI,MAAOJ,EAAOK,QACjC,IAAIiW,SAAS2D,IAClBja,EAAOuzG,OAAOt5F,EAASw4F,EAAW,GAEtC,C,kDC/HO,SAASqB,EAAoBnjG,GAClC,GAAyB,SAArBA,EAAGpY,MAAMy/D,QACX,OAAO,EAGT,MAAM5hB,EAAOzlC,EAAGnO,yBACRnC,OAAQ0zG,GAAiB5jF,EAAAA,EAAWC,MAE5C,OAAQgmB,EAAKjS,KAAO4vE,GAAmB39D,EAAKjS,IAAMiS,EAAK/1C,QAAW,CACpE,C,+DCTA,MAAM2zG,EAAY,CAChBC,OAAQ,+BACRC,KAAM,qCACNC,IAAK,gCACLC,MAAO,0BAIHC,EAAe,IAAIhoD,IAAI74D,OAAOsoF,QAAQ,CAC1C,mBAAoB,UACpB,eAAgB,UAChB,sBAAuB,UACvB,yBAA0B,UAC1B,eAAgB,UAChB,gBAAiB,UACjB,gBAAiB,UACjB,mBAAoB,UACpBw4B,mBAAoB,UACpBC,SAAU,UACVC,UAAW,UACX18D,MAAO,UACP28D,KAAM,UACNC,KAAM,UACNC,UAAW,UACXC,eAAgB,UAChBC,MAAO,UACPC,OAAQ,UACRC,KAAM,aAGFC,EAAgB,CACpB,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAGnF,SAASC,EAAcC,EAAkCC,GAAmD,IAAXrG,EAAIvxG,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG,GAC7G,MAAM,IAAE63G,EAAG,KAAEC,GAASF,EAChBG,EAActB,EAAUkB,GAC9B,OAAQA,GACN,IAAK,SACH,MAAQ,GAAEI,WAAqBF,KAAOC,MAASD,KAAOC,KAAQvG,KAChE,IAAK,OACH,MAAQ,GAAEwG,QAAkBF,KAAOC,SAAYvG,cAAiBsG,KAAOC,IACzE,IAAK,QACH,MAAQ,GAAEC,OAAiBF,KAAOC,IAEpC,QACE,MAAQ,GAAEC,WAAqBF,UAAYC,UAAavG,IAE9D,CAEO,SAASyG,EAAkBH,EAAatG,GAE7C,OAAQ,aAAe/wG,KAAKy3G,IAAIJ,GAAOr3G,KAAK03G,GAAK,MAAS,GAAK3G,CACjE,CAEO,SAAS4G,EAAgBlpG,GAC9B,OAAKA,EACG,0CAAyCA,WAD/B,EAEpB,CAGO,SAASmpG,EAAcnpG,GAC5B,OAAKA,EACE6nG,EAAajkF,IAAI5jB,IACnB6nG,EAAajkF,IAAI5jB,EAAKpC,MAAM,KAAK,KACjC4qG,GAGiBY,EAHYppG,EAI3BopG,EAAIxrG,MAAM,IAAIwP,QAAO,CAACi8F,EAAUC,KAElCD,GAAY,GAAKA,EAAYC,EAAQC,WAAW,GAAM,GAAI,GANrBf,EAAcn/G,SAHtC,UAMpB,IAAwB+/G,CAFxB,C,gFC5CA,MAAMI,EAAmB,CACvBrtD,UAAM72D,EACNyoB,WAAOzoB,EACPknG,kBAAclnG,EACdqnG,iBAAarnG,EACbynG,mBAAeznG,EACfwnG,eAAWxnG,EACXkoB,UAAMloB,EACNsnG,YAAQtnG,GAGH,SAAS6mG,EAAqBxqF,EAA0BwpF,GAC7D,MAAM,aAAEse,GAAiBl9G,OAAOm9G,UAC5BD,GACE9nG,GAAU2rF,EAAe3rF,GACzBwpF,GAAUwe,EAAwBxe,IAGtCxjF,QAAQiiG,KAAK,iDAEjB,CAEO,SAAStc,EAAe3rF,GAC7B,MAAM,aAAE8nG,GAAiBl9G,OAAOm9G,UAC5BD,IAEFA,EAAa9nG,SAAWA,GAAY,KAExC,CAEO,SAASgoG,EAAwBxe,GACtC,MAAM,aAAEse,GAAiBl9G,OAAOm9G,UAC5BD,GACFziH,OAAOsoF,QAAQ,IAAKk6B,KAAqBre,IAAYl3F,SAAQpO,IAAoB,IAAlBuC,EAAK22D,GAAQl5D,EAC1E,IAEE4jH,EAAaI,iBAAiBzhH,EAAK22D,EACrC,CAAE,MAAO39C,GACP,IAIR,CAEO,SAAS0oG,IACd,MAAM,aAAEL,GAAiBl9G,OAAOm9G,UAC5BD,IAEFA,EAAa9nG,SAAW,KACxBgoG,EAAwBH,GACpBC,EAAaM,gBAAeN,EAAaM,cAAgB,QAC7DN,EAAapc,qBAEjB,CAEO,SAASJ,IAAgE,IAA/CnpC,EAAoC/yD,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG,OACtE,MAAM,aAAE04G,GAAiBl9G,OAAOm9G,UAC5BD,GAAgBA,EAAaM,gBAC/BN,EAAaM,cAAgBjmD,EAEjC,CAEO,SAASupC,EAAiBvpC,GAC/B,IAAKA,QAA4Bx+D,IAAnBw+D,EAAMjwB,eAA6CvuC,IAAnBw+D,EAAMvzD,SAAwB,OAC5EuzD,EAAMjwB,SAAWtiC,KAAKC,IAAIsyD,EAAMjwB,SAAUiwB,EAAMvzD,UAEhD,MAAM,aAAEk5G,GAAiBl9G,OAAOm9G,UAChCD,GAAcpc,mBAAmBvpC,EACnC,CAEO,SAASkmD,EAAkB5iH,GAEN,IAFO,MACjCwP,EAAK,OAAEiL,EAAM,MAAEooG,EAAK,QAAEC,GACE9iH,EACxB,GAAI,kBAAmBmF,OACrB,OAAO,IAAIA,OAAO49G,cAAc,CAC9BvzG,QACAiL,SACAooG,QACAC,WAIN,C,kDCxGA,MAAME,EAAQ,IAAIC,QAKH,SAASt/F,EAAgCu/F,GACtD,OAAO,WACL,MAAMC,EAASH,EAAMxmF,IAAI0mF,GAAI,QAAArU,EAAAllG,UAAA1H,OADpB2sC,EAAI,IAAA1kC,MAAA2kG,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJlgE,EAAIkgE,GAAAnlG,UAAAmlG,GAEb,GAAIqU,IAAUC,EAAAA,EAAAA,IAAqBD,EAAOE,SAAUz0E,GAClD,OAAOu0E,EAAOG,WAGhB,MAAM93G,EAAS03G,KAAMt0E,GAErB,OADAo0E,EAAMlmD,IAAIomD,EAAI,CAAEG,SAAUz0E,EAAM00E,WAAY93G,IACrCA,CACT,CACF,C,kDChBA,MAEM+3G,EAAgB,IAAIz/F,OAAQ,OAAMohB,EAAAA,EAAalhB,YAAa,IAwClE,EAtC8B7iB,IAC5B,MAAMqiH,EAAQriH,EAAKqV,MAAM,MACnBitG,EAAsBD,EAAM1yG,KAAK,IACvC,GAAI2yG,EAAoBxhH,OANPyhH,IAOf,OAAO,EAIT,IADoBtlH,QAAQqlH,EAAoBzjG,MAAMujG,IAEpD,OAAO,EAET,MAAMI,EAAeH,EAAMzjH,KAAK6jH,IAC9B,IAAIC,EAAa,EACjB,KAAO3+E,EAAAA,EAAao7C,KAAKsjC,IAGvB,GAFAC,IAEIA,EApBW,IAsBb,OADA3+E,EAAAA,EAAa4+E,UAAY,GACjB,EAIZ,OAAOD,CAAU,IAGnB,IAAI52G,EAAMu2G,EAAMvhH,OAChB,IAAK,IAAID,EAAI,EAAGA,EAAI2hH,EAAa1hH,OAAQD,IAAK,CAC5C,IAAyB,IAArB2hH,EAAa3hH,GACf,OAAO,EAEL2hH,EAAa3hH,GAAKiL,IACpBA,EAAM02G,EAAa3hH,GAEvB,CAEA,OAAOiL,CAAG,C,0FCnCL,MAAMoU,EAAmE,CAC9EyiE,EAAGriE,EAAAA,GAAsBsiG,KACzBhgC,OAAQtiE,EAAAA,GAAsBsiG,KAC9B//B,EAAGviE,EAAAA,GAAsBuiG,OACzB//B,GAAIxiE,EAAAA,GAAsBuiG,OAC1BC,IAAKxiG,EAAAA,GAAsByiG,UAC3BhgC,EAAGziE,EAAAA,GAAsByiG,UACzBC,EAAG1iG,EAAAA,GAAsB2iG,OACzBC,OAAQ5iG,EAAAA,GAAsB2iG,OAC9BjgC,IAAK1iE,EAAAA,GAAsB2iG,OAC3BhgC,KAAM3iE,EAAAA,GAAsB6iG,KAC5BC,IAAK9iG,EAAAA,GAAsB+iG,IAC3BC,WAAYhjG,EAAAA,GAAsBijG,YAG9BC,EAAmB,EAEV,SAAS9kG,EACtBtD,GACkB,IADJqoG,EAAiBj7G,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GAAUk7G,EAAYl7G,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GAErD,MAAMmW,EAAWhI,SAASnX,cAAc,OACxCmf,EAASO,UAAYwkG,EAAetoG,EAmDtC,SAAuBA,GACrB,IAAIuoG,EAAavoG,EAAKzc,MAAM,GAsD5B,OAnDAglH,EAAaA,EAAWnrG,QAAQ,UAAW,KAG3CmrG,EAAaA,EAAWnrG,QAAQ,4BAA6B,MAE7DmrG,EAAaA,EAAWnrG,QAAQ,gBAAiB,MAGjDmrG,EAAaA,EAAWnrG,QAAQ,qBAAsB,MACtDmrG,EAAaA,EAAWnrG,QAAQ,SAAU,MAC1CmrG,EAAaA,EAAWnrG,QAAQ,WAAY,IAG5CmrG,EAAaA,EAAWnrG,QAAQ,sCAAuC,oCACvEmrG,EAAaA,EAAWnrG,QAAQ,kCAAmC,iBACnEmrG,EAAaA,EAAWnrG,QAAQ,uBAAwB,iBAGxDmrG,EAAaA,EAAWnrG,QACtB,wEACA,mBAIGsrB,EAAAA,KAEH6/E,EAAaA,EAAWnrG,QAAQ,oCAAqC,SAEvEmrG,EAAaA,EAAWnrG,QACtB,0FACA,wCAIFmrG,EAAaA,EAAWnrG,QACtB,wEACA,aAEFmrG,EAAaA,EAAWnrG,QACtB,wEACA,aAEFmrG,EAAaA,EAAWnrG,QACtB,wEACA,aAEFmrG,EAAaA,EAAWnrG,QACtB,wEACC,2BAA0B8H,EAAAA,GAAsBqvC,sBAG5Cg0D,CACT,CA1G0BC,CAApBH,EA4GN,SAA4BroG,GAC1B,OAAOA,EAAK5C,QAAQ,IAAImK,OAAQ,qBAAoBwN,EAAAA,YAA0B,MAAM,CAACq7B,EAAGxrD,EAAMqU,IAEpF,YADIA,EAAKgK,SAAS,OAAShK,EAAOA,EAAKgK,SAAS,KAAQ,UAAShK,IAAU,WAAUA,QAClErU,SAE/B,CAjHwC6jH,CAAmBzoG,GAAuBA,GAChF0oG,EAAgBnlG,GAChB,MAAM3e,EAAO2e,EAASyB,UAAU0mB,OAAOtuB,QAAQ,WAAY,IAE3D,IAAIurG,GADcplG,EAASyB,UAAUrD,QAAQ/c,EAAK,IAE9CgkH,EAAoB,EACxB,MAAM/iG,EAA+B,GAErC,SAASgjG,EAAUzoG,GACjB,GAAIA,EAAK2B,WAAa+mG,KAAKC,aAAc,OACzC,MAAM,MAAErqB,EAAK,OAAEnlF,GAyGnB,SACE6G,EACA4oG,EACAL,GAEA,MAAMtsG,EAyER,SAA+B+D,GAC7B,GAAIA,aAAgBiE,aAAejE,EAAKqE,QAAQC,WAC9C,OAAOtE,EAAKqE,QAAQC,WAGtB,GAAII,EAA0B1E,EAAKiB,UACjC,OAAOyD,EAA0B1E,EAAKiB,UAGxC,GAAsB,MAAlBjB,EAAKiB,SAAkB,CACzB,MAAMhB,EAASD,EACf,OAAIC,EAAOoE,QAAQC,aAAeQ,EAAAA,GAAsBC,YAC/CD,EAAAA,GAAsBC,YAE3B9E,EAAOoE,QAAQC,aAAeQ,EAAAA,GAAsByB,IAC/CzB,EAAAA,GAAsByB,IAE3BtG,EAAO9F,KAAKswB,WAAW,WAClB3lB,EAAAA,GAAsB+jG,MAE3B5oG,EAAO9F,KAAKswB,WAAW,QAClB3lB,EAAAA,GAAsBgkG,MAE3B7oG,EAAO9F,OAAS8F,EAAOc,YAClB+D,EAAAA,GAAsBwB,QAGxBxB,EAAAA,GAAsByB,GAC/B,CAEA,MAAsB,SAAlBvG,EAAKiB,SACCjB,EAAqBqE,QAAQC,WAGjB,QAAlBtE,EAAKiB,UACFjB,EAA0BqE,QAAQuoB,WAC9B9nB,EAAAA,GAAsBE,iBAFjC,CAOF,CAlHe+jG,CAAsB/oG,GAEnC,IAAK/D,IAAS+D,EAAKe,YACjB,MAAO,CACLu9E,MAAOiqB,EACPpvG,YAAQ5X,GAIZ,MAAMynH,EAAWJ,EAAQrnG,QAAQvB,EAAKe,YAAawnG,GAG7CjqB,EAAQ0qB,GAAY,EAAIA,EAAWT,EACnC19E,EAAS+9E,EAAQ5lG,UAAU,EAAGs7E,GAAOh5F,QACrC,OAAEA,GAAWsjH,EAAQ5lG,UAAUs7E,EAAOA,EAAQt+E,EAAKe,YAAYzb,QAErE,OAAI2W,IAAS6I,EAAAA,GAAsBwB,QAC1B,CACLg4E,QACAnlF,OAAQ,CACN8C,OACA4uB,SACAvlC,SACAmY,IAAMuC,EAA2B7F,OAInC8B,IAAS6I,EAAAA,GAAsBC,YAC1B,CACLu5E,QACAnlF,OAAQ,CACN8C,OACA4uB,SACAvlC,SACAwS,OAASkI,EAA2BqE,QAAQvM,SAK9CmE,IAAS6I,EAAAA,GAAsB+iG,IAC1B,CACLvpB,QACAnlF,OAAQ,CACN8C,OACA4uB,SACAvlC,SACA+xB,SAAWrX,EAAwBqE,QAAQgT,WAK7Cpb,IAAS6I,EAAAA,GAAsBE,YAC1B,CACLs5E,QACAnlF,OAAQ,CACN8C,OACA4uB,SACAvlC,SACAsnC,WAAa5sB,EAA0BqE,QAAQuoB,aAK9C,CACL0xD,QACAnlF,OAAQ,CACN8C,OACA4uB,SACAvlC,UAGN,CArL8B2jH,CAAsBjpG,EAAMxb,EAAM+jH,GAE5D,GAAIpvG,EACFovG,EAAYjqB,EACZ74E,EAASlgB,KAAK4T,QACT,GAAI6G,EAAKe,YAAa,CAE3B,GAAc,IAAVu9E,GAA2C,KAA5Bt+E,EAAKe,YAAYuqB,OAClC,OAEFi9E,GAAavoG,EAAKe,YAAYzb,MAChC,CAEI0a,EAAKkpG,iBAAmBV,GAAqBR,IAC/CQ,GAAqB,EACrBj7G,MAAMgW,KAAKvD,EAAKkB,YAAYhR,QAAQu4G,GAExC,CAOA,OALAl7G,MAAMgW,KAAKJ,EAASjC,YAAYhR,SAAS8P,IACvCwoG,EAAoB,EACpBC,EAAUzoG,EAAK,IAGV,CACLxb,OACAihB,SAAUA,EAASngB,OAASmgB,OAAWlkB,EAE3C,CAEO,SAAS+mH,EAAgBnlG,GAC9BA,EAASY,iBAAiB,OAAO7T,SAAS8P,IACpCA,EAAKqE,QAAQuoB,WACf5sB,EAAKe,YAAef,EAA0B6E,KAAO,GAErD7E,EAAKoE,YAAYpE,EAAK6E,KAAO,GAC/B,GAEJ,C,wEC5EA,MAAMskG,EAAchuG,SAASnX,cAAc,OAEpC,SAAS4+B,EAAsBhjB,GACpC,MAAMwiB,EAAY55B,OAAO65B,eAEzB,GAAID,GAAWM,YAAcN,EAAUI,WAAY,CACjD,MAAMwR,EAAQ5R,EAAUM,WAAW,GACnCsR,EAAMo1E,iBAEN,MAAMjmG,EAAW6wB,EAAMq1E,yBAAyBzpG,GAC1C0pG,EAAmBnmG,EAAS2wB,UAClCE,EAAMu1E,WAAWpmG,GACbmmG,GACFt1E,EAAMw1E,cAAcF,GACpBt1E,EAAMy1E,YAAYH,IAElBt1E,EAAMmtE,UAAS,GAEjB/+E,EAAUgS,kBACVhS,EAAUiS,SAASL,EACrB,CACF,CAEO,SAAS04C,EAAuBrkB,EAAyBqhD,GAC9D,IAAKrhD,EACH,MAAO,GAGT,MAAMshD,EAAMnhH,OAAO65B,eACnB,IAAKsnF,IAAQA,EAAInnF,WACf,OAAO6lC,EAAU3kD,UAGnB,MAAMswB,EAAQ21E,EAAIjnF,WAAW,GAAGknF,aAChC,OAAK51E,EAAM61E,eAAexhD,GAIrBqhD,GAAsBrhD,EAAUy3B,SAAS9rD,EAAM20C,0BAIpD30C,EAAMmtE,UAAS,GACfntE,EAAME,SAASm0B,EAAW,GAE1B8gD,EAAYzlG,UAAY,GACxBylG,EAAY7tG,YAAY04B,EAAMk1C,iBAEvBigC,EAAYzlG,WATV,GAJA2kD,EAAU3kD,SAcrB,CAGO,SAAS2tE,EAAiBx9C,GAC/B,IAAIu9C,EAAgB,EACpB,MAAMhvD,EAAY55B,OAAO65B,eACzB,IAAKD,GAAsC,IAAzBA,EAAUI,WAC1B,OAAO4uD,EAGT,MAAMp9C,EAAQ5R,EAAUM,WAAW,GAC7BonF,EAAa91E,EAAM41E,aAKzB,OAJAE,EAAW5I,mBAAmBrtE,GAC9Bi2E,EAAW31E,OAAOH,EAAM+1E,aAAc/1E,EAAMg2E,WAC5C54B,EAAgB04B,EAAW5rG,WAAW5Y,OAE/B8rF,CACT,CAGO,SAASG,EAAiB19C,EAAe/D,GAC9C,IAAK,MAAM9vB,KAAQ6zB,EAAQ3yB,WACzB,GAAIlB,EAAK2B,WAAa+mG,KAAKuB,UAAW,CACpC,GAAKjqG,EAAc1a,QAAUwqC,EAAU,CACrC,MAAMkE,EAAQ74B,SAAS84B,cACjB7R,EAAY55B,OAAO65B,eAMzB,OALA2R,EAAME,SAASl0B,EAAM8vB,GACrBkE,EAAMmtE,UAAS,GACf/+E,EAAUgS,kBACVhS,EAAUiS,SAASL,IAEX,CACV,CACElE,GAAY,WAAY9vB,EAAOA,EAAK1a,OAAmB,CAE3D,MAEE,IAAkB,KADlBwqC,EAAWyhD,EAAiBvxE,EAAM8vB,IAEhC,OAAQ,EAKd,OAAOA,CACT,CAEO,SAASo6E,IACd,MAAM9nF,EAAY55B,OAAO65B,eACzBD,GAAWgS,iBACb,C,kBClGA,IAAI+1E,EAEG,SAAS39F,IAAsF,IAAhE49F,EAAMp9G,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,GAAAA,UAAA,GAAG,IAAKozF,EAA4BpzF,UAAA1H,OAAA,EAAA0H,UAAA,QAAAzL,EAAE8oH,EAAUr9G,UAAA1H,OAAA,QAAA/D,IAAAyL,UAAA,IAAAA,UAAA,GACrFm9G,IACHA,EAAehvG,SAASnX,cAAc,SACtCmmH,EAAaxlG,aAAa,OAAQ,SAGpCwlG,EAAaxlG,aAAa,SAAUylG,GAEhCC,EACFF,EAAajmG,gBAAgB,YAE7BimG,EAAaxlG,aAAa,WAAY,YAIxCwlG,EAAaG,SAAW,KACxBH,EAAaj7G,MAAQ,GACrBi7G,EAAaG,SAAWlqB,EAExB+pB,EAAarJ,OACf,C,mDCrBA,SAAgB,KAAO,uBAAuB,OAAS,uBAAuB,QAAU,uBAAuB,KAAO,uBAAuB,KAAO,uBAAuB,oBAAsB,uBAAuB,mBAAqB,uBAAuB,OAAS,uBAAuB,YAAc,uB,kCCAlT,SAAgB,KAAO,uBAAuB,KAAO,uBAAuB,OAAS,uBAAuB,aAAe,uBAAuB,MAAQ,uBAAuB,iBAAmB,uBAAuB,gBAAkB,uBAAuB,UAAY,uB","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useBotCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.async.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/hooks/useSelectorSignal.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelector.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/captureEvents.ts","webpack://telegram-t/./src/util/lethargy.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/parseMessageInput.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {renderingFetchedParticipants?.map((peer) => (\n          <Avatar\n            key={peer.id}\n            peer={peer}\n          />\n        ))}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tx2CpCmpZZrHnCMUksg2\",\"character-container\":\"LTqDt1MFKRDBjNZxKii4\",\"characterContainer\":\"LTqDt1MFKRDBjNZxKii4\",\"character\":\"o1u1ctUWtWa2FWlC_BuT\",\"character-old\":\"tzggk5evL9EPqVAtvWEu\",\"characterOld\":\"tzggk5evL9EPqVAtvWEu\",\"character-disappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"characterDisappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"character-new\":\"q6poDASGW35qQiXsD99c\",\"characterNew\":\"q6poDASGW35qQiXsD99c\",\"character-appear\":\"lsHAt1tY7_VcodncBZKh\",\"characterAppear\":\"lsHAt1tY7_VcodncBZKh\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oGmd77AsTbJeJk8CV6gl\",\"preview\":\"gp5OwinzPeHwkesmaEIR\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransition(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransition(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  onHideTranscription,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio } = getActions();\n\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(\n    theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn, !noAvatars, isMobile,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon icon-play\" />\n        <i className=\"icon icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ahi3up0oMwlFJTE6hkxG\",\"size-micro\":\"DOhAE8mniLY2g2i7rkfz\",\"sizeMicro\":\"DOhAE8mniLY2g2i7rkfz\",\"size-mini\":\"gF82cRdQRxqmTN8fLb9i\",\"sizeMini\":\"gF82cRdQRxqmTN8fLb9i\",\"size-tiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"sizeTiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"size-small\":\"iaKZOfQnH3hROD8QK_fq\",\"sizeSmall\":\"iaKZOfQnH3hROD8QK_fq\",\"size-small-mobile\":\"YP90v9JGup97HOcD2duf\",\"sizeSmallMobile\":\"YP90v9JGup97HOcD2duf\",\"size-medium\":\"TmYXjEqVbt0gwaoWlRHv\",\"sizeMedium\":\"TmYXjEqVbt0gwaoWlRHv\",\"size-large\":\"YIuShtdEPpbCXrGgmeFv\",\"sizeLarge\":\"YIuShtdEPpbCXrGgmeFv\",\"size-jumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"sizeJumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"avatar\":\"PTpUqAuoZL9Uou6MqJXX\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\nimport renderText from './helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n    description?: string;\n    chatInviteLink?: string;\n    topicLink?: string;\n  };\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    if (!userId) return;\n    loadFullUser({ userId });\n  }, [userId]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? threadId : undefined;\n    const chatInviteLink = chat ? selectChatFullInfo(global, chat.id)?.inviteLink : undefined;\n    let description = user ? selectUserFullInfo(global, user.id)?.bio : undefined;\n    if (!description && chat) {\n      description = selectChatFullInfo(global, chat.id)?.about;\n    }\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n    };\n  },\n)(ChatExtra));\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !attach.voice ? true : undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverUrl = cover ? `data:${cover.format};base64,${cover.data.toString('base64')}` : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n}) {\n  const { openLimitReachedModal, showAllowedMessageTypesNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'image' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'image' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n        setShouldSuggestCompression(undefined);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    handleSetAttachments([\n      ...attachments,\n      ...await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      ))),\n    ]);\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    handleSetAttachments(await Promise.all(files.map((file) => buildAttachment(file.name, file))));\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n\nfunction getAttachmentType(attachment: ApiAttachment) {\n  if (attachment.shouldSendAsFile) return 'file';\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'image';\n  }\n\n  if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'video';\n  }\n\n  if (SUPPORTED_AUDIO_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'audio';\n  }\n\n  return 'file';\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useBotCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || !commands) {\n      setFilteredBotCommands(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean(filteredBotCommands?.length && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport {\n  DEBUG, EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseMessageInput, { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseMessageInput';\nimport buildAttachment from '../helpers/buildAttachment';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nfunction preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) return;\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseMessageInput(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      const shouldSetAttachments = files?.length && !editedMessage && !isWordDocument;\n\n      if (shouldSetAttachments) {\n        const newAttachments = await Promise.all(files!.map((file) => {\n          return buildAttachment(file.name, file);\n        }));\n        setAttachments((attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji, onCustomEmojiStripped,\n    setNextText,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE, EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport {\n  requestMeasure, requestNextMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseMessageInput from '../../../../util/parseMessageInput';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/useBeforeUnload';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: number;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: number } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      saveDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        draft: parseMessageInput(html),\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft));\n\n    const customEmojiIds = draft.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n\n    if (!IS_TOUCH_ENV) {\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    }\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType } from '../../../../global/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseMessageInput from '../../../../util/parseMessageInput';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/useBeforeUnload';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  openDeleteModal: () => void,\n  chatId: string,\n  threadId: number,\n  type: MessageListType,\n  draft?: ApiFormattedText,\n  editingDraft?: ApiFormattedText,\n  replyingToId?: number,\n): [VoidFunction, VoidFunction, boolean] => {\n  const { editMessage, setEditingDraft, toggleMessageWebPage } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseMessageInput(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseMessageInput(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseMessageInput(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteModal();\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseMessageInput(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/i;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_IMAGE_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      <ResponsiveHoverButton\n        id=\"attach-menu-button\"\n        className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n        round\n        color=\"translucent\"\n        onActivate={handleToggleAttachMenu}\n        ariaLabel=\"Add an attachment\"\n        ariaControls=\"attach-menu-controls\"\n        hasPopup\n      >\n        <i className=\"icon icon-attach\" />\n      </ResponsiveHoverButton>\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {(canSendDocuments || canSendAudios)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {canAttachMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandTooltip = useModuleLoader(Bundles.Extra, 'BotCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandTooltip ? <BotCommandTooltip {...props} /> : undefined;\n};\n\nexport default BotCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row) => (\n          <div className=\"row\">\n            {row.map((button) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ messageId: message.id, button })}\n              >\n                {button.text}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{text}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectReplyingToId,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport EmbeddedMessage from '../../common/EmbeddedMessage';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyingToId?: number;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n};\n\nconst FORWARD_RENDERING_DELAY = 300;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyingToId,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  onClear,\n}) => {\n  const {\n    setReplyingToId,\n    setEditingId,\n    focusMessage,\n    changeForwardRecipient,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n  const isShown = Boolean(\n    ((replyingToId || editingId) && message)\n    || (sender && forwardedMessagesCount),\n  );\n  const canAnimate = useAsyncRendering(\n    [forwardedMessagesCount],\n    forwardedMessagesCount ? FORWARD_RENDERING_DELAY : undefined,\n  );\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransition(canAnimate && isShown, undefined, !shouldAnimate, undefined, !shouldAnimate);\n\n  const clearEmbedded = useLastCallback(() => {\n    if (replyingToId && !shouldForceShowEditing) {\n      setReplyingToId({ messageId: undefined });\n    } else if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const handleMessageClick = useLastCallback((): void => {\n    if (isForwarding) return;\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n  });\n\n  const handleChangeRecipientClick = useLastCallback(() => {\n    changeForwardRecipient();\n  });\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!shouldRender) handleContextMenuClose();\n  }, [handleContextMenuClose, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n\n  const leftIcon = useMemo(() => {\n    if (replyingToId && !shouldForceShowEditing) {\n      return 'icon-reply';\n    }\n    if (editingId) {\n      return 'icon-edit';\n    }\n    if (isForwarding) {\n      return 'icon-forward';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, replyingToId, shouldForceShowEditing]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? lang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu} onClick={handleContextMenu}>\n      <div className=\"ComposerEmbeddedMessage_inner\">\n        <div className=\"embedded-left-icon\">\n          <i className={buildClassName('icon', leftIcon)} />\n        </div>\n        <EmbeddedMessage\n          className=\"inside-input\"\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={editingId ? lang('EditMessage') : noAuthors ? lang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          hasContextMenu={isForwarding && !isContextMenuDisabled}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {isForwarding && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            transformOriginX={transformOriginX}\n            transformOriginY={transformOriginY}\n            positionX={positionX}\n            positionY={positionY}\n            style={menuStyle}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            <MenuItem\n              icon={!noAuthors ? 'message-succeeded' : undefined}\n              customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: false,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n            </MenuItem>\n            <MenuItem\n              icon={noAuthors ? 'message-succeeded' : undefined}\n              customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: true,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n            </MenuItem>\n            {forwardsHaveCaptions && (\n              <>\n                <MenuSeparator />\n                <MenuItem\n                  icon={!noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: false,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                </MenuItem>\n                <MenuItem\n                  icon={noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: true,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                </MenuItem>\n              </>\n            )}\n            <MenuSeparator />\n            <MenuItem icon=\"replace\" onClick={handleChangeRecipientClick}>\n              {lang('ChangeRecipient')}\n            </MenuItem>\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { shouldForceShowEditing }): StateProps => {\n    const { chatId, threadId, type: messageListType } = selectCurrentMessageList(global) || {};\n    if (!chatId || !threadId || !messageListType) {\n      return {};\n    }\n\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n    } = selectTabState(global);\n\n    const replyingToId = selectReplyingToId(global, chatId, threadId);\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global);\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    let message: ApiMessage | undefined;\n    if (replyingToId && !shouldForceShowEditing) {\n      message = selectChatMessage(global, chatId, replyingToId);\n    } else if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    }\n\n    let sender: ApiPeer | undefined;\n    if (replyingToId && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && !forwardInfo?.hiddenUserName) {\n        sender = selectSender(global, message);\n      }\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    }\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    return {\n      replyingToId,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseMessageInput from '../../../util/parseMessageInput';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: number;\n  getHtml: Signal<string>;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseMessageInput(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransition(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\">\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage message={messageStub} inPreview theme={theme} />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './DeleteMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst DeleteMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DeleteMessageModal = useModuleLoader(Bundles.Extra, 'DeleteMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DeleteMessageModal ? <DeleteMessageModal {...props} /> : undefined;\n};\n\nexport default DeleteMessageModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiChatMember,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiUser,\n  ApiVideo,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList,\n  MessageListType, TabState,\n} from '../../global/types';\nimport type { IAnchorPosition, InlineBotSettings, ISettings } from '../../types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectPeerStory,\n  selectReplyingToId,\n  selectRequestedDraftFiles,\n  selectRequestedDraftText,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { processMessageInputForCustomEmoji } from '../../util/customEmojiManager';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dateFormat';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseMessageInput from '../../util/parseMessageInput';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useInterval from '../../hooks/useInterval';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useSignal from '../../hooks/useSignal';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useBotCommandTooltip from '../middle/composer/hooks/useBotCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotCommandTooltip from '../middle/composer/BotCommandTooltip.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport ReactionSelector from '../middle/message/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport DeleteMessageModal from './DeleteMessageModal.async';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: number;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  onDropHide?: NoneToVoidFunction;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    draft?: ApiDraft;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    replyingToId?: number;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    shouldSchedule?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    groupChatMembers?: ApiChatMember[];\n    currentUserId?: string;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    chatBotCommands?: ApiBotCommand[];\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraftText?: string;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  shouldSchedule,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  groupChatMembers,\n  topInlineBotIds,\n  currentUserId,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  chatBotCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  replyingToId,\n  requestedDraftText,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openChat,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n  } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePrevious(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    if (chatId && chat && !sendAsPeerIds && isReady && isChatSuperGroup(chat)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, isChatWithBot, isInStoryViewer),\n    [chat, isChatWithBot, isInStoryViewer],\n  );\n\n  const isComposerBlocked = !canSendPlainText && !editingMessage;\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const {\n    isOpen: isBotCommandTooltipOpen,\n    close: closeBotCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n  } = useBotCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length)),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    openDeleteModal,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n    replyingToId,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (shouldSchedule) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, shouldSchedule,\n  ]);\n  const canShowCustomSendMenu = !shouldSchedule;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuPosition: storyReactionPickerPosition,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerPosition) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerPosition,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerPosition]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseMessageInput(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    sendMessage({\n      messageList: currentMessageList,\n      text,\n      entities,\n      scheduledAt,\n      isSilent,\n      shouldUpdateStickerSetOrder,\n      attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      shouldGroupMessages: sendGrouped,\n    });\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, localOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform } },\n        )];\n      }\n    }\n\n    const { text, entities } = parseMessageInput(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, localOnly: true });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    callAttachBot({\n      chatId, url: botMenuButton.url, threadId,\n    });\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraftText) {\n      setHtml(requestedDraftText);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraftText, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (shouldSchedule || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, localOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, localOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (shouldSchedule) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (shouldSchedule) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openChat({\n      id: chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isDeleteModalOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isBotCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransition(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList!);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const prevEditedMessage = usePrevious(editingMessage, true);\n  const renderedEditedMessage = editingMessage || prevEditedMessage;\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseMessageInput(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({ sendCompressed, sendGrouped }, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilentAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    sendSilent({ sendCompressed, sendGrouped });\n  });\n\n  const onSend = mainButtonState === MainButtonState.Edit\n    ? handleEditComplete\n    : mainButtonState === MainButtonState.Schedule ? handleSendScheduled\n      : handleSend;\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n        />\n      )}\n      {shouldRenderReactionSelector && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={shouldSchedule}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachments}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      {renderedEditedMessage && (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          message={renderedEditedMessage}\n        />\n      )}\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <BotCommandTooltip\n        isOpen={isBotCommandTooltipOpen}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        getHtml={getHtml}\n        onClick={handleBotCommandSelect}\n        onClose={closeBotCommandTooltip}\n      />\n      <div className={buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks')}>\n        <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n          <defs>\n            <filter\n              x=\"-50%\"\n              y=\"-14.7%\"\n              width=\"200%\"\n              height=\"141.2%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"composerAppendix\"\n            >\n              <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n              <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n              <feColorMatrix\n                values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                in=\"shadowBlurOuter1\"\n              />\n            </filter>\n          </defs>\n          <g fill=\"none\" fill-rule=\"evenodd\">\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n          </g>\n        </svg>\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n            />\n          </>\n        )}\n        <div className=\"message-input-wrapper\">\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {(!isComposerBlocked || canSendGifs || canSendStickers) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang('Message'))\n                  : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          <AttachMenu\n            chatId={chatId}\n            threadId={threadId}\n            isButtonVisible={!activeVoiceRecording && !editingMessage}\n            canAttachMedia={canAttachMedia}\n            canAttachPolls={canAttachPolls}\n            canSendPhotos={canSendPhotos}\n            canSendVideos={canSendVideos}\n            canSendDocuments={canSendDocuments}\n            canSendAudios={canSendAudios}\n            onFileSelect={handleFileSelect}\n            onPollCreate={openPollModal}\n            isScheduled={shouldSchedule}\n            attachBots={isInMessageList ? attachBots : undefined}\n            peerType={attachMenuPeerType}\n            shouldCollectDebugLogs={shouldCollectDebugLogs}\n            theme={theme}\n            onMenuOpen={onAttachMenuOpen}\n            onMenuClose={onAttachMenuClose}\n          />\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={'documentId' in sentStoryReaction ? sentStoryReaction.documentId : sentStoryReaction.emoticon}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList}\n          canScheduleUntilOnline={canScheduleUntilOnline}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!shouldSchedule ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraftText = selectRequestedDraftText(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const replyingToId = selectReplyingToId(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n\n    return {\n      availableReactions: type === 'story' ? global.availableReactions : undefined,\n      topReactions: type === 'story' ? global.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      replyingToId,\n      draft: selectDraft(global, chatId, threadId),\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      shouldSchedule: messageListType === 'scheduled',\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      groupChatMembers: chatFullInfo?.members,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      chatBotCommands: chatFullInfo?.botCommands,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraftText,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n    };\n  },\n)(Composer));\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={isPrivateChat ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../config';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleDownload = useLastCallback(() => {\n    downloadMessageMedia({ message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport type {\n  ApiMessage, ApiPeer,\n} from '../../api/types';\nimport type { ChatTranslatedMessages } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getPeerColorKey,\n  getSenderTitle,\n  isActionMessage,\n  isMessageTranslatable,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getPictogramDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { useFastClick } from '../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useThumbnail from '../../hooks/useThumbnail';\nimport useMessageTranslation from '../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../middle/ActionMessage';\nimport MediaSpoiler from './MediaSpoiler';\nimport MessageSummary from './MessageSummary';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  hasContextMenu?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  sender,\n  title,\n  customText,\n  isProtected,\n  noUserColors,\n  hasContextMenu,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const mediaBlobUrl = useMedia(message && getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = useThumbnail(message);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender) : message?.forwardInfo?.hiddenUserName;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        sender && !noUserColors && `color-${getPeerColorKey(sender)}`,\n      )}\n      onClick={message && handleClick}\n      onMouseDown={message && handleMouseDown}\n    >\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      <div className=\"message-text\">\n        <p dir=\"auto\">\n          {!message ? (\n            customText || NBSP\n          ) : isActionMessage(message) ? (\n            <ActionMessage\n              message={message}\n              isEmbedded\n              observeIntersectionForLoading={observeIntersectionForLoading}\n              observeIntersectionForPlaying={observeIntersectionForPlaying}\n            />\n          ) : (\n            <MessageSummary\n              lang={lang}\n              message={message}\n              noEmoji={Boolean(mediaThumbnail)}\n              translatedText={translatedText}\n              observeIntersectionForLoading={observeIntersectionForLoading}\n              observeIntersectionForPlaying={observeIntersectionForPlaying}\n            />\n          )}\n        </p>\n        <div className=\"message-title\" dir=\"auto\">{renderText(senderTitle || title || NBSP)}</div>\n      </div>\n      {hasContextMenu && <i className=\"embedded-more icon icon-more\" />}\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedMessage;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useLang';\nimport { MediaViewerOrigin, type StoryViewerOrigin } from '../../types';\n\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className?: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  onClick?: VoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  onClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: chat.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {messagesCount ? lang('messages', messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <Avatar\n          key={chat.id}\n          size={avatarSize}\n          peer={chat}\n          withStory={withStory}\n          storyViewerOrigin={storyViewerOrigin}\n          storyViewerMode=\"single-peer\"\n          onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n        />\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : <FullNameTitle peer={chat} />}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\n\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MbgQHglBDZLEAHDebnxc\",\"mask-animation\":\"zFmCa6knHOC8UhmcYHq8\",\"maskAnimation\":\"zFmCa6knHOC8UhmcYHq8\",\"circle-cut\":\"oeh0t6JqYOZTcblRUc6a\",\"circleCut\":\"oeh0t6JqYOZTcblRUc6a\",\"dots\":\"leAfUrALDfdpl4i8VEmv\",\"canvas\":\"oQmroREXWSylQXgjAdIB\",\"opacity-breath\":\"FKjJw0kaOB4ibkNp2I6S\",\"opacityBreath\":\"FKjJw0kaOB4ibkNp2I6S\",\"-7s\":\"UYRulRheGjTql4xAbURj\",\"7S\":\"UYRulRheGjTql4xAbURj\",\"-14s\":\"luaiQWxNoz8gYcb2XqSG\",\"14S\":\"luaiQWxNoz8gYcb2XqSG\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon icon-message-failed\" />\n          </div>\n        ) : <i className={`icon icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Checkbox from '../ui/Checkbox';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  lockedIds?: string[];\n  forceShowSelf?: boolean;\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedIds,\n  forceShowSelf,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const [lockedSelectedIds, unlockedSelectedIds] = useMemo(() => {\n    if (!lockedIds?.length) return [MEMO_EMPTY_ARRAY, selectedIds];\n    const unlockedIds = selectedIds.filter((id) => !lockedIds.includes(id));\n    return [lockedIds, unlockedIds];\n  }, [selectedIds, lockedIds]);\n\n  const lockedIdsSet = useMemo(() => new Set(lockedIds), [lockedIds]);\n\n  const sortedItemIds = useMemo(() => {\n    return itemIds.sort((a, b) => {\n      const aIsLocked = lockedIdsSet.has(a);\n      const bIsLocked = lockedIdsSet.has(b);\n      if (aIsLocked && !bIsLocked) {\n        return -1;\n      }\n      if (!aIsLocked && bIsLocked) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [itemIds, lockedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedIdsSet.has(id)) {\n      onDisabledClick?.(id);\n      return;\n    }\n\n    const newSelectedIds = selectedIds.slice();\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange?.(newSelectedIds);\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + lockedSelectedIds.length < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => {\n            const renderCheckbox = () => {\n              return (\n                <Checkbox\n                  label=\"\"\n                  disabled={lockedIdsSet.has(id)}\n                  checked={selectedIds.includes(id)}\n                  round={isRoundCheckbox}\n                />\n              );\n            };\n            return (\n              <ListItem\n                key={id}\n                className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n                disabled={lockedIdsSet.has(id)}\n                allowDisabledClick={Boolean(onDisabledClick)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleItemClick(id)}\n                ripple\n              >\n                {!isRoundCheckbox ? renderCheckbox() : undefined}\n                {isUserId(id) ? (\n                  <PrivateChatInfo forceShowSelf={forceShowSelf} userId={id} />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n                {isRoundCheckbox ? renderCheckbox() : undefined}\n              </ListItem>\n            );\n          })}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../global/helpers';\nimport { selectChat, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  peerId?: string;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  isStandalone?: boolean;\n  canClose?: boolean;\n  forceShowSelf?: boolean;\n  clickArg?: any;\n  className?: string;\n  onClick: (arg: any) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  isStandalone,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  className,\n  isSavedMessages,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (user || chat) {\n    iconElement = (\n      <Avatar\n        peer={user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = !chat || (user && !isSavedMessages)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, isSavedMessages);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n    isStandalone && 'standalone',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  onEmojiStatusClick,\n  storyViewerOrigin,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: user.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <i className={`icon icon-${statusIcon} status-icon`} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus) && 'online')}>\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        onEmojiStatusClick={onEmojiStatusClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        peer={user}\n        isSavedMessages={isSavedMessages}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPeerColorKey,\n  getUserFullName,\n  getVideoAvatarMediaHash,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const userOrChat = user || chat;\n  const canHaveMedia = userOrChat && !isSavedMessages && !isDeleted && !isRepliesChat;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(userOrChat, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  let content: TeactNode | undefined;\n\n  if (isSavedMessages) {\n    content = <i className=\"icon icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon icon-reply-filled\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getPeerColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"M4GWpBd7i7ViA2xNTvH4\",\"info\":\"uHKuP7J67YWxko9FiDo9\",\"status\":\"DwTvYuXwYiyH8P8HGyEw\",\"fallbackPhoto\":\"a_azkhZzdtjRO5pWnNno\",\"fallbackPhotoContents\":\"NVXGZpj7iFHkn7HaGsey\",\"fallbackPhotoVisible\":\"zPvRR0bFn0HFuXDjj1wU\",\"fallbackPhotoAvatar\":\"IG9hcS9__jiZjU59BA1U\",\"photoWrapper\":\"YvztuUsksHhhNiXGWWbN\",\"photoDashes\":\"UXIlP1uQpXVG_DNB26iC\",\"photoDash\":\"Ay_dhoiSuGWjH2hVOy7i\",\"photoDash_current\":\"xWzV6TAYO756R70Pzfmb\",\"photoDashCurrent\":\"xWzV6TAYO756R70Pzfmb\",\"navigation\":\"rcKy8wQruH_z84yRjAry\",\"navigation_prev\":\"IrGNErqISNgGY687XP5I\",\"navigationPrev\":\"IrGNErqISNgGY687XP5I\",\"navigation_next\":\"mERrfFjC7wKBhpVCjGgg\",\"navigationNext\":\"mERrfFjC7wKBhpVCjGgg\",\"topicContainer\":\"Dlmqly7y8H7bCtaGNFIO\",\"topicTitle\":\"eMDgnAzVXSNlBUAgdBPK\",\"topicIcon\":\"Bv321I_wzF0fdNw63dxB\",\"topicIconTitle\":\"MwfYq2acbtWIp8pGf9kI\",\"topicMessagesCounter\":\"YrvPEuAvDVR3BLU68aIN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPhoto, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    isSavedMessages?: boolean;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const mediaIdRef = useStateRef(mediaId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Reset the current avatar photo to the one selected in Media Viewer if photos have changed\n  useEffect(() => {\n    setHasSlideAnimation(false);\n    setCurrentPhotoIndex(mediaIdRef.current || 0);\n  }, [mediaIdRef, photos]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!userId) return;\n\n    openPremiumModal({ fromUserId: userId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = !isSavedMessages && photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        isSavedMessages={isSavedMessages}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      isSavedMessages,\n      mediaId,\n      avatarOwnerId,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { ApiMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageKey,\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CBuciapCXTFHGIT8QJjp\",\"particle\":\"zSAQoiw2P8dHog4GGC6Y\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerPreviewHash(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"UoQ7Ahl_08BYJER7dkXg\",\"effect\":\"DUYRztiKh76RsdbcJpu8\",\"animated-icon\":\"m6I0yrKxFYZrVajqEjYY\",\"animatedIcon\":\"m6I0yrKxFYZrVajqEjYY\",\"animating\":\"_sWZKdctR4GWBAZk5LvT\",\"withEffectOnly\":\"bcQvAAQmccIErVUj7YDo\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport ReactionStaticEmoji from '../ReactionStaticEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransition(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransition(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransition(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          forceAlways\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          forceAlways\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { availableReactions, genericEmojiEffects } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean(unreadCount || hasUnreadMark);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, pinnedElement,\n    ].filter(Boolean);\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QNEU55wdWY0UBHKcohz_\",\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"button\":\"RF4n_8QOkb5FMXcpbmBW\",\"title\":\"XFFMu4VlEHKxRihwcGTm\",\"unread-count\":\"jYYtPy1W31sqUc_gw9RW\",\"unreadCount\":\"jYYtPy1W31sqUc_gw9RW\",\"info\":\"fvlwjR3heR1XQKFT_jiv\",\"name\":\"Njj0lF4z1QQ96mlTyHt_\",\"icon\":\"EKj05B3RNFnEMtMNttAq\",\"avatarWrapper\":\"qx5qdiOt16oub2O9sYeg\",\"avatar\":\"n8grGxKGGUr4oa8NVGFW\",\"chatsPreview\":\"m7P0WNHzg_kxle3rxniA\",\"unread\":\"mee_ERQMDxZsfb47JEBb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import { addCallback } from '../lib/teact/teactn';\nimport { getGlobal } from '../global';\n\nimport type { GlobalState } from '../global/types';\nimport type { Signal, SignalSetter } from '../util/signals';\n\nimport { createSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\n/*\n  This hook is a more performant variation of the standard React `useSelector` hook. It allows to:\n  a) Avoid multiple subscriptions to global updates by leveraging a single selector reference.\n  b) Return a signal instead of forcing a component update right away.\n */\n\ntype Selector<T extends any> = (global: GlobalState) => T;\n\ninterface State<T extends any> {\n  clientsCount: number;\n  getter: Signal<T>;\n  setter: SignalSetter;\n}\n\nconst bySelector = new Map<Selector<any>, State<any>>();\n\naddCallback((global: GlobalState) => {\n  for (const [selector, { setter }] of bySelector) {\n    setter(selector(global));\n  }\n});\n\nfunction useSelectorSignal<T extends any>(selector: Selector<T>): Signal<T> {\n  let state = bySelector.get(selector);\n\n  if (!state) {\n    const [getter, setter] = createSignal(selector(getGlobal()));\n    state = { clientsCount: 0, getter, setter };\n    bySelector.set(selector, state);\n  }\n\n  useEffectOnce(() => {\n    state!.clientsCount++;\n\n    return () => {\n      state!.clientsCount--;\n\n      if (!state!.clientsCount) {\n        bySelector.delete(selector);\n      }\n    };\n  });\n\n  return state.getter;\n}\n\nexport default useSelectorSignal;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wYxzEPxIxq51N_1Jvb22\",\"indicator\":\"GjqQzJt4PhbEBMchbPMg\",\"indicatorInner\":\"mem3FdA38CqQltSSxUwi\",\"selected\":\"J83lhIRMV9uenQVCQJpB\",\"active\":\"AtRfJ5hbKIb7giL05RZz\",\"bar-animation-transform-2\":\"fvooOFoNHT8RmLcjbCMZ\",\"barAnimationTransform2\":\"fvooOFoNHT8RmLcjbCMZ\",\"bar-animation-transform-1\":\"V89uAJI0AldAPq3h8iKW\",\"barAnimationTransform1\":\"V89uAJI0AldAPq3h8iKW\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectorSignal from '../../../hooks/useSelectorSignal';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { lastMessage, isForum } = chat || {};\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n      } else {\n        openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n      }\n\n      return;\n    }\n\n    openChat({ id: chatId, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}` : undefined}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = chat.lastMessage ? getMessageAction(chat.lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = chat.lastMessage && selectTopicFromMessage(global, chat.lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && chat.lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SQg81XcAI_8yUrDTZsuO\",\"sticker\":\"wJbYOMkKbFvBF3ETHcTe\",\"title\":\"aAjnCIjqnZ5azP_wg1ax\",\"description\":\"xkUox6hbodMU0tsgwbai\",\"is-ios\":\"v_F4YMWOjnwul_FmJtqz\",\"isIos\":\"v_F4YMWOjnwul_FmJtqz\",\"is-macos\":\"I0of4RZnJHb9jdBEQSiA\",\"isMacos\":\"I0of4RZnJHb9jdBEQSiA\",\"button-text\":\"avAW55GP937eCr8UmpfS\",\"buttonText\":\"avAW55GP937eCr8UmpfS\",\"centered\":\"LIiIYVtbGfUXltL06Xbb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"root\":\"auVVCT950ajs6Uf4jI_w\",\"title\":\"RrIwnolHiQkojIfDEmg3\",\"info\":\"W7svz8CjmnPmDhwiz6cJ\",\"buttons\":\"lV9Uc02uJwQff0VQsKTj\",\"button\":\"D0dko7sVnw0KDtqjY0bH\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [archiveSettings, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds, shouldDisplayArchive]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open')}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onSettingsScreenSelect={onSettingsScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZyX_vkPmR8lkPavXpJ8t\",\"button-text\":\"eyTT7Nz45S4tsccfs60O\",\"buttonText\":\"eyTT7Nz45S4tsccfs60O\",\"sticker\":\"qtGErqZ1CIiAYG3E4UcJ\",\"title\":\"xpDHtODGvlK2Esrg3kFa\",\"description\":\"xqeZm45hTFw3abdn8dYe\",\"is-ios\":\"G5wtv6cwHgiIpRWtvIvu\",\"isIos\":\"G5wtv6cwHgiIpRWtvIvu\",\"is-macos\":\"H92rL6BfAuzokrWOXdQr\",\"isMacos\":\"H92rL6BfAuzokrWOXdQr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YmRS2ZiwKMtqCF87Nsw8\",\"closed-icon\":\"K6QDMKEV2GXbuOQWOS73\",\"closedIcon\":\"K6QDMKEV2GXbuOQWOS73\",\"topic-icon\":\"TB99wQ9nHBumZ6E9ByUz\",\"topicIcon\":\"TB99wQ9nHBumZ6E9ByUz\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiFormattedText, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiFormattedText;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const { openChat, deleteTopic, focusLastMessage } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openChat({ id: chatId, threadId: topic.id, shouldReplaceHistory: true });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId)!;\n    const { senderId, replyToMessageId, isOutgoing } = lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n    hash: chat ? createLocationHash(chat.id, 'thread', MAIN_THREAD_ID) : undefined,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? currentThreadId : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GUOX6Q0XzHRhNZvBwjQ9\",\"rtl\":\"_1XehUpS3aX91hWXDmcu\",\"no-animation\":\"mPOFnJvncopcVbbyZrzs\",\"noAnimation\":\"mPOFnJvncopcVbbyZrzs\",\"group-call\":\"OH0LaRqoNDIvvHsCtEte\",\"groupCall\":\"OH0LaRqoNDIvvHsCtEte\",\"notch\":\"UhjDQykjZBYhiVclJl16\",\"scrolled\":\"h_YBka1L8eRICjrO5dF5\",\"scroll-top-handler\":\"cO3iiLSh70tyWuNCUFtX\",\"scrollTopHandler\":\"cO3iiLSh70tyWuNCUFtX\",\"info\":\"mzucaTAH77gNB1V006lS\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gljGvMdlFlsKhrMPQ_xa\",\"title-row\":\"GrFgsvT5YSYldl56Hnzu\",\"titleRow\":\"GrFgsvT5YSYldl56Hnzu\",\"loading\":\"bYI9fzK27IbEWGTzvRGf\",\"other-column\":\"RhuR5wto63HGEeY1NdXg\",\"otherColumn\":\"RhuR5wto63HGEeY1NdXg\",\"main-column\":\"VUe4FFBCwClvaU9aiXG1\",\"mainColumn\":\"VUe4FFBCwClvaU9aiXG1\",\"unread\":\"yHnVWii5hDMte2XGiGio\",\"last-message\":\"OyHxp9apV7oixvvxGFDx\",\"lastMessage\":\"OyHxp9apV7oixvvxGFDx\",\"after-wrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"afterWrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"after\":\"DGAWy9KRwAZqof7Bt1nx\",\"title\":\"WeBppBs2KkOXzHRzQ2_W\",\"otherColumnIcon\":\"mrAD_CKmksSYVhfxgz_w\",\"other-column-title\":\"Ub9bpPYaMAw0qMouq5_O\",\"otherColumnTitle\":\"Ub9bpPYaMAw0qMouq5_O\",\"other-columns\":\"FJt1oTIn6WgfvH9iKMg3\",\"otherColumns\":\"FJt1oTIn6WgfvH9iKMg3\",\"ellipsis\":\"RL7lx7aP0Fg2LakRlxHp\",\"reverse-corner\":\"RJ0NXk_lx9qewdoGgJsT\",\"reverseCorner\":\"RJ0NXk_lx9qewdoGgJsT\",\"overwritten-width\":\"e4cE7B51DN3MrEY9WuKx\",\"overwrittenWidth\":\"e4cE7B51DN3MrEY9WuKx\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLang from '../../hooks/useLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openChat } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openChat({\n      id: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { Thread } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n} from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useLang from '../../../../hooks/useLang';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: Thread['draft'];\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length && (!chat?.isForum || isTopic)) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text,\n            entities: draft.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {Boolean(lastMessage.replyToStoryId) && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { ApiMediaFormat, MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getMessageMediaHash } from '../../global/helpers';\nimport * as mediaLoader from '../../util/mediaLoader';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const suggestedPhotoUrl = useMedia(getMessageMediaHash(message, 'full'));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const photo = message.content.action!.photo!;\n    const blobUrl = await mediaLoader.fetch(`videoAvatar${photo.id}?size=u`, ApiMediaFormat.BlobUrl);\n    const blob = await fetch(blobUrl).then((r) => r.blob());\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetch(suggestedPhotoUrl).then((r) => r.blob()));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        mediaId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\n\nimport { getMessageHtmlId, isChatChannel } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: number;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const { openPremiumModal, requestConfetti } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(message.chatId, message.replyToMessageId, targetMessage);\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isGift = Boolean(message.content.action?.text.startsWith('ActionGift'));\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti();\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransition(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      lang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, lang, message, observeIntersectionForLoading, observeIntersectionForPlaying,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuPosition !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span className=\"action-message-gift\" tabIndex={0} role=\"button\" onClick={handlePremiumGiftClick}>\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang('ActionGiftPremiumTitle')}</strong>\n        <span>{lang('ActionGiftPremiumSubtitle', lang('Months', message.content.action?.months, 'i'))}</span>\n\n        <span className=\"action-message-button\">{lang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    !isGift && !isSuggestedAvatar && 'in-one-row',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && <span className=\"action-message-content\">{renderContent()}</span>}\n      {isGift && renderGift()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar\n          message={message}\n          renderContent={renderContent}\n        />\n      )}\n      {contextMenuPosition && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuPosition}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, replyToMessageId, content,\n    } = message;\n\n    const userId = senderId;\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = replyToMessageId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const chat = selectChat(global, chatId);\n    const isChat = chat && (isChatChannel(chat) || userId === chatId);\n    const senderUser = !isChat && userId ? selectUser(global, userId) : undefined;\n    const senderChat = isChat ? chat : undefined;\n    const premiumGiftSticker = global.premiumGifts?.stickers?.[0];\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: number;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId, threadId: MAIN_THREAD_ID });\n  });\n\n  function handleRequestCall() {\n    requestMasterAndRequestCall({ userId: chatId });\n  }\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot;\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isMainThread && !canSubscribe;\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vL8HfVVnjTeFmp1ECFj8\",\"compact\":\"N3E1geoPu1vesCKf545F\",\"image\":\"Fb4aIyDYEwOlaqY8oZkV\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: number;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { IAnchorPosition, ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectIsInSelectMode, selectReplyingToId } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: number;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  replyingToId?: number;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyingToId,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyingToId, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={onFocus}\n            onBlur={onBlur}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyingToId: chatId && threadId ? selectReplyingToId(global, chatId, threadId) : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u1iXUR7f9a1fJ3oKj6UR\",\"preview\":\"PdT0BgaOGO3KQ6uAMywg\",\"linkPreview\":\"VjvrVyctay2XnrWkF6Pm\",\"media\":\"bCVEWkiPlJ2vOFKdsOZn\",\"nonInteractive\":\"sM8Yb5GJn63Lqe7WGyxs\",\"expired\":\"GU6ftk8mOSKG68G3clJz\",\"expiredIcon\":\"C6JcJFH05QLPlgncYbFX\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransition(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Photo: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const photo = (getMessagePhoto(message) || getMessageWebPagePhoto(message))!;\n  const localBlobUrl = photo.blobUrl;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(getMessageMediaHash(message, size), !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(photo.isSpoiler);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'), !isDownloading, getMessageMediaFormat(message, 'download'),\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const isOwn = isOwnMessage(message);\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, isOwn, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions(message, asForwarded, noAvatars, isMobile);\n\n  const className = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      <img\n        src={fullMediaData}\n        className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        draggable={!isProtected}\n      />\n      {withThumb && (\n        <canvas ref={thumbRef} className={buildClassName('thumbnail', thumbClassNames)} />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton\n        && <i className={buildClassName('icon', 'icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\n\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useMedia from '../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\n\nimport './ReactionSelectorReaction.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelectorReaction');\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={cn('&', chosen && 'chosen')}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={cn('static-icon')}\n          src={staticIconData}\n          alt=\"\"\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  canSendReaction, getReactionUniqueKey, isSameReaction, sortReactions,\n} from '../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  maxUniqueReactions?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  onShowMore: (position: IAnchorPosition) => void;\n  className?: string;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 6;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  enabledReactions,\n  currentReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  onToggleReaction,\n  onShowMore,\n  className,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const availableReactions = useMemo(() => {\n    const reactions = allAvailableReactions?.map((availableReaction) => {\n      if (availableReaction.isInactive) return undefined;\n      if (!isPrivate && (!enabledReactions || !canSendReaction(availableReaction.reaction, enabledReactions))) {\n        return undefined;\n      }\n      if (maxUniqueReactions && currentReactions && currentReactions.length >= maxUniqueReactions\n        && !currentReactions.some(({ reaction }) => isSameReaction(reaction, availableReaction.reaction))) {\n        return undefined;\n      }\n      return availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(reactions, topReactions);\n  }, [allAvailableReactions, currentReactions, enabledReactions, isPrivate, maxUniqueReactions, topReactions]);\n\n  const reactionsToRender = useMemo(() => {\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction(r.reaction, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&', lang.isRtl && 'isRtl'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {reactionsToRender.map((reaction, i) => (\n            <ReactionSelectorReaction\n              key={getReactionUniqueKey(reaction.reaction)}\n              isReady={isReady}\n              onToggleReaction={onToggleReaction}\n              reaction={reaction}\n              noAppearAnimation={!canPlayAnimatedEmojis}\n              chosen={userReactionIndexes.has(i)}\n            />\n          ))}\n          {withMoreButton && (\n            <Button\n              color=\"translucent\"\n              className={cn('show-more')}\n              onClick={handleShowMoreClick}\n            >\n              <i className=\"icon icon-down\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersectionForLoading: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Video: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const video = (getMessageVideo(message) || getMessageWebPageVideo(message))!;\n  const localBlobUrl = video.blobUrl;\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(video.isSpoiler);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = getMessageMediaHash(message, 'inline');\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash, !shouldLoad, getMessageMediaFormat(message, 'inline'),\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = getMessageMediaHash(message, 'preview');\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewClassNames = useMediaTransition((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = !hasThumb || previewBlobUrl || isPlayerReady;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n  );\n\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring && !isUnsupported, undefined, wasLoadDisabled);\n  const {\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner));\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const isOwn = isOwnMessage(message);\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const {\n    width, height,\n  } = dimensions || calculateVideoDimensions(video, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (isDownloading) {\n      getActions().cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const className = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', previewClassNames, withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i className={buildClassName('icon', 'icon-large-play', playButtonClassNames)} />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner progress={transferProgress} onClick={handleClick} />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  onMediaClick?: () => void;\n  onCancelMediaTransfer?: () => void;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  onMediaClick,\n  onCancelMediaTransfer,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    type,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = false;\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions(message, undefined, undefined, isMobile);\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent-bordered\"\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir=\"auto\"\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            message={message}\n            observeIntersection={observeIntersection}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            message={message}\n            observeIntersectionForLoading={observeIntersection!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n      return 'lng_view_button_boost';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport {\n  getMessagePhoto,\n  getMessageText,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../../global/helpers';\nimport { calculateInlineImageDimensions, calculateVideoDimensions, REM } from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions(\n  message: ApiMessage, asForwarded?: boolean, noAvatars?: boolean, isMobile?: boolean,\n) {\n  const isOwn = isOwnMessage(message);\n  const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n  const video = getMessageVideo(message);\n\n  const isWebPagePhoto = Boolean(getMessageWebPagePhoto(message));\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const { width, height } = photo\n    ? calculateInlineImageDimensions(photo, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : calculateVideoDimensions(video!, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const messageText = getMessageText(message);\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport { getMessageMediaThumbDataUri } from '../../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\n\nexport default function useBlurredMediaThumbRef(\n  message: ApiMessage,\n  isDisabled?: boolean | string,\n  forcedUri?: string,\n) {\n  const { isMobile } = useAppLayout();\n\n  const dataUri = forcedUri || getMessageMediaThumbDataUri(message);\n\n  return useCanvasBlur(\n    dataUri,\n    Boolean(isDisabled),\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { FocusDirection } from '../../../../types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n\n      const exec = () => animateScroll(\n        messagesContainer,\n        elementRef.current!,\n        isToBottom ? 'end' : 'centerOrTop',\n        FOCUS_MARGIN,\n        focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n        focusDirection,\n        undefined,\n        isResizingContainer,\n        true,\n      );\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isArchived,\n  withAnimation,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { shouldRender, transitionClassNames } = useShowTransition(isVisible, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    if (!withAnimation) return;\n    if (isVisible) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={buildClassName(styles.root, transitionClassNames)}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active } } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { pause } from '../../../util/schedulers';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    const preloadHashes = async (mediaHashes: { hash: string; format: ApiMediaFormat }[]) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format }) => {\n        mediaLoader.fetch(hash, format).then((result) => {\n          if (format === ApiMediaFormat.Progressive) {\n            preloadProgressive(result);\n          }\n        });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n\n  return ids.slice(currentIndex - aroundAmount, currentIndex + aroundAmount);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: { hash: string; format: ApiMediaFormat }[] = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: story.content.video ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    // Alt video with different codec\n    if (story.content.altVideo) {\n      mediaHashes.push({ hash: getStoryMediaHash(story, 'full', true)!, format: ApiMediaFormat.Progressive });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n\n  setTimeout(() => {\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"oWM0Zdb5uhUcOVtc99aS\",\"mediaArea\":\"qF5NAjzN826sfFvUwCi1\",\"preview\":\"dDrvIyufIoAgicpd5jBf\",\"shiny\":\"mHQ5t7g14fbpeDSyTLcd\",\"wave\":\"PlA2GEm5aGvfxsFwsAwE\",\"suggestedReaction\":\"K8z7QedYZHumSrLQCrZq\",\"dark\":\"cKzIdSabAL8MJ9G60u77\",\"background\":\"QxSGHD_yTaeyLhKS2qqz\",\"flipped\":\"CiCfsJ1VaeHZ624tudjv\",\"reaction\":\"Oi4FupikW1BQIPXxj9a7\",\"withCount\":\"dCSRvNsQTjKPeBul8iIX\",\"reactionCount\":\"WAKY7bjrmisH3k1XFQMZ\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 2;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, reactions } = story;\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.suggestedReaction, isDark && styles.dark, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.background, isFlipped && styles.flipped)}\n      />\n      <ReactionAnimatedEmoji\n        className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n        reaction={reaction}\n        containerId={containerId}\n        size={customEmojiSize}\n        effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n        shouldPause={isPreview}\n        shouldLoop={!isPreview}\n      />\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useWindowSize from '../../../hooks/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst MOBILE_MEDIA_BOTTOM_MARGIN = 4 * REM;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className,\n}: OwnProps) => {\n  const { openMapModal } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isActive) return;\n    const element = ref.current;\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n      });\n      return;\n    }\n\n    const adaptedHeight = windowSize.height - MOBILE_MEDIA_BOTTOM_MARGIN;\n\n    const screenAspectRatio = windowSize.width / adaptedHeight;\n\n    const width = screenAspectRatio > STORY_ASPECT_RATIO ? adaptedHeight * STORY_ASPECT_RATIO : windowSize.width;\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    if (mediaArea.type === 'geoPoint' || mediaArea.type === 'venue') {\n      openMapModal({ geoPoint: mediaArea.geo });\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isActive && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea) {\n  const {\n    x, y, width, height, rotation,\n  } = mediaArea.coordinates;\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLang from '../useLang';\nimport useLastCallback from '../useLastCallback';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat);\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect, useRef, useState } from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { onBeforeUnload } from '../util/schedulers';\nimport useLastCallback from './useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id });\n      },\n    };\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }) };\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { Signal } from '../util/signals';\n\nimport useSignal from './useSignal';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, forceUpdate, isStreaming, delay, handleProgress, isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLang from './useLang';\nimport useLastCallback from './useLastCallback';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: number) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useTimeout(callback: () => void, delay?: number) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n    const id = setTimeout(() => savedCallback.current(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from '../global/helpers';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { getMessageKey, parseMessageKey } from '../global/helpers';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import { Lethargy } from './lethargy';\nimport { clamp, round } from './math';\nimport { debounce } from './schedulers';\nimport { IS_IOS } from './windowEnvironment';\nimport windowSize from './windowSize';\n\nexport enum SwipeDirection {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\ninterface CaptureOptions {\n  onCapture?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onRelease?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onDrag?: (\n    e: MouseEvent | TouchEvent | WheelEvent,\n    captureEvent: MouseEvent | TouchEvent | WheelEvent,\n    params: {\n      dragOffsetX: number;\n      dragOffsetY: number;\n    },\n    cancelDrag?: (x: boolean, y: boolean) => void,\n  ) => void;\n  onSwipe?: (e: Event, direction: SwipeDirection) => boolean;\n  onZoom?: (e: TouchEvent | WheelEvent, params: {\n    // Absolute zoom level\n    zoom?: number;\n    // Relative zoom factor\n    zoomFactor?: number;\n\n    // center coordinate of the initial pinch\n    initialCenterX: number;\n    initialCenterY: number;\n\n    // offset of the pinch center (current from initial)\n    dragOffsetX: number;\n    dragOffsetY: number;\n\n    // center coordinate of the current pinch\n    currentCenterX: number;\n    currentCenterY: number;\n  }) => void;\n  onClick?: (e: MouseEvent | TouchEvent) => void;\n  onDoubleClick?: (e: MouseEvent | RealTouchEvent | WheelEvent, params: { centerX: number; centerY: number }) => void;\n  excludedClosestSelector?: string;\n  selectorToPreventScroll?: string;\n  withNativeDrag?: boolean;\n  maxZoom?: number;\n  minZoom?: number;\n  doubleTapZoom?: number;\n  initialZoom?: number;\n  isNotPassive?: boolean;\n  withCursor?: boolean;\n}\n\n// https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n// Android does not have this value, and iOS has it but as read-only\nexport interface RealTouchEvent extends TouchEvent {\n  pageX?: number;\n  pageY?: number;\n}\n\ntype TSwipeAxis =\n  'x'\n  | 'y'\n  | undefined;\n\nexport const IOS_SCREEN_EDGE_THRESHOLD = 20;\nconst MOVED_THRESHOLD = 15;\nconst SWIPE_THRESHOLD = 50;\nconst RELEASE_WHEEL_ZOOM_DELAY = 150;\nconst RELEASE_WHEEL_DRAG_DELAY = 150;\n\nfunction getDistance(a: Touch, b?: Touch) {\n  if (!b) return 0;\n  return Math.hypot((b.pageX - a.pageX), (b.pageY - a.pageY));\n}\n\nfunction getTouchCenter(a: Touch, b: Touch) {\n  return {\n    x: (a.pageX + b.pageX) / 2,\n    y: (a.pageY + b.pageY) / 2,\n  };\n}\n\nlet lastClickTime = 0;\nconst lethargy = new Lethargy({\n  stability: 5,\n  sensitivity: 25,\n  tolerance: 0.6,\n  delay: 150,\n});\n\nexport function captureEvents(element: HTMLElement, options: CaptureOptions) {\n  let captureEvent: MouseEvent | RealTouchEvent | WheelEvent | undefined;\n  let hasMoved = false;\n  let hasSwiped = false;\n  let isZooming = false;\n  let initialDistance = 0;\n  let wheelZoom = options.initialZoom ?? 1;\n  let initialDragOffset = {\n    x: 0,\n    y: 0,\n  };\n  let isDragCanceled = {\n    x: false,\n    y: false,\n  };\n  const currentWindowSize = windowSize.get();\n  let initialTouchCenter = {\n    x: currentWindowSize.width / 2,\n    y: currentWindowSize.height / 2,\n  };\n  let initialSwipeAxis: TSwipeAxis | undefined;\n  const minZoom = options.minZoom ?? 1;\n  const maxZoom = options.maxZoom ?? 4;\n\n  function onCapture(e: MouseEvent | RealTouchEvent) {\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      if (!options.withNativeDrag && options.onDrag) {\n        e.preventDefault();\n      }\n\n      document.addEventListener('mousemove', onMove);\n      document.addEventListener('mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      // We need to always listen on `touchstart` target:\n      // https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n      const target = e.target as HTMLElement;\n      target.addEventListener('touchmove', onMove, { passive: true });\n      target.addEventListener('touchend', onRelease);\n      target.addEventListener('touchcancel', onRelease);\n\n      if ('touches' in e) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (e.touches.length === 2) {\n          initialDistance = getDistance(e.touches[0], e.touches[1]);\n          initialTouchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n        }\n      }\n    }\n\n    if (options.withCursor) {\n      document.body.classList.add('cursor-grabbing');\n    }\n\n    if (options.onCapture) {\n      options.onCapture(e);\n    }\n  }\n\n  function onRelease(e?: MouseEvent | TouchEvent) {\n    if (captureEvent) {\n      if (options.withCursor) {\n        document.body.classList.remove('cursor-grabbing');\n      }\n\n      document.removeEventListener('mouseup', onRelease);\n      document.removeEventListener('mousemove', onMove);\n      (captureEvent.target as HTMLElement).removeEventListener('touchcancel', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchend', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchmove', onMove);\n\n      if (IS_IOS && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = '';\n          });\n      }\n\n      if (e) {\n        if (hasMoved) {\n          if (options.onRelease) {\n            options.onRelease(e);\n          }\n        } else if (e.type === 'mouseup') {\n          if (options.onDoubleClick && Date.now() - lastClickTime < 300) {\n            options.onDoubleClick(e, {\n              centerX: captureEvent!.pageX!,\n              centerY: captureEvent!.pageY!,\n            });\n          } else if (options.onClick && (!('button' in e) || e.button === 0)) {\n            options.onClick(e);\n          }\n          lastClickTime = Date.now();\n        }\n      }\n    }\n\n    hasMoved = false;\n    hasSwiped = false;\n    isZooming = false;\n    initialDistance = 0;\n    wheelZoom = clamp(wheelZoom, minZoom, maxZoom);\n    initialSwipeAxis = undefined;\n    initialDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    isDragCanceled = {\n      x: false,\n      y: false,\n    };\n    const newWindowSize = windowSize.get();\n    initialTouchCenter = {\n      x: newWindowSize.width / 2,\n      y: newWindowSize.height / 2,\n    };\n    captureEvent = undefined;\n  }\n\n  function onMove(e: MouseEvent | RealTouchEvent) {\n    if (captureEvent) {\n      if (e.type === 'touchmove' && ('touches' in e)) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (options.onZoom && initialDistance > 0 && e.touches.length === 2) {\n          const endDistance = getDistance(e.touches[0], e.touches[1]);\n          const touchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n          const dragOffsetX = touchCenter.x - initialTouchCenter.x;\n          const dragOffsetY = touchCenter.y - initialTouchCenter.y;\n          const zoomFactor = endDistance / initialDistance;\n          options.onZoom(e, {\n            zoomFactor,\n            initialCenterX: initialTouchCenter.x,\n            initialCenterY: initialTouchCenter.y,\n            dragOffsetX,\n            dragOffsetY,\n            currentCenterX: touchCenter.x,\n            currentCenterY: touchCenter.y,\n          });\n          if (zoomFactor !== 1) hasMoved = true;\n        }\n      }\n\n      const dragOffsetX = e.pageX! - captureEvent.pageX!;\n      const dragOffsetY = e.pageY! - captureEvent.pageY!;\n\n      if (Math.abs(dragOffsetX) >= MOVED_THRESHOLD || Math.abs(dragOffsetY) >= MOVED_THRESHOLD) {\n        hasMoved = true;\n      }\n\n      let shouldPreventScroll = false;\n\n      if (options.onDrag) {\n        options.onDrag(e, captureEvent, {\n          dragOffsetX,\n          dragOffsetY,\n        });\n        shouldPreventScroll = true;\n      }\n\n      if (options.onSwipe && !hasSwiped) {\n        hasSwiped = onSwipe(e, dragOffsetX, dragOffsetY);\n        shouldPreventScroll = hasSwiped;\n      }\n\n      if (IS_IOS && shouldPreventScroll && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = 'hidden';\n          });\n      }\n    }\n  }\n\n  function onSwipe(e: MouseEvent | RealTouchEvent, dragOffsetX: number, dragOffsetY: number) {\n    // Avoid conflicts with swipe-to-back gestures\n    if (IS_IOS) {\n      const x = (e as RealTouchEvent).touches[0].pageX;\n      if (x <= IOS_SCREEN_EDGE_THRESHOLD || x >= windowSize.get().width - IOS_SCREEN_EDGE_THRESHOLD) {\n        return false;\n      }\n    }\n\n    const xAbs = Math.abs(dragOffsetX);\n    const yAbs = Math.abs(dragOffsetY);\n\n    if (dragOffsetX && dragOffsetY) {\n      const ratio = Math.max(xAbs, yAbs) / Math.min(xAbs, yAbs);\n      // Diagonal swipe\n      if (ratio < 2) {\n        return false;\n      }\n    }\n\n    let axis: TSwipeAxis | undefined;\n    if (xAbs >= SWIPE_THRESHOLD) {\n      axis = 'x';\n    } else if (yAbs >= SWIPE_THRESHOLD) {\n      axis = 'y';\n    }\n\n    if (!axis) {\n      return false;\n    }\n\n    if (!initialSwipeAxis) {\n      initialSwipeAxis = axis;\n    } else if (initialSwipeAxis !== axis) {\n      // Prevent horizontal swipe after vertical to prioritize scroll\n      return false;\n    }\n\n    return processSwipe(e, axis, dragOffsetX, dragOffsetY, options.onSwipe!);\n  }\n\n  const releaseWheelDrag = debounce(onRelease, RELEASE_WHEEL_DRAG_DELAY, false);\n  const releaseWheelZoom = debounce(onRelease, RELEASE_WHEEL_ZOOM_DELAY, false);\n\n  function onWheelCapture(e: WheelEvent) {\n    if (hasMoved) return;\n    onCapture(e);\n    hasMoved = true;\n    initialTouchCenter = { x: e.x, y: e.y };\n  }\n\n  function onWheelZoom(e: WheelEvent) {\n    if (!options.onZoom) return;\n    onWheelCapture(e);\n    const dragOffsetX = e.x - initialTouchCenter.x;\n    const dragOffsetY = e.y - initialTouchCenter.y;\n    const delta = clamp(e.deltaY, -25, 25);\n    wheelZoom -= delta * 0.01;\n    wheelZoom = clamp(wheelZoom, minZoom * 0.5, maxZoom * 3);\n    isZooming = true;\n    options.onZoom(e, {\n      zoom: round(wheelZoom, 2),\n      initialCenterX: initialTouchCenter.x,\n      initialCenterY: initialTouchCenter.y,\n      dragOffsetX,\n      dragOffsetY,\n      currentCenterX: e.x,\n      currentCenterY: e.y,\n    });\n    releaseWheelZoom(e);\n  }\n\n  function onWheelDrag(e: WheelEvent) {\n    if (!options.onDrag) return;\n    onWheelCapture(e);\n    // Ignore wheel inertia if drag is canceled in this direction\n    if (!isDragCanceled.x || Math.sign(initialDragOffset.x) === Math.sign(e.deltaX)) {\n      initialDragOffset.x -= e.deltaX;\n    }\n    if (!isDragCanceled.y || Math.sign(initialDragOffset.y) === Math.sign(e.deltaY)) {\n      initialDragOffset.y -= e.deltaY;\n    }\n    const { x, y } = initialDragOffset;\n    options.onDrag(e, captureEvent!, {\n      dragOffsetX: x,\n      dragOffsetY: y,\n    }, (dx, dy) => {\n      isDragCanceled = { x: dx, y: dy };\n    });\n    releaseWheelDrag(e);\n  }\n\n  function onWheel(e: WheelEvent) {\n    if (!options.onZoom && !options.onDrag) return;\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const { doubleTapZoom = 3 } = options;\n    if (options.onDoubleClick && Object.is(e.deltaX, -0) && Object.is(e.deltaY, -0) && e.ctrlKey) {\n      onWheelCapture(e);\n      wheelZoom = wheelZoom > 1 ? 1 : doubleTapZoom;\n      options.onDoubleClick(e, { centerX: e.pageX, centerY: e.pageY });\n      hasMoved = false;\n      return;\n    }\n    const metaKeyPressed = e.metaKey || e.ctrlKey || e.shiftKey;\n    if (metaKeyPressed) {\n      onWheelZoom(e);\n    }\n    if (!metaKeyPressed && !isZooming) {\n      // Check if this event produced by user scroll and not by inertia\n      const isUserEvent = lethargy.check(e);\n      if (wheelZoom !== 1 || isUserEvent) {\n        onWheelDrag(e);\n      }\n    }\n  }\n\n  element.addEventListener('wheel', onWheel);\n  element.addEventListener('mousedown', onCapture);\n  element.addEventListener('touchstart', onCapture, { passive: !options.isNotPassive });\n\n  return () => {\n    onRelease();\n    element.removeEventListener('wheel', onWheel);\n    element.removeEventListener('touchstart', onCapture);\n    element.removeEventListener('mousedown', onCapture);\n  };\n}\n\nfunction processSwipe(\n  e: Event,\n  currentSwipeAxis: TSwipeAxis,\n  dragOffsetX: number,\n  dragOffsetY: number,\n  onSwipe: (e: Event, direction: SwipeDirection) => boolean,\n) {\n  if (currentSwipeAxis === 'x') {\n    if (dragOffsetX < 0) {\n      return onSwipe(e, SwipeDirection.Left);\n    } else {\n      return onSwipe(e, SwipeDirection.Right);\n    }\n  } else if (currentSwipeAxis === 'y') {\n    if (dragOffsetY < 0) {\n      return onSwipe(e, SwipeDirection.Up);\n    } else {\n      return onSwipe(e, SwipeDirection.Down);\n    }\n  }\n\n  return false;\n}\n","/**\n * Lethargy help distinguish between scroll events initiated by the user, and those by inertial scrolling.\n * Lethargy does not have external dependencies.\n *\n * @param stability - Specifies the length of the rolling average.\n * In effect, the larger the value, the smoother the curve will be.\n * This attempts to prevent anomalies from firing 'real' events. Valid values are all positive integers,\n * but in most cases, you would need to stay between 5 and around 30.\n *\n * @param sensitivity - Specifies the minimum value for wheelDelta for it to register as a valid scroll event.\n * Because the tail of the curve have low wheelDelta values,\n * this will stop them from registering as valid scroll events.\n * The unofficial standard wheelDelta is 120, so valid values are positive integers below 120.\n *\n * @param tolerance - Prevent small fluctuations from affecting results.\n * Valid values are decimals from 0, but should ideally be between 0.05 and 0.3.\n *\n * Based on https://github.com/d4nyll/lethargy\n */\n\nexport type LethargyConfig = {\n  stability?: number;\n  sensitivity?: number;\n  tolerance?: number;\n  delay?: number;\n};\n\nexport class Lethargy {\n  stability: number;\n\n  sensitivity: number;\n\n  tolerance: number;\n\n  delay: number;\n\n  lastUpDeltas: Array<number>;\n\n  lastDownDeltas: Array<number>;\n\n  deltasTimestamp: Array<number>;\n\n  constructor({\n    stability = 8,\n    sensitivity = 100,\n    tolerance = 1.1,\n    delay = 150,\n  }: LethargyConfig = {}) {\n    this.stability = stability;\n    this.sensitivity = sensitivity;\n    this.tolerance = tolerance;\n    this.delay = delay;\n    this.lastUpDeltas = new Array(this.stability * 2).fill(0);\n    this.lastDownDeltas = new Array(this.stability * 2).fill(0);\n    this.deltasTimestamp = new Array(this.stability * 2).fill(0);\n  }\n\n  check(e: any) {\n    let lastDelta;\n    e = e.originalEvent || e;\n    if (e.wheelDelta !== undefined) {\n      lastDelta = e.wheelDelta;\n    } else if (e.deltaY !== undefined) {\n      lastDelta = e.deltaY * -40;\n    } else if (e.detail !== undefined || e.detail === 0) {\n      lastDelta = e.detail * -40;\n    }\n    this.deltasTimestamp.push(Date.now());\n    this.deltasTimestamp.shift();\n    if (lastDelta > 0) {\n      this.lastUpDeltas.push(lastDelta);\n      this.lastUpDeltas.shift();\n      return this.isInertia(1);\n    } else {\n      this.lastDownDeltas.push(lastDelta);\n      this.lastDownDeltas.shift();\n      return this.isInertia(-1);\n    }\n  }\n\n  isInertia(direction: number) {\n    const lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n    if (lastDeltas[0] === undefined) return direction;\n    if (\n      this.deltasTimestamp[this.stability * 2 - 2] + this.delay > Date.now()\n      && lastDeltas[0] === lastDeltas[this.stability * 2 - 1]\n    ) {\n      return false;\n    }\n    const lastDeltasOld = lastDeltas.slice(0, this.stability);\n    const lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n    const oldSum = lastDeltasOld.reduce((t, s) => t + s);\n    const newSum = lastDeltasNew.reduce((t, s) => t + s);\n    const oldAverage = oldSum / lastDeltasOld.length;\n    const newAverage = newSum / lastDeltasNew.length;\n    return Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance)\n      && this.sensitivity < Math.abs(newAverage);\n  }\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    requestMeasure(() => element.focus());\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"J2OUAM1NNJzVPwPvfhkE\",\"fadeIn\":\"M0CnDOPqsqgp07DpRE7u\",\"closing\":\"U1ngPxxXOIuHX2rXUTdq\",\"peer\":\"N26JMlalq5jDriKQ7nFD\",\"name\":\"M4TMTYSSXa3H49Go9t9g\",\"name_hasUnreadStory\":\"kUi0jmHQpokhzBJI5FJA\",\"nameHasUnreadStory\":\"kUi0jmHQpokhzBJI5FJA\",\"hidden\":\"c5X6suR_qxO1W64dH2j3\",\"contextMenu\":\"nAc8FkZyj9PHGgGm0BO7\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"M4TMTYSSXa3H49Go9t9g\",\"root\":\"laLpjZnhOwW8cdBN3mEv\",\"avatar\":\"ewhbkm9F8nGqLpj_toQg\",\"avatarHidden\":\"aPEbisewADPmseTVcQxO\",\"ghost\":\"bVo8M4JDvB9c6gUvnHTE\",\"ghostAnimateName\":\"DuJzmNpO8VBweCzETZQJ\",\"ghostRevealName\":\"ghy_xXQVvFUwJrNg9uhA\",\"ghostLast\":\"_mqUJoir6gIYUJWb0zFw\"};"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","peer","Avatar","key","Button","round","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","length","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","thumbClassNames","useMediaTransition","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","setTimeout","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","onHideTranscription","onPlay","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwn","isOwnMessage","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","AudioOrigin","Inline","Search","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","viewBox","rx","ry","stroke","renderVoice","peers","root","avatar","runDebounced","debounce","cb","_ref4","chatOrUserId","countryList","phoneCodes","phoneCodeList","user","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","chatInviteLink","selectChatFullInfo","inviteLink","description","selectUserFullInfo","bio","about","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","loadPeerStories","userId","usernames","phoneNumber","isSelf","chatUsernames","peerId","areNotificationsEnabled","setAreNotificationsEnabled","useEffectWithPrevDeps","prevPeerId","isTopicInfo","MAIN_THREAD_ID","activeUsernames","u","activeChatUsernames","link","getChatLink","handleNotificationChange","newAreNotificationsEnabled","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","username","nick","textToCopy","TME_LINK_PREFIX","href","stopEvent","ListItem","icon","multiline","narrow","isStatic","Switcher","label","checked","inactive","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","MAX_ASPECT_RATIO","FILE_EXT_REGEX","async","buildAttachment","filename","blob","options","blobUrl","URL","createObjectURL","type","mimeType","quick","shouldSendAsFile","SUPPORTED_IMAGE_CONTENT_TYPES","img","preloadImage","validateAspectRatio","shouldShrink","isGif","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","replace","SUPPORTED_VIDEO_CONTENT_TYPES","videoWidth","videoHeight","preloadVideo","err","createPosterForVideo","SUPPORTED_AUDIO_CONTENT_TYPES","coverUrl","url","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","toString","parseAudioMetadata","uniqueId","Date","now","random","prepareAttachmentsToSend","attachments","shouldSendCompressed","attach","shouldSendAsSpoiler","getAttachmentType","attachment","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","addEventListener","handlePaste","removeEventListener","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","substring","pastedFormattedText","parseMessageInput","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","innerHTML","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","name","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","reuseWorker","BLOB_PARAMS","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","Extra","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","handleDocumentSelect","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","Menu","isOpen","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","disabled","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","BotCommandTooltip","selectChatMessage","clickBotInlineButton","isKeyboardSingleUse","keyboardButtons","noCompact","row","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","replyingToId","selectReplyingToId","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","sender","selectEditingMessage","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","selectForwardedSender","hiddenUserName","selectSender","selectPeer","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","onClear","setReplyingToId","setEditingId","focusMessage","changeForwardRecipient","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","isShown","canAnimate","useAsyncRendering","clearEmbedded","captureEscKeyListener","handleMessageClick","noForumTopicPanel","handleClearClick","handleChangeRecipientClick","isContextMenuOpen","contextMenuPosition","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","querySelector","transformOriginX","transformOriginY","menuStyle","useMenuPosition","leftIcon","customText","strippedMessage","strippedText","onContextMenu","EmbeddedMessage","hasContextMenu","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","selectTheme","webPagePreview","getHtml","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","getLink","useDerivedSignal","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","DeleteMessageModal","MainButtonState","_ref5","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","chatBotFullInfo","chatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUserId","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraftText","selectRequestedDraftText","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","availableReactions","topReactions","isOnActiveTab","isBlurred","editingMessage","draft","selectDraft","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","shouldSchedule","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","groupChatMembers","members","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","chatBotCommands","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","attachmentSettings","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","stealthMode","stories","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openChat","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePrevious","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","isSentStoryReactionHeart","emoticon","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","limit","shouldForce","isSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","isBotCommandTooltipOpen","close","closeBotCommandTooltip","filteredBotCommands","botTooltipCommands","setFilteredBotCommands","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","useBotCommandTooltip","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","isEditing","updateDraft","prevState","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","EDITABLE_INPUT_CSS_SELECTOR","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","useDraft","resetComposer","handleEditComplete","handleEditCancel","useEditing","editMessage","setEditingDraft","setShouldForceShowEditing","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","action","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerPosition","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","shouldGroupMessages","localOnly","handleSendAttachments","handleSend","currentAttachments","record","handleClickBotMenu","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","shouldPreserveInput","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","renderedEditedMessage","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","onSend","withBotCommands","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","onShowMore","isForMessage","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","isSchedule","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","BotMenuButton","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","withEffectOnly","allowDisabledClick","noFastClick","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isMessageDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","onCheck","isProtected","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","observeIntersectionForPlaying","mediaBlobUrl","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","getMessageIsSpoiler","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","handleMouseDown","useFastClick","getPeerColorKey","getPictogramDimensions","srcUrl","MediaSpoiler","isVisible","renderPictogram","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","DotAnimation","TypingStatus","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","MessageOutgoingStatus","getMessageVideo","hasSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","withAnimation","rect","currentTarget","clientY","shiftX","shiftY","Keys","Transition","activeKey","DEFAULT_TEXT","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedIds","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","shouldMinimize","lockedSelectedIds","unlockedSelectedIds","unlockedIds","lockedIdsSet","sortedItemIds","sort","a","b","aIsLocked","bIsLocked","handleItemClick","newSelectedIds","splice","handleFilterChange","viewportIds","getMore","useInfiniteScroll","PickerSelectedItem","isMinimized","clickArg","canClose","InputText","InfiniteScroll","renderCheckbox","PrivateChatInfo","GroupChatInfo","Loading","isStandalone","iconElement","titleText","userStatus","selectUserStatus","statusIcon","emojiStatusSize","noEmojiStatus","adminMember","onEmojiStatusClick","customTitle","isOwner","withEmojiStatus","isUserOnline","getUserStatus","RippleEffect","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","userOrChat","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","connectionState","mediaViewer","currentTopicId","userFullInfo","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","openPremiumModal","photos","prevMediaId","prevAvatarOwnerId","mediaIdRef","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","_","renderPhotoTabs","renderPhoto","canCopyTitle","ProfilePhoto","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","blankUrl","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","selected","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","typingUser","typingUserName","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","renderMessageText","highlight","emojiSize","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","renderTextWithEntities","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","isLottie","particleSize","onEnded","stickerHash","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","generateRandomDropPath","path","withSharedAnimation","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","withEffects","selectPerformanceSettingsValue","genericEffects","effectSize","shouldPause","shouldLoop","stopActiveReaction","r","centerIconId","centerIcon","customEmoji","useCustomEmoji","assignedEffectId","aroundAnimation","assignedId","effectId","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","play","noLoop","effect","CustomEmojiEffect","ChatFolderModal","MuteChatModal","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","renderContent","archiveSettings","onDragEnter","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","contextActions","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","handleDragEnter","minimized","buttonClassName","withPortalForMenu","info","Badge","avatarWrapper","chatsPreview","bySelector","Map","addCallback","selector","setter","senderId","replyToMessageId","isOutgoing","lastMessage","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","folderId","orderDiff","animationType","offsetTop","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","renderSubtitle","useChatListEntry","getIsForumPanelClosed","state","getter","createSignal","clientsCount","set","useEffectOnce","delete","useSelectorSignal","selectIsForumPanelClosed","forceOnHeavyAnimation","handleDelete","handleMute","handleChatFolderChange","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","withStoryGap","StoryViewerOrigin","ChatList","ChatBadge","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","fluid","pill","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","useResizeObserver","entry","borderBoxSize","blockSize","contentRect","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","hash","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","containerRef","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","resolvedFolderId","ALL_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","code","digit","isArchiveInList","shift","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","container","scrollHeight","offsetHeight","deltaY","passive","useTopOverscroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onDragLeave","UnconfirmedSession","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","Chat","teactOrderKey","getOrderKey","renderChats","EmptyFolder","canManageTopics","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastMessageId","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","destructive","useTopicContextActions","confirmIsDestructive","confirmLabel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","useEnsureMessage","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","withTranslucentThumbs","renderActionMessageText","senderName","getMessageSenderName","replyToStoryId","messageSummary","inChatList","renderSummary","opacity","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","forceUpdate","useForceUpdate","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","isChatGroup","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetch","then","videoTs","videoSizes","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","senderChat","premiumGiftSticker","premiumGifts","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","requestConfetti","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isGift","isSuggestedAvatar","shouldShowConfettiRef","targetUsers","isContextMenuShown","preventMessageInputBlur","handlePremiumGiftClick","toUserId","monthsAmount","months","nonInteractive","ActionMessageSuggestedAvatar","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","onTrigger","DropdownMenu","trigger","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","toggleAttachBot","icons","openMenu","closeMenu","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","AttachBotIcon","shortName","withPortal","CustomSend","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","clearTimeout","DropTarget","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","customColor","useDynamicColorListener","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","stickerSetInfo","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","addCustomEmojiInputRenderCallback","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","TextFormatter","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","m","p","getKeyFromEvent","linkUrlConfirmClassName","inputMode","dataTransferItems","traverseFileTreePromise","isFile","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","MAX_NESTING_PARENTS","parentNode","iterations","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","count","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isPreview","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","getMessagePhoto","getMessageWebPagePhoto","withBlurredBackground","useBlurredMediaThumbRef","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","MIN_MEDIA_HEIGHT","dimensionsStyle","REACTION_SIZE","cn","createClassNameBuilder","noAppearAnimation","chosen","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","enabledReactions","currentReactions","maxUniqueReactions","reactions","isInactive","canSendReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","ReactionSelectorReaction","getReactionUniqueKey","canAutoPlay","getMessageWebPageVideo","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","isPlayerReady","markPlayerReady","hasThumb","previewMediaHash","isPreviewPreloaded","canLoadPreview","isInline","isUnsupported","useUnsupportedMedia","playButtonClassNames","setPlayProgress","handleTimeUpdate","isFinite","isWebPageVideo","calculateVideoDimensions","onTimeUpdate","onCancelMediaTransfer","openTelegramLink","handleMediaClick","handleQuickButtonClick","useEnsureStory","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","Photo","Video","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","drawImage","getImageData","getAppendixColorFromImage","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isWebPagePhoto","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","forcedUri","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","FOCUS_MARGIN","isResizingContainer","isRelocatedRef","isRelocated","messagesContainer","isToBottom","animateScroll","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","dependencies","delay","timeoutRef","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","useHorizontalScroll","StoryRibbonButton","isRibbonShown","isArchivedRibbonShown","canShow","PREVIEW_AVATAR_COUNT","reverse","preloadPeerIds","animateClosing","animateOpening","withStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","index","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","ghost","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","preloadedStories","canPreload","aroundStoryId","byPeerId","mediaHashes","Progressive","head","preload","autoplay","preloadProgressive","preloadHashes","peerStories","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","altVideo","getPreloadMediaHashes","mediaArea","customEmojiSize","setCustomEmojiSize","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","STORY_ASPECT_RATIO","MOBILE_MEDIA_BOTTOM_MARGIN","prepareStyle","rotation","coordinates","openMapModal","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","adaptedHeight","mediaAreas","geoPoint","geo","handleMediaAreaClick","MediaAreaSuggestedReaction","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","resolver","deps","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","trackType","handlers","onInit","shouldPlay","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","lastCallback","onBeforeUnload","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","toggleChatPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","getCanDeleteChat","isInFolder","resolverOrDependency","isAsync","resolverRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","IGNORE_TAGS","createCallbackManager","hotkeys","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","part","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaHash","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getTime","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","initial","signalRef","isFirstRun","dependency","subscribe","cleanupEffect","savedCallback","ConnectorClass","channel","_len","_key","postMessage","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","createConnector","worker","connector","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","stopCurrentAudio","track","Audio","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","IOS_SCREEN_EDGE_THRESHOLD","MOVED_THRESHOLD","SWIPE_THRESHOLD","RELEASE_WHEEL_ZOOM_DELAY","RELEASE_WHEEL_DRAG_DELAY","getDistance","hypot","pageX","pageY","getTouchCenter","lastClickTime","lethargy","stability","sensitivity","tolerance","lastUpDeltas","lastDownDeltas","deltasTimestamp","check","lastDelta","originalEvent","wheelDelta","detail","isInertia","lastDeltas","lastDeltasOld","lastDeltasNew","oldSum","newSum","oldAverage","newAverage","captureEvent","hasMoved","hasSwiped","isZooming","initialDistance","wheelZoom","initialZoom","initialDragOffset","isDragCanceled","currentWindowSize","initialSwipeAxis","initialTouchCenter","minZoom","maxZoom","excludedClosestSelector","withNativeDrag","onMove","touches","withCursor","scrollable","overflow","onDoubleClick","centerX","centerY","clamp","newWindowSize","onZoom","endDistance","touchCenter","dragOffsetX","dragOffsetY","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","shouldPreventScroll","xAbs","yAbs","axis","currentSwipeAxis","processSwipe","releaseWheelDrag","releaseWheelZoom","onWheelCapture","onWheel","doubleTapZoom","is","metaKeyPressed","delta","zoom","onWheelZoom","isUserEvent","sign","dx","onWheelDrag","isNotPassive","hex2rgb","param","parseInt","rgb2hex","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","q","getAverageColor","defaultRGB","rgb","image","naturalHeight","naturalWidth","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","force","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","collapse","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","averageColor","fillColor","res","ctx2D","fillRect","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","globalCompositeOperation","isElementInViewport","windowHeight","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","PI","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","lastIndex","Bold","Italic","INS","Underline","S","Strike","STRIKE","Code","PRE","Pre","BLOCKQUOTE","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}