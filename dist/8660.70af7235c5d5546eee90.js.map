{"version":3,"file":"8660.70af7235c5d5546eee90.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useBotCommandTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.async.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/Icon.tsx","webpack://telegram-t/./src/components/common/InviteLink.module.scss?000d","webpack://telegram-t/./src/components/common/InviteLink.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/hooks/useSelectorSignal.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelector.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/parseMessageInput.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {renderingFetchedParticipants?.map((peer) => (\n          <Avatar\n            key={peer.id}\n            peer={peer}\n          />\n        ))}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tx2CpCmpZZrHnCMUksg2\",\"character-container\":\"LTqDt1MFKRDBjNZxKii4\",\"characterContainer\":\"LTqDt1MFKRDBjNZxKii4\",\"character\":\"o1u1ctUWtWa2FWlC_BuT\",\"character-old\":\"tzggk5evL9EPqVAtvWEu\",\"characterOld\":\"tzggk5evL9EPqVAtvWEu\",\"character-disappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"characterDisappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"character-new\":\"q6poDASGW35qQiXsD99c\",\"characterNew\":\"q6poDASGW35qQiXsD99c\",\"character-appear\":\"lsHAt1tY7_VcodncBZKh\",\"characterAppear\":\"lsHAt1tY7_VcodncBZKh\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oGmd77AsTbJeJk8CV6gl\",\"preview\":\"gp5OwinzPeHwkesmaEIR\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransition(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransition(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  onHideTranscription,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio } = getActions();\n\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(\n    theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn, !noAvatars, isMobile,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon icon-play\" />\n        <i className=\"icon icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ahi3up0oMwlFJTE6hkxG\",\"size-micro\":\"DOhAE8mniLY2g2i7rkfz\",\"sizeMicro\":\"DOhAE8mniLY2g2i7rkfz\",\"size-mini\":\"gF82cRdQRxqmTN8fLb9i\",\"sizeMini\":\"gF82cRdQRxqmTN8fLb9i\",\"size-tiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"sizeTiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"size-small\":\"iaKZOfQnH3hROD8QK_fq\",\"sizeSmall\":\"iaKZOfQnH3hROD8QK_fq\",\"size-small-mobile\":\"YP90v9JGup97HOcD2duf\",\"sizeSmallMobile\":\"YP90v9JGup97HOcD2duf\",\"size-medium\":\"TmYXjEqVbt0gwaoWlRHv\",\"sizeMedium\":\"TmYXjEqVbt0gwaoWlRHv\",\"size-large\":\"YIuShtdEPpbCXrGgmeFv\",\"sizeLarge\":\"YIuShtdEPpbCXrGgmeFv\",\"size-jumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"sizeJumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"avatar\":\"PTpUqAuoZL9Uou6MqJXX\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\nimport renderText from './helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n    description?: string;\n    chatInviteLink?: string;\n    topicLink?: string;\n  };\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    if (!userId) return;\n    loadFullUser({ userId });\n  }, [userId]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? threadId : undefined;\n    const chatInviteLink = chat ? selectChatFullInfo(global, chat.id)?.inviteLink : undefined;\n    let description = user ? selectUserFullInfo(global, user.id)?.bio : undefined;\n    if (!description && chat) {\n      description = selectChatFullInfo(global, chat.id)?.about;\n    }\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n    };\n  },\n)(ChatExtra));\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !attach.voice ? true : undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverUrl = cover ? `data:${cover.format};base64,${cover.data.toString('base64')}` : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseMessageInput';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n}) {\n  const { openLimitReachedModal, showAllowedMessageTypesNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'image' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'image' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n        setShouldSuggestCompression(undefined);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    handleSetAttachments([\n      ...attachments,\n      ...await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      ))),\n    ]);\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    handleSetAttachments(await Promise.all(files.map((file) => buildAttachment(file.name, file))));\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n\nfunction getAttachmentType(attachment: ApiAttachment) {\n  if (attachment.shouldSendAsFile) return 'file';\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'image';\n  }\n\n  if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'video';\n  }\n\n  if (SUPPORTED_AUDIO_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'audio';\n  }\n\n  return 'file';\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useBotCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || !commands) {\n      setFilteredBotCommands(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean(filteredBotCommands?.length && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n  };\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseMessageInput from '../../../../util/parseMessageInput';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseMessageInput(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      const shouldSetAttachments = files?.length && !editedMessage && !isWordDocument;\n\n      if (shouldSetAttachments) {\n        const newAttachments = await Promise.all(files!.map((file) => {\n          return buildAttachment(file.name, file);\n        }));\n        setAttachments((attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji, onCustomEmojiStripped,\n    setNextText,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE, EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport {\n  requestMeasure, requestNextMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseMessageInput from '../../../../util/parseMessageInput';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/useBeforeUnload';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: number;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: number } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      saveDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        draft: parseMessageInput(html),\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft));\n\n    const customEmojiIds = draft.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n\n    if (!IS_TOUCH_ENV) {\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    }\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType } from '../../../../global/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseMessageInput from '../../../../util/parseMessageInput';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/useBeforeUnload';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  openDeleteModal: () => void,\n  chatId: string,\n  threadId: number,\n  type: MessageListType,\n  draft?: ApiFormattedText,\n  editingDraft?: ApiFormattedText,\n  replyingToId?: number,\n): [VoidFunction, VoidFunction, boolean] => {\n  const { editMessage, setEditingDraft, toggleMessageWebPage } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseMessageInput(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseMessageInput(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseMessageInput(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteModal();\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseMessageInput(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/i;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_MAC_OS, IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_IMAGE_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  useEffect(() => {\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code === 'KeyU') {\n        e.preventDefault();\n        handleQuickSelect();\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      <ResponsiveHoverButton\n        id=\"attach-menu-button\"\n        className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n        round\n        color=\"translucent\"\n        onActivate={handleToggleAttachMenu}\n        ariaLabel=\"Add an attachment\"\n        ariaControls=\"attach-menu-controls\"\n        hasPopup\n      >\n        <i className=\"icon icon-attach\" />\n      </ResponsiveHoverButton>\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideoHotkey'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {(canSendDocuments || canSendAudios)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {canAttachMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandTooltip = useModuleLoader(Bundles.Extra, 'BotCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandTooltip ? <BotCommandTooltip {...props} /> : undefined;\n};\n\nexport default BotCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row) => (\n          <div className=\"row\">\n            {row.map((button) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ messageId: message.id, button })}\n              >\n                {button.text}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{text}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectReplyingToId,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport EmbeddedMessage from '../../common/EmbeddedMessage';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyingToId?: number;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n};\n\nconst FORWARD_RENDERING_DELAY = 300;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyingToId,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  onClear,\n}) => {\n  const {\n    setReplyingToId,\n    setEditingId,\n    focusMessage,\n    changeForwardRecipient,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n  const isShown = Boolean(\n    ((replyingToId || editingId) && message)\n    || (sender && forwardedMessagesCount),\n  );\n  const canAnimate = useAsyncRendering(\n    [forwardedMessagesCount],\n    forwardedMessagesCount ? FORWARD_RENDERING_DELAY : undefined,\n  );\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransition(canAnimate && isShown, undefined, !shouldAnimate, undefined, !shouldAnimate);\n\n  const clearEmbedded = useLastCallback(() => {\n    if (replyingToId && !shouldForceShowEditing) {\n      setReplyingToId({ messageId: undefined });\n    } else if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const handleMessageClick = useLastCallback((): void => {\n    if (isForwarding) return;\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n  });\n\n  const handleChangeRecipientClick = useLastCallback(() => {\n    changeForwardRecipient();\n  });\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!shouldRender) handleContextMenuClose();\n  }, [handleContextMenuClose, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n\n  const leftIcon = useMemo(() => {\n    if (replyingToId && !shouldForceShowEditing) {\n      return 'icon-reply';\n    }\n    if (editingId) {\n      return 'icon-edit';\n    }\n    if (isForwarding) {\n      return 'icon-forward';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, replyingToId, shouldForceShowEditing]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? lang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu} onClick={handleContextMenu}>\n      <div className=\"ComposerEmbeddedMessage_inner\">\n        <div className=\"embedded-left-icon\">\n          <i className={buildClassName('icon', leftIcon)} />\n        </div>\n        <EmbeddedMessage\n          className=\"inside-input\"\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={editingId ? lang('EditMessage') : noAuthors ? lang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          hasContextMenu={isForwarding && !isContextMenuDisabled}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {isForwarding && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            transformOriginX={transformOriginX}\n            transformOriginY={transformOriginY}\n            positionX={positionX}\n            positionY={positionY}\n            style={menuStyle}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            <MenuItem\n              icon={!noAuthors ? 'message-succeeded' : undefined}\n              customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: false,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n            </MenuItem>\n            <MenuItem\n              icon={noAuthors ? 'message-succeeded' : undefined}\n              customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: true,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n            </MenuItem>\n            {forwardsHaveCaptions && (\n              <>\n                <MenuSeparator />\n                <MenuItem\n                  icon={!noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: false,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                </MenuItem>\n                <MenuItem\n                  icon={noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: true,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                </MenuItem>\n              </>\n            )}\n            <MenuSeparator />\n            <MenuItem icon=\"replace\" onClick={handleChangeRecipientClick}>\n              {lang('ChangeRecipient')}\n            </MenuItem>\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { shouldForceShowEditing }): StateProps => {\n    const { chatId, threadId, type: messageListType } = selectCurrentMessageList(global) || {};\n    if (!chatId || !threadId || !messageListType) {\n      return {};\n    }\n\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n    } = selectTabState(global);\n\n    const replyingToId = selectReplyingToId(global, chatId, threadId);\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global);\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    let message: ApiMessage | undefined;\n    if (replyingToId && !shouldForceShowEditing) {\n      message = selectChatMessage(global, chatId, replyingToId);\n    } else if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    }\n\n    let sender: ApiPeer | undefined;\n    if (replyingToId && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && !forwardInfo?.hiddenUserName) {\n        sender = selectSender(global, message);\n      }\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    }\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    return {\n      replyingToId,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseMessageInput from '../../../util/parseMessageInput';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: number;\n  getHtml: Signal<string>;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseMessageInput(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransition(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\">\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage message={messageStub} inPreview theme={theme} />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './DeleteMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst DeleteMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DeleteMessageModal = useModuleLoader(Bundles.Extra, 'DeleteMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DeleteMessageModal ? <DeleteMessageModal {...props} /> : undefined;\n};\n\nexport default DeleteMessageModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiChatMember,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiUser,\n  ApiVideo,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList,\n  MessageListType, TabState,\n} from '../../global/types';\nimport type { IAnchorPosition, InlineBotSettings, ISettings } from '../../types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  ULU_APP as ULU_APP_CONSTANTS,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isMainThread,\n  isUserId,\n  ULU_APP as ULU_APP_UTILS,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectPeerStory,\n  selectReplyingToId,\n  selectRequestedDraftFiles,\n  selectRequestedDraftText,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { processMessageInputForCustomEmoji } from '../../util/customEmojiManager';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dateFormat';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseMessageInput from '../../util/parseMessageInput';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { escapeHtml } from '../middle/composer/helpers/cleanHtml';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useInterval from '../../hooks/useInterval';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useSignal from '../../hooks/useSignal';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useBotCommandTooltip from '../middle/composer/hooks/useBotCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotCommandTooltip from '../middle/composer/BotCommandTooltip.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport ReactionSelector from '../middle/message/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport DeleteMessageModal from './DeleteMessageModal.async';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: number;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  onDropHide?: NoneToVoidFunction;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    draft?: ApiDraft;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    replyingToId?: number;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    shouldSchedule?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    groupChatMembers?: ApiChatMember[];\n    currentUserId?: string;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    chatBotCommands?: ApiBotCommand[];\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraftText?: string;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  shouldSchedule,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  groupChatMembers,\n  topInlineBotIds,\n  currentUserId,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  chatBotCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  replyingToId,\n  requestedDraftText,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openChat,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n  } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePrevious(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    if (chatId && chat && !sendAsPeerIds && isReady && isChatSuperGroup(chat)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, isChatWithBot, isInStoryViewer),\n    [chat, isChatWithBot, isInStoryViewer],\n  );\n\n  const isComposerBlocked = !canSendPlainText && !editingMessage;\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const {\n    isOpen: isBotCommandTooltipOpen,\n    close: closeBotCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n  } = useBotCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length)),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    openDeleteModal,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n    replyingToId,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (shouldSchedule) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, shouldSchedule,\n  ]);\n  const canShowCustomSendMenu = !shouldSchedule;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuPosition: storyReactionPickerPosition,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerPosition) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerPosition,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerPosition]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseMessageInput(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    sendMessage({\n      messageList: currentMessageList,\n      text,\n      entities,\n      scheduledAt,\n      isSilent,\n      shouldUpdateStickerSetOrder,\n      attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      shouldGroupMessages: sendGrouped,\n    });\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, localOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const shouldOpenRepliesChat = (\n      replyingToId\n      && ULU_APP_CONSTANTS.SHOULD_OPEN_REPLIES_CHAT_ON_REPLY\n      && ULU_APP_UTILS.doesChatSupportThreads(chat)\n    );\n    const repliesChatToOpen = {\n      id: chatId,\n      threadId: isMainThread(threadId) ? replyingToId : threadId,\n    };\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform } },\n        )];\n      }\n    }\n\n    const { text, entities } = parseMessageInput(getHtml());\n\n    if (currentAttachments.length) {\n      if (shouldOpenRepliesChat) openChat(repliesChatToOpen);\n      sendAttachments({\n        attachments: currentAttachments,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, localOnly: true });\n    if (shouldOpenRepliesChat) openChat(repliesChatToOpen);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    callAttachBot({\n      chatId, url: botMenuButton.url, threadId,\n    });\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraftText) {\n      setHtml(escapeHtml(requestedDraftText));\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraftText, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (shouldSchedule || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, localOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, localOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (shouldSchedule) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (shouldSchedule) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openChat({\n      id: chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isDeleteModalOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isBotCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransition(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList!);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const prevEditedMessage = usePrevious(editingMessage, true);\n  const renderedEditedMessage = editingMessage || prevEditedMessage;\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseMessageInput(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({ sendCompressed, sendGrouped }, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilentAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    sendSilent({ sendCompressed, sendGrouped });\n  });\n\n  const onSend = mainButtonState === MainButtonState.Edit\n    ? handleEditComplete\n    : mainButtonState === MainButtonState.Schedule ? handleSendScheduled\n      : handleSend;\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n        />\n      )}\n      {shouldRenderReactionSelector && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={shouldSchedule}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachments}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      {renderedEditedMessage && (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          message={renderedEditedMessage}\n        />\n      )}\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <BotCommandTooltip\n        isOpen={isBotCommandTooltipOpen}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        getHtml={getHtml}\n        onClick={handleBotCommandSelect}\n        onClose={closeBotCommandTooltip}\n      />\n      <div className={buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks')}>\n        <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n          <defs>\n            <filter\n              x=\"-50%\"\n              y=\"-14.7%\"\n              width=\"200%\"\n              height=\"141.2%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"composerAppendix\"\n            >\n              <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n              <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n              <feColorMatrix\n                values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                in=\"shadowBlurOuter1\"\n              />\n            </filter>\n          </defs>\n          <g fill=\"none\" fill-rule=\"evenodd\">\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n          </g>\n        </svg>\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n            />\n          </>\n        )}\n        <div className=\"message-input-wrapper\">\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {(!isComposerBlocked || canSendGifs || canSendStickers) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang('Message'))\n                  : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          <AttachMenu\n            chatId={chatId}\n            threadId={threadId}\n            isButtonVisible={!activeVoiceRecording && !editingMessage}\n            canAttachMedia={canAttachMedia}\n            canAttachPolls={canAttachPolls}\n            canSendPhotos={canSendPhotos}\n            canSendVideos={canSendVideos}\n            canSendDocuments={canSendDocuments}\n            canSendAudios={canSendAudios}\n            onFileSelect={handleFileSelect}\n            onPollCreate={openPollModal}\n            isScheduled={shouldSchedule}\n            attachBots={isInMessageList ? attachBots : undefined}\n            peerType={attachMenuPeerType}\n            shouldCollectDebugLogs={shouldCollectDebugLogs}\n            theme={theme}\n            onMenuOpen={onAttachMenuOpen}\n            onMenuClose={onAttachMenuClose}\n          />\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={'documentId' in sentStoryReaction ? sentStoryReaction.documentId : sentStoryReaction.emoticon}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList}\n          canScheduleUntilOnline={canScheduleUntilOnline}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!shouldSchedule ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraftText = selectRequestedDraftText(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const replyingToId = selectReplyingToId(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n\n    return {\n      availableReactions: type === 'story' ? global.availableReactions : undefined,\n      topReactions: type === 'story' ? global.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      replyingToId,\n      draft: selectDraft(global, chatId, threadId),\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      shouldSchedule: messageListType === 'scheduled',\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      groupChatMembers: chatFullInfo?.members,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      chatBotCommands: chatFullInfo?.botCommands,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraftText,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n    };\n  },\n)(Composer));\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={isPrivateChat ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../config';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleDownload = useLastCallback(() => {\n    downloadMessageMedia({ message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport type {\n  ApiMessage, ApiPeer,\n} from '../../api/types';\nimport type { ChatTranslatedMessages } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getPeerColorKey,\n  getSenderTitle,\n  isActionMessage,\n  isMessageTranslatable,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getPictogramDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { useFastClick } from '../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useThumbnail from '../../hooks/useThumbnail';\nimport useMessageTranslation from '../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../middle/ActionMessage';\nimport Icon from './Icon';\nimport MediaSpoiler from './MediaSpoiler';\nimport MessageSummary from './MessageSummary';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  hasContextMenu?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  sender,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  noUserColors,\n  hasContextMenu,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const mediaBlobUrl = useMedia(message && getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = useThumbnail(message);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender) : message?.forwardInfo?.hiddenUserName;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender?.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        sender && !noUserColors && `color-${getPeerColorKey(sender)}`,\n      )}\n      onClick={message && handleClick}\n      onMouseDown={message && handleMouseDown}\n    >\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      <div className=\"message-text\">\n        <p dir=\"auto\">\n          {!message ? (\n            customText || NBSP\n          ) : isActionMessage(message) ? (\n            <ActionMessage\n              message={message}\n              isEmbedded\n              observeIntersectionForLoading={observeIntersectionForLoading}\n              observeIntersectionForPlaying={observeIntersectionForPlaying}\n            />\n          ) : (\n            <MessageSummary\n              lang={lang}\n              message={message}\n              noEmoji={Boolean(mediaThumbnail)}\n              translatedText={translatedText}\n              observeIntersectionForLoading={observeIntersectionForLoading}\n              observeIntersectionForPlaying={observeIntersectionForPlaying}\n            />\n          )}\n        </p>\n        <div className=\"message-title\" dir=\"auto\">\n          {renderText(senderTitle || title || NBSP)}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n      {hasContextMenu && <Icon name=\"more\" className=\"embedded-more\" />}\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedMessage;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useLang';\nimport { MediaViewerOrigin, type StoryViewerOrigin } from '../../types';\n\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className?: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  onClick?: VoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  onClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: chat.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {messagesCount ? lang('messages', messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <Avatar\n          key={chat.id}\n          size={avatarSize}\n          peer={chat}\n          withStory={withStory}\n          storyViewerOrigin={storyViewerOrigin}\n          storyViewerMode=\"single-peer\"\n          onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n        />\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : <FullNameTitle peer={chat} />}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n    };\n  },\n)(GroupChatInfo));\n","import React from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  name: IconName;\n  className?: string;\n  style?: string;\n};\n\nconst Icon = ({\n  name,\n  className,\n  style,\n}: OwnProps) => {\n  return (\n    <i\n      className={buildClassName(`icon icon-${name}`, className)}\n      style={style}\n      aria-hidden\n    />\n  );\n};\n\nexport default Icon;\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"B0vKZtyx_PUcanptgC5I\",\"input\":\"ODZGlpe7i3BMlnIuPGUg\",\"moreMenu\":\"hDpRcaj2QNUxsuLouJu_\",\"title\":\"dB1NL4LBBWlUHShfCUpw\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './InviteLink.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  inviteLink: string;\n  isDisabled?: boolean;\n  className?: string;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  inviteLink,\n  isDisabled,\n  className,\n  onRevoke,\n}) => {\n  const lang = useLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const copyLink = useLastCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  });\n\n  const handleCopyPrimaryClicked = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink(inviteLink);\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: inviteLink });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={inviteLink}\n          readOnly\n          onClick={handleCopyPrimaryClicked}\n        />\n        <DropdownMenu\n          className={styles.moreMenu}\n          trigger={PrimaryLinkMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyPrimaryClicked} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n          {onRevoke && (\n            <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n          )}\n        </DropdownMenu>\n      </div>\n      <Button\n        size=\"smaller\"\n        disabled={isDisabled}\n        onClick={handleShare}\n      >\n        {lang('FolderLinkScreen.LinkActionShare')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\n\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MbgQHglBDZLEAHDebnxc\",\"mask-animation\":\"zFmCa6knHOC8UhmcYHq8\",\"maskAnimation\":\"zFmCa6knHOC8UhmcYHq8\",\"circle-cut\":\"oeh0t6JqYOZTcblRUc6a\",\"circleCut\":\"oeh0t6JqYOZTcblRUc6a\",\"dots\":\"leAfUrALDfdpl4i8VEmv\",\"canvas\":\"oQmroREXWSylQXgjAdIB\",\"opacity-breath\":\"FKjJw0kaOB4ibkNp2I6S\",\"opacityBreath\":\"FKjJw0kaOB4ibkNp2I6S\",\"-7s\":\"UYRulRheGjTql4xAbURj\",\"7S\":\"UYRulRheGjTql4xAbURj\",\"-14s\":\"luaiQWxNoz8gYcb2XqSG\",\"14S\":\"luaiQWxNoz8gYcb2XqSG\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon icon-message-failed\" />\n          </div>\n        ) : <i className={`icon icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Checkbox from '../ui/Checkbox';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  lockedIds?: string[];\n  forceShowSelf?: boolean;\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedIds,\n  forceShowSelf,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const [lockedSelectedIds, unlockedSelectedIds] = useMemo(() => {\n    if (!lockedIds?.length) return [MEMO_EMPTY_ARRAY, selectedIds];\n    const unlockedIds = selectedIds.filter((id) => !lockedIds.includes(id));\n    return [lockedIds, unlockedIds];\n  }, [selectedIds, lockedIds]);\n\n  const lockedIdsSet = useMemo(() => new Set(lockedIds), [lockedIds]);\n\n  const sortedItemIds = useMemo(() => {\n    return itemIds.sort((a, b) => {\n      const aIsLocked = lockedIdsSet.has(a);\n      const bIsLocked = lockedIdsSet.has(b);\n      if (aIsLocked && !bIsLocked) {\n        return -1;\n      }\n      if (!aIsLocked && bIsLocked) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [itemIds, lockedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedIdsSet.has(id)) {\n      onDisabledClick?.(id);\n      return;\n    }\n\n    const newSelectedIds = selectedIds.slice();\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange?.(newSelectedIds);\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + lockedSelectedIds.length < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => {\n            const renderCheckbox = () => {\n              return (\n                <Checkbox\n                  label=\"\"\n                  disabled={lockedIdsSet.has(id)}\n                  checked={selectedIds.includes(id)}\n                  round={isRoundCheckbox}\n                />\n              );\n            };\n            return (\n              <ListItem\n                key={id}\n                className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n                disabled={lockedIdsSet.has(id)}\n                allowDisabledClick={Boolean(onDisabledClick)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleItemClick(id)}\n                ripple\n              >\n                {!isRoundCheckbox ? renderCheckbox() : undefined}\n                {isUserId(id) ? (\n                  <PrivateChatInfo forceShowSelf={forceShowSelf} userId={id} />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n                {isRoundCheckbox ? renderCheckbox() : undefined}\n              </ListItem>\n            );\n          })}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../global/helpers';\nimport { selectChat, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  peerId?: string;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  forceShowSelf?: boolean;\n  clickArg?: any;\n  className?: string;\n  onClick: (arg: any) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  className,\n  isSavedMessages,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (user || chat) {\n    iconElement = (\n      <Avatar\n        peer={user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = !chat || (user && !isSavedMessages)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, isSavedMessages);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qhFxTh5sx1oGuGccrzTb\",\"withBadge\":\"fltQkzCy9DRS9QWsAAH5\",\"badgeContainer\":\"ZGxYvTYQkAjpjvgBHMdH\",\"slide-in\":\"Ybb5P4BAFmSaffktaa81\",\"slideIn\":\"Ybb5P4BAFmSaffktaa81\",\"floating-badge-wrapper\":\"pAGwoR5ceC4Y2MoDqG1g\",\"floatingBadgeWrapper\":\"pAGwoR5ceC4Y2MoDqG1g\",\"rotate-in\":\"zyC6DJuexMszfxuDeBMR\",\"rotateIn\":\"zyC6DJuexMszfxuDeBMR\",\"floating-badge\":\"N8o73q2OT6d_kUTyUcg5\",\"floatingBadge\":\"N8o73q2OT6d_kUTyUcg5\",\"floating-badge-triangle\":\"m6YwWsobe1cb3cqf0Xei\",\"floatingBadgeTriangle\":\"m6YwWsobe1cb3cqf0Xei\",\"floating-badge-icon\":\"_qQItdFB5DScaFdSJR2a\",\"floatingBadgeIcon\":\"_qQItdFB5DScaFdSJR2a\",\"floating-badge-value\":\"h46zskGqCT1b3onjQB26\",\"floatingBadgeValue\":\"h46zskGqCT1b3onjQB26\",\"left\":\"OP8qshGP9fzy9bbMvWn2\",\"right\":\"EjQP1rE5iExOnGWJyYIe\",\"progress\":\"ASLJoYhAmOvHasjzMKYg\",\"fullProgress\":\"tmwWY_SiGqqKrC8oUUDW\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useLang from '../../hooks/useLang';\n\nimport Icon from './Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  className?: string;\n};\n\nconst PROGRESS_LOCK = 0.1;\n\nconst LimitPreview: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  className,\n}) => {\n  const lang = useLang();\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  const tailPosition = progress && (progress < PROGRESS_LOCK ? 0 : progress > 1 - PROGRESS_LOCK ? 1 : 0.5);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LimitPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: user.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <i className={`icon icon-${statusIcon} status-icon`} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus) && 'online')}>\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        onEmojiStatusClick={onEmojiStatusClick}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        peer={user}\n        isSavedMessages={isSavedMessages}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n    };\n  },\n)(PrivateChatInfo));\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"M4GWpBd7i7ViA2xNTvH4\",\"info\":\"uHKuP7J67YWxko9FiDo9\",\"status\":\"DwTvYuXwYiyH8P8HGyEw\",\"fallbackPhoto\":\"a_azkhZzdtjRO5pWnNno\",\"fallbackPhotoContents\":\"NVXGZpj7iFHkn7HaGsey\",\"fallbackPhotoVisible\":\"zPvRR0bFn0HFuXDjj1wU\",\"fallbackPhotoAvatar\":\"IG9hcS9__jiZjU59BA1U\",\"photoWrapper\":\"YvztuUsksHhhNiXGWWbN\",\"photoDashes\":\"UXIlP1uQpXVG_DNB26iC\",\"photoDash\":\"Ay_dhoiSuGWjH2hVOy7i\",\"photoDash_current\":\"xWzV6TAYO756R70Pzfmb\",\"photoDashCurrent\":\"xWzV6TAYO756R70Pzfmb\",\"navigation\":\"rcKy8wQruH_z84yRjAry\",\"navigation_prev\":\"IrGNErqISNgGY687XP5I\",\"navigationPrev\":\"IrGNErqISNgGY687XP5I\",\"navigation_next\":\"mERrfFjC7wKBhpVCjGgg\",\"navigationNext\":\"mERrfFjC7wKBhpVCjGgg\",\"topicContainer\":\"Dlmqly7y8H7bCtaGNFIO\",\"topicTitle\":\"eMDgnAzVXSNlBUAgdBPK\",\"topicIcon\":\"Bv321I_wzF0fdNw63dxB\",\"topicIconTitle\":\"MwfYq2acbtWIp8pGf9kI\",\"topicMessagesCounter\":\"YrvPEuAvDVR3BLU68aIN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPhoto, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    isSavedMessages?: boolean;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const mediaIdRef = useStateRef(mediaId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Reset the current avatar photo to the one selected in Media Viewer if photos have changed\n  useEffect(() => {\n    setHasSlideAnimation(false);\n    setCurrentPhotoIndex(mediaIdRef.current || 0);\n  }, [mediaIdRef, photos]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!userId) return;\n\n    openPremiumModal({ fromUserId: userId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = !isSavedMessages && photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        isSavedMessages={isSavedMessages}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      isSavedMessages,\n      mediaId,\n      avatarOwnerId,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPeerColorKey,\n  getUserFullName,\n  getVideoAvatarMediaHash,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick?: NoneToVoidFunction;\n};\n\nconst noneToVoid: NoneToVoidFunction = () => void 0;\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  canPlayVideo,\n  onClick = noneToVoid,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const userOrChat = user || chat;\n  const canHaveMedia = userOrChat && !isSavedMessages && !isDeleted && !isRepliesChat;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(userOrChat, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  let content: TeactNode | undefined;\n\n  if (isSavedMessages) {\n    content = <i className=\"icon icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon icon-reply-filled\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getPeerColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost,\n  } = boostInfo;\n\n  const currentLevel = level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n  };\n}\n","import type { ApiMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageKey,\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CBuciapCXTFHGIT8QJjp\",\"particle\":\"zSAQoiw2P8dHog4GGC6Y\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerPreviewHash(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"UoQ7Ahl_08BYJER7dkXg\",\"animated-icon\":\"m6I0yrKxFYZrVajqEjYY\",\"animatedIcon\":\"m6I0yrKxFYZrVajqEjYY\",\"effect\":\"DUYRztiKh76RsdbcJpu8\",\"animating\":\"_sWZKdctR4GWBAZk5LvT\",\"withEffectOnly\":\"bcQvAAQmccIErVUj7YDo\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport ReactionStaticEmoji from '../ReactionStaticEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransition(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransition(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransition(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          forceAlways\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          forceAlways\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { availableReactions, genericEmojiEffects } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean(unreadCount || hasUnreadMark);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, pinnedElement,\n    ].filter(Boolean);\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QNEU55wdWY0UBHKcohz_\",\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"button\":\"RF4n_8QOkb5FMXcpbmBW\",\"title\":\"XFFMu4VlEHKxRihwcGTm\",\"unread-count\":\"jYYtPy1W31sqUc_gw9RW\",\"unreadCount\":\"jYYtPy1W31sqUc_gw9RW\",\"info\":\"fvlwjR3heR1XQKFT_jiv\",\"name\":\"Njj0lF4z1QQ96mlTyHt_\",\"icon\":\"EKj05B3RNFnEMtMNttAq\",\"avatarWrapper\":\"qx5qdiOt16oub2O9sYeg\",\"avatar\":\"n8grGxKGGUr4oa8NVGFW\",\"chatsPreview\":\"m7P0WNHzg_kxle3rxniA\",\"unread\":\"mee_ERQMDxZsfb47JEBb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('DoneChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('DoneChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import { addCallback } from '../lib/teact/teactn';\nimport { getGlobal } from '../global';\n\nimport type { GlobalState } from '../global/types';\nimport type { Signal, SignalSetter } from '../util/signals';\n\nimport { createSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\n/*\n  This hook is a more performant variation of the standard React `useSelector` hook. It allows to:\n  a) Avoid multiple subscriptions to global updates by leveraging a single selector reference.\n  b) Return a signal instead of forcing a component update right away.\n */\n\ntype Selector<T extends any> = (global: GlobalState) => T;\n\ninterface State<T extends any> {\n  clientsCount: number;\n  getter: Signal<T>;\n  setter: SignalSetter;\n}\n\nconst bySelector = new Map<Selector<any>, State<any>>();\n\naddCallback((global: GlobalState) => {\n  for (const [selector, { setter }] of bySelector) {\n    setter(selector(global));\n  }\n});\n\nfunction useSelectorSignal<T extends any>(selector: Selector<T>): Signal<T> {\n  let state = bySelector.get(selector);\n\n  if (!state) {\n    const [getter, setter] = createSignal(selector(getGlobal()));\n    state = { clientsCount: 0, getter, setter };\n    bySelector.set(selector, state);\n  }\n\n  useEffectOnce(() => {\n    state!.clientsCount++;\n\n    return () => {\n      state!.clientsCount--;\n\n      if (!state!.clientsCount) {\n        bySelector.delete(selector);\n      }\n    };\n  });\n\n  return state.getter;\n}\n\nexport default useSelectorSignal;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wYxzEPxIxq51N_1Jvb22\",\"indicator\":\"GjqQzJt4PhbEBMchbPMg\",\"indicatorInner\":\"mem3FdA38CqQltSSxUwi\",\"selected\":\"J83lhIRMV9uenQVCQJpB\",\"active\":\"AtRfJ5hbKIb7giL05RZz\",\"bar-animation-transform-2\":\"fvooOFoNHT8RmLcjbCMZ\",\"barAnimationTransform2\":\"fvooOFoNHT8RmLcjbCMZ\",\"bar-animation-transform-1\":\"V89uAJI0AldAPq3h8iKW\",\"barAnimationTransform1\":\"V89uAJI0AldAPq3h8iKW\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectorSignal from '../../../hooks/useSelectorSignal';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { lastMessage, isForum } = chat || {};\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n      } else {\n        openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n      }\n\n      return;\n    }\n\n    openChat({ id: chatId, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}` : undefined}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = chat.lastMessage ? getMessageAction(chat.lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = chat.lastMessage && selectTopicFromMessage(global, chat.lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && chat.lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SQg81XcAI_8yUrDTZsuO\",\"sticker\":\"wJbYOMkKbFvBF3ETHcTe\",\"title\":\"aAjnCIjqnZ5azP_wg1ax\",\"description\":\"xkUox6hbodMU0tsgwbai\",\"is-ios\":\"v_F4YMWOjnwul_FmJtqz\",\"isIos\":\"v_F4YMWOjnwul_FmJtqz\",\"is-macos\":\"I0of4RZnJHb9jdBEQSiA\",\"isMacos\":\"I0of4RZnJHb9jdBEQSiA\",\"button-text\":\"avAW55GP937eCr8UmpfS\",\"buttonText\":\"avAW55GP937eCr8UmpfS\",\"centered\":\"LIiIYVtbGfUXltL06Xbb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype FolderType = 'all' | 'archived' | 'folder';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: FolderType;\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  folderType?: FolderType;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, folderType, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  const isInbox = folderType === 'all';\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{isInbox ? lang('InboxIsEmpty') : lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    folderType,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"root\":\"auVVCT950ajs6Uf4jI_w\",\"title\":\"RrIwnolHiQkojIfDEmg3\",\"info\":\"W7svz8CjmnPmDhwiz6cJ\",\"buttons\":\"lV9Uc02uJwQff0VQsKTj\",\"button\":\"D0dko7sVnw0KDtqjY0bH\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [archiveSettings, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds, shouldDisplayArchive]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open')}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : (viewportIds && !viewportIds.length) || isAllFolder ? ( // TODO: improve tempfix for allFolder\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onSettingsScreenSelect={onSettingsScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZyX_vkPmR8lkPavXpJ8t\",\"button-text\":\"eyTT7Nz45S4tsccfs60O\",\"buttonText\":\"eyTT7Nz45S4tsccfs60O\",\"sticker\":\"qtGErqZ1CIiAYG3E4UcJ\",\"title\":\"xpDHtODGvlK2Esrg3kFa\",\"description\":\"xqeZm45hTFw3abdn8dYe\",\"is-ios\":\"G5wtv6cwHgiIpRWtvIvu\",\"isIos\":\"G5wtv6cwHgiIpRWtvIvu\",\"is-macos\":\"H92rL6BfAuzokrWOXdQr\",\"isMacos\":\"H92rL6BfAuzokrWOXdQr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YmRS2ZiwKMtqCF87Nsw8\",\"closed-icon\":\"K6QDMKEV2GXbuOQWOS73\",\"closedIcon\":\"K6QDMKEV2GXbuOQWOS73\",\"topic-icon\":\"TB99wQ9nHBumZ6E9ByUz\",\"topicIcon\":\"TB99wQ9nHBumZ6E9ByUz\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiFormattedText, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiFormattedText;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const { openChat, deleteTopic, focusLastMessage } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openChat({ id: chatId, threadId: topic.id, shouldReplaceHistory: true });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId)!;\n    const { senderId, replyToMessageId, isOutgoing } = lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n    hash: chat ? createLocationHash(chat.id, 'thread', MAIN_THREAD_ID) : undefined,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? currentThreadId : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GUOX6Q0XzHRhNZvBwjQ9\",\"rtl\":\"_1XehUpS3aX91hWXDmcu\",\"no-animation\":\"mPOFnJvncopcVbbyZrzs\",\"noAnimation\":\"mPOFnJvncopcVbbyZrzs\",\"group-call\":\"OH0LaRqoNDIvvHsCtEte\",\"groupCall\":\"OH0LaRqoNDIvvHsCtEte\",\"notch\":\"UhjDQykjZBYhiVclJl16\",\"scrolled\":\"h_YBka1L8eRICjrO5dF5\",\"scroll-top-handler\":\"cO3iiLSh70tyWuNCUFtX\",\"scrollTopHandler\":\"cO3iiLSh70tyWuNCUFtX\",\"info\":\"mzucaTAH77gNB1V006lS\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gljGvMdlFlsKhrMPQ_xa\",\"title-row\":\"GrFgsvT5YSYldl56Hnzu\",\"titleRow\":\"GrFgsvT5YSYldl56Hnzu\",\"loading\":\"bYI9fzK27IbEWGTzvRGf\",\"other-column\":\"RhuR5wto63HGEeY1NdXg\",\"otherColumn\":\"RhuR5wto63HGEeY1NdXg\",\"main-column\":\"VUe4FFBCwClvaU9aiXG1\",\"mainColumn\":\"VUe4FFBCwClvaU9aiXG1\",\"unread\":\"yHnVWii5hDMte2XGiGio\",\"last-message\":\"OyHxp9apV7oixvvxGFDx\",\"lastMessage\":\"OyHxp9apV7oixvvxGFDx\",\"after-wrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"afterWrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"after\":\"DGAWy9KRwAZqof7Bt1nx\",\"title\":\"WeBppBs2KkOXzHRzQ2_W\",\"otherColumnIcon\":\"mrAD_CKmksSYVhfxgz_w\",\"other-column-title\":\"Ub9bpPYaMAw0qMouq5_O\",\"otherColumnTitle\":\"Ub9bpPYaMAw0qMouq5_O\",\"other-columns\":\"FJt1oTIn6WgfvH9iKMg3\",\"otherColumns\":\"FJt1oTIn6WgfvH9iKMg3\",\"ellipsis\":\"RL7lx7aP0Fg2LakRlxHp\",\"reverse-corner\":\"RJ0NXk_lx9qewdoGgJsT\",\"reverseCorner\":\"RJ0NXk_lx9qewdoGgJsT\",\"overwritten-width\":\"e4cE7B51DN3MrEY9WuKx\",\"overwrittenWidth\":\"e4cE7B51DN3MrEY9WuKx\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLang from '../../hooks/useLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openChat } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openChat({\n      id: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { Thread } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n} from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useLang from '../../../../hooks/useLang';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: Thread['draft'];\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length && (!chat?.isForum || isTopic)) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text,\n            entities: draft.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {Boolean(lastMessage.replyToStoryId) && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { ApiMediaFormat, MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getMessageMediaHash } from '../../global/helpers';\nimport * as mediaLoader from '../../util/mediaLoader';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const suggestedPhotoUrl = useMedia(getMessageMediaHash(message, 'full'));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const photo = message.content.action!.photo!;\n    const blobUrl = await mediaLoader.fetch(`videoAvatar${photo.id}?size=u`, ApiMediaFormat.BlobUrl);\n    const blob = await fetch(blobUrl).then((r) => r.blob());\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetch(suggestedPhotoUrl).then((r) => r.blob()));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        mediaId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\n\nimport { getMessageHtmlId, isChatChannel } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: number;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const { openPremiumModal, requestConfetti } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(message.chatId, message.replyToMessageId, targetMessage);\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isGift = Boolean(message.content.action?.text.startsWith('ActionGift'));\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti();\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransition(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      lang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, lang, message, observeIntersectionForLoading, observeIntersectionForPlaying,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuPosition !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span className=\"action-message-gift\" tabIndex={0} role=\"button\" onClick={handlePremiumGiftClick}>\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang('ActionGiftPremiumTitle')}</strong>\n        <span>{lang('ActionGiftPremiumSubtitle', lang('Months', message.content.action?.months, 'i'))}</span>\n\n        <span className=\"action-message-button\">{lang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    !isGift && !isSuggestedAvatar && 'in-one-row',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && <span className=\"action-message-content\">{renderContent()}</span>}\n      {isGift && renderGift()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar\n          message={message}\n          renderContent={renderContent}\n        />\n      )}\n      {contextMenuPosition && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuPosition}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, replyToMessageId, content,\n    } = message;\n\n    const userId = senderId;\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = replyToMessageId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const chat = selectChat(global, chatId);\n    const isChat = chat && (isChatChannel(chat) || userId === chatId);\n    const senderUser = !isChat && userId ? selectUser(global, userId) : undefined;\n    const senderChat = isChat ? chat : undefined;\n    const premiumGiftSticker = global.premiumGifts?.stickers?.[0];\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: number;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId, threadId: MAIN_THREAD_ID });\n  });\n\n  function handleRequestCall() {\n    requestMasterAndRequestCall({ userId: chatId });\n  }\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot;\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isMainThread && !canSubscribe;\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewBoosts = isMainThread && isChannel && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewBoosts,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vL8HfVVnjTeFmp1ECFj8\",\"compact\":\"N3E1geoPu1vesCKf545F\",\"image\":\"Fb4aIyDYEwOlaqY8oZkV\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: number;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { IAnchorPosition, ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectIsInSelectMode, selectReplyingToId } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: number;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  replyingToId?: number;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyingToId,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (e.altKey) { // for onSendSchedule Alt+Enter hotkey\n      return;\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyingToId, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={onFocus}\n            onBlur={onBlur}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyingToId: chatId && threadId ? selectReplyingToId(global, chatId, threadId) : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u1iXUR7f9a1fJ3oKj6UR\",\"preview\":\"PdT0BgaOGO3KQ6uAMywg\",\"linkPreview\":\"VjvrVyctay2XnrWkF6Pm\",\"media\":\"bCVEWkiPlJ2vOFKdsOZn\",\"nonInteractive\":\"sM8Yb5GJn63Lqe7WGyxs\",\"expired\":\"GU6ftk8mOSKG68G3clJz\",\"expiredIcon\":\"C6JcJFH05QLPlgncYbFX\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransition(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Photo: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const photo = (getMessagePhoto(message) || getMessageWebPagePhoto(message))!;\n  const localBlobUrl = photo.blobUrl;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(getMessageMediaHash(message, size), !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(photo.isSpoiler);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'), !isDownloading, getMessageMediaFormat(message, 'download'),\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const isOwn = isOwnMessage(message);\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, isOwn, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions(message, asForwarded, noAvatars, isMobile);\n\n  const className = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      <img\n        src={fullMediaData}\n        className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        draggable={!isProtected}\n      />\n      {withThumb && (\n        <canvas ref={thumbRef} className={buildClassName('thumbnail', thumbClassNames)} />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton\n        && <i className={buildClassName('icon', 'icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\n\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useMedia from '../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\n\nimport './ReactionSelectorReaction.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelectorReaction');\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={cn('&', chosen && 'chosen')}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={cn('static-icon')}\n          src={staticIconData}\n          alt=\"\"\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  canSendReaction, getReactionUniqueKey, isSameReaction, sortReactions,\n} from '../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  maxUniqueReactions?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  onShowMore: (position: IAnchorPosition) => void;\n  className?: string;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 6;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  enabledReactions,\n  currentReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  onToggleReaction,\n  onShowMore,\n  className,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const availableReactions = useMemo(() => {\n    const reactions = allAvailableReactions?.map((availableReaction) => {\n      if (availableReaction.isInactive) return undefined;\n      if (!isPrivate && (!enabledReactions || !canSendReaction(availableReaction.reaction, enabledReactions))) {\n        return undefined;\n      }\n      if (maxUniqueReactions && currentReactions && currentReactions.length >= maxUniqueReactions\n        && !currentReactions.some(({ reaction }) => isSameReaction(reaction, availableReaction.reaction))) {\n        return undefined;\n      }\n      return availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(reactions, topReactions);\n  }, [allAvailableReactions, currentReactions, enabledReactions, isPrivate, maxUniqueReactions, topReactions]);\n\n  const reactionsToRender = useMemo(() => {\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction(r.reaction, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&', lang.isRtl && 'isRtl'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {reactionsToRender.map((reaction, i) => (\n            <ReactionSelectorReaction\n              key={getReactionUniqueKey(reaction.reaction)}\n              isReady={isReady}\n              onToggleReaction={onToggleReaction}\n              reaction={reaction}\n              noAppearAnimation={!canPlayAnimatedEmojis}\n              chosen={userReactionIndexes.has(i)}\n            />\n          ))}\n          {withMoreButton && (\n            <Button\n              color=\"translucent\"\n              className={cn('show-more')}\n              onClick={handleShowMoreClick}\n            >\n              <i className=\"icon icon-down\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersectionForLoading: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Video: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const video = (getMessageVideo(message) || getMessageWebPageVideo(message))!;\n  const localBlobUrl = video.blobUrl;\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(video.isSpoiler);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = getMessageMediaHash(message, 'inline');\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash, !shouldLoad, getMessageMediaFormat(message, 'inline'),\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = getMessageMediaHash(message, 'preview');\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewClassNames = useMediaTransition((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = !hasThumb || previewBlobUrl || isPlayerReady;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n  );\n\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring && !isUnsupported, undefined, wasLoadDisabled);\n  const {\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner));\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const isOwn = isOwnMessage(message);\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const {\n    width, height,\n  } = dimensions || calculateVideoDimensions(video, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (isDownloading) {\n      getActions().cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const className = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', previewClassNames, withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i className={buildClassName('icon', 'icon-large-play', playButtonClassNames)} />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner progress={transferProgress} onClick={handleClick} />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  onMediaClick?: () => void;\n  onCancelMediaTransfer?: () => void;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  onMediaClick,\n  onCancelMediaTransfer,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    type,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = false;\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions(message, undefined, undefined, isMobile);\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent-bordered\"\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir=\"auto\"\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            message={message}\n            observeIntersection={observeIntersection}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            message={message}\n            observeIntersectionForLoading={observeIntersection!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n      return 'lng_view_button_boost';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport {\n  getMessagePhoto,\n  getMessageText,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../../global/helpers';\nimport { calculateInlineImageDimensions, calculateVideoDimensions, REM } from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions(\n  message: ApiMessage, asForwarded?: boolean, noAvatars?: boolean, isMobile?: boolean,\n) {\n  const isOwn = isOwnMessage(message);\n  const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n  const video = getMessageVideo(message);\n\n  const isWebPagePhoto = Boolean(getMessageWebPagePhoto(message));\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const { width, height } = photo\n    ? calculateInlineImageDimensions(photo, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : calculateVideoDimensions(video!, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const messageText = getMessageText(message);\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport { getMessageMediaThumbDataUri } from '../../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\n\nexport default function useBlurredMediaThumbRef(\n  message: ApiMessage,\n  isDisabled?: boolean | string,\n  forcedUri?: string,\n) {\n  const { isMobile } = useAppLayout();\n\n  const dataUri = forcedUri || getMessageMediaThumbDataUri(message);\n\n  return useCanvasBlur(\n    dataUri,\n    Boolean(isDisabled),\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { FocusDirection } from '../../../../types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n\n      const exec = () => animateScroll(\n        messagesContainer,\n        elementRef.current!,\n        isToBottom ? 'end' : 'centerOrTop',\n        FOCUS_MARGIN,\n        focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n        focusDirection,\n        undefined,\n        isResizingContainer,\n        true,\n      );\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiMessageStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\n\nimport './StatisticsOverview.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'views', title: 'Stats.Message.Views', isPlain: true },\n    {\n      name: 'forwards', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n  [\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  statistics: ApiChannelStatistics | ApiGroupStatistics | ApiMessageStatistics | ApiBoostStatistics;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  className,\n}) => {\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName('StatisticsOverview__value', isChangeNegative && 'negative')}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n\n  const schema = type === 'boost' ? BOOST_OVERVIEW : type === 'message' ? MESSAGE_OVERVIEW : type === 'group'\n    ? GROUP_OVERVIEW : CHANNEL_OVERVIEW;\n\n  return (\n    <div className={buildClassName('StatisticsOverview', className)}>\n      <div className=\"StatisticsOverview__header\">\n        {title && (\n          <div className=\"StatisticsOverview__title\">\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className=\"StatisticsOverview__caption\">\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className=\"StatisticsOverview__table\">\n        {schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className=\"StatisticsOverview__table-cell\">\n                    <b className=\"StatisticsOverview__table-value\">\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className=\"StatisticsOverview__table-cell\">\n                    {cell.withAbsoluteValue && (\n                      <span className=\"StatisticsOverview__table-value\">\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={`StatisticsOverview__table-${cell.withAbsoluteValue ? 'secondary-' : ''}value`}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className=\"StatisticsOverview__table-cell\">\n                  <b className=\"StatisticsOverview__table-value\">\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isArchived,\n  withAnimation,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { shouldRender, transitionClassNames } = useShowTransition(isVisible, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    if (!withAnimation) return;\n    if (isVisible) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={buildClassName(styles.root, transitionClassNames)}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active } } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { pause } from '../../../util/schedulers';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    const preloadHashes = async (mediaHashes: { hash: string; format: ApiMediaFormat }[]) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format }) => {\n        mediaLoader.fetch(hash, format).then((result) => {\n          if (format === ApiMediaFormat.Progressive) {\n            preloadProgressive(result);\n          }\n        });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n\n  return ids.slice(currentIndex - aroundAmount, currentIndex + aroundAmount);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: { hash: string; format: ApiMediaFormat }[] = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: story.content.video ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    // Alt video with different codec\n    if (story.content.altVideo) {\n      mediaHashes.push({ hash: getStoryMediaHash(story, 'full', true)!, format: ApiMediaFormat.Progressive });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n\n  setTimeout(() => {\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"oWM0Zdb5uhUcOVtc99aS\",\"mediaArea\":\"qF5NAjzN826sfFvUwCi1\",\"preview\":\"dDrvIyufIoAgicpd5jBf\",\"shiny\":\"mHQ5t7g14fbpeDSyTLcd\",\"wave\":\"PlA2GEm5aGvfxsFwsAwE\",\"suggestedReaction\":\"K8z7QedYZHumSrLQCrZq\",\"dark\":\"cKzIdSabAL8MJ9G60u77\",\"background\":\"QxSGHD_yTaeyLhKS2qqz\",\"flipped\":\"CiCfsJ1VaeHZ624tudjv\",\"reaction\":\"Oi4FupikW1BQIPXxj9a7\",\"withCount\":\"dCSRvNsQTjKPeBul8iIX\",\"reactionCount\":\"WAKY7bjrmisH3k1XFQMZ\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, reactions } = story;\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.suggestedReaction, isDark && styles.dark, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.background, isFlipped && styles.flipped)}\n      />\n      <ReactionAnimatedEmoji\n        className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n        reaction={reaction}\n        containerId={containerId}\n        size={customEmojiSize}\n        effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n        shouldPause={isPreview}\n        shouldLoop={!isPreview}\n      />\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useWindowSize from '../../../hooks/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst MOBILE_MEDIA_OFFSET_X = Number(REM);\nconst MOBILE_MEDIA_OFFSET_Y = 4.5 * REM;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className,\n}: OwnProps) => {\n  const { openMapModal } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isActive) return;\n    const element = ref.current;\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const adaptedHeight = windowSize.height - MOBILE_MEDIA_OFFSET_Y;\n    const adoptedWidth = windowSize.width - MOBILE_MEDIA_OFFSET_X;\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO ? adaptedHeight * STORY_ASPECT_RATIO : adoptedWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO ? adaptedHeight : adoptedWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    if (mediaArea.type === 'geoPoint' || mediaArea.type === 'venue') {\n      openMapModal({ geoPoint: mediaArea.geo });\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isActive && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea) {\n  const {\n    x, y, width, height, rotation,\n  } = mediaArea.coordinates;\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLang from '../useLang';\nimport useLastCallback from '../useLastCallback';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat);\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect, useRef, useState } from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { onBeforeUnload } from '../util/schedulers';\nimport useLastCallback from './useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id });\n      },\n    };\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }) };\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('MarkNotDone'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('MarkDone'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      !isSelf && actionMute,\n      actionPin,\n      actionAddToFolder,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { Signal } from '../util/signals';\n\nimport useSignal from './useSignal';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, forceUpdate, isStreaming, delay, handleProgress, isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLang from './useLang';\nimport useLastCallback from './useLastCallback';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: number) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nfunction useTimeout(callback: () => void, delay?: number, dependencies: readonly any[] = []) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [delay, savedCallback, ...dependencies]);\n}\n\nexport default useTimeout;\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from '../global/helpers';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { getMessageKey, parseMessageKey } from '../global/helpers';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    requestMeasure(() => element.focus());\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"J2OUAM1NNJzVPwPvfhkE\",\"fadeIn\":\"M0CnDOPqsqgp07DpRE7u\",\"closing\":\"U1ngPxxXOIuHX2rXUTdq\",\"peer\":\"N26JMlalq5jDriKQ7nFD\",\"name\":\"M4TMTYSSXa3H49Go9t9g\",\"name_hasUnreadStory\":\"kUi0jmHQpokhzBJI5FJA\",\"nameHasUnreadStory\":\"kUi0jmHQpokhzBJI5FJA\",\"hidden\":\"c5X6suR_qxO1W64dH2j3\",\"contextMenu\":\"nAc8FkZyj9PHGgGm0BO7\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"M4TMTYSSXa3H49Go9t9g\",\"root\":\"laLpjZnhOwW8cdBN3mEv\",\"avatar\":\"ewhbkm9F8nGqLpj_toQg\",\"avatarHidden\":\"aPEbisewADPmseTVcQxO\",\"ghost\":\"bVo8M4JDvB9c6gUvnHTE\",\"ghostAnimateName\":\"DuJzmNpO8VBweCzETZQJ\",\"ghostRevealName\":\"ghy_xXQVvFUwJrNg9uhA\",\"ghostLast\":\"_mqUJoir6gIYUJWb0zFw\"};"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","peer","Avatar","key","Button","round","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","length","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","thumbClassNames","useMediaTransition","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","setTimeout","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","onHideTranscription","onPlay","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwn","isOwnMessage","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","AudioOrigin","Inline","Search","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","viewBox","rx","ry","stroke","renderVoice","peers","root","avatar","runDebounced","debounce","cb","_ref4","chatOrUserId","countryList","phoneCodes","phoneCodeList","user","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","chatInviteLink","selectChatFullInfo","inviteLink","description","selectUserFullInfo","bio","about","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","loadPeerStories","userId","usernames","phoneNumber","isSelf","chatUsernames","peerId","areNotificationsEnabled","setAreNotificationsEnabled","useEffectWithPrevDeps","prevPeerId","isTopicInfo","MAIN_THREAD_ID","activeUsernames","u","activeChatUsernames","link","getChatLink","handleNotificationChange","newAreNotificationsEnabled","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","username","nick","textToCopy","TME_LINK_PREFIX","href","stopEvent","ListItem","icon","multiline","narrow","isStatic","Switcher","label","checked","inactive","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","MAX_ASPECT_RATIO","FILE_EXT_REGEX","async","buildAttachment","filename","blob","options","blobUrl","URL","createObjectURL","type","mimeType","quick","shouldSendAsFile","SUPPORTED_IMAGE_CONTENT_TYPES","img","preloadImage","validateAspectRatio","shouldShrink","isGif","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","replace","SUPPORTED_VIDEO_CONTENT_TYPES","videoWidth","videoHeight","preloadVideo","err","createPosterForVideo","SUPPORTED_AUDIO_CONTENT_TYPES","coverUrl","url","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","toString","parseAudioMetadata","uniqueId","Date","now","random","prepareAttachmentsToSend","attachments","shouldSendCompressed","attach","shouldSendAsSpoiler","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","getAttachmentType","attachment","RE_COMMAND","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","addEventListener","handlePaste","removeEventListener","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","substring","pastedFormattedText","parseMessageInput","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","innerHTML","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","name","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","reuseWorker","BLOB_PARAMS","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","Extra","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","code","handleDocumentSelect","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","Menu","isOpen","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","disabled","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","BotCommandTooltip","selectChatMessage","clickBotInlineButton","isKeyboardSingleUse","keyboardButtons","noCompact","row","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","replyingToId","selectReplyingToId","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","sender","selectEditingMessage","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","selectForwardedSender","hiddenUserName","selectSender","selectPeer","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","onClear","setReplyingToId","setEditingId","focusMessage","changeForwardRecipient","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","isShown","canAnimate","useAsyncRendering","clearEmbedded","captureEscKeyListener","handleMessageClick","noForumTopicPanel","handleClearClick","handleChangeRecipientClick","isContextMenuOpen","contextMenuPosition","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","querySelector","transformOriginX","transformOriginY","menuStyle","useMenuPosition","leftIcon","customText","strippedMessage","strippedText","onContextMenu","EmbeddedMessage","hasContextMenu","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","selectTheme","webPagePreview","getHtml","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","getLink","useDerivedSignal","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","DeleteMessageModal","MainButtonState","_ref5","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","chatBotFullInfo","chatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUserId","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraftText","selectRequestedDraftText","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","availableReactions","topReactions","isOnActiveTab","isBlurred","editingMessage","draft","selectDraft","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","shouldSchedule","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","groupChatMembers","members","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","chatBotCommands","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","attachmentSettings","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","stealthMode","stories","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openChat","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePrevious","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","isSentStoryReactionHeart","emoticon","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","limit","shouldForce","isSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","isBotCommandTooltipOpen","close","closeBotCommandTooltip","filteredBotCommands","botTooltipCommands","setFilteredBotCommands","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","useBotCommandTooltip","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","isEditing","updateDraft","prevState","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","EDITABLE_INPUT_CSS_SELECTOR","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","useDraft","resetComposer","handleEditComplete","handleEditCancel","useEditing","editMessage","setEditingDraft","setShouldForceShowEditing","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","action","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerPosition","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","shouldGroupMessages","localOnly","handleSendAttachments","handleSend","shouldOpenRepliesChat","ULU_APP_CONSTANTS","SHOULD_OPEN_REPLIES_CHAT_ON_REPLY","ULU_APP_UTILS","doesChatSupportThreads","repliesChatToOpen","isMainThread","currentAttachments","record","handleClickBotMenu","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","escapeHtml","handleCustomEmojiSelect","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","shouldPreserveInput","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","renderedEditedMessage","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","onSend","withBotCommands","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","onShowMore","isForMessage","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","isSchedule","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","BotMenuButton","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","withEffectOnly","allowDisabledClick","noFastClick","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isMessageDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","onCheck","forwardSender","isProtected","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","observeIntersectionForPlaying","mediaBlobUrl","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","getMessageIsSpoiler","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","getPeerColorKey","getPictogramDimensions","srcUrl","MediaSpoiler","isVisible","renderPictogram","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","Icon","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","DotAnimation","TypingStatus","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","onRevoke","openChatWithDraft","copyLink","handleCopyPrimaryClicked","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","outgoingStatus","MessageOutgoingStatus","getMessageVideo","hasSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","withAnimation","rect","currentTarget","clientY","shiftX","shiftY","Keys","Transition","activeKey","DEFAULT_TEXT","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedIds","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","shouldMinimize","lockedSelectedIds","unlockedSelectedIds","unlockedIds","lockedIdsSet","sortedItemIds","sort","a","b","aIsLocked","bIsLocked","handleItemClick","newSelectedIds","splice","handleFilterChange","viewportIds","getMore","useInfiniteScroll","PickerSelectedItem","isMinimized","clickArg","canClose","InputText","InfiniteScroll","renderCheckbox","PrivateChatInfo","GroupChatInfo","Loading","iconElement","titleText","leftText","rightText","floatingBadgeText","floatingBadgeIcon","hasFloatingBadge","isProgressFull","tailPosition","userStatus","selectUserStatus","statusIcon","emojiStatusSize","noEmojiStatus","adminMember","onEmojiStatusClick","customTitle","isOwner","withEmojiStatus","isUserOnline","getUserStatus","RippleEffect","connectionState","mediaViewer","currentTopicId","userFullInfo","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","canPlayVideo","openPremiumModal","photos","prevMediaId","prevAvatarOwnerId","mediaIdRef","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","_","renderPhotoTabs","isVideo","renderPhoto","canCopyTitle","ProfilePhoto","noneToVoid","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","userOrChat","canHaveMedia","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","blankUrl","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","selected","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","typingUser","typingUserName","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","currentLevel","hasNextLevel","levelProgress","remainingBoosts","renderMessageText","highlight","emojiSize","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","renderTextWithEntities","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","isLottie","particleSize","onEnded","stickerHash","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","generateRandomDropPath","path","withSharedAnimation","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","withEffects","selectPerformanceSettingsValue","genericEffects","effectSize","shouldPause","shouldLoop","stopActiveReaction","r","centerIconId","centerIcon","customEmoji","useCustomEmoji","assignedEffectId","aroundAnimation","assignedId","effectId","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","play","noLoop","effect","CustomEmojiEffect","ChatFolderModal","MuteChatModal","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","renderContent","archiveSettings","onDragEnter","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","contextActions","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","handleDragEnter","minimized","buttonClassName","withPortalForMenu","info","Badge","avatarWrapper","chatsPreview","bySelector","Map","addCallback","selector","setter","senderId","replyToMessageId","isOutgoing","lastMessage","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","folderId","orderDiff","animationType","offsetTop","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","renderSubtitle","useChatListEntry","getIsForumPanelClosed","state","getter","createSignal","clientsCount","set","useEffectOnce","delete","useSelectorSignal","selectIsForumPanelClosed","forceOnHeavyAnimation","handleDelete","handleMute","handleChatFolderChange","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","withStoryGap","StoryViewerOrigin","ChatList","ChatBadge","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","isInbox","AnimatedIconFromSticker","fluid","pill","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","useResizeObserver","entry","borderBoxSize","blockSize","contentRect","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","hash","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","containerRef","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","resolvedFolderId","ALL_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","digit","isArchiveInList","shift","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","container","scrollHeight","offsetHeight","deltaY","passive","useTopOverscroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onDragLeave","UnconfirmedSession","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","Chat","teactOrderKey","getOrderKey","renderChats","EmptyFolder","canManageTopics","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastMessageId","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","useEnsureMessage","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","withTranslucentThumbs","renderActionMessageText","senderName","getMessageSenderName","replyToStoryId","messageSummary","inChatList","renderSummary","opacity","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","forceUpdate","useForceUpdate","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","isChatGroup","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetch","then","videoTs","videoSizes","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","senderChat","premiumGiftSticker","premiumGifts","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","requestConfetti","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isGift","isSuggestedAvatar","shouldShowConfettiRef","targetUsers","isContextMenuShown","preventMessageInputBlur","handlePremiumGiftClick","toUserId","monthsAmount","months","nonInteractive","ActionMessageSuggestedAvatar","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isDiscussionThread","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewBoosts","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","toggleAttachBot","icons","openMenu","closeMenu","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","AttachBotIcon","shortName","withPortal","CustomSend","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","clearTimeout","DropTarget","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","customColor","useDynamicColorListener","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","stickerSetInfo","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","addCustomEmojiInputRenderCallback","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","TextFormatter","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","m","p","getKeyFromEvent","linkUrlConfirmClassName","inputMode","dataTransferItems","traverseFileTreePromise","isFile","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","MAX_NESTING_PARENTS","parentNode","iterations","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","count","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isPreview","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","getMessagePhoto","getMessageWebPagePhoto","withBlurredBackground","useBlurredMediaThumbRef","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","MIN_MEDIA_HEIGHT","dimensionsStyle","REACTION_SIZE","cn","createClassNameBuilder","noAppearAnimation","chosen","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","enabledReactions","currentReactions","maxUniqueReactions","reactions","isInactive","canSendReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","ReactionSelectorReaction","getReactionUniqueKey","canAutoPlay","getMessageWebPageVideo","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","isPlayerReady","markPlayerReady","hasThumb","previewMediaHash","isPreviewPreloaded","canLoadPreview","isInline","isUnsupported","useUnsupportedMedia","playButtonClassNames","setPlayProgress","handleTimeUpdate","isFinite","isWebPageVideo","calculateVideoDimensions","onTimeUpdate","onCancelMediaTransfer","openTelegramLink","handleMediaClick","handleQuickButtonClick","useEnsureStory","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","Photo","Video","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","drawImage","getImageData","getAppendixColorFromImage","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isWebPagePhoto","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","forcedUri","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","FOCUS_MARGIN","isResizingContainer","isRelocatedRef","isRelocated","messagesContainer","isToBottom","animateScroll","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","BOOST_OVERVIEW","withAbsoluteValue","statistics","period","schema","formatFullDate","minDate","maxDate","cell","field","formatInteger","part","percentage","change","isChangeNegative","renderOverviewItemValue","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","useHorizontalScroll","StoryRibbonButton","isRibbonShown","isArchivedRibbonShown","canShow","PREVIEW_AVATAR_COUNT","reverse","preloadPeerIds","animateClosing","animateOpening","withStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","index","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","ghost","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","preloadedStories","canPreload","aroundStoryId","byPeerId","mediaHashes","Progressive","head","preload","autoplay","preloadProgressive","preloadHashes","peerStories","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","altVideo","getPreloadMediaHashes","mediaArea","customEmojiSize","setCustomEmojiSize","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","STORY_ASPECT_RATIO","MOBILE_MEDIA_OFFSET_X","MOBILE_MEDIA_OFFSET_Y","prepareStyle","rotation","coordinates","openMapModal","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","adaptedHeight","adoptedWidth","screenAspectRatio","mediaAreas","geoPoint","geo","handleMediaAreaClick","MediaAreaSuggestedReaction","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","resolver","deps","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","trackType","handlers","onInit","shouldPlay","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","lastCallback","onBeforeUnload","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","toggleChatPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","getCanDeleteChat","isInFolder","resolverOrDependency","isAsync","resolverRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","IGNORE_TAGS","createCallbackManager","hotkeys","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaHash","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getTime","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","initial","signalRef","isFirstRun","dependency","subscribe","cleanupEffect","savedCallback","ConnectorClass","channel","_len","_key","postMessage","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","createConnector","worker","connector","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","stopCurrentAudio","track","Audio","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","hex2rgb","param","parseInt","rgb2hex","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","q","getAverageColor","defaultRGB","rgb","image","naturalHeight","naturalWidth","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","force","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","collapse","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","averageColor","fillColor","res","ctx2D","fillRect","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","globalCompositeOperation","isElementInViewport","windowHeight","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","zoom","lat","long","providerUrl","getMetersPerPixel","cos","PI","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","lastIndex","Bold","Italic","INS","Underline","S","Strike","STRIKE","Code","PRE","Pre","BLOCKQUOTE","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}