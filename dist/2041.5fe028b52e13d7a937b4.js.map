{"version":3,"file":"2041.5fe028b52e13d7a937b4.js","mappings":"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","sources":["webpack://telegram-t/./node_modules/mp4box/dist/mp4box.all.js"],"sourcesContent":["// file:src/log.js\n/* \n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar Log = (function (){\n\t\tvar start = new Date();\n\t\tvar LOG_LEVEL_ERROR \t= 4;\n\t\tvar LOG_LEVEL_WARNING \t= 3;\n\t\tvar LOG_LEVEL_INFO \t\t= 2;\n\t\tvar LOG_LEVEL_DEBUG\t\t= 1;\n\t\tvar log_level = LOG_LEVEL_ERROR;\n\t\tvar logObject = {\n\t\t\tsetLogLevel : function(level) {\n\t\t\t\tif (level == this.debug) log_level = LOG_LEVEL_DEBUG;\n\t\t\t\telse if (level == this.info) log_level = LOG_LEVEL_INFO;\n\t\t\t\telse if (level == this.warn) log_level = LOG_LEVEL_WARNING;\n\t\t\t\telse if (level == this.error) log_level = LOG_LEVEL_ERROR;\n\t\t\t\telse log_level = LOG_LEVEL_ERROR;\n\t\t\t},\n\t\t\tdebug : function(module, msg) {\n\t\t\t\tif (console.debug === undefined) {\n\t\t\t\t\tconsole.debug = console.log;\n\t\t\t\t}\n\t\t\t\tif (LOG_LEVEL_DEBUG >= log_level) {\n\t\t\t\t\tconsole.debug(\"[\"+Log.getDurationString(new Date()-start,1000)+\"]\",\"[\"+module+\"]\",msg);\n\t\t\t\t}\n\t\t\t},\n\t\t\tlog : function(module, msg) {\n\t\t\t\tthis.debug(module.msg)\n\t\t\t},\n\t\t\tinfo : function(module, msg) {\n\t\t\t\tif (LOG_LEVEL_INFO >= log_level) {\n\t\t\t\t\tconsole.info(\"[\"+Log.getDurationString(new Date()-start,1000)+\"]\",\"[\"+module+\"]\",msg);\n\t\t\t\t}\n\t\t\t},\n\t\t\twarn : function(module, msg) {\n\t\t\t\tif (LOG_LEVEL_WARNING >= log_level) {\n\t\t\t\t\tconsole.warn(\"[\"+Log.getDurationString(new Date()-start,1000)+\"]\",\"[\"+module+\"]\",msg);\n\t\t\t\t}\n\t\t\t},\n\t\t\terror : function(module, msg) {\n\t\t\t\tif (LOG_LEVEL_ERROR >= log_level) {\n\t\t\t\t\tconsole.error(\"[\"+Log.getDurationString(new Date()-start,1000)+\"]\",\"[\"+module+\"]\",msg);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn logObject;\n\t})();\n\t\n/* Helper function to print a duration value in the form H:MM:SS.MS */\nLog.getDurationString = function(duration, _timescale) {\n\tvar neg;\n\t/* Helper function to print a number on a fixed number of digits */\n\tfunction pad(number, length) {\n\t\tvar str = '' + number;\n\t\tvar a = str.split('.');\t\t\n\t\twhile (a[0].length < length) {\n\t\t\ta[0] = '0' + a[0];\n\t\t}\n\t\treturn a.join('.');\n\t}\n\tif (duration < 0) {\n\t\tneg = true;\n\t\tduration = -duration;\n\t} else {\n\t\tneg = false;\t\n\t}\n\tvar timescale = _timescale || 1;\n\tvar duration_sec = duration/timescale;\n\tvar hours = Math.floor(duration_sec/3600);\n\tduration_sec -= hours * 3600;\n\tvar minutes = Math.floor(duration_sec/60);\n\tduration_sec -= minutes * 60;\t\t\n\tvar msec = duration_sec*1000;\n\tduration_sec = Math.floor(duration_sec);\n\tmsec -= duration_sec*1000;\n\tmsec = Math.floor(msec);\n\treturn (neg ? \"-\": \"\")+hours+\":\"+pad(minutes,2)+\":\"+pad(duration_sec,2)+\".\"+pad(msec,3);\n}\n\t\n/* Helper function to stringify HTML5 TimeRanges objects */\t\nLog.printRanges = function(ranges) {\n\tvar length = ranges.length;\n\tif (length > 0) {\n\t\tvar str = \"\";\n\t\tfor (var i = 0; i < length; i++) {\n\t\t  if (i > 0) str += \",\";\n\t\t  str += \"[\"+Log.getDurationString(ranges.start(i))+ \",\"+Log.getDurationString(ranges.end(i))+\"]\";\n\t\t}\n\t\treturn str;\n\t} else {\n\t\treturn \"(empty)\";\n\t}\n}\n\nif (typeof exports !== 'undefined') {\n\texports.Log = Log;\n}\n// file:src/stream.js\nvar MP4BoxStream = function(arrayBuffer) {\n  if (arrayBuffer instanceof ArrayBuffer) {\n    this.buffer = arrayBuffer;\n    this.dataview = new DataView(arrayBuffer);\n  } else {\n    throw (\"Needs an array buffer\");\n  }\n  this.position = 0;\n};\n\n/*************************************************************************\n  Common API between MultiBufferStream and SimpleStream\n *************************************************************************/\nMP4BoxStream.prototype.getPosition = function() {\n  return this.position;\n}\n\nMP4BoxStream.prototype.getEndPosition = function() {\n  return this.buffer.byteLength;\n}\n\nMP4BoxStream.prototype.getLength = function() {\n  return this.buffer.byteLength;\n}\n\nMP4BoxStream.prototype.seek = function (pos) {\n  var npos = Math.max(0, Math.min(this.buffer.byteLength, pos));\n  this.position = (isNaN(npos) || !isFinite(npos)) ? 0 : npos;\n  return true;\n}\n\nMP4BoxStream.prototype.isEos = function () {\n  return this.getPosition() >= this.getEndPosition();\n}\n\n/*************************************************************************\n  Read methods, simimar to DataStream but simpler\n *************************************************************************/\nMP4BoxStream.prototype.readAnyInt = function(size, signed) {\n  var res = 0;\n  if (this.position + size <= this.buffer.byteLength) {\n    switch (size) {\n      case 1:\n        if (signed) {\n          res = this.dataview.getInt8(this.position);\n        } else {\n          res = this.dataview.getUint8(this.position);\n        }\n        break;\n      case 2:\n        if (signed) {\n          res = this.dataview.getInt16(this.position);\n        } else {\n          res = this.dataview.getUint16(this.position);\n        }\n        break;\n      case 3:\n        if (signed) {\n          throw (\"No method for reading signed 24 bits values\");\n        } else {\n          res = this.dataview.getUint8(this.position) << 16;\n          res |= this.dataview.getUint8(this.position+1) << 8;\n          res |= this.dataview.getUint8(this.position+2);\n        }\n        break;\n      case 4:\n        if (signed) {\n          res = this.dataview.getInt32(this.position);\n        } else {\n          res = this.dataview.getUint32(this.position);\n        }\n        break;\n      case 8:\n        if (signed) {\n          throw (\"No method for reading signed 64 bits values\");\n        } else {\n          res = this.dataview.getUint32(this.position) << 32;\n          res |= this.dataview.getUint32(this.position+4);\n        }\n        break;\n      default:\n        throw (\"readInt method not implemented for size: \"+size);\n    }\n    this.position+= size;\n    return res;\n  } else {\n    throw (\"Not enough bytes in buffer\");\n  }\n}\n\nMP4BoxStream.prototype.readUint8 = function() {\n  return this.readAnyInt(1, false);\n}\n\nMP4BoxStream.prototype.readUint16 = function() {\n  return this.readAnyInt(2, false);\n}\n\nMP4BoxStream.prototype.readUint24 = function() {\n  return this.readAnyInt(3, false);\n}\n\nMP4BoxStream.prototype.readUint32 = function() {\n  return this.readAnyInt(4, false);\n}\n\nMP4BoxStream.prototype.readUint64 = function() {\n  return this.readAnyInt(8, false);\n}\n\nMP4BoxStream.prototype.readString = function(length) {\n  if (this.position + length <= this.buffer.byteLength) {\n    var s = \"\";\n    for (var i = 0; i < length; i++) {\n      s += String.fromCharCode(this.readUint8());\n    }\n    return s;\n  } else {\n    throw (\"Not enough bytes in buffer\");\n  }\n}\n\nMP4BoxStream.prototype.readCString = function() {\n  var arr = [];\n  while(true) {\n    var b = this.readUint8();\n    if (b !== 0) {\n      arr.push(b);\n    } else {\n      break;\n    }\n  }\n  return String.fromCharCode.apply(null, arr); \n}\n\nMP4BoxStream.prototype.readInt8 = function() {\n  return this.readAnyInt(1, true);\n}\n\nMP4BoxStream.prototype.readInt16 = function() {\n  return this.readAnyInt(2, true);\n}\n\nMP4BoxStream.prototype.readInt32 = function() {\n  return this.readAnyInt(4, true);\n}\n\nMP4BoxStream.prototype.readInt64 = function() {\n  return this.readAnyInt(8, false);\n}\n\nMP4BoxStream.prototype.readUint8Array = function(length) {\n  var arr = new Uint8Array(length);\n  for (var i = 0; i < length; i++) {\n    arr[i] = this.readUint8();\n  }\n  return arr;\n}\n\nMP4BoxStream.prototype.readInt16Array = function(length) {\n  var arr = new Int16Array(length);\n  for (var i = 0; i < length; i++) {\n    arr[i] = this.readInt16();\n  }\n  return arr;\n}\n\nMP4BoxStream.prototype.readUint16Array = function(length) {\n  var arr = new Int16Array(length);\n  for (var i = 0; i < length; i++) {\n    arr[i] = this.readUint16();\n  }\n  return arr;\n}\n\nMP4BoxStream.prototype.readUint32Array = function(length) {\n  var arr = new Uint32Array(length);\n  for (var i = 0; i < length; i++) {\n    arr[i] = this.readUint32();\n  }\n  return arr;\n}\n\nMP4BoxStream.prototype.readInt32Array = function(length) {\n  var arr = new Int32Array(length);\n  for (var i = 0; i < length; i++) {\n    arr[i] = this.readInt32();\n  }\n  return arr;\n}\n\nif (typeof exports !== 'undefined') {\n  exports.MP4BoxStream = MP4BoxStream;\n}// file:src/DataStream.js\n/**\n  DataStream reads scalars, arrays and structs of data from an ArrayBuffer.\n  It's like a file-like DataView on steroids.\n\n  @param {ArrayBuffer} arrayBuffer ArrayBuffer to read from.\n  @param {?Number} byteOffset Offset from arrayBuffer beginning for the DataStream.\n  @param {?Boolean} endianness DataStream.BIG_ENDIAN or DataStream.LITTLE_ENDIAN (the default).\n  */\nvar DataStream = function(arrayBuffer, byteOffset, endianness) {\n  this._byteOffset = byteOffset || 0;\n  if (arrayBuffer instanceof ArrayBuffer) {\n    this.buffer = arrayBuffer;\n  } else if (typeof arrayBuffer == \"object\") {\n    this.dataView = arrayBuffer;\n    if (byteOffset) {\n      this._byteOffset += byteOffset;\n    }\n  } else {\n    this.buffer = new ArrayBuffer(arrayBuffer || 0);\n  }\n  this.position = 0;\n  this.endianness = endianness == null ? DataStream.LITTLE_ENDIAN : endianness;\n};\nDataStream.prototype = {};\n\nDataStream.prototype.getPosition = function() {\n  return this.position;\n}\n\n/**\n  Internal function to resize the DataStream buffer when required.\n  @param {number} extra Number of bytes to add to the buffer allocation.\n  @return {null}\n  */\nDataStream.prototype._realloc = function(extra) {\n  if (!this._dynamicSize) {\n    return;\n  }\n  var req = this._byteOffset + this.position + extra;\n  var blen = this._buffer.byteLength;\n  if (req <= blen) {\n    if (req > this._byteLength) {\n      this._byteLength = req;\n    }\n    return;\n  }\n  if (blen < 1) {\n    blen = 1;\n  }\n  while (req > blen) {\n    blen *= 2;\n  }\n  var buf = new ArrayBuffer(blen);\n  var src = new Uint8Array(this._buffer);\n  var dst = new Uint8Array(buf, 0, src.length);\n  dst.set(src);\n  this.buffer = buf;\n  this._byteLength = req;\n};\n\n/**\n  Internal function to trim the DataStream buffer when required.\n  Used for stripping out the extra bytes from the backing buffer when\n  the virtual byteLength is smaller than the buffer byteLength (happens after\n  growing the buffer with writes and not filling the extra space completely).\n\n  @return {null}\n  */\nDataStream.prototype._trimAlloc = function() {\n  if (this._byteLength == this._buffer.byteLength) {\n    return;\n  }\n  var buf = new ArrayBuffer(this._byteLength);\n  var dst = new Uint8Array(buf);\n  var src = new Uint8Array(this._buffer, 0, dst.length);\n  dst.set(src);\n  this.buffer = buf;\n};\n\n\n/**\n  Big-endian const to use as default endianness.\n  @type {boolean}\n  */\nDataStream.BIG_ENDIAN = false;\n\n/**\n  Little-endian const to use as default endianness.\n  @type {boolean}\n  */\nDataStream.LITTLE_ENDIAN = true;\n\n/**\n  Virtual byte length of the DataStream backing buffer.\n  Updated to be max of original buffer size and last written size.\n  If dynamicSize is false is set to buffer size.\n  @type {number}\n  */\nDataStream.prototype._byteLength = 0;\n\n/**\n  Returns the byte length of the DataStream object.\n  @type {number}\n  */\nObject.defineProperty(DataStream.prototype, 'byteLength',\n  { get: function() {\n    return this._byteLength - this._byteOffset;\n  }});\n\n/**\n  Set/get the backing ArrayBuffer of the DataStream object.\n  The setter updates the DataView to point to the new buffer.\n  @type {Object}\n  */\nObject.defineProperty(DataStream.prototype, 'buffer',\n  { get: function() {\n      this._trimAlloc();\n      return this._buffer;\n    },\n    set: function(v) {\n      this._buffer = v;\n      this._dataView = new DataView(this._buffer, this._byteOffset);\n      this._byteLength = this._buffer.byteLength;\n    } });\n\n/**\n  Set/get the byteOffset of the DataStream object.\n  The setter updates the DataView to point to the new byteOffset.\n  @type {number}\n  */\nObject.defineProperty(DataStream.prototype, 'byteOffset',\n  { get: function() {\n      return this._byteOffset;\n    },\n    set: function(v) {\n      this._byteOffset = v;\n      this._dataView = new DataView(this._buffer, this._byteOffset);\n      this._byteLength = this._buffer.byteLength;\n    } });\n\n/**\n  Set/get the backing DataView of the DataStream object.\n  The setter updates the buffer and byteOffset to point to the DataView values.\n  @type {Object}\n  */\nObject.defineProperty(DataStream.prototype, 'dataView',\n  { get: function() {\n      return this._dataView;\n    },\n    set: function(v) {\n      this._byteOffset = v.byteOffset;\n      this._buffer = v.buffer;\n      this._dataView = new DataView(this._buffer, this._byteOffset);\n      this._byteLength = this._byteOffset + v.byteLength;\n    } });\n\n/**\n  Sets the DataStream read/write position to given position.\n  Clamps between 0 and DataStream length.\n\n  @param {number} pos Position to seek to.\n  @return {null}\n  */\nDataStream.prototype.seek = function(pos) {\n  var npos = Math.max(0, Math.min(this.byteLength, pos));\n  this.position = (isNaN(npos) || !isFinite(npos)) ? 0 : npos;\n};\n\n/**\n  Returns true if the DataStream seek pointer is at the end of buffer and\n  there's no more data to read.\n\n  @return {boolean} True if the seek pointer is at the end of the buffer.\n  */\nDataStream.prototype.isEof = function() {\n  return (this.position >= this._byteLength);\n};\n\n\n/**\n  Maps a Uint8Array into the DataStream buffer.\n\n  Nice for quickly reading in data.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Uint8Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapUint8Array = function(length) {\n  this._realloc(length * 1);\n  var arr = new Uint8Array(this._buffer, this.byteOffset+this.position, length);\n  this.position += length * 1;\n  return arr;\n};\n\n\n/**\n  Reads an Int32Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Int32Array.\n */\nDataStream.prototype.readInt32Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 4) : length;\n  var arr = new Int32Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads an Int16Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Int16Array.\n */\nDataStream.prototype.readInt16Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 2) : length;\n  var arr = new Int16Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads an Int8Array of desired length from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Int8Array.\n */\nDataStream.prototype.readInt8Array = function(length) {\n  length = length == null ? (this.byteLength-this.position) : length;\n  var arr = new Int8Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads a Uint32Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Uint32Array.\n */\nDataStream.prototype.readUint32Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 4) : length;\n  var arr = new Uint32Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads a Uint16Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Uint16Array.\n */\nDataStream.prototype.readUint16Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 2) : length;\n  var arr = new Uint16Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads a Uint8Array of desired length from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Uint8Array.\n */\nDataStream.prototype.readUint8Array = function(length) {\n  length = length == null ? (this.byteLength-this.position) : length;\n  var arr = new Uint8Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads a Float64Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Float64Array.\n */\nDataStream.prototype.readFloat64Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 8) : length;\n  var arr = new Float64Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads a Float32Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Float32Array.\n */\nDataStream.prototype.readFloat32Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 4) : length;\n  var arr = new Float32Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n\n/**\n  Reads a 32-bit int from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readInt32 = function(e) {\n  var v = this._dataView.getInt32(this.position, e == null ? this.endianness : e);\n  this.position += 4;\n  return v;\n};\n\n/**\n  Reads a 16-bit int from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readInt16 = function(e) {\n  var v = this._dataView.getInt16(this.position, e == null ? this.endianness : e);\n  this.position += 2;\n  return v;\n};\n\n/**\n  Reads an 8-bit int from the DataStream.\n\n  @return {number} The read number.\n */\nDataStream.prototype.readInt8 = function() {\n  var v = this._dataView.getInt8(this.position);\n  this.position += 1;\n  return v;\n};\n\n/**\n  Reads a 32-bit unsigned int from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readUint32 = function(e) {\n  var v = this._dataView.getUint32(this.position, e == null ? this.endianness : e);\n  this.position += 4;\n  return v;\n};\n\n/**\n  Reads a 16-bit unsigned int from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readUint16 = function(e) {\n  var v = this._dataView.getUint16(this.position, e == null ? this.endianness : e);\n  this.position += 2;\n  return v;\n};\n\n/**\n  Reads an 8-bit unsigned int from the DataStream.\n\n  @return {number} The read number.\n */\nDataStream.prototype.readUint8 = function() {\n  var v = this._dataView.getUint8(this.position);\n  this.position += 1;\n  return v;\n};\n\n/**\n  Reads a 32-bit float from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readFloat32 = function(e) {\n  var v = this._dataView.getFloat32(this.position, e == null ? this.endianness : e);\n  this.position += 4;\n  return v;\n};\n\n/**\n  Reads a 64-bit float from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readFloat64 = function(e) {\n  var v = this._dataView.getFloat64(this.position, e == null ? this.endianness : e);\n  this.position += 8;\n  return v;\n};\n\n/**\n  Native endianness. Either DataStream.BIG_ENDIAN or DataStream.LITTLE_ENDIAN\n  depending on the platform endianness.\n\n  @type {boolean}\n */\nDataStream.endianness = new Int8Array(new Int16Array([1]).buffer)[0] > 0;\n\n/**\n  Copies byteLength bytes from the src buffer at srcOffset to the\n  dst buffer at dstOffset.\n\n  @param {Object} dst Destination ArrayBuffer to write to.\n  @param {number} dstOffset Offset to the destination ArrayBuffer.\n  @param {Object} src Source ArrayBuffer to read from.\n  @param {number} srcOffset Offset to the source ArrayBuffer.\n  @param {number} byteLength Number of bytes to copy.\n */\nDataStream.memcpy = function(dst, dstOffset, src, srcOffset, byteLength) {\n  var dstU8 = new Uint8Array(dst, dstOffset, byteLength);\n  var srcU8 = new Uint8Array(src, srcOffset, byteLength);\n  dstU8.set(srcU8);\n};\n\n/**\n  Converts array to native endianness in-place.\n\n  @param {Object} array Typed array to convert.\n  @param {boolean} arrayIsLittleEndian True if the data in the array is\n                                       little-endian. Set false for big-endian.\n  @return {Object} The converted typed array.\n */\nDataStream.arrayToNative = function(array, arrayIsLittleEndian) {\n  if (arrayIsLittleEndian == this.endianness) {\n    return array;\n  } else {\n    return this.flipArrayEndianness(array);\n  }\n};\n\n/**\n  Converts native endianness array to desired endianness in-place.\n\n  @param {Object} array Typed array to convert.\n  @param {boolean} littleEndian True if the converted array should be\n                                little-endian. Set false for big-endian.\n  @return {Object} The converted typed array.\n */\nDataStream.nativeToEndian = function(array, littleEndian) {\n  if (this.endianness == littleEndian) {\n    return array;\n  } else {\n    return this.flipArrayEndianness(array);\n  }\n};\n\n/**\n  Flips typed array endianness in-place.\n\n  @param {Object} array Typed array to flip.\n  @return {Object} The converted typed array.\n */\nDataStream.flipArrayEndianness = function(array) {\n  var u8 = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n  for (var i=0; i<array.byteLength; i+=array.BYTES_PER_ELEMENT) {\n    for (var j=i+array.BYTES_PER_ELEMENT-1, k=i; j>k; j--, k++) {\n      var tmp = u8[k];\n      u8[k] = u8[j];\n      u8[j] = tmp;\n    }\n  }\n  return array;\n};\n\n/**\n  Seek position where DataStream#readStruct ran into a problem.\n  Useful for debugging struct parsing.\n\n  @type {number}\n */\nDataStream.prototype.failurePosition = 0;\n\nString.fromCharCodeUint8 = function(uint8arr) {\n    var arr = [];\n    for (var i = 0; i < uint8arr.length; i++) {\n      arr[i] = uint8arr[i];\n    }\n    return String.fromCharCode.apply(null, arr);\n}\n/**\n  Read a string of desired length and encoding from the DataStream.\n\n  @param {number} length The length of the string to read in bytes.\n  @param {?string} encoding The encoding of the string data in the DataStream.\n                            Defaults to ASCII.\n  @return {string} The read string.\n */\nDataStream.prototype.readString = function(length, encoding) {\n  if (encoding == null || encoding == \"ASCII\") {\n    return String.fromCharCodeUint8.apply(null, [this.mapUint8Array(length == null ? this.byteLength-this.position : length)]);\n  } else {\n    return (new TextDecoder(encoding)).decode(this.mapUint8Array(length));\n  }\n};\n\n/**\n  Read null-terminated string of desired length from the DataStream. Truncates\n  the returned string so that the null byte is not a part of it.\n\n  @param {?number} length The length of the string to read.\n  @return {string} The read string.\n */\nDataStream.prototype.readCString = function(length) {\n  var blen = this.byteLength-this.position;\n  var u8 = new Uint8Array(this._buffer, this._byteOffset + this.position);\n  var len = blen;\n  if (length != null) {\n    len = Math.min(length, blen);\n  }\n  for (var i = 0; i < len && u8[i] !== 0; i++); // find first zero byte\n  var s = String.fromCharCodeUint8.apply(null, [this.mapUint8Array(i)]);\n  if (length != null) {\n    this.position += len-i;\n  } else if (i != blen) {\n    this.position += 1; // trailing zero if not at end of buffer\n  }\n  return s;\n};\n\n/* \n   TODO: fix endianness for 24/64-bit fields\n   TODO: check range/support for 64-bits numbers in JavaScript\n*/\nvar MAX_SIZE = Math.pow(2, 32);\n\nDataStream.prototype.readInt64 = function () {\n  return (this.readInt32()*MAX_SIZE)+this.readUint32();\n}\nDataStream.prototype.readUint64 = function () {\n\treturn (this.readUint32()*MAX_SIZE)+this.readUint32();\n}\n\nDataStream.prototype.readInt64 = function () {\n  return (this.readUint32()*MAX_SIZE)+this.readUint32();\n}\n\nDataStream.prototype.readUint24 = function () {\n\treturn (this.readUint8()<<16)+(this.readUint8()<<8)+this.readUint8();\n}\n\nif (typeof exports !== 'undefined') {\n  exports.DataStream = DataStream;  \n}\n// file:src/DataStream-write.js\n/**\n  Saves the DataStream contents to the given filename.\n  Uses Chrome's anchor download property to initiate download.\n \n  @param {string} filename Filename to save as.\n  @return {null}\n  */\nDataStream.prototype.save = function(filename) {\n  var blob = new Blob([this.buffer]);\n  if (window.URL && URL.createObjectURL) {\n      var url = window.URL.createObjectURL(blob);\n      var a = document.createElement('a');\n      // Required in Firefox:\n      document.body.appendChild(a);\n      a.setAttribute('href', url);\n      a.setAttribute('download', filename);\n      // Required in Firefox:\n      a.setAttribute('target', '_self');\n      a.click();\n      window.URL.revokeObjectURL(url);\n  } else {\n      throw(\"DataStream.save: Can't create object URL.\");\n  }\n};\n\n/**\n  Whether to extend DataStream buffer when trying to write beyond its size.\n  If set, the buffer is reallocated to twice its current size until the\n  requested write fits the buffer.\n  @type {boolean}\n  */\nDataStream.prototype._dynamicSize = true;\nObject.defineProperty(DataStream.prototype, 'dynamicSize',\n  { get: function() {\n      return this._dynamicSize;\n    },\n    set: function(v) {\n      if (!v) {\n        this._trimAlloc();\n      }\n      this._dynamicSize = v;\n    } });\n\n/**\n  Internal function to trim the DataStream buffer when required.\n  Used for stripping out the first bytes when not needed anymore.\n\n  @return {null}\n  */\nDataStream.prototype.shift = function(offset) {\n  var buf = new ArrayBuffer(this._byteLength-offset);\n  var dst = new Uint8Array(buf);\n  var src = new Uint8Array(this._buffer, offset, dst.length);\n  dst.set(src);\n  this.buffer = buf;\n  this.position -= offset;\n};\n\n/**\n  Writes an Int32Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeInt32Array = function(arr, e) {\n  this._realloc(arr.length * 4);\n  if (arr instanceof Int32Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapInt32Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeInt32(arr[i], e);\n    }\n  }\n};\n\n/**\n  Writes an Int16Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeInt16Array = function(arr, e) {\n  this._realloc(arr.length * 2);\n  if (arr instanceof Int16Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapInt16Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeInt16(arr[i], e);\n    }\n  }\n};\n\n/**\n  Writes an Int8Array to the DataStream.\n\n  @param {Object} arr The array to write.\n */\nDataStream.prototype.writeInt8Array = function(arr) {\n  this._realloc(arr.length * 1);\n  if (arr instanceof Int8Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapInt8Array(arr.length);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeInt8(arr[i]);\n    }\n  }\n};\n\n/**\n  Writes a Uint32Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeUint32Array = function(arr, e) {\n  this._realloc(arr.length * 4);\n  if (arr instanceof Uint32Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapUint32Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeUint32(arr[i], e);\n    }\n  }\n};\n\n/**\n  Writes a Uint16Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeUint16Array = function(arr, e) {\n  this._realloc(arr.length * 2);\n  if (arr instanceof Uint16Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapUint16Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeUint16(arr[i], e);\n    }\n  }\n};\n\n/**\n  Writes a Uint8Array to the DataStream.\n\n  @param {Object} arr The array to write.\n */\nDataStream.prototype.writeUint8Array = function(arr) {\n  this._realloc(arr.length * 1);\n  if (arr instanceof Uint8Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapUint8Array(arr.length);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeUint8(arr[i]);\n    }\n  }\n};\n\n/**\n  Writes a Float64Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeFloat64Array = function(arr, e) {\n  this._realloc(arr.length * 8);\n  if (arr instanceof Float64Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapFloat64Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeFloat64(arr[i], e);\n    }\n  }\n};\n\n/**\n  Writes a Float32Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeFloat32Array = function(arr, e) {\n  this._realloc(arr.length * 4);\n  if (arr instanceof Float32Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapFloat32Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeFloat32(arr[i], e);\n    }\n  }\n};\n\n\n/**\n  Writes a 32-bit int to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeInt32 = function(v, e) {\n  this._realloc(4);\n  this._dataView.setInt32(this.position, v, e == null ? this.endianness : e);\n  this.position += 4;\n};\n\n/**\n  Writes a 16-bit int to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeInt16 = function(v, e) {\n  this._realloc(2);\n  this._dataView.setInt16(this.position, v, e == null ? this.endianness : e);\n  this.position += 2;\n};\n\n/**\n  Writes an 8-bit int to the DataStream.\n\n  @param {number} v Number to write.\n */\nDataStream.prototype.writeInt8 = function(v) {\n  this._realloc(1);\n  this._dataView.setInt8(this.position, v);\n  this.position += 1;\n};\n\n/**\n  Writes a 32-bit unsigned int to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeUint32 = function(v, e) {\n  this._realloc(4);\n  this._dataView.setUint32(this.position, v, e == null ? this.endianness : e);\n  this.position += 4;\n};\n\n/**\n  Writes a 16-bit unsigned int to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeUint16 = function(v, e) {\n  this._realloc(2);\n  this._dataView.setUint16(this.position, v, e == null ? this.endianness : e);\n  this.position += 2;\n};\n\n/**\n  Writes an 8-bit unsigned  int to the DataStream.\n\n  @param {number} v Number to write.\n */\nDataStream.prototype.writeUint8 = function(v) {\n  this._realloc(1);\n  this._dataView.setUint8(this.position, v);\n  this.position += 1;\n};\n\n/**\n  Writes a 32-bit float to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeFloat32 = function(v, e) {\n  this._realloc(4);\n  this._dataView.setFloat32(this.position, v, e == null ? this.endianness : e);\n  this.position += 4;\n};\n\n/**\n  Writes a 64-bit float to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeFloat64 = function(v, e) {\n  this._realloc(8);\n  this._dataView.setFloat64(this.position, v, e == null ? this.endianness : e);\n  this.position += 8;\n};\n\n/**\n  Write a UCS-2 string of desired endianness to the DataStream. The\n  lengthOverride argument lets you define the number of characters to write.\n  If the string is shorter than lengthOverride, the extra space is padded with\n  zeroes.\n\n  @param {string} str The string to write.\n  @param {?boolean} endianness The endianness to use for the written string data.\n  @param {?number} lengthOverride The number of characters to write.\n */\nDataStream.prototype.writeUCS2String = function(str, endianness, lengthOverride) {\n  if (lengthOverride == null) {\n    lengthOverride = str.length;\n  }\n  for (var i = 0; i < str.length && i < lengthOverride; i++) {\n    this.writeUint16(str.charCodeAt(i), endianness);\n  }\n  for (; i<lengthOverride; i++) {\n    this.writeUint16(0);\n  }\n};\n\n/**\n  Writes a string of desired length and encoding to the DataStream.\n\n  @param {string} s The string to write.\n  @param {?string} encoding The encoding for the written string data.\n                            Defaults to ASCII.\n  @param {?number} length The number of characters to write.\n */\nDataStream.prototype.writeString = function(s, encoding, length) {\n  var i = 0;\n  if (encoding == null || encoding == \"ASCII\") {\n    if (length != null) {\n      var len = Math.min(s.length, length);\n      for (i=0; i<len; i++) {\n        this.writeUint8(s.charCodeAt(i));\n      }\n      for (; i<length; i++) {\n        this.writeUint8(0);\n      }\n    } else {\n      for (i=0; i<s.length; i++) {\n        this.writeUint8(s.charCodeAt(i));\n      }\n    }\n  } else {\n    this.writeUint8Array((new TextEncoder(encoding)).encode(s.substring(0, length)));\n  }\n};\n\n/**\n  Writes a null-terminated string to DataStream and zero-pads it to length\n  bytes. If length is not given, writes the string followed by a zero.\n  If string is longer than length, the written part of the string does not have\n  a trailing zero.\n\n  @param {string} s The string to write.\n  @param {?number} length The number of characters to write.\n */\nDataStream.prototype.writeCString = function(s, length) {\n  var i = 0;\n  if (length != null) {\n    var len = Math.min(s.length, length);\n    for (i=0; i<len; i++) {\n      this.writeUint8(s.charCodeAt(i));\n    }\n    for (; i<length; i++) {\n      this.writeUint8(0);\n    }\n  } else {\n    for (i=0; i<s.length; i++) {\n      this.writeUint8(s.charCodeAt(i));\n    }\n    this.writeUint8(0);\n  }\n};\n\n/**\n  Writes a struct to the DataStream. Takes a structDefinition that gives the\n  types and a struct object that gives the values. Refer to readStruct for the\n  structure of structDefinition.\n\n  @param {Object} structDefinition Type definition of the struct.\n  @param {Object} struct The struct data object.\n  */\nDataStream.prototype.writeStruct = function(structDefinition, struct) {\n  for (var i = 0; i < structDefinition.length; i+=2) {\n    var t = structDefinition[i+1];\n    this.writeType(t, struct[structDefinition[i]], struct);\n  }\n};\n\n/**\n  Writes object v of type t to the DataStream.\n\n  @param {Object} t Type of data to write.\n  @param {Object} v Value of data to write.\n  @param {Object} struct Struct to pass to write callback functions.\n  */\nDataStream.prototype.writeType = function(t, v, struct) {\n  var tp;\n  if (typeof t == \"function\") {\n    return t(this, v);\n  } else if (typeof t == \"object\" && !(t instanceof Array)) {\n    return t.set(this, v, struct);\n  }\n  var lengthOverride = null;\n  var charset = \"ASCII\";\n  var pos = this.position;\n  if (typeof(t) == 'string' && /:/.test(t)) {\n    tp = t.split(\":\");\n    t = tp[0];\n    lengthOverride = parseInt(tp[1]);\n  }\n  if (typeof t == 'string' && /,/.test(t)) {\n    tp = t.split(\",\");\n    t = tp[0];\n    charset = parseInt(tp[1]);\n  }\n\n  switch(t) {\n    case 'uint8':\n      this.writeUint8(v);\n      break;\n    case 'int8':\n      this.writeInt8(v);\n      break;\n\n    case 'uint16':\n      this.writeUint16(v, this.endianness);\n      break;\n    case 'int16':\n      this.writeInt16(v, this.endianness);\n      break;\n    case 'uint32':\n      this.writeUint32(v, this.endianness);\n      break;\n    case 'int32':\n      this.writeInt32(v, this.endianness);\n      break;\n    case 'float32':\n      this.writeFloat32(v, this.endianness);\n      break;\n    case 'float64':\n      this.writeFloat64(v, this.endianness);\n      break;\n\n    case 'uint16be':\n      this.writeUint16(v, DataStream.BIG_ENDIAN);\n      break;\n    case 'int16be':\n      this.writeInt16(v, DataStream.BIG_ENDIAN);\n      break;\n    case 'uint32be':\n      this.writeUint32(v, DataStream.BIG_ENDIAN);\n      break;\n    case 'int32be':\n      this.writeInt32(v, DataStream.BIG_ENDIAN);\n      break;\n    case 'float32be':\n      this.writeFloat32(v, DataStream.BIG_ENDIAN);\n      break;\n    case 'float64be':\n      this.writeFloat64(v, DataStream.BIG_ENDIAN);\n      break;\n\n    case 'uint16le':\n      this.writeUint16(v, DataStream.LITTLE_ENDIAN);\n      break;\n    case 'int16le':\n      this.writeInt16(v, DataStream.LITTLE_ENDIAN);\n      break;\n    case 'uint32le':\n      this.writeUint32(v, DataStream.LITTLE_ENDIAN);\n      break;\n    case 'int32le':\n      this.writeInt32(v, DataStream.LITTLE_ENDIAN);\n      break;\n    case 'float32le':\n      this.writeFloat32(v, DataStream.LITTLE_ENDIAN);\n      break;\n    case 'float64le':\n      this.writeFloat64(v, DataStream.LITTLE_ENDIAN);\n      break;\n\n    case 'cstring':\n      this.writeCString(v, lengthOverride);\n      break;\n\n    case 'string':\n      this.writeString(v, charset, lengthOverride);\n      break;\n\n    case 'u16string':\n      this.writeUCS2String(v, this.endianness, lengthOverride);\n      break;\n\n    case 'u16stringle':\n      this.writeUCS2String(v, DataStream.LITTLE_ENDIAN, lengthOverride);\n      break;\n\n    case 'u16stringbe':\n      this.writeUCS2String(v, DataStream.BIG_ENDIAN, lengthOverride);\n      break;\n\n    default:\n      if (t.length == 3) {\n        var ta = t[1];\n        for (var i=0; i<v.length; i++) {\n          this.writeType(ta, v[i]);\n        }\n        break;\n      } else {\n        this.writeStruct(t, v);\n        break;\n      }\n  }\n  if (lengthOverride != null) {\n    this.position = pos;\n    this._realloc(lengthOverride);\n    this.position = pos + lengthOverride;\n  }\n};\n\n\nDataStream.prototype.writeUint64 = function (v) {\n\tvar h = Math.floor(v / MAX_SIZE);\n\tthis.writeUint32(h);\n\tthis.writeUint32(v & 0xFFFFFFFF);\n}\n\nDataStream.prototype.writeUint24 = function (v) {\n\tthis.writeUint8((v & 0x00FF0000)>>16);\n\tthis.writeUint8((v & 0x0000FF00)>>8);\n\tthis.writeUint8((v & 0x000000FF));\n}\n\nDataStream.prototype.adjustUint32 = function(position, value) {\n\tvar pos = this.position;\n\tthis.seek(position);\n\tthis.writeUint32(value);\n\tthis.seek(pos);\n}\n// file:src/DataStream-map.js\n/**\n  Maps an Int32Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Int32Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapInt32Array = function(length, e) {\n  this._realloc(length * 4);\n  var arr = new Int32Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 4;\n  return arr;\n};\n\n/**\n  Maps an Int16Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Int16Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapInt16Array = function(length, e) {\n  this._realloc(length * 2);\n  var arr = new Int16Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 2;\n  return arr;\n};\n\n/**\n  Maps an Int8Array into the DataStream buffer.\n\n  Nice for quickly reading in data.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Int8Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapInt8Array = function(length) {\n  this._realloc(length * 1);\n  var arr = new Int8Array(this._buffer, this.byteOffset+this.position, length);\n  this.position += length * 1;\n  return arr;\n};\n\n/**\n  Maps a Uint32Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Uint32Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapUint32Array = function(length, e) {\n  this._realloc(length * 4);\n  var arr = new Uint32Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 4;\n  return arr;\n};\n\n/**\n  Maps a Uint16Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Uint16Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapUint16Array = function(length, e) {\n  this._realloc(length * 2);\n  var arr = new Uint16Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 2;\n  return arr;\n};\n\n/**\n  Maps a Float64Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Float64Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapFloat64Array = function(length, e) {\n  this._realloc(length * 8);\n  var arr = new Float64Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 8;\n  return arr;\n};\n\n/**\n  Maps a Float32Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Float32Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapFloat32Array = function(length, e) {\n  this._realloc(length * 4);\n  var arr = new Float32Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 4;\n  return arr;\n};\n// file:src/buffer.js\n/**\n * MultiBufferStream is a class that acts as a SimpleStream for parsing \n * It holds several, possibly non-contiguous ArrayBuffer objects, each with a fileStart property \n * containing the offset for the buffer data in an original/virtual file \n *\n * It inherits also from DataStream for all read/write/alloc operations\n */\n\n/**\n * Constructor\n */\nvar MultiBufferStream = function(buffer) {\n\t/* List of ArrayBuffers, with a fileStart property, sorted in fileStart order and non overlapping */\n\tthis.buffers = [];\t\n\tthis.bufferIndex = -1;\n\tif (buffer) {\n\t\tthis.insertBuffer(buffer);\n\t\tthis.bufferIndex = 0;\n\t}\n}\nMultiBufferStream.prototype = new DataStream(new ArrayBuffer(), 0, DataStream.BIG_ENDIAN);\n\n/************************************************************************************\n  Methods for the managnement of the buffers (insertion, removal, concatenation, ...)\n ***********************************************************************************/\n\nMultiBufferStream.prototype.initialized = function() {\n\tvar firstBuffer;\n\tif (this.bufferIndex > -1) {\n\t\treturn true;\n\t} else if (this.buffers.length > 0) {\n\t\tfirstBuffer = this.buffers[0];\n\t\tif (firstBuffer.fileStart === 0) {\n\t\t\tthis.buffer = firstBuffer;\n\t\t\tthis.bufferIndex = 0;\n\t\t\tLog.debug(\"MultiBufferStream\", \"Stream ready for parsing\");\n\t\t\treturn true;\n\t\t} else {\n\t\t\tLog.warn(\"MultiBufferStream\", \"The first buffer should have a fileStart of 0\");\n\t\t\tthis.logBufferLevel();\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\tLog.warn(\"MultiBufferStream\", \"No buffer to start parsing from\");\n\t\tthis.logBufferLevel();\n\t\treturn false;\n\t}\t\t\t\n}\n\n/**\n * helper functions to concatenate two ArrayBuffer objects\n * @param  {ArrayBuffer} buffer1 \n * @param  {ArrayBuffer} buffer2 \n * @return {ArrayBuffer} the concatenation of buffer1 and buffer2 in that order\n */\nArrayBuffer.concat = function(buffer1, buffer2) {\n  Log.debug(\"ArrayBuffer\", \"Trying to create a new buffer of size: \"+(buffer1.byteLength + buffer2.byteLength));\n  var tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n  tmp.set(new Uint8Array(buffer1), 0);\n  tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n  return tmp.buffer;\n};\n\n/**\n * Reduces the size of a given buffer, but taking the part between offset and offset+newlength\n * @param  {ArrayBuffer} buffer    \n * @param  {Number}      offset    the start of new buffer\n * @param  {Number}      newLength the length of the new buffer\n * @return {ArrayBuffer}           the new buffer\n */\nMultiBufferStream.prototype.reduceBuffer = function(buffer, offset, newLength) {\n\tvar smallB;\n\tsmallB = new Uint8Array(newLength);\n\tsmallB.set(new Uint8Array(buffer, offset, newLength));\n\tsmallB.buffer.fileStart = buffer.fileStart+offset;\n\tsmallB.buffer.usedBytes = 0;\n\treturn smallB.buffer;\t\n}\n\n/**\n * Inserts the new buffer in the sorted list of buffers,\n *  making sure, it is not overlapping with existing ones (possibly reducing its size).\n *  if the new buffer overrides/replaces the 0-th buffer (for instance because it is bigger), \n *  updates the DataStream buffer for parsing \n*/\nMultiBufferStream.prototype.insertBuffer = function(ab) {\t\n\tvar to_add = true;\n\t/* TODO: improve insertion if many buffers */\n\tfor (var i = 0; i < this.buffers.length; i++) {\n\t\tvar b = this.buffers[i];\n\t\tif (ab.fileStart <= b.fileStart) {\n\t\t\t/* the insertion position is found */\n\t\t\tif (ab.fileStart === b.fileStart) {\n\t\t\t\t/* The new buffer overlaps with an existing buffer */\n\t\t\t\tif (ab.byteLength >  b.byteLength) {\n\t\t\t\t\t/* the new buffer is bigger than the existing one\n\t\t\t\t\t   remove the existing buffer and try again to insert \n\t\t\t\t\t   the new buffer to check overlap with the next ones */\n\t\t\t\t\tthis.buffers.splice(i, 1);\n\t\t\t\t\ti--; \n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\t/* the new buffer is smaller than the existing one, just drop it */\n\t\t\t\t\tLog.warn(\"MultiBufferStream\", \"Buffer (fileStart: \"+ab.fileStart+\" - Length: \"+ab.byteLength+\") already appended, ignoring\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/* The beginning of the new buffer is not overlapping with an existing buffer\n\t\t\t\t   let's check the end of it */\n\t\t\t\tif (ab.fileStart + ab.byteLength <= b.fileStart) {\n\t\t\t\t\t/* no overlap, we can add it as is */\n\t\t\t\t} else {\n\t\t\t\t\t/* There is some overlap, cut the new buffer short, and add it*/\n\t\t\t\t\tab = this.reduceBuffer(ab, 0, b.fileStart - ab.fileStart);\n\t\t\t\t}\n\t\t\t\tLog.debug(\"MultiBufferStream\", \"Appending new buffer (fileStart: \"+ab.fileStart+\" - Length: \"+ab.byteLength+\")\");\n\t\t\t\tthis.buffers.splice(i, 0, ab);\n\t\t\t\t/* if this new buffer is inserted in the first place in the list of the buffer, \n\t\t\t\t   and the DataStream is initialized, make it the buffer used for parsing */\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tthis.buffer = ab;\n\t\t\t\t}\n\t\t\t}\n\t\t\tto_add = false;\n\t\t\tbreak;\n\t\t} else if (ab.fileStart < b.fileStart + b.byteLength) {\n\t\t\t/* the new buffer overlaps its beginning with the end of the current buffer */\n\t\t\tvar offset = b.fileStart + b.byteLength - ab.fileStart;\n\t\t\tvar newLength = ab.byteLength - offset;\n\t\t\tif (newLength > 0) {\n\t\t\t\t/* the new buffer is bigger than the current overlap, drop the overlapping part and try again inserting the remaining buffer */\n\t\t\t\tab = this.reduceBuffer(ab, offset, newLength);\n\t\t\t} else {\n\t\t\t\t/* the content of the new buffer is entirely contained in the existing buffer, drop it entirely */\n\t\t\t\tto_add = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t/* if the buffer has not been added, we can add it at the end */\n\tif (to_add) {\n\t\tLog.debug(\"MultiBufferStream\", \"Appending new buffer (fileStart: \"+ab.fileStart+\" - Length: \"+ab.byteLength+\")\");\n\t\tthis.buffers.push(ab);\n\t\t/* if this new buffer is inserted in the first place in the list of the buffer, \n\t\t   and the DataStream is initialized, make it the buffer used for parsing */\n\t\tif (i === 0) {\n\t\t\tthis.buffer = ab;\n\t\t}\n\t}\n}\n\n/**\n * Displays the status of the buffers (number and used bytes)\n * @param  {Object} info callback method for display\n */\nMultiBufferStream.prototype.logBufferLevel = function(info) {\n\tvar i;\n\tvar buffer;\n\tvar used, total;\n\tvar ranges = [];\n\tvar range;\n\tvar bufferedString = \"\";\n\tused = 0;\n\ttotal = 0;\n\tfor (i = 0; i < this.buffers.length; i++) {\n\t\tbuffer = this.buffers[i];\n\t\tif (i === 0) {\n\t\t\trange = {};\n\t\t\tranges.push(range);\n\t\t\trange.start = buffer.fileStart;\n\t\t\trange.end = buffer.fileStart+buffer.byteLength;\n\t\t\tbufferedString += \"[\"+range.start+\"-\";\n\t\t} else if (range.end === buffer.fileStart) {\n\t\t\trange.end = buffer.fileStart+buffer.byteLength;\n\t\t} else {\n\t\t\trange = {};\n\t\t\trange.start = buffer.fileStart;\n\t\t\tbufferedString += (ranges[ranges.length-1].end-1)+\"], [\"+range.start+\"-\";\n\t\t\trange.end = buffer.fileStart+buffer.byteLength;\n\t\t\tranges.push(range);\n\t\t}\n\t\tused += buffer.usedBytes;\n\t\ttotal += buffer.byteLength;\n\t}\n\tif (ranges.length > 0) {\n\t\tbufferedString += (range.end-1)+\"]\";\n\t}\n\tvar log = (info ? Log.info : Log.debug)\n\tif (this.buffers.length === 0) {\n\t\tlog(\"MultiBufferStream\", \"No more buffer in memory\");\n\t} else {\n\t\tlog(\"MultiBufferStream\", \"\"+this.buffers.length+\" stored buffer(s) (\"+used+\"/\"+total+\" bytes), continuous ranges: \"+bufferedString);\n\t}\n}\n\nMultiBufferStream.prototype.cleanBuffers = function () {\n\tvar i;\n\tvar buffer;\n\tfor (i = 0; i < this.buffers.length; i++) {\n\t\tbuffer = this.buffers[i];\n\t\tif (buffer.usedBytes === buffer.byteLength) {\n\t\t\tLog.debug(\"MultiBufferStream\", \"Removing buffer #\"+i);\n\t\t\tthis.buffers.splice(i, 1);\n\t\t\ti--;\n\t\t}\n\t}\n}\n\nMultiBufferStream.prototype.mergeNextBuffer = function() {\n\tvar next_buffer;\n\tif (this.bufferIndex+1 < this.buffers.length) {\n\t\tnext_buffer = this.buffers[this.bufferIndex+1];\n\t\tif (next_buffer.fileStart === this.buffer.fileStart + this.buffer.byteLength) {\n\t\t\tvar oldLength = this.buffer.byteLength;\n\t\t\tvar oldUsedBytes = this.buffer.usedBytes;\n\t\t\tvar oldFileStart = this.buffer.fileStart;\n\t\t\tthis.buffers[this.bufferIndex] = ArrayBuffer.concat(this.buffer, next_buffer);\n\t\t\tthis.buffer = this.buffers[this.bufferIndex];\n\t\t\tthis.buffers.splice(this.bufferIndex+1, 1);\n\t\t\tthis.buffer.usedBytes = oldUsedBytes; /* TODO: should it be += ? */\n\t\t\tthis.buffer.fileStart = oldFileStart;\n\t\t\tLog.debug(\"ISOFile\", \"Concatenating buffer for box parsing (length: \"+oldLength+\"->\"+this.buffer.byteLength+\")\");\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\n\n\n/*************************************************************************\n  Seek-related functions\n *************************************************************************/\n\n/**\n * Finds the buffer that holds the given file position\n * @param  {Boolean} fromStart    indicates if the search should start from the current buffer (false) \n *                                or from the first buffer (true)\n * @param  {Number}  filePosition position in the file to seek to\n * @param  {Boolean} markAsUsed   indicates if the bytes in between the current position and the seek position \n *                                should be marked as used for garbage collection\n * @return {Number}               the index of the buffer holding the seeked file position, -1 if not found.\n */\nMultiBufferStream.prototype.findPosition = function(fromStart, filePosition, markAsUsed) {\n\tvar i;\n\tvar abuffer = null;\n\tvar index = -1;\n\n\t/* find the buffer with the largest position smaller than the given position */\n\tif (fromStart === true) {\n\t   /* the reposition can be in the past, we need to check from the beginning of the list of buffers */\n\t\ti = 0;\n\t} else {\n\t\ti = this.bufferIndex;\n\t}\n\n\twhile (i < this.buffers.length) {\n\t\tabuffer = this.buffers[i];\n\t\tif (abuffer.fileStart <= filePosition) {\n\t\t\tindex = i;\n\t\t\tif (markAsUsed) {\n\t\t\t\tif (abuffer.fileStart + abuffer.byteLength <= filePosition) {\n\t\t\t\t\tabuffer.usedBytes = abuffer.byteLength;\t\n\t\t\t\t} else {\n\t\t\t\t\tabuffer.usedBytes = filePosition - abuffer.fileStart;\n\t\t\t\t}\t\t\n\t\t\t\tthis.logBufferLevel();\t\n\t\t\t}\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\n\tif (index !== -1) {\n\t\tabuffer = this.buffers[index];\n\t\tif (abuffer.fileStart + abuffer.byteLength >= filePosition) {\t\t\t\n\t\t\tLog.debug(\"MultiBufferStream\", \"Found position in existing buffer #\"+index);\n\t\t\treturn index;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/**\n * Finds the largest file position contained in a buffer or in the next buffers if they are contiguous (no gap)\n * starting from the given buffer index or from the current buffer if the index is not given\n *\n * @param  {Number} inputindex Index of the buffer to start from\n * @return {Number}            The largest file position found in the buffers\n */\nMultiBufferStream.prototype.findEndContiguousBuf = function(inputindex) {\n\tvar i;\n\tvar currentBuf;\n\tvar nextBuf;\n\tvar index = (inputindex !== undefined ? inputindex : this.bufferIndex);\n\tcurrentBuf = this.buffers[index];\n\t/* find the end of the contiguous range of data */\n\tif (this.buffers.length > index+1) {\n\t\tfor (i = index+1; i < this.buffers.length; i++) {\n\t\t\tnextBuf = this.buffers[i];\n\t\t\tif (nextBuf.fileStart === currentBuf.fileStart + currentBuf.byteLength) {\n\t\t\t\tcurrentBuf = nextBuf;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t/* return the position of last byte in the file that we have */\n\treturn currentBuf.fileStart + currentBuf.byteLength;\n}\n\n/**\n * Returns the largest file position contained in the buffers, larger than the given position\n * @param  {Number} pos the file position to start from\n * @return {Number}     the largest position in the current buffer or in the buffer and the next contiguous \n *                      buffer that holds the given position\n */\nMultiBufferStream.prototype.getEndFilePositionAfter = function(pos) {\n\tvar index = this.findPosition(true, pos, false);\n\tif (index !== -1) {\n\t\treturn this.findEndContiguousBuf(index);\n\t} else {\n\t\treturn pos;\n\t}\n}\n\n/*************************************************************************\n  Garbage collection related functions\n *************************************************************************/\n\n/**\n * Marks a given number of bytes as used in the current buffer for garbage collection\n * @param {Number} nbBytes \n */\nMultiBufferStream.prototype.addUsedBytes = function(nbBytes) {\n\tthis.buffer.usedBytes += nbBytes;\n\tthis.logBufferLevel();\n}\n\n/**\n * Marks the entire current buffer as used, ready for garbage collection\n */\nMultiBufferStream.prototype.setAllUsedBytes = function() {\n\tthis.buffer.usedBytes = this.buffer.byteLength;\n\tthis.logBufferLevel();\n}\n\n/*************************************************************************\n  Common API between MultiBufferStream and SimpleStream\n *************************************************************************/\n\n/**\n * Tries to seek to a given file position\n * if possible, repositions the parsing from there and returns true \n * if not possible, does not change anything and returns false \n * @param  {Number}  filePosition position in the file to seek to\n * @param  {Boolean} fromStart    indicates if the search should start from the current buffer (false) \n *                                or from the first buffer (true)\n * @param  {Boolean} markAsUsed   indicates if the bytes in between the current position and the seek position \n *                                should be marked as used for garbage collection\n * @return {Boolean}              true if the seek succeeded, false otherwise\n */\nMultiBufferStream.prototype.seek = function(filePosition, fromStart, markAsUsed) {\n\tvar index;\n\tindex = this.findPosition(fromStart, filePosition, markAsUsed);\n\tif (index !== -1) {\n\t\tthis.buffer = this.buffers[index];\n\t\tthis.bufferIndex = index;\n\t\tthis.position = filePosition - this.buffer.fileStart;\n\t\tLog.debug(\"MultiBufferStream\", \"Repositioning parser at buffer position: \"+this.position);\n\t\treturn true;\n\t} else {\n\t\tLog.debug(\"MultiBufferStream\", \"Position \"+filePosition+\" not found in buffered data\");\n\t\treturn false;\n\t}\n}\n\n/**\n * Returns the current position in the file\n * @return {Number} the position in the file\n */\nMultiBufferStream.prototype.getPosition = function() {\n\tif (this.bufferIndex === -1 || this.buffers[this.bufferIndex] === null) {\n\t\tthrow \"Error accessing position in the MultiBufferStream\";\n\t}\n\treturn this.buffers[this.bufferIndex].fileStart+this.position;\n}\n\n/**\n * Returns the length of the current buffer\n * @return {Number} the length of the current buffer\n */\nMultiBufferStream.prototype.getLength = function() {\n\treturn this.byteLength;\n}\n\nMultiBufferStream.prototype.getEndPosition = function() {\n\tif (this.bufferIndex === -1 || this.buffers[this.bufferIndex] === null) {\n\t\tthrow \"Error accessing position in the MultiBufferStream\";\n\t}\n\treturn this.buffers[this.bufferIndex].fileStart+this.byteLength;\n}\n\nif (typeof exports !== 'undefined') {\n\texports.MultiBufferStream = MultiBufferStream;\n}// file:src/descriptor.js\n/*\n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar MPEG4DescriptorParser = function () {\n\tvar ES_DescrTag \t\t\t= 0x03;\n\tvar DecoderConfigDescrTag \t= 0x04;\n\tvar DecSpecificInfoTag \t\t= 0x05;\n\tvar SLConfigDescrTag \t\t= 0x06;\n\n\tvar descTagToName = [];\n\tdescTagToName[ES_DescrTag] \t\t\t\t= \"ES_Descriptor\";\n\tdescTagToName[DecoderConfigDescrTag] \t= \"DecoderConfigDescriptor\";\n\tdescTagToName[DecSpecificInfoTag] \t\t= \"DecoderSpecificInfo\";\n\tdescTagToName[SLConfigDescrTag] \t\t= \"SLConfigDescriptor\";\n\n\tthis.getDescriptorName = function(tag) {\n\t\treturn descTagToName[tag];\n\t}\n\n\tvar that = this;\n\tvar classes = {};\n\n\tthis.parseOneDescriptor = function (stream) {\n\t\tvar hdrSize = 0;\n\t\tvar size = 0;\n\t\tvar tag;\n\t\tvar desc;\n\t\tvar byteRead;\n\t\ttag = stream.readUint8();\n\t\thdrSize++;\n\t\tbyteRead = stream.readUint8();\n\t\thdrSize++;\n\t\twhile (byteRead & 0x80) {\n\t\t\tsize = (byteRead & 0x7F)<<7;\n\t\t\tbyteRead = stream.readUint8();\n\t\t\thdrSize++;\n\t\t}\n\t\tsize += byteRead & 0x7F;\n\t\tLog.debug(\"MPEG4DescriptorParser\", \"Found \"+(descTagToName[tag] || \"Descriptor \"+tag)+\", size \"+size+\" at position \"+stream.getPosition());\n\t\tif (descTagToName[tag]) {\n\t\t\tdesc = new classes[descTagToName[tag]](size);\n\t\t} else {\n\t\t\tdesc = new classes.Descriptor(size);\n\t\t}\n\t\tdesc.parse(stream);\n\t\treturn desc;\n\t}\n\n\tclasses.Descriptor = function(_tag, _size) {\n\t\tthis.tag = _tag;\n\t\tthis.size = _size;\n\t\tthis.descs = [];\n\t}\n\n\tclasses.Descriptor.prototype.parse = function (stream) {\n\t\tthis.data = stream.readUint8Array(this.size);\n\t}\n\n\tclasses.Descriptor.prototype.findDescriptor = function (tag) {\n\t\tfor (var i = 0; i < this.descs.length; i++) {\n\t\t\tif (this.descs[i].tag == tag) {\n\t\t\t\treturn this.descs[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tclasses.Descriptor.prototype.parseRemainingDescriptors = function (stream) {\n\t\tvar start = stream.position;\n\t\twhile (stream.position < start+this.size) {\n\t\t\tvar desc = that.parseOneDescriptor(stream);\n\t\t\tthis.descs.push(desc);\n\t\t}\n\t}\n\n\tclasses.ES_Descriptor = function (size) {\n\t\tclasses.Descriptor.call(this, ES_DescrTag, size);\n\t}\n\n\tclasses.ES_Descriptor.prototype = new classes.Descriptor();\n\n\tclasses.ES_Descriptor.prototype.parse = function(stream) {\n\t\tthis.ES_ID = stream.readUint16();\n\t\tthis.flags = stream.readUint8();\n\t\tthis.size -= 3;\n\t\tif (this.flags & 0x80) {\n\t\t\tthis.dependsOn_ES_ID = stream.readUint16();\n\t\t\tthis.size -= 2;\n\t\t} else {\n\t\t\tthis.dependsOn_ES_ID = 0;\n\t\t}\n\t\tif (this.flags & 0x40) {\n\t\t\tvar l = stream.readUint8();\n\t\t\tthis.URL = stream.readString(l);\n\t\t\tthis.size -= l+1;\n\t\t} else {\n\t\t\tthis.URL = \"\";\n\t\t}\n\t\tif (this.flags & 0x20) {\n\t\t\tthis.OCR_ES_ID = stream.readUint16();\n\t\t\tthis.size -= 2;\n\t\t} else {\n\t\t\tthis.OCR_ES_ID = 0;\n\t\t}\n\t\tthis.parseRemainingDescriptors(stream);\n\t}\n\n\tclasses.ES_Descriptor.prototype.getOTI = function(stream) {\n\t\tvar dcd = this.findDescriptor(DecoderConfigDescrTag);\n\t\tif (dcd) {\n\t\t\treturn dcd.oti;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tclasses.ES_Descriptor.prototype.getAudioConfig = function(stream) {\n\t\tvar dcd = this.findDescriptor(DecoderConfigDescrTag);\n\t\tif (!dcd) return null;\n\t\tvar dsi = dcd.findDescriptor(DecSpecificInfoTag);\n\t\tif (dsi && dsi.data) {\n\t\t\tvar audioObjectType = (dsi.data[0]& 0xF8) >> 3;\n\t\t\tif (audioObjectType === 31 && dsi.data.length >= 2) {\n\t\t\t\taudioObjectType = 32 + ((dsi.data[0] & 0x7) << 3) + ((dsi.data[1] & 0xE0) >> 5);\n\t\t\t}\n\t\t\treturn audioObjectType;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tclasses.DecoderConfigDescriptor = function (size) {\n\t\tclasses.Descriptor.call(this, DecoderConfigDescrTag, size);\n\t}\n\tclasses.DecoderConfigDescriptor.prototype = new classes.Descriptor();\n\n\tclasses.DecoderConfigDescriptor.prototype.parse = function(stream) {\n\t\tthis.oti = stream.readUint8();\n\t\tthis.streamType = stream.readUint8();\n\t\tthis.bufferSize = stream.readUint24();\n\t\tthis.maxBitrate = stream.readUint32();\n\t\tthis.avgBitrate = stream.readUint32();\n\t\tthis.size -= 13;\n\t\tthis.parseRemainingDescriptors(stream);\n\t}\n\n\tclasses.DecoderSpecificInfo = function (size) {\n\t\tclasses.Descriptor.call(this, DecSpecificInfoTag, size);\n\t}\n\tclasses.DecoderSpecificInfo.prototype = new classes.Descriptor();\n\n\tclasses.SLConfigDescriptor = function (size) {\n\t\tclasses.Descriptor.call(this, SLConfigDescrTag, size);\n\t}\n\tclasses.SLConfigDescriptor.prototype = new classes.Descriptor();\n\n\treturn this;\n}\n\nif (typeof exports !== 'undefined') {\n\texports.MPEG4DescriptorParser = MPEG4DescriptorParser;\n}// file:src/box.js\n/*\n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar BoxParser = {\n\tERR_INVALID_DATA : -1,\n\tERR_NOT_ENOUGH_DATA : 0,\n\tOK : 1,\n\n\t// Boxes to be created with default parsing\n\tBASIC_BOXES: [ \"mdat\", \"idat\", \"free\", \"skip\", \"meco\", \"strk\" ],\n\tFULL_BOXES: [ \"hmhd\", \"nmhd\", \"iods\", \"xml \", \"bxml\", \"ipro\", \"mere\" ],\n\tCONTAINER_BOXES: [\n\t\t[ \"moov\", [ \"trak\", \"pssh\" ] ],\n\t\t[ \"trak\" ],\n\t\t[ \"edts\" ],\n\t\t[ \"mdia\" ],\n\t\t[ \"minf\" ],\n\t\t[ \"dinf\" ],\n\t\t[ \"stbl\", [ \"sgpd\", \"sbgp\" ] ],\n\t\t[ \"mvex\", [ \"trex\" ] ],\n\t\t[ \"moof\", [ \"traf\" ] ],\n\t\t[ \"traf\", [ \"trun\", \"sgpd\", \"sbgp\" ] ],\n\t\t[ \"vttc\" ],\n\t\t[ \"tref\" ],\n\t\t[ \"iref\" ],\n\t\t[ \"mfra\", [ \"tfra\" ] ],\n\t\t[ \"meco\" ],\n\t\t[ \"hnti\" ],\n\t\t[ \"hinf\" ],\n\t\t[ \"strk\" ],\n\t\t[ \"strd\" ],\n\t\t[ \"sinf\" ],\n\t\t[ \"rinf\" ],\n\t\t[ \"schi\" ],\n\t\t[ \"trgr\" ],\n\t\t[ \"udta\", [\"kind\"] ],\n\t\t[ \"iprp\", [\"ipma\"] ],\n\t\t[ \"ipco\"]\n\t],\n\t// Boxes effectively created\n\tboxCodes : [],\n\tfullBoxCodes : [],\n\tcontainerBoxCodes : [],\n\tsampleEntryCodes : {},\n\tsampleGroupEntryCodes: [],\n\ttrackGroupTypes: [],\n\tUUIDBoxes: {},\n\tUUIDs: [],\n\tinitialize: function() {\n\t\tBoxParser.FullBox.prototype = new BoxParser.Box();\n\t\tBoxParser.ContainerBox.prototype = new BoxParser.Box();\n\t\tBoxParser.SampleEntry.prototype = new BoxParser.Box();\n\t\tBoxParser.TrackGroupTypeBox.prototype = new BoxParser.FullBox();\n\n\t\t/* creating constructors for simple boxes */\n\t\tBoxParser.BASIC_BOXES.forEach(function(type) {\n\t\t\tBoxParser.createBoxCtor(type)\n\t\t});\n\t\tBoxParser.FULL_BOXES.forEach(function(type) {\n\t\t\tBoxParser.createFullBoxCtor(type);\n\t\t});\n\t\tBoxParser.CONTAINER_BOXES.forEach(function(types) {\n\t\t\tBoxParser.createContainerBoxCtor(types[0], null, types[1]);\n\t\t});\n\t},\n\tBox: function(_type, _size, _uuid) {\n\t\tthis.type = _type;\n\t\tthis.size = _size;\n\t\tthis.uuid = _uuid;\n\t},\n\tFullBox: function(type, size, uuid) {\n\t\tBoxParser.Box.call(this, type, size, uuid);\n\t\tthis.flags = 0;\n\t\tthis.version = 0;\n\t},\n\tContainerBox: function(type, size, uuid) {\n\t\tBoxParser.Box.call(this, type, size, uuid);\n\t\tthis.boxes = [];\n\t},\n\tSampleEntry: function(type, size, hdr_size, start) {\n\t\tBoxParser.ContainerBox.call(this, type, size);\n\t\tthis.hdr_size = hdr_size;\n\t\tthis.start = start;\n\t},\n\tSampleGroupEntry: function(type) {\n\t\tthis.grouping_type = type;\n\t},\n\tTrackGroupTypeBox: function(type, size) {\n\t\tBoxParser.FullBox.call(this, type, size);\n\t},\n\tcreateBoxCtor: function(type, parseMethod){\n\t\tBoxParser.boxCodes.push(type);\n\t\tBoxParser[type+\"Box\"] = function(size) {\n\t\t\tBoxParser.Box.call(this, type, size);\n\t\t}\n\t\tBoxParser[type+\"Box\"].prototype = new BoxParser.Box();\n\t\tif (parseMethod) BoxParser[type+\"Box\"].prototype.parse = parseMethod;\n\t},\n\tcreateFullBoxCtor: function(type, parseMethod) {\n\t\t//BoxParser.fullBoxCodes.push(type);\n\t\tBoxParser[type+\"Box\"] = function(size) {\n\t\t\tBoxParser.FullBox.call(this, type, size);\n\t\t}\n\t\tBoxParser[type+\"Box\"].prototype = new BoxParser.FullBox();\n\t\tBoxParser[type+\"Box\"].prototype.parse = function(stream) {\n\t\t\tthis.parseFullHeader(stream);\n\t\t\tif (parseMethod) {\n\t\t\t\tparseMethod.call(this, stream);\n\t\t\t}\n\t\t};\n\t},\n\taddSubBoxArrays: function(subBoxNames) {\n\t\tif (subBoxNames) {\n\t\t\tthis.subBoxNames = subBoxNames;\n\t\t\tvar nbSubBoxes = subBoxNames.length;\n\t\t\tfor (var k = 0; k<nbSubBoxes; k++) {\n\t\t\t\tthis[subBoxNames[k]+\"s\"] = [];\n\t\t\t}\n\t\t}\n\t},\n\tcreateContainerBoxCtor: function(type, parseMethod, subBoxNames) {\n\t\t//BoxParser.containerBoxCodes.push(type);\n\t\tBoxParser[type+\"Box\"] = function(size) {\n\t\t\tBoxParser.ContainerBox.call(this, type, size);\n\t\t\tBoxParser.addSubBoxArrays.call(this, subBoxNames);\n\t\t}\n\t\tBoxParser[type+\"Box\"].prototype = new BoxParser.ContainerBox();\n\t\tif (parseMethod) BoxParser[type+\"Box\"].prototype.parse = parseMethod;\n\t},\n\tcreateMediaSampleEntryCtor: function(mediaType, parseMethod, subBoxNames) {\n\t\tBoxParser.sampleEntryCodes[mediaType] = [];\n\t\tBoxParser[mediaType+\"SampleEntry\"] = function(type, size) {\n\t\t\tBoxParser.SampleEntry.call(this, type, size);\n\t\t\tBoxParser.addSubBoxArrays.call(this, subBoxNames);\n\t\t};\n\t\tBoxParser[mediaType+\"SampleEntry\"].prototype = new BoxParser.SampleEntry();\n\t\tif (parseMethod) BoxParser[mediaType+\"SampleEntry\"].prototype .parse = parseMethod;\n\t},\n\tcreateSampleEntryCtor: function(mediaType, type, parseMethod, subBoxNames) {\n\t\tBoxParser.sampleEntryCodes[mediaType].push(type);\n\t\tBoxParser[type+\"SampleEntry\"] = function(size) {\n\t\t\tBoxParser[mediaType+\"SampleEntry\"].call(this, type, size);\n\t\t\tBoxParser.addSubBoxArrays.call(this, subBoxNames);\n\t\t};\n\t\tBoxParser[type+\"SampleEntry\"].prototype = new BoxParser[mediaType+\"SampleEntry\"]();\n\t\tif (parseMethod) BoxParser[type+\"SampleEntry\"].prototype.parse = parseMethod;\n\t},\n\tcreateEncryptedSampleEntryCtor: function(mediaType, type, parseMethod) {\n\t\tBoxParser.createSampleEntryCtor.call(this, mediaType, type, parseMethod, [\"sinf\"]);\n\t},\n\tcreateSampleGroupCtor: function(type, parseMethod) {\n\t\t//BoxParser.sampleGroupEntryCodes.push(type);\n\t\tBoxParser[type+\"SampleGroupEntry\"] = function(size) {\n\t\t\tBoxParser.SampleGroupEntry.call(this, type, size);\n\t\t}\n\t\tBoxParser[type+\"SampleGroupEntry\"].prototype = new BoxParser.SampleGroupEntry();\n\t\tif (parseMethod) BoxParser[type+\"SampleGroupEntry\"].prototype.parse = parseMethod;\n\t},\n\tcreateTrackGroupCtor: function(type, parseMethod) {\n\t\t//BoxParser.trackGroupTypes.push(type);\n\t\tBoxParser[type+\"TrackGroupTypeBox\"] = function(size) {\n\t\t\tBoxParser.TrackGroupTypeBox.call(this, type, size);\n\t\t}\n\t\tBoxParser[type+\"TrackGroupTypeBox\"].prototype = new BoxParser.TrackGroupTypeBox();\n\t\tif (parseMethod) BoxParser[type+\"TrackGroupTypeBox\"].prototype.parse = parseMethod;\n\t},\n\tcreateUUIDBox: function(uuid, isFullBox, isContainerBox, parseMethod) {\n\t\tBoxParser.UUIDs.push(uuid);\n\t\tBoxParser.UUIDBoxes[uuid] = function(size) {\n\t\t\tif (isFullBox) {\n\t\t\t\tBoxParser.FullBox.call(this, \"uuid\", size, uuid);\n\t\t\t} else {\n\t\t\t\tif (isContainerBox) {\n\t\t\t\t\tBoxParser.ContainerBox.call(this, \"uuid\", size, uuid);\n\t\t\t\t} else {\n\t\t\t\t\tBoxParser.Box.call(this, \"uuid\", size, uuid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tBoxParser.UUIDBoxes[uuid].prototype = (isFullBox ? new BoxParser.FullBox() : (isContainerBox ? new BoxParser.ContainerBox() : new BoxParser.Box()));\n\t\tif (parseMethod) {\n\t\t\tif (isFullBox) {\n\t\t\t\tBoxParser.UUIDBoxes[uuid].prototype.parse = function(stream) {\n\t\t\t\t\tthis.parseFullHeader(stream);\n\t\t\t\t\tif (parseMethod) {\n\t\t\t\t\t\tparseMethod.call(this, stream);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tBoxParser.UUIDBoxes[uuid].prototype.parse = parseMethod;\n\t\t\t}\n\t\t}\n\t}\n}\n\nBoxParser.initialize();\n\nBoxParser.TKHD_FLAG_ENABLED    = 0x000001;\nBoxParser.TKHD_FLAG_IN_MOVIE   = 0x000002;\nBoxParser.TKHD_FLAG_IN_PREVIEW = 0x000004;\n\nBoxParser.TFHD_FLAG_BASE_DATA_OFFSET\t= 0x01;\nBoxParser.TFHD_FLAG_SAMPLE_DESC\t\t\t= 0x02;\nBoxParser.TFHD_FLAG_SAMPLE_DUR\t\t\t= 0x08;\nBoxParser.TFHD_FLAG_SAMPLE_SIZE\t\t\t= 0x10;\nBoxParser.TFHD_FLAG_SAMPLE_FLAGS\t\t= 0x20;\nBoxParser.TFHD_FLAG_DUR_EMPTY\t\t\t= 0x10000;\nBoxParser.TFHD_FLAG_DEFAULT_BASE_IS_MOOF= 0x20000;\n\nBoxParser.TRUN_FLAGS_DATA_OFFSET= 0x01;\nBoxParser.TRUN_FLAGS_FIRST_FLAG\t= 0x04;\nBoxParser.TRUN_FLAGS_DURATION\t= 0x100;\nBoxParser.TRUN_FLAGS_SIZE\t\t= 0x200;\nBoxParser.TRUN_FLAGS_FLAGS\t\t= 0x400;\nBoxParser.TRUN_FLAGS_CTS_OFFSET\t= 0x800;\n\nBoxParser.Box.prototype.add = function(name) {\n\treturn this.addBox(new BoxParser[name+\"Box\"]());\n}\n\nBoxParser.Box.prototype.addBox = function(box) {\n\tthis.boxes.push(box);\n\tif (this[box.type+\"s\"]) {\n\t\tthis[box.type+\"s\"].push(box);\n\t} else {\n\t\tthis[box.type] = box;\n\t}\n\treturn box;\n}\n\nBoxParser.Box.prototype.set = function(prop, value) {\n\tthis[prop] = value;\n\treturn this;\n}\n\nBoxParser.Box.prototype.addEntry = function(value, _prop) {\n\tvar prop = _prop || \"entries\";\n\tif (!this[prop]) {\n\t\tthis[prop] = [];\n\t}\n\tthis[prop].push(value);\n\treturn this;\n}\n\nif (typeof exports !== \"undefined\") {\n\texports.BoxParser = BoxParser;\n}\n// file:src/box-parse.js\n/* \n * Copyright (c) Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nBoxParser.parseUUID = function(stream) {\n\treturn BoxParser.parseHex16(stream);\n}\n\nBoxParser.parseHex16 = function(stream) {\n\tvar hex16 = \"\"\n\tfor (var i = 0; i <16; i++) {\n\t\tvar hex = stream.readUint8().toString(16);\n\t\thex16 += (hex.length === 1 ? \"0\"+hex : hex);\n\t}\n\treturn hex16;\n}\n\nBoxParser.parseOneBox = function(stream, headerOnly, parentSize) {\n\tvar box;\n\tvar start = stream.getPosition();\n\tvar hdr_size = 0;\n\tvar diff;\n\tvar uuid;\n\tif (stream.getEndPosition() - start < 8) {\n\t\tLog.debug(\"BoxParser\", \"Not enough data in stream to parse the type and size of the box\");\n\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA };\n\t}\n\tif (parentSize && parentSize < 8) {\n\t\tLog.debug(\"BoxParser\", \"Not enough bytes left in the parent box to parse a new box\");\n\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA };\n\t}\n\tvar size = stream.readUint32();\n\tvar type = stream.readString(4);\n\tvar box_type = type;\n\tLog.debug(\"BoxParser\", \"Found box of type '\"+type+\"' and size \"+size+\" at position \"+start);\n\thdr_size = 8;\n\tif (type == \"uuid\") {\n\t\tif ((stream.getEndPosition() - stream.getPosition() < 16) || (parentSize -hdr_size < 16)) {\n\t\t\tstream.seek(start);\n\t\t\tLog.debug(\"BoxParser\", \"Not enough bytes left in the parent box to parse a UUID box\");\n\t\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA };\n\t\t}\n\t\tuuid = BoxParser.parseUUID(stream);\n\t\thdr_size += 16;\n\t\tbox_type = uuid;\n\t}\n\tif (size == 1) {\n\t\tif ((stream.getEndPosition() - stream.getPosition() < 8) || (parentSize && (parentSize - hdr_size) < 8)) {\n\t\t\tstream.seek(start);\n\t\t\tLog.warn(\"BoxParser\", \"Not enough data in stream to parse the extended size of the \\\"\"+type+\"\\\" box\");\n\t\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA };\n\t\t}\n\t\tsize = stream.readUint64();\n\t\thdr_size += 8;\n\t} else if (size === 0) {\n\t\t/* box extends till the end of file or invalid file */\n\t\tif (parentSize) {\n\t\t\tsize = parentSize;\n\t\t} else {\n\t\t\t/* box extends till the end of file */\n\t\t\tif (type !== \"mdat\") {\n\t\t\t\tLog.error(\"BoxParser\", \"Unlimited box size not supported for type: '\"+type+\"'\");\n\t\t\t\tbox = new BoxParser.Box(type, size);\n\t\t\t\treturn { code: BoxParser.OK, box: box, size: box.size };\n\t\t\t}\n\t\t}\n\t}\n\tif (size !== 0 && size < hdr_size) {\n\t\tLog.error(\"BoxParser\", \"Box of type \"+type+\" has an invalid size \"+size+\" (too small to be a box)\");\n\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA, type: type, size: size, hdr_size: hdr_size, start: start };\n\t}\n\tif (size !== 0 && parentSize && size > parentSize) {\n\t\tLog.error(\"BoxParser\", \"Box of type '\"+type+\"' has a size \"+size+\" greater than its container size \"+parentSize);\n\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA, type: type, size: size, hdr_size: hdr_size, start: start };\n\t}\n\tif (size !== 0 && start + size > stream.getEndPosition()) {\n\t\tstream.seek(start);\n\t\tLog.info(\"BoxParser\", \"Not enough data in stream to parse the entire '\"+type+\"' box\");\n\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA, type: type, size: size, hdr_size: hdr_size, start: start };\n\t}\n\tif (headerOnly) {\n\t\treturn { code: BoxParser.OK, type: type, size: size, hdr_size: hdr_size, start: start };\n\t} else {\n\t\tif (BoxParser[type+\"Box\"]) {\n\t\t\tbox = new BoxParser[type+\"Box\"](size);\n\t\t} else {\n\t\t\tif (type !== \"uuid\") {\n\t\t\t\tLog.warn(\"BoxParser\", \"Unknown box type: '\"+type+\"'\");\n\t\t\t\tbox = new BoxParser.Box(type, size);\n\t\t\t\tbox.has_unparsed_data = true;\n\t\t\t} else {\n\t\t\t\tif (BoxParser.UUIDBoxes[uuid]) {\n\t\t\t\t\tbox = new BoxParser.UUIDBoxes[uuid](size);\n\t\t\t\t} else {\n\t\t\t\t\tLog.warn(\"BoxParser\", \"Unknown uuid type: '\"+uuid+\"'\");\n\t\t\t\t\tbox = new BoxParser.Box(type, size);\n\t\t\t\t\tbox.uuid = uuid;\n\t\t\t\t\tbox.has_unparsed_data = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tbox.hdr_size = hdr_size;\n\t/* recording the position of the box in the input stream */\n\tbox.start = start;\n\tif (box.write === BoxParser.Box.prototype.write && box.type !== \"mdat\") {\n\t\tLog.info(\"BoxParser\", \"'\"+box_type+\"' box writing not yet implemented, keeping unparsed data in memory for later write\");\n\t\tbox.parseDataAndRewind(stream);\n\t}\n\tbox.parse(stream);\n\tdiff = stream.getPosition() - (box.start+box.size);\n\tif (diff < 0) {\n\t\tLog.warn(\"BoxParser\", \"Parsing of box '\"+box_type+\"' did not read the entire indicated box data size (missing \"+(-diff)+\" bytes), seeking forward\");\n\t\tstream.seek(box.start+box.size);\n\t} else if (diff > 0) {\n\t\tLog.error(\"BoxParser\", \"Parsing of box '\"+box_type+\"' read \"+diff+\" more bytes than the indicated box data size, seeking backwards\");\n\t\tif (box.size !== 0) stream.seek(box.start+box.size);\n\t}\n\treturn { code: BoxParser.OK, box: box, size: box.size };\n}\n\nBoxParser.Box.prototype.parse = function(stream) {\n\tif (this.type != \"mdat\") {\n\t\tthis.data = stream.readUint8Array(this.size-this.hdr_size);\n\t} else {\n\t\tif (this.size === 0) {\n\t\t\tstream.seek(stream.getEndPosition());\n\t\t} else {\n\t\t\tstream.seek(this.start+this.size);\n\t\t}\n\t}\n}\n\n/* Used to parse a box without consuming its data, to allow detailled parsing\n   Useful for boxes for which a write method is not yet implemented */\nBoxParser.Box.prototype.parseDataAndRewind = function(stream) {\n\tthis.data = stream.readUint8Array(this.size-this.hdr_size);\n\t// rewinding\n\tstream.position -= this.size-this.hdr_size;\n}\n\nBoxParser.FullBox.prototype.parseDataAndRewind = function(stream) {\n\tthis.parseFullHeader(stream);\n\tthis.data = stream.readUint8Array(this.size-this.hdr_size);\n\t// restore the header size as if the full header had not been parsed\n\tthis.hdr_size -= 4;\n\t// rewinding\n\tstream.position -= this.size-this.hdr_size;\n}\n\nBoxParser.FullBox.prototype.parseFullHeader = function (stream) {\n\tthis.version = stream.readUint8();\n\tthis.flags = stream.readUint24();\n\tthis.hdr_size += 4;\n}\n\nBoxParser.FullBox.prototype.parse = function (stream) {\n\tthis.parseFullHeader(stream);\n\tthis.data = stream.readUint8Array(this.size-this.hdr_size);\n}\n\nBoxParser.ContainerBox.prototype.parse = function(stream) {\n\tvar ret;\n\tvar box;\n\twhile (stream.getPosition() < this.start+this.size) {\n\t\tret = BoxParser.parseOneBox(stream, false, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tbox = ret.box;\n\t\t\t/* store the box in the 'boxes' array to preserve box order (for offset) but also store box in a property for more direct access */\n\t\t\tthis.boxes.push(box);\n\t\t\tif (this.subBoxNames && this.subBoxNames.indexOf(box.type) != -1) {\n\t\t\t\tthis[this.subBoxNames[this.subBoxNames.indexOf(box.type)]+\"s\"].push(box);\n\t\t\t} else {\n\t\t\t\tvar box_type = box.type !== \"uuid\" ? box.type : box.uuid;\n\t\t\t\tif (this[box_type]) {\n\t\t\t\t\tLog.warn(\"Box of type \"+box_type+\" already stored in field of this type\");\n\t\t\t\t} else {\n\t\t\t\t\tthis[box_type] = box;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nBoxParser.Box.prototype.parseLanguage = function(stream) {\n\tthis.language = stream.readUint16();\n\tvar chars = [];\n\tchars[0] = (this.language>>10)&0x1F;\n\tchars[1] = (this.language>>5)&0x1F;\n\tchars[2] = (this.language)&0x1F;\n\tthis.languageString = String.fromCharCode(chars[0]+0x60, chars[1]+0x60, chars[2]+0x60);\n}\n\n// file:src/parsing/sampleentries/sampleentry.js\nBoxParser.SAMPLE_ENTRY_TYPE_VISUAL \t\t= \"Visual\";\nBoxParser.SAMPLE_ENTRY_TYPE_AUDIO \t\t= \"Audio\";\nBoxParser.SAMPLE_ENTRY_TYPE_HINT \t\t= \"Hint\";\nBoxParser.SAMPLE_ENTRY_TYPE_METADATA \t= \"Metadata\";\nBoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE \t= \"Subtitle\";\nBoxParser.SAMPLE_ENTRY_TYPE_SYSTEM \t\t= \"System\";\nBoxParser.SAMPLE_ENTRY_TYPE_TEXT \t\t= \"Text\";\n\nBoxParser.SampleEntry.prototype.parseHeader = function(stream) {\n\tstream.readUint8Array(6);\n\tthis.data_reference_index = stream.readUint16();\n\tthis.hdr_size += 8;\n}\n\nBoxParser.SampleEntry.prototype.parse = function(stream) {\n\tthis.parseHeader(stream);\n\tthis.data = stream.readUint8Array(this.size - this.hdr_size);\n}\n\nBoxParser.SampleEntry.prototype.parseDataAndRewind = function(stream) {\n\tthis.parseHeader(stream);\n\tthis.data = stream.readUint8Array(this.size - this.hdr_size);\n\t// restore the header size as if the sample entry header had not been parsed\n\tthis.hdr_size -= 8;\n\t// rewinding\n\tstream.position -= this.size-this.hdr_size;\n}\n\nBoxParser.SampleEntry.prototype.parseFooter = function(stream) {\n\tBoxParser.ContainerBox.prototype.parse.call(this, stream);\n}\n\n// Base SampleEntry types with default parsing\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_HINT);\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_METADATA);\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE);\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SYSTEM);\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_TEXT);\n\n//Base SampleEntry types for Audio and Video with specific parsing\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, function(stream) {\n\tvar compressorname_length;\n\tthis.parseHeader(stream);\n\tstream.readUint16();\n\tstream.readUint16();\n\tstream.readUint32Array(3);\n\tthis.width = stream.readUint16();\n\tthis.height = stream.readUint16();\n\tthis.horizresolution = stream.readUint32();\n\tthis.vertresolution = stream.readUint32();\n\tstream.readUint32();\n\tthis.frame_count = stream.readUint16();\n\tcompressorname_length = Math.min(31, stream.readUint8());\n\tthis.compressorname = stream.readString(compressorname_length);\n\tif (compressorname_length < 31) {\n\t\tstream.readString(31 - compressorname_length);\n\t}\n\tthis.depth = stream.readUint16();\n\tstream.readUint16();\n\tthis.parseFooter(stream);\n});\n\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, function(stream) {\n\tthis.parseHeader(stream);\n\tstream.readUint32Array(2);\n\tthis.channel_count = stream.readUint16();\n\tthis.samplesize = stream.readUint16();\n\tstream.readUint16();\n\tstream.readUint16();\n\tthis.samplerate = (stream.readUint32()/(1<<16));\n\tthis.parseFooter(stream);\n});\n\n// Sample entries inheriting from Audio and Video\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"avc1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"avc2\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"avc3\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"avc4\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"av01\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"hvc1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"hev1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vvc1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vvi1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vvs1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vvcN\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vp08\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vp09\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"mp4a\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"ac-3\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"ec-3\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"Opus\");\n\n// Encrypted sample entries\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \t\"encv\");\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"enca\");\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE, \t\"encu\");\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SYSTEM, \t\"encs\");\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_TEXT, \t\t\"enct\");\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_METADATA, \t\"encm\");\n// file:src/parsing/a1lx.js\nBoxParser.createBoxCtor(\"a1lx\", function(stream) {\n\tvar large_size = stream.readUint8() & 1;\n\tvar FieldLength = ((large_size & 1) + 1) * 16;\n\tthis.layer_size = [];\n\tfor (var i = 0; i < 3; i++) {\n\t\tif (FieldLength == 16) {\n\t\t\tthis.layer_size[i] = stream.readUint16();\n\t\t} else {\n\t\t\tthis.layer_size[i] = stream.readUint32();\n\t\t}\n\t}\n});// file:src/parsing/a1op.js\nBoxParser.createBoxCtor(\"a1op\", function(stream) {\n\tthis.op_index = stream.readUint8();\n});// file:src/parsing/auxC.js\nBoxParser.createFullBoxCtor(\"auxC\", function(stream) {\n\tthis.aux_type = stream.readCString();\n\tvar aux_subtype_length = this.size - this.hdr_size - (this.aux_type.length + 1);\n\tthis.aux_subtype = stream.readUint8Array(aux_subtype_length);\n});// file:src/parsing/av1C.js\nBoxParser.createBoxCtor(\"av1C\", function(stream) {\n\tvar i;\n\tvar toparse;\n\tvar tmp = stream.readUint8();\n\tif ((tmp >> 7) & 0x1 !== 1) {\n\t\tLog.error(\"av1C marker problem\");\n\t\treturn;\n\t}\n\tthis.version = tmp & 0x7F;\n\tif (this.version !== 1) {\n\t\tLog.error(\"av1C version \"+this.version+\" not supported\");\n\t\treturn;\n\t}\n\ttmp = stream.readUint8();\n\tthis.seq_profile = (tmp >> 5) & 0x7;\n\tthis.seq_level_idx_0 = tmp & 0x1F;\n\ttmp = stream.readUint8();\n\tthis.seq_tier_0 = (tmp >> 7) & 0x1;\n\tthis.high_bitdepth = (tmp >> 6) & 0x1;\n\tthis.twelve_bit = (tmp >> 5) & 0x1;\n\tthis.monochrome = (tmp >> 4) & 0x1;\n\tthis.chroma_subsampling_x = (tmp >> 3) & 0x1;\n\tthis.chroma_subsampling_y = (tmp >> 2) & 0x1;\n\tthis.chroma_sample_position = (tmp & 0x3);\n\ttmp = stream.readUint8();\n\tthis.reserved_1 = (tmp >> 5) & 0x7;\n\tif (this.reserved_1 !== 0) {\n\t\tLog.error(\"av1C reserved_1 parsing problem\");\n\t\treturn;\n\t}\n\tthis.initial_presentation_delay_present = (tmp >> 4) & 0x1;\n\tif (this.initial_presentation_delay_present === 1) {\n\t\tthis.initial_presentation_delay_minus_one = (tmp & 0xF);\n\t} else {\n\t\tthis.reserved_2 = (tmp & 0xF);\n\t\tif (this.reserved_2 !== 0) {\n\t\t\tLog.error(\"av1C reserved_2 parsing problem\");\n\t\t\treturn;\n\t\t}\n\t}\n\n\tvar configOBUs_length = this.size - this.hdr_size - 4;\n\tthis.configOBUs = stream.readUint8Array(configOBUs_length);\n});\n\n// file:src/parsing/avcC.js\nBoxParser.createBoxCtor(\"avcC\", function(stream) {\n\tvar i;\n\tvar toparse;\n\tthis.configurationVersion = stream.readUint8();\n\tthis.AVCProfileIndication = stream.readUint8();\n\tthis.profile_compatibility = stream.readUint8();\n\tthis.AVCLevelIndication = stream.readUint8();\n\tthis.lengthSizeMinusOne = (stream.readUint8() & 0x3);\n\tthis.nb_SPS_nalus = (stream.readUint8() & 0x1F);\n\ttoparse = this.size - this.hdr_size - 6;\n\tthis.SPS = [];\n\tfor (i = 0; i < this.nb_SPS_nalus; i++) {\n\t\tthis.SPS[i] = {};\n\t\tthis.SPS[i].length = stream.readUint16();\n\t\tthis.SPS[i].nalu = stream.readUint8Array(this.SPS[i].length);\n\t\ttoparse -= 2+this.SPS[i].length;\n\t}\n\tthis.nb_PPS_nalus = stream.readUint8();\n\ttoparse--;\n\tthis.PPS = [];\n\tfor (i = 0; i < this.nb_PPS_nalus; i++) {\n\t\tthis.PPS[i] = {};\n\t\tthis.PPS[i].length = stream.readUint16();\n\t\tthis.PPS[i].nalu = stream.readUint8Array(this.PPS[i].length);\n\t\ttoparse -= 2+this.PPS[i].length;\n\t}\n\tif (toparse>0) {\n\t\tthis.ext = stream.readUint8Array(toparse);\n\t}\n});\n\n// file:src/parsing/btrt.js\nBoxParser.createBoxCtor(\"btrt\", function(stream) {\n\tthis.bufferSizeDB = stream.readUint32();\n\tthis.maxBitrate = stream.readUint32();\n\tthis.avgBitrate = stream.readUint32();\n});\n\n// file:src/parsing/clap.js\nBoxParser.createBoxCtor(\"clap\", function(stream) {\n\tthis.cleanApertureWidthN = stream.readUint32();\n\tthis.cleanApertureWidthD = stream.readUint32();\n\tthis.cleanApertureHeightN = stream.readUint32();\n\tthis.cleanApertureHeightD = stream.readUint32();\n\tthis.horizOffN = stream.readUint32();\n\tthis.horizOffD = stream.readUint32();\n\tthis.vertOffN = stream.readUint32();\n\tthis.vertOffD = stream.readUint32();\n});// file:src/parsing/clli.js\nBoxParser.createBoxCtor(\"clli\", function(stream) {\n\tthis.max_content_light_level = stream.readUint16();\n    this.max_pic_average_light_level = stream.readUint16();\n});\n\n// file:src/parsing/co64.js\nBoxParser.createFullBoxCtor(\"co64\", function(stream) {\n\tvar entry_count;\n\tvar i;\n\tentry_count = stream.readUint32();\n\tthis.chunk_offsets = [];\n\tif (this.version === 0) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.chunk_offsets.push(stream.readUint64());\n\t\t}\n\t}\n});\n\n// file:src/parsing/CoLL.js\nBoxParser.createFullBoxCtor(\"CoLL\", function(stream) {\n\tthis.maxCLL = stream.readUint16();\n    this.maxFALL = stream.readUint16();\n});\n\n// file:src/parsing/colr.js\nBoxParser.createBoxCtor(\"colr\", function(stream) {\n\tthis.colour_type = stream.readString(4);\n\tif (this.colour_type === 'nclx') {\n\t\tthis.colour_primaries = stream.readUint16();\n\t\tthis.transfer_characteristics = stream.readUint16();\n\t\tthis.matrix_coefficients = stream.readUint16();\n\t\tvar tmp = stream.readUint8();\n\t\tthis.full_range_flag = tmp >> 7;\n\t} else if (this.colour_type === 'rICC') {\n\t\tthis.ICC_profile = stream.readUint8Array(this.size - 4);\n\t} else if (this.colour_type === 'prof') {\n\t\tthis.ICC_profile = stream.readUint8Array(this.size - 4);\n\t}\n});// file:src/parsing/cprt.js\nBoxParser.createFullBoxCtor(\"cprt\", function (stream) {\n\tthis.parseLanguage(stream);\n\tthis.notice = stream.readCString();\n});\n\n// file:src/parsing/cslg.js\nBoxParser.createFullBoxCtor(\"cslg\", function(stream) {\n\tvar entry_count;\n\tif (this.version === 0) {\n\t\tthis.compositionToDTSShift = stream.readInt32(); /* signed */\n\t\tthis.leastDecodeToDisplayDelta = stream.readInt32(); /* signed */\n\t\tthis.greatestDecodeToDisplayDelta = stream.readInt32(); /* signed */\n\t\tthis.compositionStartTime = stream.readInt32(); /* signed */\n\t\tthis.compositionEndTime = stream.readInt32(); /* signed */\n\t}\n});\n\n// file:src/parsing/ctts.js\nBoxParser.createFullBoxCtor(\"ctts\", function(stream) {\n\tvar entry_count;\n\tvar i;\n\tentry_count = stream.readUint32();\n\tthis.sample_counts = [];\n\tthis.sample_offsets = [];\n\tif (this.version === 0) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.sample_counts.push(stream.readUint32());\n\t\t\t/* some files are buggy and declare version=0 while using signed offsets.\n\t\t\t   The likelyhood of using the most significant bit in a 32-bits time offset is very low,\n\t\t\t   so using signed value here as well */\n\t\t\t   var value = stream.readInt32();\n\t\t\t   if (value < 0) {\n\t\t\t   \t\tLog.warn(\"BoxParser\", \"ctts box uses negative values without using version 1\");\n\t\t\t   }\n\t\t\tthis.sample_offsets.push(value);\n\t\t}\n\t} else if (this.version == 1) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.sample_counts.push(stream.readUint32());\n\t\t\tthis.sample_offsets.push(stream.readInt32()); /* signed */\n\t\t}\n\t}\n});\n\n// file:src/parsing/dac3.js\nBoxParser.createBoxCtor(\"dac3\", function(stream) {\n\tvar tmp_byte1 = stream.readUint8();\n\tvar tmp_byte2 = stream.readUint8();\n\tvar tmp_byte3 = stream.readUint8();\n\tthis.fscod = tmp_byte1 >> 6;\n\tthis.bsid  = ((tmp_byte1 >> 1) & 0x1F);\n\tthis.bsmod = ((tmp_byte1 & 0x1) <<  2) | ((tmp_byte2 >> 6) & 0x3);\n\tthis.acmod = ((tmp_byte2 >> 3) & 0x7);\n\tthis.lfeon = ((tmp_byte2 >> 2) & 0x1);\n\tthis.bit_rate_code = (tmp_byte2 & 0x3) | ((tmp_byte3 >> 5) & 0x7);\n});\n\n// file:src/parsing/dec3.js\nBoxParser.createBoxCtor(\"dec3\", function(stream) {\n\tvar tmp_16 = stream.readUint16();\n\tthis.data_rate = tmp_16 >> 3;\n\tthis.num_ind_sub = tmp_16 & 0x7;\n\tthis.ind_subs = [];\n\tfor (var i = 0; i < this.num_ind_sub+1; i++) {\n\t\tvar ind_sub = {};\n\t\tthis.ind_subs.push(ind_sub);\n\t\tvar tmp_byte1 = stream.readUint8();\n\t\tvar tmp_byte2 = stream.readUint8();\n\t\tvar tmp_byte3 = stream.readUint8();\n\t\tind_sub.fscod = tmp_byte1 >> 6;\n\t\tind_sub.bsid  = ((tmp_byte1 >> 1) & 0x1F);\n\t\tind_sub.bsmod = ((tmp_byte1 & 0x1) << 4) | ((tmp_byte2 >> 4) & 0xF);\n\t\tind_sub.acmod = ((tmp_byte2 >> 1) & 0x7);\n\t\tind_sub.lfeon = (tmp_byte2 & 0x1);\n\t\tind_sub.num_dep_sub = ((tmp_byte3 >> 1) & 0xF);\n\t\tif (ind_sub.num_dep_sub > 0) {\n\t\t\tind_sub.chan_loc = ((tmp_byte3 & 0x1) << 8) | stream.readUint8();\n\t\t}\n\t}\n});\n\n// file:src/parsing/dfLa.js\nBoxParser.createFullBoxCtor(\"dfLa\", function(stream) {\n    var BLOCKTYPE_MASK = 0x7F;\n    var LASTMETADATABLOCKFLAG_MASK = 0x80;\n\n    var boxesFound = [];\n    var knownBlockTypes = [\n        \"STREAMINFO\",\n        \"PADDING\",\n        \"APPLICATION\",\n        \"SEEKTABLE\",\n        \"VORBIS_COMMENT\",\n        \"CUESHEET\",\n        \"PICTURE\",\n        \"RESERVED\"\n    ];\n\n    // dfLa is a FullBox\n    this.parseFullHeader(stream);\n\n    // for (i=0; ; i++) { // to end of box\n    do {\n        var flagAndType = stream.readUint8();\n\n        var type = Math.min(\n            (flagAndType & BLOCKTYPE_MASK),\n            (knownBlockTypes.length - 1)\n        );\n\n        // if this is a STREAMINFO block, read the true samplerate since this\n        // can be different to the AudioSampleEntry samplerate.\n        if (!(type)) {\n            // read past all the other stuff\n            stream.readUint8Array(13);\n\n            // extract samplerate\n            this.samplerate = (stream.readUint32() >> 12);\n\n            // read to end of STREAMINFO\n            stream.readUint8Array(20);\n        } else {\n            // not interested in other block types so just discard length bytes\n            stream.readUint8Array(stream.readUint24());\n        }\n\n        boxesFound.push(knownBlockTypes[type]);\n\n        if (!!(flagAndType & LASTMETADATABLOCKFLAG_MASK)) {\n            break;\n        }\n    } while (true);\n\n    this.numMetadataBlocks =\n        boxesFound.length + \" (\" + boxesFound.join(\", \") + \")\";\n});\n// file:src/parsing/dimm.js\nBoxParser.createBoxCtor(\"dimm\", function(stream) {\n\tthis.bytessent = stream.readUint64();\n});\n\n// file:src/parsing/dmax.js\nBoxParser.createBoxCtor(\"dmax\", function(stream) {\n\tthis.time = stream.readUint32();\n});\n\n// file:src/parsing/dmed.js\nBoxParser.createBoxCtor(\"dmed\", function(stream) {\n\tthis.bytessent = stream.readUint64();\n});\n\n// file:src/parsing/dOps.js\nBoxParser.createBoxCtor(\"dOps\", function(stream) {\n\tthis.Version = stream.readUint8();\n\tthis.OutputChannelCount = stream.readUint8();\n\tthis.PreSkip = stream.readUint16();\n\tthis.InputSampleRate = stream.readUint32();\n\tthis.OutputGain = stream.readInt16();\n\tthis.ChannelMappingFamily = stream.readUint8();\n\tif (this.ChannelMappingFamily !== 0) {\n\t\tthis.StreamCount = stream.readUint8();\n\t\tthis.CoupledCount = stream.readUint8();\n\t\tthis.ChannelMapping = [];\n\t\tfor (var i = 0; i < this.OutputChannelCount; i++) {\n\t\t\tthis.ChannelMapping[i] = stream.readUint8();\n\t\t}\n\t}\n});\n\n// file:src/parsing/dref.js\nBoxParser.createFullBoxCtor(\"dref\", function(stream) {\n\tvar ret;\n\tvar box;\n\tthis.entries = [];\n\tvar entry_count = stream.readUint32();\n\tfor (var i = 0; i < entry_count; i++) {\n\t\tret = BoxParser.parseOneBox(stream, false, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tbox = ret.box;\n\t\t\tthis.entries.push(box);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n\n// file:src/parsing/drep.js\nBoxParser.createBoxCtor(\"drep\", function(stream) {\n\tthis.bytessent = stream.readUint64();\n});\n\n// file:src/parsing/elng.js\nBoxParser.createFullBoxCtor(\"elng\", function(stream) {\n\tthis.extended_language = stream.readString(this.size-this.hdr_size);\n});\n\n// file:src/parsing/elst.js\nBoxParser.createFullBoxCtor(\"elst\", function(stream) {\n\tthis.entries = [];\n\tvar entry_count = stream.readUint32();\n\tfor (var i = 0; i < entry_count; i++) {\n\t\tvar entry = {};\n\t\tthis.entries.push(entry);\n\t\tif (this.version === 1) {\n\t\t\tentry.segment_duration = stream.readUint64();\n\t\t\tentry.media_time = stream.readInt64();\n\t\t} else {\n\t\t\tentry.segment_duration = stream.readUint32();\n\t\t\tentry.media_time = stream.readInt32();\n\t\t}\n\t\tentry.media_rate_integer = stream.readInt16();\n\t\tentry.media_rate_fraction = stream.readInt16();\n\t}\n});\n\n// file:src/parsing/emsg.js\nBoxParser.createFullBoxCtor(\"emsg\", function(stream) {\n\tif (this.version == 1) {\n\t\tthis.timescale \t\t\t\t\t= stream.readUint32();\n\t\tthis.presentation_time \t\t\t= stream.readUint64();\n\t\tthis.event_duration\t\t\t \t= stream.readUint32();\n\t\tthis.id \t\t\t\t\t\t= stream.readUint32();\n\t\tthis.scheme_id_uri \t\t\t\t= stream.readCString();\n\t\tthis.value \t\t\t\t\t\t= stream.readCString();\n\t} else {\n\t\tthis.scheme_id_uri \t\t\t\t= stream.readCString();\n\t\tthis.value \t\t\t\t\t\t= stream.readCString();\n\t\tthis.timescale \t\t\t\t\t= stream.readUint32();\n\t\tthis.presentation_time_delta \t= stream.readUint32();\n\t\tthis.event_duration\t\t\t \t= stream.readUint32();\n\t\tthis.id \t\t\t\t\t\t= stream.readUint32();\n\t}\n\tvar message_size = this.size - this.hdr_size - (4*4 + (this.scheme_id_uri.length+1) + (this.value.length+1));\n\tif (this.version == 1) {\n\t\tmessage_size -= 4;\n\t}\n\tthis.message_data = stream.readUint8Array(message_size);\n});\n\n// file:src/parsing/esds.js\nBoxParser.createFullBoxCtor(\"esds\", function(stream) {\n\tvar esd_data = stream.readUint8Array(this.size-this.hdr_size);\n\tif (typeof MPEG4DescriptorParser !== \"undefined\") {\n\t\tvar esd_parser = new MPEG4DescriptorParser();\n\t\tthis.esd = esd_parser.parseOneDescriptor(new DataStream(esd_data.buffer, 0, DataStream.BIG_ENDIAN));\n\t}\n});\n\n// file:src/parsing/fiel.js\nBoxParser.createBoxCtor(\"fiel\", function(stream) {\n\tthis.fieldCount = stream.readUint8();\n\tthis.fieldOrdering = stream.readUint8();\n});\n\n// file:src/parsing/frma.js\nBoxParser.createBoxCtor(\"frma\", function(stream) {\n\tthis.data_format = stream.readString(4);\n});\n\n// file:src/parsing/ftyp.js\nBoxParser.createBoxCtor(\"ftyp\", function(stream) {\n\tvar toparse = this.size - this.hdr_size;\n\tthis.major_brand = stream.readString(4);\n\tthis.minor_version = stream.readUint32();\n\ttoparse -= 8;\n\tthis.compatible_brands = [];\n\tvar i = 0;\n\twhile (toparse>=4) {\n\t\tthis.compatible_brands[i] = stream.readString(4);\n\t\ttoparse -= 4;\n\t\ti++;\n\t}\n});\n\n// file:src/parsing/hdlr.js\nBoxParser.createFullBoxCtor(\"hdlr\", function(stream) {\n\tif (this.version === 0) {\n\t\tstream.readUint32();\n\t\tthis.handler = stream.readString(4);\n\t\tstream.readUint32Array(3);\n\t\tthis.name = stream.readString(this.size-this.hdr_size-20);\n\t\tif (this.name[this.name.length-1]==='\\0') {\n\t\t\tthis.name = this.name.slice(0,-1);\n\t\t}\n\t}\n});\n\n// file:src/parsing/hvcC.js\nBoxParser.createBoxCtor(\"hvcC\", function(stream) {\n\tvar i, j;\n\tvar nb_nalus;\n\tvar length;\n\tvar tmp_byte;\n\tthis.configurationVersion = stream.readUint8();\n\ttmp_byte = stream.readUint8();\n\tthis.general_profile_space = tmp_byte >> 6;\n\tthis.general_tier_flag = (tmp_byte & 0x20) >> 5;\n\tthis.general_profile_idc = (tmp_byte & 0x1F);\n\tthis.general_profile_compatibility = stream.readUint32();\n\tthis.general_constraint_indicator = stream.readUint8Array(6);\n\tthis.general_level_idc = stream.readUint8();\n\tthis.min_spatial_segmentation_idc = stream.readUint16() & 0xFFF;\n\tthis.parallelismType = (stream.readUint8() & 0x3);\n\tthis.chroma_format_idc = (stream.readUint8() & 0x3);\n\tthis.bit_depth_luma_minus8 = (stream.readUint8() & 0x7);\n\tthis.bit_depth_chroma_minus8 = (stream.readUint8() & 0x7);\n\tthis.avgFrameRate = stream.readUint16();\n\ttmp_byte = stream.readUint8();\n\tthis.constantFrameRate = (tmp_byte >> 6);\n\tthis.numTemporalLayers = (tmp_byte & 0XD) >> 3;\n\tthis.temporalIdNested = (tmp_byte & 0X4) >> 2;\n\tthis.lengthSizeMinusOne = (tmp_byte & 0X3);\n\n\tthis.nalu_arrays = [];\n\tvar numOfArrays = stream.readUint8();\n\tfor (i = 0; i < numOfArrays; i++) {\n\t\tvar nalu_array = [];\n\t\tthis.nalu_arrays.push(nalu_array);\n\t\ttmp_byte = stream.readUint8()\n\t\tnalu_array.completeness = (tmp_byte & 0x80) >> 7;\n\t\tnalu_array.nalu_type = tmp_byte & 0x3F;\n\t\tvar numNalus = stream.readUint16();\n\t\tfor (j = 0; j < numNalus; j++) {\n\t\t\tvar nalu = {}\n\t\t\tnalu_array.push(nalu);\n\t\t\tlength = stream.readUint16();\n\t\t\tnalu.data   = stream.readUint8Array(length);\n\t\t}\n\t}\n});\n\n// file:src/parsing/iinf.js\nBoxParser.createFullBoxCtor(\"iinf\", function(stream) {\n\tvar ret;\n\tif (this.version === 0) {\n\t\tthis.entry_count = stream.readUint16();\n\t} else {\n\t\tthis.entry_count = stream.readUint32();\n\t}\n\tthis.item_infos = [];\n\tfor (var i = 0; i < this.entry_count; i++) {\n\t\tret = BoxParser.parseOneBox(stream, false, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tif (ret.box.type !== \"infe\") {\n\t\t\t\tLog.error(\"BoxParser\", \"Expected 'infe' box, got \"+ret.box.type);\n\t\t\t}\n\t\t\tthis.item_infos[i] = ret.box;\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n\n// file:src/parsing/iloc.js\nBoxParser.createFullBoxCtor(\"iloc\", function(stream) {\n\tvar byte;\n\tbyte = stream.readUint8();\n\tthis.offset_size = (byte >> 4) & 0xF;\n\tthis.length_size = byte & 0xF;\n\tbyte = stream.readUint8();\n\tthis.base_offset_size = (byte >> 4) & 0xF;\n\tif (this.version === 1 || this.version === 2) {\n\t\tthis.index_size = byte & 0xF;\n\t} else {\n\t\tthis.index_size = 0;\n\t\t// reserved = byte & 0xF;\n\t}\n\tthis.items = [];\n\tvar item_count = 0;\n\tif (this.version < 2) {\n\t\titem_count = stream.readUint16();\n\t} else if (this.version === 2) {\n\t\titem_count = stream.readUint32();\n\t} else {\n\t\tthrow \"version of iloc box not supported\";\n\t}\n\tfor (var i = 0; i < item_count; i++) {\n\t\tvar item = {};\n\t\tthis.items.push(item);\n\t\tif (this.version < 2) {\n\t\t\titem.item_ID = stream.readUint16();\n\t\t} else if (this.version === 2) {\n\t\t\titem.item_ID = stream.readUint16();\n\t\t} else {\n\t\t\tthrow \"version of iloc box not supported\";\n\t\t}\n\t\tif (this.version === 1 || this.version === 2) {\n\t\t\titem.construction_method = (stream.readUint16() & 0xF);\n\t\t} else {\n\t\t\titem.construction_method = 0;\n\t\t}\n\t\titem.data_reference_index = stream.readUint16();\n\t\tswitch(this.base_offset_size) {\n\t\t\tcase 0:\n\t\t\t\titem.base_offset = 0;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\titem.base_offset = stream.readUint32();\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\titem.base_offset = stream.readUint64();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow \"Error reading base offset size\";\n\t\t}\n\t\tvar extent_count = stream.readUint16();\n\t\titem.extents = [];\n\t\tfor (var j=0; j < extent_count; j++) {\n\t\t\tvar extent = {};\n\t\t\titem.extents.push(extent);\n\t\t\tif (this.version === 1 || this.version === 2) {\n\t\t\t\tswitch(this.index_size) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\textent.extent_index = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\textent.extent_index = stream.readUint32();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\textent.extent_index = stream.readUint64();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow \"Error reading extent index\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tswitch(this.offset_size) {\n\t\t\t\tcase 0:\n\t\t\t\t\textent.extent_offset = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\textent.extent_offset = stream.readUint32();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\textent.extent_offset = stream.readUint64();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow \"Error reading extent index\";\n\t\t\t}\n\t\t\tswitch(this.length_size) {\n\t\t\t\tcase 0:\n\t\t\t\t\textent.extent_length = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\textent.extent_length = stream.readUint32();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\textent.extent_length = stream.readUint64();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow \"Error reading extent index\";\n\t\t\t}\n\t\t}\n\t}\n});\n\n// file:src/parsing/imir.js\nBoxParser.createBoxCtor(\"imir\", function(stream) {\n\tvar tmp = stream.readUint8();\n\tthis.reserved = tmp >> 7;\n\tthis.axis = tmp & 1;\n});// file:src/parsing/infe.js\nBoxParser.createFullBoxCtor(\"infe\", function(stream) {\n\tif (this.version === 0 || this.version === 1) {\n\t\tthis.item_ID = stream.readUint16();\n\t\tthis.item_protection_index = stream.readUint16();\n\t\tthis.item_name = stream.readCString();\n\t\tthis.content_type = stream.readCString();\n\t\tthis.content_encoding = stream.readCString();\n\t}\n\tif (this.version === 1) {\n\t\tthis.extension_type = stream.readString(4);\n\t\tLog.warn(\"BoxParser\", \"Cannot parse extension type\");\n\t\tstream.seek(this.start+this.size);\n\t\treturn;\n\t}\n\tif (this.version >= 2) {\n\t\tif (this.version === 2) {\n\t\t\tthis.item_ID = stream.readUint16();\n\t\t} else if (this.version === 3) {\n\t\t\tthis.item_ID = stream.readUint32();\n\t\t}\n\t\tthis.item_protection_index = stream.readUint16();\n\t\tthis.item_type = stream.readString(4);\n\t\tthis.item_name = stream.readCString();\n\t\tif (this.item_type === \"mime\") {\n\t\t\tthis.content_type = stream.readCString();\n\t\t\tthis.content_encoding = stream.readCString();\n\t\t} else if (this.item_type === \"uri \") {\n\t\t\tthis.item_uri_type = stream.readCString();\n\t\t}\n\t}\n});\n// file:src/parsing/ipma.js\nBoxParser.createFullBoxCtor(\"ipma\", function(stream) {\n\tvar i, j;\n\tentry_count = stream.readUint32();\n\tthis.associations = [];\n\tfor(i=0; i<entry_count; i++) {\n\t\tvar item_assoc = {};\n\t\tthis.associations.push(item_assoc);\n\t\tif (this.version < 1) {\n\t\t\titem_assoc.id = stream.readUint16();\n\t\t} else {\n\t\t\titem_assoc.id = stream.readUint32();\n\t\t}\n\t\tvar association_count = stream.readUint8();\n\t\titem_assoc.props = [];\n\t\tfor (j = 0; j < association_count; j++) {\n\t\t\tvar tmp = stream.readUint8();\n\t\t\tvar p = {};\n\t\t\titem_assoc.props.push(p);\n\t\t\tp.essential = ((tmp & 0x80) >> 7) === 1;\n\t\t\tif (this.flags & 0x1) {\n\t\t\t\tp.property_index = (tmp & 0x7F) << 8 | stream.readUint8();\n\t\t\t} else {\n\t\t\t\tp.property_index = (tmp & 0x7F);\n\t\t\t}\n\t\t}\n\t}\n});\n\n// file:src/parsing/iref.js\nBoxParser.createFullBoxCtor(\"iref\", function(stream) {\n\tvar ret;\n\tvar entryCount;\n\tvar box;\n\tthis.references = [];\n\n\twhile (stream.getPosition() < this.start+this.size) {\n\t\tret = BoxParser.parseOneBox(stream, true, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tif (this.version === 0) {\n\t\t\t\tbox = new BoxParser.SingleItemTypeReferenceBox(ret.type, ret.size, ret.hdr_size, ret.start);\n\t\t\t} else {\n\t\t\t\tbox = new BoxParser.SingleItemTypeReferenceBoxLarge(ret.type, ret.size, ret.hdr_size, ret.start);\n\t\t\t}\n\t\t\tif (box.write === BoxParser.Box.prototype.write && box.type !== \"mdat\") {\n\t\t\t\tLog.warn(\"BoxParser\", box.type+\" box writing not yet implemented, keeping unparsed data in memory for later write\");\n\t\t\t\tbox.parseDataAndRewind(stream);\n\t\t\t}\n\t\t\tbox.parse(stream);\n\t\t\tthis.references.push(box);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n// file:src/parsing/irot.js\nBoxParser.createBoxCtor(\"irot\", function(stream) {\n\tthis.angle = stream.readUint8() & 0x3;\n});\n\n// file:src/parsing/ispe.js\nBoxParser.createFullBoxCtor(\"ispe\", function(stream) {\n\tthis.image_width = stream.readUint32();\n\tthis.image_height = stream.readUint32();\n});// file:src/parsing/kind.js\nBoxParser.createFullBoxCtor(\"kind\", function(stream) {\n\tthis.schemeURI = stream.readCString();\n\tthis.value = stream.readCString();\n});\n// file:src/parsing/leva.js\nBoxParser.createFullBoxCtor(\"leva\", function(stream) {\n\tvar count = stream.readUint8();\n\tthis.levels = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tvar level = {};\n\t\tthis.levels[i] = level;\n\t\tlevel.track_ID = stream.readUint32();\n\t\tvar tmp_byte = stream.readUint8();\n\t\tlevel.padding_flag = tmp_byte >> 7;\n\t\tlevel.assignment_type = tmp_byte & 0x7F;\n\t\tswitch (level.assignment_type) {\n\t\t\tcase 0:\n\t\t\t\tlevel.grouping_type = stream.readString(4);\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tlevel.grouping_type = stream.readString(4);\n\t\t\t\tlevel.grouping_type_parameter = stream.readUint32();\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tlevel.sub_track_id = stream.readUint32();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tLog.warn(\"BoxParser\", \"Unknown leva assignement type\");\n\t\t}\n\t}\n});\n\n// file:src/parsing/lsel.js\nBoxParser.createBoxCtor(\"lsel\", function(stream) {\n\tthis.layer_id = stream.readUint16();\n});// file:src/parsing/maxr.js\nBoxParser.createBoxCtor(\"maxr\", function(stream) {\n\tthis.period = stream.readUint32();\n\tthis.bytes = stream.readUint32();\n});\n\n// file:src/parsing/mdcv.js\nBoxParser.createBoxCtor(\"mdcv\", function(stream) {\n    this.display_primaries = [];\n    this.display_primaries[0] = {};\n    this.display_primaries[0].x = stream.readUint16();\n    this.display_primaries[0].y = stream.readUint16();\n    this.display_primaries[1] = {};\n    this.display_primaries[1].x = stream.readUint16();\n    this.display_primaries[1].y = stream.readUint16();\n    this.display_primaries[2] = {};\n    this.display_primaries[2].x = stream.readUint16();\n    this.display_primaries[2].y = stream.readUint16();\n    this.white_point = {};\n    this.white_point.x = stream.readUint16();\n    this.white_point.y = stream.readUint16();\n    this.max_display_mastering_luminance = stream.readUint32();\n    this.min_display_mastering_luminance = stream.readUint32();\n});\n\n// file:src/parsing/mdhd.js\nBoxParser.createFullBoxCtor(\"mdhd\", function(stream) {\n\tif (this.version == 1) {\n\t\tthis.creation_time = stream.readUint64();\n\t\tthis.modification_time = stream.readUint64();\n\t\tthis.timescale = stream.readUint32();\n\t\tthis.duration = stream.readUint64();\n\t} else {\n\t\tthis.creation_time = stream.readUint32();\n\t\tthis.modification_time = stream.readUint32();\n\t\tthis.timescale = stream.readUint32();\n\t\tthis.duration = stream.readUint32();\n\t}\n\tthis.parseLanguage(stream);\n\tstream.readUint16();\n});\n\n// file:src/parsing/mehd.js\nBoxParser.createFullBoxCtor(\"mehd\", function(stream) {\n\tif (this.flags & 0x1) {\n\t\tLog.warn(\"BoxParser\", \"mehd box incorrectly uses flags set to 1, converting version to 1\");\n\t\tthis.version = 1;\n\t}\n\tif (this.version == 1) {\n\t\tthis.fragment_duration = stream.readUint64();\n\t} else {\n\t\tthis.fragment_duration = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/meta.js\nBoxParser.createFullBoxCtor(\"meta\", function(stream) {\n\tthis.boxes = [];\n\tBoxParser.ContainerBox.prototype.parse.call(this, stream);\n});\n// file:src/parsing/mfhd.js\nBoxParser.createFullBoxCtor(\"mfhd\", function(stream) {\n\tthis.sequence_number = stream.readUint32();\n});\n\n// file:src/parsing/mfro.js\nBoxParser.createFullBoxCtor(\"mfro\", function(stream) {\n\tthis._size = stream.readUint32();\n});\n\n// file:src/parsing/mvhd.js\nBoxParser.createFullBoxCtor(\"mvhd\", function(stream) {\n\tif (this.version == 1) {\n\t\tthis.creation_time = stream.readUint64();\n\t\tthis.modification_time = stream.readUint64();\n\t\tthis.timescale = stream.readUint32();\n\t\tthis.duration = stream.readUint64();\n\t} else {\n\t\tthis.creation_time = stream.readUint32();\n\t\tthis.modification_time = stream.readUint32();\n\t\tthis.timescale = stream.readUint32();\n\t\tthis.duration = stream.readUint32();\n\t}\n\tthis.rate = stream.readUint32();\n\tthis.volume = stream.readUint16()>>8;\n\tstream.readUint16();\n\tstream.readUint32Array(2);\n\tthis.matrix = stream.readUint32Array(9);\n\tstream.readUint32Array(6);\n\tthis.next_track_id = stream.readUint32();\n});\n// file:src/parsing/npck.js\nBoxParser.createBoxCtor(\"npck\", function(stream) {\n\tthis.packetssent = stream.readUint32();\n});\n\n// file:src/parsing/nump.js\nBoxParser.createBoxCtor(\"nump\", function(stream) {\n\tthis.packetssent = stream.readUint64();\n});\n\n// file:src/parsing/padb.js\nBoxParser.createFullBoxCtor(\"padb\", function(stream) {\n\tvar sample_count = stream.readUint32();\n\tthis.padbits = [];\n\tfor (var i = 0; i < Math.floor((sample_count+1)/2); i++) {\n\t\tthis.padbits = stream.readUint8();\n\t}\n});\n\n// file:src/parsing/pasp.js\nBoxParser.createBoxCtor(\"pasp\", function(stream) {\n\tthis.hSpacing = stream.readUint32();\n\tthis.vSpacing = stream.readUint32();\n});// file:src/parsing/payl.js\nBoxParser.createBoxCtor(\"payl\", function(stream) {\n\tthis.text = stream.readString(this.size - this.hdr_size);\n});\n\n// file:src/parsing/payt.js\nBoxParser.createBoxCtor(\"payt\", function(stream) {\n\tthis.payloadID = stream.readUint32();\n\tvar count = stream.readUint8();\n\tthis.rtpmap_string = stream.readString(count);\n});\n\n// file:src/parsing/pdin.js\nBoxParser.createFullBoxCtor(\"pdin\", function(stream) {\n\tvar count = (this.size - this.hdr_size)/8;\n\tthis.rate = [];\n\tthis.initial_delay = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tthis.rate[i] = stream.readUint32();\n\t\tthis.initial_delay[i] = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/pitm.js\nBoxParser.createFullBoxCtor(\"pitm\", function(stream) {\n\tif (this.version === 0) {\n\t\tthis.item_id = stream.readUint16();\n\t} else {\n\t\tthis.item_id = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/pixi.js\nBoxParser.createFullBoxCtor(\"pixi\", function(stream) {\n\tvar i;\n\tthis.num_channels = stream.readUint8();\n\tthis.bits_per_channels = [];\n\tfor (i = 0; i < this.num_channels; i++) {\n\t\tthis.bits_per_channels[i] = stream.readUint8();\n\t}\n});\n\n// file:src/parsing/pmax.js\nBoxParser.createBoxCtor(\"pmax\", function(stream) {\n\tthis.bytes = stream.readUint32();\n});\n\n// file:src/parsing/prft.js\nBoxParser.createFullBoxCtor(\"prft\", function(stream) {\n\tthis.ref_track_id = stream.readUint32();\n\tthis.ntp_timestamp = stream.readUint64();\n\tif (this.version === 0) {\n\t\tthis.media_time = stream.readUint32();\n\t} else {\n\t\tthis.media_time = stream.readUint64();\n\t}\n});\n\n// file:src/parsing/pssh.js\nBoxParser.createFullBoxCtor(\"pssh\", function(stream) {\n\tthis.system_id = BoxParser.parseHex16(stream);\n\tif (this.version > 0) {\n\t\tvar count = stream.readUint32();\n\t\tthis.kid = [];\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tthis.kid[i] = BoxParser.parseHex16(stream);\n\t\t}\n\t}\n\tvar datasize = stream.readUint32();\n\tif (datasize > 0) {\n\t\tthis.data = stream.readUint8Array(datasize);\n\t}\n});\n\n// file:src/parsing/qt/clef.js\nBoxParser.createFullBoxCtor(\"clef\", function(stream) {\n\tthis.width = stream.readUint32();\n\tthis.height = stream.readUint32();\n});// file:src/parsing/qt/enof.js\nBoxParser.createFullBoxCtor(\"enof\", function(stream) {\n\tthis.width = stream.readUint32();\n\tthis.height = stream.readUint32();\n});// file:src/parsing/qt/prof.js\nBoxParser.createFullBoxCtor(\"prof\", function(stream) {\n\tthis.width = stream.readUint32();\n\tthis.height = stream.readUint32();\n});// file:src/parsing/qt/tapt.js\nBoxParser.createContainerBoxCtor(\"tapt\", null, [ \"clef\", \"prof\", \"enof\"]);// file:src/parsing/rtp.js\nBoxParser.createBoxCtor(\"rtp \", function(stream) {\n\tthis.descriptionformat = stream.readString(4);\n\tthis.sdptext = stream.readString(this.size - this.hdr_size - 4);\n});\n\n// file:src/parsing/saio.js\nBoxParser.createFullBoxCtor(\"saio\", function(stream) {\n\tif (this.flags & 0x1) {\n\t\tthis.aux_info_type = stream.readUint32();\n\t\tthis.aux_info_type_parameter = stream.readUint32();\n\t}\n\tvar count = stream.readUint32();\n\tthis.offset = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tif (this.version === 0) {\n\t\t\tthis.offset[i] = stream.readUint32();\n\t\t} else {\n\t\t\tthis.offset[i] = stream.readUint64();\n\t\t}\n\t}\n});\n// file:src/parsing/saiz.js\nBoxParser.createFullBoxCtor(\"saiz\", function(stream) {\n\tif (this.flags & 0x1) {\n\t\tthis.aux_info_type = stream.readUint32();\n\t\tthis.aux_info_type_parameter = stream.readUint32();\n\t}\n\tthis.default_sample_info_size = stream.readUint8();\n\tvar count = stream.readUint32();\n\tthis.sample_info_size = [];\n\tif (this.default_sample_info_size === 0) {\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tthis.sample_info_size[i] = stream.readUint8();\n\t\t}\n\t}\n});\n\n// file:src/parsing/sampleentries/mett.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_METADATA, \"mett\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.content_encoding = stream.readCString();\n\tthis.mime_format = stream.readCString();\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/sampleentries/metx.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_METADATA, \"metx\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.content_encoding = stream.readCString();\n\tthis.namespace = stream.readCString();\n\tthis.schema_location = stream.readCString();\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/sampleentries/sbtt.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE, \"sbtt\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.content_encoding = stream.readCString();\n\tthis.mime_format = stream.readCString();\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/sampleentries/stpp.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE, \"stpp\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.namespace = stream.readCString();\n\tthis.schema_location = stream.readCString();\n\tthis.auxiliary_mime_types = stream.readCString();\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/sampleentries/stxt.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE, \"stxt\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.content_encoding = stream.readCString();\n\tthis.mime_format = stream.readCString();\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/sampleentries/tx3g.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE, \"tx3g\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.displayFlags = stream.readUint32();\n\tthis.horizontal_justification = stream.readInt8();\n\tthis.vertical_justification = stream.readInt8();\n\tthis.bg_color_rgba = stream.readUint8Array(4);\n\tthis.box_record = stream.readInt16Array(4);\n\tthis.style_record = stream.readUint8Array(12);\n\tthis.parseFooter(stream);\n});\n// file:src/parsing/sampleentries/wvtt.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_METADATA, \"wvtt\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/samplegroups/alst.js\nBoxParser.createSampleGroupCtor(\"alst\", function(stream) {\n\tvar i;\n\tvar roll_count = stream.readUint16();\n\tthis.first_output_sample = stream.readUint16();\n\tthis.sample_offset = [];\n\tfor (i = 0; i < roll_count; i++) {\n\t\tthis.sample_offset[i] = stream.readUint32();\n\t}\n\tvar remaining = this.description_length - 4 - 4*roll_count;\n\tthis.num_output_samples = [];\n\tthis.num_total_samples = [];\n\tfor (i = 0; i < remaining/4; i++) {\n\t\tthis.num_output_samples[i] = stream.readUint16();\n\t\tthis.num_total_samples[i] = stream.readUint16();\n\t}\n});\n\n// file:src/parsing/samplegroups/avll.js\nBoxParser.createSampleGroupCtor(\"avll\", function(stream) {\n\tthis.layerNumber = stream.readUint8();\n\tthis.accurateStatisticsFlag = stream.readUint8();\n\tthis.avgBitRate = stream.readUint16();\n\tthis.avgFrameRate = stream.readUint16();\n});\n\n// file:src/parsing/samplegroups/avss.js\nBoxParser.createSampleGroupCtor(\"avss\", function(stream) {\n\tthis.subSequenceIdentifier = stream.readUint16();\n\tthis.layerNumber = stream.readUint8();\n\tvar tmp_byte = stream.readUint8();\n\tthis.durationFlag = tmp_byte >> 7;\n\tthis.avgRateFlag = (tmp_byte >> 6) & 0x1;\n\tif (this.durationFlag) {\n\t\tthis.duration = stream.readUint32();\n\t}\n\tif (this.avgRateFlag) {\n\t\tthis.accurateStatisticsFlag = stream.readUint8();\n\t\tthis.avgBitRate = stream.readUint16();\n\t\tthis.avgFrameRate = stream.readUint16();\n\t}\n\tthis.dependency = [];\n\tvar numReferences = stream.readUint8();\n\tfor (var i = 0; i < numReferences; i++) {\n\t\tvar dependencyInfo = {};\n\t\tthis.dependency.push(dependencyInfo);\n\t\tdependencyInfo.subSeqDirectionFlag = stream.readUint8();\n\t\tdependencyInfo.layerNumber = stream.readUint8();\n\t\tdependencyInfo.subSequenceIdentifier = stream.readUint16();\n\t}\n});\n\n// file:src/parsing/samplegroups/dtrt.js\nBoxParser.createSampleGroupCtor(\"dtrt\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/mvif.js\nBoxParser.createSampleGroupCtor(\"mvif\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/prol.js\nBoxParser.createSampleGroupCtor(\"prol\", function(stream) {\n\tthis.roll_distance = stream.readInt16();\n});\n\n// file:src/parsing/samplegroups/rap.js\nBoxParser.createSampleGroupCtor(\"rap \", function(stream) {\n\tvar tmp_byte = stream.readUint8();\n\tthis.num_leading_samples_known = tmp_byte >> 7;\n\tthis.num_leading_samples = tmp_byte & 0x7F;\n});\n\n// file:src/parsing/samplegroups/rash.js\nBoxParser.createSampleGroupCtor(\"rash\", function(stream) {\n\tthis.operation_point_count = stream.readUint16();\n\tif (this.description_length !== 2+(this.operation_point_count === 1?2:this.operation_point_count*6)+9) {\n\t\tLog.warn(\"BoxParser\", \"Mismatch in \"+this.grouping_type+\" sample group length\");\n\t\tthis.data =  stream.readUint8Array(this.description_length-2);\n\t} else {\n\t\tif (this.operation_point_count === 1) {\n\t\t\tthis.target_rate_share = stream.readUint16();\n\t\t} else {\n\t\t\tthis.target_rate_share = [];\n\t\t\tthis.available_bitrate = [];\n\t\t\tfor (var i = 0; i < this.operation_point_count; i++) {\n\t\t\t\tthis.available_bitrate[i] = stream.readUint32();\n\t\t\t\tthis.target_rate_share[i] = stream.readUint16();\n\t\t\t}\n\t\t}\n\t\tthis.maximum_bitrate = stream.readUint32();\n\t\tthis.minimum_bitrate = stream.readUint32();\n\t\tthis.discard_priority = stream.readUint8();\n\t}\n});\n\n// file:src/parsing/samplegroups/roll.js\nBoxParser.createSampleGroupCtor(\"roll\", function(stream) {\n\tthis.roll_distance = stream.readInt16();\n});\n\n// file:src/parsing/samplegroups/samplegroup.js\nBoxParser.SampleGroupEntry.prototype.parse = function(stream) {\n\tLog.warn(\"BoxParser\", \"Unknown Sample Group type: \"+this.grouping_type);\n\tthis.data =  stream.readUint8Array(this.description_length);\n}\n\n// file:src/parsing/samplegroups/scif.js\nBoxParser.createSampleGroupCtor(\"scif\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/scnm.js\nBoxParser.createSampleGroupCtor(\"scnm\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/seig.js\nBoxParser.createSampleGroupCtor(\"seig\", function(stream) {\n\tthis.reserved = stream.readUint8();\n\tvar tmp = stream.readUint8();\n\tthis.crypt_byte_block = tmp >> 4;\n\tthis.skip_byte_block = tmp & 0xF;\n\tthis.isProtected = stream.readUint8();\n\tthis.Per_Sample_IV_Size = stream.readUint8();\n\tthis.KID = BoxParser.parseHex16(stream);\n\tthis.constant_IV_size = 0;\n\tthis.constant_IV = 0;\n\tif (this.isProtected === 1 && this.Per_Sample_IV_Size === 0) {\n\t\tthis.constant_IV_size = stream.readUint8();\n\t\tthis.constant_IV = stream.readUint8Array(this.constant_IV_size);\n\t}\n});\n\n// file:src/parsing/samplegroups/stsa.js\nBoxParser.createSampleGroupCtor(\"stsa\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/sync.js\nBoxParser.createSampleGroupCtor(\"sync\", function(stream) {\n\tvar tmp_byte = stream.readUint8();\n\tthis.NAL_unit_type = tmp_byte & 0x3F;\n});\n\n// file:src/parsing/samplegroups/tele.js\nBoxParser.createSampleGroupCtor(\"tele\", function(stream) {\n\tvar tmp_byte = stream.readUint8();\n\tthis.level_independently_decodable = tmp_byte >> 7;\n});\n\n// file:src/parsing/samplegroups/tsas.js\nBoxParser.createSampleGroupCtor(\"tsas\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/tscl.js\nBoxParser.createSampleGroupCtor(\"tscl\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/vipr.js\nBoxParser.createSampleGroupCtor(\"vipr\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/sbgp.js\nBoxParser.createFullBoxCtor(\"sbgp\", function(stream) {\n\tthis.grouping_type = stream.readString(4);\n\tif (this.version === 1) {\n\t\tthis.grouping_type_parameter = stream.readUint32();\n\t} else {\n\t\tthis.grouping_type_parameter = 0;\n\t}\n\tthis.entries = [];\n\tvar entry_count = stream.readUint32();\n\tfor (var i = 0; i < entry_count; i++) {\n\t\tvar entry = {};\n\t\tthis.entries.push(entry);\n\t\tentry.sample_count = stream.readInt32();\n\t\tentry.group_description_index = stream.readInt32();\n\t}\n});\n\n// file:src/parsing/schm.js\nBoxParser.createFullBoxCtor(\"schm\", function(stream) {\n\tthis.scheme_type = stream.readString(4);\n\tthis.scheme_version = stream.readUint32();\n\tif (this.flags & 0x000001) {\n\t\tthis.scheme_uri = stream.readString(this.size - this.hdr_size - 8);\n\t}\n});\n\n// file:src/parsing/sdp.js\nBoxParser.createBoxCtor(\"sdp \", function(stream) {\n\tthis.sdptext = stream.readString(this.size - this.hdr_size);\n});\n\n// file:src/parsing/sdtp.js\nBoxParser.createFullBoxCtor(\"sdtp\", function(stream) {\n\tvar tmp_byte;\n\tvar count = (this.size - this.hdr_size);\n\tthis.is_leading = [];\n\tthis.sample_depends_on = [];\n\tthis.sample_is_depended_on = [];\n\tthis.sample_has_redundancy = [];\n\tfor (var i = 0; i < count; i++) {\n\t\ttmp_byte = stream.readUint8();\n\t\tthis.is_leading[i] = tmp_byte >> 6;\n\t\tthis.sample_depends_on[i] = (tmp_byte >> 4) & 0x3;\n\t\tthis.sample_is_depended_on[i] = (tmp_byte >> 2) & 0x3;\n\t\tthis.sample_has_redundancy[i] = tmp_byte & 0x3;\n\t}\n});\n\n// file:src/parsing/senc.js\n// Cannot be fully parsed because Per_Sample_IV_Size needs to be known\r\nBoxParser.createFullBoxCtor(\"senc\" /*, function(stream) {\r\n\tthis.parseFullHeader(stream);\r\n\tvar sample_count = stream.readUint32();\r\n\tthis.samples = [];\r\n\tfor (var i = 0; i < sample_count; i++) {\r\n\t\tvar sample = {};\r\n\t\t// tenc.default_Per_Sample_IV_Size or seig.Per_Sample_IV_Size\r\n\t\tsample.InitializationVector = this.readUint8Array(Per_Sample_IV_Size*8);\r\n\t\tif (this.flags & 0x2) {\r\n\t\t\tsample.subsamples = [];\r\n\t\t\tsubsample_count = stream.readUint16();\r\n\t\t\tfor (var j = 0; j < subsample_count; j++) {\r\n\t\t\t\tvar subsample = {};\r\n\t\t\t\tsubsample.BytesOfClearData = stream.readUint16();\r\n\t\t\t\tsubsample.BytesOfProtectedData = stream.readUint32();\r\n\t\t\t\tsample.subsamples.push(subsample);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// TODO\r\n\t\tthis.samples.push(sample);\r\n\t}\r\n}*/);\r\n// file:src/parsing/sgpd.js\nBoxParser.createFullBoxCtor(\"sgpd\", function(stream) {\n\tthis.grouping_type = stream.readString(4);\n\tLog.debug(\"BoxParser\", \"Found Sample Groups of type \"+this.grouping_type);\n\tif (this.version === 1) {\n\t\tthis.default_length = stream.readUint32();\n\t} else {\n\t\tthis.default_length = 0;\n\t}\n\tif (this.version >= 2) {\n\t\tthis.default_group_description_index = stream.readUint32();\n\t}\n\tthis.entries = [];\n\tvar entry_count = stream.readUint32();\n\tfor (var i = 0; i < entry_count; i++) {\n\t\tvar entry;\n\t\tif (BoxParser[this.grouping_type+\"SampleGroupEntry\"]) {\n\t\t\tentry = new BoxParser[this.grouping_type+\"SampleGroupEntry\"](this.grouping_type);\n\t\t}  else {\n\t\t\tentry = new BoxParser.SampleGroupEntry(this.grouping_type);\n\t\t}\n\t\tthis.entries.push(entry);\n\t\tif (this.version === 1) {\n\t\t\tif (this.default_length === 0) {\n\t\t\t\tentry.description_length = stream.readUint32();\n\t\t\t} else {\n\t\t\t\tentry.description_length = this.default_length;\n\t\t\t}\n\t\t} else {\n\t\t\tentry.description_length = this.default_length;\n\t\t}\n\t\tif (entry.write === BoxParser.SampleGroupEntry.prototype.write) {\n\t\t\tLog.info(\"BoxParser\", \"SampleGroup for type \"+this.grouping_type+\" writing not yet implemented, keeping unparsed data in memory for later write\");\n\t\t\t// storing data\n\t\t\tentry.data = stream.readUint8Array(entry.description_length);\n\t\t\t// rewinding\n\t\t\tstream.position -= entry.description_length;\n\t\t}\n\t\tentry.parse(stream);\n\t}\n});\n\n// file:src/parsing/sidx.js\nBoxParser.createFullBoxCtor(\"sidx\", function(stream) {\n\tthis.reference_ID = stream.readUint32();\n\tthis.timescale = stream.readUint32();\n\tif (this.version === 0) {\n\t\tthis.earliest_presentation_time = stream.readUint32();\n\t\tthis.first_offset = stream.readUint32();\n\t} else {\n\t\tthis.earliest_presentation_time = stream.readUint64();\n\t\tthis.first_offset = stream.readUint64();\n\t}\n\tstream.readUint16();\n\tthis.references = [];\n\tvar count = stream.readUint16();\n\tfor (var i = 0; i < count; i++) {\n\t\tvar ref = {};\n\t\tthis.references.push(ref);\n\t\tvar tmp_32 = stream.readUint32();\n\t\tref.reference_type = (tmp_32 >> 31) & 0x1;\n\t\tref.referenced_size = tmp_32 & 0x7FFFFFFF;\n\t\tref.subsegment_duration = stream.readUint32();\n\t\ttmp_32 = stream.readUint32();\n\t\tref.starts_with_SAP = (tmp_32 >> 31) & 0x1;\n\t\tref.SAP_type = (tmp_32 >> 28) & 0x7;\n\t\tref.SAP_delta_time = tmp_32 & 0xFFFFFFF;\n\t}\n});\n\n// file:src/parsing/singleitemtypereference.js\nBoxParser.SingleItemTypeReferenceBox = function(type, size, hdr_size, start) {\n\tBoxParser.Box.call(this, type, size);\n\tthis.hdr_size = hdr_size;\n\tthis.start = start;\n}\nBoxParser.SingleItemTypeReferenceBox.prototype = new BoxParser.Box();\nBoxParser.SingleItemTypeReferenceBox.prototype.parse = function(stream) {\n\tthis.from_item_ID = stream.readUint16();\n\tvar count =  stream.readUint16();\n\tthis.references = [];\n\tfor(var i = 0; i < count; i++) {\n\t\tthis.references[i] = stream.readUint16();\n\t}\n}\n\n// file:src/parsing/singleitemtypereferencelarge.js\nBoxParser.SingleItemTypeReferenceBoxLarge = function(type, size, hdr_size, start) {\n\tBoxParser.Box.call(this, type, size);\n\tthis.hdr_size = hdr_size;\n\tthis.start = start;\n}\nBoxParser.SingleItemTypeReferenceBoxLarge.prototype = new BoxParser.Box();\nBoxParser.SingleItemTypeReferenceBoxLarge.prototype.parse = function(stream) {\n\tthis.from_item_ID = stream.readUint32();\n\tvar count =  stream.readUint16();\n\tthis.references = [];\n\tfor(var i = 0; i < count; i++) {\n\t\tthis.references[i] = stream.readUint32();\n\t}\n}\n\n// file:src/parsing/SmDm.js\nBoxParser.createFullBoxCtor(\"SmDm\", function(stream) {\n\tthis.primaryRChromaticity_x = stream.readUint16();\n    this.primaryRChromaticity_y = stream.readUint16();\n    this.primaryGChromaticity_x = stream.readUint16();\n    this.primaryGChromaticity_y = stream.readUint16();\n    this.primaryBChromaticity_x = stream.readUint16();\n    this.primaryBChromaticity_y = stream.readUint16();\n    this.whitePointChromaticity_x = stream.readUint16();\n    this.whitePointChromaticity_y = stream.readUint16();\n    this.luminanceMax = stream.readUint32();\n    this.luminanceMin = stream.readUint32();\n});\n\n// file:src/parsing/smhd.js\nBoxParser.createFullBoxCtor(\"smhd\", function(stream) {\n\tthis.balance = stream.readUint16();\n\tstream.readUint16();\n});\n\n// file:src/parsing/ssix.js\nBoxParser.createFullBoxCtor(\"ssix\", function(stream) {\n\tthis.subsegments = [];\n\tvar subsegment_count = stream.readUint32();\n\tfor (var i = 0; i < subsegment_count; i++) {\n\t\tvar subsegment = {};\n\t\tthis.subsegments.push(subsegment);\n\t\tsubsegment.ranges = [];\n\t\tvar range_count = stream.readUint32();\n\t\tfor (var j = 0; j < range_count; j++) {\n\t\t\tvar range = {};\n\t\t\tsubsegment.ranges.push(range);\n\t\t\trange.level = stream.readUint8();\n\t\t\trange.range_size = stream.readUint24();\n\t\t}\n\t}\n});\n\n// file:src/parsing/stco.js\nBoxParser.createFullBoxCtor(\"stco\", function(stream) {\n\tvar entry_count;\n\tentry_count = stream.readUint32();\n\tthis.chunk_offsets = [];\n\tif (this.version === 0) {\n\t\tfor (var i = 0; i < entry_count; i++) {\n\t\t\tthis.chunk_offsets.push(stream.readUint32());\n\t\t}\n\t}\n});\n\n// file:src/parsing/stdp.js\nBoxParser.createFullBoxCtor(\"stdp\", function(stream) {\n\tvar count = (this.size - this.hdr_size)/2;\n\tthis.priority = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tthis.priority[i] = stream.readUint16();\n\t}\n});\n\n// file:src/parsing/sthd.js\nBoxParser.createFullBoxCtor(\"sthd\");\n\n// file:src/parsing/stri.js\nBoxParser.createFullBoxCtor(\"stri\", function(stream) {\n\tthis.switch_group = stream.readUint16();\n\tthis.alternate_group = stream.readUint16();\n\tthis.sub_track_id = stream.readUint32();\n\tvar count = (this.size - this.hdr_size - 8)/4;\n\tthis.attribute_list = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tthis.attribute_list[i] = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/stsc.js\nBoxParser.createFullBoxCtor(\"stsc\", function(stream) {\n\tvar entry_count;\n\tvar i;\n\tentry_count = stream.readUint32();\n\tthis.first_chunk = [];\n\tthis.samples_per_chunk = [];\n\tthis.sample_description_index = [];\n\tif (this.version === 0) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.first_chunk.push(stream.readUint32());\n\t\t\tthis.samples_per_chunk.push(stream.readUint32());\n\t\t\tthis.sample_description_index.push(stream.readUint32());\n\t\t}\n\t}\n});\n\n// file:src/parsing/stsd.js\nBoxParser.createFullBoxCtor(\"stsd\", function(stream) {\n\tvar i;\n\tvar ret;\n\tvar entryCount;\n\tvar box;\n\tthis.entries = [];\n\tentryCount = stream.readUint32();\n\tfor (i = 1; i <= entryCount; i++) {\n\t\tret = BoxParser.parseOneBox(stream, true, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tif (BoxParser[ret.type+\"SampleEntry\"]) {\n\t\t\t\tbox = new BoxParser[ret.type+\"SampleEntry\"](ret.size);\n\t\t\t\tbox.hdr_size = ret.hdr_size;\n\t\t\t\tbox.start = ret.start;\n\t\t\t} else {\n\t\t\t\tLog.warn(\"BoxParser\", \"Unknown sample entry type: \"+ret.type);\n\t\t\t\tbox = new BoxParser.SampleEntry(ret.type, ret.size, ret.hdr_size, ret.start);\n\t\t\t}\n\t\t\tif (box.write === BoxParser.SampleEntry.prototype.write) {\n\t\t\t\tLog.info(\"BoxParser\", \"SampleEntry \"+box.type+\" box writing not yet implemented, keeping unparsed data in memory for later write\");\n\t\t\t\tbox.parseDataAndRewind(stream);\n\t\t\t}\n\t\t\tbox.parse(stream);\n\t\t\tthis.entries.push(box);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n\n// file:src/parsing/stsg.js\nBoxParser.createFullBoxCtor(\"stsg\", function(stream) {\n\tthis.grouping_type = stream.readUint32();\n\tvar count = stream.readUint16();\n\tthis.group_description_index = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tthis.group_description_index[i] = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/stsh.js\nBoxParser.createFullBoxCtor(\"stsh\", function(stream) {\n\tvar entry_count;\n\tvar i;\n\tentry_count = stream.readUint32();\n\tthis.shadowed_sample_numbers = [];\n\tthis.sync_sample_numbers = [];\n\tif (this.version === 0) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.shadowed_sample_numbers.push(stream.readUint32());\n\t\t\tthis.sync_sample_numbers.push(stream.readUint32());\n\t\t}\n\t}\n});\n\n// file:src/parsing/stss.js\nBoxParser.createFullBoxCtor(\"stss\", function(stream) {\n\tvar i;\n\tvar entry_count;\n\tentry_count = stream.readUint32();\n\tif (this.version === 0) {\n\t\tthis.sample_numbers = [];\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.sample_numbers.push(stream.readUint32());\n\t\t}\n\t}\n});\n\n// file:src/parsing/stsz.js\nBoxParser.createFullBoxCtor(\"stsz\", function(stream) {\n\tvar i;\n\tthis.sample_sizes = [];\n\tif (this.version === 0) {\n\t\tthis.sample_size = stream.readUint32();\n\t\tthis.sample_count = stream.readUint32();\n\t\tfor (i = 0; i < this.sample_count; i++) {\n\t\t\tif (this.sample_size === 0) {\n\t\t\t\tthis.sample_sizes.push(stream.readUint32());\n\t\t\t} else {\n\t\t\t\tthis.sample_sizes[i] = this.sample_size;\n\t\t\t}\n\t\t}\n\t}\n});\n\n// file:src/parsing/stts.js\nBoxParser.createFullBoxCtor(\"stts\", function(stream) {\n\tvar entry_count;\n\tvar i;\n\tvar delta;\n\tentry_count = stream.readUint32();\n\tthis.sample_counts = [];\n\tthis.sample_deltas = [];\n\tif (this.version === 0) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.sample_counts.push(stream.readUint32());\n\t\t\tdelta = stream.readInt32();\n\t\t\tif (delta < 0) {\n\t\t\t\tLog.warn(\"BoxParser\", \"File uses negative stts sample delta, using value 1 instead, sync may be lost!\");\n\t\t\t\tdelta = 1;\n\t\t\t}\n\t\t\tthis.sample_deltas.push(delta);\n\t\t}\n\t}\n});\n\n// file:src/parsing/stvi.js\nBoxParser.createFullBoxCtor(\"stvi\", function(stream) {\n\tvar tmp32 = stream.readUint32();\n\tthis.single_view_allowed = tmp32 & 0x3;\n\tthis.stereo_scheme = stream.readUint32();\n\tvar length = stream.readUint32();\n\tthis.stereo_indication_type = stream.readString(length);\n\tvar ret;\n\tvar box;\n\tthis.boxes = [];\n\twhile (stream.getPosition() < this.start+this.size) {\n\t\tret = BoxParser.parseOneBox(stream, false, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tbox = ret.box;\n\t\t\tthis.boxes.push(box);\n\t\t\tthis[box.type] = box;\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n\n// file:src/parsing/styp.js\nBoxParser.createBoxCtor(\"styp\", function(stream) {\n\tBoxParser.ftypBox.prototype.parse.call(this, stream);\n});\n\n// file:src/parsing/stz2.js\nBoxParser.createFullBoxCtor(\"stz2\", function(stream) {\n\tvar i;\n\tvar sample_size;\n\tvar sample_count;\n\tthis.sample_sizes = [];\n\tif (this.version === 0) {\n\t\tthis.reserved = stream.readUint24();\n\t\tthis.field_size = stream.readUint8();\n\t\tsample_count = stream.readUint32();\n\t\tif (this.field_size === 4) {\n\t\t\tfor (i = 0; i < sample_count; i+=2) {\n\t\t\t\tvar tmp = stream.readUint8();\n\t\t\t\tthis.sample_sizes[i] = (tmp >> 4) & 0xF;\n\t\t\t\tthis.sample_sizes[i+1] = tmp & 0xF;\n\t\t\t}\n\t\t} else if (this.field_size === 8) {\n\t\t\tfor (i = 0; i < sample_count; i++) {\n\t\t\t\tthis.sample_sizes[i] = stream.readUint8();\n\t\t\t}\n\t\t} else if (this.field_size === 16) {\n\t\t\tfor (i = 0; i < sample_count; i++) {\n\t\t\t\tthis.sample_sizes[i] = stream.readUint16();\n\t\t\t}\n\t\t} else {\n\t\t\tLog.error(\"BoxParser\", \"Error in length field in stz2 box\");\n\t\t}\n\t}\n});\n\n// file:src/parsing/subs.js\nBoxParser.createFullBoxCtor(\"subs\", function(stream) {\n\tvar i,j;\n\tvar entry_count;\n\tvar subsample_count;\n\tentry_count = stream.readUint32();\n\tthis.entries = [];\n\tfor (i = 0; i < entry_count; i++) {\n\t\tvar sampleInfo = {};\n\t\tthis.entries[i] = sampleInfo;\n\t\tsampleInfo.sample_delta = stream.readUint32();\n\t\tsampleInfo.subsamples = [];\n\t\tsubsample_count = stream.readUint16();\n\t\tif (subsample_count>0) {\n\t\t\tfor (j = 0; j < subsample_count; j++) {\n\t\t\t\tvar subsample = {};\n\t\t\t\tsampleInfo.subsamples.push(subsample);\n\t\t\t\tif (this.version == 1) {\n\t\t\t\t\tsubsample.size = stream.readUint32();\n\t\t\t\t} else {\n\t\t\t\t\tsubsample.size = stream.readUint16();\n\t\t\t\t}\n\t\t\t\tsubsample.priority = stream.readUint8();\n\t\t\t\tsubsample.discardable = stream.readUint8();\n\t\t\t\tsubsample.codec_specific_parameters = stream.readUint32();\n\t\t\t}\n\t\t}\n\t}\n});\n\n// file:src/parsing/tenc.js\nBoxParser.createFullBoxCtor(\"tenc\", function(stream) {\n\tstream.readUint8(); // reserved\n\tif (this.version === 0) {\n\t\tstream.readUint8();\n\t} else {\n\t\tvar tmp = stream.readUint8();\n\t\tthis.default_crypt_byte_block = (tmp >> 4) & 0xF;\n\t\tthis.default_skip_byte_block = tmp & 0xF;\n\t}\n\tthis.default_isProtected = stream.readUint8();\n\tthis.default_Per_Sample_IV_Size = stream.readUint8();\n\tthis.default_KID = BoxParser.parseHex16(stream);\n\tif (this.default_isProtected === 1 && this.default_Per_Sample_IV_Size === 0) {\n\t\tthis.default_constant_IV_size = stream.readUint8();\n\t\tthis.default_constant_IV = stream.readUint8Array(this.default_constant_IV_size);\n\t}\n});// file:src/parsing/tfdt.js\nBoxParser.createFullBoxCtor(\"tfdt\", function(stream) {\n\tif (this.version == 1) {\n\t\tthis.baseMediaDecodeTime = stream.readUint64();\n\t} else {\n\t\tthis.baseMediaDecodeTime = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/tfhd.js\nBoxParser.createFullBoxCtor(\"tfhd\", function(stream) {\n\tvar readBytes = 0;\n\tthis.track_id = stream.readUint32();\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TFHD_FLAG_BASE_DATA_OFFSET)) {\n\t\tthis.base_data_offset = stream.readUint64();\n\t\treadBytes += 8;\n\t} else {\n\t\tthis.base_data_offset = 0;\n\t}\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DESC)) {\n\t\tthis.default_sample_description_index = stream.readUint32();\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.default_sample_description_index = 0;\n\t}\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DUR)) {\n\t\tthis.default_sample_duration = stream.readUint32();\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.default_sample_duration = 0;\n\t}\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TFHD_FLAG_SAMPLE_SIZE)) {\n\t\tthis.default_sample_size = stream.readUint32();\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.default_sample_size = 0;\n\t}\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TFHD_FLAG_SAMPLE_FLAGS)) {\n\t\tthis.default_sample_flags = stream.readUint32();\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.default_sample_flags = 0;\n\t}\n});\n\n// file:src/parsing/tfra.js\nBoxParser.createFullBoxCtor(\"tfra\", function(stream) {\n\tthis.track_ID = stream.readUint32();\n\tstream.readUint24();\n\tvar tmp_byte = stream.readUint8();\n\tthis.length_size_of_traf_num = (tmp_byte >> 4) & 0x3;\n\tthis.length_size_of_trun_num = (tmp_byte >> 2) & 0x3;\n\tthis.length_size_of_sample_num = (tmp_byte) & 0x3;\n\tthis.entries = [];\n\tvar number_of_entries = stream.readUint32();\n\tfor (var i = 0; i < number_of_entries; i++) {\n\t\tif (this.version === 1) {\n\t\t\tthis.time = stream.readUint64();\n\t\t\tthis.moof_offset = stream.readUint64();\n\t\t} else {\n\t\t\tthis.time = stream.readUint32();\n\t\t\tthis.moof_offset = stream.readUint32();\n\t\t}\n\t\tthis.traf_number = stream[\"readUint\"+(8*(this.length_size_of_traf_num+1))]();\n\t\tthis.trun_number = stream[\"readUint\"+(8*(this.length_size_of_trun_num+1))]();\n\t\tthis.sample_number = stream[\"readUint\"+(8*(this.length_size_of_sample_num+1))]();\n\t}\n});\n\n// file:src/parsing/tkhd.js\nBoxParser.createFullBoxCtor(\"tkhd\", function(stream) {\n\tif (this.version == 1) {\n\t\tthis.creation_time = stream.readUint64();\n\t\tthis.modification_time = stream.readUint64();\n\t\tthis.track_id = stream.readUint32();\n\t\tstream.readUint32();\n\t\tthis.duration = stream.readUint64();\n\t} else {\n\t\tthis.creation_time = stream.readUint32();\n\t\tthis.modification_time = stream.readUint32();\n\t\tthis.track_id = stream.readUint32();\n\t\tstream.readUint32();\n\t\tthis.duration = stream.readUint32();\n\t}\n\tstream.readUint32Array(2);\n\tthis.layer = stream.readInt16();\n\tthis.alternate_group = stream.readInt16();\n\tthis.volume = stream.readInt16()>>8;\n\tstream.readUint16();\n\tthis.matrix = stream.readInt32Array(9);\n\tthis.width = stream.readUint32();\n\tthis.height = stream.readUint32();\n});\n\n// file:src/parsing/tmax.js\nBoxParser.createBoxCtor(\"tmax\", function(stream) {\n\tthis.time = stream.readUint32();\n});\n\n// file:src/parsing/tmin.js\nBoxParser.createBoxCtor(\"tmin\", function(stream) {\n\tthis.time = stream.readUint32();\n});\n\n// file:src/parsing/totl.js\nBoxParser.createBoxCtor(\"totl\",function(stream) {\n\tthis.bytessent = stream.readUint32();\n});\n\n// file:src/parsing/tpay.js\nBoxParser.createBoxCtor(\"tpay\", function(stream) {\n\tthis.bytessent = stream.readUint32();\n});\n\n// file:src/parsing/tpyl.js\nBoxParser.createBoxCtor(\"tpyl\", function(stream) {\n\tthis.bytessent = stream.readUint64();\n});\n\n// file:src/parsing/TrackGroup.js\nBoxParser.TrackGroupTypeBox.prototype.parse = function(stream) {\n\tthis.parseFullHeader(stream);\n\tthis.track_group_id = stream.readUint32();\n}\n\n// file:src/parsing/trackgroups/msrc.js\nBoxParser.createTrackGroupCtor(\"msrc\");// file:src/parsing/TrakReference.js\nBoxParser.TrackReferenceTypeBox = function(type, size, hdr_size, start) {\n\tBoxParser.Box.call(this, type, size);\n\tthis.hdr_size = hdr_size;\n\tthis.start = start;\n}\nBoxParser.TrackReferenceTypeBox.prototype = new BoxParser.Box();\nBoxParser.TrackReferenceTypeBox.prototype.parse = function(stream) {\n\tthis.track_ids = stream.readUint32Array((this.size-this.hdr_size)/4);\n}\n\n// file:src/parsing/tref.js\nBoxParser.trefBox.prototype.parse = function(stream) {\n\tvar ret;\n\tvar box;\n\twhile (stream.getPosition() < this.start+this.size) {\n\t\tret = BoxParser.parseOneBox(stream, true, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tbox = new BoxParser.TrackReferenceTypeBox(ret.type, ret.size, ret.hdr_size, ret.start);\n\t\t\tif (box.write === BoxParser.Box.prototype.write && box.type !== \"mdat\") {\n\t\t\t\tLog.info(\"BoxParser\", \"TrackReference \"+box.type+\" box writing not yet implemented, keeping unparsed data in memory for later write\");\n\t\t\t\tbox.parseDataAndRewind(stream);\n\t\t\t}\n\t\t\tbox.parse(stream);\n\t\t\tthis.boxes.push(box);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n}\n\n// file:src/parsing/trep.js\nBoxParser.createFullBoxCtor(\"trep\", function(stream) {\n\tthis.track_ID = stream.readUint32();\n\tthis.boxes = [];\n\twhile (stream.getPosition() < this.start+this.size) {\n\t\tret = BoxParser.parseOneBox(stream, false, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tbox = ret.box;\n\t\t\tthis.boxes.push(box);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n\n// file:src/parsing/trex.js\nBoxParser.createFullBoxCtor(\"trex\", function(stream) {\n\tthis.track_id = stream.readUint32();\n\tthis.default_sample_description_index = stream.readUint32();\n\tthis.default_sample_duration = stream.readUint32();\n\tthis.default_sample_size = stream.readUint32();\n\tthis.default_sample_flags = stream.readUint32();\n});\n\n// file:src/parsing/trpy.js\nBoxParser.createBoxCtor(\"trpy\", function(stream) {\n\tthis.bytessent = stream.readUint64();\n});\n\n// file:src/parsing/trun.js\nBoxParser.createFullBoxCtor(\"trun\", function(stream) {\n\tvar readBytes = 0;\n\tthis.sample_count = stream.readUint32();\n\treadBytes+= 4;\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TRUN_FLAGS_DATA_OFFSET) ) {\n\t\tthis.data_offset = stream.readInt32(); //signed\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.data_offset = 0;\n\t}\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TRUN_FLAGS_FIRST_FLAG) ) {\n\t\tthis.first_sample_flags = stream.readUint32();\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.first_sample_flags = 0;\n\t}\n\tthis.sample_duration = [];\n\tthis.sample_size = [];\n\tthis.sample_flags = [];\n\tthis.sample_composition_time_offset = [];\n\tif (this.size - this.hdr_size > readBytes) {\n\t\tfor (var i = 0; i < this.sample_count; i++) {\n\t\t\tif (this.flags & BoxParser.TRUN_FLAGS_DURATION) {\n\t\t\t\tthis.sample_duration[i] = stream.readUint32();\n\t\t\t}\n\t\t\tif (this.flags & BoxParser.TRUN_FLAGS_SIZE) {\n\t\t\t\tthis.sample_size[i] = stream.readUint32();\n\t\t\t}\n\t\t\tif (this.flags & BoxParser.TRUN_FLAGS_FLAGS) {\n\t\t\t\tthis.sample_flags[i] = stream.readUint32();\n\t\t\t}\n\t\t\tif (this.flags & BoxParser.TRUN_FLAGS_CTS_OFFSET) {\n\t\t\t\tif (this.version === 0) {\n\t\t\t\t\tthis.sample_composition_time_offset[i] = stream.readUint32();\n\t\t\t\t} else {\n\t\t\t\t\tthis.sample_composition_time_offset[i] = stream.readInt32(); //signed\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\n// file:src/parsing/tsel.js\nBoxParser.createFullBoxCtor(\"tsel\", function(stream) {\n\tthis.switch_group = stream.readUint32();\n\tvar count = (this.size - this.hdr_size - 4)/4;\n\tthis.attribute_list = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tthis.attribute_list[i] = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/txtC.js\nBoxParser.createFullBoxCtor(\"txtC\", function(stream) {\n\tthis.config = stream.readCString();\n});\n\n// file:src/parsing/url.js\nBoxParser.createFullBoxCtor(\"url \", function(stream) {\n\tif (this.flags !== 0x000001) {\n\t\tthis.location = stream.readCString();\n\t}\n});\n\n// file:src/parsing/urn.js\nBoxParser.createFullBoxCtor(\"urn \", function(stream) {\n\tthis.name = stream.readCString();\n\tif (this.size - this.hdr_size - this.name.length - 1 > 0) {\n\t\tthis.location = stream.readCString();\n\t}\n});\n\n// file:src/parsing/uuid/piff/piffLsm.js\nBoxParser.createUUIDBox(\"a5d40b30e81411ddba2f0800200c9a66\", true, false, function(stream) {\n    this.LiveServerManifest = stream.readString(this.size - this.hdr_size)\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#039;\");\n});// file:src/parsing/uuid/piff/piffPssh.js\nBoxParser.createUUIDBox(\"d08a4f1810f34a82b6c832d8aba183d3\", true, false, function(stream) {\n\tthis.system_id = BoxParser.parseHex16(stream);\n\tvar datasize = stream.readUint32();\n\tif (datasize > 0) {\n\t\tthis.data = stream.readUint8Array(datasize);\n\t}\n});\n\n// file:src/parsing/uuid/piff/piffSenc.js\nBoxParser.createUUIDBox(\"a2394f525a9b4f14a2446c427c648df4\", true, false /*, function(stream) {\n\tif (this.flags & 0x1) {\n\t\tthis.AlgorithmID = stream.readUint24();\n\t\tthis.IV_size = stream.readUint8();\n\t\tthis.KID = BoxParser.parseHex16(stream);\n\t}\n\tvar sample_count = stream.readUint32();\n\tthis.samples = [];\n\tfor (var i = 0; i < sample_count; i++) {\n\t\tvar sample = {};\n\t\tsample.InitializationVector = this.readUint8Array(this.IV_size*8);\n\t\tif (this.flags & 0x2) {\n\t\t\tsample.subsamples = [];\n\t\t\tsample.NumberOfEntries = stream.readUint16();\n\t\t\tfor (var j = 0; j < sample.NumberOfEntries; j++) {\n\t\t\t\tvar subsample = {};\n\t\t\t\tsubsample.BytesOfClearData = stream.readUint16();\n\t\t\t\tsubsample.BytesOfProtectedData = stream.readUint32();\n\t\t\t\tsample.subsamples.push(subsample);\n\t\t\t}\n\t\t}\n\t\tthis.samples.push(sample);\n\t}\n}*/);\n// file:src/parsing/uuid/piff/piffTenc.js\nBoxParser.createUUIDBox(\"8974dbce7be74c5184f97148f9882554\", true, false, function(stream) {\n\tthis.default_AlgorithmID = stream.readUint24();\n\tthis.default_IV_size = stream.readUint8();\n\tthis.default_KID = BoxParser.parseHex16(stream);\n});// file:src/parsing/uuid/piff/piffTfrf.js\nBoxParser.createUUIDBox(\"d4807ef2ca3946958e5426cb9e46a79f\", true, false, function(stream) {\n    this.fragment_count = stream.readUint8();\n    this.entries = [];\n\n    for (var i = 0; i < this.fragment_count; i++) {\n        var entry = {};\n        var absolute_time = 0;\n        var absolute_duration = 0;\n\n        if (this.version === 1) {\n            absolute_time = stream.readUint64();\n            absolute_duration = stream.readUint64();\n        } else {\n            absolute_time = stream.readUint32();\n            absolute_duration = stream.readUint32();\n        }\n\n        entry.absolute_time = absolute_time;\n        entry.absolute_duration = absolute_duration;\n\n        this.entries.push(entry);\n    }\n});// file:src/parsing/uuid/piff/piffTfxd.js\nBoxParser.createUUIDBox(\"6d1d9b0542d544e680e2141daff757b2\", true, false, function(stream) {\n    if (this.version === 1) {\n       this.absolute_time = stream.readUint64();\n       this.duration = stream.readUint64();\n    } else {\n       this.absolute_time = stream.readUint32();\n       this.duration = stream.readUint32();\n    }\n});// file:src/parsing/vmhd.js\nBoxParser.createFullBoxCtor(\"vmhd\", function(stream) {\n\tthis.graphicsmode = stream.readUint16();\n\tthis.opcolor = stream.readUint16Array(3);\n});\n\n// file:src/parsing/vpcC.js\nBoxParser.createFullBoxCtor(\"vpcC\", function (stream) {\n\tvar tmp;\n\tif (this.version === 1) {\n\t\tthis.profile = stream.readUint8();\n\t\tthis.level = stream.readUint8();\n\t\ttmp = stream.readUint8();\n\t\tthis.bitDepth = tmp >> 4;\n\t\tthis.chromaSubsampling = (tmp >> 1) & 0x7;\n\t\tthis.videoFullRangeFlag = tmp & 0x1;\n\t\tthis.colourPrimaries = stream.readUint8();\n\t\tthis.transferCharacteristics = stream.readUint8();\n\t\tthis.matrixCoefficients = stream.readUint8();\n\t\tthis.codecIntializationDataSize = stream.readUint16();\n\t\tthis.codecIntializationData = stream.readUint8Array(this.codecIntializationDataSize);\n\t} else {\n\t\tthis.profile = stream.readUint8();\n\t\tthis.level = stream.readUint8();\n\t\ttmp = stream.readUint8();\n\t\tthis.bitDepth = (tmp >> 4) & 0xF;\n\t\tthis.colorSpace = tmp & 0xF;\n\t\ttmp = stream.readUint8();\n\t\tthis.chromaSubsampling = (tmp >> 4) & 0xF;\n\t\tthis.transferFunction = (tmp >> 1) & 0x7;\n\t\tthis.videoFullRangeFlag = tmp & 0x1;\n\t\tthis.codecIntializationDataSize = stream.readUint16();\n\t\tthis.codecIntializationData = stream.readUint8Array(this.codecIntializationDataSize);\n\t}\n});// file:src/parsing/vttC.js\nBoxParser.createBoxCtor(\"vttC\", function(stream) {\n\tthis.text = stream.readString(this.size - this.hdr_size);\n});\n\n// file:src/parsing/vvcC.js\nBoxParser.createFullBoxCtor(\"vvcC\", function (stream) {\n  var i, j;\n\n  // helper object to simplify extracting individual bits\n  var bitReader = {\n    held_bits: undefined,\n    num_held_bits: 0,\n\n    stream_read_1_bytes: function (strm) {\n      this.held_bits = strm.readUint8();\n      this.num_held_bits = 1 * 8;\n    },\n    stream_read_2_bytes: function (strm) {\n      this.held_bits = strm.readUint16();\n      this.num_held_bits = 2 * 8;\n    },\n\n    extract_bits: function (num_bits) {\n      var ret = (this.held_bits >> (this.num_held_bits - num_bits)) & ((1 << num_bits) - 1);\n      this.num_held_bits -= num_bits;\n      return ret;\n    }\n  };\n\n  // VvcDecoderConfigurationRecord\n  bitReader.stream_read_1_bytes(stream);\n  bitReader.extract_bits(5);  // reserved\n  this.lengthSizeMinusOne = bitReader.extract_bits(2);\n  this.ptl_present_flag = bitReader.extract_bits(1);\n\n  if (this.ptl_present_flag) {\n    bitReader.stream_read_2_bytes(stream);\n    this.ols_idx = bitReader.extract_bits(9);\n    this.num_sublayers = bitReader.extract_bits(3);\n    this.constant_frame_rate = bitReader.extract_bits(2);\n    this.chroma_format_idc = bitReader.extract_bits(2);\n\n    bitReader.stream_read_1_bytes(stream);\n    this.bit_depth_minus8 = bitReader.extract_bits(3);\n    bitReader.extract_bits(5);  // reserved\n\n    // VvcPTLRecord\n    {\n      bitReader.stream_read_2_bytes(stream);\n      bitReader.extract_bits(2);  // reserved\n      this.num_bytes_constraint_info = bitReader.extract_bits(6);\n      this.general_profile_idc = bitReader.extract_bits(7);\n      this.general_tier_flag = bitReader.extract_bits(1);\n\n      this.general_level_idc = stream.readUint8();\n\n      bitReader.stream_read_1_bytes(stream);\n      this.ptl_frame_only_constraint_flag = bitReader.extract_bits(1);\n      this.ptl_multilayer_enabled_flag = bitReader.extract_bits(1);\n\n      this.general_constraint_info = new Uint8Array(this.num_bytes_constraint_info);\n      if (this.num_bytes_constraint_info) {\n        for (i = 0; i < this.num_bytes_constraint_info - 1; i++) {\n          var cnstr1 = bitReader.extract_bits(6);\n          bitReader.stream_read_1_bytes(stream);\n          var cnstr2 = bitReader.extract_bits(2);\n\n          this.general_constraint_info[i] = ((cnstr1 << 2) | cnstr2);\n        }\n        this.general_constraint_info[this.num_bytes_constraint_info - 1] = bitReader.extract_bits(6);\n      } else {\n        //forbidden in spec!\n        bitReader.extract_bits(6);\n      }\n\n      bitReader.stream_read_1_bytes(stream);\n      this.ptl_sublayer_present_mask = 0;\n      for (j = this.num_sublayers - 2; j >= 0; --j) {\n        var val = bitReader.extract_bits(1);\n        this.ptl_sublayer_present_mask |= val << j;\n      }\n      for (j = this.num_sublayers; j <= 8 && this.num_sublayers > 1; ++j) {\n        bitReader.extract_bits(1);  // ptl_reserved_zero_bit\n      }\n\n      for (j = this.num_sublayers - 2; j >= 0; --j) {\n        if (this.ptl_sublayer_present_mask & (1 << j)) {\n          this.sublayer_level_idc[j] = stream.readUint8();\n        }\n      }\n\n      this.ptl_num_sub_profiles = stream.readUint8();\n      this.general_sub_profile_idc = [];\n      if (this.ptl_num_sub_profiles) {\n        for (i = 0; i < this.ptl_num_sub_profiles; i++) {\n          this.general_sub_profile_idc.push(stream.readUint32());\n        }\n      }\n    }  // end VvcPTLRecord\n\n    this.max_picture_width = stream.readUint16();\n    this.max_picture_height = stream.readUint16();\n    this.avg_frame_rate = stream.readUint16();\n  }\n\n  var VVC_NALU_OPI = 12;\n  var VVC_NALU_DEC_PARAM = 13;\n\n  this.nalu_arrays = [];\n  var num_of_arrays = stream.readUint8();\n  for (i = 0; i < num_of_arrays; i++) {\n    var nalu_array = [];\n    this.nalu_arrays.push(nalu_array);\n\n    bitReader.stream_read_1_bytes(stream);\n    nalu_array.completeness = bitReader.extract_bits(1);\n    bitReader.extract_bits(2);  // reserved\n    nalu_array.nalu_type = bitReader.extract_bits(5);\n\n    var numNalus = 1;\n    if (nalu_array.nalu_type != VVC_NALU_DEC_PARAM && nalu_array.nalu_type != VVC_NALU_OPI) {\n      numNalus = stream.readUint16();\n    }\n\n    for (j = 0; j < numNalus; j++) {\n      var len = stream.readUint16();\n      nalu_array.push({\n        data: stream.readUint8Array(len),\n        length: len\n      });\n    }\n  }\n});\n// file:src/parsing/vvnC.js\nBoxParser.createFullBoxCtor(\"vvnC\", function (stream) {\n  // VvcNALUConfigBox\n  var tmp = strm.readUint8();\n  this.lengthSizeMinusOne = (tmp & 0x3);\n});\n// file:src/box-codecs.js\nBoxParser.SampleEntry.prototype.isVideo = function() {\n\treturn false;\n}\n\nBoxParser.SampleEntry.prototype.isAudio = function() {\n\treturn false;\n}\n\nBoxParser.SampleEntry.prototype.isSubtitle = function() {\n\treturn false;\n}\n\nBoxParser.SampleEntry.prototype.isMetadata = function() {\n\treturn false;\n}\n\nBoxParser.SampleEntry.prototype.isHint = function() {\n\treturn false;\n}\n\nBoxParser.SampleEntry.prototype.getCodec = function() {\n\treturn this.type.replace('.','');\n}\n\nBoxParser.SampleEntry.prototype.getWidth = function() {\n\treturn \"\";\n}\n\nBoxParser.SampleEntry.prototype.getHeight = function() {\n\treturn \"\";\n}\n\nBoxParser.SampleEntry.prototype.getChannelCount = function() {\n\treturn \"\";\n}\n\nBoxParser.SampleEntry.prototype.getSampleRate = function() {\n\treturn \"\";\n}\n\nBoxParser.SampleEntry.prototype.getSampleSize = function() {\n\treturn \"\";\n}\n\nBoxParser.VisualSampleEntry.prototype.isVideo = function() {\n\treturn true;\n}\n\nBoxParser.VisualSampleEntry.prototype.getWidth = function() {\n\treturn this.width;\n}\n\nBoxParser.VisualSampleEntry.prototype.getHeight = function() {\n\treturn this.height;\n}\n\nBoxParser.AudioSampleEntry.prototype.isAudio = function() {\n\treturn true;\n}\n\nBoxParser.AudioSampleEntry.prototype.getChannelCount = function() {\n\treturn this.channel_count;\n}\n\nBoxParser.AudioSampleEntry.prototype.getSampleRate = function() {\n\treturn this.samplerate;\n}\n\nBoxParser.AudioSampleEntry.prototype.getSampleSize = function() {\n\treturn this.samplesize;\n}\n\nBoxParser.SubtitleSampleEntry.prototype.isSubtitle = function() {\n\treturn true;\n}\n\nBoxParser.MetadataSampleEntry.prototype.isMetadata = function() {\n\treturn true;\n}\n\n\nBoxParser.decimalToHex = function(d, padding) {\n\tvar hex = Number(d).toString(16);\n\tpadding = typeof (padding) === \"undefined\" || padding === null ? padding = 2 : padding;\n\twhile (hex.length < padding) {\n\t\thex = \"0\" + hex;\n\t}\n\treturn hex;\n}\n\nBoxParser.avc1SampleEntry.prototype.getCodec =\nBoxParser.avc2SampleEntry.prototype.getCodec =\nBoxParser.avc3SampleEntry.prototype.getCodec =\nBoxParser.avc4SampleEntry.prototype.getCodec = function() {\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tif (this.avcC) {\n\t\treturn baseCodec+\".\"+BoxParser.decimalToHex(this.avcC.AVCProfileIndication)+\n\t\t\t\t\t\t  \"\"+BoxParser.decimalToHex(this.avcC.profile_compatibility)+\n\t\t\t\t\t\t  \"\"+BoxParser.decimalToHex(this.avcC.AVCLevelIndication);\n\t} else {\n\t\treturn baseCodec;\n\t}\n}\n\nBoxParser.hev1SampleEntry.prototype.getCodec =\nBoxParser.hvc1SampleEntry.prototype.getCodec = function() {\n\tvar i;\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tif (this.hvcC) {\n\t\tbaseCodec += '.';\n\t\tswitch (this.hvcC.general_profile_space) {\n\t\t\tcase 0:\n\t\t\t\tbaseCodec += '';\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tbaseCodec += 'A';\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbaseCodec += 'B';\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tbaseCodec += 'C';\n\t\t\t\tbreak;\n\t\t}\n\t\tbaseCodec += this.hvcC.general_profile_idc;\n\t\tbaseCodec += '.';\n\t\tvar val = this.hvcC.general_profile_compatibility;\n\t\tvar reversed = 0;\n\t\tfor (i=0; i<32; i++) {\n\t\t\treversed |= val & 1;\n\t\t\tif (i==31) break;\n\t\t\treversed <<= 1;\n\t\t\tval >>=1;\n\t\t}\n\t\tbaseCodec += BoxParser.decimalToHex(reversed, 0);\n\t\tbaseCodec += '.';\n\t\tif (this.hvcC.general_tier_flag === 0) {\n\t\t\tbaseCodec += 'L';\n\t\t} else {\n\t\t\tbaseCodec += 'H';\n\t\t}\n\t\tbaseCodec += this.hvcC.general_level_idc;\n\t\tvar hasByte = false;\n\t\tvar constraint_string = \"\";\n\t\tfor (i = 5; i >= 0; i--) {\n\t\t\tif (this.hvcC.general_constraint_indicator[i] || hasByte) {\n\t\t\t\tconstraint_string = \".\"+BoxParser.decimalToHex(this.hvcC.general_constraint_indicator[i], 0)+constraint_string;\n\t\t\t\thasByte = true;\n\t\t\t}\n\t\t}\n\t\tbaseCodec += constraint_string;\n\t}\n\treturn baseCodec;\n}\n\nBoxParser.vvc1SampleEntry.prototype.getCodec =\nBoxParser.vvi1SampleEntry.prototype.getCodec = function () {\n\tvar i;\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tif (this.vvcC) {\n\t\tbaseCodec += '.' + this.vvcC.general_profile_idc;\n\t\tif (this.vvcC.general_tier_flag) {\n\t\t\tbaseCodec += '.H';\n\t\t} else {\n\t\t\tbaseCodec += '.L';\n\t\t}\n\t\tbaseCodec += this.vvcC.general_level_idc;\n\n\t\tvar constraint_string = \"\";\n\t\tif (this.vvcC.general_constraint_info) {\n\t\t\tvar bytes = [];\n\t\t\tvar byte = 0;\n\t\t\tbyte |= this.vvcC.ptl_frame_only_constraint << 7;\n\t\t\tbyte |= this.vvcC.ptl_multilayer_enabled << 6;\n\t\t\tvar last_nonzero;\n\t\t\tfor (i = 0; i < this.vvcC.general_constraint_info.length; ++i) {\n\t\t\t\tbyte |= (this.vvcC.general_constraint_info[i] >> 2) & 0x3f;\n\t\t\t\tbytes.push(byte);\n\t\t\t\tif (byte) {\n\t\t\t\t\tlast_nonzero = i;\n\t\t\t\t}\n\n\t\t\t\tbyte = (this.vvcC.general_constraint_info[i] >> 2) & 0x03;\n\t\t\t}\n\n\t\t\tif (last_nonzero === undefined) {\n\t\t\t\tconstraint_string = \".CA\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconstraint_string = \".C\"\n\t\t\t\tvar base32_chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\n\t\t\t\tvar held_bits = 0;\n\t\t\t\tvar num_held_bits = 0;\n\t\t\t\tfor (i = 0; i <= last_nonzero; ++i) {\n\t\t\t\t\theld_bits = (held_bits << 8) | bytes[i];\n\t\t\t\t\tnum_held_bits += 8;\n\n\t\t\t\t\twhile (num_held_bits >= 5) {\n\t\t\t\t\t\tvar val = (held_bits >> (num_held_bits - 5)) & 0x1f;\n\t\t\t\t\t\tconstraint_string += base32_chars[val];\n\n\t\t\t\t\t\tnum_held_bits -= 5;\n\t\t\t\t\t\theld_bits &= (1 << num_held_bits) - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (num_held_bits) {\n\t\t\t\t\theld_bits <<= (5 - num_held_bits);  // right-pad with zeros to 5 bits (is this correct?)\n\t\t\t\t\tconstraint_string += base32_chars[held_bits & 0x1f];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbaseCodec += constraint_string;\n\t}\n\treturn baseCodec;\n}\n\nBoxParser.mp4aSampleEntry.prototype.getCodec = function() {\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tif (this.esds && this.esds.esd) {\n\t\tvar oti = this.esds.esd.getOTI();\n\t\tvar dsi = this.esds.esd.getAudioConfig();\n\t\treturn baseCodec+\".\"+BoxParser.decimalToHex(oti)+(dsi ? \".\"+dsi: \"\");\n\t} else {\n\t\treturn baseCodec;\n\t}\n}\n\nBoxParser.stxtSampleEntry.prototype.getCodec = function() {\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tif(this.mime_format) {\n\t\treturn baseCodec + \".\" + this.mime_format;\n\t} else {\n\t\treturn baseCodec\n\t}\n}\n\nBoxParser.vp08SampleEntry.prototype.getCodec =\nBoxParser.vp09SampleEntry.prototype.getCodec = function() {\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tvar level = this.vpcC.level;\n\tif (level == 0) {\n\t\tlevel = \"00\";\n\t}\n\tvar bitDepth = this.vpcC.bitDepth;\n\tif (bitDepth == 8) {\n\t\tbitDepth = \"08\";\n\t}\n\treturn baseCodec + \".0\" + this.vpcC.profile + \".\" + level + \".\" + bitDepth;\n}\n\nBoxParser.av01SampleEntry.prototype.getCodec = function() {\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tvar level = this.av1C.seq_level_idx_0;\n\tif (level < 10) {\n\t\tlevel = \"0\" + level;\n\t}\n\tvar bitdepth;\n\tif (this.av1C.seq_profile === 2 && this.av1C.high_bitdepth === 1) {\n\t\tbitdepth = (this.av1C.twelve_bit === 1) ? \"12\" : \"10\";\n\t} else if ( this.av1C.seq_profile <= 2 ) {\n\t\tbitdepth = (this.av1C.high_bitdepth === 1) ? \"10\" : \"08\";\n\t}\n\t// TODO need to parse the SH to find color config\n\treturn baseCodec+\".\"+this.av1C.seq_profile+\".\"+level+(this.av1C.seq_tier_0?\"H\":\"M\")+\".\"+bitdepth;//+\".\"+this.av1C.monochrome+\".\"+this.av1C.chroma_subsampling_x+\"\"+this.av1C.chroma_subsampling_y+\"\"+this.av1C.chroma_sample_position;\n}\n// file:src/box-write.js\n/* \n * Copyright (c) Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nBoxParser.Box.prototype.writeHeader = function(stream, msg) {\n\tthis.size += 8;\n\tif (this.size > MAX_SIZE) {\n\t\tthis.size += 8;\n\t}\n\tif (this.type === \"uuid\") {\n\t\tthis.size += 16;\n\t}\n\tLog.debug(\"BoxWriter\", \"Writing box \"+this.type+\" of size: \"+this.size+\" at position \"+stream.getPosition()+(msg || \"\"));\n\tif (this.size > MAX_SIZE) {\n\t\tstream.writeUint32(1);\n\t} else {\n\t\tthis.sizePosition = stream.getPosition();\n\t\tstream.writeUint32(this.size);\n\t}\n\tstream.writeString(this.type, null, 4);\n\tif (this.type === \"uuid\") {\n\t\tstream.writeUint8Array(this.uuid);\n\t}\n\tif (this.size > MAX_SIZE) {\n\t\tstream.writeUint64(this.size);\n\t} \n}\n\nBoxParser.FullBox.prototype.writeHeader = function(stream) {\n\tthis.size += 4;\n\tBoxParser.Box.prototype.writeHeader.call(this, stream, \" v=\"+this.version+\" f=\"+this.flags);\n\tstream.writeUint8(this.version);\n\tstream.writeUint24(this.flags);\n}\n\nBoxParser.Box.prototype.write = function(stream) {\n\tif (this.type === \"mdat\") {\n\t\t/* TODO: fix this */\n\t\tif (this.data) {\n\t\t\tthis.size = this.data.length;\n\t\t\tthis.writeHeader(stream);\n\t\t\tstream.writeUint8Array(this.data);\n\t\t}\n\t} else {\n\t\tthis.size = (this.data ? this.data.length : 0);\n\t\tthis.writeHeader(stream);\n\t\tif (this.data) {\n\t\t\tstream.writeUint8Array(this.data);\n\t\t}\n\t}\n}\n\nBoxParser.ContainerBox.prototype.write = function(stream) {\n\tthis.size = 0;\n\tthis.writeHeader(stream);\n\tfor (var i=0; i<this.boxes.length; i++) {\n\t\tif (this.boxes[i]) {\n\t\t\tthis.boxes[i].write(stream);\n\t\t\tthis.size += this.boxes[i].size;\n\t\t}\n\t}\n\t/* adjusting the size, now that all sub-boxes are known */\n\tLog.debug(\"BoxWriter\", \"Adjusting box \"+this.type+\" with new size \"+this.size);\n\tstream.adjustUint32(this.sizePosition, this.size);\n}\n\nBoxParser.TrackReferenceTypeBox.prototype.write = function(stream) {\n\tthis.size = this.track_ids.length*4;\n\tthis.writeHeader(stream);\n\tstream.writeUint32Array(this.track_ids);\n}\n\n// file:src/writing/avcC.js\nBoxParser.avcCBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.size = 7;\n\tfor (i = 0; i < this.SPS.length; i++) {\n\t\tthis.size += 2+this.SPS[i].length;\n\t}\n\tfor (i = 0; i < this.PPS.length; i++) {\n\t\tthis.size += 2+this.PPS[i].length;\n\t}\n\tif (this.ext) {\n\t\tthis.size += this.ext.length;\n\t}\n\tthis.writeHeader(stream);\n\tstream.writeUint8(this.configurationVersion);\n\tstream.writeUint8(this.AVCProfileIndication);\n\tstream.writeUint8(this.profile_compatibility);\n\tstream.writeUint8(this.AVCLevelIndication);\n\tstream.writeUint8(this.lengthSizeMinusOne + (63<<2));\n\tstream.writeUint8(this.SPS.length + (7<<5));\n\tfor (i = 0; i < this.SPS.length; i++) {\n\t\tstream.writeUint16(this.SPS[i].length);\n\t\tstream.writeUint8Array(this.SPS[i].nalu);\n\t}\n\tstream.writeUint8(this.PPS.length);\n\tfor (i = 0; i < this.PPS.length; i++) {\n\t\tstream.writeUint16(this.PPS[i].length);\n\t\tstream.writeUint8Array(this.PPS[i].nalu);\n\t}\n\tif (this.ext) {\n\t\tstream.writeUint8Array(this.ext);\n\t}\n}\n\n// file:src/writing/co64.js\nBoxParser.co64Box.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+8*this.chunk_offsets.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.chunk_offsets.length);\n\tfor(i=0; i<this.chunk_offsets.length; i++) {\n\t\tstream.writeUint64(this.chunk_offsets[i]);\n\t}\n}\n\n// file:src/writing/cslg.js\nBoxParser.cslgBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4*5;\n\tthis.writeHeader(stream);\n\tstream.writeInt32(this.compositionToDTSShift);\n\tstream.writeInt32(this.leastDecodeToDisplayDelta);\n\tstream.writeInt32(this.greatestDecodeToDisplayDelta);\n\tstream.writeInt32(this.compositionStartTime);\n\tstream.writeInt32(this.compositionEndTime);\n}\n\n// file:src/writing/ctts.js\nBoxParser.cttsBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+8*this.sample_counts.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.sample_counts.length);\n\tfor(i=0; i<this.sample_counts.length; i++) {\n\t\tstream.writeUint32(this.sample_counts[i]);\n\t\tif (this.version === 1) {\n\t\t\tstream.writeInt32(this.sample_offsets[i]); /* signed */\n\t\t} else {\t\t\t\n\t\t\tstream.writeUint32(this.sample_offsets[i]); /* unsigned */\n\t\t}\n\t}\n}\n\n// file:src/writing/dref.js\nBoxParser.drefBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4; //\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.entries.length);\n\tfor (var i = 0; i < this.entries.length; i++) {\n\t\tthis.entries[i].write(stream);\n\t\tthis.size += this.entries[i].size;\n\t}\t\n\t/* adjusting the size, now that all sub-boxes are known */\n\tLog.debug(\"BoxWriter\", \"Adjusting box \"+this.type+\" with new size \"+this.size);\n\tstream.adjustUint32(this.sizePosition, this.size);\n}\n\n// file:src/writing/elng.js\nBoxParser.elngBox.prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = this.extended_language.length;\n\tthis.writeHeader(stream);\n\tstream.writeString(this.extended_language);\n}\n\n// file:src/writing/elst.js\nBoxParser.elstBox.prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = 4+12*this.entries.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.entries.length);\n\tfor (var i = 0; i < this.entries.length; i++) {\n\t\tvar entry = this.entries[i];\n\t\tstream.writeUint32(entry.segment_duration);\n\t\tstream.writeInt32(entry.media_time);\n\t\tstream.writeInt16(entry.media_rate_integer);\n\t\tstream.writeInt16(entry.media_rate_fraction);\n\t}\n}\n\n// file:src/writing/emsg.js\nBoxParser.emsgBox.prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = 4*4+this.message_data.length+(this.scheme_id_uri.length+1)+(this.value.length+1);\n\tthis.writeHeader(stream);\n\tstream.writeCString(this.scheme_id_uri);\n\tstream.writeCString(this.value);\n\tstream.writeUint32(this.timescale);\n\tstream.writeUint32(this.presentation_time_delta);\n\tstream.writeUint32(this.event_duration);\n\tstream.writeUint32(this.id);\n\tstream.writeUint8Array(this.message_data);\n}\n\n// file:src/writing/ftyp.js\nBoxParser.ftypBox.prototype.write = function(stream) {\n\tthis.size = 8+4*this.compatible_brands.length;\n\tthis.writeHeader(stream);\n\tstream.writeString(this.major_brand, null, 4);\n\tstream.writeUint32(this.minor_version);\n\tfor (var i = 0; i < this.compatible_brands.length; i++) {\n\t\tstream.writeString(this.compatible_brands[i], null, 4);\n\t}\n}\n\n// file:src/writing/hdlr.js\nBoxParser.hdlrBox.prototype.write = function(stream) {\n\tthis.size = 5*4+this.name.length+1;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(0);\n\tstream.writeString(this.handler, null, 4);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeCString(this.name);\n}\n\n// file:src/writing/kind.js\nBoxParser.kindBox.prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = (this.schemeURI.length+1)+(this.value.length+1);\n\tthis.writeHeader(stream);\n\tstream.writeCString(this.schemeURI);\n\tstream.writeCString(this.value);\n}\n\n// file:src/writing/mdhd.js\nBoxParser.mdhdBox.prototype.write = function(stream) {\n\tthis.size = 4*4+2*2;\n\tthis.flags = 0;\n\tthis.version = 0;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.creation_time);\n\tstream.writeUint32(this.modification_time);\n\tstream.writeUint32(this.timescale);\n\tstream.writeUint32(this.duration);\n\tstream.writeUint16(this.language);\n\tstream.writeUint16(0);\n}\n\n// file:src/writing/mehd.js\nBoxParser.mehdBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.fragment_duration);\n}\n\n// file:src/writing/mfhd.js\nBoxParser.mfhdBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.sequence_number);\n}\n\n// file:src/writing/mvhd.js\nBoxParser.mvhdBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 23*4+2*2;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.creation_time);\n\tstream.writeUint32(this.modification_time);\n\tstream.writeUint32(this.timescale);\n\tstream.writeUint32(this.duration);\n\tstream.writeUint32(this.rate);\n\tstream.writeUint16(this.volume<<8);\n\tstream.writeUint16(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32Array(this.matrix);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(this.next_track_id);\n}\n\n// file:src/writing/sampleentry.js\nBoxParser.SampleEntry.prototype.writeHeader = function(stream) {\n\tthis.size = 8;\n\tBoxParser.Box.prototype.writeHeader.call(this, stream);\n\tstream.writeUint8(0);\n\tstream.writeUint8(0);\n\tstream.writeUint8(0);\n\tstream.writeUint8(0);\n\tstream.writeUint8(0);\n\tstream.writeUint8(0);\n\tstream.writeUint16(this.data_reference_index);\n}\n\nBoxParser.SampleEntry.prototype.writeFooter = function(stream) {\n\tfor (var i=0; i<this.boxes.length; i++) {\n\t\tthis.boxes[i].write(stream);\n\t\tthis.size += this.boxes[i].size;\n\t}\n\tLog.debug(\"BoxWriter\", \"Adjusting box \"+this.type+\" with new size \"+this.size);\n\tstream.adjustUint32(this.sizePosition, this.size);\t\n}\n\nBoxParser.SampleEntry.prototype.write = function(stream) {\n\tthis.writeHeader(stream);\n\tstream.writeUint8Array(this.data);\n\tthis.size += this.data.length;\n\tLog.debug(\"BoxWriter\", \"Adjusting box \"+this.type+\" with new size \"+this.size);\n\tstream.adjustUint32(this.sizePosition, this.size);\t\n}\n\nBoxParser.VisualSampleEntry.prototype.write = function(stream) {\n\tthis.writeHeader(stream);\n\tthis.size += 2*7+6*4+32;\n\tstream.writeUint16(0); \n\tstream.writeUint16(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint16(this.width);\n\tstream.writeUint16(this.height);\n\tstream.writeUint32(this.horizresolution);\n\tstream.writeUint32(this.vertresolution);\n\tstream.writeUint32(0);\n\tstream.writeUint16(this.frame_count);\n\tstream.writeUint8(Math.min(31, this.compressorname.length));\n\tstream.writeString(this.compressorname, null, 31);\n\tstream.writeUint16(this.depth);\n\tstream.writeInt16(-1);\n\tthis.writeFooter(stream);\n}\n\nBoxParser.AudioSampleEntry.prototype.write = function(stream) {\n\tthis.writeHeader(stream);\n\tthis.size += 2*4+3*4;\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint16(this.channel_count);\n\tstream.writeUint16(this.samplesize);\n\tstream.writeUint16(0);\n\tstream.writeUint16(0);\n\tstream.writeUint32(this.samplerate<<16);\n\tthis.writeFooter(stream);\n}\n\nBoxParser.stppSampleEntry.prototype.write = function(stream) {\n\tthis.writeHeader(stream);\n\tthis.size += this.namespace.length+1+\n\t\t\t\t this.schema_location.length+1+\n\t\t\t\t this.auxiliary_mime_types.length+1;\n\tstream.writeCString(this.namespace);\n\tstream.writeCString(this.schema_location);\n\tstream.writeCString(this.auxiliary_mime_types);\n\tthis.writeFooter(stream);\n}\n\n// file:src/writing/samplegroups/samplegroup.js\nBoxParser.SampleGroupEntry.prototype.write = function(stream) {\n\tstream.writeUint8Array(this.data);\n}\n\n// file:src/writing/sbgp.js\nBoxParser.sbgpBox.prototype.write = function(stream) {\n\tthis.version = 1;\t\n\tthis.flags = 0;\n\tthis.size = 12+8*this.entries.length;\n\tthis.writeHeader(stream);\n\tstream.writeString(this.grouping_type, null, 4);\n\tstream.writeUint32(this.grouping_type_parameter);\n\tstream.writeUint32(this.entries.length);\n\tfor (var i = 0; i < this.entries.length; i++) {\n\t\tvar entry = this.entries[i];\n\t\tstream.writeInt32(entry.sample_count);\n\t\tstream.writeInt32(entry.group_description_index);\n\t}\n}\n\n// file:src/writing/sgpd.js\nBoxParser.sgpdBox.prototype.write = function(stream) {\n\tvar i;\n\tvar entry;\n\t// leave version as read\n\t// this.version;\n\tthis.flags = 0;\n\tthis.size = 12;\n\tfor (i = 0; i < this.entries.length; i++) {\n\t\tentry = this.entries[i];\n\t\tif (this.version === 1) {\n\t\t\tif (this.default_length === 0) {\n\t\t\t\tthis.size += 4;\n\t\t\t}\n\t\t\tthis.size += entry.data.length;\n\t\t}\n\t}\n\tthis.writeHeader(stream);\n\tstream.writeString(this.grouping_type, null, 4);\n\tif (this.version === 1) {\n\t\tstream.writeUint32(this.default_length);\n\t}\n\tif (this.version >= 2) {\n\t\tstream.writeUint32(this.default_sample_description_index);\n\t}\n\tstream.writeUint32(this.entries.length);\n\tfor (i = 0; i < this.entries.length; i++) {\n\t\tentry = this.entries[i];\n\t\tif (this.version === 1) {\n\t\t\tif (this.default_length === 0) {\n\t\t\t\tstream.writeUint32(entry.description_length);\n\t\t\t}\n\t\t}\n\t\tentry.write(stream);\n\t}\n}\n\n\n// file:src/writing/sidx.js\nBoxParser.sidxBox.prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = 4*4+2+2+12*this.references.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.reference_ID);\n\tstream.writeUint32(this.timescale);\n\tstream.writeUint32(this.earliest_presentation_time);\n\tstream.writeUint32(this.first_offset);\n\tstream.writeUint16(0);\n\tstream.writeUint16(this.references.length);\n\tfor (var i = 0; i < this.references.length; i++) {\n\t\tvar ref = this.references[i];\n\t\tstream.writeUint32(ref.reference_type << 31 | ref.referenced_size);\n\t\tstream.writeUint32(ref.subsegment_duration);\n\t\tstream.writeUint32(ref.starts_with_SAP << 31 | ref.SAP_type << 28 | ref.SAP_delta_time);\n\t}\n}\n\n// file:src/writing/smhd.js\nBoxParser.smhdBox.prototype.write = function(stream) {\n  var i;\n  this.version = 0;\n  this.flags = 1;\n  this.size = 4;\n  this.writeHeader(stream);\n  stream.writeUint16(this.balance);\n  stream.writeUint16(0);\n}\n// file:src/writing/stco.js\nBoxParser.stcoBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+4*this.chunk_offsets.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.chunk_offsets.length);\n\tstream.writeUint32Array(this.chunk_offsets);\n}\n\n// file:src/writing/stsc.js\nBoxParser.stscBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+12*this.first_chunk.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.first_chunk.length);\n\tfor(i=0; i<this.first_chunk.length; i++) {\n\t\tstream.writeUint32(this.first_chunk[i]);\n\t\tstream.writeUint32(this.samples_per_chunk[i]);\n\t\tstream.writeUint32(this.sample_description_index[i]);\n\t}\n}\n\n// file:src/writing/stsd.js\nBoxParser.stsdBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 0;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.entries.length);\n\tthis.size += 4;\n\tfor (i = 0; i < this.entries.length; i++) {\n\t\tthis.entries[i].write(stream);\n\t\tthis.size += this.entries[i].size;\n\t}\n\t/* adjusting the size, now that all sub-boxes are known */\n\tLog.debug(\"BoxWriter\", \"Adjusting box \"+this.type+\" with new size \"+this.size);\n\tstream.adjustUint32(this.sizePosition, this.size);\n}\n\n// file:src/writing/stsh.js\nBoxParser.stshBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+8*this.shadowed_sample_numbers.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.shadowed_sample_numbers.length);\n\tfor(i=0; i<this.shadowed_sample_numbers.length; i++) {\n\t\tstream.writeUint32(this.shadowed_sample_numbers[i]);\n\t\tstream.writeUint32(this.sync_sample_numbers[i]);\n\t}\n}\n\n// file:src/writing/stss.js\nBoxParser.stssBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+4*this.sample_numbers.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.sample_numbers.length);\n\tstream.writeUint32Array(this.sample_numbers);\n}\n\n// file:src/writing/stsz.js\nBoxParser.stszBox.prototype.write = function(stream) {\n\tvar i;\n\tvar constant = true;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tif (this.sample_sizes.length > 0) {\n\t\ti = 0;\n\t\twhile (i+1 < this.sample_sizes.length) {\n\t\t\tif (this.sample_sizes[i+1] !==  this.sample_sizes[0]) {\n\t\t\t\tconstant = false;\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconstant = false;\n\t}\n\tthis.size = 8;\n\tif (!constant) {\n\t\tthis.size += 4*this.sample_sizes.length;\n\t}\n\tthis.writeHeader(stream);\n\tif (!constant) {\n\t\tstream.writeUint32(0);\n\t} else {\n\t\tstream.writeUint32(this.sample_sizes[0]);\n\t}\n\tstream.writeUint32(this.sample_sizes.length);\n\tif (!constant) {\n\t\tstream.writeUint32Array(this.sample_sizes);\n\t}\t\n}\n\n// file:src/writing/stts.js\nBoxParser.sttsBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+8*this.sample_counts.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.sample_counts.length);\n\tfor(i=0; i<this.sample_counts.length; i++) {\n\t\tstream.writeUint32(this.sample_counts[i]);\n\t\tstream.writeUint32(this.sample_deltas[i]);\n\t}\n}\n\n// file:src/writing/tfdt.js\nBoxParser.tfdtBox.prototype.write = function(stream) {\n\tvar UINT32_MAX = Math.pow(2, 32) - 1;\n\t// use version 1 if baseMediaDecodeTime does not fit 32 bits\n\tthis.version = this.baseMediaDecodeTime > UINT32_MAX ? 1 : 0;\n\tthis.flags = 0;\n\tthis.size = 4;\n\tif (this.version === 1) {\n\t\tthis.size += 4;\n\t}\n\tthis.writeHeader(stream);\n\tif (this.version === 1) {\n\t\tstream.writeUint64(this.baseMediaDecodeTime);\n\t} else {\n\t\tstream.writeUint32(this.baseMediaDecodeTime);\n\t}\n}\n\n// file:src/writing/tfhd.js\nBoxParser.tfhdBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.size = 4;\n\tif (this.flags & BoxParser.TFHD_FLAG_BASE_DATA_OFFSET) {\n\t\tthis.size += 8;\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DESC) {\n\t\tthis.size += 4;\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DUR) {\n\t\tthis.size += 4;\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_SIZE) {\n\t\tthis.size += 4;\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_FLAGS) {\n\t\tthis.size += 4;\n\t}\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.track_id);\n\tif (this.flags & BoxParser.TFHD_FLAG_BASE_DATA_OFFSET) {\n\t\tstream.writeUint64(this.base_data_offset);\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DESC) {\n\t\tstream.writeUint32(this.default_sample_description_index);\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DUR) {\n\t\tstream.writeUint32(this.default_sample_duration);\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_SIZE) {\n\t\tstream.writeUint32(this.default_sample_size);\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_FLAGS) {\n\t\tstream.writeUint32(this.default_sample_flags);\n\t}\n}\n\n// file:src/writing/tkhd.js\nBoxParser.tkhdBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\t//this.flags = 0;\n\tthis.size = 4*18+2*4;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.creation_time);\n\tstream.writeUint32(this.modification_time);\n\tstream.writeUint32(this.track_id);\n\tstream.writeUint32(0);\n\tstream.writeUint32(this.duration);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeInt16(this.layer);\n\tstream.writeInt16(this.alternate_group);\n\tstream.writeInt16(this.volume<<8);\n\tstream.writeUint16(0);\n\tstream.writeInt32Array(this.matrix);\n\tstream.writeUint32(this.width);\n\tstream.writeUint32(this.height);\n}\n\n// file:src/writing/trex.js\nBoxParser.trexBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4*5;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.track_id);\n\tstream.writeUint32(this.default_sample_description_index);\n\tstream.writeUint32(this.default_sample_duration);\n\tstream.writeUint32(this.default_sample_size);\n\tstream.writeUint32(this.default_sample_flags);\n}\n\n// file:src/writing/trun.js\nBoxParser.trunBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.size = 4;\n\tif (this.flags & BoxParser.TRUN_FLAGS_DATA_OFFSET) {\n\t\tthis.size += 4;\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_FIRST_FLAG) {\n\t\tthis.size += 4;\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_DURATION) {\n\t\tthis.size += 4*this.sample_duration.length;\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_SIZE) {\n\t\tthis.size += 4*this.sample_size.length;\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_FLAGS) {\n\t\tthis.size += 4*this.sample_flags.length;\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_CTS_OFFSET) {\n\t\tthis.size += 4*this.sample_composition_time_offset.length;\n\t}\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.sample_count);\n\tif (this.flags & BoxParser.TRUN_FLAGS_DATA_OFFSET) {\n\t\tthis.data_offset_position = stream.getPosition();\n\t\tstream.writeInt32(this.data_offset); //signed\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_FIRST_FLAG) {\n\t\tstream.writeUint32(this.first_sample_flags);\n\t}\n\tfor (var i = 0; i < this.sample_count; i++) {\n\t\tif (this.flags & BoxParser.TRUN_FLAGS_DURATION) {\n\t\t\tstream.writeUint32(this.sample_duration[i]);\n\t\t}\n\t\tif (this.flags & BoxParser.TRUN_FLAGS_SIZE) {\n\t\t\tstream.writeUint32(this.sample_size[i]);\n\t\t}\n\t\tif (this.flags & BoxParser.TRUN_FLAGS_FLAGS) {\n\t\t\tstream.writeUint32(this.sample_flags[i]);\n\t\t}\n\t\tif (this.flags & BoxParser.TRUN_FLAGS_CTS_OFFSET) {\n\t\t\tif (this.version === 0) {\n\t\t\t\tstream.writeUint32(this.sample_composition_time_offset[i]);\n\t\t\t} else {\n\t\t\t\tstream.writeInt32(this.sample_composition_time_offset[i]); //signed\n\t\t\t}\n\t\t}\n\t}\t\t\n}\n\n// file:src/writing/url.js\nBoxParser[\"url Box\"].prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tif (this.location) {\n\t\tthis.flags = 0;\n\t\tthis.size = this.location.length+1;\n\t} else {\n\t\tthis.flags = 0x000001;\n\t\tthis.size = 0;\n\t}\n\tthis.writeHeader(stream);\n\tif (this.location) {\n\t\tstream.writeCString(this.location);\n\t}\n}\n\n// file:src/writing/urn.js\nBoxParser[\"urn Box\"].prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = this.name.length+1+(this.location ? this.location.length+1 : 0);\n\tthis.writeHeader(stream);\n\tstream.writeCString(this.name);\n\tif (this.location) {\n\t\tstream.writeCString(this.location);\n\t}\n}\n\n// file:src/writing/vmhd.js\nBoxParser.vmhdBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 1;\n\tthis.size = 8;\n\tthis.writeHeader(stream);\n\tstream.writeUint16(this.graphicsmode);\n\tstream.writeUint16Array(this.opcolor);\n}\n\n// file:src/box-unpack.js\n/* \n * Copyright (c) Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nBoxParser.cttsBox.prototype.unpack = function(samples) {\n\tvar i, j, k;\n\tk = 0;\n\tfor (i = 0; i < this.sample_counts.length; i++) {\n\t\tfor (j = 0; j < this.sample_counts[i]; j++) {\n\t\t\tsamples[k].pts = samples[k].dts + this.sample_offsets[i];\n\t\t\tk++;\n\t\t}\n\t}\n}\n\nBoxParser.sttsBox.prototype.unpack = function(samples) {\n\tvar i, j, k;\n\tk = 0;\n\tfor (i = 0; i < this.sample_counts.length; i++) {\n\t\tfor (j = 0; j < this.sample_counts[i]; j++) {\n\t\t\tif (k === 0) {\n\t\t\t\tsamples[k].dts = 0;\n\t\t\t} else {\n\t\t\t\tsamples[k].dts = samples[k-1].dts + this.sample_deltas[i];\n\t\t\t}\n\t\t\tk++;\n\t\t}\n\t}\n}\n\nBoxParser.stcoBox.prototype.unpack = function(samples) {\n\tvar i;\n\tfor (i = 0; i < this.chunk_offsets.length; i++) {\n\t\tsamples[i].offset = this.chunk_offsets[i];\n\t}\n}\n\nBoxParser.stscBox.prototype.unpack = function(samples) {\n\tvar i, j, k, l, m;\n\tl = 0;\n\tm = 0;\n\tfor (i = 0; i < this.first_chunk.length; i++) {\n\t\tfor (j = 0; j < (i+1 < this.first_chunk.length ? this.first_chunk[i+1] : Infinity); j++) {\n\t\t\tm++;\n\t\t\tfor (k = 0; k < this.samples_per_chunk[i]; k++) {\n\t\t\t\tif (samples[l]) {\n\t\t\t\t\tsamples[l].description_index = this.sample_description_index[i];\n\t\t\t\t\tsamples[l].chunk_index = m;\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tl++;\n\t\t\t}\t\t\t\n\t\t}\n\t}\n}\n\nBoxParser.stszBox.prototype.unpack = function(samples) {\n\tvar i;\n\tfor (i = 0; i < this.sample_sizes.length; i++) {\n\t\tsamples[i].size = this.sample_sizes[i];\n\t}\n}\n// file:src/box-diff.js\n\nBoxParser.DIFF_BOXES_PROP_NAMES = [ \"boxes\", \"entries\", \"references\", \"subsamples\",\n\t\t\t\t\t \t \"items\", \"item_infos\", \"extents\", \"associations\",\n\t\t\t\t\t \t \"subsegments\", \"ranges\", \"seekLists\", \"seekPoints\",\n\t\t\t\t\t \t \"esd\", \"levels\"];\n\nBoxParser.DIFF_PRIMITIVE_ARRAY_PROP_NAMES = [ \"compatible_brands\", \"matrix\", \"opcolor\", \"sample_counts\", \"sample_counts\", \"sample_deltas\",\n\"first_chunk\", \"samples_per_chunk\", \"sample_sizes\", \"chunk_offsets\", \"sample_offsets\", \"sample_description_index\", \"sample_duration\" ];\n\nBoxParser.boxEqualFields = function(box_a, box_b) {\n\tif (box_a && !box_b) return false;\n\tvar prop;\n\tfor (prop in box_a) {\n\t\tif (BoxParser.DIFF_BOXES_PROP_NAMES.indexOf(prop) > -1) {\n\t\t\tcontinue;\n\t\t// } else if (excluded_fields && excluded_fields.indexOf(prop) > -1) {\n\t\t// \tcontinue;\n\t\t} else if (box_a[prop] instanceof BoxParser.Box || box_b[prop] instanceof BoxParser.Box) {\n\t\t\tcontinue;\n\t\t} else if (typeof box_a[prop] === \"undefined\" || typeof box_b[prop] === \"undefined\") {\n\t\t\tcontinue;\n\t\t} else if (typeof box_a[prop] === \"function\" || typeof box_b[prop] === \"function\") {\n\t\t\tcontinue;\n\t\t} else if (\n\t\t\t(box_a.subBoxNames && box_a.subBoxNames.indexOf(prop.slice(0,4)) > -1) ||\n\t\t\t(box_b.subBoxNames && box_b.subBoxNames.indexOf(prop.slice(0,4)) > -1))  {\n\t\t\tcontinue;\n\t\t} else {\n\t\t\tif (prop === \"data\" || prop === \"start\" || prop === \"size\" || prop === \"creation_time\" || prop === \"modification_time\") {\n\t\t\t\tcontinue;\n\t\t\t} else if (BoxParser.DIFF_PRIMITIVE_ARRAY_PROP_NAMES.indexOf(prop) > -1) {\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\tif (box_a[prop] !== box_b[prop]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nBoxParser.boxEqual = function(box_a, box_b) {\n\tif (!BoxParser.boxEqualFields(box_a, box_b)) {\n\t\treturn false;\n\t}\n\tfor (var j = 0; j < BoxParser.DIFF_BOXES_PROP_NAMES.length; j++) {\n\t\tvar name = BoxParser.DIFF_BOXES_PROP_NAMES[j];\n\t\tif (box_a[name] && box_b[name]) {\n\t\t\tif (!BoxParser.boxEqual(box_a[name], box_b[name])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}// file:src/text-mp4.js\n/* \n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar VTTin4Parser = function() {\t\n}\n\nVTTin4Parser.prototype.parseSample = function(data) {\n\tvar cues, cue;\n\tvar stream = new MP4BoxStream(data.buffer);\n\tcues = [];\n\twhile (!stream.isEos()) {\n\t\tcue = BoxParser.parseOneBox(stream, false);\n\t\tif (cue.code === BoxParser.OK && cue.box.type === \"vttc\") {\n\t\t\tcues.push(cue.box);\n\t\t}\t\t\n\t}\n\treturn cues;\n}\n\nVTTin4Parser.prototype.getText = function (startTime, endTime, data) {\n\tfunction pad(n, width, z) {\n\t  z = z || '0';\n\t  n = n + '';\n\t  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n\t}\n\tfunction secToTimestamp(insec) {\n\t\tvar h = Math.floor(insec/3600);\n\t\tvar m = Math.floor((insec - h*3600)/60);\n\t\tvar s = Math.floor(insec - h*3600 - m*60);\n\t\tvar ms = Math.floor((insec - h*3600 - m*60 - s)*1000);\n\t\treturn \"\"+pad(h, 2)+\":\"+pad(m,2)+\":\"+pad(s, 2)+\".\"+pad(ms, 3);\n\t}\n\tvar cues = this.parseSample(data);\n\tvar string = \"\";\n\tfor (var i = 0; i < cues.length; i++) {\n\t\tvar cueIn4 = cues[i];\n\t\tstring += secToTimestamp(startTime)+\" --> \"+secToTimestamp(endTime)+\"\\r\\n\";\n\t\tstring += cueIn4.payl.text;\n\t}\n\treturn string;\n}\n\nvar XMLSubtitlein4Parser = function() {\t\n}\n\nXMLSubtitlein4Parser.prototype.parseSample = function(sample) {\n\tvar res = {};\t\n\tvar i;\n\tres.resources = [];\n\tvar stream = new MP4BoxStream(sample.data.buffer);\n\tif (!sample.subsamples || sample.subsamples.length === 0) {\n\t\tres.documentString = stream.readString(sample.data.length);\n\t} else {\n\t\tres.documentString = stream.readString(sample.subsamples[0].size);\n\t\tif (sample.subsamples.length > 1) {\n\t\t\tfor (i = 1; i < sample.subsamples.length; i++) {\n\t\t\t\tres.resources[i] = stream.readUint8Array(sample.subsamples[i].size);\n\t\t\t}\n\t\t}\n\t}\n\tif (typeof (DOMParser) !== \"undefined\") {\n\t\tres.document = (new DOMParser()).parseFromString(res.documentString, \"application/xml\");\n\t}\n\treturn res;\n}\n\nvar Textin4Parser = function() {\t\n}\n\nTextin4Parser.prototype.parseSample = function(sample) {\n\tvar textString;\n\tvar stream = new MP4BoxStream(sample.data.buffer);\n\ttextString = stream.readString(sample.data.length);\n\treturn textString;\n}\n\nTextin4Parser.prototype.parseConfig = function(data) {\n\tvar textString;\n\tvar stream = new MP4BoxStream(data.buffer);\n\tstream.readUint32(); // version & flags\n\ttextString = stream.readCString();\n\treturn textString;\n}\n\nif (typeof exports !== 'undefined') {\n\texports.XMLSubtitlein4Parser = XMLSubtitlein4Parser;\n\texports.Textin4Parser = Textin4Parser;\n}\n// file:src/isofile.js\n/*\n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar ISOFile = function (stream) {\n\t/* MutiBufferStream object used to parse boxes */\n\tthis.stream = stream || new MultiBufferStream();\n\t/* Array of all boxes (in order) found in the file */\n\tthis.boxes = [];\n\t/* Array of all mdats */\n\tthis.mdats = [];\n\t/* Array of all moofs */\n\tthis.moofs = [];\n\t/* Boolean indicating if the file is compatible with progressive parsing (moov first) */\n\tthis.isProgressive = false;\n\t/* Boolean used to fire moov start event only once */\n\tthis.moovStartFound = false;\n\t/* Callback called when the moov parsing starts */\n\tthis.onMoovStart = null;\n\t/* Boolean keeping track of the call to onMoovStart, to avoid double calls */\n\tthis.moovStartSent = false;\n\t/* Callback called when the moov is entirely parsed */\n\tthis.onReady = null;\n\t/* Boolean keeping track of the call to onReady, to avoid double calls */\n\tthis.readySent = false;\n\t/* Callback to call when segments are ready */\n\tthis.onSegment = null;\n\t/* Callback to call when samples are ready */\n\tthis.onSamples = null;\n\t/* Callback to call when there is an error in the parsing or processing of samples */\n\tthis.onError = null;\n\t/* Boolean indicating if the moov box run-length encoded tables of sample information have been processed */\n\tthis.sampleListBuilt = false;\n\t/* Array of Track objects for which fragmentation of samples is requested */\n\tthis.fragmentedTracks = [];\n\t/* Array of Track objects for which extraction of samples is requested */\n\tthis.extractedTracks = [];\n\t/* Boolean indicating that fragmention is ready */\n\tthis.isFragmentationInitialized = false;\n\t/* Boolean indicating that fragmented has started */\n\tthis.sampleProcessingStarted = false;\n\t/* Number of the next 'moof' to generate when fragmenting */\n\tthis.nextMoofNumber = 0;\n\t/* Boolean indicating if the initial list of items has been produced */\n\tthis.itemListBuilt = false;\n\t/* Callback called when the sidx box is entirely parsed */\n\tthis.onSidx = null;\n\t/* Boolean keeping track of the call to onSidx, to avoid double calls */\n\tthis.sidxSent = false;\n}\n\nISOFile.prototype.setSegmentOptions = function(id, user, options) {\n\tvar trak = this.getTrackById(id);\n\tif (trak) {\n\t\tvar fragTrack = {};\n\t\tthis.fragmentedTracks.push(fragTrack);\n\t\tfragTrack.id = id;\n\t\tfragTrack.user = user;\n\t\tfragTrack.trak = trak;\n\t\ttrak.nextSample = 0;\n\t\tfragTrack.segmentStream = null;\n\t\tfragTrack.nb_samples = 1000;\n\t\tfragTrack.rapAlignement = true;\n\t\tif (options) {\n\t\t\tif (options.nbSamples) fragTrack.nb_samples = options.nbSamples;\n\t\t\tif (options.rapAlignement) fragTrack.rapAlignement = options.rapAlignement;\n\t\t}\n\t}\n}\n\nISOFile.prototype.unsetSegmentOptions = function(id) {\n\tvar index = -1;\n\tfor (var i = 0; i < this.fragmentedTracks.length; i++) {\n\t\tvar fragTrack = this.fragmentedTracks[i];\n\t\tif (fragTrack.id == id) {\n\t\t\tindex = i;\n\t\t}\n\t}\n\tif (index > -1) {\n\t\tthis.fragmentedTracks.splice(index, 1);\n\t}\n}\n\nISOFile.prototype.setExtractionOptions = function(id, user, options) {\n\tvar trak = this.getTrackById(id);\n\tif (trak) {\n\t\tvar extractTrack = {};\n\t\tthis.extractedTracks.push(extractTrack);\n\t\textractTrack.id = id;\n\t\textractTrack.user = user;\n\t\textractTrack.trak = trak;\n\t\ttrak.nextSample = 0;\n\t\textractTrack.nb_samples = 1000;\n\t\textractTrack.samples = [];\n\t\tif (options) {\n\t\t\tif (options.nbSamples) extractTrack.nb_samples = options.nbSamples;\n\t\t}\n\t}\n}\n\nISOFile.prototype.unsetExtractionOptions = function(id) {\n\tvar index = -1;\n\tfor (var i = 0; i < this.extractedTracks.length; i++) {\n\t\tvar extractTrack = this.extractedTracks[i];\n\t\tif (extractTrack.id == id) {\n\t\t\tindex = i;\n\t\t}\n\t}\n\tif (index > -1) {\n\t\tthis.extractedTracks.splice(index, 1);\n\t}\n}\n\nISOFile.prototype.parse = function() {\n\tvar found;\n\tvar ret;\n\tvar box;\n\tvar parseBoxHeadersOnly = false;\n\n\tif (this.restoreParsePosition)\t{\n\t\tif (!this.restoreParsePosition()) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\twhile (true) {\n\n\t\tif (this.hasIncompleteMdat && this.hasIncompleteMdat()) {\n\t\t\tif (this.processIncompleteMdat()) {\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.saveParsePosition)\t{\n\t\t\t\tthis.saveParsePosition();\n\t\t\t}\n\t\t\tret = BoxParser.parseOneBox(this.stream, parseBoxHeadersOnly);\n\t\t\tif (ret.code === BoxParser.ERR_NOT_ENOUGH_DATA) {\n\t\t\t\tif (this.processIncompleteBox) {\n\t\t\t\t\tif (this.processIncompleteBox(ret)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar box_type;\n\t\t\t\t/* the box is entirely parsed */\n\t\t\t\tbox = ret.box;\n\t\t\t\tbox_type = (box.type !== \"uuid\" ? box.type : box.uuid);\n\t\t\t\t/* store the box in the 'boxes' array to preserve box order (for file rewrite if needed)  */\n\t\t\t\tthis.boxes.push(box);\n\t\t\t\t/* but also store box in a property for more direct access */\n\t\t\t\tswitch (box_type) {\n\t\t\t\t\tcase \"mdat\":\n\t\t\t\t\t\tthis.mdats.push(box);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"moof\":\n\t\t\t\t\t\tthis.moofs.push(box);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"moov\":\n\t\t\t\t\t\tthis.moovStartFound = true;\n\t\t\t\t\t\tif (this.mdats.length === 0) {\n\t\t\t\t\t\t\tthis.isProgressive = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/* no break */\n\t\t\t\t\t\t/* falls through */\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (this[box_type] !== undefined) {\n\t\t\t\t\t\t\tLog.warn(\"ISOFile\", \"Duplicate Box of type: \"+box_type+\", overriding previous occurrence\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis[box_type] = box;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this.updateUsedBytes) {\n\t\t\t\t\tthis.updateUsedBytes(box, ret);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nISOFile.prototype.checkBuffer = function (ab) {\n\tif (ab === null || ab === undefined) {\n\t\tthrow(\"Buffer must be defined and non empty\");\n\t}\n\tif (ab.fileStart === undefined) {\n\t\tthrow(\"Buffer must have a fileStart property\");\n\t}\n\tif (ab.byteLength === 0) {\n\t\tLog.warn(\"ISOFile\", \"Ignoring empty buffer (fileStart: \"+ab.fileStart+\")\");\n\t\tthis.stream.logBufferLevel();\n\t\treturn false;\n\t}\n\tLog.info(\"ISOFile\", \"Processing buffer (fileStart: \"+ab.fileStart+\")\");\n\n\t/* mark the bytes in the buffer as not being used yet */\n\tab.usedBytes = 0;\n\tthis.stream.insertBuffer(ab);\n\tthis.stream.logBufferLevel();\n\n\tif (!this.stream.initialized()) {\n\t\tLog.warn(\"ISOFile\", \"Not ready to start parsing\");\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n/* Processes a new ArrayBuffer (with a fileStart property)\n   Returns the next expected file position, or undefined if not ready to parse */\nISOFile.prototype.appendBuffer = function(ab, last) {\n\tvar nextFileStart;\n\tif (!this.checkBuffer(ab)) {\n\t\treturn;\n\t}\n\n\t/* Parse whatever is in the existing buffers */\n\tthis.parse();\n\n\t/* Check if the moovStart callback needs to be called */\n\tif (this.moovStartFound && !this.moovStartSent) {\n\t\tthis.moovStartSent = true;\n\t\tif (this.onMoovStart) this.onMoovStart();\n\t}\n\n\tif (this.moov) {\n\t\t/* A moov box has been entirely parsed */\n\n\t\t/* if this is the first call after the moov is found we initialize the list of samples (may be empty in fragmented files) */\n\t\tif (!this.sampleListBuilt) {\n\t\t\tthis.buildSampleLists();\n\t\t\tthis.sampleListBuilt = true;\n\t\t}\n\n\t\t/* We update the sample information if there are any new moof boxes */\n\t\tthis.updateSampleLists();\n\n\t\t/* If the application needs to be informed that the 'moov' has been found,\n\t\t   we create the information object and callback the application */\n\t\tif (this.onReady && !this.readySent) {\n\t\t\tthis.readySent = true;\n\t\t\tthis.onReady(this.getInfo());\n\t\t}\n\n\t\t/* See if any sample extraction or segment creation needs to be done with the available samples */\n\t\tthis.processSamples(last);\n\n\t\t/* Inform about the best range to fetch next */\n\t\tif (this.nextSeekPosition) {\n\t\t\tnextFileStart = this.nextSeekPosition;\n\t\t\tthis.nextSeekPosition = undefined;\n\t\t} else {\n\t\t\tnextFileStart = this.nextParsePosition;\n\t\t}\n\t\tif (this.stream.getEndFilePositionAfter) {\n\t\t\tnextFileStart = this.stream.getEndFilePositionAfter(nextFileStart);\n\t\t}\n\t} else {\n\t\tif (this.nextParsePosition) {\n\t\t\t/* moov has not been parsed but the first buffer was received,\n\t\t\t   the next fetch should probably be the next box start */\n\t\t\tnextFileStart = this.nextParsePosition;\n\t\t} else {\n\t\t\t/* No valid buffer has been parsed yet, we cannot know what to parse next */\n\t\t\tnextFileStart = 0;\n\t\t}\n\t}\n\tif (this.sidx) {\n\t\tif (this.onSidx && !this.sidxSent) {\n\t\t\tthis.onSidx(this.sidx);\n\t\t\tthis.sidxSent = true;\n\t\t}\n\t}\n\tif (this.meta) {\n\t\tif (this.flattenItemInfo && !this.itemListBuilt) {\n\t\t\tthis.flattenItemInfo();\n\t\t\tthis.itemListBuilt = true;\n\t\t}\n\t\tif (this.processItems) {\n\t\t\tthis.processItems(this.onItem);\n\t\t}\n\t}\n\n\tif (this.stream.cleanBuffers) {\n\t\tLog.info(\"ISOFile\", \"Done processing buffer (fileStart: \"+ab.fileStart+\") - next buffer to fetch should have a fileStart position of \"+nextFileStart);\n\t\tthis.stream.logBufferLevel();\n\t\tthis.stream.cleanBuffers();\n\t\tthis.stream.logBufferLevel(true);\n\t\tLog.info(\"ISOFile\", \"Sample data size in memory: \"+this.getAllocatedSampleDataSize());\n\t}\n\treturn nextFileStart;\n}\n\nISOFile.prototype.getInfo = function() {\n\tvar i, j;\n\tvar movie = {};\n\tvar trak;\n\tvar track;\n\tvar ref;\n\tvar sample_desc;\n\tvar _1904 = (new Date('1904-01-01T00:00:00Z').getTime());\n\n\tif (this.moov) {\n\t\tmovie.hasMoov = true;\n\t\tmovie.duration = this.moov.mvhd.duration;\n\t\tmovie.timescale = this.moov.mvhd.timescale;\n\t\tmovie.isFragmented = (this.moov.mvex != null);\n\t\tif (movie.isFragmented && this.moov.mvex.mehd) {\n\t\t\tmovie.fragment_duration = this.moov.mvex.mehd.fragment_duration;\n\t\t}\n\t\tmovie.isProgressive = this.isProgressive;\n\t\tmovie.hasIOD = (this.moov.iods != null);\n\t\tmovie.brands = [];\n\t\tmovie.brands.push(this.ftyp.major_brand);\n\t\tmovie.brands = movie.brands.concat(this.ftyp.compatible_brands);\n\t\tmovie.created = new Date(_1904+this.moov.mvhd.creation_time*1000);\n\t\tmovie.modified = new Date(_1904+this.moov.mvhd.modification_time*1000);\n\t\tmovie.tracks = [];\n\t\tmovie.audioTracks = [];\n\t\tmovie.videoTracks = [];\n\t\tmovie.subtitleTracks = [];\n\t\tmovie.metadataTracks = [];\n\t\tmovie.hintTracks = [];\n\t\tmovie.otherTracks = [];\n\t\tfor (i = 0; i < this.moov.traks.length; i++) {\n\t\t\ttrak = this.moov.traks[i];\n\t\t\tsample_desc = trak.mdia.minf.stbl.stsd.entries[0];\n\t\t\ttrack = {};\n\t\t\tmovie.tracks.push(track);\n\t\t\ttrack.id = trak.tkhd.track_id;\n\t\t\ttrack.name = trak.mdia.hdlr.name;\n\t\t\ttrack.references = [];\n\t\t\tif (trak.tref) {\n\t\t\t\tfor (j = 0; j < trak.tref.boxes.length; j++) {\n\t\t\t\t\tref = {};\n\t\t\t\t\ttrack.references.push(ref);\n\t\t\t\t\tref.type = trak.tref.boxes[j].type;\n\t\t\t\t\tref.track_ids = trak.tref.boxes[j].track_ids;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (trak.edts) {\n\t\t\t\ttrack.edits = trak.edts.elst.entries;\n\t\t\t}\n\t\t\ttrack.created = new Date(_1904+trak.tkhd.creation_time*1000);\n\t\t\ttrack.modified = new Date(_1904+trak.tkhd.modification_time*1000);\n\t\t\ttrack.movie_duration = trak.tkhd.duration;\n\t\t\ttrack.movie_timescale = movie.timescale;\n\t\t\ttrack.layer = trak.tkhd.layer;\n\t\t\ttrack.alternate_group = trak.tkhd.alternate_group;\n\t\t\ttrack.volume = trak.tkhd.volume;\n\t\t\ttrack.matrix = trak.tkhd.matrix;\n\t\t\ttrack.track_width = trak.tkhd.width/(1<<16);\n\t\t\ttrack.track_height = trak.tkhd.height/(1<<16);\n\t\t\ttrack.timescale = trak.mdia.mdhd.timescale;\n\t\t\ttrack.cts_shift = trak.mdia.minf.stbl.cslg;\n\t\t\ttrack.duration = trak.mdia.mdhd.duration;\n\t\t\ttrack.samples_duration = trak.samples_duration;\n\t\t\ttrack.codec = sample_desc.getCodec();\n\t\t\ttrack.kind = (trak.udta && trak.udta.kinds.length ? trak.udta.kinds[0] : { schemeURI: \"\", value: \"\"});\n\t\t\ttrack.language = (trak.mdia.elng ? trak.mdia.elng.extended_language : trak.mdia.mdhd.languageString);\n\t\t\ttrack.nb_samples = trak.samples.length;\n\t\t\ttrack.size = trak.samples_size;\n\t\t\ttrack.bitrate = (track.size*8*track.timescale)/track.samples_duration;\n\t\t\tif (sample_desc.isAudio()) {\n\t\t\t\ttrack.type = \"audio\";\n\t\t\t\tmovie.audioTracks.push(track);\n\t\t\t\ttrack.audio = {};\n\t\t\t\ttrack.audio.sample_rate = sample_desc.getSampleRate();\n\t\t\t\ttrack.audio.channel_count = sample_desc.getChannelCount();\n\t\t\t\ttrack.audio.sample_size = sample_desc.getSampleSize();\n\t\t\t} else if (sample_desc.isVideo()) {\n\t\t\t\ttrack.type = \"video\";\n\t\t\t\tmovie.videoTracks.push(track);\n\t\t\t\ttrack.video = {};\n\t\t\t\ttrack.video.width = sample_desc.getWidth();\n\t\t\t\ttrack.video.height = sample_desc.getHeight();\n\t\t\t} else if (sample_desc.isSubtitle()) {\n\t\t\t\ttrack.type = \"subtitles\";\n\t\t\t\tmovie.subtitleTracks.push(track);\n\t\t\t} else if (sample_desc.isHint()) {\n\t\t\t\ttrack.type = \"metadata\";\n\t\t\t\tmovie.hintTracks.push(track);\n\t\t\t} else if (sample_desc.isMetadata()) {\n\t\t\t\ttrack.type = \"metadata\";\n\t\t\t\tmovie.metadataTracks.push(track);\n\t\t\t} else {\n\t\t\t\ttrack.type = \"metadata\";\n\t\t\t\tmovie.otherTracks.push(track);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tmovie.hasMoov = false;\n\t}\n\tmovie.mime = \"\";\n\tif (movie.hasMoov && movie.tracks) {\n\t\tif (movie.videoTracks && movie.videoTracks.length > 0) {\n\t\t\tmovie.mime += 'video/mp4; codecs=\\\"';\n\t\t} else if (movie.audioTracks && movie.audioTracks.length > 0) {\n\t\t\tmovie.mime += 'audio/mp4; codecs=\\\"';\n\t\t} else {\n\t\t\tmovie.mime += 'application/mp4; codecs=\\\"';\n\t\t}\n\t\tfor (i = 0; i < movie.tracks.length; i++) {\n\t\t\tif (i !== 0) movie.mime += ',';\n\t\t\tmovie.mime+= movie.tracks[i].codec;\n\t\t}\n\t\tmovie.mime += '\\\"; profiles=\\\"';\n\t\tmovie.mime += this.ftyp.compatible_brands.join();\n\t\tmovie.mime += '\\\"';\n\t}\n\treturn movie;\n}\n\nISOFile.prototype.processSamples = function(last) {\n\tvar i;\n\tvar trak;\n\tif (!this.sampleProcessingStarted) return;\n\n\t/* For each track marked for fragmentation,\n\t   check if the next sample is there (i.e. if the sample information is known (i.e. moof has arrived) and if it has been downloaded)\n\t   and create a fragment with it */\n\tif (this.isFragmentationInitialized && this.onSegment !== null) {\n\t\tfor (i = 0; i < this.fragmentedTracks.length; i++) {\n\t\t\tvar fragTrak = this.fragmentedTracks[i];\n\t\t\ttrak = fragTrak.trak;\n\t\t\twhile (trak.nextSample < trak.samples.length && this.sampleProcessingStarted) {\n\t\t\t\t/* The sample information is there (either because the file is not fragmented and this is not the last sample,\n\t\t\t\tor because the file is fragmented and the moof for that sample has been received */\n\t\t\t\tLog.debug(\"ISOFile\", \"Creating media fragment on track #\"+fragTrak.id +\" for sample \"+trak.nextSample);\n\t\t\t\tvar result = this.createFragment(fragTrak.id, trak.nextSample, fragTrak.segmentStream);\n\t\t\t\tif (result) {\n\t\t\t\t\tfragTrak.segmentStream = result;\n\t\t\t\t\ttrak.nextSample++;\n\t\t\t\t} else {\n\t\t\t\t\t/* The fragment could not be created because the media data is not there (not downloaded), wait for it */\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t/* A fragment is created by sample, but the segment is the accumulation in the buffer of these fragments.\n\t\t\t\t   It is flushed only as requested by the application (nb_samples) to avoid too many callbacks */\n\t\t\t\tif (trak.nextSample % fragTrak.nb_samples === 0 || (last || trak.nextSample >= trak.samples.length)) {\n\t\t\t\t\tLog.info(\"ISOFile\", \"Sending fragmented data on track #\"+fragTrak.id+\" for samples [\"+Math.max(0,trak.nextSample-fragTrak.nb_samples)+\",\"+(trak.nextSample-1)+\"]\");\n\t\t\t\t\tLog.info(\"ISOFile\", \"Sample data size in memory: \"+this.getAllocatedSampleDataSize());\n\t\t\t\t\tif (this.onSegment) {\n\t\t\t\t\t\tthis.onSegment(fragTrak.id, fragTrak.user, fragTrak.segmentStream.buffer, trak.nextSample, (last || trak.nextSample >= trak.samples.length));\n\t\t\t\t\t}\n\t\t\t\t\t/* force the creation of a new buffer */\n\t\t\t\t\tfragTrak.segmentStream = null;\n\t\t\t\t\tif (fragTrak !== this.fragmentedTracks[i]) {\n\t\t\t\t\t\t/* make sure we can stop fragmentation if needed */\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.onSamples !== null) {\n\t\t/* For each track marked for data export,\n\t\t   check if the next sample is there (i.e. has been downloaded) and send it */\n\t\tfor (i = 0; i < this.extractedTracks.length; i++) {\n\t\t\tvar extractTrak = this.extractedTracks[i];\n\t\t\ttrak = extractTrak.trak;\n\t\t\twhile (trak.nextSample < trak.samples.length && this.sampleProcessingStarted) {\n\t\t\t\tLog.debug(\"ISOFile\", \"Exporting on track #\"+extractTrak.id +\" sample #\"+trak.nextSample);\n\t\t\t\tvar sample = this.getSample(trak, trak.nextSample);\n\t\t\t\tif (sample) {\n\t\t\t\t\ttrak.nextSample++;\n\t\t\t\t\textractTrak.samples.push(sample);\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (trak.nextSample % extractTrak.nb_samples === 0 || trak.nextSample >= trak.samples.length) {\n\t\t\t\t\tLog.debug(\"ISOFile\", \"Sending samples on track #\"+extractTrak.id+\" for sample \"+trak.nextSample);\n\t\t\t\t\tif (this.onSamples) {\n\t\t\t\t\t\tthis.onSamples(extractTrak.id, extractTrak.user, extractTrak.samples);\n\t\t\t\t\t}\n\t\t\t\t\textractTrak.samples = [];\n\t\t\t\t\tif (extractTrak !== this.extractedTracks[i]) {\n\t\t\t\t\t\t/* check if the extraction needs to be stopped */\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/* Find and return specific boxes using recursion and early return */\nISOFile.prototype.getBox = function(type) {\n  var result = this.getBoxes(type, true);\n  return (result.length ? result[0] : null);\n}\n\nISOFile.prototype.getBoxes = function(type, returnEarly) {\n  var result = [];\n  ISOFile._sweep.call(this, type, result, returnEarly);\n  return result;\n}\n\nISOFile._sweep = function(type, result, returnEarly) {\n  if (this.type && this.type == type) result.push(this);\n  for (var box in this.boxes) {\n    if (result.length && returnEarly) return;\n    ISOFile._sweep.call(this.boxes[box], type, result, returnEarly);\n  }\n}\n\nISOFile.prototype.getTrackSamplesInfo = function(track_id) {\n\tvar track = this.getTrackById(track_id);\n\tif (track) {\n\t\treturn track.samples;\n\t} else {\n\t\treturn;\n\t}\n}\n\nISOFile.prototype.getTrackSample = function(track_id, number) {\n\tvar track = this.getTrackById(track_id);\n\tvar sample = this.getSample(track, number);\n\treturn sample;\n}\n\n/* Called by the application to release the resources associated to samples already forwarded to the application */\nISOFile.prototype.releaseUsedSamples = function (id, sampleNum) {\n\tvar size = 0;\n\tvar trak = this.getTrackById(id);\n\tif (!trak.lastValidSample) trak.lastValidSample = 0;\n\tfor (var i = trak.lastValidSample; i < sampleNum; i++) {\n\t\tsize+=this.releaseSample(trak, i);\n\t}\n\tLog.info(\"ISOFile\", \"Track #\"+id+\" released samples up to \"+sampleNum+\" (released size: \"+size+\", remaining: \"+this.samplesDataSize+\")\");\n\ttrak.lastValidSample = sampleNum;\n}\n\nISOFile.prototype.start = function() {\n\tthis.sampleProcessingStarted = true;\n\tthis.processSamples(false);\n}\n\nISOFile.prototype.stop = function() {\n\tthis.sampleProcessingStarted = false;\n}\n\n/* Called by the application to flush the remaining samples (e.g. once the download is finished or when no more samples will be added) */\nISOFile.prototype.flush = function() {\n\tLog.info(\"ISOFile\", \"Flushing remaining samples\");\n\tthis.updateSampleLists();\n\tthis.processSamples(true);\n\tthis.stream.cleanBuffers();\n\tthis.stream.logBufferLevel(true);\n}\n\n/* Finds the byte offset for a given time on a given track\n   also returns the time of the previous rap */\nISOFile.prototype.seekTrack = function(time, useRap, trak) {\n\tvar j;\n\tvar sample;\n\tvar seek_offset = Infinity;\n\tvar rap_seek_sample_num = 0;\n\tvar seek_sample_num = 0;\n\tvar timescale;\n\n\tif (trak.samples.length === 0) {\n\t\tLog.info(\"ISOFile\", \"No sample in track, cannot seek! Using time \"+Log.getDurationString(0, 1) +\" and offset: \"+0);\n\t\treturn { offset: 0, time: 0 };\n\t}\n\n\tfor (j = 0; j < trak.samples.length; j++) {\n\t\tsample = trak.samples[j];\n\t\tif (j === 0) {\n\t\t\tseek_sample_num = 0;\n\t\t\ttimescale = sample.timescale;\n\t\t} else if (sample.cts > time * sample.timescale) {\n\t\t\tseek_sample_num = j-1;\n\t\t\tbreak;\n\t\t}\n\t\tif (useRap && sample.is_sync) {\n\t\t\trap_seek_sample_num = j;\n\t\t}\n\t}\n\tif (useRap) {\n\t\tseek_sample_num = rap_seek_sample_num;\n\t}\n\ttime = trak.samples[seek_sample_num].cts;\n\ttrak.nextSample = seek_sample_num;\n\twhile (trak.samples[seek_sample_num].alreadyRead === trak.samples[seek_sample_num].size) {\n\t\t// No remaining samples to look for, all are downloaded.\n\t\tif (!trak.samples[seek_sample_num + 1]) {\n\t\t\tbreak;\n\t\t}\n\t\tseek_sample_num++;\n\t}\n\tseek_offset = trak.samples[seek_sample_num].offset+trak.samples[seek_sample_num].alreadyRead;\n\tLog.info(\"ISOFile\", \"Seeking to \"+(useRap ? \"RAP\": \"\")+\" sample #\"+trak.nextSample+\" on track \"+trak.tkhd.track_id+\", time \"+Log.getDurationString(time, timescale) +\" and offset: \"+seek_offset);\n\treturn { offset: seek_offset, time: time/timescale };\n}\n\n/* Finds the byte offset in the file corresponding to the given time or to the time of the previous RAP */\nISOFile.prototype.seek = function(time, useRap) {\n\tvar moov = this.moov;\n\tvar trak;\n\tvar trak_seek_info;\n\tvar i;\n\tvar seek_info = { offset: Infinity, time: Infinity };\n\tif (!this.moov) {\n\t\tthrow \"Cannot seek: moov not received!\";\n\t} else {\n\t\tfor (i = 0; i<moov.traks.length; i++) {\n\t\t\ttrak = moov.traks[i];\n\t\t\ttrak_seek_info = this.seekTrack(time, useRap, trak);\n\t\t\tif (trak_seek_info.offset < seek_info.offset) {\n\t\t\t\tseek_info.offset = trak_seek_info.offset;\n\t\t\t}\n\t\t\tif (trak_seek_info.time < seek_info.time) {\n\t\t\t\tseek_info.time = trak_seek_info.time;\n\t\t\t}\n\t\t}\n\t\tLog.info(\"ISOFile\", \"Seeking at time \"+Log.getDurationString(seek_info.time, 1)+\" needs a buffer with a fileStart position of \"+seek_info.offset);\n\t\tif (seek_info.offset === Infinity) {\n\t\t\t/* No sample info, in all tracks, cannot seek */\n\t\t\tseek_info = { offset: this.nextParsePosition, time: 0 };\n\t\t} else {\n\t\t\t/* check if the seek position is already in some buffer and\n\t\t\t in that case return the end of that buffer (or of the last contiguous buffer) */\n\t\t\t/* TODO: Should wait until append operations are done */\n\t\t\tseek_info.offset = this.stream.getEndFilePositionAfter(seek_info.offset);\n\t\t}\n\t\tLog.info(\"ISOFile\", \"Adjusted seek position (after checking data already in buffer): \"+seek_info.offset);\n\t\treturn seek_info;\n\t}\n}\n\nISOFile.prototype.equal = function(b) {\n\tvar box_index = 0;\n\twhile (box_index < this.boxes.length && box_index < b.boxes.length) {\n\t\tvar a_box = this.boxes[box_index];\n\t\tvar b_box = b.boxes[box_index];\n\t\tif (!BoxParser.boxEqual(a_box, b_box)) {\n\t\t\treturn false;\n\t\t}\n\t\tbox_index++;\n\t}\n\treturn true;\n}\n\nif (typeof exports !== 'undefined') {\n\texports.ISOFile = ISOFile;\n}\n// file:src/isofile-advanced-parsing.js\n/* position in the current buffer of the beginning of the last box parsed */\nISOFile.prototype.lastBoxStartPosition = 0;\n/* indicator if the parsing is stuck in the middle of an mdat box */\nISOFile.prototype.parsingMdat = null;\n/* next file position that the parser needs:\n    - 0 until the first buffer (i.e. fileStart ===0) has been received \n    - otherwise, the next box start until the moov box has been parsed\n    - otherwise, the position of the next sample to fetch\n */\nISOFile.prototype.nextParsePosition = 0;\n/* keep mdat data */\nISOFile.prototype.discardMdatData = false;\n\nISOFile.prototype.processIncompleteBox = function(ret) {\n\tvar box;\n\tvar merged;\n\tvar found;\n\t\n\t/* we did not have enough bytes in the current buffer to parse the entire box */\n\tif (ret.type === \"mdat\") { \n\t\t/* we had enough bytes to get its type and size and it's an 'mdat' */\n\t\t\n\t\t/* special handling for mdat boxes, since we don't actually need to parse it linearly \n\t\t   we create the box */\n\t\tbox = new BoxParser[ret.type+\"Box\"](ret.size);\t\n\t\tthis.parsingMdat = box;\n\t\tthis.boxes.push(box);\n\t\tthis.mdats.push(box);\t\t\t\n\t\tbox.start = ret.start;\n\t\tbox.hdr_size = ret.hdr_size;\n\t\tthis.stream.addUsedBytes(box.hdr_size);\n\n\t\t/* indicate that the parsing should start from the end of the box */\n\t\tthis.lastBoxStartPosition = box.start + box.size;\n \t\t/* let's see if we have the end of the box in the other buffers */\n\t\tfound = this.stream.seek(box.start + box.size, false, this.discardMdatData);\n\t\tif (found) {\n\t\t\t/* found the end of the box */\n\t\t\tthis.parsingMdat = null;\n\t\t\t/* let's see if we can parse more in this buffer */\n\t\t\treturn true;\n\t\t} else {\n\t\t\t/* 'mdat' end not found in the existing buffers */\n\t\t\t/* determine the next position in the file to start parsing from */\n\t\t\tif (!this.moovStartFound) {\n\t\t\t\t/* moov not find yet, \n\t\t\t\t   the file probably has 'mdat' at the beginning, and 'moov' at the end, \n\t\t\t\t   indicate that the downloader should not try to download those bytes now */\n\t\t\t\tthis.nextParsePosition = box.start + box.size;\n\t\t\t} else {\n\t\t\t\t/* we have the start of the moov box, \n\t\t\t\t   the next bytes should try to complete the current 'mdat' */\n\t\t\t\tthis.nextParsePosition = this.stream.findEndContiguousBuf();\n\t\t\t}\n\t\t\t/* not much we can do, wait for more buffers to arrive */\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t/* box is incomplete, we may not even know its type */\n\t\tif (ret.type === \"moov\") { \n\t\t\t/* the incomplete box is a 'moov' box */\n\t\t\tthis.moovStartFound = true;\n\t\t\tif (this.mdats.length === 0) {\n\t\t\t\tthis.isProgressive = true;\n\t\t\t}\n\t\t}\n\t\t/* either it's not an mdat box (and we need to parse it, we cannot skip it)\n\t\t   (TODO: we could skip 'free' boxes ...)\n\t\t\t   or we did not have enough data to parse the type and size of the box, \n\t\t   we try to concatenate the current buffer with the next buffer to restart parsing */\n\t\tmerged = (this.stream.mergeNextBuffer ? this.stream.mergeNextBuffer() : false);\n\t\tif (merged) {\n\t\t\t/* The next buffer was contiguous, the merging succeeded,\n\t\t\t   we can now continue parsing, \n\t\t\t   the next best position to parse is at the end of this new buffer */\n\t\t\tthis.nextParsePosition = this.stream.getEndPosition();\n\t\t\treturn true;\n\t\t} else {\n\t\t\t/* we cannot concatenate existing buffers because they are not contiguous or because there is no additional buffer */\n\t\t\t/* The next best position to parse is still at the end of this old buffer */\n\t\t\tif (!ret.type) {\n\t\t\t\t/* There were not enough bytes in the buffer to parse the box type and length,\n\t\t\t\t   the next fetch should retrieve those missing bytes, i.e. the next bytes after this buffer */\n\t\t\t\tthis.nextParsePosition = this.stream.getEndPosition();\n\t\t\t} else {\n\t\t\t\t/* we had enough bytes to parse size and type of the incomplete box\n\t\t\t\t   if we haven't found yet the moov box, skip this one and try the next one \n\t\t\t\t   if we have found the moov box, let's continue linear parsing */\n\t\t\t\tif (this.moovStartFound) {\n\t\t\t\t\tthis.nextParsePosition = this.stream.getEndPosition();\n\t\t\t\t} else {\n\t\t\t\t\tthis.nextParsePosition = this.stream.getPosition() + ret.size;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nISOFile.prototype.hasIncompleteMdat = function () {\n\treturn (this.parsingMdat !== null);\n}\n\nISOFile.prototype.processIncompleteMdat = function () {\n\tvar box;\n\tvar found;\n\t\n\t/* we are in the parsing of an incomplete mdat box */\n\tbox = this.parsingMdat;\n\n\tfound = this.stream.seek(box.start + box.size, false, this.discardMdatData);\n\tif (found) {\n\t\tLog.debug(\"ISOFile\", \"Found 'mdat' end in buffered data\");\n\t\t/* the end of the mdat has been found */ \n\t\tthis.parsingMdat = null;\n\t\t/* we can parse more in this buffer */\n\t\treturn true;\n\t} else {\n\t\t/* we don't have the end of this mdat yet, \n\t\t   indicate that the next byte to fetch is the end of the buffers we have so far, \n\t\t   return and wait for more buffer to come */\n\t\tthis.nextParsePosition = this.stream.findEndContiguousBuf();\n\t\treturn false;\n\t}\n}\n\nISOFile.prototype.restoreParsePosition = function() {\n\t/* Reposition at the start position of the previous box not entirely parsed */\n\treturn this.stream.seek(this.lastBoxStartPosition, true, this.discardMdatData);\n}\n\nISOFile.prototype.saveParsePosition = function() {\n\t/* remember the position of the box start in case we need to roll back (if the box is incomplete) */\n\tthis.lastBoxStartPosition = this.stream.getPosition();\t\n}\n\nISOFile.prototype.updateUsedBytes = function(box, ret) {\n\tif (this.stream.addUsedBytes) {\n\t\tif (box.type === \"mdat\") {\n\t\t\t/* for an mdat box, only its header is considered used, other bytes will be used when sample data is requested */\n\t\t\tthis.stream.addUsedBytes(box.hdr_size);\n\t\t\tif (this.discardMdatData) {\n\t\t\t\tthis.stream.addUsedBytes(box.size-box.hdr_size);\n\t\t\t}\n\t\t} else {\n\t\t\t/* for all other boxes, the entire box data is considered used */\n\t\t\tthis.stream.addUsedBytes(box.size);\n\t\t}\t\n\t}\n}\n// file:src/isofile-advanced-creation.js\nISOFile.prototype.add = BoxParser.Box.prototype.add;\nISOFile.prototype.addBox = BoxParser.Box.prototype.addBox;\n\nISOFile.prototype.init = function (_options) {\n\tvar options = _options || {}; \n\tvar ftyp = this.add(\"ftyp\").set(\"major_brand\", (options.brands && options.brands[0]) || \"iso4\")\n\t\t\t\t\t\t\t   .set(\"minor_version\", 0)\n\t\t\t\t\t\t\t   .set(\"compatible_brands\", options.brands || [\"iso4\"]);\n\tvar moov = this.add(\"moov\");\n\tmoov.add(\"mvhd\").set(\"timescale\", options.timescale || 600)\n\t\t\t\t\t.set(\"rate\", options.rate || 1<<16)\n\t\t\t\t\t.set(\"creation_time\", 0)\n\t\t\t\t\t.set(\"modification_time\", 0)\n\t\t\t\t\t.set(\"duration\", options.duration || 0)\n\t\t\t\t\t.set(\"volume\", (options.width) ? 0 : 0x0100)\n\t\t\t\t\t.set(\"matrix\", [ 1<<16, 0, 0, 0, 1<<16, 0, 0, 0, 0x40000000])\n\t\t\t\t\t.set(\"next_track_id\", 1);\n\tmoov.add(\"mvex\");\n\treturn this;\n}\n\nISOFile.prototype.addTrack = function (_options) {\n\tif (!this.moov) {\n\t\tthis.init(_options);\n\t}\n\n\tvar options = _options || {}; \n\toptions.width = options.width || 320;\n\toptions.height = options.height || 320;\n\toptions.id = options.id || this.moov.mvhd.next_track_id;\n\toptions.type = options.type || \"avc1\";\n\n\tvar trak = this.moov.add(\"trak\");\n\tthis.moov.mvhd.next_track_id = options.id+1;\n\ttrak.add(\"tkhd\").set(\"flags\",BoxParser.TKHD_FLAG_ENABLED | \n\t\t\t\t\t\t\t\t BoxParser.TKHD_FLAG_IN_MOVIE | \n\t\t\t\t\t\t\t\t BoxParser.TKHD_FLAG_IN_PREVIEW)\n\t\t\t\t\t.set(\"creation_time\",0)\n\t\t\t\t\t.set(\"modification_time\", 0)\n\t\t\t\t\t.set(\"track_id\", options.id)\n\t\t\t\t\t.set(\"duration\", options.duration || 0)\n\t\t\t\t\t.set(\"layer\", options.layer || 0)\n\t\t\t\t\t.set(\"alternate_group\", 0)\n\t\t\t\t\t.set(\"volume\", 1)\n\t\t\t\t\t.set(\"matrix\", [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ])\n\t\t\t\t\t.set(\"width\", options.width << 16)\n\t\t\t\t\t.set(\"height\", options.height << 16);\n\n\tvar mdia = trak.add(\"mdia\");\n\tmdia.add(\"mdhd\").set(\"creation_time\", 0)\n\t\t\t\t\t.set(\"modification_time\", 0)\n\t\t\t\t\t.set(\"timescale\", options.timescale || 1)\n\t\t\t\t\t.set(\"duration\", options.media_duration || 0)\n\t\t\t\t\t.set(\"language\", options.language || \"und\");\n\n\tmdia.add(\"hdlr\").set(\"handler\", options.hdlr || \"vide\")\n\t\t\t\t\t.set(\"name\", options.name || \"Track created with MP4Box.js\");\n\n\tmdia.add(\"elng\").set(\"extended_language\", options.language || \"fr-FR\");\n\n\tvar minf = mdia.add(\"minf\");\n\tif (BoxParser[options.type+\"SampleEntry\"] === undefined) return;\n\tvar sample_description_entry = new BoxParser[options.type+\"SampleEntry\"]();\n\tsample_description_entry.data_reference_index = 1;\n\tvar media_type = \"\";\n\tfor (var mediaType in BoxParser.sampleEntryCodes) {\n\t\tvar codes = BoxParser.sampleEntryCodes[mediaType];\n\t\tfor (var i = 0; i < codes.length; i++) {\n\t\t\tif (codes.indexOf(options.type) > -1) {\n\t\t\t\tmedia_type = mediaType;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tswitch(media_type) {\n\t\tcase \"Visual\":\n\t\t\tminf.add(\"vmhd\").set(\"graphicsmode\",0).set(\"opcolor\", [ 0, 0, 0 ]);\n\t\t\tsample_description_entry.set(\"width\", options.width)\n\t\t\t\t\t\t.set(\"height\", options.height)\n\t\t\t\t\t\t.set(\"horizresolution\", 0x48<<16)\n\t\t\t\t\t\t.set(\"vertresolution\", 0x48<<16)\n\t\t\t\t\t\t.set(\"frame_count\", 1)\n\t\t\t\t\t\t.set(\"compressorname\", options.type+\" Compressor\")\n\t\t\t\t\t\t.set(\"depth\", 0x18);\n\t\t\tif (options.avcDecoderConfigRecord) {\n\t\t\t\tvar avcC = new BoxParser.avcCBox();\n\t\t\t\tvar stream = new MP4BoxStream(options.avcDecoderConfigRecord);\n\t\t\t\tavcC.parse(stream);\n\t\t\t\tsample_description_entry.addBox(avcC);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"Audio\":\n\t\t\tminf.add(\"smhd\").set(\"balance\", options.balance || 0);\n\t\t\tsample_description_entry.set(\"channel_count\", options.channel_count || 2)\n\t\t\t\t\t\t.set(\"samplesize\", options.samplesize || 16)\n\t\t\t\t\t\t.set(\"samplerate\", options.samplerate || 1<<16);\n\t\t\tbreak;\n\t\tcase \"Hint\":\n\t\t\tminf.add(\"hmhd\"); // TODO: add properties\n\t\t\tbreak;\n\t\tcase \"Subtitle\":\n\t\t\tminf.add(\"sthd\");\n\t\t\tswitch (options.type) {\n\t\t\t\tcase \"stpp\":\n\t\t\t\t\tsample_description_entry.set(\"namespace\", options.namespace || \"nonamespace\")\n\t\t\t\t\t\t\t\t.set(\"schema_location\", options.schema_location || \"\")\n\t\t\t\t\t\t\t\t.set(\"auxiliary_mime_types\", options.auxiliary_mime_types || \"\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"Metadata\":\n\t\t\tminf.add(\"nmhd\");\n\t\t\tbreak;\n\t\tcase \"System\":\n\t\t\tminf.add(\"nmhd\");\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tminf.add(\"nmhd\");\n\t\t\tbreak;\n\t}\n\tif (options.description) {\n\t\tsample_description_entry.addBox(options.description);\n\t}\n\tif (options.description_boxes) {\n\t\toptions.description_boxes.forEach(function (b) {\n\t\t\tsample_description_entry.addBox(b);\n\t\t});\n\t}\n\tminf.add(\"dinf\").add(\"dref\").addEntry((new BoxParser[\"url Box\"]()).set(\"flags\", 0x1));\n\tvar stbl = minf.add(\"stbl\");\n\tstbl.add(\"stsd\").addEntry(sample_description_entry);\n\tstbl.add(\"stts\").set(\"sample_counts\", [])\n\t\t\t\t\t.set(\"sample_deltas\", []);\n\tstbl.add(\"stsc\").set(\"first_chunk\", [])\n\t\t\t\t\t.set(\"samples_per_chunk\", [])\n\t\t\t\t\t.set(\"sample_description_index\", []);\n\tstbl.add(\"stco\").set(\"chunk_offsets\", []);\n\tstbl.add(\"stsz\").set(\"sample_sizes\", []);\n\n\tthis.moov.mvex.add(\"trex\").set(\"track_id\", options.id)\n\t\t\t\t\t\t\t  .set(\"default_sample_description_index\", options.default_sample_description_index || 1)\n\t\t\t\t\t\t\t  .set(\"default_sample_duration\", options.default_sample_duration || 0)\n\t\t\t\t\t\t\t  .set(\"default_sample_size\", options.default_sample_size || 0)\n\t\t\t\t\t\t\t  .set(\"default_sample_flags\", options.default_sample_flags || 0);\n\tthis.buildTrakSampleLists(trak);\n\treturn options.id;\n}\n\nBoxParser.Box.prototype.computeSize = function(stream_) {\n\tvar stream = stream_ || new DataStream();\n\tstream.endianness = DataStream.BIG_ENDIAN;\n\tthis.write(stream);\n}\n\nISOFile.prototype.addSample = function (track_id, data, _options) {\n\tvar options = _options || {};\n\tvar sample = {};\n\tvar trak = this.getTrackById(track_id);\n\tif (trak === null) return;\n    sample.number = trak.samples.length;\n\tsample.track_id = trak.tkhd.track_id;\n\tsample.timescale = trak.mdia.mdhd.timescale;\n\tsample.description_index = (options.sample_description_index ? options.sample_description_index - 1: 0);\n\tsample.description = trak.mdia.minf.stbl.stsd.entries[sample.description_index];\n\tsample.data = data;\n\tsample.size = data.byteLength;\n\tsample.alreadyRead = sample.size;\n\tsample.duration = options.duration || 1;\n\tsample.cts = options.cts || 0;\n\tsample.dts = options.dts || 0;\n\tsample.is_sync = options.is_sync || false;\n\tsample.is_leading = options.is_leading || 0;\n\tsample.depends_on = options.depends_on || 0;\n\tsample.is_depended_on = options.is_depended_on || 0;\n\tsample.has_redundancy = options.has_redundancy || 0;\n\tsample.degradation_priority = options.degradation_priority || 0;\n\tsample.offset = 0;\n\tsample.subsamples = options.subsamples;\n\ttrak.samples.push(sample);\n\ttrak.samples_size += sample.size;\n\ttrak.samples_duration += sample.duration;\n\tif (!trak.first_dts) {\n\t\ttrak.first_dts = options.dts;\n\t}\n\n\tthis.processSamples();\n\t\n\tvar moof = this.createSingleSampleMoof(sample);\n\tthis.addBox(moof);\n\tmoof.computeSize();\n\t/* adjusting the data_offset now that the moof size is known*/\n\tmoof.trafs[0].truns[0].data_offset = moof.size+8; //8 is mdat header\n\tthis.add(\"mdat\").data = new Uint8Array(data);\n\treturn sample;\n}\n\nISOFile.prototype.createSingleSampleMoof = function(sample) {\n\tvar sample_flags = 0;\n\tif (sample.is_sync)\n\t\tsample_flags = (1 << 25);  // sample_depends_on_none (I picture)\n\telse\n\t\tsample_flags = (1 << 16);  // non-sync\n\n\tvar moof = new BoxParser.moofBox();\n\tmoof.add(\"mfhd\").set(\"sequence_number\", this.nextMoofNumber);\n\tthis.nextMoofNumber++;\n\tvar traf = moof.add(\"traf\");\n\tvar trak = this.getTrackById(sample.track_id);\n\ttraf.add(\"tfhd\").set(\"track_id\", sample.track_id)\n\t\t\t\t\t.set(\"flags\", BoxParser.TFHD_FLAG_DEFAULT_BASE_IS_MOOF);\n\ttraf.add(\"tfdt\").set(\"baseMediaDecodeTime\", (sample.dts - (trak.first_dts || 0)));\n\ttraf.add(\"trun\").set(\"flags\", BoxParser.TRUN_FLAGS_DATA_OFFSET | BoxParser.TRUN_FLAGS_DURATION | \n\t\t\t\t \t\t\t\t  BoxParser.TRUN_FLAGS_SIZE | BoxParser.TRUN_FLAGS_FLAGS | \n\t\t\t\t \t\t\t\t  BoxParser.TRUN_FLAGS_CTS_OFFSET)\n\t\t\t\t\t.set(\"data_offset\",0)\n\t\t\t\t\t.set(\"first_sample_flags\",0)\n\t\t\t\t\t.set(\"sample_count\",1)\n\t\t\t\t\t.set(\"sample_duration\",[sample.duration])\n\t\t\t\t\t.set(\"sample_size\",[sample.size])\n\t\t\t\t\t.set(\"sample_flags\",[sample_flags])\n\t\t\t\t\t.set(\"sample_composition_time_offset\", [sample.cts - sample.dts]);\n\treturn moof;\n}\n\n// file:src/isofile-sample-processing.js\n/* Index of the last moof box received */\nISOFile.prototype.lastMoofIndex = 0;\n\n/* size of the buffers allocated for samples */\nISOFile.prototype.samplesDataSize = 0;\n\n/* Resets all sample tables */\nISOFile.prototype.resetTables = function () {\n\tvar i;\n\tvar trak, stco, stsc, stsz, stts, ctts, stss;\n\tthis.initial_duration = this.moov.mvhd.duration;\n\tthis.moov.mvhd.duration = 0;\n\tfor (i = 0; i < this.moov.traks.length; i++) {\n\t\ttrak = this.moov.traks[i];\n\t\ttrak.tkhd.duration = 0;\n\t\ttrak.mdia.mdhd.duration = 0;\n\t\tstco = trak.mdia.minf.stbl.stco || trak.mdia.minf.stbl.co64;\n\t\tstco.chunk_offsets = [];\n\t\tstsc = trak.mdia.minf.stbl.stsc;\n\t\tstsc.first_chunk = [];\n\t\tstsc.samples_per_chunk = [];\n\t\tstsc.sample_description_index = [];\n\t\tstsz = trak.mdia.minf.stbl.stsz || trak.mdia.minf.stbl.stz2;\n\t\tstsz.sample_sizes = [];\n\t\tstts = trak.mdia.minf.stbl.stts;\n\t\tstts.sample_counts = [];\n\t\tstts.sample_deltas = [];\n\t\tctts = trak.mdia.minf.stbl.ctts;\n\t\tif (ctts) {\n\t\t\tctts.sample_counts = [];\n\t\t\tctts.sample_offsets = [];\n\t\t}\n\t\tstss = trak.mdia.minf.stbl.stss;\n\t\tvar k = trak.mdia.minf.stbl.boxes.indexOf(stss);\n\t\tif (k != -1) trak.mdia.minf.stbl.boxes[k] = null;\n\t}\n}\n\nISOFile.initSampleGroups = function(trak, traf, sbgps, trak_sgpds, traf_sgpds) {\n\tvar l;\n\tvar k;\n\tvar sample_groups_info;\n\tvar sample_group_info;\n\tvar sample_group_key;\n\tfunction SampleGroupInfo(_type, _parameter, _sbgp) {\n\t\tthis.grouping_type = _type;\n\t\tthis.grouping_type_parameter = _parameter;\n\t\tthis.sbgp = _sbgp;\n\t\tthis.last_sample_in_run = -1;\n\t\tthis.entry_index = -1;\t\t\n\t}\n\tif (traf) {\n\t\ttraf.sample_groups_info = [];\n\t} \n\tif (!trak.sample_groups_info) {\n\t\ttrak.sample_groups_info = [];\n\t}\n\tfor (k = 0; k < sbgps.length; k++) {\n\t\tsample_group_key = sbgps[k].grouping_type +\"/\"+ sbgps[k].grouping_type_parameter;\n\t\tsample_group_info = new SampleGroupInfo(sbgps[k].grouping_type, sbgps[k].grouping_type_parameter, sbgps[k]);\n\t\tif (traf) {\n\t\t\ttraf.sample_groups_info[sample_group_key] = sample_group_info;\n\t\t}\n\t\tif (!trak.sample_groups_info[sample_group_key]) {\n\t\t\ttrak.sample_groups_info[sample_group_key] = sample_group_info;\n\t\t}\n\t\tfor (l=0; l <trak_sgpds.length; l++) {\n\t\t\tif (trak_sgpds[l].grouping_type === sbgps[k].grouping_type) {\n\t\t\t\tsample_group_info.description = trak_sgpds[l];\n\t\t\t\tsample_group_info.description.used = true;\n\t\t\t}\n\t\t}\n\t\tif (traf_sgpds) {\n\t\t\tfor (l=0; l <traf_sgpds.length; l++) {\n\t\t\t\tif (traf_sgpds[l].grouping_type === sbgps[k].grouping_type) {\n\t\t\t\t\tsample_group_info.fragment_description = traf_sgpds[l];\n\t\t\t\t\tsample_group_info.fragment_description.used = true;\n\t\t\t\t\tsample_group_info.is_fragment = true;\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\tif (!traf) {\n\t\tfor (k = 0; k < trak_sgpds.length; k++) {\n\t\t\tif (!trak_sgpds[k].used && trak_sgpds[k].version >= 2) {\n\t\t\t\tsample_group_key = trak_sgpds[k].grouping_type +\"/0\";\n\t\t\t\tsample_group_info = new SampleGroupInfo(trak_sgpds[k].grouping_type, 0);\n\t\t\t\tif (!trak.sample_groups_info[sample_group_key]) {\n\t\t\t\t\ttrak.sample_groups_info[sample_group_key] = sample_group_info;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (traf_sgpds) {\n\t\t\tfor (k = 0; k < traf_sgpds.length; k++) {\n\t\t\t\tif (!traf_sgpds[k].used && traf_sgpds[k].version >= 2) {\n\t\t\t\t\tsample_group_key = traf_sgpds[k].grouping_type +\"/0\";\n\t\t\t\t\tsample_group_info = new SampleGroupInfo(traf_sgpds[k].grouping_type, 0);\n\t\t\t\t\tsample_group_info.is_fragment = true;\n\t\t\t\t\tif (!traf.sample_groups_info[sample_group_key]) {\n\t\t\t\t\t\ttraf.sample_groups_info[sample_group_key] = sample_group_info;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nISOFile.setSampleGroupProperties = function(trak, sample, sample_number, sample_groups_info) {\n\tvar k;\n\tvar index;\n\tsample.sample_groups = [];\n\tfor (k in sample_groups_info) {\n\t\tsample.sample_groups[k] = {};\n\t\tsample.sample_groups[k].grouping_type = sample_groups_info[k].grouping_type;\n\t\tsample.sample_groups[k].grouping_type_parameter = sample_groups_info[k].grouping_type_parameter;\n\t\tif (sample_number >= sample_groups_info[k].last_sample_in_run) {\n\t\t\tif (sample_groups_info[k].last_sample_in_run < 0) {\n\t\t\t\tsample_groups_info[k].last_sample_in_run = 0;\n\t\t\t}\n\t\t\tsample_groups_info[k].entry_index++;\t\n\t\t\tif (sample_groups_info[k].entry_index <= sample_groups_info[k].sbgp.entries.length - 1) {\n\t\t\t\tsample_groups_info[k].last_sample_in_run += sample_groups_info[k].sbgp.entries[sample_groups_info[k].entry_index].sample_count;\n\t\t\t}\n\t\t}\n\t\tif (sample_groups_info[k].entry_index <= sample_groups_info[k].sbgp.entries.length - 1) {\n\t\t\tsample.sample_groups[k].group_description_index = sample_groups_info[k].sbgp.entries[sample_groups_info[k].entry_index].group_description_index;\n\t\t} else {\n\t\t\tsample.sample_groups[k].group_description_index = -1; // special value for not defined\n\t\t}\n\t\tif (sample.sample_groups[k].group_description_index !== 0) {\n\t\t\tvar description;\n\t\t\tif (sample_groups_info[k].fragment_description) {\n\t\t\t\tdescription = sample_groups_info[k].fragment_description;\n\t\t\t} else {\n\t\t\t\tdescription = sample_groups_info[k].description;\n\t\t\t}\n\t\t\tif (sample.sample_groups[k].group_description_index > 0) {\n\t\t\t\tif (sample.sample_groups[k].group_description_index > 65535) {\n\t\t\t\t\tindex = (sample.sample_groups[k].group_description_index >> 16)-1;\n\t\t\t\t} else {\n\t\t\t\t\tindex = sample.sample_groups[k].group_description_index-1;\n\t\t\t\t}\n\t\t\t\tif (description && index >= 0) {\n\t\t\t\t\tsample.sample_groups[k].description = description.entries[index];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (description && description.version >= 2) {\n\t\t\t\t\tif (description.default_group_description_index > 0) {\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tsample.sample_groups[k].description = description.entries[description.default_group_description_index-1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nISOFile.process_sdtp = function (sdtp, sample, number) {\n\tif (!sample) {\n\t\treturn;\n\t}\n\tif (sdtp) {\n\t\tsample.is_leading = sdtp.is_leading[number];\n\t\tsample.depends_on = sdtp.sample_depends_on[number];\n\t\tsample.is_depended_on = sdtp.sample_is_depended_on[number];\n\t\tsample.has_redundancy = sdtp.sample_has_redundancy[number];\n\t} else {\n\t\tsample.is_leading = 0;\n\t\tsample.depends_on = 0;\n\t\tsample.is_depended_on = 0\n\t\tsample.has_redundancy = 0;\n\t}\t\n}\n\n/* Build initial sample list from  sample tables */\nISOFile.prototype.buildSampleLists = function() {\t\n\tvar i;\n\tvar trak;\n\tfor (i = 0; i < this.moov.traks.length; i++) {\n\t\ttrak = this.moov.traks[i];\n\t\tthis.buildTrakSampleLists(trak);\n\t}\n}\n\nISOFile.prototype.buildTrakSampleLists = function(trak) {\t\n\tvar j, k;\n\tvar stco, stsc, stsz, stts, ctts, stss, stsd, subs, sbgps, sgpds, stdp;\n\tvar chunk_run_index, chunk_index, last_chunk_in_run, offset_in_chunk, last_sample_in_chunk;\n\tvar last_sample_in_stts_run, stts_run_index, last_sample_in_ctts_run, ctts_run_index, last_stss_index, last_subs_index, subs_entry_index, last_subs_sample_index;\n\n\ttrak.samples = [];\n\ttrak.samples_duration = 0;\n\ttrak.samples_size = 0;\n\tstco = trak.mdia.minf.stbl.stco || trak.mdia.minf.stbl.co64;\n\tstsc = trak.mdia.minf.stbl.stsc;\n\tstsz = trak.mdia.minf.stbl.stsz || trak.mdia.minf.stbl.stz2;\n\tstts = trak.mdia.minf.stbl.stts;\n\tctts = trak.mdia.minf.stbl.ctts;\n\tstss = trak.mdia.minf.stbl.stss;\n\tstsd = trak.mdia.minf.stbl.stsd;\n\tsubs = trak.mdia.minf.stbl.subs;\n\tstdp = trak.mdia.minf.stbl.stdp;\n\tsbgps = trak.mdia.minf.stbl.sbgps;\n\tsgpds = trak.mdia.minf.stbl.sgpds;\n\t\n\tlast_sample_in_stts_run = -1;\n\tstts_run_index = -1;\n\tlast_sample_in_ctts_run = -1;\n\tctts_run_index = -1;\n\tlast_stss_index = 0;\n\tsubs_entry_index = 0;\n\tlast_subs_sample_index = 0;\t\t\n\n\tISOFile.initSampleGroups(trak, null, sbgps, sgpds);\n\n\tif (typeof stsz === \"undefined\") {\n\t\treturn;\n\t}\n\n\t/* we build the samples one by one and compute their properties */\n\tfor (j = 0; j < stsz.sample_sizes.length; j++) {\n\t\tvar sample = {};\n\t\tsample.number = j;\n\t\tsample.track_id = trak.tkhd.track_id;\n\t\tsample.timescale = trak.mdia.mdhd.timescale;\n\t\tsample.alreadyRead = 0;\n\t\ttrak.samples[j] = sample;\n\t\t/* size can be known directly */\n\t\tsample.size = stsz.sample_sizes[j];\n\t\ttrak.samples_size += sample.size;\n\t\t/* computing chunk-based properties (offset, sample description index)*/\n\t\tif (j === 0) {\t\t\t\t\n\t\t\tchunk_index = 1; /* the first sample is in the first chunk (chunk indexes are 1-based) */\n\t\t\tchunk_run_index = 0; /* the first chunk is the first entry in the first_chunk table */\n\t\t\tsample.chunk_index = chunk_index;\n\t\t\tsample.chunk_run_index = chunk_run_index;\n\t\t\tlast_sample_in_chunk = stsc.samples_per_chunk[chunk_run_index];\n\t\t\toffset_in_chunk = 0;\n\n\t\t\t/* Is there another entry in the first_chunk table ? */\n\t\t\tif (chunk_run_index + 1 < stsc.first_chunk.length) {\n\t\t\t\t/* The last chunk in the run is the chunk before the next first chunk */\n\t\t\t\tlast_chunk_in_run = stsc.first_chunk[chunk_run_index+1]-1; \t\n\t\t\t} else {\n\t\t\t\t/* There is only one entry in the table, it is valid for all future chunks*/\n\t\t\t\tlast_chunk_in_run = Infinity;\n\t\t\t}\n\t\t} else {\n\t\t\tif (j < last_sample_in_chunk) {\n\t\t\t\t/* the sample is still in the current chunk */\n\t\t\t\tsample.chunk_index = chunk_index;\n\t\t\t\tsample.chunk_run_index = chunk_run_index;\n\t\t\t} else {\n\t\t\t\t/* the sample is in the next chunk */\n\t\t\t\tchunk_index++;\n\t\t\t\tsample.chunk_index = chunk_index;\n\t\t\t\t/* reset the accumulated offset in the chunk */\n\t\t\t\toffset_in_chunk = 0;\n\t\t\t\tif (chunk_index <= last_chunk_in_run) {\n\t\t\t\t\t/* stay in the same entry of the first_chunk table */\n\t\t\t\t\t/* chunk_run_index unmodified */\n\t\t\t\t} else {\n\t\t\t\t\tchunk_run_index++;\n\t\t\t\t\t/* Is there another entry in the first_chunk table ? */\n\t\t\t\t\tif (chunk_run_index + 1 < stsc.first_chunk.length) {\n\t\t\t\t\t\t/* The last chunk in the run is the chunk before the next first chunk */\n\t\t\t\t\t\tlast_chunk_in_run = stsc.first_chunk[chunk_run_index+1]-1; \t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* There is only one entry in the table, it is valid for all future chunks*/\n\t\t\t\t\t\tlast_chunk_in_run = Infinity;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tsample.chunk_run_index = chunk_run_index;\n\t\t\t\tlast_sample_in_chunk += stsc.samples_per_chunk[chunk_run_index];\n\t\t\t}\n\t\t}\n\n\t\tsample.description_index = stsc.sample_description_index[sample.chunk_run_index]-1;\n\t\tsample.description = stsd.entries[sample.description_index];\n\t\tsample.offset = stco.chunk_offsets[sample.chunk_index-1] + offset_in_chunk; /* chunk indexes are 1-based */\n\t\toffset_in_chunk += sample.size;\n\n\t\t/* setting dts, cts, duration and rap flags */\n\t\tif (j > last_sample_in_stts_run) {\n\t\t\tstts_run_index++;\n\t\t\tif (last_sample_in_stts_run < 0) {\n\t\t\t\tlast_sample_in_stts_run = 0;\n\t\t\t}\n\t\t\tlast_sample_in_stts_run += stts.sample_counts[stts_run_index];\t\t\t\t\n\t\t}\n\t\tif (j > 0) {\n\t\t\ttrak.samples[j-1].duration = stts.sample_deltas[stts_run_index];\n\t\t\ttrak.samples_duration += trak.samples[j-1].duration;\n\t\t\tsample.dts = trak.samples[j-1].dts + trak.samples[j-1].duration;\n\t\t} else {\n\t\t\tsample.dts = 0;\n\t\t}\n\t\tif (ctts) {\n\t\t\tif (j >= last_sample_in_ctts_run) {\n\t\t\t\tctts_run_index++;\n\t\t\t\tif (last_sample_in_ctts_run < 0) {\n\t\t\t\t\tlast_sample_in_ctts_run = 0;\n\t\t\t\t}\n\t\t\t\tlast_sample_in_ctts_run += ctts.sample_counts[ctts_run_index];\t\t\t\t\n\t\t\t}\n\t\t\tsample.cts = trak.samples[j].dts + ctts.sample_offsets[ctts_run_index];\n\t\t} else {\n\t\t\tsample.cts = sample.dts;\n\t\t}\n\t\tif (stss) {\n\t\t\tif (j == stss.sample_numbers[last_stss_index] - 1) { // sample numbers are 1-based\n\t\t\t\tsample.is_sync = true;\n\t\t\t\tlast_stss_index++;\n\t\t\t} else {\n\t\t\t\tsample.is_sync = false;\t\t\t\t\n\t\t\t\tsample.degradation_priority = 0;\n\t\t\t}\n\t\t\tif (subs) {\n\t\t\t\tif (subs.entries[subs_entry_index].sample_delta + last_subs_sample_index == j+1) {\n\t\t\t\t\tsample.subsamples = subs.entries[subs_entry_index].subsamples;\n\t\t\t\t\tlast_subs_sample_index += subs.entries[subs_entry_index].sample_delta;\n\t\t\t\t\tsubs_entry_index++;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tsample.is_sync = true;\n\t\t}\n\t\tISOFile.process_sdtp(trak.mdia.minf.stbl.sdtp, sample, sample.number);\n\t\tif (stdp) {\n\t\t\tsample.degradation_priority = stdp.priority[j];\n\t\t} else {\n\t\t\tsample.degradation_priority = 0;\n\t\t}\n\t\tif (subs) {\n\t\t\tif (subs.entries[subs_entry_index].sample_delta + last_subs_sample_index == j) {\n\t\t\t\tsample.subsamples = subs.entries[subs_entry_index].subsamples;\n\t\t\t\tlast_subs_sample_index += subs.entries[subs_entry_index].sample_delta;\n\t\t\t}\n\t\t}\n\t\tif (sbgps.length > 0 || sgpds.length > 0) {\n\t\t\tISOFile.setSampleGroupProperties(trak, sample, j, trak.sample_groups_info);\n\t\t}\n\t}\n\tif (j>0) {\n\t\ttrak.samples[j-1].duration = Math.max(trak.mdia.mdhd.duration - trak.samples[j-1].dts, 0);\n\t\ttrak.samples_duration += trak.samples[j-1].duration;\n\t}\n}\n\n/* Update sample list when new 'moof' boxes are received */\nISOFile.prototype.updateSampleLists = function() {\t\n\tvar i, j, k;\n\tvar default_sample_description_index, default_sample_duration, default_sample_size, default_sample_flags;\n\tvar last_run_position;\n\tvar box, moof, traf, trak, trex;\n\tvar sample;\n\tvar sample_flags;\n\t\n\tif (this.moov === undefined) {\n\t\treturn;\n\t}\n\t/* if the input file is fragmented and fetched in multiple downloads, we need to update the list of samples */\n\twhile (this.lastMoofIndex < this.moofs.length) {\n\t\tbox = this.moofs[this.lastMoofIndex];\n\t\tthis.lastMoofIndex++;\n\t\tif (box.type == \"moof\") {\n\t\t\tmoof = box;\n\t\t\tfor (i = 0; i < moof.trafs.length; i++) {\n\t\t\t\ttraf = moof.trafs[i];\n\t\t\t\ttrak = this.getTrackById(traf.tfhd.track_id);\n\t\t\t\ttrex = this.getTrexById(traf.tfhd.track_id);\n\t\t\t\tif (traf.tfhd.flags & BoxParser.TFHD_FLAG_SAMPLE_DESC) {\n\t\t\t\t\tdefault_sample_description_index = traf.tfhd.default_sample_description_index;\n\t\t\t\t} else {\n\t\t\t\t\tdefault_sample_description_index = (trex ? trex.default_sample_description_index: 1);\n\t\t\t\t}\n\t\t\t\tif (traf.tfhd.flags & BoxParser.TFHD_FLAG_SAMPLE_DUR) {\n\t\t\t\t\tdefault_sample_duration = traf.tfhd.default_sample_duration;\n\t\t\t\t} else {\n\t\t\t\t\tdefault_sample_duration = (trex ? trex.default_sample_duration : 0);\n\t\t\t\t}\n\t\t\t\tif (traf.tfhd.flags & BoxParser.TFHD_FLAG_SAMPLE_SIZE) {\n\t\t\t\t\tdefault_sample_size = traf.tfhd.default_sample_size;\n\t\t\t\t} else {\n\t\t\t\t\tdefault_sample_size = (trex ? trex.default_sample_size : 0);\n\t\t\t\t}\n\t\t\t\tif (traf.tfhd.flags & BoxParser.TFHD_FLAG_SAMPLE_FLAGS) {\n\t\t\t\t\tdefault_sample_flags = traf.tfhd.default_sample_flags;\n\t\t\t\t} else {\n\t\t\t\t\tdefault_sample_flags = (trex ? trex.default_sample_flags : 0);\n\t\t\t\t}\n\t\t\t\ttraf.sample_number = 0;\n\t\t\t\t/* process sample groups */\n\t\t\t\tif (traf.sbgps.length > 0) {\n\t\t\t\t\tISOFile.initSampleGroups(trak, traf, traf.sbgps, trak.mdia.minf.stbl.sgpds, traf.sgpds);\n\t\t\t\t}\n\t\t\t\tfor (j = 0; j < traf.truns.length; j++) {\n\t\t\t\t\tvar trun = traf.truns[j];\n\t\t\t\t\tfor (k = 0; k < trun.sample_count; k++) {\n\t\t\t\t\t\tsample = {};\n\t\t\t\t\t\tsample.moof_number = this.lastMoofIndex;\n\t\t\t\t\t\tsample.number_in_traf = traf.sample_number;\n\t\t\t\t\t\ttraf.sample_number++;\n\t\t\t            sample.number = trak.samples.length;\n\t\t\t\t\t\ttraf.first_sample_index = trak.samples.length;\n\t\t\t\t\t\ttrak.samples.push(sample);\n\t\t\t\t\t\tsample.track_id = trak.tkhd.track_id;\n\t\t\t\t\t\tsample.timescale = trak.mdia.mdhd.timescale;\n\t\t\t\t\t\tsample.description_index = default_sample_description_index-1;\n\t\t\t\t\t\tsample.description = trak.mdia.minf.stbl.stsd.entries[sample.description_index];\n\t\t\t\t\t\tsample.size = default_sample_size;\n\t\t\t\t\t\tif (trun.flags & BoxParser.TRUN_FLAGS_SIZE) {\n\t\t\t\t\t\t\tsample.size = trun.sample_size[k];\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttrak.samples_size += sample.size;\n\t\t\t\t\t\tsample.duration = default_sample_duration;\n\t\t\t\t\t\tif (trun.flags & BoxParser.TRUN_FLAGS_DURATION) {\n\t\t\t\t\t\t\tsample.duration = trun.sample_duration[k];\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttrak.samples_duration += sample.duration;\n\t\t\t\t\t\tif (trak.first_traf_merged || k > 0) {\n\t\t\t\t\t\t\tsample.dts = trak.samples[trak.samples.length-2].dts+trak.samples[trak.samples.length-2].duration;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (traf.tfdt) {\n\t\t\t\t\t\t\t\tsample.dts = traf.tfdt.baseMediaDecodeTime;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsample.dts = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttrak.first_traf_merged = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsample.cts = sample.dts;\n\t\t\t\t\t\tif (trun.flags & BoxParser.TRUN_FLAGS_CTS_OFFSET) {\n\t\t\t\t\t\t\tsample.cts = sample.dts + trun.sample_composition_time_offset[k];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsample_flags = default_sample_flags;\n\t\t\t\t\t\tif (trun.flags & BoxParser.TRUN_FLAGS_FLAGS) {\n\t\t\t\t\t\t\tsample_flags = trun.sample_flags[k];\n\t\t\t\t\t\t} else if (k === 0 && (trun.flags & BoxParser.TRUN_FLAGS_FIRST_FLAG)) {\n\t\t\t\t\t\t\tsample_flags = trun.first_sample_flags;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsample.is_sync = ((sample_flags >> 16 & 0x1) ? false : true);\n\t\t\t\t\t\tsample.is_leading = (sample_flags >> 26 & 0x3);\n\t\t\t\t\t\tsample.depends_on = (sample_flags >> 24 & 0x3);\n\t\t\t\t\t\tsample.is_depended_on = (sample_flags >> 22 & 0x3);\n\t\t\t\t\t\tsample.has_redundancy = (sample_flags >> 20 & 0x3);\n\t\t\t\t\t\tsample.degradation_priority = (sample_flags & 0xFFFF);\n\t\t\t\t\t\t//ISOFile.process_sdtp(traf.sdtp, sample, sample.number_in_traf);\n\t\t\t\t\t\tvar bdop = (traf.tfhd.flags & BoxParser.TFHD_FLAG_BASE_DATA_OFFSET) ? true : false;\n\t\t\t\t\t\tvar dbim = (traf.tfhd.flags & BoxParser.TFHD_FLAG_DEFAULT_BASE_IS_MOOF) ? true : false;\n\t\t\t\t\t\tvar dop = (trun.flags & BoxParser.TRUN_FLAGS_DATA_OFFSET) ? true : false;\n\t\t\t\t\t\tvar bdo = 0;\n\t\t\t\t\t\tif (!bdop) {\n\t\t\t\t\t\t\tif (!dbim) {\n\t\t\t\t\t\t\t\tif (j === 0) { // the first track in the movie fragment\n\t\t\t\t\t\t\t\t\tbdo = moof.start; // the position of the first byte of the enclosing Movie Fragment Box\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tbdo = last_run_position; // end of the data defined by the preceding *track* (irrespective of the track id) fragment in the moof\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbdo = moof.start;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbdo = traf.tfhd.base_data_offset;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === 0 && k === 0) {\n\t\t\t\t\t\t\tif (dop) {\n\t\t\t\t\t\t\t\tsample.offset = bdo + trun.data_offset; // If the data-offset is present, it is relative to the base-data-offset established in the track fragment header\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsample.offset = bdo; // the data for this run starts the base-data-offset defined by the track fragment header\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsample.offset = last_run_position; // this run starts immediately after the data of the previous run\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlast_run_position = sample.offset + sample.size;\n\t\t\t\t\t\tif (traf.sbgps.length > 0 || traf.sgpds.length > 0 ||\n\t\t\t\t\t\t\ttrak.mdia.minf.stbl.sbgps.length > 0 || trak.mdia.minf.stbl.sgpds.length > 0) {\n\t\t\t\t\t\t\tISOFile.setSampleGroupProperties(trak, sample, sample.number_in_traf, traf.sample_groups_info);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (traf.subs) {\n\t\t\t\t\ttrak.has_fragment_subsamples = true;\n\t\t\t\t\tvar sample_index = traf.first_sample_index;\n\t\t\t\t\tfor (j = 0; j < traf.subs.entries.length; j++) {\n\t\t\t\t\t\tsample_index += traf.subs.entries[j].sample_delta;\n\t\t\t\t\t\tsample = trak.samples[sample_index-1];\n\t\t\t\t\t\tsample.subsamples = traf.subs.entries[j].subsamples;\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\t\n}\n\n/* Try to get sample data for a given sample:\n   returns null if not found\n   returns the same sample if already requested\n */\nISOFile.prototype.getSample = function(trak, sampleNum) {\t\n\tvar buffer;\n\tvar sample = trak.samples[sampleNum];\n\t\n\tif (!this.moov) {\n\t\treturn null;\n\t}\n\n\tif (!sample.data) {\n\t\t/* Not yet fetched */\n\t\tsample.data = new Uint8Array(sample.size);\n\t\tsample.alreadyRead = 0;\n\t\tthis.samplesDataSize += sample.size;\n\t\tLog.debug(\"ISOFile\", \"Allocating sample #\"+sampleNum+\" on track #\"+trak.tkhd.track_id+\" of size \"+sample.size+\" (total: \"+this.samplesDataSize+\")\");\n\t} else if (sample.alreadyRead == sample.size) {\n\t\t/* Already fetched entirely */\n\t\treturn sample;\n\t}\n\n\t/* The sample has only been partially fetched, we need to check in all buffers */\n\twhile(true) {\n\t\tvar index =\tthis.stream.findPosition(true, sample.offset + sample.alreadyRead, false);\n\t\tif (index > -1) {\n\t\t\tbuffer = this.stream.buffers[index];\n\t\t\tvar lengthAfterStart = buffer.byteLength - (sample.offset + sample.alreadyRead - buffer.fileStart);\n\t\t\tif (sample.size - sample.alreadyRead <= lengthAfterStart) {\n\t\t\t\t/* the (rest of the) sample is entirely contained in this buffer */\n\n\t\t\t\tLog.debug(\"ISOFile\",\"Getting sample #\"+sampleNum+\" data (alreadyRead: \"+sample.alreadyRead+\" offset: \"+\n\t\t\t\t\t(sample.offset+sample.alreadyRead - buffer.fileStart)+\" read size: \"+(sample.size - sample.alreadyRead)+\" full size: \"+sample.size+\")\");\n\n\t\t\t\tDataStream.memcpy(sample.data.buffer, sample.alreadyRead,\n\t\t\t\t                  buffer, sample.offset+sample.alreadyRead - buffer.fileStart, sample.size - sample.alreadyRead);\n\n\t\t\t\t/* update the number of bytes used in this buffer and check if it needs to be removed */\n\t\t\t\tbuffer.usedBytes += sample.size - sample.alreadyRead;\n\t\t\t\tthis.stream.logBufferLevel();\n\n\t\t\t\tsample.alreadyRead = sample.size;\n\n\t\t\t\treturn sample;\n\t\t\t} else {\n\t\t\t\t/* the sample does not end in this buffer */\n\n\t\t\t\tif (lengthAfterStart === 0) return null;\n\n\t\t\t\tLog.debug(\"ISOFile\",\"Getting sample #\"+sampleNum+\" partial data (alreadyRead: \"+sample.alreadyRead+\" offset: \"+\n\t\t\t\t\t(sample.offset+sample.alreadyRead - buffer.fileStart)+\" read size: \"+lengthAfterStart+\" full size: \"+sample.size+\")\");\n\n\t\t\t\tDataStream.memcpy(sample.data.buffer, sample.alreadyRead,\n\t\t\t\t                  buffer, sample.offset+sample.alreadyRead - buffer.fileStart, lengthAfterStart);\n\t\t\t\tsample.alreadyRead += lengthAfterStart;\n\n\t\t\t\t/* update the number of bytes used in this buffer and check if it needs to be removed */\n\t\t\t\tbuffer.usedBytes += lengthAfterStart;\n\t\t\t\tthis.stream.logBufferLevel();\n\n\t\t\t\t/* keep looking in the next buffer */\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\n/* Release the memory used to store the data of the sample */\nISOFile.prototype.releaseSample = function(trak, sampleNum) {\t\n\tvar sample = trak.samples[sampleNum];\n\tif (sample.data) {\n\t\tthis.samplesDataSize -= sample.size;\n\t\tsample.data = null;\n\t\tsample.alreadyRead = 0;\n\t\treturn sample.size;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nISOFile.prototype.getAllocatedSampleDataSize = function() {\n\treturn this.samplesDataSize;\n}\n\n/* Builds the MIME Type 'codecs' sub-parameters for the whole file */\nISOFile.prototype.getCodecs = function() {\t\n\tvar i;\n\tvar codecs = \"\";\n\tfor (i = 0; i < this.moov.traks.length; i++) {\n\t\tvar trak = this.moov.traks[i];\n\t\tif (i>0) {\n\t\t\tcodecs+=\",\"; \n\t\t}\n\t\tcodecs += trak.mdia.minf.stbl.stsd.entries[0].getCodec();\t\t\n\t}\n\treturn codecs;\n}\n\n/* Helper function */\nISOFile.prototype.getTrexById = function(id) {\t\n\tvar i;\n\tif (!this.moov || !this.moov.mvex) return null;\n\tfor (i = 0; i < this.moov.mvex.trexs.length; i++) {\n\t\tvar trex = this.moov.mvex.trexs[i];\n\t\tif (trex.track_id == id) return trex;\n\t}\n\treturn null;\n}\n\n/* Helper function */\nISOFile.prototype.getTrackById = function(id) {\n\tif (this.moov === undefined) {\n\t\treturn null;\n\t}\n\tfor (var j = 0; j < this.moov.traks.length; j++) {\n\t\tvar trak = this.moov.traks[j];\n\t\tif (trak.tkhd.track_id == id) return trak;\n\t}\n\treturn null;\n}\n// file:src/isofile-item-processing.js\nISOFile.prototype.items = [];\n/* size of the buffers allocated for samples */\nISOFile.prototype.itemsDataSize = 0;\n\nISOFile.prototype.flattenItemInfo = function() {\t\n\tvar items = this.items;\n\tvar i, j;\n\tvar item;\n\tvar meta = this.meta;\n\tif (meta === null || meta === undefined) return;\n\tif (meta.hdlr === undefined) return;\n\tif (meta.iinf === undefined) return;\n\tfor (i = 0; i < meta.iinf.item_infos.length; i++) {\n\t\titem = {};\n\t\titem.id = meta.iinf.item_infos[i].item_ID;\n\t\titems[item.id] = item;\n\t\titem.ref_to = [];\n\t\titem.name = meta.iinf.item_infos[i].item_name;\n\t\tif (meta.iinf.item_infos[i].protection_index > 0) {\n\t\t\titem.protection = meta.ipro.protections[meta.iinf.item_infos[i].protection_index-1];\n\t\t}\n\t\tif (meta.iinf.item_infos[i].item_type) {\n\t\t\titem.type = meta.iinf.item_infos[i].item_type;\n\t\t} else {\n\t\t\titem.type = \"mime\";\n\t\t}\n\t\titem.content_type = meta.iinf.item_infos[i].content_type;\n\t\titem.content_encoding = meta.iinf.item_infos[i].content_encoding;\n\t}\n\tif (meta.iloc) {\n\t\tfor(i = 0; i < meta.iloc.items.length; i++) {\n\t\t\tvar offset;\n\t\t\tvar itemloc = meta.iloc.items[i];\n\t\t\titem = items[itemloc.item_ID];\n\t\t\tif (itemloc.data_reference_index !== 0) {\n\t\t\t\tLog.warn(\"Item storage with reference to other files: not supported\");\n\t\t\t\titem.source = meta.dinf.boxes[itemloc.data_reference_index-1];\n\t\t\t}\n\t\t\tswitch(itemloc.construction_method) {\n\t\t\t\tcase 0: // offset into the file referenced by the data reference index\n\t\t\t\tbreak;\n\t\t\t\tcase 1: // offset into the idat box of this meta box\n\t\t\t\tLog.warn(\"Item storage with construction_method : not supported\");\n\t\t\t\tbreak;\n\t\t\t\tcase 2: // offset into another item\n\t\t\t\tLog.warn(\"Item storage with construction_method : not supported\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\titem.extents = [];\n\t\t\titem.size = 0;\n\t\t\tfor (j = 0; j < itemloc.extents.length; j++) {\n\t\t\t\titem.extents[j] = {};\n\t\t\t\titem.extents[j].offset = itemloc.extents[j].extent_offset + itemloc.base_offset;\n\t\t\t\titem.extents[j].length = itemloc.extents[j].extent_length;\n\t\t\t\titem.extents[j].alreadyRead = 0;\n\t\t\t\titem.size += item.extents[j].length;\n\t\t\t}\n\t\t}\n\t}\n\tif (meta.pitm) {\n\t\titems[meta.pitm.item_id].primary = true;\n\t}\n\tif (meta.iref) {\n\t\tfor (i=0; i <meta.iref.references.length; i++) {\n\t\t\tvar ref = meta.iref.references[i];\n\t\t\tfor (j=0; j<ref.references.length; j++) {\n\t\t\t\titems[ref.from_item_ID].ref_to.push({type: ref.type, id: ref.references[j]});\n\t\t\t}\n\t\t}\n\t}\n\tif (meta.iprp) {\n\t\tfor (var k = 0; k < meta.iprp.ipmas.length; k++) {\n\t\t\tvar ipma = meta.iprp.ipmas[k];\n\t\t\tfor (i = 0; i < ipma.associations.length; i++) {\n\t\t\t\tvar association = ipma.associations[i];\n\t\t\t\titem = items[association.id];\n\t\t\t\tif (item.properties === undefined) {\n\t\t\t\t\titem.properties = {};\n\t\t\t\t\titem.properties.boxes = [];\n\t\t\t\t}\n\t\t\t\tfor (j = 0; j < association.props.length; j++) {\n\t\t\t\t\tvar propEntry = association.props[j];\n\t\t\t\t\tif (propEntry.property_index > 0 && propEntry.property_index-1 < meta.iprp.ipco.boxes.length) {\n\t\t\t\t\t\tvar propbox = meta.iprp.ipco.boxes[propEntry.property_index-1];\n\t\t\t\t\t\titem.properties[propbox.type] = propbox;\n\t\t\t\t\t\titem.properties.boxes.push(propbox);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nISOFile.prototype.getItem = function(item_id) {\t\n\tvar buffer;\n\tvar item;\n\t\n\tif (!this.meta) {\n\t\treturn null;\n\t}\n\n \titem = this.items[item_id];\n\tif (!item.data && item.size) {\n\t\t/* Not yet fetched */\n\t\titem.data = new Uint8Array(item.size);\n\t\titem.alreadyRead = 0;\n\t\tthis.itemsDataSize += item.size;\n\t\tLog.debug(\"ISOFile\", \"Allocating item #\"+item_id+\" of size \"+item.size+\" (total: \"+this.itemsDataSize+\")\");\n\t} else if (item.alreadyRead === item.size) {\n\t\t/* Already fetched entirely */\n\t\treturn item;\n\t}\n\n\t/* The item has only been partially fetched, we need to check in all buffers to find the remaining extents*/\n\n\tfor (var i = 0; i < item.extents.length; i++) {\n\t\tvar extent = item.extents[i];\n\t\tif (extent.alreadyRead === extent.length) {\n\t\t\tcontinue;\n\t\t} else {\n\t\t\tvar index =\tthis.stream.findPosition(true, extent.offset + extent.alreadyRead, false);\n\t\t\tif (index > -1) {\n\t\t\t\tbuffer = this.stream.buffers[index];\n\t\t\t\tvar lengthAfterStart = buffer.byteLength - (extent.offset + extent.alreadyRead - buffer.fileStart);\n\t\t\t\tif (extent.length - extent.alreadyRead <= lengthAfterStart) {\n\t\t\t\t\t/* the (rest of the) extent is entirely contained in this buffer */\n\n\t\t\t\t\tLog.debug(\"ISOFile\",\"Getting item #\"+item_id+\" extent #\"+i+\" data (alreadyRead: \"+extent.alreadyRead+\n\t\t\t\t\t\t\" offset: \"+(extent.offset+extent.alreadyRead - buffer.fileStart)+\" read size: \"+(extent.length - extent.alreadyRead)+\n\t\t\t\t\t\t\" full extent size: \"+extent.length+\" full item size: \"+item.size+\")\");\n\n\t\t\t\t\tDataStream.memcpy(item.data.buffer, item.alreadyRead, \n\t\t\t\t\t                  buffer, extent.offset+extent.alreadyRead - buffer.fileStart, extent.length - extent.alreadyRead);\n\n\t\t\t\t\t/* update the number of bytes used in this buffer and check if it needs to be removed */\n\t\t\t\t\tbuffer.usedBytes += extent.length - extent.alreadyRead;\n\t\t\t\t\tthis.stream.logBufferLevel();\n\n\t\t\t\t\titem.alreadyRead += (extent.length - extent.alreadyRead);\n\t\t\t\t\textent.alreadyRead = extent.length;\n\t\t\t\t} else {\n\t\t\t\t\t/* the sample does not end in this buffer */\n\n\t\t\t\t\tLog.debug(\"ISOFile\",\"Getting item #\"+item_id+\" extent #\"+i+\" partial data (alreadyRead: \"+extent.alreadyRead+\" offset: \"+\n\t\t\t\t\t\t(extent.offset+extent.alreadyRead - buffer.fileStart)+\" read size: \"+lengthAfterStart+\n\t\t\t\t\t\t\" full extent size: \"+extent.length+\" full item size: \"+item.size+\")\");\n\n\t\t\t\t\tDataStream.memcpy(item.data.buffer, item.alreadyRead, \n\t\t\t\t\t                  buffer, extent.offset+extent.alreadyRead - buffer.fileStart, lengthAfterStart);\n\t\t\t\t\textent.alreadyRead += lengthAfterStart;\n\t\t\t\t\titem.alreadyRead += lengthAfterStart;\n\n\t\t\t\t\t/* update the number of bytes used in this buffer and check if it needs to be removed */\n\t\t\t\t\tbuffer.usedBytes += lengthAfterStart;\n\t\t\t\t\tthis.stream.logBufferLevel();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\tif (item.alreadyRead === item.size) {\n\t\t/* fetched entirely */\n\t\treturn item;\n\t} else {\n\t\treturn null;\n\t}\n}\n\n/* Release the memory used to store the data of the item */\nISOFile.prototype.releaseItem = function(item_id) {\t\n\tvar item = this.items[item_id];\n\tif (item.data) {\n\t\tthis.itemsDataSize -= item.size;\n\t\titem.data = null;\n\t\titem.alreadyRead = 0;\n\t\tfor (var i = 0; i < item.extents.length; i++) {\n\t\t\tvar extent = item.extents[i];\n\t\t\textent.alreadyRead = 0;\n\t\t}\n\t\treturn item.size;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\n\nISOFile.prototype.processItems = function(callback) {\n\tfor(var i in this.items) {\n\t\tvar item = this.items[i];\n\t\tthis.getItem(item.id);\n\t\tif (callback && !item.sent) {\n\t\t\tcallback(item);\n\t\t\titem.sent = true;\n\t\t\titem.data = null;\n\t\t}\n\t}\n}\n\nISOFile.prototype.hasItem = function(name) {\n\tfor(var i in this.items) {\n\t\tvar item = this.items[i];\n\t\tif (item.name === name) {\n\t\t\treturn item.id;\n\t\t}\n\t}\n\treturn -1;\n}\n\nISOFile.prototype.getMetaHandler = function() {\n\tif (!this.meta) {\n\t\treturn null;\n\t} else {\n\t\treturn this.meta.hdlr.handler;\t\t\n\t}\n}\n\nISOFile.prototype.getPrimaryItem = function() {\n\tif (!this.meta || !this.meta.pitm) {\n\t\treturn null;\n\t} else {\n\t\treturn this.getItem(this.meta.pitm.item_id);\n\t}\n}\n\nISOFile.prototype.itemToFragmentedTrackFile = function(_options) {\n\tvar options = _options || {};\n\tvar item = null;\n\tif (options.itemId) {\n\t\titem = this.getItem(options.itemId);\n\t} else {\n\t\titem = this.getPrimaryItem();\n\t}\n\tif (item == null) return null;\n\n\tvar file = new ISOFile();\n\tfile.discardMdatData = false;\n\t// assuming the track type is the same as the item type\n\tvar trackOptions = { type: item.type, description_boxes: item.properties.boxes};\n\tif (item.properties.ispe) {\n\t\ttrackOptions.width = item.properties.ispe.image_width;\n\t\ttrackOptions.height = item.properties.ispe.image_height;\n\t}\n\tvar trackId = file.addTrack(trackOptions);\n\tif (trackId) {\n\t\tfile.addSample(trackId, item.data);\n\t\treturn file;\n\t} else {\n\t\treturn null;\n\t}\n}\n\n// file:src/isofile-write.js\n/* Rewrite the entire file */\nISOFile.prototype.write = function(outstream) {\n\tfor (var i=0; i<this.boxes.length; i++) {\n\t\tthis.boxes[i].write(outstream);\n\t}\n}\n\nISOFile.prototype.createFragment = function(track_id, sampleNumber, stream_) {\n\tvar trak = this.getTrackById(track_id);\n\tvar sample = this.getSample(trak, sampleNumber);\n\tif (sample == null) {\n\t\tsample = trak.samples[sampleNumber];\n\t\tif (this.nextSeekPosition) {\n\t\t\tthis.nextSeekPosition = Math.min(sample.offset+sample.alreadyRead,this.nextSeekPosition);\n\t\t} else {\n\t\t\tthis.nextSeekPosition = trak.samples[sampleNumber].offset+sample.alreadyRead;\n\t\t}\n\t\treturn null;\n\t}\n\t\n\tvar stream = stream_ || new DataStream();\n\tstream.endianness = DataStream.BIG_ENDIAN;\n\n\tvar moof = this.createSingleSampleMoof(sample);\n\tmoof.write(stream);\n\n\t/* adjusting the data_offset now that the moof size is known*/\n\tmoof.trafs[0].truns[0].data_offset = moof.size+8; //8 is mdat header\n\tLog.debug(\"MP4Box\", \"Adjusting data_offset with new value \"+moof.trafs[0].truns[0].data_offset);\n\tstream.adjustUint32(moof.trafs[0].truns[0].data_offset_position, moof.trafs[0].truns[0].data_offset);\n\t\t\n\tvar mdat = new BoxParser.mdatBox();\n\tmdat.data = sample.data;\n\tmdat.write(stream);\n\treturn stream;\n}\n\n/* Modify the file and create the initialization segment */\nISOFile.writeInitializationSegment = function(ftyp, moov, total_duration, sample_duration) {\n\tvar i;\n\tvar index;\n\tvar mehd;\n\tvar trex;\n\tvar box;\n\tLog.debug(\"ISOFile\", \"Generating initialization segment\");\n\n\tvar stream = new DataStream();\n\tstream.endianness = DataStream.BIG_ENDIAN;\n\tftyp.write(stream);\n\t\n\t/* we can now create the new mvex box */\n\tvar mvex = moov.add(\"mvex\");\n\tif (total_duration) {\n\t\tmvex.add(\"mehd\").set(\"fragment_duration\", total_duration);\n\t}\n\tfor (i = 0; i < moov.traks.length; i++) {\n\t\tmvex.add(\"trex\").set(\"track_id\", moov.traks[i].tkhd.track_id)\n\t\t\t\t\t\t.set(\"default_sample_description_index\", 1)\n\t\t\t\t\t\t.set(\"default_sample_duration\", sample_duration)\n\t\t\t\t\t\t.set(\"default_sample_size\", 0)\n\t\t\t\t\t\t.set(\"default_sample_flags\", 1<<16)\n\t}\n\tmoov.write(stream);\n\n\treturn stream.buffer;\n\n}\n\nISOFile.prototype.save = function(name) {\n\tvar stream = new DataStream();\n\tstream.endianness = DataStream.BIG_ENDIAN;\n\tthis.write(stream);\n\tstream.save(name);\t\n}\n\nISOFile.prototype.getBuffer = function() {\n\tvar stream = new DataStream();\n\tstream.endianness = DataStream.BIG_ENDIAN;\n\tthis.write(stream);\n\treturn stream.buffer;\n}\n\nISOFile.prototype.initializeSegmentation = function() {\n\tvar i;\n\tvar j;\n\tvar box;\n\tvar initSegs;\n\tvar trak;\n\tvar seg;\n\tif (this.onSegment === null) {\n\t\tLog.warn(\"MP4Box\", \"No segmentation callback set!\");\n\t}\n\tif (!this.isFragmentationInitialized) {\n\t\tthis.isFragmentationInitialized = true;\t\t\n\t\tthis.nextMoofNumber = 0;\n\t\tthis.resetTables();\n\t}\t\n\tinitSegs = [];\t\n\tfor (i = 0; i < this.fragmentedTracks.length; i++) {\n\t\tvar moov = new BoxParser.moovBox();\n\t\tmoov.mvhd = this.moov.mvhd;\n\t    moov.boxes.push(moov.mvhd);\n\t\ttrak = this.getTrackById(this.fragmentedTracks[i].id);\n\t\tmoov.boxes.push(trak);\n\t\tmoov.traks.push(trak);\n\t\tseg = {};\n\t\tseg.id = trak.tkhd.track_id;\n\t\tseg.user = this.fragmentedTracks[i].user;\n\t\tseg.buffer = ISOFile.writeInitializationSegment(this.ftyp, moov, (this.moov.mvex && this.moov.mvex.mehd ? this.moov.mvex.mehd.fragment_duration: undefined), (this.moov.traks[i].samples.length>0 ? this.moov.traks[i].samples[0].duration: 0));\n\t\tinitSegs.push(seg);\n\t}\n\treturn initSegs;\n}\n\n// file:src/box-print.js\n/* \n * Copyright (c) Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nBoxParser.Box.prototype.printHeader = function(output) {\n\tthis.size += 8;\n\tif (this.size > MAX_SIZE) {\n\t\tthis.size += 8;\n\t}\n\tif (this.type === \"uuid\") {\n\t\tthis.size += 16;\n\t}\n\toutput.log(output.indent+\"size:\"+this.size);\n\toutput.log(output.indent+\"type:\"+this.type);\n}\n\nBoxParser.FullBox.prototype.printHeader = function(output) {\n\tthis.size += 4;\n\tBoxParser.Box.prototype.printHeader.call(this, output);\n\toutput.log(output.indent+\"version:\"+this.version);\n\toutput.log(output.indent+\"flags:\"+this.flags);\n}\n\nBoxParser.Box.prototype.print = function(output) {\n\tthis.printHeader(output);\n}\n\nBoxParser.ContainerBox.prototype.print = function(output) {\n\tthis.printHeader(output);\n\tfor (var i=0; i<this.boxes.length; i++) {\n\t\tif (this.boxes[i]) {\n\t\t\tvar prev_indent = output.indent;\n\t\t\toutput.indent += \" \";\n\t\t\tthis.boxes[i].print(output);\n\t\t\toutput.indent = prev_indent;\n\t\t}\n\t}\n}\n\nISOFile.prototype.print = function(output) {\n\toutput.indent = \"\";\n\tfor (var i=0; i<this.boxes.length; i++) {\n\t\tif (this.boxes[i]) {\n\t\t\tthis.boxes[i].print(output);\n\t\t}\n\t}\t\n}\n\nBoxParser.mvhdBox.prototype.print = function(output) {\n\tBoxParser.FullBox.prototype.printHeader.call(this, output);\n\toutput.log(output.indent+\"creation_time: \"+this.creation_time);\n\toutput.log(output.indent+\"modification_time: \"+this.modification_time);\n\toutput.log(output.indent+\"timescale: \"+this.timescale);\n\toutput.log(output.indent+\"duration: \"+this.duration);\n\toutput.log(output.indent+\"rate: \"+this.rate);\n\toutput.log(output.indent+\"volume: \"+(this.volume>>8));\n\toutput.log(output.indent+\"matrix: \"+this.matrix.join(\", \"));\n\toutput.log(output.indent+\"next_track_id: \"+this.next_track_id);\n}\n\nBoxParser.tkhdBox.prototype.print = function(output) {\n\tBoxParser.FullBox.prototype.printHeader.call(this, output);\n\toutput.log(output.indent+\"creation_time: \"+this.creation_time);\n\toutput.log(output.indent+\"modification_time: \"+this.modification_time);\n\toutput.log(output.indent+\"track_id: \"+this.track_id);\n\toutput.log(output.indent+\"duration: \"+this.duration);\n\toutput.log(output.indent+\"volume: \"+(this.volume>>8));\n\toutput.log(output.indent+\"matrix: \"+this.matrix.join(\", \"));\n\toutput.log(output.indent+\"layer: \"+this.layer);\n\toutput.log(output.indent+\"alternate_group: \"+this.alternate_group);\n\toutput.log(output.indent+\"width: \"+this.width);\n\toutput.log(output.indent+\"height: \"+this.height);\n}// file:src/mp4box.js\n/*\n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar MP4Box = {};\n\nMP4Box.createFile = function (_keepMdatData, _stream) {\n\t/* Boolean indicating if bytes containing media data should be kept in memory */\n\tvar keepMdatData = (_keepMdatData !== undefined ? _keepMdatData : true);\n\tvar file = new ISOFile(_stream);\n\tfile.discardMdatData = (keepMdatData ? false : true);\n\treturn file;\n}\n\nif (typeof exports !== 'undefined') {\n\texports.createFile = MP4Box.createFile;\n}\n"],"names":["start","log_level","Log","Date","setLogLevel","level","this","debug","info","warn","error","module","msg","undefined","console","log","getDurationString","duration","_timescale","neg","pad","number","length","a","split","join","duration_sec","hours","Math","floor","minutes","msec","printRanges","ranges","str","i","end","exports","MP4BoxStream","arrayBuffer","ArrayBuffer","buffer","dataview","DataView","position","prototype","getPosition","getEndPosition","byteLength","getLength","seek","pos","npos","max","min","isNaN","isFinite","isEos","readAnyInt","size","signed","res","getInt8","getUint8","getInt16","getUint16","getInt32","getUint32","readUint8","readUint16","readUint24","readUint32","readUint64","readString","s","String","fromCharCode","readCString","arr","b","push","apply","readInt8","readInt16","readInt32","readInt64","readUint8Array","Uint8Array","readInt16Array","Int16Array","readUint16Array","readUint32Array","Uint32Array","readInt32Array","Int32Array","DataStream","byteOffset","endianness","_byteOffset","dataView","LITTLE_ENDIAN","_realloc","extra","_dynamicSize","req","blen","_buffer","_byteLength","buf","src","set","_trimAlloc","dst","BIG_ENDIAN","Object","defineProperty","get","v","_dataView","isEof","mapUint8Array","e","memcpy","BYTES_PER_ELEMENT","arrayToNative","readInt8Array","Int8Array","Uint16Array","readFloat64Array","Float64Array","readFloat32Array","Float32Array","readFloat32","getFloat32","readFloat64","getFloat64","dstOffset","srcOffset","dstU8","srcU8","array","arrayIsLittleEndian","flipArrayEndianness","nativeToEndian","littleEndian","u8","j","k","tmp","failurePosition","fromCharCodeUint8","uint8arr","encoding","TextDecoder","decode","len","MAX_SIZE","pow","save","filename","blob","Blob","window","URL","createObjectURL","url","document","createElement","body","appendChild","setAttribute","click","revokeObjectURL","shift","offset","writeInt32Array","mapInt32Array","writeInt32","writeInt16Array","mapInt16Array","writeInt16","writeInt8Array","mapInt8Array","writeInt8","writeUint32Array","mapUint32Array","writeUint32","writeUint16Array","mapUint16Array","writeUint16","writeUint8Array","writeUint8","writeFloat64Array","mapFloat64Array","writeFloat64","writeFloat32Array","mapFloat32Array","writeFloat32","setInt32","setInt16","setInt8","setUint32","setUint16","setUint8","setFloat32","setFloat64","writeUCS2String","lengthOverride","charCodeAt","writeString","TextEncoder","encode","substring","writeCString","writeStruct","structDefinition","struct","t","writeType","tp","Array","charset","test","parseInt","ta","writeUint64","h","writeUint24","adjustUint32","value","MultiBufferStream","buffers","bufferIndex","insertBuffer","initialized","firstBuffer","fileStart","logBufferLevel","concat","buffer1","buffer2","reduceBuffer","newLength","smallB","usedBytes","ab","to_add","splice","used","total","range","bufferedString","cleanBuffers","mergeNextBuffer","next_buffer","oldLength","oldUsedBytes","oldFileStart","findPosition","fromStart","filePosition","markAsUsed","abuffer","index","findEndContiguousBuf","inputindex","currentBuf","nextBuf","getEndFilePositionAfter","addUsedBytes","nbBytes","setAllUsedBytes","MPEG4DescriptorParser","descTagToName","getDescriptorName","tag","that","classes","parseOneDescriptor","stream","desc","byteRead","Descriptor","parse","_tag","_size","descs","data","findDescriptor","parseRemainingDescriptors","ES_Descriptor","call","ES_ID","flags","dependsOn_ES_ID","l","OCR_ES_ID","getOTI","dcd","oti","getAudioConfig","dsi","audioObjectType","DecoderConfigDescriptor","streamType","bufferSize","maxBitrate","avgBitrate","DecoderSpecificInfo","SLConfigDescriptor","BoxParser","ERR_INVALID_DATA","ERR_NOT_ENOUGH_DATA","OK","BASIC_BOXES","FULL_BOXES","CONTAINER_BOXES","boxCodes","fullBoxCodes","containerBoxCodes","sampleEntryCodes","sampleGroupEntryCodes","trackGroupTypes","UUIDBoxes","UUIDs","initialize","FullBox","Box","ContainerBox","SampleEntry","TrackGroupTypeBox","forEach","type","createBoxCtor","createFullBoxCtor","types","createContainerBoxCtor","_type","_uuid","uuid","version","boxes","hdr_size","SampleGroupEntry","grouping_type","parseMethod","parseFullHeader","addSubBoxArrays","subBoxNames","nbSubBoxes","createMediaSampleEntryCtor","mediaType","createSampleEntryCtor","createEncryptedSampleEntryCtor","createSampleGroupCtor","createTrackGroupCtor","createUUIDBox","isFullBox","isContainerBox","TKHD_FLAG_ENABLED","TKHD_FLAG_IN_MOVIE","TKHD_FLAG_IN_PREVIEW","TFHD_FLAG_BASE_DATA_OFFSET","TFHD_FLAG_SAMPLE_DESC","TFHD_FLAG_SAMPLE_DUR","TFHD_FLAG_SAMPLE_SIZE","TFHD_FLAG_SAMPLE_FLAGS","TFHD_FLAG_DUR_EMPTY","TFHD_FLAG_DEFAULT_BASE_IS_MOOF","TRUN_FLAGS_DATA_OFFSET","TRUN_FLAGS_FIRST_FLAG","TRUN_FLAGS_DURATION","TRUN_FLAGS_SIZE","TRUN_FLAGS_FLAGS","TRUN_FLAGS_CTS_OFFSET","add","name","addBox","box","prop","addEntry","_prop","parseUUID","parseHex16","hex16","hex","toString","parseOneBox","headerOnly","parentSize","diff","code","box_type","has_unparsed_data","write","parseDataAndRewind","ret","indexOf","parseLanguage","language","chars","languageString","SAMPLE_ENTRY_TYPE_VISUAL","SAMPLE_ENTRY_TYPE_AUDIO","SAMPLE_ENTRY_TYPE_HINT","SAMPLE_ENTRY_TYPE_METADATA","SAMPLE_ENTRY_TYPE_SUBTITLE","SAMPLE_ENTRY_TYPE_SYSTEM","SAMPLE_ENTRY_TYPE_TEXT","parseHeader","data_reference_index","parseFooter","compressorname_length","width","height","horizresolution","vertresolution","frame_count","compressorname","depth","channel_count","samplesize","samplerate","FieldLength","layer_size","op_index","aux_type","aux_subtype_length","aux_subtype","seq_profile","seq_level_idx_0","seq_tier_0","high_bitdepth","twelve_bit","monochrome","chroma_subsampling_x","chroma_subsampling_y","chroma_sample_position","reserved_1","initial_presentation_delay_present","initial_presentation_delay_minus_one","reserved_2","configOBUs_length","configOBUs","toparse","configurationVersion","AVCProfileIndication","profile_compatibility","AVCLevelIndication","lengthSizeMinusOne","nb_SPS_nalus","SPS","nalu","nb_PPS_nalus","PPS","ext","bufferSizeDB","cleanApertureWidthN","cleanApertureWidthD","cleanApertureHeightN","cleanApertureHeightD","horizOffN","horizOffD","vertOffN","vertOffD","max_content_light_level","max_pic_average_light_level","entry_count","chunk_offsets","maxCLL","maxFALL","colour_type","colour_primaries","transfer_characteristics","matrix_coefficients","full_range_flag","ICC_profile","notice","compositionToDTSShift","leastDecodeToDisplayDelta","greatestDecodeToDisplayDelta","compositionStartTime","compositionEndTime","sample_counts","sample_offsets","tmp_byte1","tmp_byte2","tmp_byte3","fscod","bsid","bsmod","acmod","lfeon","bit_rate_code","tmp_16","data_rate","num_ind_sub","ind_subs","ind_sub","num_dep_sub","chan_loc","boxesFound","knownBlockTypes","flagAndType","numMetadataBlocks","bytessent","time","Version","OutputChannelCount","PreSkip","InputSampleRate","OutputGain","ChannelMappingFamily","StreamCount","CoupledCount","ChannelMapping","entries","extended_language","entry","segment_duration","media_time","media_rate_integer","media_rate_fraction","timescale","presentation_time","event_duration","id","scheme_id_uri","presentation_time_delta","message_size","message_data","esd_data","esd_parser","esd","fieldCount","fieldOrdering","data_format","major_brand","minor_version","compatible_brands","handler","slice","tmp_byte","general_profile_space","general_tier_flag","general_profile_idc","general_profile_compatibility","general_constraint_indicator","general_level_idc","min_spatial_segmentation_idc","parallelismType","chroma_format_idc","bit_depth_luma_minus8","bit_depth_chroma_minus8","avgFrameRate","constantFrameRate","numTemporalLayers","temporalIdNested","nalu_arrays","numOfArrays","nalu_array","completeness","nalu_type","numNalus","item_infos","byte","offset_size","length_size","base_offset_size","index_size","items","item_count","item","item_ID","construction_method","base_offset","extent_count","extents","extent","extent_index","extent_offset","extent_length","reserved","axis","item_protection_index","item_name","content_type","content_encoding","extension_type","item_type","item_uri_type","associations","item_assoc","association_count","props","p","essential","property_index","references","SingleItemTypeReferenceBox","SingleItemTypeReferenceBoxLarge","angle","image_width","image_height","schemeURI","count","levels","track_ID","padding_flag","assignment_type","grouping_type_parameter","sub_track_id","layer_id","period","bytes","display_primaries","x","y","white_point","max_display_mastering_luminance","min_display_mastering_luminance","creation_time","modification_time","fragment_duration","sequence_number","rate","volume","matrix","next_track_id","packetssent","sample_count","padbits","hSpacing","vSpacing","text","payloadID","rtpmap_string","initial_delay","item_id","num_channels","bits_per_channels","ref_track_id","ntp_timestamp","system_id","kid","datasize","descriptionformat","sdptext","aux_info_type","aux_info_type_parameter","default_sample_info_size","sample_info_size","mime_format","namespace","schema_location","auxiliary_mime_types","displayFlags","horizontal_justification","vertical_justification","bg_color_rgba","box_record","style_record","roll_count","first_output_sample","sample_offset","remaining","description_length","num_output_samples","num_total_samples","layerNumber","accurateStatisticsFlag","avgBitRate","subSequenceIdentifier","durationFlag","avgRateFlag","dependency","numReferences","dependencyInfo","subSeqDirectionFlag","roll_distance","num_leading_samples_known","num_leading_samples","operation_point_count","target_rate_share","available_bitrate","maximum_bitrate","minimum_bitrate","discard_priority","crypt_byte_block","skip_byte_block","isProtected","Per_Sample_IV_Size","KID","constant_IV_size","constant_IV","NAL_unit_type","level_independently_decodable","group_description_index","scheme_type","scheme_version","scheme_uri","is_leading","sample_depends_on","sample_is_depended_on","sample_has_redundancy","default_length","default_group_description_index","reference_ID","earliest_presentation_time","first_offset","ref","tmp_32","reference_type","referenced_size","subsegment_duration","starts_with_SAP","SAP_type","SAP_delta_time","from_item_ID","primaryRChromaticity_x","primaryRChromaticity_y","primaryGChromaticity_x","primaryGChromaticity_y","primaryBChromaticity_x","primaryBChromaticity_y","whitePointChromaticity_x","whitePointChromaticity_y","luminanceMax","luminanceMin","balance","subsegments","subsegment_count","subsegment","range_count","range_size","priority","switch_group","alternate_group","attribute_list","first_chunk","samples_per_chunk","sample_description_index","entryCount","shadowed_sample_numbers","sync_sample_numbers","sample_numbers","sample_sizes","sample_size","delta","sample_deltas","tmp32","single_view_allowed","stereo_scheme","stereo_indication_type","ftypBox","field_size","subsample_count","sampleInfo","sample_delta","subsamples","subsample","discardable","codec_specific_parameters","default_crypt_byte_block","default_skip_byte_block","default_isProtected","default_Per_Sample_IV_Size","default_KID","default_constant_IV_size","default_constant_IV","baseMediaDecodeTime","readBytes","track_id","base_data_offset","default_sample_description_index","default_sample_duration","default_sample_size","default_sample_flags","length_size_of_traf_num","length_size_of_trun_num","length_size_of_sample_num","number_of_entries","moof_offset","traf_number","trun_number","sample_number","layer","track_group_id","TrackReferenceTypeBox","track_ids","trefBox","data_offset","first_sample_flags","sample_duration","sample_flags","sample_composition_time_offset","config","location","LiveServerManifest","replace","default_AlgorithmID","default_IV_size","fragment_count","absolute_time","absolute_duration","graphicsmode","opcolor","profile","bitDepth","chromaSubsampling","videoFullRangeFlag","colourPrimaries","transferCharacteristics","matrixCoefficients","codecIntializationDataSize","codecIntializationData","colorSpace","transferFunction","bitReader","held_bits","num_held_bits","stream_read_1_bytes","strm","stream_read_2_bytes","extract_bits","num_bits","ptl_present_flag","ols_idx","num_sublayers","constant_frame_rate","bit_depth_minus8","num_bytes_constraint_info","ptl_frame_only_constraint_flag","ptl_multilayer_enabled_flag","general_constraint_info","cnstr1","cnstr2","ptl_sublayer_present_mask","val","sublayer_level_idc","ptl_num_sub_profiles","general_sub_profile_idc","max_picture_width","max_picture_height","avg_frame_rate","num_of_arrays","isVideo","isAudio","isSubtitle","isMetadata","isHint","getCodec","getWidth","getHeight","getChannelCount","getSampleRate","getSampleSize","VisualSampleEntry","AudioSampleEntry","SubtitleSampleEntry","MetadataSampleEntry","decimalToHex","d","padding","Number","avc1SampleEntry","avc2SampleEntry","avc3SampleEntry","avc4SampleEntry","baseCodec","avcC","hev1SampleEntry","hvc1SampleEntry","hvcC","reversed","hasByte","constraint_string","vvc1SampleEntry","vvi1SampleEntry","vvcC","last_nonzero","ptl_frame_only_constraint","ptl_multilayer_enabled","base32_chars","mp4aSampleEntry","esds","stxtSampleEntry","vp08SampleEntry","vp09SampleEntry","vpcC","av01SampleEntry","bitdepth","av1C","writeHeader","sizePosition","avcCBox","co64Box","cslgBox","cttsBox","drefBox","elngBox","elstBox","emsgBox","hdlrBox","kindBox","mdhdBox","mehdBox","mfhdBox","mvhdBox","writeFooter","stppSampleEntry","sbgpBox","sgpdBox","sidxBox","smhdBox","stcoBox","stscBox","stsdBox","stshBox","stssBox","stszBox","constant","sttsBox","tfdtBox","UINT32_MAX","tfhdBox","tkhdBox","trexBox","trunBox","data_offset_position","vmhdBox","unpack","samples","pts","dts","m","Infinity","description_index","chunk_index","DIFF_BOXES_PROP_NAMES","DIFF_PRIMITIVE_ARRAY_PROP_NAMES","boxEqualFields","box_a","box_b","boxEqual","VTTin4Parser","parseSample","cues","cue","getText","startTime","endTime","n","z","secToTimestamp","insec","ms","string","cueIn4","payl","XMLSubtitlein4Parser","sample","documentString","resources","DOMParser","parseFromString","Textin4Parser","parseConfig","ISOFile","mdats","moofs","isProgressive","moovStartFound","onMoovStart","moovStartSent","onReady","readySent","onSegment","onSamples","onError","sampleListBuilt","fragmentedTracks","extractedTracks","isFragmentationInitialized","sampleProcessingStarted","nextMoofNumber","itemListBuilt","onSidx","sidxSent","setSegmentOptions","user","options","trak","getTrackById","fragTrack","nextSample","segmentStream","nb_samples","rapAlignement","nbSamples","unsetSegmentOptions","setExtractionOptions","extractTrack","unsetExtractionOptions","restoreParsePosition","hasIncompleteMdat","processIncompleteMdat","saveParsePosition","processIncompleteBox","updateUsedBytes","checkBuffer","appendBuffer","last","nextFileStart","moov","buildSampleLists","updateSampleLists","getInfo","processSamples","nextSeekPosition","nextParsePosition","sidx","meta","flattenItemInfo","processItems","onItem","getAllocatedSampleDataSize","track","sample_desc","movie","_1904","getTime","hasMoov","mvhd","isFragmented","mvex","mehd","hasIOD","iods","brands","ftyp","created","modified","tracks","audioTracks","videoTracks","subtitleTracks","metadataTracks","hintTracks","otherTracks","traks","mdia","minf","stbl","stsd","tkhd","hdlr","tref","edts","edits","elst","movie_duration","movie_timescale","track_width","track_height","mdhd","cts_shift","cslg","samples_duration","codec","kind","udta","kinds","elng","samples_size","bitrate","audio","sample_rate","video","mime","fragTrak","result","createFragment","extractTrak","getSample","getBox","getBoxes","returnEarly","_sweep","getTrackSamplesInfo","getTrackSample","releaseUsedSamples","sampleNum","lastValidSample","releaseSample","samplesDataSize","stop","flush","seekTrack","useRap","seek_offset","rap_seek_sample_num","seek_sample_num","cts","is_sync","alreadyRead","trak_seek_info","seek_info","equal","box_index","a_box","b_box","lastBoxStartPosition","parsingMdat","discardMdatData","init","_options","addTrack","media_duration","sample_description_entry","media_type","codes","avcDecoderConfigRecord","description","description_boxes","buildTrakSampleLists","computeSize","stream_","addSample","depends_on","is_depended_on","has_redundancy","degradation_priority","first_dts","moof","createSingleSampleMoof","trafs","truns","moofBox","traf","lastMoofIndex","resetTables","stsc","stts","ctts","stss","initial_duration","stco","co64","stsz","stz2","initSampleGroups","sbgps","trak_sgpds","traf_sgpds","sample_group_info","sample_group_key","SampleGroupInfo","_parameter","_sbgp","sbgp","last_sample_in_run","entry_index","sample_groups_info","fragment_description","is_fragment","setSampleGroupProperties","sample_groups","process_sdtp","sdtp","subs","sgpds","stdp","chunk_run_index","last_chunk_in_run","offset_in_chunk","last_sample_in_chunk","last_sample_in_stts_run","stts_run_index","last_sample_in_ctts_run","ctts_run_index","last_stss_index","subs_entry_index","last_subs_sample_index","last_run_position","trex","tfhd","getTrexById","trun","moof_number","number_in_traf","first_sample_index","first_traf_merged","tfdt","bdo","bdop","dbim","dop","has_fragment_subsamples","sample_index","lengthAfterStart","getCodecs","codecs","trexs","itemsDataSize","iinf","ref_to","protection_index","protection","ipro","protections","iloc","itemloc","source","dinf","pitm","primary","iref","iprp","ipmas","ipma","association","properties","propEntry","ipco","propbox","getItem","releaseItem","callback","sent","hasItem","getMetaHandler","getPrimaryItem","itemToFragmentedTrackFile","itemId","file","trackOptions","ispe","trackId","outstream","sampleNumber","mdat","mdatBox","writeInitializationSegment","total_duration","getBuffer","initializeSegmentation","initSegs","seg","moovBox","printHeader","output","indent","print","prev_indent","MP4Box","_keepMdatData","_stream","keepMdatData","createFile"],"sourceRoot":""}