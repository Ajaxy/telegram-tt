{"version":3,"file":"1877.f481df9855016c404f1d.js","mappings":"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","sources":["webpack://telegram-t/./node_modules/highlight.js/lib/languages/erlang.js"],"sourcesContent":["/*\nLanguage: Erlang\nDescription: Erlang is a general-purpose functional language, with strict evaluation, single assignment, and dynamic typing.\nAuthor: Nikolay Zakharov <nikolay.desh@gmail.com>, Dmitry Kovega <arhibot@gmail.com>\nWebsite: https://www.erlang.org\nCategory: functional\n*/\n\n/** @type LanguageFn */\nfunction erlang(hljs) {\n  const BASIC_ATOM_RE = '[a-z\\'][a-zA-Z0-9_\\']*';\n  const FUNCTION_NAME_RE = '(' + BASIC_ATOM_RE + ':' + BASIC_ATOM_RE + '|' + BASIC_ATOM_RE + ')';\n  const ERLANG_RESERVED = {\n    keyword:\n      'after and andalso|10 band begin bnot bor bsl bzr bxor case catch cond div end fun if '\n      + 'let not of orelse|10 query receive rem try when xor maybe else',\n    literal:\n      'false true'\n  };\n\n  const COMMENT = hljs.COMMENT('%', '$');\n  const NUMBER = {\n    className: 'number',\n    begin: '\\\\b(\\\\d+(_\\\\d+)*#[a-fA-F0-9]+(_[a-fA-F0-9]+)*|\\\\d+(_\\\\d+)*(\\\\.\\\\d+(_\\\\d+)*)?([eE][-+]?\\\\d+)?)',\n    relevance: 0\n  };\n  const NAMED_FUN = { begin: 'fun\\\\s+' + BASIC_ATOM_RE + '/\\\\d+' };\n  const FUNCTION_CALL = {\n    begin: FUNCTION_NAME_RE + '\\\\(',\n    end: '\\\\)',\n    returnBegin: true,\n    relevance: 0,\n    contains: [\n      {\n        begin: FUNCTION_NAME_RE,\n        relevance: 0\n      },\n      {\n        begin: '\\\\(',\n        end: '\\\\)',\n        endsWithParent: true,\n        returnEnd: true,\n        relevance: 0\n        // \"contains\" defined later\n      }\n    ]\n  };\n  const TUPLE = {\n    begin: /\\{/,\n    end: /\\}/,\n    relevance: 0\n    // \"contains\" defined later\n  };\n  const VAR1 = {\n    begin: '\\\\b_([A-Z][A-Za-z0-9_]*)?',\n    relevance: 0\n  };\n  const VAR2 = {\n    begin: '[A-Z][a-zA-Z0-9_]*',\n    relevance: 0\n  };\n  const RECORD_ACCESS = {\n    begin: '#' + hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0,\n    returnBegin: true,\n    contains: [\n      {\n        begin: '#' + hljs.UNDERSCORE_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /\\{/,\n        end: /\\}/,\n        relevance: 0\n        // \"contains\" defined later\n      }\n    ]\n  };\n  const CHAR_LITERAL = {\n    scope: 'string',\n    match: /\\$(\\\\([^0-9]|[0-9]{1,3}|)|.)/,\n  };\n  const TRIPLE_QUOTE = {\n    scope: 'string',\n    match: /\"\"\"(\"*)(?!\")[\\s\\S]*?\"\"\"\\1/,\n  };\n\n  const SIGIL = {\n    scope: 'string',\n    contains: [ hljs.BACKSLASH_ESCAPE ],\n    variants: [\n      {match: /~\\w?\"\"\"(\"*)(?!\")[\\s\\S]*?\"\"\"\\1/},\n      {begin: /~\\w?\\(/, end: /\\)/},\n      {begin: /~\\w?\\[/, end: /\\]/},\n      {begin: /~\\w?{/, end: /}/},\n      {begin: /~\\w?</, end: />/},\n      {begin: /~\\w?\\//, end: /\\//},\n      {begin: /~\\w?\\|/, end: /\\|/},\n      {begin: /~\\w?'/, end: /'/},\n      {begin: /~\\w?\"/, end: /\"/},\n      {begin: /~\\w?`/, end: /`/},\n      {begin: /~\\w?#/, end: /#/},\n    ],\n  };\n\n  const BLOCK_STATEMENTS = {\n    beginKeywords: 'fun receive if try case maybe',\n    end: 'end',\n    keywords: ERLANG_RESERVED\n  };\n  BLOCK_STATEMENTS.contains = [\n    COMMENT,\n    NAMED_FUN,\n    hljs.inherit(hljs.APOS_STRING_MODE, { className: '' }),\n    BLOCK_STATEMENTS,\n    FUNCTION_CALL,\n    SIGIL,\n    TRIPLE_QUOTE,\n    hljs.QUOTE_STRING_MODE,\n    NUMBER,\n    TUPLE,\n    VAR1,\n    VAR2,\n    RECORD_ACCESS,\n    CHAR_LITERAL\n  ];\n\n  const BASIC_MODES = [\n    COMMENT,\n    NAMED_FUN,\n    BLOCK_STATEMENTS,\n    FUNCTION_CALL,\n    SIGIL,\n    TRIPLE_QUOTE,\n    hljs.QUOTE_STRING_MODE,\n    NUMBER,\n    TUPLE,\n    VAR1,\n    VAR2,\n    RECORD_ACCESS,\n    CHAR_LITERAL\n  ];\n  FUNCTION_CALL.contains[1].contains = BASIC_MODES;\n  TUPLE.contains = BASIC_MODES;\n  RECORD_ACCESS.contains[1].contains = BASIC_MODES;\n\n  const DIRECTIVES = [\n    \"-module\",\n    \"-record\",\n    \"-undef\",\n    \"-export\",\n    \"-ifdef\",\n    \"-ifndef\",\n    \"-author\",\n    \"-copyright\",\n    \"-doc\",\n    \"-moduledoc\",\n    \"-vsn\",\n    \"-import\",\n    \"-include\",\n    \"-include_lib\",\n    \"-compile\",\n    \"-define\",\n    \"-else\",\n    \"-endif\",\n    \"-file\",\n    \"-behaviour\",\n    \"-behavior\",\n    \"-spec\",\n    \"-on_load\",\n    \"-nifs\",\n  ];\n\n  const PARAMS = {\n    className: 'params',\n    begin: '\\\\(',\n    end: '\\\\)',\n    contains: BASIC_MODES\n  };\n\n  return {\n    name: 'Erlang',\n    aliases: [ 'erl' ],\n    keywords: ERLANG_RESERVED,\n    illegal: '(</|\\\\*=|\\\\+=|-=|/\\\\*|\\\\*/|\\\\(\\\\*|\\\\*\\\\))',\n    contains: [\n      {\n        className: 'function',\n        begin: '^' + BASIC_ATOM_RE + '\\\\s*\\\\(',\n        end: '->',\n        returnBegin: true,\n        illegal: '\\\\(|#|//|/\\\\*|\\\\\\\\|:|;',\n        contains: [\n          PARAMS,\n          hljs.inherit(hljs.TITLE_MODE, { begin: BASIC_ATOM_RE })\n        ],\n        starts: {\n          end: ';|\\\\.',\n          keywords: ERLANG_RESERVED,\n          contains: BASIC_MODES\n        }\n      },\n      COMMENT,\n      {\n        begin: '^-',\n        end: '\\\\.',\n        relevance: 0,\n        excludeEnd: true,\n        returnBegin: true,\n        keywords: {\n          $pattern: '-' + hljs.IDENT_RE,\n          keyword: DIRECTIVES.map(x => `${x}|1.5`).join(\" \")\n        },\n        contains: [\n          PARAMS,\n          SIGIL,\n          TRIPLE_QUOTE,\n          hljs.QUOTE_STRING_MODE\n        ]\n      },\n      NUMBER,\n      SIGIL,\n      TRIPLE_QUOTE,\n      hljs.QUOTE_STRING_MODE,\n      RECORD_ACCESS,\n      VAR1,\n      VAR2,\n      TUPLE,\n      CHAR_LITERAL,\n      { begin: /\\.$/ } // relevance booster\n    ]\n  };\n}\n\nmodule.exports = erlang;\n"],"names":["module","exports","hljs","BASIC_ATOM_RE","FUNCTION_NAME_RE","ERLANG_RESERVED","keyword","literal","COMMENT","NUMBER","className","begin","relevance","NAMED_FUN","FUNCTION_CALL","end","returnBegin","contains","endsWithParent","returnEnd","TUPLE","VAR1","VAR2","RECORD_ACCESS","UNDERSCORE_IDENT_RE","CHAR_LITERAL","scope","match","TRIPLE_QUOTE","SIGIL","BACKSLASH_ESCAPE","variants","BLOCK_STATEMENTS","beginKeywords","keywords","inherit","APOS_STRING_MODE","QUOTE_STRING_MODE","BASIC_MODES","PARAMS","name","aliases","illegal","TITLE_MODE","starts","excludeEnd","$pattern","IDENT_RE","map","x","join"],"sourceRoot":""}