{"version":3,"file":"4765.7fb2f53e673859b2363a.js","mappings":"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","sources":["webpack://telegram-t/./src/components/ui/placeholder/PlaceholderChatInfo.module.scss?3a84","webpack://telegram-t/./src/components/ui/placeholder/PlaceholderChatInfo.tsx","webpack://telegram-t/./src/components/ui/Toggle.module.scss?0590","webpack://telegram-t/./src/components/ui/Toggle.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/RangeSliderWithMarks.tsx","webpack://telegram-t/./src/components/ui/RangeSliderWithMarks.module.scss?5535","webpack://telegram-t/./src/components/ui/FloatingActionButton.tsx","webpack://telegram-t/./src/components/ui/RoundTimer.module.scss?7ffc","webpack://telegram-t/./src/components/ui/RoundTimer.tsx","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/ModalStarBalanceBar.module.scss?35ca","webpack://telegram-t/./src/components/ui/ModalStarBalanceBar.tsx","webpack://telegram-t/./src/components/ui/Modal.tsx","webpack://telegram-t/./src/components/ui/ListItem.tsx","webpack://telegram-t/./src/components/ui/TabList.tsx","webpack://telegram-t/./src/components/ui/Badge.tsx","webpack://telegram-t/./src/components/ui/Badge.module.scss?a5a8","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Separator.tsx","webpack://telegram-t/./src/components/ui/Separator.module.scss?e4cd","webpack://telegram-t/./src/components/ui/Tab.tsx","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/AvatarEditable.tsx","webpack://telegram-t/./src/components/ui/InfiniteScroll.tsx","webpack://telegram-t/./src/components/ui/placeholder/Skeleton.tsx","webpack://telegram-t/./src/components/ui/ShowMoreButton.tsx","webpack://telegram-t/./src/components/ui/MenuSeparator.module.scss?43c3","webpack://telegram-t/./src/components/ui/MenuSeparator.tsx","webpack://telegram-t/./src/components/ui/TextTimer.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/components/ui/Select.tsx","webpack://telegram-t/./src/components/ui/ResponsiveHoverButton.tsx","webpack://telegram-t/./src/components/ui/CheckboxGroup.tsx","webpack://telegram-t/./src/components/ui/Draggable.tsx","webpack://telegram-t/./src/components/ui/Draggable.module.scss?804f","webpack://telegram-t/./src/components/ui/RangeSlider.tsx","webpack://telegram-t/./src/components/ui/ImageCropper.tsx","webpack://telegram-t/./src/components/ui/ImageCropper.module.scss?aea2","webpack://telegram-t/./src/components/ui/CropModal.tsx","webpack://telegram-t/./src/components/ui/SelectAvatar.tsx","webpack://telegram-t/./src/components/ui/SelectAvatar.module.scss?3384","webpack://telegram-t/./src/components/ui/TextArea.tsx","webpack://telegram-t/./src/components/ui/ConfirmDialog.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Oob7moh7\",\"avatar\":\"ao0o6F_1\",\"info\":\"e94nYlC4\",\"title\":\"ANs9RCJu\",\"subtitle\":\"RSn3O5Rx\",\"animated\":\"AtWkrIxV\",\"slide\":\"_iiRl0o2\"};","import { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './PlaceholderChatInfo.module.scss';\n\nconst PlaceholderChatInfo = () => {\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.avatar, styles.animated)} />\n      <div className={styles.info}>\n        <div className={buildClassName(styles.title, styles.animated)} />\n        <div className={buildClassName(styles.subtitle, styles.animated)} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PlaceholderChatInfo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"eGD1rubd\",\"widget\":\"EXXsQxeq\",\"min\":\"C4vXj96y\",\"mid\":\"nRNm3LRD\",\"max\":\"LdztzMx0\",\"filler\":\"kudEBJOk\"};","import { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './Toggle.module.scss';\n\ninterface OwnProps {\n  value: 'min' | 'mid' | 'max';\n}\n\nfunction Toggle({ value }: OwnProps) {\n  return (\n    <div className={buildClassName(styles.root, 'Toggle')} aria-hidden>\n      <i className={buildClassName(styles.filler, styles[value])} />\n      <i className={buildClassName(styles.widget, styles[value])} />\n    </div>\n  );\n}\n\nexport default memo(Toggle);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Radio from './Radio';\n\nexport type IRadioOption<T = string> = {\n  label: TeactNode;\n  subLabel?: TeactNode;\n  value: T;\n  hidden?: boolean;\n  className?: string;\n  isCanCheckedInDisabled?: boolean;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string, event: ChangeEvent<HTMLInputElement>) => void;\n  onClickAction?: (value: string) => void;\n  isLink?: boolean;\n  withIcon?: boolean;\n  subLabelClassName?: string;\n  subLabel?: TeactNode;\n  className?: string;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n  onClickAction,\n  subLabelClassName,\n  isLink,\n  withIcon,\n  subLabel,\n  className,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value, event);\n  }, [onChange]);\n\n  const onSubLabelClick = useLastCallback((value: string) => () => {\n    onClickAction?.(value);\n  });\n\n  return (\n    <div id={id} className={buildClassName('radio-group', className)}>\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={subLabel || option.subLabel}\n          subLabelClassName={subLabelClassName}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          isCanCheckedInDisabled={option.isCanCheckedInDisabled}\n          disabled={disabled}\n          withIcon={withIcon}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          className={option.className}\n          onChange={handleChange}\n          onSubLabelClick={onSubLabelClick(option.value)}\n          isLink={isLink}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './RangeSliderWithMarks.module.scss';\n\nexport type OwnProps = {\n  marks: number[];\n  onChange: (value: number) => void;\n  rangeCount: number;\n};\n\nconst RangeSliderWithMarks: FC<OwnProps> = ({ marks, onChange, rangeCount }) => {\n  const sliderRef = useRef<HTMLInputElement>();\n\n  const rangeCountIndex = useMemo(() => marks.indexOf(rangeCount), [marks, rangeCount]);\n\n  const rangeValue = useMemo(() => {\n    return marks.indexOf(rangeCount).toString();\n  }, [marks, rangeCount]);\n\n  useLayoutEffect(() => {\n    if (sliderRef.current) {\n      const fillPercentage = (rangeCountIndex / (marks.length - 1)) * 100;\n      const thumbOffset = fillPercentage / 2;\n      sliderRef.current.style.setProperty('--fill-percentage', `${fillPercentage}%`);\n      sliderRef.current.style.setProperty('--thumb-offset', `${thumbOffset}%`);\n    }\n  }, [rangeCountIndex, marks]);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const index = parseInt(event.target.value, 10);\n    const newValue = marks[index];\n    onChange(newValue);\n  };\n\n  return (\n    <div className={styles.dotWrapper}>\n      <form>\n        <div className={styles.sliderContainer}>\n          <div className={styles.tickMarks}>\n            {marks.map((mark, index) => {\n              const isFilled = index <= rangeCountIndex;\n              return (\n                <div\n                  key={mark}\n                  className={buildClassName(\n                    styles.tick,\n                    isFilled ? styles.filled : styles.tickUnfilled,\n                  )}\n                />\n              );\n            })}\n          </div>\n          <div className={styles.marksContainer}>\n            {marks.map((mark) => (\n              <div\n                key={mark}\n                className={buildClassName(styles.mark, rangeCount === mark && styles.active)}\n              >\n                {mark}\n              </div>\n            ))}\n          </div>\n          <input\n            ref={sliderRef}\n            type=\"range\"\n            className={styles.slider}\n            min=\"0\"\n            max={marks.length - 1}\n            value={rangeValue}\n            onChange={handleChange}\n            step=\"1\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(RangeSliderWithMarks);\n","// extracted by mini-css-extract-plugin\nexport default {\"dotWrapper\":\"s8NMMSES\",\"sliderContainer\":\"i_wrxmyh\",\"marksContainer\":\"bVlnaLCI\",\"mark\":\"AFFaq4eZ\",\"active\":\"cuogxYPG\",\"slider\":\"H_rMZrqn\",\"tickMarks\":\"O7SI4r_Y\",\"tick\":\"b6UDc3zh\",\"filled\":\"VELPJsJ0\",\"tickUnfilled\":\"K8NtimIi\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: React.ReactNode;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const lang = useOldLang();\n\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n      isRtl={lang.isRtl}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"eldglPwL\",\"svg\":\"xhUfxjkV\",\"circle\":\"hsaty2zA\"};","import { memo, useEffect, useState } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatCountdownShort } from '../../util/dates/dateFormat';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AnimatedCounter from '../common/AnimatedCounter';\n\nimport styles from './RoundTimer.module.scss';\n\ntype OwnProps = {\n  duration: number;\n  className?: string;\n  onEnd?: NoneToVoidFunction;\n};\n\nconst UPDATE_FREQUENCY = 1000;\nconst TIMER_RADIUS = 14;\n\nconst RoundTimer = ({ duration, className, onEnd }: OwnProps) => {\n  const [timeLeft, setTimeLeft] = useState(duration);\n  const lang = useOldLang();\n\n  useInterval(\n    () => setTimeLeft((prev) => prev - 1),\n    timeLeft > 0 ? UPDATE_FREQUENCY : undefined,\n  );\n\n  useEffect(() => {\n    if (timeLeft <= 0) {\n      onEnd?.();\n    }\n  }, [timeLeft, onEnd]);\n\n  useEffect(() => {\n    setTimeLeft(duration);\n  }, [duration]);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <svg className={styles.svg} width=\"32px\" height=\"32px\">\n        <circle\n          cx=\"16\"\n          cy=\"16\"\n          r={TIMER_RADIUS}\n          transform=\"rotate(-90, 16, 16)\"\n          pathLength=\"100\"\n          stroke-dasharray=\"100\"\n          stroke-dashoffset={100 - ((timeLeft - 1) / duration) * 100} // Show it one step further due to animation\n          className={styles.circle}\n        />\n      </svg>\n      <AnimatedCounter className={styles.text} text={formatCountdownShort(lang, timeLeft * 1000)} />\n    </div>\n  );\n};\n\nexport default memo(RoundTimer);\n","import type { FC } from '../../lib/teact/teact';\nimport {\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\nimport { isLangFnParam } from '../../util/localization/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { REM } from '../common/helpers/mediaDimensions';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport CustomEmoji from '../common/CustomEmoji';\nimport Icon from '../common/icons/Icon';\nimport StarIcon from '../common/icons/StarIcon';\nimport Button from './Button';\nimport Portal from './Portal';\nimport RoundTimer from './RoundTimer';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  notification: ApiNotification;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\nconst CUSTOM_EMOJI_SIZE = 1.75 * REM;\n\nconst Notification: FC<OwnProps> = ({\n  notification,\n}) => {\n  const actions = getActions();\n\n  const lang = useLang();\n\n  const {\n    localId,\n    message,\n    action,\n    actionText,\n    cacheBreaker,\n    className,\n    disableClickDismiss,\n    dismissAction,\n    duration = DEFAULT_DURATION,\n    icon,\n    shouldUseCustomIcon,\n    customEmojiIconId,\n    shouldShowTimer,\n    title,\n    containerSelector,\n  } = notification;\n\n  const [isOpen, setIsOpen] = useState(true);\n  const timerRef = useRef<number | undefined>();\n  const { transitionClassNames } = useShowTransitionDeprecated(isOpen);\n\n  const handleDismiss = useLastCallback(() => {\n    actions.dismissNotification({ localId });\n  });\n\n  const closeAndDismiss = useLastCallback((force?: boolean) => {\n    if (!force && disableClickDismiss) return;\n    setIsOpen(false);\n    setTimeout(handleDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    if (dismissAction) {\n      // @ts-ignore\n      actions[dismissAction.action](dismissAction.payload);\n    }\n  });\n\n  const handleActionClick = useLastCallback(() => {\n    if (action) {\n      if (Array.isArray(action)) {\n        // @ts-ignore\n        action.forEach((cb) => actions[cb.action](cb.payload));\n      } else {\n        // @ts-ignore\n        actions[action.action](action.payload);\n      }\n    }\n    if (disableClickDismiss) {\n      setIsOpen(false);\n      setTimeout(handleDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    }\n    closeAndDismiss();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (action) {\n      if (Array.isArray(action)) {\n        // @ts-ignore\n        action.forEach((cb) => actions[cb.action](cb.payload));\n      } else {\n        // @ts-ignore\n        actions[action.action](action.payload);\n      }\n    }\n    closeAndDismiss();\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(() => closeAndDismiss(true), duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, cacheBreaker]); // Reset timer if `cacheBreaker` changes\n\n  const handleMouseEnter = useLastCallback(() => {\n    if (disableClickDismiss) return;\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    if (disableClickDismiss) return;\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  });\n\n  const renderedTitle = useMemo(() => {\n    if (!title) return undefined;\n    if (isLangFnParam(title)) {\n      return lang.with(title);\n    }\n\n    return renderText(title, ['simple_markdown', 'emoji', 'br', 'links']);\n  }, [lang, title]);\n\n  const renderedMessage = useMemo(() => {\n    if (isLangFnParam(message)) {\n      return lang.with(message);\n    }\n\n    if (typeof message === 'string') {\n      return renderText(message, ['simple_markdown', 'emoji', 'br', 'links']);\n    }\n\n    return message;\n  }, [lang, message]);\n\n  const renderedActionText = useMemo(() => {\n    if (!actionText) return undefined;\n    if (isLangFnParam(actionText)) {\n      return lang.with(actionText);\n    }\n\n    return actionText;\n  }, [lang, actionText]);\n\n  const renderedIcon = useMemo(() => {\n    if (customEmojiIconId) {\n      return (\n        <CustomEmoji\n          className=\"notification-emoji-icon\"\n          forceAlways\n          size={CUSTOM_EMOJI_SIZE}\n          documentId={customEmojiIconId}\n        />\n      );\n    }\n\n    if (shouldUseCustomIcon) {\n      if (icon === 'star') {\n        return (\n          <StarIcon type=\"gold\" className={buildClassName('notification-icon')} size=\"adaptive\" />\n        );\n      }\n    }\n    return <Icon name={icon || 'info-filled'} className=\"notification-icon\" />;\n  }, [customEmojiIconId, icon, shouldUseCustomIcon]);\n\n  return (\n    <Portal className=\"Notification-container\" containerSelector={containerSelector}>\n      <div\n        className={buildClassName('Notification', transitionClassNames, className)}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        {renderedIcon}\n        <div className=\"content\">\n          {Boolean(renderedTitle) && (\n            <div className=\"notification-title\">{renderedTitle}</div>\n          )}\n          {renderedMessage}\n        </div>\n        {Boolean(renderedActionText) && (\n          <Button\n            color=\"translucent-white\"\n            onClick={handleActionClick}\n            className=\"notification-button\"\n          >\n            {renderedActionText}\n          </Button>\n        )}\n        {shouldShowTimer && (\n          <RoundTimer className=\"notification-timer\" key={cacheBreaker} duration={Math.ceil(duration / 1000)} />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"UtvP6LQ2\",\"dots\":\"PdzBnsGR\",\"starIcon\":\"w919CqtI\",\"tonInUsdDescription\":\"VMKBAQXy\"};","import {\n  memo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStarsAmount, ApiTonAmount } from '../../api/types';\n\nimport {\n  TON_USD_RATE_DEFAULT,\n} from '../../config';\nimport { formatStarsAmount } from '../../global/helpers/payments';\nimport buildClassName from '../../util/buildClassName';\nimport { convertTonFromNanos, convertTonToUsd, formatCurrencyAsString } from '../../util/formatCurrency';\nimport { formatStarsAsIcon, formatTonAsIcon } from '../../util/localization/format';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from './Link';\n\nimport styles from './ModalStarBalanceBar.module.scss';\n\nexport type OwnProps = {\n  onCloseAnimationEnd?: () => void;\n  isModalOpen?: true;\n  currency?: 'TON' | 'XTR';\n};\n\nexport type StateProps = {\n  starBalance?: ApiStarsAmount;\n  tonBalance?: ApiTonAmount;\n  tonUsdRate: number;\n};\n\nfunction ModalStarBalanceBar({\n  starBalance,\n  tonBalance,\n  tonUsdRate,\n  isModalOpen,\n  onCloseAnimationEnd,\n  currency,\n}: StateProps & OwnProps) {\n  const {\n    openStarsBalanceModal,\n  } = getActions();\n\n  const lang = useLang();\n  const isTonMode = currency === 'TON';\n  const currentBalance = isTonMode ? tonBalance : starBalance;\n  const isOpen = isModalOpen ? Boolean(currentBalance) : false;\n\n  const {\n    ref,\n    shouldRender,\n  } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    withShouldRender: true,\n  });\n\n  const handleGetMoreStars = useLastCallback(() => {\n    openStarsBalanceModal(isTonMode ? { currency: 'TON' } : {});\n  });\n\n  if (!shouldRender || !currentBalance) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root)}\n      ref={ref}\n    >\n      <div>\n        {isTonMode ? (\n          lang('ModalStarsBalanceBarDescription', {\n            stars: formatTonAsIcon(lang, convertTonFromNanos(currentBalance.amount), {\n              className: styles.starIcon,\n            }),\n          }, {\n            withNodes: true,\n            withMarkdown: true,\n          })\n        ) : (\n          lang('ModalStarsBalanceBarDescription', {\n            stars: formatStarsAsIcon(lang, formatStarsAmount(lang, currentBalance as ApiStarsAmount), {\n              className: styles.starIcon,\n            }),\n          }, {\n            withNodes: true,\n            withMarkdown: true,\n          })\n        )}\n      </div>\n      <div>\n        {isTonMode && (\n          <div className={styles.tonInUsdDescription} style=\"color: var(--color-text-secondary)\">\n            {`≈ ${formatCurrencyAsString(\n              convertTonToUsd((currentBalance as ApiTonAmount).amount, tonUsdRate, true),\n              'USD',\n              lang.code,\n            )}`}\n          </div>\n        )}\n        {!isTonMode && (\n          <Link isPrimary onClick={handleGetMoreStars}>\n            {lang('GetMoreStarsLinkText')}\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      stars,\n      ton,\n    } = global;\n\n    return {\n      starBalance: stars?.balance,\n      tonBalance: ton?.balance,\n      tonUsdRate: global.appConfig?.tonUsdRate || TON_USD_RATE_DEFAULT,\n    };\n  },\n)(ModalStarBalanceBar));\n","import type { ElementRef, FC, TeactNode } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { beginHeavyAnimation, useEffect } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport freezeWhenClosed from '../../util/hoc/freezeWhenClosed';\nimport trapFocus from '../../util/trapFocus';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../hooks/useLayoutEffectWithPrevDeps';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Icon from '../common/icons/Icon';\nimport Button, { type OwnProps as ButtonProps } from './Button';\nimport ModalStarBalanceBar from './ModalStarBalanceBar';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nexport const ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  contentClassName?: string;\n  headerClassName?: string;\n  isOpen?: boolean;\n  header?: TeactNode;\n  isSlim?: boolean;\n  hasCloseButton?: boolean;\n  hasAbsoluteCloseButton?: boolean;\n  absoluteCloseButtonColor?: ButtonProps['color'];\n  noBackdrop?: boolean;\n  noBackdropClose?: boolean;\n  children: React.ReactNode;\n  style?: string;\n  dialogStyle?: string;\n  dialogRef?: ElementRef<HTMLDivElement>;\n  isLowStackPriority?: boolean;\n  dialogContent?: React.ReactNode;\n  ignoreFreeze?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n  withBalanceBar?: boolean;\n  currencyInBalanceBar?: 'TON' | 'XTR';\n  isCondensedHeader?: boolean;\n};\n\nconst Modal: FC<OwnProps> = ({\n  dialogRef,\n  title,\n  className,\n  contentClassName,\n  headerClassName,\n  isOpen,\n  isSlim,\n  header,\n  hasCloseButton,\n  hasAbsoluteCloseButton,\n  absoluteCloseButtonColor = 'translucent',\n  noBackdrop,\n  noBackdropClose,\n  children,\n  style,\n  dialogStyle,\n  isLowStackPriority,\n  dialogContent,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n  withBalanceBar,\n  isCondensedHeader,\n  currencyInBalanceBar = 'XTR',\n}) => {\n  const {\n    ref: modalRef,\n    shouldRender,\n  } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    withShouldRender: true,\n  });\n\n  const withCloseButton = hasCloseButton || hasAbsoluteCloseButton;\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isOpen]);\n\n  const handleEnter = useLastCallback((e: KeyboardEvent) => {\n    if (!onEnter) {\n      return false;\n    }\n\n    e.preventDefault();\n    onEnter();\n    return true;\n  });\n\n  useEffect(() => (\n    isOpen ? captureKeyboardListeners({ onEsc: onClose, onEnter: handleEnter }) : undefined\n  ), [isOpen, onClose, handleEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen, modalRef]);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n  });\n\n  useLayoutEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', Boolean(isOpen));\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      beginHeavyAnimation(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useOldLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title && !withCloseButton) return undefined;\n    const closeButton = (\n      <Button\n        className={buildClassName(hasAbsoluteCloseButton && 'modal-absolute-close-button')}\n        round\n        color={absoluteCloseButtonColor}\n        size=\"smaller\"\n        ariaLabel={lang('Close')}\n        onClick={onClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n    );\n\n    if (hasAbsoluteCloseButton) {\n      return closeButton;\n    }\n\n    return (\n      <div className={buildClassName('modal-header', headerClassName, isCondensedHeader && 'modal-header-condensed')}>\n        {withCloseButton && closeButton}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    noBackdrop && 'transparent-backdrop',\n    isSlim && 'slim',\n    isLowStackPriority && 'low-priority',\n    withBalanceBar && 'with-balance-bar',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        {withBalanceBar && (\n          <ModalStarBalanceBar\n            isModalOpen={isOpen}\n            currency={currencyInBalanceBar}\n          />\n        )}\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={!noBackdropClose ? onClose : undefined} />\n          <div className=\"modal-dialog\" ref={dialogRef} style={dialogStyle}>\n            {renderHeader()}\n            {dialogContent}\n            <div className={buildClassName('modal-content custom-scroll', contentClassName)} style={style}>\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default freezeWhenClosed(Modal);\n","import type { ElementRef, FC, TeactNode } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { useRef } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { requestMeasure } from '../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV, MouseButton } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\nimport RippleEffect from './RippleEffect';\n\nimport './ListItem.scss';\n\ntype MenuItemContextActionItem = {\n  title: string;\n  icon: IconName;\n  destructive?: boolean;\n  handler?: () => void;\n};\n\ntype MenuItemContextActionSeparator = {\n  isSeparator: true;\n  key?: string;\n};\n\nexport type MenuItemContextAction =\n  MenuItemContextActionItem\n  | MenuItemContextActionSeparator;\n\ninterface OwnProps {\n  ref?: ElementRef<HTMLDivElement>;\n  buttonRef?: ElementRef<HTMLDivElement | HTMLAnchorElement>;\n  icon?: IconName;\n  iconClassName?: string;\n  leftElement?: TeactNode;\n  secondaryIcon?: IconName;\n  secondaryIconClassName?: string;\n  rightElement?: TeactNode;\n  buttonClassName?: string;\n  className?: string;\n  style?: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n  allowDisabledClick?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  withPrimaryColor?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  allowSelection?: boolean;\n  withColorTransition?: boolean;\n  contextActions?: MenuItemContextAction[];\n  withPortalForMenu?: boolean;\n  menuBubbleClassName?: string;\n  href?: string;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLElement>, arg?: any) => void;\n  onContextMenu?: (e: React.MouseEvent<HTMLElement>) => void;\n  clickArg?: any;\n  onSecondaryIconClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  onDragEnter?: (e: React.DragEvent<HTMLDivElement>) => void;\n  nonInteractive?: boolean;\n}\n\nconst ListItem: FC<OwnProps> = ({\n  ref,\n  buttonRef,\n  icon,\n  iconClassName,\n  leftElement,\n  buttonClassName,\n  menuBubbleClassName,\n  secondaryIcon,\n  secondaryIconClassName,\n  rightElement,\n  className,\n  style,\n  children,\n  disabled,\n  allowDisabledClick,\n  ripple,\n  narrow,\n  inactive,\n  focus,\n  destructive,\n  withPrimaryColor,\n  multiline,\n  isStatic,\n  allowSelection,\n  withColorTransition,\n  contextActions,\n  withPortalForMenu,\n  href,\n  onMouseDown,\n  onClick,\n  onContextMenu,\n  clickArg,\n  onSecondaryIconClick,\n  onDragEnter,\n  nonInteractive,\n}) => {\n  let containerRef = useRef<HTMLDivElement>();\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useLastCallback(() => containerRef.current);\n  const getRootElement = useLastCallback(() => containerRef.current!.closest('.custom-scroll'));\n  const getMenuElement = useLastCallback(() => {\n    return (withPortalForMenu ? document.querySelector('#portals') : containerRef.current)!\n      .querySelector('.ListItem-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: withPortalForMenu }));\n\n  const handleClickEvent = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n    if (!hasModifierKey && e.button === MouseButton.Main) {\n      e.preventDefault();\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || !onClick) {\n      return;\n    }\n\n    if (href) {\n      // Allow default behavior for opening links in new tab\n      const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n      if ((hasModifierKey && e.button === MouseButton.Main) || e.button === MouseButton.Auxiliary) {\n        return;\n      }\n\n      e.preventDefault();\n    }\n\n    onClick(e, clickArg);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      requestMeasure(unmarkIsTouched);\n    }\n  });\n\n  const {\n    handleClick: handleSecondaryIconClick,\n    handleMouseDown: handleSecondaryIconMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLButtonElement>) => {\n    if ((disabled && !allowDisabledClick) || e.button !== 0 || (!onSecondaryIconClick && !contextActions)) return;\n\n    e.stopPropagation();\n\n    if (onSecondaryIconClick) {\n      onSecondaryIconClick(e);\n    } else {\n      handleContextMenu(e);\n    }\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === MouseButton.Main) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  });\n\n  const lang = useOldLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    allowSelection && 'allow-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    allowDisabledClick && 'click-allowed',\n    inactive && 'inactive',\n    contextMenuAnchor && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    withPrimaryColor && 'primary',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n    withColorTransition && 'with-color-transition',\n  );\n\n  const ButtonElementTag = href ? 'a' : 'div';\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={style}\n      onMouseDown={onMouseDown}\n      onDragEnter={onDragEnter}\n    >\n      <ButtonElementTag\n        className={buildClassName('ListItem-button', isTouched && 'active', buttonClassName)}\n        role={!isStatic ? 'button' : undefined}\n        href={href}\n        ref={buttonRef as any /* TS requires specific types for refs */}\n        tabIndex={!isStatic ? 0 : undefined}\n        onClick={(!inactive && IS_TOUCH_ENV) ? handleClick : handleClickEvent}\n        onMouseDown={handleMouseDown}\n        onContextMenu={onContextMenu || ((!inactive && contextActions) ? handleContextMenu : undefined)}\n      >\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n        {leftElement}\n        {icon && (\n          <Icon name={icon} className={buildClassName('ListItem-main-icon', iconClassName)} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {secondaryIcon && (\n          <Button\n            nonInteractive={nonInteractive}\n            className={buildClassName('secondary-icon', secondaryIconClassName)}\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={handleSecondaryIconClick}\n            onMouseDown={handleSecondaryIconMouseDown}\n          >\n            <Icon name={secondaryIcon} />\n          </Button>\n        )}\n        {rightElement}\n      </ButtonElementTag>\n      {contextActions && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"ListItem-context-menu with-menu-transitions\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal={withPortalForMenu}\n          bubbleClassName={menuBubbleClassName}\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                <span className=\"list-item-ellipsis\">\n                  {renderText(action.title)}\n                </span>\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { MenuItemContextAction } from './ListItem';\n\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport { IS_ANDROID, IS_IOS } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\n\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  id?: number;\n  title: TeactNode;\n  badgeCount?: number;\n  isBlocked?: boolean;\n  isBadgeActive?: boolean;\n  contextActions?: MenuItemContextAction[];\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  activeTab: number;\n  className?: string;\n  tabClassName?: string;\n  onSwitchTab: (index: number) => void;\n  contextRootElementSelector?: string;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n// Should match duration from `--slide-transition` CSS variable\nconst SCROLL_DURATION = IS_IOS ? 450 : IS_ANDROID ? 400 : 300;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, activeTab, onSwitchTab,\n  contextRootElementSelector, className, tabClassName,\n}) => {\n  const containerRef = useRef<HTMLDivElement>();\n  const previousActiveTab = usePreviousDeprecated(activeTab);\n\n  useHorizontalScroll(containerRef, undefined, true);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    const { scrollWidth, offsetWidth, scrollLeft } = container;\n    if (scrollWidth <= offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.childNodes[activeTab] as HTMLElement | null;\n    if (!activeTabElement) {\n      return;\n    }\n\n    const { offsetLeft: activeTabOffsetLeft, offsetWidth: activeTabOffsetWidth } = activeTabElement;\n    const newLeft = activeTabOffsetLeft - (offsetWidth / 2) + (activeTabOffsetWidth / 2);\n\n    // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n    if (Math.abs(newLeft - scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n      return;\n    }\n\n    animateHorizontalScroll(container, newLeft, SCROLL_DURATION);\n  }, [activeTab]);\n\n  const lang = useOldLang();\n\n  return (\n    <div\n      className={buildClassName('TabList', 'no-scrollbar', className)}\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.id}\n          title={tab.title}\n          isActive={i === activeTab}\n          isBlocked={tab.isBlocked}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n          contextActions={tab.contextActions}\n          contextRootElementSelector={contextRootElementSelector}\n          className={tabClassName}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport AnimatedCounter from '../common/AnimatedCounter';\nimport ShowTransition from './ShowTransition';\n\nimport styles from './Badge.module.scss';\n\ntype OwnProps = {\n  text?: string;\n  className?: string;\n  isAlternateColor?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({\n  text,\n  className,\n  isAlternateColor,\n}) => {\n  return (\n    <ShowTransition\n      className={buildClassName(styles.root, isAlternateColor ? styles.alternate : styles.default, className)}\n      isOpen={Boolean(text)}\n    >\n      {text && <AnimatedCounter text={text} />}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Y3ZoW17O\",\"default\":\"DWjOG2Ze\",\"alternate\":\"Lq67O2D2\"};","import type { ChangeEvent, MouseEventHandler } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  label?: TeactNode;\n  subLabel?: TeactNode;\n  value?: string;\n  checked?: boolean;\n  disabled?: boolean;\n  isCanCheckedInDisabled?: boolean;\n  isLink?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  withIcon?: boolean;\n  className?: string;\n  onlyInput?: boolean;\n  subLabelClassName?: string;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onSubLabelClick?: MouseEventHandler<HTMLSpanElement> | undefined;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  subLabelClassName,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  className,\n  onlyInput,\n  withIcon,\n  isLink,\n  onChange,\n  onSubLabelClick,\n  isCanCheckedInDisabled,\n}) => {\n  const lang = useOldLang();\n\n  const fullClassName = buildClassName(\n    'Radio',\n    className,\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    withIcon && 'with-icon',\n    isLoading && 'loading',\n    onlyInput && 'onlyInput',\n    Boolean(subLabel) && 'withSubLabel',\n    isCanCheckedInDisabled && 'canCheckedInDisabled',\n  );\n\n  return (\n    <label className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {Boolean(subLabel) && (\n          <span\n            className={buildClassName(subLabelClassName, 'subLabel', isLink ? 'subLabelLink' : undefined)}\n            dir={lang.isRtl ? 'auto' : undefined}\n            onClick={isLink ? onSubLabelClick : undefined}\n          >\n            {subLabel}\n          </span>\n        )}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import type { ElementRef, FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { useRef } from '../../lib/teact/teact';\n\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../hooks/useShowTransition';\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  isHidden?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  noCloseTransition?: boolean;\n  shouldAnimateFirstRender?: boolean;\n  style?: string;\n  children: React.ReactNode;\n  ref?: ElementRef<HTMLDivElement>;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen,\n  isHidden,\n  isCustom,\n  id,\n  className,\n  onClick,\n  children,\n  noCloseTransition,\n  shouldAnimateFirstRender,\n  style,\n  ref: externalRef,\n}) => {\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n  const prevChildren = usePreviousDeprecated(children);\n  const fromChildrenRef = useRef<React.ReactNode>();\n  const isFirstRender = prevIsOpen === undefined;\n\n  const { ref, shouldRender } = useShowTransition({\n    isOpen: isOpen && !isHidden,\n    ref: externalRef,\n    noMountTransition: isFirstRender && !shouldAnimateFirstRender,\n    className: isCustom ? false : undefined,\n    noCloseTransition,\n    withShouldRender: true,\n  });\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    (shouldRender || isHidden) && (\n      <div\n        id={id}\n        ref={ref}\n        className={className}\n        onClick={onClick}\n        style={style}\n      >\n        {isOpen ? children : fromChildrenRef.current!}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import type React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport styles from './Separator.module.scss';\n\ntype OwnProps = {\n  children?: React.ReactNode;\n  className?: string;\n};\n\nfunction Separator({ children, className }: OwnProps) {\n  const lang = useOldLang();\n\n  return (\n    <div\n      dir={lang.isRtl ? 'rtl' : undefined}\n      className={buildClassName(styles.separator, className)}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Separator;\n","// extracted by mini-css-extract-plugin\nexport default {\"separator\":\"LxlpQKLr\"};","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { useEffect, useLayoutEffect, useRef } from '../../lib/teact/teact';\n\nimport type { MenuItemContextAction } from './ListItem';\n\nimport { requestForcedReflow, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { MouseButton } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport forceReflow from '../../util/forceReflow';\nimport renderText from '../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Icon from '../common/icons/Icon';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: TeactNode;\n  isActive?: boolean;\n  isBlocked?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick?: (arg: number) => void;\n  clickArg?: number;\n  contextActions?: MenuItemContextAction[];\n  contextRootElementSelector?: string;\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  isActive,\n  isBlocked,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n  contextActions,\n  contextRootElementSelector,\n}) => {\n  const tabRef = useRef<HTMLDivElement>();\n\n  useLayoutEffect(() => {\n    // Set initial active state\n    if (isActive && previousActiveTab === undefined && tabRef.current) {\n      tabRef.current.classList.add(classNames.active);\n    }\n  }, [isActive, previousActiveTab]);\n\n  useEffect(() => {\n    if (!isActive || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tabEl = tabRef.current!;\n    const prevTabEl = tabEl.parentElement!.children[previousActiveTab];\n    if (!prevTabEl) {\n      // The number of tabs in the parent component has decreased. It is necessary to add the active tab class name.\n      if (isActive && !tabEl.classList.contains(classNames.active)) {\n        requestMutation(() => {\n          tabEl.classList.add(classNames.active);\n        });\n      }\n      return;\n    }\n\n    const platformEl = tabEl.querySelector<HTMLElement>('.platform')!;\n    const prevPlatformEl = prevTabEl.querySelector<HTMLElement>('.platform')!;\n\n    // We move and resize the platform, so it repeats the position and size of the previous one\n    const shiftLeft = prevPlatformEl.parentElement!.offsetLeft - platformEl.parentElement!.offsetLeft;\n    const scaleFactor = prevPlatformEl.clientWidth / platformEl.clientWidth;\n\n    requestMutation(() => {\n      prevPlatformEl.classList.remove('animate');\n      platformEl.classList.remove('animate');\n      platformEl.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n\n      requestForcedReflow(() => {\n        forceReflow(platformEl);\n\n        return () => {\n          platformEl.classList.add('animate');\n          platformEl.style.transform = 'none';\n\n          prevTabEl.classList.remove(classNames.active);\n          tabEl.classList.add(classNames.active);\n        };\n      });\n    });\n  }, [isActive, previousActiveTab]);\n\n  const {\n    contextMenuAnchor, handleContextMenu, handleBeforeContextMenu, handleContextMenuClose,\n    handleContextMenuHide, isContextMenuOpen,\n  } = useContextMenuHandlers(tabRef, !contextActions);\n\n  const { handleClick, handleMouseDown } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n\n    if (e.type === 'mousedown' && e.button !== MouseButton.Main) {\n      return;\n    }\n\n    onClick?.(clickArg!);\n  });\n\n  const getTriggerElement = useLastCallback(() => tabRef.current);\n  const getRootElement = useLastCallback(\n    () => (contextRootElementSelector ? tabRef.current!.closest(contextRootElementSelector) : document.body),\n  );\n  const getMenuElement = useLastCallback(\n    () => document.querySelector('#portals')!.querySelector('.Tab-context-menu .bubble'),\n  );\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <div\n      className={buildClassName('Tab', onClick && 'Tab--interactive', className)}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n      ref={tabRef}\n    >\n      <span className=\"Tab_inner\">\n        {typeof title === 'string' ? renderText(title) : title}\n        {Boolean(badgeCount) && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        {isBlocked && <Icon name=\"lock-badge\" className=\"blocked\" />}\n        <i className=\"platform\" />\n      </span>\n\n      {contextActions && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"Tab-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                {action.title}\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Tab;\n","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { animate, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useDevicePixelRatio from '../../hooks/window/useDevicePixelRatio';\n\nimport Icon from '../common/icons/Icon';\n\nimport './ProgressSpinner.scss';\n\nconst SIZES = {\n  s: 42, m: 48, l: 54, xl: 52,\n};\nconst STROKE_WIDTH = 2;\nconst STROKE_WIDTH_XL = 3;\nconst PADDING = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\nconst GROW_DURATION = 600; // 0.6 s\nconst ROTATE_DURATION = 2000; // 2 s\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  rotationOffset?: number;\n  withColor?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  rotationOffset,\n  withColor,\n  onClick,\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>();\n  const width = SIZES[size];\n  const progressRef = useStateRef(progress);\n\n  const dpr = useDevicePixelRatio();\n\n  const color = useDynamicColorListener(canvasRef, undefined, !withColor);\n\n  useEffect(() => {\n    let isFirst = true;\n    let growFrom = MIN_PROGRESS;\n    let growStartedAt: number | undefined;\n    let prevProgress: number | undefined;\n\n    animate(() => {\n      if (!canvasRef.current) {\n        return false;\n      }\n\n      if (progressRef.current !== prevProgress) {\n        growFrom = Math.min(Math.max(MIN_PROGRESS, prevProgress || 0), MAX_PROGRESS);\n        growStartedAt = Date.now();\n        prevProgress = progressRef.current;\n      }\n\n      const targetProgress = Math.min(Math.max(MIN_PROGRESS, progressRef.current), MAX_PROGRESS);\n      const t = Math.min(1, (Date.now() - growStartedAt!) / GROW_DURATION);\n      const animationFactor = timingFunctions.easeOutQuad(t);\n      const currentProgress = growFrom + (targetProgress - growFrom) * animationFactor;\n\n      drawSpinnerArc(\n        canvasRef.current,\n        width * dpr,\n        (size === 'xl' ? STROKE_WIDTH_XL : STROKE_WIDTH) * dpr,\n        color ?? 'white',\n        currentProgress,\n        dpr,\n        isFirst,\n        rotationOffset,\n      );\n\n      isFirst = false;\n\n      return currentProgress < 1;\n    }, requestMutation);\n  }, [progressRef, size, width, dpr, rotationOffset, color]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      className={className}\n      onClick={onClick}\n    >\n      {!noCross && <Icon name=\"close\" />}\n      <canvas ref={canvasRef} className=\"ProgressSpinner_canvas\" style={`width: ${width}; height: ${width}px;`} />\n    </div>\n  );\n};\n\nfunction drawSpinnerArc(\n  canvas: HTMLCanvasElement,\n  size: number,\n  strokeWidth: number,\n  color: string,\n  progress: number,\n  dpr: number,\n  shouldInit = false,\n  rotationOffset?: number,\n) {\n  const centerCoordinate = size / 2;\n  const radius = (size - strokeWidth) / 2 - PADDING * dpr;\n  const offset = rotationOffset ?? (Date.now() % ROTATE_DURATION) / ROTATE_DURATION;\n  const startAngle = (2 * Math.PI) * offset;\n  const endAngle = startAngle + (2 * Math.PI) * progress;\n  const ctx = canvas.getContext('2d')!;\n\n  if (shouldInit) {\n    canvas.width = size;\n    canvas.height = size;\n\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = color;\n    ctx.lineWidth = strokeWidth;\n  }\n\n  ctx.clearRect(0, 0, size, size);\n  ctx.beginPath();\n  ctx.arc(centerCoordinate, centerCoordinate, radius, startAngle, endAngle);\n  ctx.stroke();\n}\n\nexport default memo(ProgressSpinner);\n","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { ElementRef, FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\nimport Loading from './Loading';\nimport Transition from './Transition';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLInputElement>;\n  children?: React.ReactNode;\n  resultsItemSelector?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  spinnerColor?: 'yellow';\n  spinnerBackgroundColor?: 'light';\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  hasUpButton?: boolean;\n  hasDownButton?: boolean;\n  teactExperimentControlled?: boolean;\n  withBackIcon?: boolean;\n  onChange: (value: string) => void;\n  onStartBackspace?: NoneToVoidFunction;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  onClick?: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => void;\n  onUpClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  onDownClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  onSpinnerClick?: NoneToVoidFunction;\n  onEnter?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  resultsItemSelector,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading = false,\n  spinnerColor,\n  spinnerBackgroundColor,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  hasUpButton,\n  hasDownButton,\n  teactExperimentControlled,\n  withBackIcon,\n  onChange,\n  onStartBackspace,\n  onReset,\n  onFocus,\n  onBlur,\n  onClick,\n  onUpClick,\n  onDownClick,\n  onSpinnerClick,\n  onEnter,\n}) => {\n  let inputRef = useRef<HTMLInputElement>();\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n\n    if (!isInputFocused) {\n      handleFocus();\n    }\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    onFocus?.();\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    onBlur?.();\n  }\n\n  const handleKeyDown = useLastCallback((e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      if (onEnter) {\n        e.preventDefault();\n        onEnter();\n        return;\n      }\n\n      if (resultsItemSelector) {\n        const element = document.querySelector(resultsItemSelector) as HTMLElement;\n        if (element) {\n          element.focus();\n        }\n      }\n    }\n\n    if (resultsItemSelector && e.key === 'ArrowDown') {\n      const element = document.querySelector(resultsItemSelector) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n\n    if (e.key === 'Backspace' && e.currentTarget.selectionStart === 0 && e.currentTarget.selectionEnd === 0) {\n      onStartBackspace?.();\n    }\n  });\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      onClick={onClick}\n      dir={oldLang.isRtl ? 'rtl' : undefined}\n    >\n      <Transition\n        name=\"fade\"\n        shouldCleanup\n        activeKey={Number(!isLoading && !withBackIcon)}\n        className=\"icon-container-left\"\n        slideClassName=\"icon-container-slide\"\n      >\n        {isLoading && !withBackIcon ? (\n          <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n        ) : withBackIcon ? (\n          <Icon name=\"arrow-left\" className=\"back-icon\" onClick={onReset} />\n        ) : (\n          <Icon name=\"search\" className=\"search-icon\" />\n        )}\n      </Transition>\n      <div>{children}</div>\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || oldLang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n        teactExperimentControlled={teactExperimentControlled}\n      />\n      {hasUpButton && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onUpClick}\n          disabled={!onUpClick}\n          ariaLabel={lang('AriaSearchOlderResult')}\n        >\n          <Icon name=\"up\" />\n        </Button>\n      )}\n      {hasDownButton && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onDownClick}\n          disabled={!onDownClick}\n          ariaLabel={lang('AriaSearchNewerResult')}\n        >\n          <Icon name=\"down\" />\n        </Button>\n      )}\n      <Transition\n        name=\"fade\"\n        shouldCleanup\n        activeKey={Number(isLoading)}\n        className=\"icon-container-right\"\n        slideClassName=\"icon-container-slide\"\n      >\n        {withBackIcon && isLoading ? (\n          <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n        ) : (\n          (value || canClose) && onReset && (\n            <Button\n              round\n              size=\"tiny\"\n              color=\"translucent\"\n              onClick={onReset}\n            >\n              <Icon name=\"close\" />\n            </Button>\n          )\n        )}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport Icon from '../common/icons/Icon';\nimport CropModal from './CropModal';\n\nimport './AvatarEditable.scss';\n\ninterface OwnProps {\n  title?: string;\n  disabled?: boolean;\n  isForForum?: boolean;\n  currentAvatarBlobUrl?: string;\n  onChange: (file: File) => void;\n}\n\nconst AvatarEditable: FC<OwnProps> = ({\n  title = 'Change your profile picture',\n  disabled,\n  isForForum,\n  currentAvatarBlobUrl,\n  onChange,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n  const [croppedBlobUrl, setCroppedBlobUrl] = useState<string | undefined>(currentAvatarBlobUrl);\n\n  useEffect(() => {\n    setCroppedBlobUrl(currentAvatarBlobUrl);\n  }, [currentAvatarBlobUrl]);\n\n  function handleSelectFile(event: ChangeEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n\n    if (!target?.files?.[0]) {\n      return;\n    }\n\n    setSelectedFile(target.files[0]);\n    target.value = '';\n  }\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n\n    if (croppedBlobUrl && croppedBlobUrl !== currentAvatarBlobUrl) {\n      URL.revokeObjectURL(croppedBlobUrl);\n    }\n    setCroppedBlobUrl(URL.createObjectURL(croppedImg));\n  }, [croppedBlobUrl, currentAvatarBlobUrl, onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const labelClassName = buildClassName(\n    croppedBlobUrl && 'filled',\n    disabled && 'disabled',\n    isForForum && 'rounded-square',\n  );\n\n  return (\n    <div className=\"AvatarEditable\">\n      <label\n        className={labelClassName}\n        role=\"button\"\n        tabIndex={0}\n        title={title}\n      >\n        <input\n          type=\"file\"\n          onChange={handleSelectFile}\n          accept=\"image/png, image/jpeg\"\n        />\n        <Icon name=\"camera-add\" />\n        {croppedBlobUrl && <img src={croppedBlobUrl} draggable={false} alt=\"Avatar\" />}\n      </label>\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </div>\n  );\n};\n\nexport default memo(AvatarEditable);\n","import type { UIEvent } from 'react';\nimport type { ElementRef, FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { LoadMoreDirection } from '../../types';\n\nimport { requestForcedReflow } from '../../lib/fasterdom/fasterdom';\nimport { IS_ANDROID } from '../../util/browser/windowEnvironment';\nimport buildStyle from '../../util/buildStyle';\nimport resetScroll from '../../util/resetScroll';\nimport { debounce } from '../../util/schedulers';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  style?: string;\n  className?: string;\n  items?: any[];\n  itemSelector?: string;\n  preloadBackwards?: number;\n  sensitiveArea?: number;\n  withAbsolutePositioning?: boolean;\n  maxHeight?: number;\n  noScrollRestore?: boolean;\n  noScrollRestoreOnTop?: boolean;\n  noFastList?: boolean;\n  cacheBuster?: any;\n  beforeChildren?: React.ReactNode;\n  scrollContainerClosest?: string;\n  children: React.ReactNode;\n  onLoadMore?: ({ direction }: { direction: LoadMoreDirection; noScroll?: boolean }) => void;\n  onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n  onWheel?: (e: React.WheelEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onDragOver?: (e: React.DragEvent<HTMLDivElement>) => void;\n  onDragLeave?: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DEFAULT_LIST_SELECTOR = '.ListItem';\nconst DEFAULT_PRELOAD_BACKWARDS = 20;\nconst DEFAULT_SENSITIVE_AREA = 800;\n\nconst InfiniteScroll: FC<OwnProps> = ({\n  ref,\n  style,\n  className,\n  items,\n  itemSelector = DEFAULT_LIST_SELECTOR,\n  preloadBackwards = DEFAULT_PRELOAD_BACKWARDS,\n  sensitiveArea = DEFAULT_SENSITIVE_AREA,\n  withAbsolutePositioning,\n  maxHeight,\n  // Used to turn off restoring scroll position (e.g. for frequently re-ordered chat or user lists)\n  noScrollRestore = false,\n  noScrollRestoreOnTop = false,\n  noFastList,\n  // Used to re-query `listItemElements` if rendering is delayed by transition\n  cacheBuster,\n  beforeChildren,\n  children,\n  scrollContainerClosest,\n  onLoadMore,\n  onScroll,\n  onWheel,\n  onClick,\n  onKeyDown,\n  onDragOver,\n  onDragLeave,\n}: OwnProps) => {\n  let containerRef = useRef<HTMLDivElement>();\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const stateRef = useRef<{\n    listItemElements?: NodeListOf<HTMLDivElement>;\n    isScrollTopJustUpdated?: boolean;\n    currentAnchor?: HTMLDivElement | undefined;\n    currentAnchorTop?: number;\n  }>({});\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(() => {\n    if (!onLoadMore) {\n      return [];\n    }\n\n    return [\n      debounce((noScroll = false) => {\n        onLoadMore({ direction: LoadMoreDirection.Backwards, noScroll });\n      }, 1000, true, false),\n      debounce(() => {\n        onLoadMore({ direction: LoadMoreDirection.Forwards });\n      }, 1000, true, false),\n    ];\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [onLoadMore, items]);\n\n  // Initial preload\n  useEffect(() => {\n    const scrollContainer = scrollContainerClosest\n      ? containerRef.current!.closest<HTMLDivElement>(scrollContainerClosest)!\n      : containerRef.current!;\n    if (!loadMoreBackwards || !scrollContainer) {\n      return;\n    }\n\n    if (preloadBackwards > 0 && (!items || items.length < preloadBackwards)) {\n      loadMoreBackwards(true);\n      return;\n    }\n\n    const { scrollHeight, clientHeight } = scrollContainer;\n    if (clientHeight && scrollHeight < clientHeight) {\n      loadMoreBackwards();\n    }\n  }, [items, loadMoreBackwards, preloadBackwards, scrollContainerClosest]);\n\n  // Restore `scrollTop` after adding items\n  useLayoutEffect(() => {\n    const scrollContainer = scrollContainerClosest\n      ? containerRef.current!.closest<HTMLDivElement>(scrollContainerClosest)!\n      : containerRef.current!;\n\n    const container = containerRef.current!;\n\n    requestForcedReflow(() => {\n      const state = stateRef.current;\n\n      state.listItemElements = container.querySelectorAll<HTMLDivElement>(itemSelector);\n\n      let newScrollTop: number;\n\n      if (state.currentAnchor && Array.from(state.listItemElements).includes(state.currentAnchor)) {\n        const { scrollTop } = scrollContainer;\n        const newAnchorTop = state.currentAnchor.getBoundingClientRect().top;\n        newScrollTop = scrollTop + (newAnchorTop - state.currentAnchorTop!);\n      } else {\n        const nextAnchor = state.listItemElements[0];\n        if (nextAnchor) {\n          state.currentAnchor = nextAnchor;\n          state.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n        }\n      }\n\n      if (withAbsolutePositioning || noScrollRestore) {\n        return undefined;\n      }\n\n      const { scrollTop } = scrollContainer;\n      if (noScrollRestoreOnTop && scrollTop === 0) {\n        return undefined;\n      }\n\n      return () => {\n        resetScroll(scrollContainer, newScrollTop);\n\n        state.isScrollTopJustUpdated = true;\n      };\n    });\n  }, [\n    items, itemSelector, noScrollRestore, noScrollRestoreOnTop, cacheBuster, withAbsolutePositioning,\n    scrollContainerClosest,\n  ]);\n\n  const handleScroll = useLastCallback((e: UIEvent<HTMLDivElement>) => {\n    if (loadMoreForwards && loadMoreBackwards) {\n      const {\n        isScrollTopJustUpdated, currentAnchor, currentAnchorTop,\n      } = stateRef.current;\n      const listItemElements = stateRef.current.listItemElements!;\n\n      if (isScrollTopJustUpdated) {\n        stateRef.current.isScrollTopJustUpdated = false;\n        return;\n      }\n\n      const listLength = listItemElements.length;\n      const scrollContainer = scrollContainerClosest\n        ? containerRef.current!.closest<HTMLDivElement>(scrollContainerClosest)!\n        : containerRef.current!;\n      const { scrollTop, scrollHeight, offsetHeight } = scrollContainer;\n      const top = listLength ? listItemElements[0].offsetTop : 0;\n      const isNearTop = scrollTop <= top + sensitiveArea;\n      const bottom = listLength\n        ? listItemElements[listLength - 1].offsetTop + listItemElements[listLength - 1].offsetHeight\n        : scrollHeight;\n      const isNearBottom = bottom - (scrollTop + offsetHeight) <= sensitiveArea;\n      let isUpdated = false;\n\n      if (isNearTop) {\n        const nextAnchor = listItemElements[0];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingUp = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop > currentAnchorTop\n          );\n\n          if (isMovingUp) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreForwards();\n          }\n        }\n      }\n\n      if (isNearBottom) {\n        const nextAnchor = listItemElements[listLength - 1];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingDown = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop < currentAnchorTop\n          );\n\n          if (isMovingDown) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreBackwards();\n          }\n        }\n      }\n\n      if (!isUpdated) {\n        if (currentAnchor?.offsetParent) {\n          stateRef.current.currentAnchorTop = currentAnchor.getBoundingClientRect().top;\n        } else {\n          const nextAnchor = listItemElements[0];\n\n          if (nextAnchor) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n          }\n        }\n      }\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  });\n\n  useLayoutEffect(() => {\n    const scrollContainer = scrollContainerClosest\n      ? containerRef.current!.closest<HTMLDivElement>(scrollContainerClosest)!\n      : containerRef.current!;\n    if (!scrollContainer) return undefined;\n\n    const handleNativeScroll = (e: Event) => handleScroll(e as unknown as UIEvent<HTMLDivElement>);\n\n    scrollContainer.addEventListener('scroll', handleNativeScroll);\n\n    return () => {\n      scrollContainer.removeEventListener('scroll', handleNativeScroll);\n    };\n  }, [handleScroll, scrollContainerClosest]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onWheel={onWheel}\n      teactFastList={!noFastList && !withAbsolutePositioning}\n      onKeyDown={onKeyDown}\n      onDragOver={onDragOver}\n      onDragLeave={onDragLeave}\n      onClick={onClick}\n      style={style}\n    >\n      {beforeChildren}\n      {withAbsolutePositioning && items?.length ? (\n        <div\n          teactFastList={!noFastList}\n          style={buildStyle('position: relative', IS_ANDROID && `height: ${maxHeight}px`)}\n        >\n          {children}\n        </div>\n      ) : children}\n    </div>\n  );\n};\n\nexport default InfiniteScroll;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport './Skeleton.scss';\n\ntype OwnProps = {\n  variant?: 'rectangular' | 'rounded-rect' | 'round';\n  animation?: 'wave' | 'pulse';\n  width?: number;\n  height?: number;\n  forceAspectRatio?: boolean;\n  inline?: boolean;\n  className?: string;\n};\n\nconst Skeleton: FC<OwnProps> = ({\n  variant = 'rectangular',\n  animation = 'wave',\n  width,\n  height,\n  forceAspectRatio,\n  inline,\n  className,\n}) => {\n  const classNames = buildClassName('Skeleton', variant, animation, className, inline && 'inline');\n  const aspectRatio = (width && height) ? `aspect-ratio: ${width}/${height}` : undefined;\n  const style = buildStyle(\n    forceAspectRatio && aspectRatio,\n    Boolean(width) && `width: ${width}px`,\n    !forceAspectRatio && Boolean(height) && `height: ${height}px`,\n  );\n  return (\n    <div className={classNames} style={style}>{inline && '\\u00A0'}</div>\n  );\n};\n\nexport default Skeleton;\n","import type { FC } from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\n\nimport './ShowMoreButton.scss';\n\ntype OwnProps = {\n  count: number;\n  itemName: string;\n  itemPluralName?: string;\n  isLoading?: boolean;\n  onClick: () => void;\n};\n\nconst ShowMoreButton: FC<OwnProps> = ({\n  count,\n  itemName,\n  itemPluralName,\n  isLoading,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Button\n      className=\"ShowMoreButton\"\n      color=\"translucent\"\n      size=\"smaller\"\n      isText\n      isLoading={isLoading}\n      isRtl={lang.isRtl}\n      onClick={onClick}\n    >\n      <Icon name=\"down\" />\n      Show\n      {' '}\n      {count}\n      {' '}\n      more\n      {' '}\n      {count > 1 ? itemPluralName || `${itemName}s` : itemName}\n    </Button>\n  );\n};\n\nexport default ShowMoreButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"h039vb1K\",\"thin\":\"NGKaFgra\",\"thick\":\"_BdnjPEa\"};","import type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './MenuSeparator.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  size?: 'thin' | 'thick';\n};\n\nconst MenuSeparator: FC<OwnProps> = ({ className, size = 'thin' }) => {\n  return (\n    <div className={buildClassName(styles.root, styles[size], className)} />\n  );\n};\n\nexport default MenuSeparator;\n","import { type FC, memo, useEffect } from '../../lib/teact/teact';\n\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AnimatedCounter from '../common/AnimatedCounter';\n\ntype OwnProps = {\n  langKey: string;\n  endsAt: number;\n  onEnd?: NoneToVoidFunction;\n};\n\nconst UPDATE_FREQUENCY = 500; // Sometimes second gets skipped if using 1000\n\nconst TextTimer: FC<OwnProps> = ({ langKey, endsAt, onEnd }) => {\n  const lang = useLang();\n  const oldLang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const serverTime = getServerTime();\n  const isActive = serverTime < endsAt;\n  useInterval(forceUpdate, isActive ? UPDATE_FREQUENCY : undefined);\n\n  useEffect(() => {\n    if (!isActive) {\n      onEnd?.();\n    }\n  }, [isActive, onEnd]);\n\n  if (!isActive) return undefined;\n\n  const timeLeft = endsAt - serverTime;\n  const time = formatMediaDuration(timeLeft);\n\n  const timeParts = time.split(':');\n  const timeCounter = (\n    <span style=\"font-variant-numeric: tabular-nums;\">\n      {timeParts.map((part, index) => (\n        <>\n          {index > 0 && ':'}\n          <AnimatedCounter key={index} text={part} />\n        </>\n      ))}\n    </span>\n  );\n\n  const isTypedKey = langKey === 'UnlockTimerPublicPostsSearch';\n\n  if (isTypedKey) {\n    return (\n      <span>\n        {lang(langKey, { time: timeCounter }, { withNodes: true })}\n      </span>\n    );\n  }\n\n  return (\n    <span>\n      {oldLang(langKey, time)}\n    </span>\n  );\n};\n\nexport default memo(TextTimer);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import type { ChangeEvent } from 'react';\nimport type { ElementRef, FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  id?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  ref?: ElementRef<HTMLSelectElement>;\n  hasArrow?: boolean;\n  tabIndex?: number;\n  onChange?: (e: ChangeEvent<HTMLSelectElement>) => void;\n  children: React.ReactNode;\n};\n\nconst Select: FC<OwnProps> = (props) => {\n  const {\n    id,\n    value,\n    label,\n    hasArrow,\n    error,\n    ref,\n    tabIndex,\n    onChange,\n    children,\n  } = props;\n  const labelText = error || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error && 'error',\n    labelText && 'with-label',\n    hasArrow && 'with-arrow',\n    'input-group',\n  );\n\n  return (\n    <div className={fullClassName}>\n      <select\n        className=\"form-control\"\n        id={id}\n        value={value || ''}\n        onChange={onChange}\n        tabIndex={tabIndex}\n        ref={ref}\n      >\n        {children}\n      </select>\n      {labelText && id && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Select);\n","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { useRef } from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from './Button';\n\ntype OwnProps = {\n  onActivate: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n} & Omit<ButtonProps, (\n  'onClick' | 'onMouseDown' |\n  'onMouseEnter' | 'onMouseLeave' |\n  'onFocus'\n)>;\n\nconst BUTTON_ACTIVATE_DELAY = 200;\nlet openTimeout: number | undefined;\nlet isFirstTimeActivation = true;\n\nconst ResponsiveHoverButton: FC<OwnProps> = ({ onActivate, ...buttonProps }) => {\n  const isMouseInside = useRef(false);\n\n  const handleMouseEnter = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n\n    // This is used to counter additional delay caused by asynchronous module loading\n    if (isFirstTimeActivation) {\n      isFirstTimeActivation = false;\n      onActivate(e);\n      return;\n    }\n\n    if (openTimeout) {\n      clearTimeout(openTimeout);\n      openTimeout = undefined;\n    }\n    openTimeout = window.setTimeout(() => {\n      if (isMouseInside.current) {\n        onActivate(e);\n      }\n    }, BUTTON_ACTIVATE_DELAY);\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n    onActivate(e);\n  });\n\n  return (\n    <Button\n\n      {...buttonProps}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      onClick={!IS_TOUCH_ENV ? onActivate : handleClick}\n    />\n  );\n};\n\nexport default ResponsiveHoverButton;\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { unique } from '../../util/iteratees';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Checkbox from './Checkbox';\n\nexport type IRadioOption = {\n  label: TeactNode;\n  subLabel?: string;\n  disabled?: boolean;\n  value: string;\n  nestedOptions?: IRadioOption[];\n  user?: ApiUser;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected: string[];\n  disabled?: boolean;\n  nestedCheckbox?: boolean;\n  loadingOptions?: string[];\n  isRound?: boolean;\n  onChange: (value: string[]) => void;\n  onClickLabel?: (e: React.MouseEvent, value?: string) => void;\n  className?: string;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected,\n  disabled,\n  nestedCheckbox,\n  loadingOptions,\n  isRound,\n  onChange,\n  onClickLabel,\n  className,\n}) => {\n  const handleChange = useLastCallback((event: ChangeEvent<HTMLInputElement>, nestedOptionList?: IRadioOption[]) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n\n    if (checked) {\n      newValues = unique([...selected, value]);\n      nestedOptionList?.forEach((nestedOption) => {\n        if (!newValues.includes(nestedOption.value)) {\n          newValues.push(nestedOption.value);\n        }\n      });\n    } else {\n      newValues = selected.filter((v) => v !== value);\n      if (nestedOptionList) {\n        newValues = newValues.filter((v) => !nestedOptionList.some((nestedOption) => nestedOption.value === v));\n      }\n    }\n    onChange(newValues);\n  });\n  const getCheckedNestedCount = useLastCallback((nestedOptions: IRadioOption[]) => {\n    const checkedCount = nestedOptions?.filter((nestedOption) => selected.includes(nestedOption.value)).length;\n    return checkedCount > 0 ? checkedCount : nestedOptions.length;\n  });\n\n  return (\n    <div id={id} className={buildClassName('radio-group', className)}>\n      {options.map((option) => {\n        return (\n          <Checkbox\n            label={option.label}\n            subLabel={option.subLabel}\n            value={option.value}\n            user={option.user}\n            checked={selected?.indexOf(option.value) !== -1}\n            disabled={option.disabled || disabled}\n            isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n            onChange={handleChange}\n            onClickLabel={onClickLabel}\n            nestedCheckbox={nestedCheckbox}\n            nestedCheckboxCount={getCheckedNestedCount(option.nestedOptions ?? [])}\n            nestedOptionList={option.nestedOptions}\n            values={selected}\n            isRound={isRound}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport getPointerPosition from '../../util/events/getPointerPosition';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\n\nimport styles from './Draggable.module.scss';\n\ntype TPoint = {\n  x: number;\n  y: number;\n};\n\ntype DraggableState = {\n  isDragging: boolean;\n  origin: TPoint;\n  translation: TPoint;\n  width?: number;\n  height?: number;\n};\n\ntype OwnProps = {\n  children: React.ReactNode;\n  onDrag: (translation: TPoint, id: number | string) => void;\n  onDragEnd: NoneToVoidFunction;\n  id: number | string;\n  style?: string;\n  knobStyle?: string;\n  isDisabled?: boolean;\n};\n\nconst ZERO_POINT: TPoint = { x: 0, y: 0 };\n\nconst Draggable: FC<OwnProps> = ({\n  children,\n  id,\n  onDrag,\n  onDragEnd,\n  style: externalStyle,\n  knobStyle,\n  isDisabled,\n}) => {\n  const lang = useOldLang();\n  const ref = useRef<HTMLDivElement>();\n\n  const [state, setState] = useState<DraggableState>({\n    isDragging: false,\n    origin: ZERO_POINT,\n    translation: ZERO_POINT,\n  });\n\n  const handleMouseDown = (e: React.MouseEvent | React.TouchEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const { x, y } = getPointerPosition(e);\n\n    setState({\n      ...state,\n      isDragging: true,\n      origin: { x, y },\n      width: ref.current?.offsetWidth,\n      height: ref.current?.offsetHeight,\n    });\n  };\n\n  const handleMouseMove = useCallback((e: MouseEvent | TouchEvent) => {\n    const { x, y } = getPointerPosition(e);\n\n    const translation = {\n      x: x - state.origin.x,\n      y: y - state.origin.y,\n    };\n\n    setState((current) => ({\n      ...current,\n      translation,\n    }));\n\n    onDrag(translation, id);\n  }, [id, onDrag, state.origin.x, state.origin.y]);\n\n  const handleMouseUp = useCallback(() => {\n    setState((current) => ({\n      ...current,\n      isDragging: false,\n      width: undefined,\n      height: undefined,\n    }));\n\n    onDragEnd();\n  }, [onDragEnd]);\n\n  useEffect(() => {\n    if (state.isDragging && isDisabled) {\n      setState((current) => ({\n        ...current,\n        isDragging: false,\n        width: undefined,\n        height: undefined,\n      }));\n    }\n  }, [isDisabled, state.isDragging]);\n\n  useEffect(() => {\n    if (state.isDragging) {\n      window.addEventListener('touchmove', handleMouseMove);\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('touchend', handleMouseUp);\n      window.addEventListener('touchcancel', handleMouseUp);\n      window.addEventListener('mouseup', handleMouseUp);\n    } else {\n      window.removeEventListener('touchmove', handleMouseMove);\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('touchend', handleMouseUp);\n      window.removeEventListener('touchcancel', handleMouseUp);\n      window.removeEventListener('mouseup', handleMouseUp);\n\n      setState((current) => ({\n        ...current,\n        translation: ZERO_POINT,\n      }));\n    }\n\n    return () => {\n      if (state.isDragging) {\n        window.removeEventListener('touchmove', handleMouseMove);\n        window.removeEventListener('mousemove', handleMouseMove);\n        window.removeEventListener('touchend', handleMouseUp);\n        window.removeEventListener('touchcancel', handleMouseUp);\n        window.removeEventListener('mouseup', handleMouseUp);\n      }\n    };\n  }, [handleMouseMove, handleMouseUp, state.isDragging]);\n\n  const fullClassName = buildClassName(styles.container, state.isDragging && styles.isDragging);\n\n  const cssStyles = useMemo(() => {\n    return buildStyle(\n      state.isDragging && `transform: translate(${state.translation.x}px, ${state.translation.y}px)`,\n      state.width ? `width: ${state.width}px` : undefined,\n      state.height ? `height: ${state.height}px` : undefined,\n      externalStyle,\n    );\n  }, [externalStyle, state.height, state.isDragging, state.translation.x, state.translation.y, state.width]);\n\n  return (\n    <div style={cssStyles} className={fullClassName} ref={ref}>\n      {children}\n\n      {!isDisabled && (\n        <div\n          aria-label={lang('i18n_dragToSort')}\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.knob, 'div-button', 'draggable-knob')}\n          onMouseDown={handleMouseDown}\n          onTouchStart={handleMouseDown}\n          style={knobStyle}\n        >\n          <Icon name=\"sort\" className={styles.icon} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Draggable);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"kWQHzIMD\",\"isDragging\":\"k0c5WDAy\",\"knob\":\"UpzQzcvs\",\"icon\":\"JIThxQAL\"};","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  disabled?: boolean;\n  readOnly?: boolean;\n  bold?: boolean;\n  className?: string;\n  renderValue?: (value: number) => TeactNode;\n  onChange: (value: number) => void;\n  isCenteredLayout?: boolean;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  disabled,\n  readOnly,\n  bold,\n  className,\n  renderValue,\n  onChange,\n  isCenteredLayout,\n}) => {\n  const lang = useOldLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    readOnly && 'readOnly',\n    bold && 'bold',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  function renderTopRow() {\n    if (isCenteredLayout) {\n      return (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {!options && (\n            <>\n              <span className=\"value-min\" dir=\"auto\">{min}</span>\n              <span className=\"label\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n              <span className=\"value-max\" dir=\"auto\">{max}</span>\n            </>\n          )}\n        </div>\n      );\n    }\n\n    if (!label) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"label\" dir=\"auto\">{label}</span>\n        {!options && (\n          <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={mainClassName}>\n      {renderTopRow()}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","import { memo, useMemo, useRef, useState } from '../../lib/teact/teact';\n\nimport buildStyle from '../../util/buildStyle';\nimport getPointerPosition from '../../util/events/getPointerPosition';\nimport { blobToFile } from '../../util/files';\nimport { clamp } from '../../util/math';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\nimport RangeSlider from './RangeSlider';\n\nimport styles from './ImageCropper.module.scss';\n\ntype OwnProps = {\n  onChange: (file: File) => void;\n  image?: HTMLImageElement;\n  maxOutputSize: number;\n  minOutputSize: number;\n};\n\nconst PREVIEW_SIZE = 400;\nconst MIN_ZOOM = 100;\nconst MAX_ZOOM = 200;\nconst CROP_AREA_INSET = 0.125 * REM;\nconst MODAL_INLINE_PADDING = REM * 2;\n\nconst ImageCropper = ({\n  onChange,\n  image,\n  maxOutputSize,\n  minOutputSize,\n}: OwnProps) => {\n  const [imagePosition, setImagePosition] = useState({ x: 0, y: 0 });\n  const [zoom, setZoom] = useState(MIN_ZOOM);\n  const isDragging = useRef(false);\n  const lastMousePosition = useRef({ x: 0, y: 0 });\n  const lastImagePosition = useRef({ x: 0, y: 0 });\n\n  const { width: windowWidth } = useWindowSize();\n  const previewContainerSize = Math.min(PREVIEW_SIZE, windowWidth - MODAL_INLINE_PADDING * 2);\n  const scaleFactor = image\n    ? Math.max(\n      previewContainerSize / image.width,\n      previewContainerSize / image.height,\n    ) : 1;\n  const zoomFactor = scaleFactor * zoom / 100;\n\n  const previewImageSize = useMemo(() => {\n    if (!image) return { width: 0, height: 0 };\n    return {\n      width: image.width * zoomFactor,\n      height: image.height * zoomFactor,\n    };\n  }, [image, zoomFactor]);\n\n  const clampPosition = (x: number, y: number, previewSize: { width: number; height: number }) => {\n    const radius = previewContainerSize / 2;\n    const imgHalfWidth = previewSize.width / 2;\n    const imgHalfHeight = previewSize.height / 2;\n\n    const maxOffsetX = Math.max(0, imgHalfWidth - radius);\n    const maxOffsetY = Math.max(0, imgHalfHeight - radius);\n\n    return {\n      x: clamp(x, -maxOffsetX, maxOffsetX),\n      y: clamp(y, -maxOffsetY, maxOffsetY),\n    };\n  };\n\n  const startDrag = (e: any) => {\n    isDragging.current = true;\n    lastMousePosition.current = getPointerPosition(e);\n    lastImagePosition.current = { ...imagePosition };\n    document.addEventListener('mousemove', moveDrag);\n    document.addEventListener('touchmove', moveDrag);\n    document.addEventListener('mouseup', endDrag);\n    document.addEventListener('touchend', endDrag);\n  };\n  const moveDrag = useLastCallback((e: any) => {\n    if ('touches' in e && e.touches.length > 1) return;\n    if (!isDragging.current) return;\n    const { x: mouseX, y: mouseY } = getPointerPosition(e);\n    const deltaX = mouseX - lastMousePosition.current.x;\n    const deltaY = mouseY - lastMousePosition.current.y;\n    const newPosition = clampPosition(\n      lastImagePosition.current.x + deltaX,\n      lastImagePosition.current.y + deltaY,\n      previewImageSize,\n    );\n    setImagePosition(newPosition);\n  });\n  const endDrag = useLastCallback(() => {\n    isDragging.current = false;\n    document.removeEventListener('mousemove', moveDrag);\n    document.removeEventListener('touchmove', moveDrag);\n    document.removeEventListener('mouseup', endDrag);\n    document.removeEventListener('touchend', endDrag);\n  });\n\n  const handleZoomChange = useLastCallback((newZoom: number) => {\n    const newZoomFactor = scaleFactor * newZoom / 100;\n    const newPreviewImageSize = {\n      width: image!.width * newZoomFactor,\n      height: image!.height * newZoomFactor,\n    };\n\n    const ratio = newZoom / zoom;\n    const newPosition = clampPosition(\n      imagePosition.x * ratio,\n      imagePosition.y * ratio,\n      newPreviewImageSize,\n    );\n\n    setZoom(newZoom);\n    setImagePosition(newPosition);\n  });\n\n  const handleCrop = () => {\n    if (!image) return;\n\n    const cropSize = previewContainerSize / zoomFactor;\n    const cropX = (image.width / 2) - (cropSize / 2) - (imagePosition.x / zoomFactor);\n    const cropY = (image.height / 2) - (cropSize / 2) - (imagePosition.y / zoomFactor);\n\n    const outputSize = Math.min(maxOutputSize, Math.max(minOutputSize, cropSize));\n\n    const canvas = document.createElement('canvas');\n    canvas.width = outputSize;\n    canvas.height = outputSize;\n    const ctx = canvas.getContext('2d')!;\n    ctx.drawImage(\n      image,\n      cropX, cropY,\n      cropSize, cropSize,\n      0, 0,\n      outputSize, outputSize,\n    );\n    canvas.toBlob((blob) => {\n      if (blob) onChange(blobToFile(blob, 'avatar.jpg'));\n    }, 'image/jpeg');\n  };\n\n  if (!image) return undefined;\n\n  const imageLeft = (previewContainerSize - previewImageSize.width) / 2 + imagePosition.x;\n  const imageTop = (previewContainerSize - previewImageSize.height) / 2 + imagePosition.y;\n  const backgroundImageStyle = buildStyle(\n    `width: ${previewImageSize.width}px`,\n    `height: ${previewImageSize.height}px`,\n    `left: ${imageLeft}px`,\n    `top: ${imageTop}px`,\n  );\n\n  const foregroundImageStyle = buildStyle(\n    `width: ${previewImageSize.width}px`,\n    `height: ${previewImageSize.height}px`,\n    `left: ${imageLeft - CROP_AREA_INSET}px`,\n    `top: ${imageTop - CROP_AREA_INSET}px`,\n  );\n\n  return (\n    <div>\n      <div\n        className={styles.previewContainer}\n        style={buildStyle(\n          `width: ${previewContainerSize}px`,\n          `height: ${previewContainerSize}px`,\n        )}\n      >\n        <img\n          src={image.src}\n          className={styles.backgroundImage}\n          style={backgroundImageStyle}\n          draggable={false}\n          onMouseDown={startDrag}\n          onTouchStart={startDrag}\n          alt=\"\"\n          role=\"presentation\"\n        />\n        <div className={styles.previewMask} />\n        <div className={styles.cropArea}>\n          <img\n            src={image.src}\n            className={styles.foregroundImage}\n            style={foregroundImageStyle}\n            draggable={false}\n            alt=\"\"\n            role=\"presentation\"\n          />\n        </div>\n      </div>\n      <div className={styles.bottomControls}>\n        <RangeSlider\n          className={styles.zoomSlider}\n          min={MIN_ZOOM}\n          max={MAX_ZOOM}\n          value={zoom}\n          onChange={handleZoomChange}\n        />\n        <Button className={styles.confirmButton} round color=\"primary\" onClick={handleCrop} ariaLabel=\"Crop\">\n          <Icon name=\"check\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ImageCropper);\n","// extracted by mini-css-extract-plugin\nexport default {\"previewContainer\":\"r_2tKzuI\",\"foregroundImage\":\"nJUDgVTD\",\"backgroundImage\":\"caUABR3p\",\"previewMask\":\"gR8q967h\",\"cropArea\":\"m_d02kUd\",\"confirmButton\":\"M0r9Gw03\",\"zoomSlider\":\"s73_IyYI\",\"bottomControls\":\"_YQbrXkD\"};","import {\n  memo,\n} from '../../lib/teact/teact';\n\nimport useImageLoader from '../../hooks/useImageLoader';\nimport useLang from '../../hooks/useLang';\n\nimport ImageCropper from './ImageCropper';\nimport Modal from './Modal';\n\nimport './CropModal.scss';\n\ntype OwnProps = {\n  file?: Blob;\n  onChange: (file: File) => void;\n  onClose: () => void;\n};\n\nconst MAX_OUTPUT_SIZE = 1024;\nconst MIN_OUTPUT_SIZE = 256;\n\nconst CropModal = ({ file, onChange, onClose }: OwnProps) => {\n  const lang = useLang();\n  const { image } = useImageLoader(file);\n  const isOpen = Boolean(file) && Boolean(image);\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('CropperTitle')}\n      className=\"CropModal\"\n      hasCloseButton\n      isCondensedHeader\n    >\n      <ImageCropper\n        onChange={onChange}\n        image={image}\n        maxOutputSize={MAX_OUTPUT_SIZE}\n        minOutputSize={MIN_OUTPUT_SIZE}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(CropModal);\n","import type { ElementRef, FC } from '../../lib/teact/teact';\nimport { memo, useCallback, useState } from '../../lib/teact/teact';\n\nimport { openSystemFilesDialog } from '../../util/systemFilesDialog';\n\nimport CropModal from './CropModal';\n\nimport styles from './SelectAvatar.module.scss';\n\ntype OwnProps = {\n  onChange: (file: File) => void;\n  inputRef: ElementRef<HTMLInputElement>;\n};\n\nconst SelectAvatar: FC<OwnProps> = ({\n  onChange,\n  inputRef,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n  }, [onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const handleClick = useCallback(() => {\n    openSystemFilesDialog('image/png, image/jpeg', (event) => {\n      const target = event.target as HTMLInputElement;\n      if (!target?.files?.[0]) {\n        return;\n      }\n      setSelectedFile(target.files[0]);\n    }, true);\n  }, []);\n\n  return (\n    <>\n      <input ref={inputRef} className={styles.input} onClick={handleClick} />\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </>\n  );\n};\n\nexport default memo(SelectAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"axfkbhWJ\"};","import type { ChangeEvent, FormEvent } from 'react';\nimport type { ElementRef, FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo, useCallback, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport { requestForcedReflow, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLTextAreaElement>;\n  id?: string;\n  className?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  success?: string;\n  disabled?: boolean;\n  readOnly?: boolean;\n  placeholder?: string;\n  autoComplete?: string;\n  maxLength?: number;\n  maxLengthIndicator?: string;\n  tabIndex?: number;\n  inputMode?: 'text' | 'none' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search';\n  onChange?: (e: ChangeEvent<HTMLTextAreaElement>) => void;\n  onInput?: (e: FormEvent<HTMLTextAreaElement>) => void;\n  onKeyPress?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\n  onPaste?: (e: React.ClipboardEvent<HTMLTextAreaElement>) => void;\n  noReplaceNewlines?: boolean;\n};\n\nconst TextArea: FC<OwnProps> = ({\n  ref,\n  id,\n  className,\n  value,\n  label,\n  error,\n  success,\n  disabled,\n  readOnly,\n  placeholder,\n  autoComplete,\n  inputMode,\n  maxLength,\n  maxLengthIndicator,\n  tabIndex,\n  onChange,\n  onInput,\n  onKeyPress,\n  onKeyDown,\n  onBlur,\n  onPaste,\n  noReplaceNewlines,\n}) => {\n  let textareaRef = useRef<HTMLTextAreaElement>();\n  if (ref) {\n    textareaRef = ref;\n  }\n\n  const lang = useOldLang();\n  const labelText = error || success || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error ? 'error' : success && 'success',\n    disabled && 'disabled',\n    readOnly && 'disabled',\n    labelText && 'with-label',\n    className,\n  );\n\n  const resizeHeight = useLastCallback((element: HTMLTextAreaElement) => {\n    requestMutation(() => {\n      element.style.height = '0';\n      requestForcedReflow(() => {\n        const newHeight = element.scrollHeight;\n        return () => {\n          element.style.height = `${newHeight}px`;\n        };\n      });\n    });\n  });\n\n  useLayoutEffect(() => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n    resizeHeight(textarea);\n  }, []);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    const target = e.currentTarget;\n    if (!noReplaceNewlines) {\n      const previousSelectionEnd = target.selectionEnd;\n      // TDesktop replaces newlines with spaces as well\n      target.value = target.value.replace(/\\n/g, ' ');\n      target.selectionEnd = previousSelectionEnd;\n    }\n    resizeHeight(target);\n    onChange?.(e);\n  }, [noReplaceNewlines, onChange]);\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <textarea\n        ref={textareaRef}\n        className=\"form-control\"\n        id={id}\n        dir=\"auto\"\n        value={value || ''}\n        tabIndex={tabIndex}\n        placeholder={placeholder}\n        maxLength={maxLength}\n        autoComplete={autoComplete}\n        inputMode={inputMode}\n        disabled={disabled}\n        readOnly={readOnly}\n        onChange={handleChange}\n        onInput={onInput}\n        onKeyPress={onKeyPress}\n        onKeyDown={onKeyDown}\n        onBlur={onBlur}\n        onPaste={onPaste}\n        aria-label={labelText}\n      />\n      {labelText && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n      {maxLengthIndicator && (\n        <div className=\"max-length-indicator\">{maxLengthIndicator}</div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(TextArea);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from './Button';\nimport Modal from './Modal';\n\ntype OwnProps = {\n  isOpen: boolean;\n  title?: string;\n  noDefaultTitle?: boolean;\n  header?: TeactNode;\n  textParts?: TextPart;\n  text?: string;\n  confirmLabel?: TeactNode;\n  confirmIsDestructive?: boolean;\n  isConfirmDisabled?: boolean;\n  isOnlyConfirm?: boolean;\n  areButtonsInColumn?: boolean;\n  className?: string;\n  children?: React.ReactNode;\n  confirmHandler: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  title,\n  noDefaultTitle,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmIsDestructive,\n  isConfirmDisabled,\n  isOnlyConfirm,\n  areButtonsInColumn,\n  className,\n  children,\n  confirmHandler,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useOldLang();\n\n  const containerRef = useRef<HTMLDivElement>();\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className={buildClassName('confirm', className)}\n      title={(title || (!noDefaultTitle ? lang('Telegram') : undefined))}\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts || children}\n      <div\n        className={areButtonsInColumn ? 'dialog-buttons-column' : 'dialog-buttons mt-2'}\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n          disabled={isConfirmDisabled}\n        >\n          {confirmLabel}\n        </Button>\n        {!isOnlyConfirm && <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n"],"names":["memo","PlaceholderChatInfo","_jsxs","className","children","_jsx","buildClassName","styles","value","root","filler","widget","RadioGroup","id","name","options","selected","disabled","loadingOption","onChange","onClickAction","subLabelClassName","isLink","withIcon","subLabel","handleChange","useCallback","event","currentTarget","onSubLabelClick","useLastCallback","map","option","Radio","label","checked","hidden","isCanCheckedInDisabled","isLoading","undefined","RangeSliderWithMarks","marks","rangeCount","sliderRef","useRef","rangeCountIndex","useMemo","indexOf","rangeValue","toString","useLayoutEffect","current","fillPercentage","length","thumbOffset","style","setProperty","mark","index","isFilled","ref","type","min","max","parseInt","target","newValue","step","FloatingActionButton","isShown","color","ariaLabel","onClick","lang","useOldLang","buttonClassName","Button","round","tabIndex","isRtl","RoundTimer","duration","onEnd","timeLeft","setTimeLeft","useState","useInterval","prev","useEffect","svg","width","height","cx","cy","r","transform","pathLength","circle","AnimatedCounter","text","formatCountdownShort","DEFAULT_DURATION","CUSTOM_EMOJI_SIZE","REM","Notification","notification","actions","getActions","useLang","localId","message","action","actionText","cacheBreaker","disableClickDismiss","dismissAction","icon","shouldUseCustomIcon","customEmojiIconId","shouldShowTimer","title","containerSelector","isOpen","setIsOpen","timerRef","transitionClassNames","useShowTransitionDeprecated","handleDismiss","dismissNotification","closeAndDismiss","force","setTimeout","ANIMATION_END_DELAY","payload","handleActionClick","Array","isArray","forEach","cb","handleClick","captureEscKeyListener","window","clearTimeout","handleMouseEnter","handleMouseLeave","renderedTitle","isLangFnParam","with","renderText","renderedMessage","renderedActionText","renderedIcon","CustomEmoji","forceAlways","size","documentId","StarIcon","Icon","Portal","onMouseEnter","onMouseLeave","Boolean","Math","ceil","withGlobal","global","stars","ton","starBalance","balance","tonBalance","tonUsdRate","appConfig","TON_USD_RATE_DEFAULT","isModalOpen","onCloseAnimationEnd","currency","openStarsBalanceModal","isTonMode","currentBalance","shouldRender","useShowTransition","withShouldRender","handleGetMoreStars","formatTonAsIcon","convertTonFromNanos","amount","formatStarsAsIcon","formatStarsAmount","withNodes","withMarkdown","formatCurrencyAsString","convertTonToUsd","code","Link","isPrimary","ANIMATION_DURATION","freezeWhenClosed","Modal","dialogRef","contentClassName","headerClassName","isSlim","header","hasCloseButton","hasAbsoluteCloseButton","absoluteCloseButtonColor","noBackdrop","noBackdropClose","dialogStyle","isLowStackPriority","dialogContent","onClose","onEnter","withBalanceBar","isCondensedHeader","currencyInBalanceBar","modalRef","withCloseButton","disableDirectTextInput","enableDirectTextInput","handleEnter","e","preventDefault","captureKeyboardListeners","onEsc","trapFocus","useHistoryBack","isActive","onBack","useLayoutEffectWithPrevDeps","prevIsOpen","document","body","classList","toggle","beginHeavyAnimation","remove","fullClassName","role","ModalStarBalanceBar","closeButton","renderHeader","ListItem","buttonRef","iconClassName","leftElement","menuBubbleClassName","secondaryIcon","secondaryIconClassName","rightElement","allowDisabledClick","ripple","narrow","inactive","focus","destructive","withPrimaryColor","multiline","isStatic","allowSelection","withColorTransition","contextActions","withPortalForMenu","href","onMouseDown","onContextMenu","clickArg","onSecondaryIconClick","onDragEnter","nonInteractive","containerRef","isTouched","markIsTouched","unmarkIsTouched","useFlag","isContextMenuOpen","contextMenuAnchor","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","closest","getMenuElement","querySelector","getLayout","withPortal","handleClickEvent","ctrlKey","metaKey","shiftKey","button","MouseButton","Main","Auxiliary","IS_TOUCH_ENV","requestMeasure","handleSecondaryIconClick","handleMouseDown","handleSecondaryIconMouseDown","useFastClick","stopPropagation","Secondary","ButtonElementTag","dir","RippleEffect","Menu","anchor","autoClose","bubbleClassName","MenuSeparator","key","MenuItem","handler","SCROLL_DURATION","IS_IOS","IS_ANDROID","TabList","tabs","activeTab","onSwitchTab","contextRootElementSelector","tabClassName","previousActiveTab","usePreviousDeprecated","useHorizontalScroll","container","scrollWidth","offsetWidth","scrollLeft","activeTabElement","childNodes","offsetLeft","activeTabOffsetLeft","activeTabOffsetWidth","newLeft","abs","animateHorizontalScroll","tab","i","Tab","isBlocked","badgeCount","isBadgeActive","Badge","isAlternateColor","ShowTransition","onlyInput","Spinner","isHidden","isCustom","noCloseTransition","shouldAnimateFirstRender","externalRef","prevChildren","fromChildrenRef","isFirstRender","noMountTransition","classNames","tabRef","add","tabEl","prevTabEl","parentElement","contains","requestMutation","platformEl","prevPlatformEl","shiftLeft","scaleFactor","clientWidth","requestForcedReflow","forceReflow","SIZES","s","m","l","xl","MIN_PROGRESS","ProgressSpinner","progress","square","transparent","noCross","rotationOffset","withColor","canvasRef","progressRef","useStateRef","dpr","useDevicePixelRatio","useDynamicColorListener","growStartedAt","prevProgress","isFirst","growFrom","animate","Date","now","targetProgress","t","animationFactor","timingFunctions","easeOutQuad","currentProgress","canvas","strokeWidth","shouldInit","centerCoordinate","radius","offset","startAngle","PI","endAngle","ctx","getContext","lineCap","strokeStyle","lineWidth","clearRect","beginPath","arc","stroke","drawSpinnerArc","SearchInput","resultsItemSelector","inputId","focused","spinnerColor","spinnerBackgroundColor","placeholder","autoComplete","canClose","autoFocusSearch","hasUpButton","hasDownButton","teactExperimentControlled","withBackIcon","onStartBackspace","onReset","onFocus","onBlur","onUpClick","onDownClick","onSpinnerClick","inputRef","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","blur","oldLang","handleFocus","handleKeyDown","element","selectionStart","selectionEnd","Transition","shouldCleanup","activeKey","Number","slideClassName","Loading","backgroundColor","onKeyDown","AvatarEditable","isForForum","currentAvatarBlobUrl","selectedFile","setSelectedFile","croppedBlobUrl","setCroppedBlobUrl","handleAvatarCrop","croppedImg","URL","revokeObjectURL","createObjectURL","handleModalClose","labelClassName","files","accept","src","draggable","alt","CropModal","file","InfiniteScroll","items","itemSelector","preloadBackwards","sensitiveArea","withAbsolutePositioning","maxHeight","noScrollRestore","noScrollRestoreOnTop","noFastList","cacheBuster","beforeChildren","scrollContainerClosest","onLoadMore","onScroll","onWheel","onDragOver","onDragLeave","stateRef","loadMoreBackwards","loadMoreForwards","debounce","noScroll","direction","LoadMoreDirection","Backwards","Forwards","scrollContainer","scrollHeight","clientHeight","state","newScrollTop","listItemElements","querySelectorAll","currentAnchor","from","includes","scrollTop","newAnchorTop","getBoundingClientRect","top","currentAnchorTop","nextAnchor","resetScroll","isScrollTopJustUpdated","handleScroll","listLength","offsetHeight","isNearTop","offsetTop","isNearBottom","isUpdated","nextAnchorTop","offsetParent","handleNativeScroll","addEventListener","removeEventListener","teactFastList","buildStyle","Skeleton","variant","animation","forceAspectRatio","inline","aspectRatio","ShowMoreButton","count","itemName","itemPluralName","isText","TextTimer","langKey","endsAt","forceUpdate","useForceUpdate","serverTime","getServerTime","time","formatMediaDuration","timeParts","split","timeCounter","part","_Fragment","Switcher","noAnimation","onCheck","props","hasArrow","error","labelText","htmlFor","openTimeout","isFirstTimeActivation","ResponsiveHoverButton","onActivate","buttonProps","isMouseInside","CheckboxGroup","nestedCheckbox","loadingOptions","isRound","onClickLabel","nestedOptionList","newValues","unique","nestedOption","push","filter","v","some","getCheckedNestedCount","nestedOptions","checkedCount","Checkbox","user","nestedCheckboxCount","values","ZERO_POINT","x","y","Draggable","onDrag","onDragEnd","externalStyle","knobStyle","isDisabled","setState","isDragging","origin","translation","getPointerPosition","handleMouseMove","handleMouseUp","cssStyles","onTouchStart","RangeSlider","readOnly","bold","renderValue","isCenteredLayout","mainClassName","trackWidth","CROP_AREA_INSET","MODAL_INLINE_PADDING","ImageCropper","image","maxOutputSize","minOutputSize","imagePosition","setImagePosition","zoom","setZoom","lastMousePosition","lastImagePosition","windowWidth","useWindowSize","previewContainerSize","zoomFactor","previewImageSize","clampPosition","previewSize","imgHalfWidth","imgHalfHeight","maxOffsetX","maxOffsetY","clamp","startDrag","moveDrag","endDrag","touches","mouseX","mouseY","deltaX","deltaY","newPosition","handleZoomChange","newZoom","newZoomFactor","newPreviewImageSize","ratio","imageLeft","imageTop","backgroundImageStyle","foregroundImageStyle","handleCrop","cropSize","cropX","cropY","outputSize","createElement","drawImage","toBlob","blob","blobToFile","useImageLoader","SelectAvatar","openSystemFilesDialog","TextArea","success","inputMode","maxLength","maxLengthIndicator","onInput","onKeyPress","onPaste","noReplaceNewlines","textareaRef","resizeHeight","newHeight","textarea","previousSelectionEnd","replace","ConfirmDialog","noDefaultTitle","textParts","confirmLabel","confirmIsDestructive","isConfirmDisabled","isOnlyConfirm","areButtonsInColumn","confirmHandler","handleSelectWithEnter","useKeyboardListNavigation","textPart"],"sourceRoot":""}