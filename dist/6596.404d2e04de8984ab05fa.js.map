{"version":3,"file":"6596.404d2e04de8984ab05fa.js","mappings":"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","sources":["webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.module.scss?22c9","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.tsx","webpack://telegram-t/./src/util/particles.ts","webpack://telegram-t/./src/components/modals/common/SpeedingDiamond.module.scss?0154","webpack://telegram-t/./src/components/modals/common/SpeedingDiamond.tsx","webpack://telegram-t/./src/components/modals/common/SwayingStar.module.scss?cb91","webpack://telegram-t/./src/components/modals/common/SwayingStar.tsx","webpack://telegram-t/./src/components/modals/common/ParticlesHeader.tsx","webpack://telegram-t/./src/components/modals/common/ParticlesHeader.module.scss?e18b","webpack://telegram-t/./src/components/modals/common/TableAboutModal.tsx","webpack://telegram-t/./src/components/modals/common/TableAboutModal.module.scss?0459","webpack://telegram-t/./src/components/common/pickers/PickerModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.module.scss?7af2","webpack://telegram-t/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://telegram-t/./src/components/modals/common/TableInfoModal.tsx","webpack://telegram-t/./src/components/common/PeerBadge.module.scss?732c","webpack://telegram-t/./src/components/common/PeerBadge.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"options\":\"OnCj9kef\",\"option\":\"tpTHQAUF\",\"active\":\"U_9MXPG5\",\"wideOption\":\"dJcJl33b\",\"optionTop\":\"x9G4lqMf\",\"stackedStars\":\"etXLebjM\",\"stackedStar\":\"swttXv9P\",\"optionBottom\":\"tK7La7L2\",\"moreOptions\":\"AWXBaWLW\",\"iconDown\":\"zWYHZJmd\"};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiStarGiveawayOption, ApiStarTopupOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './StarTopupOptionList.module.scss';\n\nconst MAX_STARS_COUNT = 6;\n\ntype OwnProps = {\n  isActive?: boolean;\n  options?: ApiStarTopupOption[] | ApiStarGiveawayOption[];\n  selectedStarOption?: ApiStarTopupOption | ApiStarGiveawayOption;\n  selectedStarCount?: number;\n  starsNeeded?: number;\n  className?: string;\n  onClick: (option: ApiStarTopupOption | ApiStarGiveawayOption) => void;\n};\n\nconst StarTopupOptionList: FC<OwnProps> = ({\n  isActive,\n  className,\n  options,\n  selectedStarOption,\n  selectedStarCount,\n  starsNeeded,\n  onClick,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n\n  useEffect(() => {\n    if (!isActive) {\n      unmarkOptionsExtended();\n    }\n  }, [isActive]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!options) return [undefined, false];\n\n    const maxOption = options.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption | ApiStarGiveawayOption; starsCount: number; isWide: boolean }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    options.forEach((option, index) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: Math.min(currentStackedStarsCount, MAX_STARS_COUNT),\n        isWide: index === options.length - 1,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, options, starsNeeded]);\n\n  return (\n    <div className={buildClassName(styles.options, className)}>\n      {renderingOptions?.map(({ option, starsCount, isWide }) => {\n        const length = renderingOptions?.length;\n        const isOdd = length % 2 === 0;\n        const isActiveOption = option === selectedStarOption;\n\n        let perUserStarCount;\n        if (option && 'winners' in option) {\n          const winner = option.winners.find((opt) => opt.users === selectedStarCount)\n            || option.winners.reduce((max, opt) => (opt.users > max.users ? opt : max), option.winners[0]);\n          perUserStarCount = winner?.perUserStars;\n        }\n\n        return (\n          <div\n            className={buildClassName(\n              styles.option, (!isOdd && isWide) && styles.wideOption, isActiveOption && styles.active,\n            )}\n            key={option.stars}\n            onClick={() => onClick?.(option)}\n          >\n            <div className={styles.optionTop}>\n              +\n              {formatInteger(option.stars)}\n              <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n                {Array.from({ length: starsCount }).map(() => (\n                  <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n                ))}\n              </div>\n            </div>\n            <div className={styles.optionBottom}>\n              {formatCurrency(lang, option.amount, option.currency)}\n            </div>\n            {(isActiveOption || (selectedStarOption && 'winners' in selectedStarOption))\n              && Boolean(perUserStarCount) && (\n              <div className={styles.optionBottom}>\n                <div className={styles.perUserStars}>\n                  {renderText(oldLang('BoostGift.Stars.PerUser', formatInteger(perUserStarCount)))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      })}\n      {!areOptionsExtended && canExtend && (\n        <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n          {oldLang('Stars.Purchase.ShowMore')}\n          <Icon className={styles.iconDown} name=\"down\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StarTopupOptionList);\n","// GPU-Accelerated Particle System Library\n\nimport generateUniqueId from './generateUniqueId.ts';\n\nimport { getIsInBackground } from '../hooks/window/useBackgroundMode.ts';\n\nexport interface ParticleConfig {\n  width?: number;\n  height?: number;\n  particleCount?: number;\n  color?: Color | ColorPair;\n  speed?: number;\n  baseSize?: number;\n  minSpawnRadius?: number;\n  maxSpawnRadius?: number;\n  distanceLimit?: number;\n  fadeInTime?: number;\n  fadeOutTime?: number;\n  minLifetime?: number;\n  maxLifetime?: number;\n  maxStartTimeDelay?: number;\n  edgeFadeZone?: number;\n  centerShift?: readonly [number, number];\n  accelerationFactor?: number;\n  selfDestroyTime?: number;\n}\n\ninterface Locations {\n  attributes: {\n    startPosition: number;\n    velocity: number;\n    startTime: number;\n    lifetime: number;\n    size: number;\n    baseOpacity: number;\n    color: number;\n  };\n  uniforms: {\n    resolution: WebGLUniformLocation | null;\n    time: WebGLUniformLocation | null;\n    canvasWidth: WebGLUniformLocation | null;\n    canvasHeight: WebGLUniformLocation | null;\n    accelerationFactor: WebGLUniformLocation | null;\n    fadeInTime: WebGLUniformLocation | null;\n    fadeOutTime: WebGLUniformLocation | null;\n    edgeFadeZone: WebGLUniformLocation | null;\n    rotationMatrices: WebGLUniformLocation | null;\n    spawnCenter: WebGLUniformLocation | null;\n  };\n}\n\ninterface Buffers {\n  startPosition: WebGLBuffer | null;\n  velocity: WebGLBuffer | null;\n  startTime: WebGLBuffer | null;\n  lifetime: WebGLBuffer | null;\n  size: WebGLBuffer | null;\n  baseOpacity: WebGLBuffer | null;\n  color: WebGLBuffer | null;\n}\n\ninterface ParticleSystem {\n  id: string;\n  config: Required<ParticleConfig>;\n  buffers: Buffers;\n  startTime: number;\n  seed: number;\n  centerX: number;\n  centerY: number;\n  avgDistance: number;\n  selfDestroyTimeout?: number;\n}\n\ninterface ParticleSystemManager {\n  addSystem: (options: Partial<ParticleConfig>) => NoneToVoidFunction;\n}\n\ntype Color = readonly [number, number, number];\ntype ColorPair = readonly [Color, Color];\n\nexport const PARTICLE_COLORS = {\n  blue: [0, 152 / 255, 234 / 255] as Color,\n  blueGradient: [\n    [1 / 255, 88 / 255, 175 / 255],\n    [103 / 255, 208 / 255, 255 / 255],\n  ] as ColorPair,\n  purple: [150 / 255, 111 / 255, 254 / 255] as Color,\n  purpleGradient: [\n    [107 / 255, 147 / 255, 255 / 255],\n    [228 / 255, 106 / 255, 206 / 255],\n  ] as ColorPair,\n  gold: [255 / 255, 191 / 255, 10 / 255] as Color,\n  goldGradient: [\n    [253 / 255, 235 / 255, 50 / 255],\n    [215 / 255, 89 / 255, 2 / 255],\n  ] as ColorPair,\n};\n\nexport const PARTICLE_BURST_PARAMS: Partial<ParticleConfig> = {\n  particleCount: 5,\n  distanceLimit: 1,\n  fadeInTime: 0.05,\n  minLifetime: 3,\n  maxLifetime: 3,\n  maxStartTimeDelay: 0,\n  selfDestroyTime: 3,\n  minSpawnRadius: 5,\n  maxSpawnRadius: 50,\n};\n\nconst DEFAULT_CONFIG: Required<ParticleConfig> = {\n  width: 350,\n  height: 230,\n  particleCount: 100,\n  color: [0, 152 / 255, 234 / 255], // #0098EA (TON)\n  speed: 18,\n  baseSize: 6,\n  minSpawnRadius: 35,\n  maxSpawnRadius: 70,\n  distanceLimit: 0.7,\n  fadeInTime: 0.25,\n  fadeOutTime: 1,\n  minLifetime: 4,\n  maxLifetime: 6,\n  maxStartTimeDelay: 3,\n  edgeFadeZone: 50,\n  centerShift: [0, 0],\n  accelerationFactor: 3,\n  selfDestroyTime: 0,\n};\n\nconst SIZE_SMALL = 0.67;\nconst SIZE_MEDIUM = 1.33;\nconst SIZE_LARGE = 2.2;\n\nconst canvasManagers = new Map<HTMLCanvasElement, ParticleSystemManager>();\n\nexport function setupParticles(\n  canvas: HTMLCanvasElement,\n  options: Partial<ParticleConfig>,\n) {\n  let manager = canvasManagers.get(canvas);\n  if (!manager) {\n    manager = createParticleSystemManager(canvas);\n    canvasManagers.set(canvas, manager);\n  }\n\n  return manager.addSystem(options);\n}\n\nfunction createParticleSystemManager(canvas: HTMLCanvasElement) {\n  const gl = canvas.getContext('webgl', {\n    alpha: true,\n    antialias: false,\n    preserveDrawingBuffer: false,\n  })!;\n\n  if (!gl) {\n    throw new Error('WebGL not supported');\n  }\n\n  const vertexShader = createShader(gl, gl.VERTEX_SHADER, VERTEX_SHADER_SOURCE);\n  const fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, FRAGMENT_SHADER_SOURCE);\n\n  if (!vertexShader || !fragmentShader) {\n    throw new Error('Failed to create shaders');\n  }\n\n  const program = createProgram(gl, vertexShader, fragmentShader)!;\n  if (!program) {\n    throw new Error('Failed to create shader program');\n  }\n\n  const dpr = window.devicePixelRatio || 1;\n  const systems = new Map<string, ParticleSystem>();\n\n  const locations: Locations = {\n    attributes: {\n      startPosition: gl.getAttribLocation(program, 'a_startPosition'),\n      velocity: gl.getAttribLocation(program, 'a_velocity'),\n      startTime: gl.getAttribLocation(program, 'a_startTime'),\n      lifetime: gl.getAttribLocation(program, 'a_lifetime'),\n      size: gl.getAttribLocation(program, 'a_size'),\n      baseOpacity: gl.getAttribLocation(program, 'a_baseOpacity'),\n      color: gl.getAttribLocation(program, 'a_color'),\n    },\n    uniforms: {\n      resolution: gl.getUniformLocation(program, 'u_resolution'),\n      time: gl.getUniformLocation(program, 'u_time'),\n      canvasWidth: gl.getUniformLocation(program, 'u_canvasWidth'),\n      canvasHeight: gl.getUniformLocation(program, 'u_canvasHeight'),\n      accelerationFactor: gl.getUniformLocation(program, 'u_accelerationFactor'),\n      fadeInTime: gl.getUniformLocation(program, 'u_fadeInTime'),\n      fadeOutTime: gl.getUniformLocation(program, 'u_fadeOutTime'),\n      edgeFadeZone: gl.getUniformLocation(program, 'u_edgeFadeZone'),\n      rotationMatrices: gl.getUniformLocation(program, 'u_rotationMatrices'),\n      spawnCenter: gl.getUniformLocation(program, 'u_spawnCenter'),\n    },\n  };\n\n  let animationId: number | undefined;\n  let unsubscribeFromIsInBackground: NoneToVoidFunction | undefined = undefined;\n\n  function initParticleData(system: ParticleSystem): void {\n    const rng = new SeededRandom(system.seed);\n    const { config } = system;\n\n    const startPositions = new Float32Array(config.particleCount * 2);\n    const velocities = new Float32Array(config.particleCount * 2);\n    const startTimes = new Float32Array(config.particleCount);\n    const lifetimes = new Float32Array(config.particleCount);\n    const sizes = new Float32Array(config.particleCount);\n    const baseOpacities = new Float32Array(config.particleCount);\n    const colors = new Float32Array(config.particleCount * 3); // RGB for each particle\n\n    for (let i = 0; i < config.particleCount; i++) {\n      const angle = rng.next() * Math.PI * 2;\n      const spawnRadius = rng.nextBetween(config.minSpawnRadius, config.maxSpawnRadius);\n\n      const cos = Math.cos(angle);\n      const sin = Math.sin(angle);\n\n      const spawnX = system.centerX + cos * spawnRadius;\n      const spawnY = system.centerY + sin * spawnRadius;\n\n      startPositions[i * 2] = spawnX * dpr;\n      startPositions[i * 2 + 1] = spawnY * dpr;\n\n      lifetimes[i] = rng.nextBetween(config.minLifetime, config.maxLifetime);\n      startTimes[i] = rng.next() * config.maxStartTimeDelay;\n\n      const travelDist = rng.nextBetween(\n        system.avgDistance * config.distanceLimit * 0.5,\n        system.avgDistance * config.distanceLimit,\n      );\n\n      // Calculate speed based on travel distance and lifetime\n      const speed = (travelDist / lifetimes[i]) * dpr;\n\n      velocities[i * 2] = cos * speed;\n      velocities[i * 2 + 1] = sin * speed;\n\n      const sizeVariant = rng.next();\n      if (sizeVariant < 0.3) {\n        sizes[i] = config.baseSize * SIZE_SMALL * dpr;\n      } else if (sizeVariant < 0.7) {\n        sizes[i] = config.baseSize * SIZE_MEDIUM * dpr;\n      } else {\n        sizes[i] = config.baseSize * SIZE_LARGE * dpr;\n      }\n\n      baseOpacities[i] = rng.nextBetween(0.3, 0.8);\n\n      const particleColor = resolveColor(config.color, rng);\n      colors[i * 3] = particleColor[0];\n      colors[i * 3 + 1] = particleColor[1];\n      colors[i * 3 + 2] = particleColor[2];\n    }\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.startPosition);\n    gl.bufferData(gl.ARRAY_BUFFER, startPositions, gl.STATIC_DRAW);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.velocity);\n    gl.bufferData(gl.ARRAY_BUFFER, velocities, gl.STATIC_DRAW);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.startTime);\n    gl.bufferData(gl.ARRAY_BUFFER, startTimes, gl.STATIC_DRAW);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.lifetime);\n    gl.bufferData(gl.ARRAY_BUFFER, lifetimes, gl.STATIC_DRAW);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.size);\n    gl.bufferData(gl.ARRAY_BUFFER, sizes, gl.STATIC_DRAW);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.baseOpacity);\n    gl.bufferData(gl.ARRAY_BUFFER, baseOpacities, gl.STATIC_DRAW);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.color);\n    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n  }\n\n  function initCanvas(): void {\n    // Find the max canvas size from all systems\n    let maxWidth = 0;\n    let maxHeight = 0;\n    systems.forEach((system) => {\n      maxWidth = Math.max(maxWidth, system.config.width);\n      maxHeight = Math.max(maxHeight, system.config.height);\n    });\n\n    // Default to first system's size if no systems yet\n    if (systems.size === 0) {\n      maxWidth = DEFAULT_CONFIG.width;\n      maxHeight = DEFAULT_CONFIG.height;\n    }\n\n    if (canvas.width !== maxWidth * dpr || canvas.height !== maxHeight * dpr) {\n      canvas.width = maxWidth * dpr;\n      canvas.height = maxHeight * dpr;\n      canvas.style.width = maxWidth + 'px';\n      canvas.style.height = maxHeight + 'px';\n    }\n\n    gl.viewport(0, 0, canvas.width, canvas.height);\n  }\n\n  function initWebGLState(): void {\n    gl.useProgram(program);\n\n    // Set static uniforms that will be updated per system\n    gl.uniform2f(locations.uniforms.resolution, canvas.width, canvas.height);\n\n    gl.uniformMatrix2fv(locations.uniforms.rotationMatrices, false, getRotations());\n\n    // Set blending state\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n    // Set clear color\n    gl.clearColor(0, 0, 0, 0);\n  }\n\n  function render(currentTime: number): void {\n    if (!animationId) return;\n\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    // Render all systems\n    systems.forEach((system) => {\n      const systemTime = (currentTime - system.startTime) / 1000;\n\n      // Set uniforms for this system\n      gl.uniform1f(locations.uniforms.time, systemTime);\n      gl.uniform1f(locations.uniforms.canvasWidth, system.config.width * dpr);\n      gl.uniform1f(locations.uniforms.canvasHeight, system.config.height * dpr);\n      gl.uniform1f(locations.uniforms.accelerationFactor, system.config.accelerationFactor);\n      gl.uniform1f(locations.uniforms.fadeInTime, system.config.fadeInTime);\n      gl.uniform1f(locations.uniforms.fadeOutTime, system.config.fadeOutTime);\n      gl.uniform1f(locations.uniforms.edgeFadeZone, system.config.edgeFadeZone * dpr);\n      gl.uniform2f(locations.uniforms.spawnCenter, system.centerX * dpr, system.centerY * dpr);\n\n      // Bind attributes for this system\n      gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.startPosition);\n      gl.enableVertexAttribArray(locations.attributes.startPosition);\n      gl.vertexAttribPointer(locations.attributes.startPosition, 2, gl.FLOAT, false, 0, 0);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.velocity);\n      gl.enableVertexAttribArray(locations.attributes.velocity);\n      gl.vertexAttribPointer(locations.attributes.velocity, 2, gl.FLOAT, false, 0, 0);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.startTime);\n      gl.enableVertexAttribArray(locations.attributes.startTime);\n      gl.vertexAttribPointer(locations.attributes.startTime, 1, gl.FLOAT, false, 0, 0);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.lifetime);\n      gl.enableVertexAttribArray(locations.attributes.lifetime);\n      gl.vertexAttribPointer(locations.attributes.lifetime, 1, gl.FLOAT, false, 0, 0);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.size);\n      gl.enableVertexAttribArray(locations.attributes.size);\n      gl.vertexAttribPointer(locations.attributes.size, 1, gl.FLOAT, false, 0, 0);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.baseOpacity);\n      gl.enableVertexAttribArray(locations.attributes.baseOpacity);\n      gl.vertexAttribPointer(locations.attributes.baseOpacity, 1, gl.FLOAT, false, 0, 0);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.color);\n      gl.enableVertexAttribArray(locations.attributes.color);\n      gl.vertexAttribPointer(locations.attributes.color, 3, gl.FLOAT, false, 0, 0);\n\n      // Draw particles for this system\n      gl.drawArrays(gl.POINTS, 0, system.config.particleCount);\n    });\n\n    animationId = requestAnimationFrame(render);\n  }\n\n  function addSystem(options: Partial<ParticleConfig>) {\n    const id = generateUniqueId();\n    const config: Required<ParticleConfig> = { ...DEFAULT_CONFIG, ...options };\n\n    const buffers: Buffers = {\n      startPosition: gl.createBuffer(),\n      velocity: gl.createBuffer(),\n      startTime: gl.createBuffer(),\n      lifetime: gl.createBuffer(),\n      size: gl.createBuffer(),\n      baseOpacity: gl.createBuffer(),\n      color: gl.createBuffer(),\n    };\n\n    const system: ParticleSystem = {\n      id,\n      config,\n      buffers,\n      startTime: performance.now(),\n      seed: Math.floor(Math.random() * 1000000),\n      centerX: config.width / 2 + config.centerShift[0],\n      centerY: config.height / 2 + config.centerShift[1],\n      avgDistance: (config.width / 2 + config.height / 2) / 2,\n    };\n\n    systems.set(id, system);\n\n    initParticleData(system);\n    initCanvas();\n\n    if (config.selfDestroyTime) {\n      system.selfDestroyTimeout = window.setTimeout(() => {\n        removeSystem(id);\n      }, config.selfDestroyTime * 1000);\n    }\n\n    if (systems.size === 1) {\n      initWebGLState();\n\n      unsubscribeFromIsInBackground = getIsInBackground.subscribe(() => {\n        const isActive = !getIsInBackground();\n        if (isActive && !animationId) {\n          animationId = requestAnimationFrame(render);\n        } else if (!isActive && animationId) {\n          cancelAnimationFrame(animationId);\n          animationId = undefined;\n        }\n      });\n\n      animationId = requestAnimationFrame(render);\n    }\n\n    return () => removeSystem(id);\n  }\n\n  function removeSystem(id: string): void {\n    const system = systems.get(id);\n    if (!system) return;\n\n    if (system.selfDestroyTimeout) {\n      clearTimeout(system.selfDestroyTimeout);\n    }\n\n    Object.values(system.buffers).forEach((buffer) => {\n      if (buffer) gl.deleteBuffer(buffer);\n    });\n\n    systems.delete(id);\n\n    if (systems.size === 0) {\n      destroy();\n    }\n  }\n\n  function destroy(): void {\n    if (animationId !== undefined) {\n      cancelAnimationFrame(animationId);\n      animationId = undefined;\n    }\n\n    unsubscribeFromIsInBackground?.();\n\n    systems.clear();\n\n    gl.deleteProgram(program);\n    gl.deleteShader(vertexShader!);\n    gl.deleteShader(fragmentShader!);\n\n    canvasManagers.delete(canvas);\n  }\n\n  return { addSystem };\n}\n\nconst VERTEX_SHADER_SOURCE = `\n    attribute vec2 a_startPosition;\n    attribute vec2 a_velocity;\n    attribute float a_startTime;\n    attribute float a_lifetime;\n    attribute float a_size;\n    attribute float a_baseOpacity;\n    attribute vec3 a_color;\n\n    uniform vec2 u_resolution;\n    uniform float u_time;\n    uniform float u_canvasWidth;\n    uniform float u_canvasHeight;\n    uniform float u_accelerationFactor;\n    uniform float u_fadeInTime;\n    uniform float u_fadeOutTime;\n    uniform float u_edgeFadeZone;\n    uniform mat2 u_rotationMatrices[18];\n    uniform vec2 u_spawnCenter;\n\n    varying float v_opacity;\n    varying vec3 v_color;\n\n    void main() {\n        float totalAge = u_time - a_startTime;\n        float age = mod(totalAge, a_lifetime);\n\n        // For the initial animation, fade in all particles\n        float globalFadeIn = min(u_time / u_fadeInTime, 1.0);\n\n        float lifeRatio = age / a_lifetime;\n\n        // Calculate rotation based on completed lifecycles\n        float lifecycleCount = floor(totalAge / a_lifetime);\n        int rotationIndex = int(mod(lifecycleCount, 18.0));\n\n        // Get rotation matrix\n        mat2 rotationMatrix = u_rotationMatrices[rotationIndex];\n\n        // Rotate start position around spawn center\n        vec2 startOffset = a_startPosition - u_spawnCenter;\n        vec2 rotatedStartOffset = rotationMatrix * startOffset;\n        vec2 rotatedStartPosition = u_spawnCenter + rotatedStartOffset;\n\n        // Apply rotation matrix to velocity\n        vec2 rotatedVelocity = rotationMatrix * a_velocity;\n\n        // Apply shoot-out effect: fast initial speed that slows down\n        float speedMultiplier = 1.0 + u_accelerationFactor * exp(-3.0 * lifeRatio);\n\n        vec2 position = rotatedStartPosition + rotatedVelocity * age * speedMultiplier;\n\n        float opacity = 1.0;\n        if (lifeRatio < u_fadeInTime / a_lifetime) {\n            opacity = (lifeRatio * a_lifetime) / u_fadeInTime;\n        } else if (lifeRatio > 1.0 - u_fadeOutTime / a_lifetime) {\n            opacity = (1.0 - lifeRatio) * a_lifetime / u_fadeOutTime;\n        }\n        opacity *= a_baseOpacity * globalFadeIn;\n\n        float distToLeft = position.x;\n        float distToRight = u_canvasWidth - position.x;\n        float distToTop = position.y;\n        float distToBottom = u_canvasHeight - position.y;\n        float distToEdge = min(min(distToLeft, distToRight), min(distToTop, distToBottom));\n\n        if (distToEdge < u_edgeFadeZone) {\n            opacity *= distToEdge / u_edgeFadeZone;\n        }\n\n        vec2 clipSpace = ((position / u_resolution) * 2.0 - 1.0) * vec2(1, -1);\n        gl_Position = vec4(clipSpace, 0, 1);\n        gl_PointSize = a_size;\n        v_opacity = opacity;\n        v_color = a_color;\n    }\n`;\n\nconst FRAGMENT_SHADER_SOURCE = `\n    precision mediump float;\n\n    varying float v_opacity;\n    varying vec3 v_color;\n\n    void main() {\n        vec2 coord = gl_PointCoord - vec2(0.5);\n\n        // Create a four-pointed star\n        float absX = abs(coord.x);\n        float absY = abs(coord.y);\n\n        // Star parameters\n        float innerSize = 0.12;    // Size of center square\n        float armLength = 0.45;    // Length of star arms\n        float armWidth = 0.08;     // Half-width of star arms at base\n\n        float dist = 1.0; // Default to outside\n\n        // Center square\n        if (absX <= innerSize && absY <= innerSize) {\n            dist = max(absX, absY) - innerSize;\n        }\n        // Horizontal arms (left and right points)\n        else if (absY <= armWidth && absX <= armLength) {\n            // Taper the arms - they get narrower toward the tips\n            float normalizedX = (absX - innerSize) / (armLength - innerSize);\n            float taperFactor = 1.0 - normalizedX * 0.8; // Taper to 20% of original width\n            float currentArmWidth = armWidth * taperFactor;\n            dist = absY - currentArmWidth;\n        }\n        // Vertical arms (top and bottom points)\n        else if (absX <= armWidth && absY <= armLength) {\n            // Taper the arms - they get narrower toward the tips\n            float normalizedY = (absY - innerSize) / (armLength - innerSize);\n            float taperFactor = 1.0 - normalizedY * 0.8; // Taper to 20% of original width\n            float currentArmWidth = armWidth * taperFactor;\n            dist = absX - currentArmWidth;\n        }\n\n        // Use smoothstep for anti-aliasing to reduce subpixel artifacts\n        float alpha = 1.0 - smoothstep(-0.01, 0.01, dist);\n\n        if (alpha <= 0.0) {\n            discard;\n        }\n\n        gl_FragColor = vec4(v_color * v_opacity * alpha, v_opacity * alpha);\n    }\n`;\n\nfunction createShader(gl: WebGLRenderingContext, type: number, source: string): WebGLShader | undefined {\n  const shader = gl.createShader(type);\n  if (!shader) return undefined;\n\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    gl.deleteShader(shader);\n    return undefined;\n  }\n\n  return shader;\n}\n\nfunction createProgram(gl: WebGLRenderingContext,\n  vertexShader: WebGLShader,\n  fragmentShader: WebGLShader): WebGLProgram | undefined {\n  const program = gl.createProgram();\n  if (!program) return undefined;\n\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n  gl.linkProgram(program);\n\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    gl.deleteProgram(program);\n    return undefined;\n  }\n\n  return program;\n}\n\nclass SeededRandom {\n  private seed: number;\n\n  constructor(seed: number) {\n    this.seed = seed;\n  }\n\n  next(): number {\n    this.seed = (this.seed * 9301 + 49297) % 233280;\n    return this.seed / 233280;\n  }\n\n  nextBetween(min: number, max: number): number {\n    return min + (max - min) * this.next();\n  }\n}\n\nlet rotationsCache: Float32Array | undefined;\n\nfunction getRotations(): Float32Array {\n  if (!rotationsCache) {\n    const ROTATION_COUNT = 18; // n = [0..17]\n    const ROTATION_ANGLE_DEGREES = 220;\n\n    rotationsCache = new Float32Array(ROTATION_COUNT * 4); // mat2 = 4 floats\n\n    for (let i = 0; i < ROTATION_COUNT; i++) {\n      const angle = (ROTATION_ANGLE_DEGREES * Math.PI / 180) * i;\n      const cos = Math.cos(angle);\n      const sin = Math.sin(angle);\n\n      // mat2 in column-major order: [cos, sin, -sin, cos]\n      rotationsCache[i * 4] = cos;\n      rotationsCache[i * 4 + 1] = sin;\n      rotationsCache[i * 4 + 2] = -sin;\n      rotationsCache[i * 4 + 3] = cos;\n    }\n  }\n\n  return rotationsCache;\n}\n\nfunction resolveColor(colorDefinition: Color | ColorPair, rng: SeededRandom) {\n  if (Array.isArray(colorDefinition[0])) {\n    const [color1, color2] = colorDefinition as ColorPair;\n\n    return [\n      rng.nextBetween(color1[0], color2[0]),\n      rng.nextBetween(color1[1], color2[1]),\n      rng.nextBetween(color1[2], color2[2]),\n    ] as Color;\n  }\n\n  return colorDefinition as Color;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lIc96mwM\",\"diamond\":\"vIrSZr0L\"};","import { memo, useState } from '@teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom.ts';\nimport { animateSingle } from '../../../util/animation.ts';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets.ts';\n\nimport useLastCallback from '../../../hooks/useLastCallback.ts';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview.tsx';\n\nimport styles from './SpeedingDiamond.module.scss';\n\nimport diamondPreviewUrl from '../../../assets/diamond.png';\n\ninterface OwnProps {\n  onMouseMove: NoneToVoidFunction;\n}\n\nconst MAX_SPEED = 5;\nconst MIN_SPEED = 1;\nconst SLOWDOWN_DELAY = 300;\nconst SLOWDOWN_DURATION = 1500;\n\nlet slowdownTimeout: number | undefined;\nlet isAnimating = true;\n\nfunction SpeedingDiamond({ onMouseMove }: OwnProps) {\n  const [speed, setSpeed] = useState(MIN_SPEED);\n\n  const handleMouseMove = useLastCallback(() => {\n    if (slowdownTimeout) {\n      clearTimeout(slowdownTimeout);\n      slowdownTimeout = undefined;\n    }\n\n    slowdownTimeout = window.setTimeout(() => {\n      const startAt = Date.now();\n\n      isAnimating = true;\n\n      animateSingle(() => {\n        if (!isAnimating) return false;\n\n        const t = Math.min((Date.now() - startAt) / SLOWDOWN_DURATION, 1);\n        const speed = (MAX_SPEED - MIN_SPEED) * (1 - transition(t));\n\n        setSpeed(speed);\n\n        isAnimating = t < 1 && speed > 1;\n\n        return isAnimating;\n      }, requestMutation);\n    }, SLOWDOWN_DELAY);\n\n    isAnimating = false;\n    setSpeed(MAX_SPEED);\n    onMouseMove();\n  });\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={styles.diamond}\n        onMouseMove={handleMouseMove}\n      >\n        <AnimatedIconWithPreview\n          speed={speed}\n          size={130}\n          tgsUrl={LOCAL_TGS_URLS.Diamond}\n          previewUrl={diamondPreviewUrl}\n          nonInteractive\n          noLoop={false}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default memo(SpeedingDiamond);\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 2);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"KQ61en7j\",\"star\":\"no11eFNA\",\"star_purple\":\"NXn1Bbql\",\"starPurple\":\"NXn1Bbql\"};","import { memo, useRef } from '@teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom.ts';\nimport buildClassName from '../../../util/buildClassName.ts';\n\nimport useLastCallback from '../../../hooks/useLastCallback.ts';\n\nimport styles from './SwayingStar.module.scss';\n\ninterface OwnProps {\n  color: 'purple' | 'gold';\n  centerShift: readonly [number, number];\n  onMouseMove: NoneToVoidFunction;\n}\n\nconst INTERACTIVE_RADIUS = 50;\n\nfunction SwayingStar({\n  color,\n  centerShift,\n  onMouseMove,\n}: OwnProps) {\n  const starRef = useRef<HTMLDivElement>();\n\n  const handleMouseMove = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const centerX = rect.left + rect.width / 2 + centerShift[0];\n    const centerY = rect.top + rect.height / 2 + centerShift[1];\n    const mouseX = e.clientX - centerX;\n    const mouseY = e.clientY - centerY;\n    const normalizedX = Math.max(-1, Math.min(1, mouseX / INTERACTIVE_RADIUS));\n    const normalizedY = Math.max(-1, Math.min(1, mouseY / INTERACTIVE_RADIUS));\n    const rotateY = normalizedX * 40;\n    const rotateX = -normalizedY * 40;\n\n    requestMutation(() => {\n      starRef.current!.style.transform = `scale(1.1) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n    });\n\n    onMouseMove();\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    requestMutation(() => {\n      starRef.current!.style.transform = '';\n    });\n  });\n\n  return (\n    <div\n      className={styles.root}\n      onMouseMove={handleMouseMove}\n      onMouseLeave={handleMouseLeave}\n    >\n      <div\n        ref={starRef}\n        className={buildClassName(styles.star, styles[`star_${color}`])}\n        role=\"img\"\n        aria-label=\"Telegram Stars\"\n      />\n    </div>\n  );\n}\n\nexport default memo(SwayingStar);\n","import type { TeactNode } from '@teact';\nimport { memo, useLayoutEffect, useRef } from '@teact';\n\nimport { PARTICLE_BURST_PARAMS, PARTICLE_COLORS, setupParticles } from '../../../util/particles.ts';\n\nimport useLastCallback from '../../../hooks/useLastCallback.ts';\n\nimport SpeedingDiamond from './SpeedingDiamond.tsx';\nimport SwayingStar from './SwayingStar.tsx';\n\nimport styles from './ParticlesHeader.module.scss';\n\ninterface OwnProps {\n  model: 'swaying-star' | 'speeding-diamond';\n  color: 'purple' | 'gold' | 'blue';\n  title: TeactNode;\n  description: TeactNode;\n  isDisabled?: boolean;\n}\n\nconst PARTICLE_PARAMS = {\n  centerShift: [0, -36] as const,\n};\n\nfunction ParticlesHeader({\n  model,\n  color,\n  title,\n  description,\n  isDisabled,\n}: OwnProps) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n\n  useLayoutEffect(() => {\n    if (isDisabled) return undefined;\n\n    return setupParticles(canvasRef.current!, {\n      color: PARTICLE_COLORS[`${color}Gradient`],\n      ...PARTICLE_PARAMS,\n    });\n  }, [color, isDisabled]);\n\n  const handleMouseMove = useLastCallback(() => {\n    setupParticles(canvasRef.current!, {\n      color: PARTICLE_COLORS[`${color}Gradient`],\n      ...PARTICLE_PARAMS,\n      ...PARTICLE_BURST_PARAMS,\n    });\n  });\n\n  return (\n    <div className={styles.root}>\n      <canvas ref={canvasRef} className={styles.particles} />\n\n      {model === 'swaying-star' ? (\n        <SwayingStar\n          color={color as 'purple' | 'gold'}\n          centerShift={PARTICLE_PARAMS.centerShift}\n          onMouseMove={handleMouseMove}\n        />\n      ) : model === 'speeding-diamond' && (\n        <SpeedingDiamond onMouseMove={handleMouseMove} />\n      )}\n\n      <h2 className={styles.title}>\n        {title}\n      </h2>\n\n      <div className={styles.description}>\n        {description}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(ParticlesHeader);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gibpMWRW\",\"particles\":\"ptK2PtrY\",\"title\":\"uHi7dzFK\",\"description\":\"y4GHVbyq\"};","import { memo, type TeactNode } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './TableAboutModal.module.scss';\n\nexport type TableAboutData = [IconName | undefined, TeactNode, TeactNode][];\n\ntype OwnProps = {\n  contentClassName?: string;\n  isOpen?: boolean;\n  listItemData?: TableAboutData;\n  headerIconName?: IconName;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  hasBackdrop?: boolean;\n  withSeparator?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableAboutModal = ({\n  isOpen,\n  listItemData,\n  headerIconName,\n  header,\n  footer,\n  buttonText,\n  hasBackdrop,\n  withSeparator,\n  onClose,\n  onButtonClick,\n  contentClassName,\n}: OwnProps) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName(styles.root, contentClassName)}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      onClose={onClose}\n    >\n      {headerIconName && <div className={styles.topIcon}><Icon name={headerIconName} /></div>}\n      {header}\n      <div>\n        {listItemData?.map(([icon, title, subtitle]) => {\n          return (\n            <ListItem\n              isStatic\n              multiline\n              icon={icon}\n              iconClassName={styles.listItemIcon}\n            >\n              <span className=\"title\">{title}</span>\n              <span className=\"subtitle\">{subtitle}</span>\n            </ListItem>\n          );\n        })}\n      </div>\n      {withSeparator && <Separator className={styles.separator} />}\n      {footer}\n      {buttonText && (\n        <Button size=\"smaller\" onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableAboutModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LAh8evux\",\"title\":\"yfODVQ1M\",\"description\":\"QaQn08BX\",\"secondary\":\"sQZslvAr\",\"topIcon\":\"jySLtQNG\",\"listItemIcon\":\"hQbEPsTU\",\"content\":\"hrizpMDe\",\"separator\":\"En1zD2cT\"};","import { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal, { type OwnProps as ModalProps } from '../../ui/Modal';\n\nimport styles from './PickerModal.module.scss';\n\ntype OwnProps = {\n  confirmButtonText?: string;\n  isConfirmDisabled?: boolean;\n  shouldAdaptToSearch?: boolean;\n  withFixedHeight?: boolean;\n  withPremiumGradient?: boolean;\n  onConfirm?: NoneToVoidFunction;\n} & ModalProps;\n\nconst PickerModal = ({\n  confirmButtonText,\n  isConfirmDisabled,\n  shouldAdaptToSearch,\n  withFixedHeight,\n  onConfirm,\n  withPremiumGradient,\n  ...modalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hasButton = Boolean(confirmButtonText || onConfirm);\n\n  return (\n    <Modal\n\n      {...modalProps}\n      isSlim\n      className={buildClassName(\n        shouldAdaptToSearch && styles.withSearch,\n        withFixedHeight && styles.fixedHeight,\n        modalProps.className,\n      )}\n      contentClassName={buildClassName(styles.content, modalProps.contentClassName)}\n      headerClassName={buildClassName(styles.header, modalProps.headerClassName)}\n    >\n      {modalProps.children}\n      {hasButton && (\n        <div className={styles.buttonWrapper}>\n          <Button\n            withPremiumGradient={withPremiumGradient}\n            onClick={onConfirm || modalProps.onClose}\n            color=\"primary\"\n            size=\"smaller\"\n            disabled={isConfirmDisabled}\n          >\n            {confirmButtonText || lang('Confirm')}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(PickerModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"FuFYE0AA\",\"fixedHeight\":\"CrEsDylb\",\"withSearch\":\"WGSZ8u75\",\"header\":\"iEptOmIp\",\"buttonWrapper\":\"HqeDTaSr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"KYHkJ9Qf\",\"title\":\"AwnUe4Qk\",\"value\":\"JGH6P9Az\",\"table\":\"DFRB0Ad4\",\"noFooter\":\"cSamlkt9\",\"cell\":\"Cnh5ENvm\",\"fullWidth\":\"UssCZwgy\",\"avatar\":\"SHQbPR5Y\",\"chatItem\":\"aS9U4hiQ\"};","import { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\ntype ChatItem = { chatId: string; withEmojiStatus?: boolean };\n\nexport type TableData = [TeactNode | undefined, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  header?: TeactNode;\n  modalHeader?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  className?: string;\n  hasBackdrop?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n  withBalanceBar?: boolean;\n  isLowStackPriority?: true;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerAvatarPeer,\n  header,\n  modalHeader,\n  footer,\n  buttonText,\n  className,\n  hasBackdrop,\n  onClose,\n  onButtonClick,\n  withBalanceBar,\n  isLowStackPriority,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      isSlim\n      header={modalHeader}\n      title={title}\n      className={className}\n      contentClassName={styles.content}\n      onClose={onClose}\n      withBalanceBar={withBalanceBar}\n      isLowStackPriority={isLowStackPriority}\n    >\n      {headerAvatarPeer && (\n        <Avatar peer={headerAvatarPeer} size=\"jumbo\" className={styles.avatar} />\n      )}\n      {header}\n      <div className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <>\n            {Boolean(label) && <div className={buildClassName(styles.cell, styles.title)}>{label}</div>}\n            <div className={buildClassName(styles.cell, styles.value, !label && styles.fullWidth)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PeerChip\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  withEmojiStatus={value.withEmojiStatus}\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </div>\n          </>\n        ))}\n      </div>\n      {footer}\n      {buttonText && (\n        <Button\n          className={!footer ? styles.noFooter : undefined}\n          size=\"smaller\"\n          onClick={onButtonClick || onClose}\n        >\n          {buttonText}\n        </Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hyRfEyRz\",\"top\":\"p_Ny8jqJ\",\"badge\":\"QRrryqp4\",\"text\":\"I5jdPgFL\"};","import { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiWebDocument } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar, { type AvatarSize } from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerBadge.module.scss';\n\ntype OwnProps = {\n  peer?: ApiPeer | CustomPeer;\n  avatarWebPhoto?: ApiWebDocument;\n  avatarSize?: AvatarSize;\n  text?: string;\n  badgeText?: string;\n  badgeIcon?: IconName;\n  className?: string;\n  badgeClassName?: string;\n  badgeIconClassName?: string;\n  textClassName?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PeerBadge = ({\n  peer: avatarPeer,\n  avatarWebPhoto,\n  avatarSize,\n  text,\n  badgeText,\n  badgeIcon,\n  className,\n  badgeClassName,\n  badgeIconClassName,\n  textClassName,\n  onClick,\n}: OwnProps) => {\n  const lang = useLang();\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n    >\n      <div className={styles.top}>\n        <Avatar size={avatarSize} peer={avatarPeer} webPhoto={avatarWebPhoto} />\n        {badgeText && (\n          <div className={buildClassName(styles.badge, badgeClassName)} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n            {badgeIcon && <Icon name={badgeIcon} className={badgeIconClassName} />}\n            {badgeText}\n          </div>\n        )}\n      </div>\n      {text && <p className={buildClassName(styles.text, textClassName)}>{text}</p>}\n    </div>\n  );\n};\n\nexport default memo(PeerBadge);\n"],"names":["memo","StarTopupOptionList","isActive","className","options","selectedStarOption","selectedStarCount","starsNeeded","onClick","oldLang","useOldLang","lang","useLang","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","useFlag","useEffect","renderingOptions","canExtend","useMemo","undefined","maxOption","reduce","max","option","stars","forceShowAll","result","currentStackedStarsCount","canExtendOptions","forEach","index","isExtended","push","starsCount","Math","min","isWide","length","_jsxs","buildClassName","styles","children","map","isOdd","isActiveOption","perUserStarCount","winner","winners","find","opt","users","perUserStars","wideOption","active","optionTop","formatInteger","_jsx","stackedStars","dir","isRtl","Array","from","StarIcon","stackedStar","type","size","optionBottom","formatCurrency","amount","currency","Boolean","renderText","Button","moreOptions","isText","noForcedUpperCase","Icon","iconDown","name","PARTICLE_COLORS","blue","blueGradient","purple","purpleGradient","gold","goldGradient","PARTICLE_BURST_PARAMS","particleCount","distanceLimit","fadeInTime","minLifetime","maxLifetime","maxStartTimeDelay","selfDestroyTime","minSpawnRadius","maxSpawnRadius","DEFAULT_CONFIG","width","height","color","speed","baseSize","fadeOutTime","edgeFadeZone","centerShift","accelerationFactor","canvasManagers","Map","setupParticles","canvas","manager","get","gl","getContext","alpha","antialias","preserveDrawingBuffer","Error","vertexShader","createShader","VERTEX_SHADER","VERTEX_SHADER_SOURCE","fragmentShader","FRAGMENT_SHADER","FRAGMENT_SHADER_SOURCE","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","deleteProgram","dpr","window","devicePixelRatio","systems","locations","attributes","startPosition","getAttribLocation","velocity","startTime","lifetime","baseOpacity","uniforms","resolution","getUniformLocation","time","canvasWidth","canvasHeight","rotationMatrices","spawnCenter","animationId","unsubscribeFromIsInBackground","render","currentTime","clear","COLOR_BUFFER_BIT","system","systemTime","uniform1f","config","uniform2f","centerX","centerY","bindBuffer","ARRAY_BUFFER","buffers","enableVertexAttribArray","vertexAttribPointer","FLOAT","drawArrays","POINTS","requestAnimationFrame","removeSystem","id","selfDestroyTimeout","clearTimeout","Object","values","buffer","deleteBuffer","delete","cancelAnimationFrame","deleteShader","addSystem","generateUniqueId","createBuffer","performance","now","seed","floor","random","avgDistance","set","rng","SeededRandom","startPositions","Float32Array","velocities","startTimes","lifetimes","sizes","baseOpacities","colors","i","angle","next","PI","spawnRadius","nextBetween","cos","sin","spawnX","spawnY","sizeVariant","particleColor","resolveColor","bufferData","STATIC_DRAW","initParticleData","maxWidth","maxHeight","style","viewport","initCanvas","setTimeout","useProgram","uniformMatrix2fv","rotationsCache","ROTATION_COUNT","ROTATION_ANGLE_DEGREES","getRotations","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","clearColor","getIsInBackground","subscribe","createParticleSystemManager","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","constructor","this","colorDefinition","isArray","color1","color2","slowdownTimeout","isAnimating","onMouseMove","setSpeed","useState","handleMouseMove","useLastCallback","startAt","Date","animateSingle","t","transition","requestMutation","AnimatedIconWithPreview","tgsUrl","LOCAL_TGS_URLS","Diamond","previewUrl","diamondPreviewUrl","nonInteractive","noLoop","starRef","useRef","e","rect","currentTarget","getBoundingClientRect","left","top","mouseX","clientX","mouseY","clientY","normalizedX","normalizedY","rotateY","rotateX","current","transform","handleMouseLeave","root","onMouseLeave","ref","star","role","PARTICLE_PARAMS","model","title","description","isDisabled","canvasRef","useLayoutEffect","SwayingStar","SpeedingDiamond","TableAboutModal","isOpen","listItemData","headerIconName","header","footer","buttonText","hasBackdrop","withSeparator","onClose","onButtonClick","contentClassName","Modal","hasAbsoluteCloseButton","absoluteCloseButtonColor","icon","subtitle","ListItem","isStatic","multiline","iconClassName","Separator","PickerModal","confirmButtonText","isConfirmDisabled","shouldAdaptToSearch","withFixedHeight","onConfirm","withPremiumGradient","modalProps","hasButton","isSlim","headerClassName","disabled","TableInfoModal","tableData","headerAvatarPeer","modalHeader","withBalanceBar","isLowStackPriority","openChat","getActions","handleOpenChat","peerId","hasCloseButton","Avatar","peer","label","value","_Fragment","PeerChip","chatId","forceShowSelf","withEmojiStatus","clickArg","PeerBadge","avatarPeer","avatarWebPhoto","avatarSize","text","badgeText","badgeIcon","badgeClassName","badgeIconClassName","textClassName","clickable","webPhoto","badge"],"sourceRoot":""}