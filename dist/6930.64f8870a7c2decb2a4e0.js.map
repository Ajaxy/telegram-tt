{"version":3,"file":"6930.64f8870a7c2decb2a4e0.js","mappings":"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","sources":["webpack://telegram-t/./src/components/modals/stars/gift/StarsGiftModal.module.scss?069e","webpack://telegram-t/./src/components/modals/stars/gift/StarsGiftModal.tsx","webpack://telegram-t/./src/components/main/premium/StarsGiftingPickerModal.module.scss?3156","webpack://telegram-t/./src/components/main/premium/StarsGiftingPickerModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarsBalanceModal.module.scss?bbd4","webpack://telegram-t/./src/components/modals/stars/BalanceBlock.tsx","webpack://telegram-t/./src/components/modals/stars/subscription/StarsSubscriptionItem.module.scss?74b5","webpack://telegram-t/./src/components/modals/stars/subscription/StarsSubscriptionItem.tsx","webpack://telegram-t/./src/components/modals/stars/helpers/transaction.ts","webpack://telegram-t/./src/components/modals/stars/transaction/PaidMediaThumb.module.scss?605d","webpack://telegram-t/./src/components/modals/stars/transaction/PaidMediaThumb.tsx","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionItem.module.scss?b947","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionItem.tsx","webpack://telegram-t/./src/components/modals/stars/StarsBalanceModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarsPaymentModal.tsx","webpack://telegram-t/./src/components/modals/gift/UniqueGiftHeader.module.scss?2bf6","webpack://telegram-t/./src/components/modals/gift/UniqueGiftHeader.tsx","webpack://telegram-t/./src/hooks/animations/useTransitionActiveKey.ts","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionModal.module.scss?a215","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionModal.tsx","webpack://telegram-t/./src/components/modals/stars/subscription/StarsSubscriptionModal.module.scss?5025","webpack://telegram-t/./src/components/modals/stars/subscription/StarsSubscriptionModal.tsx","webpack://telegram-t/./src/components/modals/paidReaction/StarSlider.module.scss?b8f3","webpack://telegram-t/./src/components/modals/paidReaction/StarSlider.tsx","webpack://telegram-t/./src/components/modals/paidReaction/PaidReactionModal.module.scss?80b2","webpack://telegram-t/./src/components/modals/paidReaction/PaidReactionModal.tsx","webpack://telegram-t/./src/components/modals/gift/GiftComposer.module.scss?dac8","webpack://telegram-t/./src/components/modals/gift/GiftComposer.tsx","webpack://telegram-t/./src/components/modals/gift/GiftItem.module.scss?c564","webpack://telegram-t/./src/components/modals/gift/GiftItemPremium.tsx","webpack://telegram-t/./src/components/modals/gift/GiftItemStar.tsx","webpack://telegram-t/./src/components/modals/gift/GiftModal.module.scss?fd13","webpack://telegram-t/./src/components/modals/gift/GiftModalResaleScreen.tsx","webpack://telegram-t/./src/components/modals/gift/ResaleGiftMenuAttributeSticker.module.scss?8276","webpack://telegram-t/./src/components/modals/gift/ResaleGiftMenuAttributeSticker.tsx","webpack://telegram-t/./src/components/modals/gift/GiftResaleFilters.module.scss?c5a8","webpack://telegram-t/./src/components/modals/gift/GiftResaleFilters.tsx","webpack://telegram-t/./src/components/modals/gift/StarGiftCategoryList.module.scss?7d19","webpack://telegram-t/./src/components/modals/gift/StarGiftCategoryList.tsx","webpack://telegram-t/./src/components/modals/gift/GiftModal.tsx","webpack://telegram-t/./src/components/modals/gift/recipient/GiftRecipientPicker.module.scss?b7e9","webpack://telegram-t/./src/components/modals/gift/recipient/GiftRecipientPicker.tsx","webpack://telegram-t/./src/components/common/gift/GiftTransferPreview.module.scss?0f0d","webpack://telegram-t/./src/components/common/gift/GiftTransferPreview.tsx","webpack://telegram-t/./src/components/modals/gift/info/GiftInfoModal.module.scss?4f0e","webpack://telegram-t/./src/components/modals/gift/info/GiftInfoModal.tsx","webpack://telegram-t/./src/components/modals/gift/resale/GiftResalePriceComposerModal.module.scss?6666","webpack://telegram-t/./src/components/modals/gift/resale/GiftResalePriceComposerModal.tsx","webpack://telegram-t/./src/components/modals/gift/upgrade/GiftUpgradeModal.module.scss?ae9e","webpack://telegram-t/./src/components/modals/gift/upgrade/GiftUpgradeModal.tsx","webpack://telegram-t/./src/components/modals/gift/status/GiftStatusInfoModal.module.scss?3366","webpack://telegram-t/./src/components/modals/gift/status/GiftStatusInfoModal.tsx","webpack://telegram-t/./src/components/modals/gift/withdraw/GiftWithdrawModal.module.scss?287b","webpack://telegram-t/./src/components/modals/gift/withdraw/GiftWithdrawModal.tsx","webpack://telegram-t/./src/hooks/useDebouncedMemo.ts","webpack://telegram-t/./src/hooks/usePeerSearch.ts","webpack://telegram-t/./src/components/modals/gift/transfer/GiftTransferModal.tsx","webpack://telegram-t/./src/components/modals/stars/chatRefund/ChatRefundModal.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalDialog\":\"MFXAwnxJ\",\"content\":\"Sl6xVf1R\",\"main\":\"bTN9Jeph\",\"headerInfo\":\"c6MiyJgW\",\"logo\":\"StGLWvzb\",\"logoBackground\":\"SyTXSfml\",\"description\":\"kFe3mIZo\",\"section\":\"BgfHkWd2\",\"header\":\"zMtAGfXs\",\"starHeaderText\":\"q3v8orGj\",\"hiddenHeader\":\"bq3FnXT0\",\"closeButton\":\"bDsDTkbe\",\"avatar\":\"jK36xUj4\",\"center\":\"v1PckUQn\",\"secondaryInfo\":\"TDWSRfP9\"};","import type { FC } from '../../../../lib/teact/teact';\nimport type React from '../../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiStarTopupOption, ApiUser,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\n\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport {\n  selectUser,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatCurrencyAsString } from '../../../../util/formatCurrency';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Avatar from '../../../common/Avatar';\nimport Icon from '../../../common/icons/Icon';\nimport SafeLink from '../../../common/SafeLink';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport StarTopupOptionList from '../StarTopupOptionList';\n\nimport styles from './StarsGiftModal.module.scss';\n\nimport StarLogo from '../../../../assets/icons/GoldStar.svg';\nimport StarsBackground from '../../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['starsGiftModal'];\n};\n\ntype StateProps = {\n  user?: ApiUser;\n};\n\nconst AVATAR_SIZE = 100;\n\nconst StarsGiftModal: FC<OwnProps & StateProps> = ({\n  modal,\n  user,\n}) => {\n  const {\n    closeStarsGiftModal, openInvoice, requestConfetti,\n  } = getActions();\n  const dialogRef = useRef<HTMLDivElement>();\n\n  const isOpen = Boolean(modal?.isOpen);\n\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const oldLang = useOldLang();\n\n  const [selectedOption, setSelectedOption] = useState<ApiStarTopupOption | undefined>();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n    }\n  }, [isOpen]);\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (renderingModal?.isCompleted) {\n      showConfetti();\n    }\n  }, [renderingModal, showConfetti]);\n\n  const handleClick = useLastCallback((option: ApiStarTopupOption) => {\n    if (!renderingModal) return;\n\n    setSelectedOption(option);\n    if (user) {\n      openInvoice({\n        type: 'starsgift',\n        userId: user.id,\n        stars: option.stars,\n        currency: option.currency,\n        amount: option.amount,\n      });\n    } else {\n      openInvoice({\n        type: 'stars',\n        stars: option.stars,\n        currency: option.currency,\n        amount: option.amount,\n      });\n    }\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClose = useLastCallback(() => {\n    closeStarsGiftModal();\n  });\n\n  function renderGiftTitle() {\n    if (renderingModal?.isCompleted) {\n      return user ? renderText(oldLang('Notification.StarsGift.SentYou',\n        formatCurrencyAsString(selectedOption!.amount, selectedOption!.currency, oldLang.code)), ['simple_markdown'])\n        : renderText(oldLang('StarsAcquiredInfo', selectedOption?.stars), ['simple_markdown']);\n    }\n\n    return user ? oldLang('GiftStarsTitle') : oldLang('Star.List.GetStars');\n  }\n\n  const bottomText = useMemo(() => {\n    const text = oldLang('lng_credits_summary_options_about');\n    const parts = text.split('{link}');\n    return [\n      parts[0],\n      <SafeLink\n        url={oldLang('StarsTOSLink')}\n        text={oldLang('lng_credits_summary_options_about_link')}\n      />,\n      parts[1],\n    ];\n  }, [oldLang]);\n\n  return (\n    <Modal\n      className={buildClassName(styles.modalDialog)}\n      contentClassName={styles.content}\n      dialogRef={dialogRef}\n      isSlim\n      onClose={handleClose}\n      isOpen={isOpen}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n\n          onClick={() => closeStarsGiftModal()}\n          ariaLabel={oldLang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.starHeaderText}>\n            {user ? oldLang('GiftStarsTitle') : oldLang('Star.List.GetStars')}\n          </h2>\n        </div>\n        <div className={styles.headerInfo}>\n          {user ? (\n            <>\n              <Avatar\n                size={AVATAR_SIZE}\n                peer={user}\n                className={styles.avatar}\n              />\n              <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n            </>\n          ) : (\n            <>\n              <img className={styles.logo} src={StarLogo} alt=\"\" draggable={false} />\n              <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n            </>\n          )}\n        </div>\n        <h2 className={buildClassName(styles.headerText, styles.center)}>\n          {renderGiftTitle()}\n        </h2>\n        <p className={styles.description}>\n          {user ? renderText(\n            oldLang('ActionGiftStarsSubtitle', getPeerTitle(oldLang, user)), ['simple_markdown'],\n          ) : oldLang('Stars.Purchase.GetStarsInfo')}\n        </p>\n        <div className={styles.section}>\n          <StarTopupOptionList\n            options={renderingModal?.starsGiftOptions}\n            onClick={handleClick}\n          />\n          <div className={styles.secondaryInfo}>\n            {bottomText}\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { modal }): StateProps => {\n  const user = modal?.forUserId ? selectUser(global, modal.forUserId) : undefined;\n\n  return {\n    user,\n  };\n})(StarsGiftModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"s3k01dTm\",\"transition\":\"BNA0_b5j\",\"main\":\"Oadi16vt\",\"filter\":\"z84KbvhX\",\"title\":\"Jnsrau29\",\"buttons\":\"NnVyYB32\",\"picker\":\"cuI2eDIY\",\"avatars\":\"ILtw_aNL\",\"center\":\"eIfMzHv5\",\"description\":\"FlNJWZ5P\",\"premiumFeatures\":\"xIv0Yaur\",\"options\":\"eNJRXn6P\",\"button\":\"KDNKXBp5\"};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  isDeletedUser, isUserBot,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\nimport styles from './StarsGiftingPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  userIds?: string[];\n  activeListIds?: string[];\n  archivedListIds?: string[];\n}\n\nconst StarsGiftingPickerModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  userIds,\n}) => {\n  const { closeStarsGiftingPickerModal, openStarsGiftModal } = getActions();\n\n  const oldLang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedUserIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const combinedIds = unique([\n      ...(userIds || []),\n      ...(activeListIds || []),\n      ...(archivedListIds || []),\n    ]);\n\n    const filteredUserIds = filterPeersByQuery({\n      ids: combinedIds, query: searchQuery, type: 'user',\n    });\n\n    return sortChatIds(filteredUserIds.filter((id) => {\n      const user = usersById[id];\n\n      if (!user) {\n        return false;\n      }\n\n      return !user.isSupport\n        && !isUserBot(user) && !isDeletedUser(user)\n        && id !== currentUserId && id !== SERVICE_NOTIFICATIONS_USER_ID;\n    }));\n  }, [currentUserId, searchQuery, userIds, activeListIds, archivedListIds]);\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedId?: string) => {\n    if (newSelectedId?.length) {\n      openStarsGiftModal({ forUserId: newSelectedId });\n      closeStarsGiftingPickerModal();\n    }\n  });\n\n  return (\n    <PickerModal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={closeStarsGiftingPickerModal}\n      title={oldLang('GiftStarsTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={oldLang('Continue')}\n      onEnter={closeStarsGiftingPickerModal}\n    >\n      <PeerPicker\n        className={styles.picker}\n        itemIds={displayedUserIds}\n        filterValue={searchQuery}\n        filterPlaceholder={oldLang('Search')}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        onSelectedIdChange={handleSelectedUserIdsChange}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    chats: {\n      listIds,\n    },\n    currentUserId,\n  } = global;\n\n  return {\n    userIds: global.contactList?.userIds,\n    activeListIds: listIds.active,\n    archivedListIds: listIds.archived,\n    currentUserId,\n  };\n})(StarsGiftingPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"TtE8LQNJ\",\"minimal\":\"nkV4JXHc\",\"transition\":\"nXQS4E59\",\"main\":\"JuWZY1ds\",\"container\":\"mnhBs1uK\",\"section\":\"lYkNd_gb\",\"sectionTitle\":\"FF8gm7MP\",\"hint\":\"Rs8WXoOz\",\"tos\":\"Vu6blJk9\",\"topUpButton\":\"dc_DZoVF\",\"tonBalanceContainer\":\"lorbW9II\",\"tonBalance\":\"h2Fs3tOv\",\"tonIconBalance\":\"Ut6GidJP\",\"tonInUsd\":\"FdcdsB4l\",\"tonIconLogo\":\"_hCjjyEv\",\"description\":\"teXilLxe\",\"header\":\"fnhXotO2\",\"starHeaderText\":\"iUwego5s\",\"botItem\":\"AhxcrKWn\",\"hiddenHeader\":\"DZk6d6hF\",\"closeButton\":\"piD1PXHW\",\"addStarsButton\":\"dqnGL2uh\",\"addStarsIcon\":\"w9Db2eiK\",\"balanceBlock\":\"Yk0OQBKC\",\"balanceInfo\":\"p2dW9NOV\",\"smallerText\":\"rUnPcfmE\",\"balanceBottom\":\"F5BTkZ9G\",\"modalBalance\":\"t8tMrx3y\",\"starButton\":\"oOt4VBD2\",\"paymentContent\":\"OReEUNTV\",\"paymentImages\":\"oKorQYTC\",\"paymentPhoto\":\"HGTrEtUF\",\"avatarStar\":\"Wu10dXoa\",\"paymentImageBackground\":\"os8jb_qv\",\"paymentButton\":\"VzR5cibf\",\"paymentButtonStar\":\"Uhg7yWxK\",\"transactions\":\"Qvc0fTTH\",\"subscriptions\":\"IX5BhCUF\",\"tabs\":\"KZVEyKOX\",\"disclaimer\":\"bpVifdwH\",\"amountBadge\":\"BPM7LKwo\",\"loadMore\":\"TKmZjMyd\",\"loadMoreIcon\":\"buepwtN1\"};","import { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiTypeCurrencyAmount } from '../../../api/types';\n\nimport { STARS_CURRENCY_CODE, TON_CURRENCY_CODE } from '../../../config';\nimport { formatStarsAmount } from '../../../global/helpers/payments';\nimport buildClassName from '../../../util/buildClassName';\nimport { convertCurrencyFromBaseUnit } from '../../../util/formatCurrency';\n\nimport useLang from '../../../hooks/useLang';\n\nimport BadgeButton from '../../common/BadgeButton';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\n\nimport styles from './StarsBalanceModal.module.scss';\n\ntype OwnProps = {\n  balance?: ApiTypeCurrencyAmount;\n  withAddButton?: boolean;\n  className?: string;\n};\n\nconst BalanceBlock = ({ balance, className, withAddButton }: OwnProps) => {\n  const lang = useLang();\n\n  const {\n    openStarsBalanceModal,\n  } = getActions();\n\n  const renderStarsAmount = () => {\n    return (\n      <>\n        <StarIcon type=\"gold\" size=\"middle\" />\n        {balance !== undefined && balance.currency === STARS_CURRENCY_CODE\n          ? formatStarsAmount(lang, balance) : '…'}\n        {withAddButton && (\n          <BadgeButton\n            className={styles.addStarsButton}\n            onClick={() => openStarsBalanceModal({})}\n          >\n            <Icon\n              className={styles.addStarsIcon}\n              name=\"add\"\n            />\n          </BadgeButton>\n        )}\n      </>\n    );\n  };\n\n  const renderTonAmount = () => {\n    return (\n      <>\n        <Icon name=\"toncoin\" />\n        {balance !== undefined ? convertCurrencyFromBaseUnit(balance.amount, balance.currency) : '…'}\n      </>\n    );\n  };\n\n  return (\n    <div className={buildClassName(styles.balanceBlock, className)}>\n      <div className={styles.balanceInfo}>\n        <span className={styles.smallerText}>{lang('StarsBalance')}</span>\n        <div className={styles.balanceBottom}>\n          {balance?.currency === TON_CURRENCY_CODE ? renderTonAmount() : renderStarsAmount()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(BalanceBlock);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZXnbeQxP\",\"info\":\"zLaaDX3c\",\"status\":\"HbF2qTB2\",\"statusPricing\":\"AveGvpdV\",\"amount\":\"_CBiOQcv\",\"title\":\"k9ZIv5Pd\",\"description\":\"FlRlxMx2\",\"subtitle\":\"YN2J8dw6\",\"statusPeriod\":\"MRrP7Oew\",\"statusEnded\":\"pRHwfr8m\",\"preview\":\"t6Syyhzd\",\"subscriptionStar\":\"ftlbevPm\"};","import { memo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiStarsSubscription,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { selectPeer } from '../../../../global/selectors';\nimport { formatDateToString } from '../../../../util/dates/dateFormat';\nimport { formatInteger } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Avatar from '../../../common/Avatar';\nimport StarIcon from '../../../common/icons/StarIcon';\n\nimport styles from './StarsSubscriptionItem.module.scss';\n\ntype OwnProps = {\n  subscription: ApiStarsSubscription;\n};\n\nfunction selectProvidedPeer(peerId: string) {\n  return (global: GlobalState) => (\n    selectPeer(global, peerId)\n  );\n}\n\nconst StarsSubscriptionItem = ({ subscription }: OwnProps) => {\n  const { openStarsSubscriptionModal } = getActions();\n  const {\n    peerId, pricing, until, isCancelled, title, photo,\n  } = subscription;\n  const lang = useOldLang();\n\n  const peer = useSelector(selectProvidedPeer(peerId))!;\n\n  const handleClick = useLastCallback(() => {\n    openStarsSubscriptionModal({ subscription });\n  });\n\n  if (!peer) {\n    return undefined;\n  }\n\n  const hasExpired = until < Date.now() / 1000;\n  const formattedDate = formatDateToString(until * 1000, lang.code, true, 'long');\n\n  return (\n    <div className={styles.root} onClick={handleClick}>\n      <div className={styles.preview}>\n        <Avatar size=\"medium\" peer={peer} />\n        <StarIcon className={styles.subscriptionStar} type=\"gold\" size=\"small\" />\n      </div>\n      <div className={styles.info}>\n        <h3 className={styles.title}>{renderText(getPeerTitle(lang, peer) || '')}</h3>\n        {title && (\n          <p className={styles.subtitle}>\n            {photo && <Avatar webPhoto={photo} size=\"micro\" />}\n            {renderText(title)}\n          </p>\n        )}\n        <p className={styles.description}>\n          {lang(\n            hasExpired ? 'StarsSubscriptionExpired'\n              : isCancelled ? 'StarsSubscriptionExpires' : 'StarsSubscriptionRenews',\n            formattedDate,\n          )}\n        </p>\n      </div>\n      <div className={styles.status}>\n        {(isCancelled || hasExpired) ? (\n          <div className={styles.statusEnded}>\n            {lang(hasExpired ? 'StarsSubscriptionStatusExpired' : 'StarsSubscriptionStatusCancelled')}\n          </div>\n        ) : (\n          <>\n            <div className={styles.statusPricing}>\n              <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />\n              <span className={styles.amount}>\n                {formatInteger(pricing.amount)}\n              </span>\n            </div>\n            <div className={styles.statusPeriod}>{lang('StarsParticipantSubscriptionPerMonth')}</div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StarsSubscriptionItem);\n","import type { ApiStarsAmount, ApiStarsTransaction, ApiTypeCurrencyAmount } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport { STARS_CURRENCY_CODE, TON_CURRENCY_CODE } from '../../../../config';\nimport { buildStarsTransactionCustomPeer } from '../../../../global/helpers/payments';\nimport {\n  type LangFn,\n} from '../../../../util/localization';\nimport { formatPercent } from '../../../../util/textFormat';\n\nexport function getTransactionTitle(oldLang: OldLangFn, lang: LangFn, transaction: ApiStarsTransaction) {\n  if (transaction.paidMessages) {\n    return lang(\n      'PaidMessageTransaction',\n      { count: transaction.paidMessages },\n      {\n        withNodes: true,\n        pluralValue: transaction.paidMessages,\n      },\n    );\n  }\n\n  if (transaction.isGiftResale) {\n    return isNegativeAmount(transaction.amount)\n      ? lang('StarGiftSaleTransaction')\n      : lang('StarGiftPurchaseTransaction');\n  }\n\n  if (transaction.starRefCommision) {\n    return oldLang('StarTransactionCommission', formatPercent(transaction.starRefCommision));\n  }\n  if (transaction.isGiftUpgrade) return oldLang('Gift2TransactionUpgraded');\n  if (transaction.extendedMedia) return oldLang('StarMediaPurchase');\n  if (transaction.subscriptionPeriod) return transaction.title || oldLang('StarSubscriptionPurchase');\n  if (transaction.isReaction) return oldLang('StarsReactionsSent');\n  if (transaction.giveawayPostId) return oldLang('StarsGiveawayPrizeReceived');\n  if (transaction.isMyGift) return oldLang('StarsGiftSent');\n  if (transaction.isGift) {\n    if (transaction.amount.currency === TON_CURRENCY_CODE) {\n      return lang('TonGiftReceived');\n    }\n    return oldLang('StarsGiftReceived');\n  }\n  if (transaction.starGift) {\n    return isNegativeAmount(transaction.amount) ? oldLang('Gift2TransactionSent') : oldLang('Gift2ConvertedTitle');\n  }\n\n  const customPeer = (transaction.peer && transaction.peer.type !== 'peer'\n    && buildStarsTransactionCustomPeer(transaction.peer)) || undefined;\n\n  if (customPeer) return customPeer.title || oldLang(customPeer.titleKey!);\n\n  return transaction.title;\n}\n\nexport function isNegativeStarsAmount(starsAmount: ApiStarsAmount) {\n  if (starsAmount.amount) return starsAmount.amount < 0;\n  return starsAmount.nanos < 0;\n}\n\nexport function isNegativeAmount(currencyAmount: ApiTypeCurrencyAmount) {\n  if (currencyAmount.currency === STARS_CURRENCY_CODE) {\n    return isNegativeStarsAmount(currencyAmount);\n  }\n  return currencyAmount.amount < 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"jQkp75Gb\",\"preview\":\"OYGSN3PF\",\"count\":\"KX1yz2Jy\",\"thumb\":\"EvinKr5k\",\"noOutline\":\"KSAAsUDv\",\"itemCount1\":\"GxDajfX_\",\"itemCount2\":\"jXuZoxq8\",\"itemCount3\":\"TPn3XGHJ\",\"blurry\":\"hWZuxLS8\",\"full\":\"w56QPFhl\",\"fadeIn\":\"ds43W8Wq\"};","import { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, BoughtPaidMedia } from '../../../../api/types';\n\nimport { getMediaHash, getMediaThumbUri } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport Icon from '../../../common/icons/Icon';\nimport MediaSpoiler from '../../../common/MediaSpoiler';\n\nimport styles from './PaidMediaThumb.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  media: ApiMediaExtendedPreview[] | BoughtPaidMedia[];\n  isTransactionPreview?: boolean;\n  onClick?: NoneToVoidFunction;\n};\n\nconst THUMB_LIMIT = 3;\nconst PREVIEW_THUMB_LIMIT = 2;\n\nconst PaidMediaThumb = ({\n  media, className, isTransactionPreview, onClick,\n}: OwnProps) => {\n  const count = Math.min(media.length, isTransactionPreview ? PREVIEW_THUMB_LIMIT : THUMB_LIMIT);\n  const isLocked = 'mediaType' in media[0];\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles[`itemCount${count}`],\n        isTransactionPreview && styles.preview,\n        className,\n      )}\n      dir=\"rtl\"\n      onClick={onClick}\n    >\n      {media.slice(0, count).reverse().map((item, i, arr) => {\n        const realIndex = arr.length - i - 1;\n        return 'mediaType' in item ? (\n          <MediaSpoiler\n            className={styles.thumb}\n            isVisible\n            width={item.width}\n            height={item.height}\n            thumbDataUri={item.thumbnail?.dataUri}\n          />\n        ) : (\n          <SingleMediaThumb\n            className={buildClassName(isTransactionPreview && realIndex > 0 && styles.noOutline)}\n            boughtMedia={item}\n            index={realIndex}\n          />\n        );\n      })}\n      {isLocked && (\n        <div className={styles.count}>\n          <Icon name=\"stars-lock\" />\n          {media.length > 1 ? media.length : ''}\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SingleMediaThumb({\n  boughtMedia,\n  index,\n  className,\n}: {\n  boughtMedia: BoughtPaidMedia;\n  index?: number;\n  className?: string;\n}) {\n  const media = (boughtMedia.video || boughtMedia.photo)!;\n  const mediaHash = getMediaHash(media, 'pictogram');\n  const thumb = getMediaThumbUri(media);\n\n  const mediaBlob = useMedia(mediaHash);\n\n  return (\n    <div className={buildClassName(styles.thumb, index !== undefined && `stars-transaction-media-${index}`, className)}>\n      {thumb && <img className={styles.blurry} src={thumb} alt=\"\" />}\n      {mediaBlob && <img className={styles.full} src={mediaBlob} alt=\"\" />}\n    </div>\n  );\n}\n\nexport default memo(PaidMediaThumb);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aHAxv_Jg\",\"info\":\"oyYrn3II\",\"stars\":\"K5lc75ku\",\"amount\":\"QLQPuLAr\",\"title\":\"e0pK8CJ_\",\"description\":\"xbERdDMQ\",\"date\":\"l6CwQ0Ev\",\"positive\":\"P_42_ZWR\",\"negative\":\"TGjnLJfH\",\"preview\":\"cnjGihOT\",\"subscriptionStar\":\"z43YvnDX\",\"uniqueGiftBackground\":\"eNvzMw2p\",\"giftSticker\":\"U3dqmnM4\"};","import { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarsTransaction,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { CustomPeer } from '../../../../types';\n\nimport { STARS_CURRENCY_CODE, TON_CURRENCY_CODE } from '../../../../config';\nimport { buildStarsTransactionCustomPeer, formatStarsTransactionAmount } from '../../../../global/helpers/payments';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\nimport { CUSTOM_PEER_PREMIUM } from '../../../../util/objects/customPeer';\nimport { getGiftAttributes, getStickerFromGift } from '../../../common/helpers/gifts';\nimport renderText from '../../../common/helpers/renderText';\nimport { getTransactionTitle, isNegativeAmount } from '../helpers/transaction';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Avatar from '../../../common/Avatar';\nimport StarIcon from '../../../common/icons/StarIcon';\nimport RadialPatternBackground from '../../../common/profile/RadialPatternBackground';\nimport PaidMediaThumb from './PaidMediaThumb';\n\nimport styles from './StarsTransactionItem.module.scss';\n\ntype OwnProps = {\n  transaction: ApiStarsTransaction;\n  className?: string;\n};\n\nconst GIFT_STICKER_SIZE = 36;\n\nfunction selectOptionalPeer(peerId?: string) {\n  return (global: GlobalState) => (\n    peerId ? selectPeer(global, peerId) : undefined\n  );\n}\n\nconst StarsTransactionItem = ({ transaction, className }: OwnProps) => {\n  const { openStarsTransactionModal } = getActions();\n  const {\n    date,\n    amount,\n    photo,\n    peer: transactionPeer,\n    extendedMedia,\n    subscriptionPeriod,\n  } = transaction;\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const peerId = transactionPeer.type === 'peer' ? transactionPeer.id : undefined;\n  const peer = useSelector(selectOptionalPeer(peerId));\n  const starGift = transaction.starGift;\n  const isUniqueGift = starGift?.type === 'starGiftUnique';\n  const giftSticker = starGift && getStickerFromGift(starGift);\n\n  const data = useMemo(() => {\n    let title = getTransactionTitle(oldLang, lang, transaction);\n    let description;\n    let status: string | undefined;\n    let avatarPeer: ApiPeer | CustomPeer | undefined;\n\n    if (transaction.peer.type === 'peer') {\n      description = peer && getPeerTitle(oldLang, peer);\n      avatarPeer = peer || CUSTOM_PEER_PREMIUM;\n    } else {\n      const customPeer = buildStarsTransactionCustomPeer(\n        transaction.peer,\n        transaction.amount.currency === TON_CURRENCY_CODE,\n      );\n      title = customPeer.title || oldLang(customPeer.titleKey!);\n      description = oldLang(customPeer.subtitleKey!);\n      avatarPeer = customPeer;\n    }\n\n    if (transaction.isGiftUpgrade && transaction.starGift?.type === 'starGiftUnique') {\n      description = lang('GiftUnique', { title: transaction.starGift.title, number: transaction.starGift.number });\n    }\n\n    if (transaction.isGiftResale && transaction.starGift?.type === 'starGiftUnique') {\n      description = lang('GiftUnique', { title: transaction.starGift.title, number: transaction.starGift.number });\n    }\n\n    if (transaction.photo) {\n      avatarPeer = undefined;\n    }\n\n    if (transaction.isRefund) {\n      status = oldLang('StarsRefunded');\n    }\n\n    if (transaction.hasFailed) {\n      status = oldLang('StarsFailed');\n    }\n\n    if (transaction.isPending) {\n      status = oldLang('StarsPending');\n    }\n\n    return {\n      title,\n      description,\n      avatarPeer,\n      status,\n    };\n  }, [oldLang, lang, peer, transaction]);\n\n  const previewContent = useMemo(() => {\n    if (isUniqueGift) {\n      const { backdrop } = getGiftAttributes(starGift)!;\n      const backgroundColors = [backdrop!.centerColor, backdrop!.edgeColor];\n\n      return (\n        <>\n          <RadialPatternBackground\n            className={styles.uniqueGiftBackground}\n            backgroundColors={backgroundColors}\n          />\n          <AnimatedIconFromSticker\n            className={styles.giftSticker}\n            sticker={giftSticker}\n            size={GIFT_STICKER_SIZE}\n            play={false}\n          />\n        </>\n      );\n    }\n\n    if (giftSticker) {\n      return (\n        <AnimatedIconFromSticker\n          className={styles.giftSticker}\n          sticker={giftSticker}\n          size={GIFT_STICKER_SIZE}\n          play={false}\n        />\n      );\n    }\n\n    if (extendedMedia) {\n      return <PaidMediaThumb media={extendedMedia} isTransactionPreview />;\n    }\n\n    return (\n      <>\n        <Avatar size=\"medium\" webPhoto={photo} peer={data.avatarPeer} />\n        {Boolean(subscriptionPeriod) && (\n          <StarIcon className={styles.subscriptionStar} type=\"gold\" size=\"small\" />\n        )}\n      </>\n    );\n  }, [isUniqueGift, extendedMedia, photo, data.avatarPeer, subscriptionPeriod, starGift, giftSticker]);\n\n  const handleClick = useLastCallback(() => {\n    openStarsTransactionModal({ transaction });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, className)} onClick={handleClick}>\n      <div className={styles.preview}>\n        {previewContent}\n      </div>\n      <div className={styles.info}>\n        <h3 className={styles.title}>{data.title}</h3>\n        {data.description && (\n          <p className={styles.description}>{renderText(data.description)}</p>\n        )}\n        <p className={styles.date}>\n          {formatDateTimeToString(date * 1000, oldLang.code, true)}\n          {data.status && ` — (${data.status})`}\n        </p>\n      </div>\n      <div className={styles.stars}>\n        <span\n          className={buildClassName(styles.amount, isNegativeAmount(amount) ? styles.negative : styles.positive)}\n        >\n          {formatStarsTransactionAmount(lang, amount)}\n        </span>\n        {amount.currency === STARS_CURRENCY_CODE && <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StarsTransactionItem);\n","import { memo, useEffect, useMemo, useState } from '@teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiStarTopupOption } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\nimport type { RegularLangKey } from '../../../types/language';\n\nimport {\n  PAID_MESSAGES_PURPOSE,\n  STARS_CURRENCY_CODE,\n  TON_CURRENCY_CODE,\n  TON_TOPUP_URL_DEFAULT,\n  TON_USD_RATE_DEFAULT,\n} from '../../../config';\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport { selectChat, selectIsPremiumPurchaseBlocked, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { convertCurrencyFromBaseUnit, convertTonToUsd, formatCurrencyAsString } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Modal from '../../ui/Modal';\nimport TabList, { type TabWithProperties } from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport ParticlesHeader from '../common/ParticlesHeader.tsx';\nimport BalanceBlock from './BalanceBlock';\nimport StarTopupOptionList from './StarTopupOptionList';\nimport StarsSubscriptionItem from './subscription/StarsSubscriptionItem';\nimport StarsTransactionItem from './transaction/StarsTransactionItem';\n\nimport styles from './StarsBalanceModal.module.scss';\n\nconst TRANSACTION_TYPES = ['all', 'inbound', 'outbound'] as const;\nconst TRANSACTION_TABS_KEYS: RegularLangKey[] = [\n  'StarsTransactionsAll',\n  'StarsTransactionsIncoming',\n  'StarsTransactionsOutgoing',\n];\nconst TRANSACTION_ITEM_CLASS = 'StarsTransactionItem';\nconst SUBSCRIPTION_PURPOSE = 'subs';\n\nexport type OwnProps = {\n  modal: TabState['starsBalanceModal'];\n};\n\ntype StateProps = {\n  starsBalanceState?: GlobalState['stars'];\n  tonBalanceState?: GlobalState['ton'];\n  canBuyPremium?: boolean;\n  shouldForceHeight?: boolean;\n  tonUsdRate?: number;\n  tonTopupUrl: string;\n};\n\nconst StarsBalanceModal = ({\n  modal, starsBalanceState, tonBalanceState, canBuyPremium, shouldForceHeight, tonUsdRate, tonTopupUrl,\n}: OwnProps & StateProps) => {\n  const {\n    closeStarsBalanceModal, loadStarsTransactions, loadStarsSubscriptions, openStarsGiftingPickerModal, openInvoice,\n    openUrl,\n  } = getActions();\n\n  const currency = modal?.currency || STARS_CURRENCY_CODE;\n  const currentState = currency === TON_CURRENCY_CODE ? tonBalanceState : starsBalanceState;\n  const { balance, history } = currentState || {};\n  const { subscriptions } = starsBalanceState || {};\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedTabIndex, setSelectedTabIndex] = useState(0);\n  const [areBuyOptionsShown, showBuyOptions, hideBuyOptions] = useFlag();\n\n  const isOpen = Boolean(modal && (starsBalanceState || tonBalanceState));\n\n  const {\n    originStarsPayment, originReaction, originGift, topup,\n  } = modal || {};\n\n  const shouldOpenOnBuy = originStarsPayment || originReaction || originGift || topup;\n\n  const ongoingTransactionAmount = originStarsPayment?.form?.invoice?.totalAmount\n    || originStarsPayment?.subscriptionInfo?.subscriptionPricing?.amount\n    || originReaction?.amount\n    || originGift?.gift.stars\n    || topup?.balanceNeeded;\n  const starsNeeded = ongoingTransactionAmount ? ongoingTransactionAmount - (balance?.amount || 0) : undefined;\n  const starsNeededText = useMemo(() => {\n    const global = getGlobal();\n\n    if (originReaction) {\n      const channel = selectChat(global, originReaction.chatId);\n      if (!channel) return undefined;\n      return oldLang('StarsNeededTextReactions', getChatTitle(oldLang, channel));\n    }\n\n    if (originStarsPayment) {\n      const bot = originStarsPayment.form?.botId ? selectUser(global, originStarsPayment.form.botId) : undefined;\n      if (!bot) return undefined;\n      return oldLang('StarsNeededText', getUserFullName(bot));\n    }\n\n    if (originGift) {\n      const peer = selectUser(global, originGift.peerId);\n      if (!peer) return undefined;\n      return oldLang('StarsNeededTextGift', getPeerTitle(lang, peer));\n    }\n\n    if (topup?.purpose === SUBSCRIPTION_PURPOSE) {\n      return oldLang('StarsNeededTextLink');\n    }\n\n    if (topup?.purpose === PAID_MESSAGES_PURPOSE) {\n      return lang('StarsNeededTextSendPaidMessages', undefined, {\n        withMarkdown: true,\n        withNodes: true,\n      });\n    }\n\n    return undefined;\n  }, [originReaction, originStarsPayment, originGift, topup?.purpose, lang, oldLang]);\n\n  const shouldShowItems = Boolean(history?.all?.transactions.length && !shouldOpenOnBuy);\n  const shouldSuggestGifting = !shouldOpenOnBuy;\n\n  const transactionTabs: TabWithProperties[] = useMemo(() => {\n    return TRANSACTION_TABS_KEYS.map((key) => ({\n      title: lang(key),\n    }));\n  }, [lang]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setSelectedTabIndex(0);\n      hideBuyOptions();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (shouldOpenOnBuy) {\n      showBuyOptions();\n      return;\n    }\n\n    hideBuyOptions();\n  }, [shouldOpenOnBuy]);\n\n  const tosText = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const text = oldLang('lng_credits_summary_options_about');\n    const parts = text.split('{link}');\n    return [\n      parts[0],\n      <SafeLink url={oldLang('StarsTOSLink')} text={oldLang('lng_credits_summary_options_about_link')} />,\n      parts[1],\n    ];\n  }, [isOpen, oldLang]);\n\n  const renderStarsSection = () => {\n    return (\n      <>\n        <ParticlesHeader\n          model=\"swaying-star\"\n          color=\"gold\"\n          title={starsNeeded ? oldLang('StarsNeededTitle', ongoingTransactionAmount) : oldLang('TelegramStars')}\n          description={renderText(\n            starsNeededText || oldLang('TelegramStarsInfo'),\n            ['simple_markdown', 'emoji'],\n          )}\n          isDisabled={!isOpen}\n        />\n        {canBuyPremium && !areBuyOptionsShown && (\n          <Button\n            className={styles.starButton}\n            onClick={showBuyOptions}\n          >\n            {oldLang('Star.List.BuyMoreStars')}\n          </Button>\n        )}\n        {canBuyPremium && !areBuyOptionsShown && shouldSuggestGifting && (\n          <Button\n            isText\n            noForcedUpperCase\n            className={styles.starButton}\n            onClick={openStarsGiftingPickerModalHandler}\n          >\n            {oldLang('TelegramStarsGift')}\n          </Button>\n        )}\n        {areBuyOptionsShown && starsBalanceState?.topupOptions && (\n          <StarTopupOptionList\n            starsNeeded={starsNeeded}\n            options={starsBalanceState.topupOptions}\n            onClick={handleBuyStars}\n          />\n        )}\n      </>\n    );\n  };\n\n  const renderTonSection = () => {\n    const tonAmount = convertCurrencyFromBaseUnit(balance?.amount || 0, TON_CURRENCY_CODE);\n    return (\n      <>\n        <ParticlesHeader\n          model=\"speeding-diamond\"\n          color=\"blue\"\n          title={lang('CurrencyTon')}\n          description={lang('DescriptionAboutTon')}\n          isDisabled={!isOpen}\n        />\n        <div className={styles.tonBalanceContainer}>\n          <div className={styles.tonBalance}>\n            <Icon name=\"toncoin\" className={styles.tonIconBalance} />\n            {tonAmount}\n          </div>\n          {Boolean(tonUsdRate) && (\n            <span className={styles.tonInUsd}>\n              {`≈ ${formatCurrencyAsString(\n                convertTonToUsd(balance?.amount || 0, tonUsdRate),\n                'USD',\n                lang.code,\n              )}`}\n            </span>\n          )}\n        </div>\n        <Button\n          className={styles.topUpButton}\n          onClick={handleTonTopUp}\n        >\n          {lang('ButtonTopUpViaFragment')}\n        </Button>\n      </>\n    );\n  };\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleLoadMoreTransactions = useLastCallback(() => {\n    loadStarsTransactions({\n      type: TRANSACTION_TYPES[selectedTabIndex],\n      isTon: currency === TON_CURRENCY_CODE,\n    });\n  });\n\n  const handleLoadMoreSubscriptions = useLastCallback(() => {\n    loadStarsSubscriptions();\n  });\n\n  const openStarsGiftingPickerModalHandler = useLastCallback(() => {\n    openStarsGiftingPickerModal({});\n  });\n\n  const handleBuyStars = useLastCallback((option: ApiStarTopupOption) => {\n    openInvoice({\n      type: 'stars',\n      stars: option.stars,\n      currency: option.currency,\n      amount: option.amount,\n    });\n  });\n\n  const handleTonTopUp = useLastCallback(() => {\n    openUrl({ url: tonTopupUrl });\n  });\n\n  return (\n    <Modal\n      className={buildClassName(styles.root, !shouldForceHeight && !areBuyOptionsShown && styles.minimal)}\n      isOpen={isOpen}\n      onClose={closeStarsBalanceModal}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n\n          onClick={() => closeStarsBalanceModal()}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {currency !== TON_CURRENCY_CODE && <BalanceBlock balance={balance} className={styles.modalBalance} />}\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.starHeaderText}>\n            {oldLang('TelegramStars')}\n          </h2>\n        </div>\n        <div className={styles.section}>\n          {currency === TON_CURRENCY_CODE ? renderTonSection() : renderStarsSection()}\n        </div>\n        {areBuyOptionsShown && (\n          <div className={styles.tos}>\n            {tosText}\n          </div>\n        )}\n        {currency === TON_CURRENCY_CODE && (\n          <div className={styles.hint}>\n            {lang('TonModalHint')}\n          </div>\n        )}\n        {shouldShowItems && Boolean(subscriptions?.list.length) && (\n          <div className={styles.section}>\n            <h3 className={styles.sectionTitle}>{oldLang('StarMySubscriptions')}</h3>\n            <div className={styles.subscriptions}>\n              {subscriptions?.list.map((subscription) => (\n                <StarsSubscriptionItem\n                  key={subscription.id}\n                  subscription={subscription}\n                />\n              ))}\n              {subscriptions?.nextOffset && (\n                <Button\n                  isText\n                  disabled={subscriptions.isLoading}\n                  size=\"smaller\"\n                  noForcedUpperCase\n                  className={styles.loadMore}\n                  onClick={handleLoadMoreSubscriptions}\n                >\n                  <Icon name=\"down\" className={styles.loadMoreIcon} />\n                  {oldLang('StarMySubscriptionsExpand')}\n                </Button>\n              )}\n            </div>\n          </div>\n        )}\n        {shouldShowItems && (\n          <div className={styles.container}>\n            <div className={styles.section}>\n              <Transition\n                name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n                activeKey={selectedTabIndex}\n                renderCount={TRANSACTION_TABS_KEYS.length}\n                shouldRestoreHeight\n                className={styles.transition}\n              >\n                <InfiniteScroll\n                  onLoadMore={handleLoadMoreTransactions}\n                  items={history?.[TRANSACTION_TYPES[selectedTabIndex]]?.transactions}\n                  scrollContainerClosest={`.${styles.main}`}\n                  itemSelector={`.${TRANSACTION_ITEM_CLASS}`}\n                  className={styles.transactions}\n                  noFastList\n                  noScrollRestoreOnTop\n                >\n                  {history?.[TRANSACTION_TYPES[selectedTabIndex]]?.transactions.map((transaction) => (\n                    <StarsTransactionItem\n                      key={`${transaction.id}-${transaction.isRefund}`}\n                      transaction={transaction}\n                      className={TRANSACTION_ITEM_CLASS}\n                    />\n                  ))}\n                </InfiniteScroll>\n              </Transition>\n            </div>\n            <TabList\n              className={styles.tabs}\n              tabClassName={styles.tab}\n              activeTab={selectedTabIndex}\n              tabs={transactionTabs}\n              onSwitchTab={setSelectedTabIndex}\n            />\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const shouldForceHeight = modal?.currency === TON_CURRENCY_CODE\n      ? Boolean(global.ton?.history?.all?.transactions.length)\n      : Boolean(global.stars?.history?.all?.transactions.length);\n\n    return {\n      shouldForceHeight,\n      starsBalanceState: global.stars,\n      tonBalanceState: global.ton,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      tonUsdRate: global.appConfig?.tonUsdRate || TON_USD_RATE_DEFAULT,\n      tonTopupUrl: global.appConfig?.tonTopupUrl || TON_TOPUP_URL_DEFAULT,\n    };\n  },\n)(StarsBalanceModal));\n","import { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMediaExtendedPreview, ApiMessage, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\n\nimport { getChatTitle, getCustomPeerFromInvite, getUserFullName } from '../../../global/helpers';\nimport {\n  selectChat, selectChatMessage, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Avatar from '../../common/Avatar';\nimport StarIcon from '../../common/icons/StarIcon';\nimport PeerBadge from '../../common/PeerBadge';\nimport PeerChip from '../../common/PeerChip';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport BalanceBlock from './BalanceBlock';\nimport PaidMediaThumb from './transaction/PaidMediaThumb';\n\nimport styles from './StarsBalanceModal.module.scss';\n\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['starsPayment'];\n};\n\ntype StateProps = {\n  starsBalanceState?: GlobalState['stars'];\n  bot?: ApiUser;\n  paidMediaMessage?: ApiMessage;\n  paidMediaChat?: ApiChat;\n};\n\nconst StarPaymentModal = ({\n  modal,\n  bot,\n  starsBalanceState,\n  paidMediaMessage,\n  paidMediaChat,\n}: OwnProps & StateProps) => {\n  const { closeStarsPaymentModal, openStarsBalanceModal, sendStarPaymentForm } = getActions();\n  const [isLoading, markLoading, unmarkLoading] = useFlag();\n  const isOpen = Boolean(modal?.inputInvoice && starsBalanceState);\n\n  const prevModal = usePrevious(modal);\n  const renderingModal = modal || prevModal;\n\n  const { form, subscriptionInfo } = renderingModal || {};\n  const amount = form?.invoice?.totalAmount || subscriptionInfo?.subscriptionPricing?.amount;\n  const isBotSubscription = Boolean(form?.invoice.subscriptionPeriod);\n  const canShowPeerItem = !subscriptionInfo?.subscriptionPricing;\n\n  const photo = form?.photo;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkLoading();\n    }\n  }, [isOpen]);\n\n  const descriptionText = useMemo(() => {\n    if (!renderingModal?.inputInvoice) {\n      return '';\n    }\n\n    const botName = getUserFullName(bot);\n    const starsText = oldLang('Stars.Intro.PurchasedText.Stars', amount);\n\n    if (paidMediaMessage) {\n      const extendedMedia = paidMediaMessage.content.paidMedia!.extendedMedia as ApiMediaExtendedPreview[];\n      const areAllPhotos = extendedMedia.every((media) => !media.duration);\n      const areAllVideos = extendedMedia.every((media) => Boolean(media.duration));\n\n      const mediaText = areAllPhotos ? oldLang('Stars.Transfer.Photos', extendedMedia.length)\n        : areAllVideos ? oldLang('Stars.Transfer.Videos', extendedMedia.length)\n          : oldLang('Media', extendedMedia.length);\n\n      const channelTitle = getChatTitle(oldLang, paidMediaChat!);\n      return oldLang('Stars.Transfer.UnlockInfo', [mediaText, channelTitle, starsText]);\n    }\n\n    if (subscriptionInfo) {\n      return lang('StarsSubscribeText', {\n        chat: subscriptionInfo.title,\n        amount,\n      }, {\n        withNodes: true,\n        withMarkdown: true,\n        pluralValue: amount!,\n      });\n    }\n\n    if (isBotSubscription) {\n      return lang('StarsSubscribeBotText', {\n        name: form.title,\n        amount,\n        bot: botName,\n      }, {\n        pluralValue: amount!,\n      });\n    }\n\n    return oldLang('Stars.Transfer.Info', [form!.title, botName, starsText]);\n  }, [\n    renderingModal?.inputInvoice, bot, oldLang, amount, paidMediaMessage, subscriptionInfo, isBotSubscription, form,\n    paidMediaChat, lang,\n  ]);\n\n  const disclaimerText = useMemo(() => {\n    if (subscriptionInfo) {\n      return lang('StarsSubscribeInfo', {\n        link: <SafeLink url={lang('StarsSubscribeInfoLink')} text={lang('StarsSubscribeInfoLinkText')} />,\n      }, {\n        withNodes: true,\n      });\n    }\n\n    return undefined;\n  }, [subscriptionInfo, lang]);\n\n  const inviteCustomPeer = useMemo(() => {\n    if (!subscriptionInfo) {\n      return undefined;\n    }\n\n    return getCustomPeerFromInvite(subscriptionInfo);\n  }, [subscriptionInfo]);\n\n  const handlePayment = useLastCallback(() => {\n    const balance = starsBalanceState?.balance;\n    if (amount === undefined || balance === undefined) {\n      return;\n    }\n\n    if (amount > balance.amount) {\n      openStarsBalanceModal({\n        originStarsPayment: modal,\n      });\n      return;\n    }\n\n    sendStarPaymentForm({});\n    markLoading();\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.paymentContent}\n      isOpen={isOpen}\n      hasAbsoluteCloseButton\n      isSlim\n      onClose={closeStarsPaymentModal}\n    >\n      <BalanceBlock balance={starsBalanceState?.balance} className={styles.modalBalance} />\n      <div className={styles.paymentImages} dir={oldLang.isRtl ? 'ltr' : 'rtl'}>\n        {paidMediaMessage ? (\n          <PaidMediaThumb media={paidMediaMessage.content.paidMedia!.extendedMedia} />\n        ) : inviteCustomPeer ? (\n          <>\n            <Avatar className={styles.paymentPhoto} peer={inviteCustomPeer} size=\"giant\" />\n            <StarIcon type=\"gold\" size=\"adaptive\" className={styles.avatarStar} />\n          </>\n        ) : (\n          <PeerBadge\n            peer={!photo ? bot : undefined}\n            avatarWebPhoto={photo}\n            avatarSize=\"giant\"\n            badgeIcon=\"star\"\n            badgeText={formatInteger(amount!)}\n            badgeClassName={styles.amountBadge}\n            className={styles.paymentPhoto}\n          />\n        )}\n        <img className={styles.paymentImageBackground} src={StarsBackground} alt=\"\" draggable={false} />\n      </div>\n      <h2 className={styles.headerText}>\n        {inviteCustomPeer ? oldLang('StarsSubscribeTitle') : oldLang('StarsConfirmPurchaseTitle')}\n      </h2>\n      {canShowPeerItem && <PeerChip className={styles.botItem} peerId={form?.botId} />}\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <Button className={styles.paymentButton} size=\"smaller\" onClick={handlePayment} isLoading={isLoading}>\n        {lang(isBotSubscription ? 'StarsSubscribeBotButtonMonth' : 'StarsPay', {\n          amount: formatStarsAsIcon(lang, amount!, { asFont: true }),\n        }, {\n          withNodes: true,\n        })}\n      </Button>\n      {Boolean(disclaimerText) && (\n        <div className={buildClassName(styles.disclaimer, styles.smallerText)}>\n          {disclaimerText}\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const bot = modal?.form?.botId ? selectUser(global, modal.form.botId) : undefined;\n\n    const messageInputInvoice = modal?.inputInvoice?.type === 'message' ? modal.inputInvoice : undefined;\n    const message = messageInputInvoice\n      ? selectChatMessage(global, messageInputInvoice.chatId, messageInputInvoice.messageId) : undefined;\n    const chat = messageInputInvoice ? selectChat(global, messageInputInvoice.chatId) : undefined;\n    const isPaidMedia = message?.content.paidMedia;\n\n    return {\n      bot,\n      starsBalanceState: global.stars,\n      paidMediaMessage: isPaidMedia ? message : undefined,\n      paidMediaChat: isPaidMedia ? chat : undefined,\n    };\n  },\n)(StarPaymentModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"irv1C8bo\",\"subtitleBadge\":\"V7kDVPLm\",\"radialPattern\":\"UvhsGZLf\",\"amount\":\"zTVWZg63\",\"sticker\":\"a1ASgPwu\",\"transition\":\"Tu6_OHoq\",\"transitionSlide\":\"iUTKLzTN\",\"title\":\"ECTvfOda\",\"subtitle\":\"S6JwvHWD\"};","import type { TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarGiftAttributeBackdrop, ApiStarGiftAttributeModel, ApiStarGiftAttributePattern,\n  ApiTypeCurrencyAmount } from '../../../api/types';\n\nimport {\n  formatStarsTransactionAmount,\n} from '../../../global/helpers/payments';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport { useTransitionActiveKey } from '../../../hooks/animations/useTransitionActiveKey';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport StarIcon from '../../common/icons/StarIcon';\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport Transition from '../../ui/Transition';\n\nimport styles from './UniqueGiftHeader.module.scss';\n\ntype OwnProps = {\n  modelAttribute: ApiStarGiftAttributeModel;\n  backdropAttribute: ApiStarGiftAttributeBackdrop;\n  patternAttribute: ApiStarGiftAttributePattern;\n  title?: string;\n  subtitle?: TeactNode;\n  subtitlePeer?: ApiPeer;\n  className?: string;\n  resellPrice?: ApiTypeCurrencyAmount;\n};\n\nconst STICKER_SIZE = 120;\n\nconst UniqueGiftHeader = ({\n  modelAttribute,\n  backdropAttribute,\n  patternAttribute,\n  title,\n  subtitle,\n  subtitlePeer,\n  className,\n  resellPrice,\n}: OwnProps) => {\n  const {\n    openChat,\n  } = getActions();\n\n  const lang = useLang();\n  const activeKey = useTransitionActiveKey([modelAttribute, backdropAttribute, patternAttribute]);\n  const subtitleColor = backdropAttribute?.textColor;\n\n  const radialPatternBackdrop = useMemo(() => {\n    const backdropColors = [backdropAttribute.centerColor, backdropAttribute.edgeColor];\n    const patternColor = backdropAttribute.patternColor;\n\n    return (\n      <RadialPatternBackground\n        className={styles.radialPattern}\n        backgroundColors={backdropColors}\n        patternColor={patternColor}\n        patternIcon={patternAttribute.sticker}\n      />\n    );\n  }, [backdropAttribute, patternAttribute]);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <Transition\n        className={styles.transition}\n        slideClassName={styles.transitionSlide}\n        activeKey={activeKey}\n        direction={1}\n        name=\"zoomBounceSemiFade\"\n      >\n        {radialPatternBackdrop}\n        <AnimatedIconFromSticker\n          className={styles.sticker}\n          sticker={modelAttribute.sticker}\n          size={STICKER_SIZE}\n        />\n      </Transition>\n      {title && <h1 className={styles.title}>{title}</h1>}\n      {Boolean(subtitle) && (\n        <div\n          className={buildClassName(styles.subtitle, subtitlePeer && styles.subtitleBadge)}\n          style={buildStyle(subtitleColor && `color: ${subtitleColor}`)}\n          onClick={() => {\n            if (subtitlePeer) {\n              openChat({ id: subtitlePeer.id });\n            }\n          }}\n        >\n          {subtitle}\n        </div>\n      )}\n      {resellPrice && (\n        <p className={styles.amount}>\n          <span>\n            {formatStarsTransactionAmount(lang, resellPrice)}\n          </span>\n          <StarIcon type=\"gold\" size=\"middle\" />\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default memo(UniqueGiftHeader);\n","import { useMemo, useRef } from '../../lib/teact/teact';\n\n/**\n * Use this hook to bind `<Transition />` animation to changes in the dependency array.\n * Use optional parameter `noAnimation` if you want to prevent the animation even if the dependency array changes.\n*/\nexport function useTransitionActiveKey(deps: unknown[], noAnimation?: boolean): number {\n  const activeKey = useRef(0);\n\n  useMemo(() => {\n    if (!noAnimation) activeKey.current += 1;\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [...deps]);\n\n  return activeKey.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"IzhfRIWu\",\"positive\":\"jvBZSrpd\",\"negative\":\"xDyq9cc0\",\"header\":\"qBOIq6Jn\",\"uniqueGift\":\"ApoQz22o\",\"amount\":\"sso9uZM6\",\"title\":\"ZZAj3hj7\",\"description\":\"NuWOY7ED\",\"tid\":\"tMF8VIOM\",\"refunded\":\"sxWAwxTd\",\"totalStars\":\"Z2YALGgl\",\"starIcon\":\"cU5QlvwL\",\"footer\":\"KgzPpgS6\",\"starsBackground\":\"nML8IQqX\",\"copyIcon\":\"voCttFzS\",\"mediaPreview\":\"C5r59yiV\",\"subtitle\":\"mFYcIYMJ\",\"starGiftSticker\":\"j3akHdtm\"};","import type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarsTransactionPeer, ApiSticker,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { STARS_CURRENCY_CODE } from '../../../../config';\nimport { getMessageLink } from '../../../../global/helpers';\nimport {\n  buildStarsTransactionCustomPeer,\n  formatStarsTransactionAmount,\n} from '../../../../global/helpers/payments';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectGiftStickerForStars,\n  selectGiftStickerForTon,\n  selectPeer,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../../util/clipboard';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\nimport { formatStarsAsIcon } from '../../../../util/localization/format';\nimport { formatPercent } from '../../../../util/textFormat';\nimport { getGiftAttributes, getStickerFromGift } from '../../../common/helpers/gifts';\nimport { getTransactionTitle, isNegativeAmount } from '../helpers/transaction';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Avatar from '../../../common/Avatar';\nimport Icon from '../../../common/icons/Icon';\nimport StarIcon from '../../../common/icons/StarIcon';\nimport SafeLink from '../../../common/SafeLink';\nimport TableInfoModal, { type TableData } from '../../common/TableInfoModal';\nimport UniqueGiftHeader from '../../gift/UniqueGiftHeader';\nimport PaidMediaThumb from './PaidMediaThumb';\n\nimport styles from './StarsTransactionModal.module.scss';\n\nimport StarsBackground from '../../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['starsTransactionModal'];\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  canPlayAnimatedEmojis?: boolean;\n  topSticker?: ApiSticker;\n  paidMessageCommission?: number;\n};\n\nconst StarsTransactionModal: FC<OwnProps & StateProps> = ({\n  modal,\n  peer,\n  canPlayAnimatedEmojis,\n  topSticker,\n  paidMessageCommission,\n}) => {\n  const { showNotification, openMediaViewer, closeStarsTransactionModal } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n  const { transaction } = modal || {};\n\n  const handleOpenMedia = useLastCallback(() => {\n    const media = transaction?.extendedMedia;\n    if (!media) return;\n\n    openMediaViewer({\n      origin: MediaViewerOrigin.StarsTransaction,\n      standaloneMedia: media.flatMap((item) => Object.values(item)),\n    });\n  });\n\n  const starModalData = useMemo(() => {\n    if (!transaction) {\n      return undefined;\n    }\n\n    const {\n      giveawayPostId, photo, amount, isGiftUpgrade, starGift, isGiftResale,\n      starRefCommision,\n    } = transaction;\n\n    const gift = transaction?.starGift;\n    const isUniqueGift = gift?.type === 'starGiftUnique';\n    const sticker = transaction?.starGift ? getStickerFromGift(transaction.starGift) : topSticker;\n\n    const giftAttributes = isUniqueGift ? getGiftAttributes(gift) : undefined;\n\n    const customPeer = (transaction.peer && transaction.peer.type !== 'peer'\n      && buildStarsTransactionCustomPeer(transaction.peer)) || undefined;\n\n    const peerId = transaction.peer?.type === 'peer' ? transaction.peer.id : undefined;\n    const toName = transaction.peer && oldLang(getStarsPeerTitleKey(transaction.peer));\n\n    const title = getTransactionTitle(oldLang, lang, transaction);\n\n    const messageLink = peer && transaction.messageId && !isGiftUpgrade\n      ? getMessageLink(peer, undefined, transaction.messageId) : undefined;\n    const giveawayMessageLink = peer && giveawayPostId ? getMessageLink(peer, undefined, giveawayPostId) : undefined;\n\n    const media = transaction.extendedMedia;\n\n    const mediaAmount = media?.length || 0;\n    const areAllPhotos = media?.every((m) => !m.video);\n    const areAllVideos = media?.every((m) => !m.photo);\n\n    const mediaText = areAllPhotos ? oldLang('Stars.Transfer.Photos', mediaAmount)\n      : areAllVideos ? oldLang('Stars.Transfer.Videos', mediaAmount)\n        : oldLang('Media', mediaAmount);\n\n    const description = transaction.description\n      || (isGiftUpgrade && starGift?.type === 'starGiftUnique' ? starGift.title : undefined)\n      || (media ? mediaText : undefined);\n\n    const shouldDisplayAvatar = !media && !sticker;\n    const avatarPeer = !photo ? (peer || customPeer) : undefined;\n\n    const uniqueGiftHeader = isUniqueGift && (\n      <div className={buildClassName(styles.header, styles.uniqueGift)}>\n        <UniqueGiftHeader\n          backdropAttribute={giftAttributes!.backdrop!}\n          patternAttribute={giftAttributes!.pattern!}\n          modelAttribute={giftAttributes!.model!}\n          title={gift.title}\n          subtitle={lang('GiftInfoCollectible', { number: gift.number })}\n          resellPrice={transaction.amount}\n        />\n      </div>\n    );\n\n    const regularHeader = (\n      <div className={styles.header}>\n        {media && (\n          <PaidMediaThumb\n            className={buildClassName(styles.mediaPreview, 'transaction-media-preview')}\n            media={media}\n            onClick={handleOpenMedia}\n          />\n        )}\n        {!media && sticker && (\n          <AnimatedIconFromSticker\n            key={transaction.id}\n            sticker={sticker}\n            play={canPlayAnimatedEmojis}\n            noLoop\n          />\n        )}\n        {shouldDisplayAvatar && (\n          <Avatar peer={avatarPeer} webPhoto={photo} size=\"giant\" />\n        )}\n        {!sticker && (\n          <img\n            className={buildClassName(styles.starsBackground)}\n            src={StarsBackground}\n            alt=\"\"\n            draggable={false}\n          />\n        )}\n        {Boolean(title) && <h1 className={styles.title}>{title}</h1>}\n        <p className={styles.description}>{description}</p>\n        <p className={styles.amount}>\n          <span\n            className={buildClassName(styles.amount, isNegativeAmount(amount) ? styles.negative : styles.positive)}\n          >\n            {formatStarsTransactionAmount(lang, amount)}\n          </span>\n          {amount.currency === STARS_CURRENCY_CODE && <StarIcon type=\"gold\" size=\"middle\" />}\n          {transaction.isRefund && (\n            <p className={styles.refunded}>{lang('Refunded')}</p>\n          )}\n        </p>\n        {Boolean(transaction.paidMessages && transaction.starRefCommision && paidMessageCommission) && (\n          <p className={styles.description}>\n            {lang(\n              'PaidMessageTransactionDescription',\n              { percent: formatPercent(paidMessageCommission! / 10) },\n              {\n                withNodes: true,\n                withMarkdown: true,\n              },\n            )}\n          </p>\n        )}\n      </div>\n    );\n\n    const tableData: TableData = [];\n\n    if (transaction && starRefCommision && !transaction.paidMessages && !isGiftResale) {\n      tableData.push([\n        oldLang('StarsTransaction.StarRefReason.Title'),\n        oldLang('StarsTransaction.StarRefReason.Program'),\n      ]);\n    }\n\n    if (isGiftUpgrade) {\n      tableData.push([\n        oldLang('StarGiftReason'),\n        oldLang('StarGiftReasonUpgrade'),\n      ]);\n    }\n\n    if (isGiftResale) {\n      tableData.push([\n        oldLang('StarGiftReason'),\n        isNegativeAmount(transaction.amount)\n          ? lang('StarGiftSaleTransaction')\n          : lang('StarGiftPurchaseTransaction'),\n      ]);\n    }\n\n    let peerLabel;\n    if (isGiftUpgrade) {\n      peerLabel = oldLang('Stars.Transaction.GiftFrom');\n    } else if (isNegativeAmount(amount) || transaction.isMyGift) {\n      peerLabel = oldLang('Stars.Transaction.To');\n    } else if (transaction.starRefCommision && !transaction.paidMessages && !isGiftResale) {\n      peerLabel = oldLang('StarsTransaction.StarRefReason.Miniapp');\n    } else if (peerId) {\n      peerLabel = oldLang('Star.Transaction.From');\n    } else {\n      peerLabel = oldLang('Stars.Transaction.Via');\n    }\n\n    tableData.push([\n      peerLabel,\n      peerId ? { chatId: peerId } : toName || '',\n    ]);\n\n    if (transaction.starRefCommision && transaction.paidMessages) {\n      tableData.push([\n        lang('PaidMessageTransactionTotal'),\n        formatStarsAsIcon(lang,\n          transaction.amount.amount / ((100 - transaction.starRefCommision) / 100),\n          { asFont: false, className: styles.starIcon, containerClassName: styles.totalStars }),\n      ]);\n    }\n\n    if (messageLink) {\n      tableData.push([oldLang('Stars.Transaction.Reaction.Post'), <SafeLink url={messageLink} text={messageLink} />]);\n    }\n\n    if (giveawayMessageLink && transaction.amount.currency === STARS_CURRENCY_CODE) {\n      tableData.push([oldLang('BoostReason'), <SafeLink url={giveawayMessageLink} text={oldLang('Giveaway')} />]);\n      tableData.push([oldLang('Gift'), oldLang('Stars', transaction.amount, 'i')]);\n    }\n\n    if (transaction.id) {\n      tableData.push([\n        oldLang('Stars.Transaction.Id'),\n        (\n          <>\n            <div\n              className={styles.tid}\n              onClick={() => {\n                copyTextToClipboard(transaction.id!);\n                showNotification({\n                  message: oldLang('StarsTransactionIDCopied'),\n                });\n              }}\n            >\n              {transaction.id}\n            </div>\n            <Icon className={styles.copyIcon} name=\"copy\" />\n          </>\n        ),\n      ]);\n    }\n\n    tableData.push([\n      oldLang('Stars.Transaction.Date'),\n      formatDateTimeToString(transaction.date * 1000, oldLang.code, true),\n    ]);\n\n    const footerText = oldLang('lng_credits_box_out_about');\n    const footerTextParts = footerText.split('{link}');\n\n    const footer = (\n      <span className={styles.footer}>\n        {footerTextParts[0]}\n        <SafeLink url={oldLang('StarsTOSLink')} text={oldLang('lng_credits_summary_options_about_link')} />\n        {footerTextParts[1]}\n      </span>\n    );\n\n    return {\n      header: isUniqueGift ? uniqueGiftHeader : regularHeader,\n      tableData,\n      footer,\n    };\n  }, [transaction, oldLang, lang, peer, canPlayAnimatedEmojis, topSticker, paidMessageCommission]);\n\n  const prevModalData = usePrevious(starModalData);\n  const renderingModalData = prevModalData || starModalData;\n\n  return (\n    <TableInfoModal\n      isOpen={Boolean(transaction)}\n      className={styles.modal}\n      hasBackdrop={transaction?.starGift?.type === 'starGiftUnique'}\n      header={renderingModalData?.header}\n      tableData={renderingModalData?.tableData}\n      footer={renderingModalData?.footer}\n      buttonText={oldLang('OK')}\n      onClose={closeStarsTransactionModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const peerId = modal?.transaction?.peer?.type === 'peer' && modal.transaction.peer.id;\n    const peer = peerId ? selectPeer(global, peerId) : undefined;\n    const paidMessageCommission = global.appConfig?.starsPaidMessageCommissionPermille;\n\n    const currencyAmount = modal?.transaction.amount;\n    const starsGiftSticker = modal?.transaction.isGift\n      && currencyAmount?.currency === STARS_CURRENCY_CODE ? selectGiftStickerForStars(global, currencyAmount?.amount)\n      : selectGiftStickerForTon(global, currencyAmount?.amount);\n\n    return {\n      peer,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      topSticker: starsGiftSticker,\n      paidMessageCommission,\n    };\n  },\n)(StarsTransactionModal));\n\nfunction getStarsPeerTitleKey(peer: ApiStarsTransactionPeer) {\n  switch (peer.type) {\n    case 'appStore':\n      return 'AppStore';\n    case 'playMarket':\n      return 'PlayMarket';\n    case 'fragment':\n      return 'Fragment';\n    case 'premiumBot':\n      return 'StarsTransactionBot';\n    case 'ads':\n      return 'StarsTransactionAds';\n    case 'api':\n      return 'Stars.Intro.Transaction.TelegramBotApi.Subtitle';\n    default:\n      return 'Stars.Transaction.Unsupported.Title';\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"eR_RZfGB\",\"header\":\"E3R22yAI\",\"title\":\"qdydQHgc\",\"amount\":\"FI6rEJlK\",\"footer\":\"GMWMuWCr\",\"starsBackground\":\"zGCayu45\",\"avatarWrapper\":\"wuTMXDP9\",\"subscriptionStar\":\"enRetSny\",\"amountStar\":\"J8HIcN6k\",\"secondary\":\"oBLHWBtJ\",\"danger\":\"nkwiG25Q\"};","import type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiPeer,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { isApiPeerUser } from '../../../../global/helpers/peers';\nimport {\n  selectPeer,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nimport Avatar from '../../../common/Avatar';\nimport StarIcon from '../../../common/icons/StarIcon';\nimport SafeLink from '../../../common/SafeLink';\nimport Button from '../../../ui/Button';\nimport TableInfoModal, { type TableData } from '../../common/TableInfoModal';\n\nimport styles from './StarsSubscriptionModal.module.scss';\n\nimport StarsBackground from '../../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['starsSubscriptionModal'];\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n};\n\nconst StarsSubscriptionModal: FC<OwnProps & StateProps> = ({\n  modal, peer,\n}) => {\n  const {\n    closeStarsSubscriptionModal,\n    fulfillStarsSubscription,\n    changeStarsSubscription,\n    checkChatInvite,\n    loadStarStatus,\n    openInvoice,\n  } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { subscription } = modal || {};\n\n  const buttonState = useMemo(() => {\n    if (!subscription) {\n      return 'hidden';\n    }\n\n    if (subscription.canRefulfill) {\n      return 'refulfill';\n    }\n\n    const isActive = subscription.until > Date.now() / 1000;\n    if (isActive && !subscription.isCancelled) {\n      return 'cancel';\n    }\n\n    if (isActive && subscription.isCancelled) {\n      return 'renew';\n    }\n\n    const canRestart = subscription.chatInviteHash || subscription.invoiceSlug;\n    if (!isActive && canRestart) {\n      return 'restart';\n    }\n\n    return 'ok';\n  }, [subscription]);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!subscription) {\n      return;\n    }\n\n    switch (buttonState) {\n      case 'refulfill': {\n        fulfillStarsSubscription({ id: subscription.id });\n        break;\n      }\n      case 'restart': {\n        if (subscription.chatInviteHash) {\n          checkChatInvite({ hash: subscription.chatInviteHash });\n        } else if (subscription.invoiceSlug) {\n          openInvoice({\n            type: 'slug',\n            slug: subscription.invoiceSlug,\n          });\n        }\n        loadStarStatus();\n        break;\n      }\n      case 'renew': {\n        changeStarsSubscription({ id: subscription.id, isCancelled: false });\n        break;\n      }\n      case 'cancel': {\n        changeStarsSubscription({ id: subscription.id, isCancelled: true });\n        break;\n      }\n    }\n    closeStarsSubscriptionModal();\n  });\n\n  const starModalData = useMemo(() => {\n    if (!subscription || !peer) {\n      return undefined;\n    }\n\n    const {\n      pricing, until, isCancelled, canRefulfill, photo, title, hasBotCancelled,\n    } = subscription;\n\n    const isBotSubscription = isApiPeerUser(peer);\n\n    const header = (\n      <div className={styles.header}>\n        <div className={styles.avatarWrapper}>\n          <Avatar peer={!photo ? peer : undefined} webPhoto={photo} size=\"giant\" />\n          <StarIcon className={styles.subscriptionStar} type=\"gold\" size=\"adaptive\" />\n        </div>\n        <img\n          className={buildClassName(styles.starsBackground)}\n          src={StarsBackground}\n          alt=\"\"\n          draggable={false}\n        />\n        <h1 className={styles.title}>{title || oldLang('StarsSubscriptionTitle')}</h1>\n        <p className={styles.amount}>\n          {lang('StarsPerMonth', {\n            amount: pricing.amount,\n          }, {\n            withNodes: true,\n            specialReplacement: {\n              [STARS_ICON_PLACEHOLDER]: <StarIcon className={styles.amountStar} size=\"adaptive\" type=\"gold\" />,\n            },\n          })}\n        </p>\n      </div>\n    );\n\n    const tableData: TableData = [];\n\n    tableData.push([\n      oldLang(isBotSubscription ? 'StarsSubscriptionBot' : 'StarsSubscriptionChannel'),\n      { chatId: peer.id },\n    ]);\n\n    if (title) {\n      tableData.push([\n        oldLang('StarsSubscriptionBotProduct'),\n        title,\n      ]);\n    }\n\n    const hasExpired = until < Date.now() / 1000;\n    tableData.push([\n      oldLang(hasExpired ? 'StarsSubscriptionUntilExpired'\n        : isCancelled ? 'StarsSubscriptionUntilExpires' : 'StarsSubscriptionUntilRenews'),\n      formatDateTimeToString(until * 1000, oldLang.code, true),\n    ]);\n\n    const footerTos = lang('StarsTransactionTOS', {\n      link: <SafeLink url={lang('StarsTransactionTOSLink')} text={lang('StarsTransactionTOSLinkText')} />,\n    }, {\n      withNodes: true,\n    });\n\n    const footer = (\n      <span className={styles.footer}>\n        <p className={styles.secondary}>{footerTos}</p>\n        {isCancelled && (\n          <p className={styles.danger}>\n            {oldLang(hasBotCancelled ? 'StarsSubscriptionBotCancelledText' : 'StarsSubscriptionCancelledText')}\n          </p>\n        )}\n        {canRefulfill && (\n          <p className={styles.secondary}>\n            {oldLang('StarsSubscriptionRefulfillInfo', formatDateTimeToString(until * 1000, oldLang.code, true))}\n          </p>\n        )}\n        {!isCancelled && !canRefulfill && hasExpired && (\n          <p className={styles.secondary}>\n            {oldLang('StarsSubscriptionExpiredInfo', formatDateTimeToString(until * 1000, oldLang.code, true))}\n          </p>\n        )}\n        {!isCancelled && !canRefulfill && !hasExpired && (\n          <p className={styles.secondary}>\n            {oldLang('StarsSubscriptionCancelInfo', formatDateTimeToString(until * 1000, oldLang.code, true))}\n          </p>\n        )}\n        {buttonState !== 'hidden' && (\n          <Button\n            size=\"smaller\"\n            color={buttonState === 'cancel' ? 'danger' : 'primary'}\n            isText={buttonState === 'cancel'}\n            onClick={handleButtonClick}\n          >\n            {oldLang(\n              buttonState === 'cancel' ? 'StarsSubscriptionCancel'\n                : buttonState === 'refulfill' ? 'StarsSubscriptionRefulfill'\n                  : buttonState === 'restart' ? 'StarsSubscriptionAgain'\n                    : buttonState === 'renew' ? 'StarsSubscriptionRenew' : 'OK',\n            )}\n          </Button>\n        )}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [buttonState, lang, oldLang, peer, subscription]);\n\n  const prevModalData = usePrevious(starModalData);\n  const renderingModalData = prevModalData || starModalData;\n\n  return (\n    <TableInfoModal\n      isOpen={Boolean(subscription)}\n      className={styles.modal}\n      header={renderingModalData?.header}\n      tableData={renderingModalData?.tableData}\n      footer={renderingModalData?.footer}\n      onClose={closeStarsSubscriptionModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const peerId = modal?.subscription.peerId;\n    const peer = peerId ? selectPeer(global, peerId) : undefined;\n\n    return {\n      peer,\n    };\n  },\n)(StarsSubscriptionModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CuBAw2yg\",\"slider\":\"euOOAbZi\",\"sparkles\":\"_L1YQTIP\",\"progress\":\"kwK0cNPX\",\"floatingBadgeWrapper\":\"uvlMoXj0\",\"floatingBadge\":\"BGSDWAYc\",\"floatingBadgeText\":\"qqQan8uF\",\"floatingBadgeTriangle\":\"mIdJOmsB\"};","import type React from '../../../lib/teact/teact';\nimport {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Sparkles from '../../common/Sparkles';\n\nimport styles from './StarSlider.module.scss';\n\ntype OwnProps = {\n  maxValue: number;\n  defaultValue: number;\n  className?: string;\n  onChange: (value: number) => void;\n};\n\nconst DEFAULT_POINTS = [50, 100, 500, 1000, 2000, 5000, 10000];\n\nconst StarSlider = ({\n  maxValue,\n  defaultValue,\n  className,\n  onChange,\n}: OwnProps) => {\n  const floatingBadgeRef = useRef<HTMLDivElement>();\n\n  const points = useMemo(() => {\n    const result = [];\n    for (let i = 0; i < DEFAULT_POINTS.length; i++) {\n      if (DEFAULT_POINTS[i] < maxValue) {\n        result.push(DEFAULT_POINTS[i]);\n      }\n\n      if (DEFAULT_POINTS[i] >= maxValue) {\n        result.push(maxValue);\n        break;\n      }\n    }\n\n    return result;\n  }, [maxValue]);\n\n  const [value, setValue] = useState(0);\n\n  useEffectOnce(() => {\n    setValue(getProgress(points, defaultValue));\n  });\n\n  const updateSafeBadgePosition = useLastCallback(() => {\n    const badge = floatingBadgeRef.current;\n    if (!badge) return;\n    const parent = badge.parentElement!;\n\n    requestMeasure(() => {\n      const safeMinX = parent.offsetLeft + badge.offsetWidth / 2;\n      const safeMaxX = parent.offsetLeft + parent.offsetWidth - badge.offsetWidth / 2;\n\n      requestMutation(() => {\n        parent.style.setProperty('--_min-x', `${safeMinX}px`);\n        parent.style.setProperty('--_max-x', `${safeMaxX}px`);\n      });\n    });\n  });\n\n  useResizeObserver(floatingBadgeRef, updateSafeBadgePosition);\n\n  const handleChange = useLastCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = Number(event.currentTarget.value);\n    setValue(newValue);\n\n    onChange(getValue(points, newValue));\n  });\n\n  return (\n    <div className={buildClassName(styles.root, className)} style={`--progress: ${value / points.length}`}>\n      <div className={styles.floatingBadgeWrapper}>\n        <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n          <div className={styles.floatingBadgeText}>\n            <Icon name=\"star\" className={styles.floatingBadgeIcon} />\n            <AnimatedCounter text={formatInteger(getValue(points, value))} />\n          </div>\n          <svg className={styles.floatingBadgeTriangle} width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n            <defs>\n              <linearGradient id=\"StarBadgeTriangle\" x1=\"0\" x2=\"1\" y1=\"0\" y2=\"0\">\n                <stop offset=\"-50%\" stop-color=\"#FFAA00\" />\n                <stop offset=\"150%\" stop-color=\"#FFCD3A\" />\n              </linearGradient>\n            </defs>\n            <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"url(#StarBadgeTriangle)\" />\n          </svg>\n        </div>\n      </div>\n      <div className={styles.progress}>\n        <Sparkles preset=\"progress\" className={styles.sparkles} />\n      </div>\n      <input\n        className={styles.slider}\n        type=\"range\"\n        min={0}\n        max={points.length}\n        defaultValue={getProgress(points, defaultValue)}\n        step=\"any\"\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nfunction getProgress(points: number[], value: number) {\n  const pointIndex = points.findIndex((point) => value <= point);\n  const prevPoint = points[pointIndex - 1] || 1;\n  const nextPoint = points[pointIndex] || points[points.length - 1];\n  const progress = (value - prevPoint) / (nextPoint - prevPoint);\n  return pointIndex + progress;\n}\n\nfunction getValue(points: number[], progress: number) {\n  const pointIndex = Math.floor(progress);\n  const prevPoint = points[pointIndex - 1] || 1;\n  const nextPoint = points[pointIndex] || points[points.length - 1];\n  const value = prevPoint + (nextPoint - prevPoint) * (progress - pointIndex);\n  return Math.round(value);\n}\n\nexport default memo(StarSlider);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"RdhRpsCn\",\"title\":\"yzbjj73U\",\"slider\":\"xePPMXOI\",\"description\":\"BlpfdOtK\",\"itemInfo\":\"nS9V516D\",\"itemTitle\":\"sH5Nukjy\",\"itemSubtitle\":\"dHlNODTI\",\"itemIcon\":\"H_iHihXU\",\"sendAsPeerButtonAvatar\":\"_mjvLELm\",\"sendAsPeerMenuButton\":\"zxsRaWYV\",\"buttonDownIcon\":\"zrwUUELS\",\"sendAsPeerMenuBubble\":\"X1PB6mhQ\",\"sendAsPeerMenu\":\"Px1MDij9\",\"sendAsPeersMenuContainer\":\"Al1nfhHJ\",\"headerControlPanel\":\"vu90kSL_\",\"separator\":\"uhQLUjmo\",\"checkBox\":\"Mc3bVeF0\",\"topLabel\":\"bnou4CpV\",\"top\":\"QludQDKR\",\"topBadge\":\"JBF9pTUK\",\"buttonStar\":\"NJJFuym9\",\"topPeer\":\"Ty4Ud_Rd\",\"disclaimer\":\"KRvkHeo1\"};","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPaidReactionPrivacyType,\n  ApiPeer,\n  ApiSendAsPeerId,\n  ApiStarsAmount, ApiUser,\n} from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../config';\nimport { getPeerTitle, isApiPeerUser } from '../../../global/helpers/peers';\nimport {\n  selectChat, selectChatMessage, selectPeer, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport PeerBadge from '../../common/PeerBadge';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\nimport BalanceBlock from '../stars/BalanceBlock';\nimport StarSlider from './StarSlider';\n\nimport styles from './PaidReactionModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['paidReactionModal'];\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n  chat?: ApiChat;\n  maxAmount: number;\n  starBalance?: ApiStarsAmount;\n  defaultPrivacy?: ApiPaidReactionPrivacyType;\n  sendPaidReactionsAsPeerIds?: ApiSendAsPeerId[];\n  currentUserId: string;\n  currentUser: ApiUser;\n};\n\ntype ReactorData = {\n  amount: number;\n  localAmount: number;\n  isMy?: boolean;\n  isAnonymous?: boolean;\n  user?: ApiPeer;\n};\n\nconst MAX_TOP_REACTORS = 3;\nconst DEFAULT_STARS_AMOUNT = 50;\nconst MAX_REACTION_AMOUNT = 2500;\nconst ANONYMOUS_PEER: CustomPeer = {\n  avatarIcon: 'author-hidden',\n  customPeerAvatarColor: '#9eaab5',\n  isCustomPeer: true,\n  titleKey: 'StarsReactionAnonymous',\n};\n\nconst PaidReactionModal = ({\n  modal,\n  chat,\n  message,\n  maxAmount,\n  starBalance,\n  defaultPrivacy,\n  sendPaidReactionsAsPeerIds,\n  currentUserId,\n  currentUser,\n}: OwnProps & StateProps) => {\n  const { closePaidReactionModal, addLocalPaidReaction, loadSendPaidReactionsAs } = getActions();\n\n  const [starsAmount, setStarsAmount] = useState(DEFAULT_STARS_AMOUNT);\n  const [isTouched, markTouched, unmarkTouched] = useFlag();\n  const [shouldSendAsAnonymous, setShouldSendAsAnonymous] = useState(true);\n  const [sendAsPeerId, setSendAsPeerId] = useState(currentUserId);\n\n  const chatId = chat?.id;\n\n  const senderPeer = sendAsPeerId ? (selectPeer(getGlobal(), sendAsPeerId)) : currentUser;\n\n  const oldLang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const lang = useLang();\n\n  const handleShowInTopSendersChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setShouldSendAsAnonymous(!e.target.checked);\n  });\n\n  const handleAmountChange = useLastCallback((value: number) => {\n    setStarsAmount(value);\n    markTouched();\n  });\n\n  useEffect(() => {\n    if (chatId && !sendPaidReactionsAsPeerIds) {\n      loadSendPaidReactionsAs({ chatId });\n    }\n  }, [chatId, sendPaidReactionsAsPeerIds]);\n\n  const filteredMyReactorIds = useMemo(() => {\n    const result = sendPaidReactionsAsPeerIds?.map((peer) => peer.id)\n      .filter((id) => id !== chatId);\n    result?.unshift(currentUserId);\n    return result;\n  }, [sendPaidReactionsAsPeerIds, chatId, currentUserId]);\n\n  const canChangeSendAsPeer = filteredMyReactorIds && filteredMyReactorIds.length > 1;\n\n  useEffect(() => {\n    if (!modal) {\n      unmarkTouched();\n    }\n  }, [modal]);\n\n  useEffect(() => {\n    const currentReactor = message?.reactions?.topReactors?.find((reactor) => reactor.isMy);\n    if (currentReactor) {\n      setShouldSendAsAnonymous(Boolean(currentReactor.isAnonymous));\n      if (currentReactor.peerId) {\n        setSendAsPeerId(currentReactor.peerId);\n      }\n      return;\n    }\n\n    setShouldSendAsAnonymous(defaultPrivacy?.type === 'anonymous' || false);\n    if (defaultPrivacy?.type === 'peer' && filteredMyReactorIds?.includes(defaultPrivacy.peerId)) {\n      setSendAsPeerId(defaultPrivacy.peerId);\n      return;\n    }\n\n    setSendAsPeerId(currentUserId);\n  }, [defaultPrivacy, message?.reactions?.topReactors, filteredMyReactorIds, currentUserId]);\n\n  const handleSend = useLastCallback(() => {\n    if (!modal) return;\n\n    addLocalPaidReaction({\n      chatId: modal.chatId,\n      messageId: modal.messageId,\n      count: starsAmount,\n      isPrivate: shouldSendAsAnonymous,\n      peerId: shouldSendAsAnonymous || sendAsPeerId === currentUserId ? undefined : sendAsPeerId,\n      shouldIgnoreDefaultPrivacy: true,\n    });\n    closePaidReactionModal();\n  });\n\n  const handleSendAsPeerChange = useLastCallback((peerId: string) => {\n    setShouldSendAsAnonymous(false);\n    setSendAsPeerId(peerId);\n  });\n\n  const renderMenuItem = useLastCallback((peerId: string) => {\n    const peer = selectPeer(getGlobal(), peerId);\n    const isSelected = sendAsPeerId === peerId && !shouldSendAsAnonymous;\n    if (!peer) return undefined;\n\n    return (\n      <MenuItem\n\n        onClick={() => handleSendAsPeerChange(peerId)}\n      >\n        <Avatar\n          size=\"small\"\n          peer={peer}\n        />\n        <div className={buildClassName(styles.itemInfo)}>\n          <FullNameTitle className={styles.itemTitle} peer={peer} noFake noVerified />\n          <span className={styles.itemSubtitle}>\n            {isApiPeerUser(peer) ? lang('PeerPersonalAccount') : lang('PeerChannel')}\n          </span>\n        </div>\n        <Icon\n          className={styles.itemIcon}\n          name={isSelected ? 'check' : 'placeholder'}\n        />\n      </MenuItem>\n    );\n  });\n\n  const SendAsPeerMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={buildClassName(styles.sendAsPeerMenuButton, isOpen ? 'active' : '')}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Avatar\n          className={styles.sendAsPeerButtonAvatar}\n          size=\"mini\"\n          peer={shouldSendAsAnonymous ? ANONYMOUS_PEER : senderPeer}\n        />\n        <Icon\n          name=\"down\"\n          className={styles.buttonDownIcon}\n        />\n      </Button>\n    );\n  }, [isMobile, lang, senderPeer, shouldSendAsAnonymous]);\n\n  const sendAsPeersMenu = useMemo(() => {\n    if (!canChangeSendAsPeer) return undefined;\n    return (\n      <DropdownMenu\n        className={buildClassName(styles.sendAsPeerMenu, 'with-menu-transitions')}\n        bubbleClassName={styles.sendAsPeerMenuBubble}\n        trigger={SendAsPeerMenuButton}\n        positionX=\"right\"\n        autoClose\n      >\n        {filteredMyReactorIds.map((id) => (\n          renderMenuItem(id)\n        ))}\n      </DropdownMenu>\n    );\n  }, [SendAsPeerMenuButton, filteredMyReactorIds, canChangeSendAsPeer]);\n\n  const topReactors = useMemo(() => {\n    const global = getGlobal();\n    const all = message?.reactions?.topReactors;\n    if (!all) {\n      return undefined;\n    }\n\n    const result: ReactorData[] = [];\n    let hasCurrentSender = false;\n    let myReactorAmount = 0;\n\n    all.forEach((reactor) => {\n      const peer = reactor.peerId ? selectPeer(global, reactor.peerId) : undefined;\n      if (!peer && !reactor.isAnonymous && !reactor.isMy) return;\n      if (reactor.isMy) {\n        myReactorAmount = reactor.count;\n      }\n\n      if (reactor.isMy && (reactor.peerId !== sendAsPeerId || (reactor.isAnonymous && !shouldSendAsAnonymous))) return;\n\n      const isCurrentReactor = sendAsPeerId === reactor.peerId || (shouldSendAsAnonymous && reactor.isAnonymous);\n\n      if (isCurrentReactor) {\n        hasCurrentSender = true;\n      }\n\n      result.push({\n        amount: reactor.count,\n        localAmount: isCurrentReactor && isTouched ? starsAmount : 0,\n        isMy: reactor.isMy,\n        isAnonymous: reactor.isAnonymous,\n        user: peer,\n      });\n    });\n\n    if (!hasCurrentSender) {\n      const sender = selectPeer(global, sendAsPeerId);\n      result.push({\n        amount: myReactorAmount,\n        localAmount: isTouched ? starsAmount : 0,\n        isMy: true,\n        user: sender,\n      });\n    }\n\n    result.sort((a, b) => (b.amount + b.localAmount) - (a.amount + a.localAmount));\n\n    return result.slice(0, MAX_TOP_REACTORS);\n  }, [isTouched, message?.reactions?.topReactors, starsAmount, sendAsPeerId, shouldSendAsAnonymous]);\n\n  const chatTitle = chat && getPeerTitle(oldLang, chat);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      onClose={closePaidReactionModal}\n      isSlim\n      hasAbsoluteCloseButton\n      contentClassName={styles.content}\n      isLowStackPriority\n    >\n      <div className={styles.sendAsPeersMenuContainer}>\n        {sendAsPeersMenu}\n      </div>\n      <div className={styles.headerControlPanel}>\n        <BalanceBlock balance={starBalance} className={styles.modalBalance} withAddButton />\n      </div>\n\n      <StarSlider\n        className={styles.slider}\n        defaultValue={DEFAULT_STARS_AMOUNT}\n        maxValue={maxAmount}\n        onChange={handleAmountChange}\n      />\n      <h3 className={styles.title}>{oldLang('StarsReactionTitle')}</h3>\n      <div className={styles.description}>\n        {renderText(oldLang('StarsReactionText', chatTitle), ['simple_markdown', 'emoji'])}\n      </div>\n      <Separator>\n        {topReactors && <div className={styles.topLabel}>{oldLang('StarsReactionTopSenders')}</div>}\n      </Separator>\n      {topReactors && (\n        <div className={styles.top}>\n          {topReactors.map((reactor) => {\n            const countText = formatInteger(reactor.amount + reactor.localAmount);\n            const peer = (reactor.isAnonymous || !reactor.user || (reactor.isMy && shouldSendAsAnonymous))\n              ? ANONYMOUS_PEER : reactor.user;\n            const text = 'isCustomPeer' in peer ? oldLang(peer.titleKey)\n              : peer && getPeerTitle(oldLang, peer);\n            return (\n              <PeerBadge\n                className={styles.topPeer}\n                key={`${reactor.user?.id || 'anonymous'}-${countText}`}\n                peer={peer}\n                badgeText={countText}\n                badgeIcon=\"star\"\n                badgeClassName={styles.topBadge}\n                text={text}\n              />\n            );\n          })}\n        </div>\n      )}\n      {topReactors && (<Separator className={styles.separator} />)}\n      <Checkbox\n        className={buildClassName(styles.checkBox, 'dialog-checkbox')}\n        checked={!shouldSendAsAnonymous}\n        onChange={handleShowInTopSendersChange}\n        label={oldLang('StarsReactionShowMeInTopSenders')}\n      />\n      <Button\n        size=\"smaller\"\n        onClick={handleSend}\n      >\n        {lang('SendPaidReaction', { amount: starsAmount }, {\n          withNodes: true,\n          specialReplacement: {\n            [STARS_ICON_PLACEHOLDER]: <Icon className={styles.buttonStar} name=\"star\" />,\n          },\n        })}\n      </Button>\n      <p className={styles.disclaimer}>\n        {lang('StarsReactionTerms', {\n          link: <SafeLink text={lang('StarsReactionLinkText')} url={lang('StarsReactionLink')} />,\n        }, {\n          withNodes: true,\n        })}\n      </p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal && selectChat(global, modal.chatId);\n    const message = modal && selectChatMessage(global, modal.chatId, modal.messageId);\n    const starBalance = global.stars?.balance;\n    const maxAmount = global.appConfig?.paidReactionMaxAmount || MAX_REACTION_AMOUNT;\n    const defaultPrivacy = global.settings.paidReactionPrivacy;\n    const sendPaidReactionsAsPeerIds = chat?.sendPaidReactionsAsPeerIds;\n    const currentUserId = global.currentUserId!;\n    const currentUser = selectUser(global, currentUserId)!;\n\n    return {\n      chat,\n      message,\n      starBalance,\n      maxAmount,\n      defaultPrivacy,\n      sendPaidReactionsAsPeerIds,\n      currentUserId,\n      currentUser,\n    };\n  },\n)(PaidReactionModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"jKOG0It6\",\"header\":\"A_fX4EXY\",\"spacer\":\"ATowWJ60\",\"title\":\"gDNtv9oz\",\"balance-container\":\"eAKZVhOT\",\"balanceContainer\":\"eAKZVhOT\",\"balance-caption\":\"vbwprYel\",\"balanceCaption\":\"vbwprYel\",\"star-balance\":\"lXuIlbVK\",\"starBalance\":\"lXuIlbVK\",\"balance\":\"dIEx_Iqi\",\"optionsSection\":\"Y68CEIKn\",\"checkboxTitle\":\"H4taXei_\",\"actionMessageView\":\"CB1mxsgp\",\"messageInput\":\"o5r2IPoA\",\"limited\":\"mWzLu0c0\",\"footer\":\"jxWZSvet\",\"switcher\":\"zZUpGRSI\",\"switcherStarIcon\":\"zAee80Dv\",\"description\":\"nTPAv1ci\",\"main-button\":\"IDuhjrne\",\"mainButton\":\"IDuhjrne\",\"star\":\"Q4NlMT0o\",\"background\":\"ZORVRSG3\",\"customBgImage\":\"Eny_G3JI\",\"customBgColor\":\"TkJZPU2u\",\"withTransition\":\"soDpW2YR\",\"blurred\":\"M6k91TdM\",\"withRightColumn\":\"FBcNO8hj\"};","import type { ChangeEvent } from 'react';\nimport {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { GiftOption } from './GiftModal';\nimport {\n  type ApiMessage, type ApiPeer, type ApiStarsAmount, MAIN_THREAD_ID,\n} from '../../../api/types';\n\nimport { getPeerTitle, isApiPeerUser } from '../../../global/helpers/peers';\nimport {\n  selectPeer, selectPeerPaidMessagesStars, selectTabState, selectTheme, selectThemeValues, selectUserFullInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\n\nimport useCustomBackground from '../../../hooks/useCustomBackground';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport PremiumProgress from '../../common/PremiumProgress';\nimport ActionMessage from '../../middle/message/ActionMessage';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport styles from './GiftComposer.module.scss';\n\nexport type OwnProps = {\n  gift: GiftOption;\n  giftByStars?: GiftOption;\n  peerId: string;\n};\n\nexport type StateProps = {\n  captionLimit?: number;\n  theme: ThemeKey;\n  isBackgroundBlurred?: boolean;\n  patternColor?: string;\n  customBackground?: string;\n  backgroundColor?: string;\n  peer?: ApiPeer;\n  currentUserId?: string;\n  isPaymentFormLoading?: boolean;\n  starBalance?: ApiStarsAmount;\n  paidMessagesStars?: number;\n  areUniqueStarGiftsDisallowed?: boolean;\n  shouldDisallowLimitedStarGifts?: boolean;\n};\n\nconst LIMIT_DISPLAY_THRESHOLD = 50;\n\nfunction GiftComposer({\n  gift,\n  giftByStars,\n  peerId,\n  peer,\n  captionLimit,\n  theme,\n  isBackgroundBlurred,\n  patternColor,\n  backgroundColor,\n  customBackground,\n  currentUserId,\n  isPaymentFormLoading,\n  starBalance,\n  paidMessagesStars,\n  areUniqueStarGiftsDisallowed,\n  shouldDisallowLimitedStarGifts,\n}: OwnProps & StateProps) {\n  const {\n    sendStarGift, sendPremiumGiftByStars, openInvoice, openGiftUpgradeModal, openStarsBalanceModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [giftMessage, setGiftMessage] = useState<string>('');\n  const [shouldHideName, setShouldHideName] = useState<boolean>(false);\n  const [shouldPayForUpgrade, setShouldPayForUpgrade] = useState<boolean>(false);\n  const [shouldPayByStars, setShouldPayByStars] = useState<boolean>(false);\n\n  const customBackgroundValue = useCustomBackground(theme, customBackground);\n\n  useEffect(() => {\n    if (shouldDisallowLimitedStarGifts) {\n      setShouldPayForUpgrade(true);\n    }\n  }, [shouldDisallowLimitedStarGifts, shouldPayForUpgrade]);\n\n  const isStarGift = 'id' in gift && gift.type === 'starGift';\n  const isPremiumGift = 'months' in gift;\n  const hasPremiumByStars = giftByStars && 'amount' in giftByStars;\n  const isPeerUser = peer && isApiPeerUser(peer);\n  const isSelf = peerId === currentUserId;\n\n  const localMessage = useMemo(() => {\n    if (isPremiumGift) {\n      const currentGift = shouldPayByStars && hasPremiumByStars ? giftByStars : gift;\n      return {\n        id: -1,\n        chatId: '0',\n        isOutgoing: false,\n        senderId: currentUserId,\n        date: Math.floor(Date.now() / 1000),\n        content: {\n          action: {\n            mediaType: 'action',\n            type: 'giftPremium',\n            amount: currentGift.amount,\n            currency: currentGift.currency,\n            months: gift.months,\n            message: giftMessage ? { text: giftMessage } : undefined,\n          },\n        },\n      } satisfies ApiMessage;\n    }\n\n    if (isStarGift) {\n      return {\n        id: -1,\n        chatId: '0',\n        isOutgoing: false,\n        senderId: currentUserId,\n        date: Math.floor(Date.now() / 1000),\n        content: {\n          action: {\n            mediaType: 'action',\n            type: 'starGift',\n            message: giftMessage?.length ? {\n              text: giftMessage,\n            } : undefined,\n            isNameHidden: shouldHideName || undefined,\n            starsToConvert: gift.starsToConvert,\n            canUpgrade: shouldPayForUpgrade || undefined,\n            alreadyPaidUpgradeStars: shouldPayForUpgrade ? gift.upgradeStars : undefined,\n            gift,\n            peerId,\n            fromId: currentUserId,\n          },\n        },\n      } satisfies ApiMessage;\n    }\n    return undefined;\n  }, [currentUserId, gift, giftMessage, isStarGift,\n    shouldHideName, shouldPayForUpgrade, peerId,\n    shouldPayByStars, hasPremiumByStars, giftByStars, isPremiumGift]);\n\n  const handleGiftMessageChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setGiftMessage(e.target.value);\n  });\n\n  const handleShouldHideNameChange = useLastCallback(() => {\n    setShouldHideName(!shouldHideName);\n  });\n\n  const handleShouldPayForUpgradeChange = useLastCallback(() => {\n    setShouldPayForUpgrade(!shouldPayForUpgrade);\n  });\n\n  const toggleShouldPayByStars = useLastCallback(() => {\n    if (hasPremiumByStars) setShouldPayByStars(!shouldPayByStars);\n  });\n\n  const handleOpenUpgradePreview = useLastCallback(() => {\n    if (!isStarGift) return;\n    openGiftUpgradeModal({\n      giftId: gift.id,\n      peerId,\n    });\n  });\n\n  const handleGetMoreStars = useLastCallback(() => {\n    openStarsBalanceModal({});\n  });\n\n  const handleMainButtonClick = useLastCallback(() => {\n    if (isStarGift) {\n      sendStarGift({\n        peerId,\n        shouldHideName,\n        gift,\n        message: giftMessage ? { text: giftMessage } : undefined,\n        shouldUpgrade: shouldPayForUpgrade,\n      });\n      return;\n    }\n\n    if (shouldPayByStars && hasPremiumByStars) {\n      sendPremiumGiftByStars({\n        userId: peerId,\n        months: giftByStars.months,\n        amount: giftByStars.amount,\n        message: giftMessage ? { text: giftMessage } : undefined,\n      });\n      return;\n    }\n\n    if (isPremiumGift) {\n      openInvoice({\n        type: 'giftcode',\n        userIds: [peerId],\n        currency: gift.currency,\n        amount: gift.amount,\n        option: gift,\n        message: giftMessage ? { text: giftMessage } : undefined,\n      });\n    }\n  });\n\n  const canUseStarsPayment = hasPremiumByStars && starBalance && (starBalance.amount > giftByStars.amount);\n  function renderOptionsSection() {\n    const symbolsLeft = captionLimit ? captionLimit - giftMessage.length : undefined;\n\n    const title = getPeerTitle(lang, peer!)!;\n    return (\n      <div className={styles.optionsSection}>\n\n        {!paidMessagesStars && (\n          <TextArea\n            className={styles.messageInput}\n            onChange={handleGiftMessageChange}\n            value={giftMessage}\n            label={lang('GiftMessagePlaceholder')}\n            maxLength={captionLimit}\n            maxLengthIndicator={\n              symbolsLeft && symbolsLeft < LIMIT_DISPLAY_THRESHOLD ? symbolsLeft.toString() : undefined\n            }\n          />\n        )}\n\n        {canUseStarsPayment && (\n          <ListItem className={styles.switcher} narrow ripple onClick={toggleShouldPayByStars}>\n            <span>\n              {lang('GiftPremiumPayWithStars', {\n                stars: formatStarsAsIcon(lang, giftByStars.amount, { className: styles.switcherStarIcon }),\n              }, { withNodes: true })}\n            </span>\n            <Switcher\n              checked={shouldPayByStars}\n              onChange={toggleShouldPayByStars}\n              label={lang('GiftPremiumPayWithStarsAcc')}\n            />\n          </ListItem>\n        )}\n\n        {hasPremiumByStars && starBalance && (\n          <div className={styles.description}>\n            {lang('GiftPremiumDescriptionYourBalance', {\n              stars: formatStarsAsIcon(lang, starBalance.amount, { className: styles.switcherStarIcon }),\n              link: <Link isPrimary onClick={handleGetMoreStars}>{lang('GetMoreStarsLinkText')}</Link>,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n            })}\n          </div>\n        )}\n\n        {isStarGift && Boolean(gift.upgradeStars) && !areUniqueStarGiftsDisallowed && (\n          <ListItem\n            className={styles.switcher}\n            narrow\n            ripple\n            onClick={handleShouldPayForUpgradeChange}\n            disabled={shouldDisallowLimitedStarGifts}\n          >\n            <span>\n              {lang('GiftMakeUnique', {\n                stars: formatStarsAsIcon(lang, gift.upgradeStars, { className: styles.switcherStarIcon }),\n              }, { withNodes: true })}\n            </span>\n            <Switcher\n              checked={shouldPayForUpgrade}\n              onChange={handleShouldPayForUpgradeChange}\n              label={lang('GiftMakeUniqueAcc')}\n            />\n          </ListItem>\n        )}\n        {isStarGift && Boolean(gift.upgradeStars) && !areUniqueStarGiftsDisallowed && (\n          <div className={styles.description}>\n            {isPeerUser\n              ? lang('GiftMakeUniqueDescription', {\n                user: title,\n                link: <Link isPrimary onClick={handleOpenUpgradePreview}>{lang('GiftMakeUniqueLink')}</Link>,\n              }, {\n                withNodes: true,\n              })\n              : lang('GiftMakeUniqueDescriptionChannel', {\n                peer: title,\n                link: <Link isPrimary onClick={handleOpenUpgradePreview}>{lang('GiftMakeUniqueLink')}</Link>,\n              }, {\n                withNodes: true,\n              })}\n          </div>\n        )}\n\n        {isStarGift && (\n          <ListItem className={styles.switcher} narrow ripple onClick={handleShouldHideNameChange}>\n            <span>{lang('GiftHideMyName')}</span>\n            <Switcher\n              checked={shouldHideName}\n              onChange={handleShouldHideNameChange}\n              label={lang('GiftHideMyName')}\n            />\n          </ListItem>\n        )}\n        {isStarGift && (\n          <div className={styles.description}>\n            {isSelf ? lang('GiftHideNameDescriptionSelf')\n              : isPeerUser ? lang('GiftHideNameDescription', { receiver: title })\n                : lang('GiftHideNameDescriptionChannel')}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  function renderFooter() {\n    const amount = shouldPayByStars && hasPremiumByStars\n      ? formatStarsAsIcon(lang, giftByStars.amount, { asFont: true })\n      : isStarGift\n        ? formatStarsAsIcon(lang, gift.stars + (shouldPayForUpgrade ? gift.upgradeStars! : 0), { asFont: true })\n        : isPremiumGift ? formatCurrency(lang, gift.amount, gift.currency) : undefined;\n\n    return (\n      <div className={styles.footer}>\n        {isStarGift && Boolean(gift.availabilityRemains) && (\n          <PremiumProgress\n            isPrimary\n            progress={gift.availabilityRemains / gift.availabilityTotal!}\n            rightText={lang('GiftSoldCount', {\n              count: gift.availabilityTotal! - gift.availabilityRemains,\n            })}\n            leftText={lang('GiftLeftCount', { count: gift.availabilityRemains })}\n            className={styles.limited}\n          />\n        )}\n        <Button\n          className={styles.mainButton}\n          size=\"smaller\"\n          onClick={handleMainButtonClick}\n          isLoading={isPaymentFormLoading}\n        >\n          {lang('GiftSend', {\n            amount,\n          }, {\n            withNodes: true,\n          })}\n        </Button>\n      </div>\n    );\n  }\n\n  const bgClassName = buildClassName(\n    styles.background,\n    styles.withTransition,\n    customBackground && styles.customBgImage,\n    backgroundColor && styles.customBgColor,\n    customBackground && isBackgroundBlurred && styles.blurred,\n  );\n\n  if ((!isStarGift && !isPremiumGift) || !localMessage) return;\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll')}>\n      <div\n        className={buildClassName(styles.actionMessageView, 'MessageList')}\n        // @ts-ignore -- FIXME: Find a way to disable interactions but keep a11y\n        inert\n        style={buildStyle(\n          `--pattern-color: ${patternColor}`,\n          backgroundColor && `--theme-background-color: ${backgroundColor}`,\n        )}\n      >\n        <div\n          className={bgClassName}\n          style={customBackgroundValue ? `--custom-background: ${customBackgroundValue}` : undefined}\n        />\n        <ActionMessage\n          key={isStarGift ? gift.id : isPremiumGift ? gift.months : undefined}\n          message={localMessage}\n          threadId={MAIN_THREAD_ID}\n          appearanceOrder={0}\n        />\n      </div>\n      {renderOptionsSection()}\n      <div className={styles.spacer} />\n      {renderFooter()}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const theme = selectTheme(global);\n    const {\n      stars,\n    } = global;\n    const {\n      isBlurred: isBackgroundBlurred,\n      patternColor,\n      background: customBackground,\n      backgroundColor,\n    } = selectThemeValues(global, theme) || {};\n    const peer = selectPeer(global, peerId);\n    const paidMessagesStars = selectPeerPaidMessagesStars(global, peerId);\n    const userFullInfo = selectUserFullInfo(global, peerId);\n    const currentUserId = global.currentUserId;\n    const isGiftForSelf = currentUserId === peerId;\n    const areUniqueStarGiftsDisallowed = !isGiftForSelf\n      && userFullInfo?.disallowedGifts?.shouldDisallowUniqueStarGifts;\n    const shouldDisallowLimitedStarGifts = !isGiftForSelf\n      && userFullInfo?.disallowedGifts?.shouldDisallowLimitedStarGifts;\n\n    const tabState = selectTabState(global);\n\n    return {\n      starBalance: stars?.balance,\n      peer,\n      theme,\n      isBackgroundBlurred,\n      patternColor,\n      customBackground,\n      backgroundColor,\n      captionLimit: global.appConfig?.starGiftMaxMessageLength,\n      currentUserId: global.currentUserId,\n      isPaymentFormLoading: tabState.isPaymentFormLoading,\n      paidMessagesStars,\n      areUniqueStarGiftsDisallowed,\n      shouldDisallowLimitedStarGifts,\n    };\n  },\n)(GiftComposer));\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"G1mBmzxs\",\"starGift\":\"f5ArEO1S\",\"monthsDescription\":\"rn9aWFNA\",\"description\":\"q4_ydkAx\",\"buy\":\"a8no5WH0\",\"star\":\"DvJLTVFU\",\"amount\":\"sbo2dMcH\",\"starsPriceBlock\":\"QB5SI7ta\",\"starsPriceIcon\":\"jgnEfoeM\",\"radialPattern\":\"Nkotr8Q4\",\"stickerWrapper\":\"rUSoeQXb\"};","import { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumGiftCodeOption,\n  ApiSticker,\n} from '../../../api/types';\n\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectGiftStickerForDuration,\n} from '../../../global/selectors';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport GiftRibbon from '../../common/gift/GiftRibbon';\nimport Button from '../../ui/Button';\n\nimport styles from './GiftItem.module.scss';\n\nexport type OwnProps = {\n  option: ApiPremiumGiftCodeOption;\n  optionByStars?: ApiPremiumGiftCodeOption;\n  baseMonthAmount?: number;\n  onClick: (gift: ApiPremiumGiftCodeOption) => void;\n};\n\nexport type StateProps = {\n  sticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst GIFT_STICKER_SIZE = 86;\n\nfunction GiftItemPremium({\n  sticker, canPlayAnimatedEmojis, baseMonthAmount, option, optionByStars, onClick,\n}: OwnProps & StateProps) {\n  const {\n    months, amount, currency,\n  } = option;\n  const lang = useLang();\n\n  const handleGiftClick = useLastCallback(() => {\n    onClick(option);\n  });\n\n  const perMonth = Math.floor(amount / months);\n  const discount = baseMonthAmount && baseMonthAmount > perMonth\n    ? Math.ceil(100 - perMonth / (baseMonthAmount / 100))\n    : undefined;\n\n  function renderMonths() {\n    const caption = months === 12\n      ? lang('Years', { count: 1 }, { pluralValue: 1 })\n      : lang('Months', { count: months }, { pluralValue: months });\n    return (\n      <div className={styles.monthsDescription}>\n        {caption}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.container}\n      tabIndex={0}\n      role=\"button\"\n      onClick={handleGiftClick}\n    >\n      <AnimatedIconFromSticker\n        sticker={sticker}\n        play={canPlayAnimatedEmojis}\n        noLoop\n        nonInteractive\n        size={GIFT_STICKER_SIZE}\n      />\n\n      {renderMonths()}\n      <div className={styles.description}>\n        {lang('PremiumGiftDescription')}\n      </div>\n      <Button className={styles.buy} nonInteractive size=\"tiny\" pill fluid>\n        {formatCurrencyAsString(amount, currency)}\n      </Button>\n      {optionByStars && (\n        <div className={styles.starsPriceBlock}>\n          {lang('GiftPremiumStarsPrice', {\n            stars: (formatStarsAsIcon(lang, optionByStars.amount, { className: styles.starsPriceIcon })),\n          }, { withNodes: true, withMarkdown: true })}\n        </div>\n      )}\n      {Boolean(discount) && (\n        <GiftRibbon color=\"purple\" text={lang('GiftDiscount', { percent: discount })} />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { option }): StateProps => {\n    const sticker = selectGiftStickerForDuration(global, option.months);\n    const canPlayAnimatedEmojis = selectCanPlayAnimatedEmojis(global);\n\n    return {\n      sticker,\n      canPlayAnimatedEmojis,\n    };\n  },\n)(GiftItemPremium));\n","import { memo, useMemo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiStarGift,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { getStickerFromGift } from '../../common/helpers/gifts';\nimport { getGiftAttributes } from '../../common/helpers/gifts';\n\nimport { type ObserveFn, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport GiftRibbon from '../../common/gift/GiftRibbon';\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\n\nimport styles from './GiftItem.module.scss';\n\nexport type OwnProps = {\n  gift: ApiStarGift;\n  observeIntersection?: ObserveFn;\n  onClick: (gift: ApiStarGift, target: 'original' | 'resell') => void;\n  isResale?: boolean;\n};\n\nconst GIFT_STICKER_SIZE = 90;\n\nfunction GiftItemStar({\n  gift, observeIntersection, onClick, isResale,\n}: OwnProps) {\n  const { openGiftInfoModal } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const stickerRef = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n  const [isVisible, setIsVisible] = useState(false);\n\n  const sticker = getStickerFromGift(gift);\n  const isGiftUnique = gift.type === 'starGiftUnique';\n  const uniqueGift = isGiftUnique ? gift : undefined;\n  const regularGift = !isGiftUnique ? gift : undefined;\n\n  const stars = !isGiftUnique ? regularGift?.stars : uniqueGift?.resellPriceInStars;\n  const resellMinStars = regularGift?.resellMinStars;\n  const priceInStarsAsString = !isGiftUnique && isResale && resellMinStars\n    ? lang.number(resellMinStars) + '+' : stars;\n  const isLimited = !isGiftUnique && Boolean(regularGift?.isLimited);\n  const isSoldOut = !isGiftUnique && Boolean(regularGift?.isSoldOut);\n\n  const handleGiftClick = useLastCallback(() => {\n    if (isSoldOut && !isResale) {\n      openGiftInfoModal({ gift });\n      return;\n    }\n\n    onClick(gift, isResale ? 'resell' : 'original');\n  });\n\n  const radialPatternBackdrop = useMemo(() => {\n    const { backdrop, pattern } = getGiftAttributes(gift) || {};\n\n    if (!backdrop || !pattern) {\n      return undefined;\n    }\n\n    const backdropColors = [backdrop.centerColor, backdrop.edgeColor];\n    const patternColor = backdrop.patternColor;\n\n    return (\n      <RadialPatternBackground\n        className={styles.radialPattern}\n        backgroundColors={backdropColors}\n        patternColor={patternColor}\n        patternIcon={pattern.sticker}\n      />\n    );\n  }, [gift]);\n\n  const giftNumber = isGiftUnique ? gift.number : 0;\n\n  const giftRibbon = useMemo(() => {\n    if (isGiftUnique) {\n      const { backdrop } = getGiftAttributes(gift) || {};\n      if (!backdrop) {\n        return undefined;\n      }\n      return (\n        <GiftRibbon\n          color={[backdrop.centerColor, backdrop.edgeColor]}\n          text={\n            lang('GiftSavedNumber', { number: giftNumber })\n          }\n        />\n      );\n    }\n    if (isResale) {\n      return <GiftRibbon color=\"green\" text={lang('GiftRibbonResale')} />;\n    }\n    if (isSoldOut) {\n      return <GiftRibbon color=\"red\" text={lang('GiftSoldOut')} />;\n    }\n    if (isLimited) {\n      return <GiftRibbon color=\"blue\" text={lang('GiftLimited')} />;\n    }\n    return undefined;\n  }, [isGiftUnique, isResale, gift, isSoldOut, isLimited, lang, giftNumber]);\n\n  useOnIntersect(ref, observeIntersection, (entry) => {\n    const visible = entry.isIntersecting;\n    setIsVisible(visible);\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.container, styles.starGift, 'starGiftItem')}\n      tabIndex={0}\n      role=\"button\"\n      onClick={handleGiftClick}\n    >\n      {radialPatternBackdrop}\n\n      <div\n        ref={stickerRef}\n        className={styles.stickerWrapper}\n        style={`width: ${GIFT_STICKER_SIZE}px; height: ${GIFT_STICKER_SIZE}px`}\n      >\n        {sticker && (\n          <StickerView\n            observeIntersectionForPlaying={observeIntersection}\n            observeIntersectionForLoading={observeIntersection}\n            containerRef={stickerRef}\n            sticker={sticker}\n            size={GIFT_STICKER_SIZE}\n            shouldPreloadPreview\n          />\n        )}\n\n      </div>\n      <Button\n        className={styles.buy}\n        nonInteractive\n        size=\"tiny\"\n        color={isGiftUnique ? 'bluredStarsBadge' : 'stars'}\n        withSparkleEffect={isVisible}\n        pill\n        fluid\n      >\n        {formatStarsAsIcon(lang, priceInStarsAsString || 0, { asFont: true, className: styles.star })}\n      </Button>\n      {giftRibbon}\n    </div>\n  );\n}\n\nexport default memo(GiftItemStar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tJK1W0pJ\",\"transition\":\"pP8TxefR\",\"content\":\"o3V1HqbL\",\"resaleScreenRoot\":\"Vce_TsJO\",\"main\":\"cVXqeu9P\",\"giftSection\":\"v4eKefwN\",\"section\":\"EqfarEYb\",\"resaleStarGiftsContainer\":\"RSFcSNGL\",\"starGiftsContainer\":\"OQX3GZl5\",\"premiumGiftsGallery\":\"n40m3BK2\",\"header\":\"iqqoyRgW\",\"resaleHeader\":\"cJRBgg9B\",\"resaleHeaderContentContainer\":\"OXYQmfGK\",\"headerSlide\":\"BTWhJUQB\",\"headerText\":\"lLRmbpIu\",\"hiddenHeader\":\"XgGzn1cQ\",\"resaleHeaderText\":\"bp_KPx8I\",\"commonHeaderText\":\"ybZo03if\",\"resaleHeaderDescription\":\"XefHUFm1\",\"closeButton\":\"r_Y5uG1T\",\"balance\":\"soqAknia\",\"avatars\":\"N_7tYJKr\",\"logoBackground\":\"ieK4TzSb\",\"center\":\"Ey5gX40t\",\"description\":\"ZioU5h_k\",\"starGiftsDescription\":\"gFgzS8pV\",\"boostIcon\":\"Qi2YR6Dz\",\"optionBottom\":\"RTbClMKE\",\"secondaryInfo\":\"g0R9GSNq\",\"footer\":\"J3Gju3bv\",\"starGiftsTransition\":\"kB6IyXqS\",\"notFoundGiftsRoot\":\"UqnRlJ1n\",\"notFoundGiftsDescription\":\"g0VbwIG_\",\"notFoundGiftsLink\":\"j2zPEQr8\"};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo,\n  useMemo,\n  useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiStarGift,\n} from '../../../api/types';\nimport type { ResaleGiftsFilterOptions } from '../../../types';\n\nimport { RESALE_GIFTS_LIMIT } from '../../../config';\nimport { selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Transition from '../../ui/Transition';\nimport GiftItemStar from './GiftItemStar';\n\nimport styles from './GiftModal.module.scss';\n\nexport type OwnProps = {\n  onGiftClick: (gift: ApiStarGift) => void;\n};\n\ntype StateProps = {\n  gift?: ApiStarGift;\n  resellGifts?: ApiStarGift[];\n  filter: ResaleGiftsFilterOptions;\n  areGiftsAllLoaded?: boolean;\n  areGiftsLoading?: boolean;\n  updateIteration: number;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst GiftModalResaleScreen: FC<OwnProps & StateProps> = ({\n  resellGifts,\n  gift,\n  filter,\n  areGiftsAllLoaded,\n  areGiftsLoading,\n  updateIteration,\n  onGiftClick,\n}) => {\n  const {\n    loadResaleGifts,\n    updateResaleGiftsFilter,\n  } = getActions();\n  const scrollerRef = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n  const resellGiftsIds = useMemo(() => {\n    return resellGifts?.map((g) => g.id);\n  }, [resellGifts]);\n\n  const hasFilter = Boolean(filter?.modelAttributes?.length\n    || filter?.patternAttributes?.length || filter?.backdropAttributes?.length);\n\n  const handleLoadMoreResellGifts = useLastCallback(() => {\n    if (gift) {\n      loadResaleGifts({ giftId: gift.id });\n    }\n  });\n\n  const isGiftsEmpty = Boolean(!resellGifts || resellGifts.length === 0);\n\n  const [viewportIds, onLoadMore] = useInfiniteScroll(\n    handleLoadMoreResellGifts,\n    resellGiftsIds,\n    !gift,\n    RESALE_GIFTS_LIMIT,\n  );\n\n  const { observe } = useIntersectionObserver({ rootRef: scrollerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  const handleResetGiftsFilter = useLastCallback(() => {\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      modelAttributes: [],\n      backdropAttributes: [],\n      patternAttributes: [],\n    } });\n  });\n\n  function renderNothingFoundGiftsWithFilter() {\n    return (\n      <div className={styles.notFoundGiftsRoot}>\n        <AnimatedIconWithPreview\n          size={160}\n          tgsUrl={LOCAL_TGS_URLS.SearchingDuck}\n          nonInteractive\n          noLoop\n        />\n        <div className={styles.notFoundGiftsDescription}>\n          {lang('ResellGiftsNoFound')}\n        </div>\n        {hasFilter && (\n          <Link\n            className={styles.notFoundGiftsLink}\n            onClick={handleResetGiftsFilter}\n          >\n            {lang('ResellGiftsClearFilters')}\n          </Link>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div ref={scrollerRef} className={buildClassName(styles.resaleScreenRoot, 'custom-scroll')}>\n      <Transition\n        name=\"zoomFade\"\n        activeKey={updateIteration}\n      >\n        {isGiftsEmpty && areGiftsAllLoaded && renderNothingFoundGiftsWithFilter()}\n        <InfiniteScroll\n          className={buildClassName(styles.resaleStarGiftsContainer)}\n          items={viewportIds}\n          onLoadMore={onLoadMore}\n          itemSelector=\".starGiftItem\"\n          noFastList\n          preloadBackwards={RESALE_GIFTS_LIMIT}\n          scrollContainerClosest={`.${styles.resaleScreenRoot}`}\n        >\n          {resellGifts?.map((gift) => (\n            <GiftItemStar\n              key={gift.id}\n              gift={gift}\n              observeIntersection={observe}\n              isResale\n              onClick={onGiftClick}\n            />\n          ))}\n        </InfiniteScroll>\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    starGifts,\n  } = global;\n\n  const { resaleGifts } = selectTabState(global);\n  const gift = resaleGifts?.giftId ? starGifts?.byId[resaleGifts.giftId] : undefined;\n  const filter = resaleGifts.filter;\n  const areGiftsAllLoaded = resaleGifts.isAllLoaded;\n  const areGiftsLoading = resaleGifts.isLoading;\n  const updateIteration = resaleGifts.updateIteration;\n\n  return {\n    resellGifts: resaleGifts.gifts,\n    gift,\n    filter,\n    areGiftsAllLoaded,\n    areGiftsLoading,\n    updateIteration,\n  };\n})(GiftModalResaleScreen));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"KLFLR9ji\",\"thumb\":\"fCL5rY2D\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport StickerView from '../../common/StickerView';\n\nimport styles from './ResaleGiftMenuAttributeSticker.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  type: 'model' | 'pattern';\n  sticker: ApiSticker;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n};\n\nconst ATTRIBUTE_STICKER_SIZE = 1.5 * REM;\n\nconst ResaleGiftMenuAttributeSticker: FC<StateProps & OwnProps> = ({\n  className,\n  type,\n  sticker,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  theme,\n}) => {\n  const stickerRef = useRef<HTMLDivElement>();\n\n  const customColor = useDynamicColorListener(stickerRef, undefined, type !== 'pattern');\n\n  return (\n    <div\n      ref={stickerRef}\n      className={buildClassName(styles.root, className)}\n      style={`width: ${ATTRIBUTE_STICKER_SIZE}px; height: ${ATTRIBUTE_STICKER_SIZE}px`}\n    >\n      <StickerView\n        containerRef={stickerRef}\n        sticker={sticker}\n        size={ATTRIBUTE_STICKER_SIZE}\n        shouldPreloadPreview\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        thumbClassName={styles.thumb}\n        customColor={customColor}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    theme: selectTheme(global),\n  };\n})(ResaleGiftMenuAttributeSticker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_VgmQnUg\",\"buttonsContainer\":\"IDlp6U6g\",\"itemIcon\":\"yuctLnuR\",\"sticker\":\"VT562JS0\",\"backdropAttributeMenuItemText\":\"D50wFfRL\",\"menuItemStickerText\":\"THcGWXSA\",\"menuItemText\":\"L6EVE2Ux\",\"backdrop\":\"A29QNxKb\",\"menuItemIcon\":\"GL4rVsev\",\"item\":\"qiYcBOYc\",\"menuContentContainer\":\"EDsBn29z\",\"menu\":\"ISaNdBwd\",\"left\":\"e4Kkh_MR\",\"right\":\"Kz_nCGC3\"};","import { type MouseEvent as ReactMouseEvent } from 'react';\nimport type { ElementRef, FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useCallback,\n  useMemo,\n  useRef,\n  useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeCounter,\n  ApiStarGiftAttributeIdBackdrop,\n  ApiStarGiftAttributeIdPattern,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributePattern,\n  StarGiftAttributeIdModel,\n} from '../../../api/types';\nimport type { ResaleGiftsFilterOptions, ResaleGiftsSortType } from '../../../types';\n\nimport { selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport SearchInput from '../../ui/SearchInput';\nimport ResaleGiftMenuAttributeSticker from './ResaleGiftMenuAttributeSticker';\n\nimport styles from './GiftResaleFilters.module.scss';\n\ntype OwnProps = {\n  dialogRef: ElementRef<HTMLDivElement>;\n};\ntype StateProps = {\n  filter: ResaleGiftsFilterOptions;\n  attributes?: ApiStarGiftAttribute[];\n  counters?: ApiStarGiftAttributeCounter[];\n};\n\nconst GiftResaleFilters: FC<StateProps & OwnProps> = ({\n  attributes,\n  counters,\n  filter,\n  dialogRef,\n}) => {\n  const lang = useLang();\n  const {\n    updateResaleGiftsFilter,\n  } = getActions();\n\n  const [searchModelQuery, setSearchModelQuery] = useState('');\n  const [searchBackdropQuery, setSearchBackdropQuery] = useState('');\n  const [searchPatternQuery, setSearchPatternQuery] = useState('');\n  const filteredAttributes = useMemo(() => {\n    const map: {\n      model: ApiStarGiftAttributeModel[];\n      pattern: ApiStarGiftAttributePattern[];\n      backdrop: ApiStarGiftAttributeBackdrop[];\n    } = {\n      model: [],\n      pattern: [],\n      backdrop: [],\n    };\n\n    for (const counter of counters ?? []) {\n      const { attribute } = counter;\n\n      if (!counter.count) {\n        continue;\n      }\n\n      const found = attributes?.find((attr) => {\n        if (attr.type === 'backdrop' && attribute.type === 'backdrop') {\n          return attr.backdropId === attribute.backdropId;\n        }\n\n        if (attr.type === 'model' && attribute.type === 'model') {\n          return attr.sticker.id === attribute.documentId;\n        }\n\n        if (attr.type === 'pattern' && attribute.type === 'pattern') {\n          return attr.sticker.id === attribute.documentId;\n        }\n\n        return false;\n      });\n\n      if (found?.type === 'backdrop') {\n        map.backdrop.push(found);\n      }\n      if (found?.type === 'model') {\n        map.model.push(found);\n      }\n      if (found?.type === 'pattern') {\n        map.pattern.push(found);\n      }\n    }\n\n    return map;\n  }, [attributes, counters]);\n\n  const filteredAndSearchedAttributes = useMemo(() => {\n    const filterBySearch = <T extends { name?: string }>(items: T[], query: string): T[] => {\n      if (!query.trim()) return items;\n\n      return items.filter(\n        (item): item is T => Boolean(item.name?.toLowerCase().includes(query.toLowerCase())),\n      );\n    };\n\n    return {\n      model: filterBySearch(filteredAttributes.model, searchModelQuery),\n      pattern: filterBySearch(filteredAttributes.pattern, searchPatternQuery),\n      backdrop: filterBySearch(filteredAttributes.backdrop, searchBackdropQuery),\n    };\n  }, [filteredAttributes, searchModelQuery, searchBackdropQuery, searchPatternQuery]);\n\n  // Sort Menu\n  const sortMenuRef = useRef<HTMLDivElement>();\n  const {\n    isContextMenuOpen: isSortContextMenuOpen,\n    contextMenuAnchor: sortContextMenuAnchor,\n    handleContextMenu: handleSortContextMenu,\n    handleContextMenuClose: handleSortContextMenuClose,\n    handleContextMenuHide: handleSortContextMenuHide,\n  } = useContextMenuHandlers(dialogRef);\n  const getSortMenuElement = useLastCallback(() => sortMenuRef.current!);\n\n  // Model Menu\n  const modelMenuRef = useRef<HTMLDivElement>();\n  const {\n    isContextMenuOpen: isModelContextMenuOpen,\n    contextMenuAnchor: modelContextMenuAnchor,\n    handleContextMenu: handleModelContextMenu,\n    handleContextMenuClose: handleModelContextMenuClose,\n    handleContextMenuHide: handleModelContextMenuHide,\n  } = useContextMenuHandlers(dialogRef);\n  const getModelMenuElement = useLastCallback(\n    () => modelMenuRef.current!,\n  );\n\n  // Backdrop Menu\n  const backdropMenuRef = useRef<HTMLDivElement>();\n  const {\n    isContextMenuOpen: isBackdropContextMenuOpen,\n    contextMenuAnchor: backdropContextMenuAnchor,\n    handleContextMenu: handleBackdropContextMenu,\n    handleContextMenuClose: handleBackdropContextMenuClose,\n    handleContextMenuHide: handleBackdropContextMenuHide,\n  } = useContextMenuHandlers(dialogRef);\n  const getBackdropMenuElement = useLastCallback(() => backdropMenuRef.current!);\n\n  // Pattern Menu\n  const patternMenuRef = useRef<HTMLDivElement>();\n  const {\n    isContextMenuOpen: isPatternContextMenuOpen,\n    contextMenuAnchor: patternContextMenuAnchor,\n    handleContextMenu: handlePatternContextMenu,\n    handleContextMenuClose: handlePatternContextMenuClose,\n    handleContextMenuHide: handlePatternContextMenuHide,\n  } = useContextMenuHandlers(dialogRef);\n  const getPatternMenuElement = useLastCallback(() => patternMenuRef.current!);\n\n  const SortMenuButton: FC<{ onTrigger: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => void; isOpen?: boolean }>\n   = useMemo(() => {\n     const sortType = filter.sortType;\n     return ({ onTrigger, isOpen: isMenuOpen }) => (\n       <div\n         className={styles.item}\n         onClick={onTrigger}\n       >\n         {sortType === 'byDate' && lang('ValueGiftSortByDate')}\n         {sortType === 'byNumber' && lang('ValueGiftSortByNumber')}\n         {sortType === 'byPrice' && lang('ValueGiftSortByPrice')}\n         <Icon\n           name=\"dropdown-arrows\"\n           className={styles.itemIcon}\n         />\n       </div>\n     );\n   }, [lang, filter]);\n\n  const ModelMenuButton:\n  FC<{ onTrigger: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => void; isOpen?: boolean }>\n   = useMemo(() => {\n     const attributesCount = filter?.modelAttributes?.length || 0;\n     return ({ onTrigger, isOpen: isMenuOpen }) => (\n       <div\n         className={styles.item}\n         onClick={onTrigger}\n       >\n         {attributesCount === 0 && lang('GiftAttributeModel')}\n         {attributesCount > 0\n           && lang('GiftAttributeModelPlural', { count: attributesCount }, { pluralValue: attributesCount })}\n         <Icon\n           name=\"dropdown-arrows\"\n           className={styles.itemIcon}\n         />\n       </div>\n     );\n   }, [lang, filter]);\n  const BackdropMenuButton:\n  FC<{ onTrigger: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => void; isOpen?: boolean }>\n   = useMemo(() => {\n     const attributesCount = filter?.backdropAttributes?.length || 0;\n     return ({ onTrigger, isOpen: isMenuOpen }) => (\n       <div\n         className={styles.item}\n         onClick={onTrigger}\n       >\n         {attributesCount === 0 && lang('GiftAttributeBackdrop')}\n         {attributesCount > 0\n           && lang('GiftAttributeBackdropPlural', { count: attributesCount }, { pluralValue: attributesCount })}\n         <Icon\n           name=\"dropdown-arrows\"\n           className={styles.itemIcon}\n         />\n       </div>\n     );\n   }, [lang, filter]);\n  const PatternMenuButton: FC<{ onTrigger: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => void; isOpen?: boolean }>\n  = useMemo(() => {\n    const attributesCount = filter?.patternAttributes?.length || 0;\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <div\n        className={styles.item}\n        onClick={onTrigger}\n      >\n        {attributesCount === 0 && lang('GiftAttributeSymbol')}\n        {attributesCount > 0\n          && lang('GiftAttributeSymbolPlural', { count: attributesCount }, { pluralValue: attributesCount })}\n        <Icon\n          name=\"dropdown-arrows\"\n          className={styles.itemIcon}\n        />\n      </div>\n    );\n  }, [lang, filter]);\n\n  const handleSortMenuItemClick = useLastCallback((type: ResaleGiftsSortType) => {\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      sortType: type,\n    } });\n  });\n\n  const handleSelectedAllModelsClick = useLastCallback(() => {\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      modelAttributes: [],\n    } });\n  });\n  const handleSelectedAllPatternsClick = useLastCallback(() => {\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      patternAttributes: [],\n    } });\n  });\n  const handleSelectedAllBackdropsClick = useLastCallback(() => {\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      backdropAttributes: [],\n    } });\n  });\n\n  const handleModelMenuItemClick = useLastCallback((attribute: ApiStarGiftAttributeModel) => {\n    if (!counters) return;\n    const attributes = filter.modelAttributes || [];\n    const modelAttribute\n      = counters.find((counter): counter is ApiStarGiftAttributeCounter<StarGiftAttributeIdModel> =>\n        counter.attribute.type === 'model' && counter.attribute.documentId === attribute.sticker.id,\n      )?.attribute;\n\n    if (!modelAttribute) return;\n\n    const isActive = attributes.some((item) => item.documentId === modelAttribute.documentId);\n    const updatedAttributes = isActive\n      ? attributes.filter((item) => item.documentId !== modelAttribute.documentId)\n      : [...attributes, modelAttribute];\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      modelAttributes: updatedAttributes,\n    } });\n  });\n\n  const handlePatternMenuItemClick = useLastCallback((attribute: ApiStarGiftAttributePattern) => {\n    if (!counters) return;\n    const attributes = filter.patternAttributes || [];\n    const patternAttribute = counters.find(\n      (counter): counter is ApiStarGiftAttributeCounter<ApiStarGiftAttributeIdPattern> =>\n        counter.attribute.type === 'pattern' && counter.attribute.documentId === attribute.sticker.id,\n    )?.attribute;\n\n    if (!patternAttribute) return;\n\n    const isActive = attributes.some((item) => item.documentId === patternAttribute.documentId);\n    const updatedAttributes = isActive\n      ? attributes.filter((item) => item.documentId !== patternAttribute.documentId)\n      : [...attributes, patternAttribute];\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      patternAttributes: updatedAttributes,\n    } });\n  });\n\n  const handleBackdropMenuItemClick = useLastCallback((attribute: ApiStarGiftAttributeBackdrop) => {\n    if (!counters) return;\n    const attributes = filter.backdropAttributes || [];\n    const backdropAttribute = counters.find(\n      (counter): counter is ApiStarGiftAttributeCounter<ApiStarGiftAttributeIdBackdrop> =>\n        counter.attribute.type === 'backdrop' && counter.attribute.backdropId === attribute.backdropId,\n    )?.attribute;\n\n    if (!backdropAttribute) return;\n\n    const isActive = attributes.some((item) => item.backdropId === backdropAttribute.backdropId);\n    const updatedAttributes = isActive\n      ? attributes.filter((item) => item.backdropId !== backdropAttribute.backdropId)\n      : [...attributes, backdropAttribute];\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      backdropAttributes: updatedAttributes,\n    } });\n  });\n\n  function renderSortMenuItems() {\n    return (\n      <>\n        <MenuItem icon=\"sort-by-price\" onClick={() => { handleSortMenuItemClick('byPrice'); }}>\n          <div className={styles.menuItemText}>\n            {lang('GiftSortByPrice')}\n          </div>\n          <Icon\n            className={styles.menuItemIcon}\n            name={filter?.sortType === 'byPrice' ? 'check' : 'placeholder'}\n          />\n        </MenuItem>\n        <MenuItem icon=\"sort-by-date\" onClick={() => { handleSortMenuItemClick('byDate'); }}>\n          <div className={styles.menuItemText}>\n            {lang('GiftSortByDate')}\n          </div>\n          <Icon\n            className={styles.menuItemIcon}\n            name={filter?.sortType === 'byDate' ? 'check' : 'placeholder'}\n          />\n\n        </MenuItem>\n        <MenuItem icon=\"sort-by-number\"onClick={() => { handleSortMenuItemClick('byNumber'); }}>\n          <div className={styles.menuItemText}>\n            {lang('GiftSortByNumber')}\n          </div>\n          <Icon\n            className={styles.menuItemIcon}\n            name={filter?.sortType === 'byNumber' ? 'check' : 'placeholder'}\n          />\n        </MenuItem>\n      </>\n    );\n  }\n\n  function renderSortMenu() {\n    return (\n      <Menu\n        isOpen={isSortContextMenuOpen}\n        anchor={sortContextMenuAnchor}\n        ref={sortMenuRef}\n        className={buildClassName(\n          styles.menu,\n          styles.left,\n          'with-menu-transitions',\n        )}\n        getMenuElement={getSortMenuElement}\n        autoClose\n        onClose={handleSortContextMenuClose}\n        onCloseAnimationEnd={handleSortContextMenuHide}\n        positionX=\"left\"\n      >\n        {renderSortMenuItems()}\n      </Menu>\n    );\n  }\n\n  const handleSearchModelInputReset = useCallback(() => {\n    setSearchModelQuery('');\n  }, []);\n  const handleSearchBackdropInputReset = useCallback(() => {\n    setSearchBackdropQuery('');\n  }, []);\n  const handleSearchPatternInputReset = useCallback(() => {\n    setSearchPatternQuery('');\n  }, []);\n  const handleSearchInputClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n  });\n\n  const modelMenuItemsContainerRef = useRef<HTMLDivElement>();\n  const { observe } = useIntersectionObserver({\n    rootRef: modelMenuItemsContainerRef,\n    isDisabled: !modelContextMenuAnchor,\n  });\n\n  function renderModelMenuItems() {\n    const models = filteredAndSearchedAttributes.model;\n    const selectedAttributes = filter.modelAttributes ?? [];\n    const isSelectedAll = selectedAttributes.length === 0;\n    return (\n      <div className={styles.menuContentContainer} ref={modelMenuItemsContainerRef}>\n        <SearchInput\n          onClick={handleSearchInputClick}\n          className={styles.search}\n          value={searchModelQuery}\n          onChange={setSearchModelQuery}\n          onReset={handleSearchModelInputReset}\n          placeholder={lang('Search')}\n        />\n        <MenuItem icon=\"select\" onClick={handleSelectedAllModelsClick} disabled={isSelectedAll}>\n          {lang('ContextMenuItemSelectAll')}\n        </MenuItem>\n        {models.map((model) => {\n          const isSelected = isSelectedAll\n            || selectedAttributes.some((attr) => attr.documentId === model.sticker.id);\n          return (\n            <MenuItem\n              key={model.name}\n              onClick={() => {\n                handleModelMenuItemClick(model);\n              }}\n            >\n              <ResaleGiftMenuAttributeSticker\n                className={styles.sticker}\n                sticker={model.sticker}\n                type=\"model\"\n                observeIntersectionForLoading={observe}\n                observeIntersectionForPlaying={observe}\n              />\n              <div className={styles.menuItemStickerText}>\n                {model.name}\n              </div>\n              <Icon\n                className={styles.menuItemIcon}\n                name={isSelected ? 'check' : 'placeholder'}\n              />\n            </MenuItem>\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderModelMenu() {\n    return (\n      <Menu\n        isOpen={isModelContextMenuOpen}\n        anchor={modelContextMenuAnchor}\n        ref={modelMenuRef}\n        className={buildClassName(\n          styles.menu,\n          styles.left,\n          'with-menu-transitions',\n        )}\n        getMenuElement={getModelMenuElement}\n        autoClose\n        onClose={handleModelContextMenuClose}\n        onCloseAnimationEnd={handleModelContextMenuHide}\n      >\n        {renderModelMenuItems()}\n      </Menu>\n    );\n  }\n\n  function renderBackdropMenuItems() {\n    const backdrops = filteredAndSearchedAttributes.backdrop;\n    const selectedAttributes = filter.backdropAttributes ?? [];\n    const isSelectedAll = selectedAttributes.length === 0;\n\n    return (\n      <div className={styles.menuContentContainer}>\n        <SearchInput\n          onClick={handleSearchInputClick}\n          className={styles.search}\n          value={searchBackdropQuery}\n          onChange={setSearchBackdropQuery}\n          onReset={handleSearchBackdropInputReset}\n          placeholder={lang('Search')}\n        />\n        <MenuItem icon=\"select\" onClick={handleSelectedAllBackdropsClick} disabled={isSelectedAll}>\n          {lang('ContextMenuItemSelectAll')}\n        </MenuItem>\n        {backdrops.map((backdrop) => {\n          const isSelected = isSelectedAll\n            || selectedAttributes.some((attr) => attr.backdropId === backdrop.backdropId);\n\n          return (\n            <MenuItem\n              key={backdrop.name}\n              onClick={() => {\n                handleBackdropMenuItemClick(backdrop);\n              }}\n            >\n              <RadialPatternBackground\n                className={styles.backdrop}\n                backgroundColors={[backdrop.centerColor, backdrop.edgeColor]}\n                patternColor={backdrop.patternColor}\n              />\n              <div className={styles.backdropAttributeMenuItemText}>\n                {backdrop.name}\n              </div>\n              <Icon\n                className={styles.menuItemIcon}\n                name={isSelected ? 'check' : 'placeholder'}\n              />\n            </MenuItem>\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderBackdropMenu() {\n    return (\n      <Menu\n        isOpen={isBackdropContextMenuOpen}\n        anchor={backdropContextMenuAnchor}\n        ref={backdropMenuRef}\n        className={buildClassName(styles.menu, styles.right, 'with-menu-transitions')}\n        getMenuElement={getBackdropMenuElement}\n        autoClose\n        onClose={handleBackdropContextMenuClose}\n        onCloseAnimationEnd={handleBackdropContextMenuHide}\n        positionX=\"right\"\n      >\n        {renderBackdropMenuItems()}\n      </Menu>\n    );\n  }\n\n  function renderPatternMenuItems() {\n    const patterns = filteredAndSearchedAttributes.pattern;\n    const selectedAttributes = filter.patternAttributes ?? [];\n    const isSelectedAll = selectedAttributes.length === 0;\n\n    return (\n      <div className={styles.menuContentContainer}>\n        <SearchInput\n          onClick={handleSearchInputClick}\n          className={styles.search}\n          value={searchPatternQuery}\n          onChange={setSearchPatternQuery}\n          onReset={handleSearchPatternInputReset}\n          placeholder={lang('Search')}\n        />\n        <MenuItem icon=\"select\" onClick={handleSelectedAllPatternsClick} disabled={isSelectedAll}>\n          {lang('ContextMenuItemSelectAll')}\n        </MenuItem>\n        {patterns.map((pattern) => {\n          const isSelected = isSelectedAll\n            || selectedAttributes.some((attr) => attr.documentId === pattern.sticker.id);\n\n          return (\n            <MenuItem\n              key={pattern.name}\n              onClick={() => {\n                handlePatternMenuItemClick(pattern);\n              }}\n            >\n\n              <ResaleGiftMenuAttributeSticker\n                className={styles.sticker}\n                sticker={pattern.sticker}\n                type=\"pattern\"\n              />\n\n              <div className={styles.menuItemStickerText}>\n                {pattern.name}\n              </div>\n              <Icon\n                className={styles.menuItemIcon}\n                name={isSelected ? 'check' : 'placeholder'}\n              />\n            </MenuItem>\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderPatternMenu() {\n    return (\n      <Menu\n        isOpen={isPatternContextMenuOpen}\n        anchor={patternContextMenuAnchor}\n        ref={patternMenuRef}\n        className={buildClassName(styles.menu, styles.right, 'with-menu-transitions')}\n        getMenuElement={getPatternMenuElement}\n        autoClose\n        onClose={handlePatternContextMenuClose}\n        onCloseAnimationEnd={handlePatternContextMenuHide}\n      >\n        {renderPatternMenuItems()}\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      {Boolean(sortContextMenuAnchor) && renderSortMenu()}\n      {Boolean(modelContextMenuAnchor) && renderModelMenu()}\n      {Boolean(backdropContextMenuAnchor) && renderBackdropMenu()}\n      {Boolean(patternContextMenuAnchor) && renderPatternMenu()}\n      <div className={styles.buttonsContainer}>\n        <SortMenuButton\n          onTrigger={handleSortContextMenu}\n          isOpen={isSortContextMenuOpen}\n        />\n        <ModelMenuButton\n          onTrigger={handleModelContextMenu}\n          isOpen={isModelContextMenuOpen}\n        />\n        <BackdropMenuButton\n          onTrigger={handleBackdropContextMenu}\n          isOpen={isBackdropContextMenuOpen}\n        />\n        <PatternMenuButton\n          onTrigger={handlePatternContextMenu}\n          isOpen={isPatternContextMenuOpen}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const { resaleGifts } = selectTabState(global);\n\n  const attributes = resaleGifts.attributes;\n  const counters = resaleGifts.counters;\n  const filter = resaleGifts.filter;\n\n  return {\n    attributes,\n    counters,\n    filter,\n  };\n})(GiftResaleFilters));\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"cUjwvN00\",\"item-selected\":\"medfcJpd\",\"itemSelected\":\"medfcJpd\",\"item\":\"dO7FKYY4\",\"selected-item\":\"B2lEJk1v\",\"selectedItem\":\"B2lEJk1v\",\"star\":\"Pb7AU805\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { StarGiftCategory } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\n\nimport styles from './StarGiftCategoryList.module.scss';\n\ntype OwnProps = {\n  onCategoryChanged: (category: StarGiftCategory) => void;\n};\n\ntype StateProps = {\n  idsByCategory?: Record<StarGiftCategory, string[]>;\n  areLimitedStarGiftsDisallowed?: boolean;\n};\n\nconst StarGiftCategoryList = ({\n  idsByCategory,\n  onCategoryChanged,\n  areLimitedStarGiftsDisallowed,\n}: StateProps & OwnProps) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n  const starCategories: number[] | undefined = useMemo(() => idsByCategory && Object.keys(idsByCategory)\n    .filter((category) => category !== 'all' && category !== 'limited')\n    .map(Number)\n    .sort((a, b) => a - b),\n  [idsByCategory]);\n\n  const hasResale = idsByCategory && idsByCategory['resale'].length > 0;\n\n  const [selectedCategory, setSelectedCategory] = useState<StarGiftCategory>('all');\n\n  function handleItemClick(category: StarGiftCategory) {\n    setSelectedCategory(category);\n    onCategoryChanged(\n      category,\n    );\n  }\n\n  function renderCategoryName(category: StarGiftCategory) {\n    if (category === 'all') return lang('AllGiftsCategory');\n    if (category === 'stock') return lang('StockGiftsCategory');\n    if (category === 'limited') return lang('LimitedGiftsCategory');\n    if (category === 'resale') return lang('GiftCategoryResale');\n    return category;\n  }\n\n  function renderCategoryItem(category: StarGiftCategory) {\n    return (\n      <div\n        className={buildClassName(\n          styles.item,\n          selectedCategory === category && styles.selectedItem,\n        )}\n        onClick={() => handleItemClick(category)}\n      >\n        {Number.isInteger(category) && (\n          <StarIcon\n            className={styles.star}\n            type=\"gold\"\n            size=\"middle\"\n          />\n        )}\n        {renderCategoryName(category)}\n      </div>\n    );\n  }\n\n  useHorizontalScroll(ref, undefined, true);\n\n  return (\n    <div ref={ref} className={buildClassName(styles.list, 'no-scrollbar')}>\n      {renderCategoryItem('all')}\n      {!areLimitedStarGiftsDisallowed && renderCategoryItem('limited')}\n      {!areLimitedStarGiftsDisallowed && hasResale && renderCategoryItem('resale')}\n      {renderCategoryItem('stock')}\n      {starCategories?.map(renderCategoryItem)}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { starGifts } = global;\n\n    return {\n      idsByCategory: starGifts?.idsByCategory,\n    };\n  },\n)(StarGiftCategoryList));\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiDisallowedGifts,\n  ApiPeer,\n  ApiPremiumGiftCodeOption,\n  ApiStarGift,\n  ApiStarGiftRegular,\n  ApiStarsAmount,\n} from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { StarGiftCategory } from '../../../types';\n\nimport { STARS_CURRENCY_CODE } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport { getPeerTitle, isApiPeerChat, isApiPeerUser } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { selectPeer, selectUserFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport BalanceBlock from '../stars/BalanceBlock';\nimport GiftSendingOptions from './GiftComposer';\nimport GiftItemPremium from './GiftItemPremium';\nimport GiftItemStar from './GiftItemStar';\nimport GiftModalResaleScreen from './GiftModalResaleScreen';\nimport GiftResaleFilters from './GiftResaleFilters';\nimport StarGiftCategoryList from './StarGiftCategoryList';\n\nimport styles from './GiftModal.module.scss';\n\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['giftModal'];\n};\n\nexport type GiftOption = ApiPremiumGiftCodeOption | ApiStarGift;\n\ntype StateProps = {\n  boostPerSentGift?: number;\n  starGiftsById?: Record<string, ApiStarGiftRegular>;\n  starGiftIdsByCategory?: Record<StarGiftCategory, string[]>;\n  starBalance?: ApiStarsAmount;\n  peer?: ApiPeer;\n  isSelf?: boolean;\n  disallowedGifts?: ApiDisallowedGifts;\n  resaleGiftsCount?: number;\n  areResaleGiftsLoading?: boolean;\n};\n\nconst AVATAR_SIZE = 100;\nconst INTERSECTION_THROTTLE = 200;\nconst SCROLL_THROTTLE = 200;\n\nconst runThrottledForScroll = throttle((cb) => cb(), SCROLL_THROTTLE, true);\n\nconst GiftModal: FC<OwnProps & StateProps> = ({\n  modal,\n  starGiftsById,\n  starGiftIdsByCategory,\n  starBalance,\n  peer,\n  isSelf,\n  disallowedGifts,\n  resaleGiftsCount,\n  areResaleGiftsLoading,\n}) => {\n  const {\n    closeGiftModal, openGiftInfoModal, resetResaleGifts, loadResaleGifts,\n  } = getActions();\n  const dialogRef = useRef<HTMLDivElement>();\n  const transitionRef = useRef<HTMLDivElement>();\n  const giftHeaderRef = useRef<HTMLHeadingElement>();\n\n  const scrollerRef = useRef<HTMLDivElement>();\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const user = peer && isApiPeerUser(peer) ? peer : undefined;\n  const chat = peer && isApiPeerChat(peer) ? peer : undefined;\n\n  const [selectedGift, setSelectedGift] = useState<GiftOption | undefined>();\n  const [selectedResellGift, setSelectedResellGift] = useState<ApiStarGift | undefined>();\n  const [shouldShowMainScreenHeader, setShouldShowMainScreenHeader] = useState(false);\n  const [isMainScreenHeaderForStarGifts, setIsMainScreenHeaderForStarGifts] = useState(false);\n  const [isGiftScreenHeaderForStarGifts, setIsGiftScreenHeaderForStarGifts] = useState(false);\n\n  const [selectedCategory, setSelectedCategory] = useState<StarGiftCategory>('all');\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    const {\n      shouldDisallowPremiumGifts,\n      ...disallowedGiftTypes\n    } = disallowedGifts;\n    return !isSelf && Object.values(disallowedGiftTypes).every(Boolean);\n  }, [isSelf, disallowedGifts]);\n\n  const areUnlimitedStarGiftsDisallowed = !isSelf && disallowedGifts?.shouldDisallowUnlimitedStarGifts;\n  const areLimitedStarGiftsDisallowed = !isSelf && disallowedGifts?.shouldDisallowLimitedStarGifts;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const allGifts = renderingModal?.gifts;\n  const filteredGifts = useMemo(() => {\n    return allGifts?.sort((prevGift, gift) => prevGift.months - gift.months)\n      .filter((gift) => gift.users === 1 && gift.currency !== STARS_CURRENCY_CODE);\n  }, [allGifts]);\n\n  const giftsByStars = useMemo(() => {\n    const mapGifts = new Map();\n\n    if (!filteredGifts) return mapGifts;\n\n    filteredGifts.forEach((gift) => {\n      const giftByStars = allGifts?.find(\n        (starsGift) => starsGift.currency === STARS_CURRENCY_CODE\n          && starsGift.months === gift.months,\n      );\n      if (giftByStars) {\n        mapGifts.set(gift, giftByStars);\n      }\n    });\n\n    return mapGifts;\n  }, [allGifts, filteredGifts]);\n\n  const baseGift = useMemo(() => {\n    return filteredGifts?.reduce((prev, gift) => (prev.amount < gift.amount ? prev : gift));\n  }, [filteredGifts]);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: scrollerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const isResaleScreen = Boolean(selectedResellGift) && !selectedGift;\n  const isGiftScreen = Boolean(selectedGift);\n  const shouldShowHeader = isResaleScreen || isGiftScreen || shouldShowMainScreenHeader;\n  const isHeaderForStarGifts = isGiftScreen ? isGiftScreenHeaderForStarGifts : isMainScreenHeaderForStarGifts;\n\n  useEffect(() => {\n    if (selectedResellGift) {\n      loadResaleGifts({ giftId: selectedResellGift.id });\n    }\n  }, [selectedResellGift]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setShouldShowMainScreenHeader(false);\n      setSelectedGift(undefined);\n      setSelectedResellGift(undefined);\n      setSelectedCategory('all');\n    }\n  }, [isOpen]);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLDivElement>) => {\n    if (isGiftScreen) return;\n    const currentTarget = e.currentTarget;\n\n    runThrottledForScroll(() => {\n      const { scrollTop } = currentTarget;\n\n      setShouldShowMainScreenHeader(scrollTop > 150);\n\n      if (transitionRef.current && giftHeaderRef.current) {\n        const { top: headerTop } = giftHeaderRef.current.getBoundingClientRect();\n        const { top: transitionTop } = transitionRef.current.getBoundingClientRect();\n        setIsMainScreenHeaderForStarGifts(headerTop - transitionTop <= 0);\n      }\n    });\n  });\n\n  const giftPremiumDescription = lang('GiftPremiumDescription', {\n    user: getUserFullName(user)!,\n    link: (\n      <SafeLink\n        text={lang('GiftPremiumDescriptionLinkCaption')}\n        url={lang('GiftPremiumDescriptionLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  const starGiftDescription = chat\n    ? lang('StarGiftDescriptionChannel', { peer: getPeerTitle(lang, chat) }, {\n      withNodes: true,\n      withMarkdown: true,\n    })\n    : isSelf\n      ? lang('StarGiftDescriptionSelf', undefined, {\n        withNodes: true,\n        renderTextFilters: ['br'],\n      })\n      : lang('StarGiftDescription', {\n        user: getUserFullName(user)!,\n      }, { withNodes: true, withMarkdown: true });\n\n  function renderGiftPremiumHeader() {\n    return (\n      <h2 className={buildClassName(styles.headerText, styles.center)}>\n        {lang('GiftPremiumHeader')}\n      </h2>\n    );\n  }\n\n  function renderGiftPremiumDescription() {\n    return (\n      <p className={buildClassName(styles.description, styles.center)}>\n        {giftPremiumDescription}\n      </p>\n    );\n  }\n\n  function renderStarGiftsHeader() {\n    return (\n      <h2 ref={giftHeaderRef} className={buildClassName(styles.headerText, styles.center)}>\n        {lang(isSelf ? 'StarsGiftHeaderSelf' : 'StarsGiftHeader')}\n      </h2>\n    );\n  }\n\n  function renderStarGiftsDescription() {\n    return (\n      <p className={buildClassName(styles.description, styles.starGiftsDescription, styles.center)}>\n        {starGiftDescription}\n      </p>\n    );\n  }\n\n  const handleGiftClick = useLastCallback((gift: GiftOption, target?: 'resell' | 'original') => {\n    if (target === 'resell') {\n      if (!('id' in gift)) {\n        return;\n      }\n      if (isResaleScreen) {\n        openGiftInfoModal({ gift, recipientId: renderingModal?.forPeerId });\n        return;\n      }\n      setSelectedResellGift(gift);\n      return;\n    }\n    setSelectedGift(gift);\n    setIsGiftScreenHeaderForStarGifts('id' in gift);\n  });\n\n  function renderStarGifts() {\n    const filteredGiftIds = starGiftIdsByCategory?.[selectedCategory]?.filter((giftId) => {\n      const gift = starGiftsById?.[giftId];\n      if (!gift) return false;\n\n      const { isLimited, isSoldOut, upgradeStars } = gift;\n      if (areUnlimitedStarGiftsDisallowed && !areLimitedStarGiftsDisallowed) {\n        return isLimited;\n      }\n      if (areLimitedStarGiftsDisallowed && !areUnlimitedStarGiftsDisallowed) {\n        return !isLimited && !isSoldOut;\n      }\n      if (areUnlimitedStarGiftsDisallowed && areLimitedStarGiftsDisallowed) {\n        return Boolean(isLimited && Boolean(upgradeStars));\n      }\n\n      return true;\n    });\n\n    return (\n      <div className={styles.starGiftsContainer}>\n        {starGiftsById && filteredGiftIds?.flatMap((giftId) => {\n          const gift = starGiftsById[giftId];\n          const shouldShowResale = selectedCategory !== 'stock' && Boolean(gift.availabilityResale);\n          const shouldDuplicateAsResale = selectedCategory !== 'resale' && shouldShowResale && !gift.isSoldOut;\n\n          const elements = [\n            <GiftItemStar\n              key={giftId}\n              gift={gift}\n              observeIntersection={observeIntersection}\n              isResale={shouldShowResale && !shouldDuplicateAsResale}\n              onClick={handleGiftClick}\n            />,\n          ];\n\n          if (shouldDuplicateAsResale) {\n            elements.push(\n              <GiftItemStar\n                key={`resale_${giftId}`}\n                isResale\n                gift={gift}\n                observeIntersection={observeIntersection}\n                onClick={handleGiftClick}\n              />,\n            );\n          }\n\n          return elements;\n        })}\n      </div>\n    );\n  }\n\n  function renderPremiumGifts() {\n    return (\n      <div className={styles.premiumGiftsGallery}>\n        {filteredGifts?.map((gift) => {\n          return (\n            <GiftItemPremium\n              option={gift}\n              optionByStars={giftsByStars.get(gift)}\n              baseMonthAmount={baseGift ? Math.floor(baseGift.amount / baseGift.months) : undefined}\n              onClick={handleGiftClick}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  const onCategoryChanged = useLastCallback((category: StarGiftCategory) => {\n    setSelectedCategory(category);\n  });\n\n  const handleCloseModal = useLastCallback(() => {\n    setSelectedGift(undefined);\n    setSelectedResellGift(undefined);\n    resetResaleGifts();\n    closeGiftModal();\n  });\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (isResaleScreen) {\n      setSelectedResellGift(undefined);\n      resetResaleGifts();\n      return;\n    }\n    if (isGiftScreen) {\n      setSelectedGift(undefined);\n      return;\n    }\n    handleCloseModal();\n  });\n\n  function renderMainScreen() {\n    return (\n      <div ref={scrollerRef} className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <div className={styles.avatars}>\n          <Avatar\n            size={AVATAR_SIZE}\n            peer={peer}\n          />\n          <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n        </div>\n        {!isSelf && !chat && !disallowedGifts?.shouldDisallowPremiumGifts && (\n          <>\n            {renderGiftPremiumHeader()}\n            {renderGiftPremiumDescription()}\n            {renderPremiumGifts()}\n          </>\n        )}\n\n        {!areAllGiftsDisallowed && (\n          <>\n            {renderStarGiftsHeader()}\n            {renderStarGiftsDescription()}\n            <StarGiftCategoryList\n              areLimitedStarGiftsDisallowed={areLimitedStarGiftsDisallowed}\n              onCategoryChanged={onCategoryChanged}\n            />\n            <Transition\n              name=\"zoomFade\"\n              activeKey={getCategoryKey(selectedCategory)}\n              className={styles.starGiftsTransition}\n            >\n              {renderStarGifts()}\n            </Transition>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  const isBackButton = isGiftScreen || isResaleScreen;\n\n  const buttonClassName = buildClassName(\n    'animated-close-icon',\n    isBackButton && 'state-back',\n  );\n\n  function renderHeader() {\n    if (!shouldShowHeader) return undefined;\n    if (isResaleScreen) {\n      const isFirstLoading = areResaleGiftsLoading && !resaleGiftsCount;\n      return (\n        <div className={styles.resaleHeaderContentContainer}>\n          <h2 className={styles.resaleHeaderText}>\n            {selectedResellGift.title}\n          </h2>\n          {isFirstLoading\n            && (\n              <div className={styles.resaleHeaderDescription}>\n                {lang('Loading')}\n              </div>\n            )}\n          {!isFirstLoading && resaleGiftsCount !== undefined\n            && (\n              <div className={styles.resaleHeaderDescription}>\n                {lang('HeaderDescriptionResaleGifts', {\n                  count: resaleGiftsCount,\n                }, { withNodes: true, withMarkdown: true, pluralValue: resaleGiftsCount })}\n              </div>\n            )}\n          <GiftResaleFilters dialogRef={dialogRef} />\n        </div>\n      );\n    }\n    return (\n      <h2 className={styles.commonHeaderText}>\n        {lang(isHeaderForStarGifts ? (isSelf ? 'StarsGiftHeaderSelf' : 'StarsGiftHeader') : 'GiftPremiumHeader')}\n      </h2>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={dialogRef}\n      onClose={handleCloseModal}\n      isOpen={isOpen}\n      isSlim\n      contentClassName={styles.content}\n      className={buildClassName(styles.modalDialog, styles.root)}\n      isLowStackPriority\n    >\n      <Button\n        className={styles.closeButton}\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        onClick={handleCloseButtonClick}\n        ariaLabel={isBackButton ? oldLang('Common.Back') : oldLang('Common.Close')}\n      >\n        <div className={buttonClassName} />\n      </Button>\n      <BalanceBlock className={styles.balance} balance={starBalance} withAddButton />\n      <div className={buildClassName(\n        styles.header,\n        isResaleScreen && styles.resaleHeader,\n        !shouldShowHeader && styles.hiddenHeader)}\n      >\n        <Transition\n          name=\"slideVerticalFade\"\n          activeKey={!shouldShowHeader ? 0 : isResaleScreen ? 1 : isHeaderForStarGifts ? 2 : 3}\n          slideClassName={styles.headerSlide}\n        >\n          {renderHeader()}\n        </Transition>\n      </div>\n      <Transition\n        ref={transitionRef}\n        className={styles.transition}\n        name=\"pushSlide\"\n        activeKey={isGiftScreen ? 1 : isResaleScreen ? 2 : 0}\n      >\n        {!isGiftScreen && !isResaleScreen && renderMainScreen()}\n        {isResaleScreen && selectedResellGift\n          && (\n            <GiftModalResaleScreen\n              onGiftClick={handleGiftClick}\n            />\n          )}\n        {isGiftScreen && renderingModal?.forPeerId && (\n          <GiftSendingOptions\n            gift={selectedGift}\n            giftByStars={giftsByStars.get(selectedGift)}\n            peerId={renderingModal.forPeerId}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { modal }): StateProps => {\n  const {\n    starGifts,\n    stars,\n    currentUserId,\n  } = global;\n\n  const peer = modal?.forPeerId ? selectPeer(global, modal.forPeerId) : undefined;\n  const isSelf = Boolean(currentUserId && modal?.forPeerId === currentUserId);\n  const userFullInfo = peer ? selectUserFullInfo(global, peer?.id) : undefined;\n\n  const { resaleGifts } = selectTabState(global);\n  const resaleGiftsCount = resaleGifts.count;\n  const areResaleGiftsLoading = resaleGifts.isLoading !== false;\n\n  return {\n    boostPerSentGift: global.appConfig?.boostsPerSentGift,\n    starGiftsById: starGifts?.byId,\n    starGiftIdsByCategory: starGifts?.idsByCategory,\n    starBalance: stars?.balance,\n    peer,\n    isSelf,\n    disallowedGifts: userFullInfo?.disallowedGifts,\n    resaleGiftsCount,\n    areResaleGiftsLoading,\n  };\n})(GiftModal));\n\nfunction getCategoryKey(category: StarGiftCategory) {\n  if (category === 'all') return 0;\n  if (category === 'limited') return 1;\n  if (category === 'resale') return 2;\n  if (category === 'stock') return 3;\n  return category + 3;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"W3JMs1YE\",\"picker\":\"wOipz1Y_\"};","import {\n  memo, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport { filterPeersByQuery } from '../../../../global/helpers/peers';\nimport { selectCanGift } from '../../../../global/selectors';\nimport { unique } from '../../../../util/iteratees';\nimport sortChatIds from '../../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport PickerModal from '../../../common/pickers/PickerModal';\n\nimport styles from './GiftRecipientPicker.module.scss';\n\nexport type OwnProps = {\n  modal?: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  userIds?: string[];\n}\n\nconst GiftRecipientPicker = ({\n  modal,\n  currentUserId,\n  userIds,\n}: OwnProps & StateProps) => {\n  const { closeGiftRecipientPicker, openGiftModal } = getActions();\n\n  const oldLang = useOldLang();\n  const isOpen = modal;\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedUserIds = useMemo(() => {\n    const global = getGlobal();\n    const idsWithSelf = userIds ? userIds.concat(currentUserId!) : undefined;\n    const filteredPeerIds = idsWithSelf ? filterPeersByQuery({ ids: idsWithSelf, query: searchQuery }) : [];\n\n    return sortChatIds(unique(filteredPeerIds).filter((peerId) => {\n      return selectCanGift(global, peerId);\n    }), undefined, [currentUserId!]);\n  }, [currentUserId, searchQuery, userIds]);\n\n  const handleSelectedUserIdsChange = useLastCallback((selectedId: string) => {\n    openGiftModal({ forUserId: selectedId });\n    closeGiftRecipientPicker();\n  });\n\n  return (\n    <PickerModal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={closeGiftRecipientPicker}\n      title={oldLang('GiftTelegramPremiumOrStarsTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n    >\n      <PeerPicker\n        className={styles.picker}\n        itemIds={displayedUserIds}\n        filterValue={searchQuery}\n        filterPlaceholder={oldLang('Search')}\n        onSelectedIdChange={handleSelectedUserIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        forceShowSelf\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { currentUserId } = global;\n\n  return {\n    currentUserId,\n    userIds: global.contactList?.userIds,\n  };\n})(GiftRecipientPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef0cKSqQ\",\"giftPreview\":\"IvuNzslN\",\"backdrop\":\"dNukis4X\",\"arrow\":\"oufsMLLF\"};","import { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiPeer, ApiStarGiftUnique,\n} from '../../../api/types';\n\nimport { getGiftAttributes } from '../helpers/gifts';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport AnimatedIconFromSticker from '../AnimatedIconFromSticker';\nimport Avatar from '../Avatar';\nimport Icon from '../icons/Icon';\nimport RadialPatternBackground from '../profile/RadialPatternBackground';\n\nimport styles from './GiftTransferPreview.module.scss';\n\ntype OwnProps = {\n  peer: ApiPeer;\n  gift: ApiStarGiftUnique;\n};\n\nconst AVATAR_SIZE = 4 * REM;\nconst GIFT_STICKER_SIZE = 3 * REM;\n\nconst GiftTransferPreview = ({\n  peer,\n  gift,\n}: OwnProps) => {\n  const giftAttributes = useMemo(() => {\n    return getGiftAttributes(gift);\n  }, [gift]);\n\n  if (!giftAttributes) return undefined;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.giftPreview}>\n        <RadialPatternBackground\n          className={styles.backdrop}\n          backgroundColors={[giftAttributes.backdrop!.centerColor, giftAttributes.backdrop!.edgeColor]}\n          patternColor={giftAttributes.backdrop?.patternColor}\n          patternIcon={giftAttributes.pattern?.sticker}\n        />\n        <AnimatedIconFromSticker\n          className={styles.sticker}\n          size={GIFT_STICKER_SIZE}\n          sticker={giftAttributes.model?.sticker}\n        />\n      </div>\n      <Icon name=\"next\" className={styles.arrow} />\n      <Avatar\n        peer={peer}\n        size={AVATAR_SIZE}\n        className={styles.avatar}\n      />\n    </div>\n  );\n};\n\nexport default memo(GiftTransferPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"nnublcCk\",\"header\":\"p7FTs7_p\",\"title\":\"pIbzzTir\",\"description\":\"CCPfr26t\",\"soldOut\":\"kjWcRp4W\",\"headerSplitButton\":\"XOMI_4PO\",\"headerButton\":\"WA0INleU\",\"giftResalePriceContainer\":\"BN8gf5y6\",\"starAmountIcon\":\"_5guecUe\",\"giftResalePriceStar\":\"H_q8o2vY\",\"left\":\"aOhTHZlf\",\"right\":\"rJOB1u5Q\",\"footer\":\"bho0GTYt\",\"footerDescription\":\"VUylTszM\",\"unknown\":\"zDauXmpS\",\"giftValue\":\"w_E4LkUj\",\"uniqueAttribute\":\"OJQnkf17\",\"uniqueGift\":\"I6o_pGAm\",\"modalHeader\":\"ie9tImaj\",\"modalCloseButton\":\"p38RBGdC\",\"ownerAddress\":\"DavMRg4Q\",\"copyIcon\":\"SLX5tX8C\"};","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport { memo, useMemo, useState } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type {\n  ApiEmojiStatusType,\n  ApiPeer,\n  ApiUser,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\n\nimport { getHasAdminRight } from '../../../../global/helpers';\nimport { getPeerTitle, isApiPeerChat, isApiPeerUser } from '../../../../global/helpers/peers';\nimport { getMainUsername } from '../../../../global/helpers/users';\nimport { selectPeer, selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../../util/clipboard';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\nimport { formatStarsAsIcon, formatStarsAsText } from '../../../../util/localization/format';\nimport { CUSTOM_PEER_HIDDEN } from '../../../../util/objects/customPeer';\nimport { getServerTime } from '../../../../util/serverTime';\nimport { formatPercent } from '../../../../util/textFormat';\nimport { getGiftAttributes, getStickerFromGift } from '../../../common/helpers/gifts';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Avatar from '../../../common/Avatar';\nimport BadgeButton from '../../../common/BadgeButton';\nimport GiftMenuItems from '../../../common/gift/GiftMenuItems';\nimport GiftTransferPreview from '../../../common/gift/GiftTransferPreview';\nimport Icon from '../../../common/icons/Icon';\nimport SafeLink from '../../../common/SafeLink';\nimport Button from '../../../ui/Button';\nimport ConfirmDialog from '../../../ui/ConfirmDialog';\nimport DropdownMenu from '../../../ui/DropdownMenu';\nimport Link from '../../../ui/Link';\nimport TableInfoModal, { type TableData } from '../../common/TableInfoModal';\nimport UniqueGiftHeader from '../UniqueGiftHeader';\n\nimport styles from './GiftInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['giftInfoModal'];\n};\n\ntype StateProps = {\n  fromPeer?: ApiPeer;\n  targetPeer?: ApiPeer;\n  releasedByPeer?: ApiPeer;\n  currentUserId?: string;\n  starGiftMaxConvertPeriod?: number;\n  hasAdminRights?: boolean;\n  currentUserEmojiStatus?: ApiEmojiStatusType;\n  collectibleEmojiStatuses?: ApiEmojiStatusType[];\n  tonExplorerUrl?: string;\n  currentUser?: ApiUser;\n  recipientPeer?: ApiPeer;\n};\n\nconst STICKER_SIZE = 120;\n\nconst GiftInfoModal = ({\n  modal,\n  fromPeer,\n  targetPeer,\n  releasedByPeer,\n  currentUserId,\n  starGiftMaxConvertPeriod,\n  hasAdminRights,\n  currentUserEmojiStatus,\n  collectibleEmojiStatuses,\n  tonExplorerUrl,\n  currentUser,\n  recipientPeer,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftInfoModal,\n    changeGiftVisibility,\n    convertGiftToStars,\n    openChatWithInfo,\n    focusMessage,\n    openGiftUpgradeModal,\n    showNotification,\n    buyStarGift,\n    closeGiftModal,\n  } = getActions();\n\n  const [isConvertConfirmOpen, openConvertConfirm, closeConvertConfirm] = useFlag();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n  const [isConfirmModalOpen, setIsConfirmModalOpen] = useState<boolean>(false);\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n  const renderingFromPeer = useCurrentOrPrev(fromPeer);\n  const renderingTargetPeer = useCurrentOrPrev(targetPeer);\n\n  const isTargetChat = renderingTargetPeer && isApiPeerChat(renderingTargetPeer);\n\n  const { gift: typeGift } = renderingModal || {};\n  const isSavedGift = typeGift && 'gift' in typeGift;\n  const savedGift = isSavedGift ? typeGift : undefined;\n  const isSender = savedGift?.fromId === currentUserId;\n  const canConvertDifference = (savedGift && starGiftMaxConvertPeriod && (\n    savedGift.date + starGiftMaxConvertPeriod - getServerTime()\n  )) || 0;\n  const conversionLeft = Math.ceil(canConvertDifference / 60 / 60 / 24);\n\n  const gift = isSavedGift ? typeGift.gift : typeGift;\n  const giftSticker = gift && getStickerFromGift(gift);\n  const hasConvertOption = canConvertDifference > 0 && Boolean(savedGift?.starsToConvert);\n\n  const isGiftUnique = gift && gift.type === 'starGiftUnique';\n  const uniqueGift = isGiftUnique ? gift : undefined;\n\n  const giftSubtitle = useMemo(() => {\n    if (!gift || gift.type !== 'starGiftUnique') return undefined;\n\n    if (releasedByPeer) {\n      const releasedByUsername = `@${getMainUsername(releasedByPeer)}`;\n      const ownerTitle = releasedByUsername || getPeerTitle(lang, releasedByPeer);\n      const fallbackText = isApiPeerUser(releasedByPeer)\n        ? lang('ActionFallbackUser')\n        : lang('ActionFallbackChannel');\n\n      return lang('GiftInfoCollectibleBy', {\n        number: gift.number, owner: ownerTitle || fallbackText }, {\n        withNodes: true,\n        withMarkdown: true,\n      });\n    }\n\n    return lang('GiftInfoCollectible', { number: gift.number });\n  }, [gift, releasedByPeer, lang]);\n\n  const canFocusUpgrade = Boolean(savedGift?.upgradeMsgId);\n  const canManage = !canFocusUpgrade && savedGift?.inputGift && (\n    isTargetChat ? hasAdminRights : renderingTargetPeer?.id === currentUserId\n  );\n\n  const resellPriceInStars = isGiftUnique ? gift.resellPriceInStars : undefined;\n  const canBuyGift = !canManage && Boolean(resellPriceInStars);\n\n  const giftOwnerTitle = (() => {\n    if (!isGiftUnique) return undefined;\n    const { ownerName, ownerId } = gift;\n    const global = getGlobal(); // Peer titles do not need to be reactive\n    const owner = ownerId ? selectPeer(global, ownerId) : undefined;\n    return owner ? getPeerTitle(lang, owner) : ownerName;\n  })();\n\n  const handleClose = useLastCallback(() => {\n    closeGiftInfoModal();\n  });\n\n  const handleFocusUpgraded = useLastCallback(() => {\n    const giftChat = isSender ? renderingTargetPeer : renderingFromPeer;\n    if (!savedGift?.upgradeMsgId || !giftChat) return;\n    const { upgradeMsgId } = savedGift;\n    focusMessage({ chatId: giftChat.id, messageId: upgradeMsgId });\n    handleClose();\n  });\n\n  const handleTriggerVisibility = useLastCallback(() => {\n    const { inputGift, isUnsaved } = savedGift!;\n    changeGiftVisibility({ gift: inputGift!, shouldUnsave: !isUnsaved });\n    handleClose();\n  });\n\n  const handleConvertToStars = useLastCallback(() => {\n    const { inputGift } = savedGift!;\n    convertGiftToStars({ gift: inputGift! });\n    closeConvertConfirm();\n    handleClose();\n  });\n\n  const handleOpenUpgradeModal = useLastCallback(() => {\n    if (!savedGift) return;\n    openGiftUpgradeModal({ giftId: savedGift.gift.id, gift: savedGift });\n  });\n\n  const handleBuyGift = useLastCallback(() => {\n    if (gift?.type !== 'starGiftUnique' || !gift.resellPriceInStars) return;\n    setIsConfirmModalOpen(true);\n  });\n\n  const closeConfirmModal = useLastCallback(() => {\n    setIsConfirmModalOpen(false);\n  });\n\n  const handleConfirmBuyGift = useLastCallback(() => {\n    const peer = recipientPeer || currentUser;\n    if (!peer || gift?.type !== 'starGiftUnique' || !gift.resellPriceInStars) return;\n    closeConfirmModal();\n    closeGiftModal();\n    buyStarGift({ peerId: peer.id, slug: gift.slug, stars: gift.resellPriceInStars });\n  });\n\n  const giftAttributes = useMemo(() => {\n    return gift && getGiftAttributes(gift);\n  }, [gift]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isMenuOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger }) => (\n      <div\n        className={buildClassName(\n          styles.headerButton,\n          styles.left,\n        )}\n        tabIndex={0}\n        role=\"button\"\n        aria-haspopup=\"menu\"\n        aria-label={lang('AriaMoreButton')}\n        onClick={onTrigger}\n      >\n        <Icon\n          name=\"more\"\n          className={styles.icon}\n        />\n      </div>\n    );\n  }, [lang]);\n\n  const renderFooterButton = useLastCallback(() => {\n    if (canBuyGift) {\n      return (\n        <Button noForcedUpperCase size=\"smaller\" onClick={handleBuyGift}>\n          {lang('ButtonBuyGift', {\n            stars: formatStarsAsIcon(lang, resellPriceInStars, { asFont: true }),\n          }, { withNodes: true })}\n        </Button>\n      );\n    }\n\n    if (canFocusUpgrade) {\n      return (\n        <Button size=\"smaller\" onClick={handleFocusUpgraded}>\n          {lang('GiftInfoViewUpgraded')}\n        </Button>\n      );\n    }\n\n    if (canManage && savedGift?.alreadyPaidUpgradeStars && !savedGift.upgradeMsgId) {\n      return (\n        <Button size=\"smaller\" isShiny onClick={handleOpenUpgradeModal}>\n          {lang('GiftInfoUpgradeForFree')}\n        </Button>\n      );\n    }\n\n    return (\n      <Button size=\"smaller\" onClick={handleClose}>\n        {lang('OK')}\n      </Button>\n    );\n  });\n\n  const saleDateInfo = useMemo(() => {\n    if (!gift) return undefined;\n    let text = '';\n    if (gift.type === 'starGift') {\n      if (gift.firstSaleDate) {\n        text += `${lang('GiftInfoFirstSale')} ${formatDateTimeToString(gift.firstSaleDate * 1000, lang.code, true)}`;\n      }\n      if (gift.lastSaleDate) {\n        text += '\\n';\n        text += `${lang('GiftInfoLastSale')} ${formatDateTimeToString(gift.lastSaleDate * 1000, lang.code, true)}`;\n      }\n    }\n\n    return text;\n  }, [gift, lang]);\n\n  const modalData = useMemo(() => {\n    if (!typeGift || !gift) {\n      return undefined;\n    }\n\n    const {\n      fromId, isNameHidden, starsToConvert, isUnsaved, isConverted, upgradeMsgId,\n    } = savedGift || {};\n    const canConvert = hasConvertOption && Boolean(starsToConvert);\n\n    const isVisibleForMe = isNameHidden && renderingTargetPeer;\n\n    const description = (() => {\n      if (!savedGift) return lang('GiftInfoSoldOutDescription');\n      if (isTargetChat) return undefined;\n\n      if (savedGift.upgradeMsgId) return lang('GiftInfoDescriptionUpgraded');\n      if (savedGift.canUpgrade && savedGift.alreadyPaidUpgradeStars) {\n        return canManage\n          ? lang('GiftInfoDescriptionFreeUpgrade')\n          : lang('GiftInfoPeerDescriptionFreeUpgradeOut', { peer: getPeerTitle(lang, renderingTargetPeer!)! });\n      }\n      if (!canManage && !isSender) return undefined;\n      if (isConverted && canConvert) {\n        return canManage\n          ? lang('GiftInfoDescriptionConverted', {\n            amount: starsToConvert,\n          }, {\n            pluralValue: starsToConvert,\n            withNodes: true,\n            withMarkdown: true,\n          })\n          : lang('GiftInfoPeerDescriptionOutConverted', {\n            amount: starsToConvert,\n            peer: getPeerTitle(lang, renderingTargetPeer!)!,\n          }, {\n            pluralValue: starsToConvert,\n            withNodes: true,\n            withMarkdown: true,\n          });\n      }\n\n      if (savedGift.canUpgrade && canManage) {\n        if (canConvert) {\n          return lang('GiftInfoDescriptionUpgrade', {\n            amount: starsToConvert,\n          }, {\n            pluralValue: starsToConvert,\n            withNodes: true,\n            withMarkdown: true,\n          });\n        }\n\n        return lang('GiftInfoDescriptionUpgradeRegular');\n      }\n\n      if (canManage) {\n        if (canConvert) {\n          return lang('GiftInfoDescription', {\n            amount: starsToConvert,\n          }, {\n            withNodes: true,\n            withMarkdown: true,\n            pluralValue: starsToConvert,\n          });\n        }\n\n        return lang('GiftInfoDescriptionRegular');\n      }\n\n      if (canConvert) {\n        return lang('GiftInfoPeerDescriptionOut', {\n          amount: starsToConvert,\n          peer: getPeerTitle(lang, renderingTargetPeer!)!,\n        }, {\n          withNodes: true,\n          withMarkdown: true,\n          pluralValue: starsToConvert,\n        });\n      }\n\n      return lang('GiftInfoPeerDescriptionOutRegular', { peer: getPeerTitle(lang, renderingTargetPeer!)! });\n    })();\n\n    function getTitle() {\n      if (isGiftUnique) return gift.title;\n      if (!savedGift) return lang('GiftInfoSoldOutTitle');\n\n      return canManage ? lang('GiftInfoReceived') : lang('GiftInfoTitle');\n    }\n\n    const uniqueGiftContextMenu = (\n      <DropdownMenu\n        className=\"with-menu-transitions\"\n        trigger={SettingsMenuButton}\n        positionX=\"right\"\n      >\n        <GiftMenuItems\n          peerId={renderingModal!.peerId!}\n          gift={typeGift}\n          canManage={canManage}\n          collectibleEmojiStatuses={collectibleEmojiStatuses}\n          currentUserEmojiStatus={currentUserEmojiStatus}\n        />\n      </DropdownMenu>\n    );\n\n    const uniqueGiftModalHeader = (\n      <div\n        className={styles.modalHeader}\n      >\n        {Boolean(canManage && resellPriceInStars) && (\n          <div className={styles.giftResalePriceContainer}>\n            {formatStarsAsIcon(lang, resellPriceInStars!, {\n              asFont: true,\n              className: styles.giftResalePriceStar,\n            })}\n          </div>\n        )}\n        <div className={styles.headerSplitButton}>\n          {isOpen && uniqueGiftContextMenu}\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.right,\n            )}\n            tabIndex={0}\n            role=\"button\"\n            aria-haspopup=\"menu\"\n            aria-label={lang('Close')}\n            onClick={handleClose}\n          >\n            <Icon\n              name=\"close\"\n              className={buildClassName(\n                styles.icon,\n                styles.moreIcon,\n              )}\n            />\n          </div>\n        </div>\n      </div>\n    );\n\n    const uniqueGiftHeader = isGiftUnique && (\n      <div className={buildClassName(styles.header, styles.uniqueGift)}>\n        <UniqueGiftHeader\n          backdropAttribute={giftAttributes!.backdrop!}\n          patternAttribute={giftAttributes!.pattern!}\n          modelAttribute={giftAttributes!.model!}\n          title={gift.title}\n          subtitle={giftSubtitle}\n          subtitlePeer={releasedByPeer}\n        />\n      </div>\n    );\n\n    const regularHeader = (\n      <div className={styles.header}>\n        <AnimatedIconFromSticker\n          className={styles.giftSticker}\n          sticker={giftSticker}\n          size={STICKER_SIZE}\n        />\n        <h1 className={styles.title}>\n          {getTitle()}\n        </h1>\n        {Boolean(description) && (\n          <p className={buildClassName(styles.description, !savedGift && gift?.type === 'starGift' && styles.soldOut)}>\n            {description}\n          </p>\n        )}\n      </div>\n    );\n\n    const tableData: TableData = [];\n    if (gift.type === 'starGift') {\n      const hasFrom = fromId || isNameHidden;\n\n      if (hasFrom) {\n        tableData.push([\n          lang('GiftInfoFrom'),\n          !fromId ? (\n            <>\n              <Avatar size=\"small\" peer={CUSTOM_PEER_HIDDEN} />\n              <span className={styles.unknown}>{oldLang(CUSTOM_PEER_HIDDEN.titleKey!)}</span>\n            </>\n          ) : { chatId: fromId },\n        ]);\n      }\n\n      if (savedGift?.date) {\n        tableData.push([\n          lang('GiftInfoDate'),\n          <span title={saleDateInfo}>{formatDateTimeToString(savedGift.date * 1000, lang.code, true)}</span>,\n        ]);\n      }\n\n      if (gift.firstSaleDate && !savedGift) {\n        tableData.push([\n          lang('GiftInfoFirstSale'),\n          formatDateTimeToString(gift.firstSaleDate * 1000, lang.code, true),\n        ]);\n      }\n\n      if (gift.lastSaleDate && !savedGift) {\n        tableData.push([\n          lang('GiftInfoLastSale'),\n          formatDateTimeToString(gift.lastSaleDate * 1000, lang.code, true),\n        ]);\n      }\n\n      const starsValue = gift.stars + (savedGift?.alreadyPaidUpgradeStars || 0);\n\n      tableData.push([\n        lang('GiftInfoValue'),\n        <div className={styles.giftValue}>\n          {formatStarsAsIcon(lang, starsValue, { className: styles.starAmountIcon })}\n          {canManage && hasConvertOption && Boolean(starsToConvert) && (\n            <BadgeButton onClick={openConvertConfirm}>\n              {lang('GiftInfoConvert', { amount: starsToConvert }, { pluralValue: starsToConvert })}\n            </BadgeButton>\n          )}\n        </div>,\n      ]);\n\n      if (gift.availabilityTotal) {\n        tableData.push([\n          lang('GiftInfoAvailability'),\n          lang('GiftInfoAvailabilityValue', {\n            count: gift.availabilityRemains || 0,\n            total: gift.availabilityTotal,\n          }, {\n            pluralValue: gift.availabilityRemains || 0,\n          }),\n        ]);\n      }\n\n      if (gift.upgradeStars && !upgradeMsgId) {\n        tableData.push([\n          lang('GiftInfoStatus'),\n          <div className={styles.giftValue}>\n            {lang('GiftInfoStatusNonUnique')}\n            {canManage && <BadgeButton onClick={handleOpenUpgradeModal}>{lang('GiftInfoUpgradeBadge')}</BadgeButton>}\n          </div>,\n        ]);\n      }\n\n      if (savedGift?.message) {\n        tableData.push([\n          undefined,\n          renderTextWithEntities(savedGift.message),\n        ]);\n      }\n    }\n\n    if (isGiftUnique) {\n      const { ownerName, ownerAddress, ownerId } = gift;\n      const ownerPeer = ownerId ? selectPeer(getGlobal(), ownerId) : undefined;\n      const {\n        model, backdrop, pattern, originalDetails,\n      } = giftAttributes || {};\n\n      if (ownerAddress) {\n        tableData.push([\n          lang('GiftInfoOwner'),\n          <span\n            className={styles.ownerAddress}\n            onClick={() => {\n              copyTextToClipboard(ownerAddress);\n              showNotification({\n                message: { key: 'WalletAddressCopied' },\n                icon: 'copy',\n              });\n            }}\n          >\n            {ownerAddress}\n            <Icon className={styles.copyIcon} name=\"copy\" />\n          </span>,\n        ]);\n      } else if (ownerPeer || ownerName) {\n        tableData.push([\n          lang('GiftInfoOwner'),\n          ownerId ? { chatId: ownerId, withEmojiStatus: true } : ownerName || '',\n        ]);\n      }\n\n      if (model) {\n        tableData.push([\n          lang('GiftAttributeModel'),\n          <span className={styles.uniqueAttribute}>\n            {model.name}\n            <BadgeButton>{formatPercent(model.rarityPercent)}</BadgeButton>\n          </span>,\n        ]);\n      }\n\n      if (backdrop) {\n        tableData.push([\n          lang('GiftAttributeBackdrop'),\n          <span className={styles.uniqueAttribute}>\n            {backdrop.name}\n            <BadgeButton>{formatPercent(backdrop.rarityPercent)}</BadgeButton>\n          </span>,\n        ]);\n      }\n\n      if (pattern) {\n        tableData.push([\n          lang('GiftAttributeSymbol'),\n          <span className={styles.uniqueAttribute}>\n            {pattern.name}\n            <BadgeButton>{formatPercent(pattern.rarityPercent)}</BadgeButton>\n          </span>,\n        ]);\n      }\n\n      tableData.push([\n        lang('GiftInfoAvailability'),\n        lang('GiftInfoIssued', {\n          issued: gift.issuedCount,\n          total: gift.totalCount,\n        }),\n      ]);\n\n      if (originalDetails) {\n        const {\n          date, recipientId, message, senderId,\n        } = originalDetails;\n        const global = getGlobal(); // Peer titles do not need to be reactive\n\n        const openChat = (id: string) => {\n          openChatWithInfo({ id });\n          closeGiftInfoModal();\n        };\n\n        const recipient = selectPeer(global, recipientId)!;\n        const sender = senderId ? selectPeer(global, senderId) : undefined;\n\n        const formattedDate = formatDateTimeToString(date * 1000, lang.code, true);\n        const recipientLink = (\n\n          <Link onClick={() => openChat(recipientId)} isPrimary>\n            {getPeerTitle(lang, recipient)}\n          </Link>\n        );\n\n        let text: TeactNode | undefined;\n        if (!sender || senderId === recipientId) {\n          text = message ? lang('GiftInfoPeerOriginalInfoText', {\n            peer: recipientLink,\n            text: renderTextWithEntities(message),\n            date: formattedDate,\n          }, {\n            withNodes: true,\n          }) : lang('GiftInfoPeerOriginalInfo', {\n            peer: recipientLink,\n            date: formattedDate,\n          }, {\n            withNodes: true,\n          });\n        } else {\n          const senderLink = (\n\n            <Link onClick={() => openChat(sender.id)} isPrimary>\n              {getPeerTitle(lang, sender)}\n            </Link>\n          );\n          text = message ? lang('GiftInfoPeerOriginalInfoTextSender', {\n            peer: recipientLink,\n            sender: senderLink,\n            text: renderTextWithEntities(message),\n            date: formattedDate,\n          }, {\n            withNodes: true,\n          }) : lang('GiftInfoPeerOriginalInfoSender', {\n            peer: recipientLink,\n            date: formattedDate,\n            sender: senderLink,\n          }, {\n            withNodes: true,\n          });\n        }\n\n        tableData.push([\n          undefined,\n          <span>{text}</span>,\n        ]);\n      }\n    }\n\n    const tonLink = tonExplorerUrl && isGiftUnique && gift.giftAddress && (\n      `${tonExplorerUrl}${gift.giftAddress}`\n    );\n\n    const footer = (\n      <div className={styles.footer}>\n        {(canManage || tonLink || canBuyGift) && (\n          <div className={styles.footerDescription}>\n            {tonLink && (\n              <div>\n                {lang('GiftInfoTonText', {\n                  link: <SafeLink url={tonLink} shouldSkipModal text={lang('GiftInfoTonLinkText')} />,\n                }, { withNodes: true })}\n              </div>\n            )}\n            {canManage && (\n              <div>\n                {lang(`GiftInfo${isTargetChat ? 'Channel' : ''}${isUnsaved ? 'Hidden' : 'Saved'}`, {\n                  link: (\n                    <Link isPrimary onClick={handleTriggerVisibility}>\n                      {lang(`GiftInfoSaved${isUnsaved ? 'Show' : 'Hide'}`)}\n                    </Link>\n                  ),\n                }, {\n                  withNodes: true,\n                })}\n              </div>\n            )}\n            {!canBuyGift && isVisibleForMe && (\n              <div>\n                {lang('GiftInfoSenderHidden')}\n              </div>\n            )}\n            {canBuyGift && giftOwnerTitle && (\n              <div>\n                {lang('GiftInfoBuyGift', {\n                  user: giftOwnerTitle,\n                }, { withNodes: true })}\n              </div>\n            )}\n          </div>\n        )}\n        {renderFooterButton()}\n      </div>\n    );\n\n    return {\n      modalHeader: isGiftUnique ? uniqueGiftModalHeader : undefined,\n      header: isGiftUnique ? uniqueGiftHeader : regularHeader,\n      tableData,\n      footer,\n    };\n  }, [\n    typeGift, savedGift, renderingTargetPeer, giftSticker, lang,\n    canManage, hasConvertOption, isSender, oldLang, tonExplorerUrl,\n    gift, giftAttributes, renderFooterButton, isTargetChat,\n    SettingsMenuButton, isGiftUnique, renderingModal,\n    collectibleEmojiStatuses, currentUserEmojiStatus, saleDateInfo,\n    canBuyGift, giftOwnerTitle, isOpen, resellPriceInStars, giftSubtitle,\n    releasedByPeer,\n  ]);\n\n  return (\n    <>\n      <TableInfoModal\n        isOpen={isOpen}\n        modalHeader={modalData?.modalHeader}\n        header={modalData?.header}\n        hasBackdrop={isGiftUnique}\n        tableData={modalData?.tableData}\n        footer={modalData?.footer}\n        className={styles.modal}\n        onClose={handleClose}\n        withBalanceBar={Boolean(canBuyGift)}\n        isLowStackPriority\n      />\n      {uniqueGift && currentUser && Boolean(resellPriceInStars) && (\n        <ConfirmDialog\n          isOpen={isConfirmModalOpen}\n          noDefaultTitle\n          onClose={closeConfirmModal}\n          confirmLabel={lang('ButtonBuyGift', {\n            stars: formatStarsAsIcon(lang, resellPriceInStars, { asFont: true }),\n          }, { withNodes: true })}\n          confirmHandler={handleConfirmBuyGift}\n        >\n\n          <GiftTransferPreview\n            peer={recipientPeer || currentUser}\n            gift={uniqueGift}\n          />\n          {!recipientPeer\n            && (\n              <p>\n                {lang('GiftBuyConfirmDescription', {\n                  gift: lang('GiftUnique', { title: uniqueGift.title, number: uniqueGift.number }),\n                  stars: formatStarsAsText(lang, resellPriceInStars),\n                }, {\n                  withNodes: true,\n                  withMarkdown: true,\n                })}\n              </p>\n            )}\n          {recipientPeer\n            && (\n              <p>\n                {lang('GiftBuyForPeerConfirmDescription', {\n                  gift: lang('GiftUnique', { title: uniqueGift.title, number: uniqueGift.number }),\n                  stars: formatStarsAsText(lang, resellPriceInStars),\n                  peer: getPeerTitle(lang, recipientPeer),\n                }, {\n                  withNodes: true,\n                  withMarkdown: true,\n                })}\n              </p>\n            )}\n        </ConfirmDialog>\n      )}\n      {savedGift && (\n        <ConfirmDialog\n          isOpen={isConvertConfirmOpen}\n          onClose={closeConvertConfirm}\n          confirmHandler={handleConvertToStars}\n          title={lang('GiftInfoConvertTitle')}\n        >\n          <div>\n            {lang('GiftInfoPeerConvertDescription', {\n              amount: formatStarsAsText(lang, savedGift.starsToConvert!),\n              peer: getPeerTitle(lang, renderingFromPeer!)!,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n            })}\n          </div>\n          {hasConvertOption && (\n            <div>\n              {lang('GiftInfoConvertDescriptionPeriod', {\n                count: conversionLeft,\n              }, {\n                withNodes: true,\n                withMarkdown: true,\n                pluralValue: conversionLeft,\n              })}\n            </div>\n          )}\n          <div>{lang('GiftInfoConvertDescription2')}</div>\n        </ConfirmDialog>\n      )}\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const typeGift = modal?.gift;\n    const isSavedGift = typeGift && 'gift' in typeGift;\n    const currentUserId = global.currentUserId;\n\n    const fromId = isSavedGift && typeGift.fromId;\n    const fromPeer = fromId ? selectPeer(global, fromId) : undefined;\n    const targetPeer = modal?.peerId ? selectPeer(global, modal.peerId) : undefined;\n    const chat = targetPeer && isApiPeerChat(targetPeer) ? targetPeer : undefined;\n    const hasAdminRights = chat && getHasAdminRight(chat, 'postMessages');\n    const currentUser = selectUser(global, currentUserId!);\n    const recipientPeer = modal?.recipientId && currentUserId !== modal.recipientId\n      ? selectPeer(global, modal.recipientId) : undefined;\n    const currentUserEmojiStatus = currentUser?.emojiStatus;\n    const collectibleEmojiStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    const gift = isSavedGift ? typeGift.gift : typeGift;\n    const releasedByPeerId = gift?.type === 'starGiftUnique' && gift.releasedByPeerId;\n    const releasedByPeer = releasedByPeerId ? selectPeer(global, releasedByPeerId) : undefined;\n\n    return {\n      fromPeer,\n      targetPeer,\n      releasedByPeer,\n      currentUserId,\n      starGiftMaxConvertPeriod: global.appConfig?.starGiftMaxConvertPeriod,\n      tonExplorerUrl: global.appConfig?.tonExplorerUrl,\n      hasAdminRights,\n      currentUserEmojiStatus,\n      collectibleEmojiStatuses,\n      currentUser,\n      recipientPeer,\n    };\n  },\n)(GiftInfoModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionContainer\":\"wqkAvYGE\",\"descriptionPrice\":\"r9R0VR_w\",\"inputPrice\":\"ElDo1Bru\"};","import {\n  memo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { TabState } from '../../../../global/types';\n\nimport { formatCurrencyAsString } from '../../../../util/formatCurrency';\nimport { formatStarsAsIcon, formatStarsAsText } from '../../../../util/localization/format';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\nimport styles from './GiftResalePriceComposerModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['giftResalePriceComposerModal'];\n};\n\nexport type StateProps = {\n  starsStargiftResaleCommissionPermille?: number;\n  starsStargiftResaleAmountMin: number;\n  starsStargiftResaleAmountMax?: number;\n  starsUsdWithdrawRate?: number;\n};\n\nconst GiftResalePriceComposerModal = ({\n  modal, starsStargiftResaleCommissionPermille,\n  starsStargiftResaleAmountMin, starsStargiftResaleAmountMax, starsUsdWithdrawRate,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftResalePriceComposerModal,\n    closeGiftInfoModal,\n    updateStarGiftPrice,\n    showNotification,\n  } = getActions();\n  const isOpen = Boolean(modal);\n  const [price, setPrice] = useState<number | undefined>(undefined);\n\n  const renderingModal = useCurrentOrPrev(modal);\n  const { gift: typeGift } = renderingModal || {};\n  const isSavedGift = typeGift && 'gift' in typeGift;\n  const savedGift = isSavedGift ? typeGift : undefined;\n  const hasPrice = Boolean(price);\n\n  const lang = useLang();\n\n  const handleChangePrice = useLastCallback((e) => {\n    const value = e.target.value;\n    const number = parseFloat(value);\n    const result = value === '' || Number.isNaN(number) ? undefined\n      : starsStargiftResaleAmountMax ? Math.min(number, starsStargiftResaleAmountMax) : number;\n    setPrice(result);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeGiftResalePriceComposerModal();\n  });\n\n  const handleSellGift = useLastCallback(() => {\n    if (!savedGift || savedGift.gift.type !== 'starGiftUnique' || !savedGift.inputGift || !price) return;\n    closeGiftResalePriceComposerModal();\n    closeGiftInfoModal();\n    updateStarGiftPrice({ gift: savedGift.inputGift, price });\n    showNotification({\n      icon: 'sell-outline',\n      message: {\n        key: 'NotificationGiftIsSale',\n        variables: {\n          gift: lang('GiftUnique', { title: savedGift.gift.title, number: savedGift.gift.number }),\n        },\n      },\n    });\n  });\n  const commission = starsStargiftResaleCommissionPermille;\n  const isPriceCorrect = hasPrice && price > starsStargiftResaleAmountMin;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={lang('GiftSellTitle')}\n      hasCloseButton\n      isSlim\n      onClose={handleClose}\n    >\n      <div className={styles.inputPrice}>\n        <InputText\n          label={lang('InputPlaceholderGiftResalePrice')}\n          onChange={handleChangePrice}\n          value={price?.toString()}\n          inputMode=\"numeric\"\n          tabIndex={0}\n          teactExperimentControlled\n        />\n      </div>\n\n      <div className={styles.descriptionContainer}>\n        <span>\n          {!isPriceCorrect && Boolean(commission) && lang('DescriptionComposerGiftMinimumPrice', {\n            stars: formatStarsAsText(lang, starsStargiftResaleAmountMin),\n          }, {\n            withMarkdown: true,\n            withNodes: true,\n          })}\n          {isPriceCorrect && lang('DescriptionComposerGiftResalePrice',\n            {\n              stars: formatStarsAsText(lang, commission ? Number((price * (commission)).toFixed()) : price),\n            },\n            {\n              withMarkdown: true,\n              withNodes: true,\n            })}\n        </span>\n\n        {isPriceCorrect && Boolean(starsUsdWithdrawRate) && (\n          <span className={styles.descriptionPrice}>\n            {`≈ ${formatCurrencyAsString(\n              price * starsUsdWithdrawRate,\n              'USD',\n              lang.code,\n            )}`}\n          </span>\n        )}\n      </div>\n\n      <Button noForcedUpperCase disabled={!isPriceCorrect} size=\"smaller\" onClick={handleSellGift}>\n        {isPriceCorrect && lang('ButtonSellGift', {\n          stars: formatStarsAsIcon(lang, price, { asFont: true }),\n        }, { withNodes: true })}\n        {!isPriceCorrect && lang('Sell')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const configPermille = global.appConfig?.starsStargiftResaleCommissionPermille;\n    const starsStargiftResaleCommissionPermille = configPermille ? (configPermille / 1000) : undefined;\n    const starsStargiftResaleAmountMin = global.appConfig?.starsStargiftResaleAmountMin || 0;\n    const starsStargiftResaleAmountMax = global.appConfig?.starsStargiftResaleAmountMax;\n\n    const starsUsdWithdrawRateX1000 = global.appConfig?.starsUsdWithdrawRateX1000;\n    const starsUsdWithdrawRate = starsUsdWithdrawRateX1000 ? starsUsdWithdrawRateX1000 / 1000 : 1;\n\n    return {\n      starsStargiftResaleCommissionPermille,\n      starsStargiftResaleAmountMin,\n      starsStargiftResaleAmountMax,\n      starsUsdWithdrawRate,\n    };\n  },\n)(GiftResalePriceComposerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"EWaVCxY4\",\"footerButton\":\"_Dt6RSQV\"};","import {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributePattern,\n  ApiStarGiftRegular,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport { getStickerMediaHash } from '../../../../global/helpers';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { selectPeer } from '../../../../global/selectors';\nimport { formatStarsAsIcon } from '../../../../util/localization/format';\nimport { fetch } from '../../../../util/mediaLoader';\n\nimport useInterval from '../../../../hooks/schedulers/useInterval';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Button from '../../../ui/Button';\nimport Checkbox from '../../../ui/Checkbox';\nimport TableAboutModal, { type TableAboutData } from '../../common/TableAboutModal';\nimport UniqueGiftHeader from '../UniqueGiftHeader';\n\nimport styles from './GiftUpgradeModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['giftUpgradeModal'];\n};\n\ntype StateProps = {\n  recipient?: ApiPeer;\n};\n\ntype Attributes = {\n  model: ApiStarGiftAttributeModel;\n  pattern: ApiStarGiftAttributePattern;\n  backdrop: ApiStarGiftAttributeBackdrop;\n};\n\nconst PREVIEW_UPDATE_INTERVAL = 3000;\n\nconst GiftUpgradeModal = ({ modal, recipient }: OwnProps & StateProps) => {\n  const { closeGiftUpgradeModal, upgradeGift } = getActions();\n  const isOpen = Boolean(modal);\n\n  const renderingModal = useCurrentOrPrev(modal);\n  const renderingRecipient = useCurrentOrPrev(recipient);\n  const [shouldKeepOriginalDetails, setShouldKeepOriginalDetails] = useState(false);\n\n  const [previewAttributes, setPreviewAttributes] = useState<Attributes | undefined>();\n\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => closeGiftUpgradeModal());\n\n  const handleUpgrade = useLastCallback(() => {\n    const gift = renderingModal?.gift;\n    if (!gift?.inputGift) return;\n\n    upgradeGift({\n      gift: gift.inputGift,\n      shouldKeepOriginalDetails,\n      upgradeStars: !gift.alreadyPaidUpgradeStars ? (gift.gift as ApiStarGiftRegular).upgradeStars : undefined,\n    });\n    handleClose();\n  });\n\n  const updatePreviewAttributes = useLastCallback(() => {\n    if (!renderingModal?.sampleAttributes) return;\n    setPreviewAttributes(getRandomAttributes(renderingModal.sampleAttributes, previewAttributes));\n  });\n\n  useInterval(updatePreviewAttributes, isOpen ? PREVIEW_UPDATE_INTERVAL : undefined, true);\n\n  useEffect(() => {\n    if (isOpen && renderingModal?.sampleAttributes) {\n      updatePreviewAttributes();\n    }\n  }, [isOpen, renderingModal?.sampleAttributes]);\n\n  // Preload stickers and patterns\n  useEffect(() => {\n    const attributes = renderingModal?.sampleAttributes;\n    if (!attributes) return;\n    const patternStickers = attributes.filter((attr): attr is ApiStarGiftAttributeModel => attr.type === 'pattern')\n      .map((attr) => attr.sticker);\n    const modelStickers = attributes.filter((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model')\n      .map((attr) => attr.sticker);\n\n    const mediaHashes = [...patternStickers, ...modelStickers].map((sticker) => getStickerMediaHash(sticker, 'full'));\n    mediaHashes.forEach((hash) => {\n      fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n  }, [renderingModal?.sampleAttributes]);\n\n  const modalData = useMemo(() => {\n    if (!previewAttributes || !isOpen) {\n      return undefined;\n    }\n\n    const gift = renderingModal?.gift;\n\n    const listItemData = [\n      ['diamond', lang('GiftUpgradeUniqueTitle'), lang('GiftUpgradeUniqueDescription')],\n      ['trade', lang('GiftUpgradeTransferableTitle'), lang('GiftUpgradeTransferableDescription')],\n      ['auction', lang('GiftUpgradeTradeableTitle'), lang('GiftUpgradeTradeableDescription')],\n    ] satisfies TableAboutData;\n\n    const subtitle = renderingRecipient\n      ? lang('GiftPeerUpgradeText', { peer: getPeerTitle(lang, renderingRecipient) })\n      : lang('GiftUpgradeTextOwn');\n\n    const header = (\n      <UniqueGiftHeader\n        modelAttribute={previewAttributes.model}\n        backdropAttribute={previewAttributes.backdrop}\n        patternAttribute={previewAttributes.pattern}\n        title={lang('GiftUpgradeTitle')}\n        subtitle={subtitle}\n      />\n    );\n\n    const footer = (\n      <div className={styles.footer}>\n        {!gift && (\n          <Button className={styles.footerButton} size=\"smaller\" onClick={handleClose}>\n            {lang('OK')}\n          </Button>\n        )}\n        {gift && (\n          <>\n            <Checkbox\n              label={lang('GiftUpgradeKeepDetails')}\n              onCheck={setShouldKeepOriginalDetails}\n              checked={shouldKeepOriginalDetails}\n            />\n            <Button className={styles.footerButton} size=\"smaller\" isShiny onClick={handleUpgrade}>\n              {gift.alreadyPaidUpgradeStars\n                ? lang('GeneralConfirm')\n                : lang('GiftUpgradeButton', {\n                  amount: formatStarsAsIcon(lang, (gift.gift as ApiStarGiftRegular).upgradeStars!, { asFont: true }),\n                }, { withNodes: true })}\n            </Button>\n          </>\n        )}\n      </div>\n    );\n\n    return {\n      listItemData,\n      header,\n      footer,\n    };\n  }, [previewAttributes, isOpen, lang, renderingRecipient, renderingModal?.gift, shouldKeepOriginalDetails]);\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      header={modalData?.header}\n      footer={modalData?.footer}\n      listItemData={modalData?.listItemData}\n      hasBackdrop\n      onClose={handleClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const recipientId = modal?.recipientId;\n    const recipient = recipientId ? selectPeer(global, recipientId) : undefined;\n\n    return {\n      recipient,\n    };\n  },\n)(GiftUpgradeModal));\n\nfunction getRandomAttributes(list: ApiStarGiftAttribute[], previousSelection?: Attributes): Attributes {\n  const models = list.filter((attr): attr is ApiStarGiftAttributeModel => (\n    attr.type === 'model' && attr.name !== previousSelection?.model.name\n  ));\n  const patterns = list.filter((attr): attr is ApiStarGiftAttributePattern => (\n    attr.type === 'pattern' && attr.name !== previousSelection?.pattern.name\n  ));\n  const backdrops = list.filter((attr): attr is ApiStarGiftAttributeBackdrop => (\n    attr.type === 'backdrop' && attr.name !== previousSelection?.backdrop.name\n  ));\n\n  const randomModel = models[Math.floor(Math.random() * models.length)];\n  const randomPattern = patterns[Math.floor(Math.random() * patterns.length)];\n  const randomBackdrop = backdrops[Math.floor(Math.random() * backdrops.length)];\n\n  return {\n    model: randomModel,\n    pattern: randomPattern,\n    backdrop: randomBackdrop,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"qL0cHbwS\",\"profileBlock\":\"t18QCmAb\",\"titleContainer\":\"q8w7tnmR\",\"radialPattern\":\"_1RfhkfB\",\"lockIcon\":\"jiPObOWv\",\"avatar\":\"JK2zOWA7\",\"userTitle\":\"lxxbgNCl\",\"status\":\"MLMdxkUg\",\"giftTitle\":\"wxg_5ou_\",\"infoDescription\":\"KSCLIMZm\",\"footer\":\"VDrvalBo\"};","import { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiUser,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\n\nimport { selectIsCurrentUserPremium, selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport buildStyle from '../../../../util/buildStyle';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useCustomEmoji from '../../../common/hooks/useCustomEmoji';\n\nimport Avatar from '../../../common/Avatar';\nimport FullNameTitle from '../../../common/FullNameTitle';\nimport Icon from '../../../common/icons/Icon';\nimport RadialPatternBackground from '../../../common/profile/RadialPatternBackground';\nimport Button from '../../../ui/Button';\nimport TableAboutModal, { type TableAboutData } from '../../common/TableAboutModal';\n\nimport styles from './GiftStatusInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['giftStatusInfoModal'];\n};\n\ntype StateProps = {\n  currentUser: ApiUser;\n  isCurrentUserPremium?: boolean;\n};\n\nconst GiftStatusInfoModal = ({\n  modal,\n  currentUser,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftStatusInfoModal,\n    setEmojiStatus,\n  } = getActions();\n  const lang = useLang();\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const { emojiStatus } = renderingModal || {};\n\n  const subtitleColor = emojiStatus?.textColor;\n\n  const patternIcon = useCustomEmoji(emojiStatus?.patternDocumentId);\n\n  const handleClose = useLastCallback(() => {\n    closeGiftStatusInfoModal();\n  });\n\n  const onWearClick = useLastCallback(() => {\n    if (emojiStatus) {\n      setEmojiStatus({ emojiStatus });\n    }\n    closeGiftStatusInfoModal();\n  });\n\n  const radialPatternBackdrop = useMemo(() => {\n    if (!emojiStatus || !isOpen) return undefined;\n\n    const backdropColors = [emojiStatus.centerColor, emojiStatus.edgeColor];\n    const patternColor = emojiStatus.patternColor;\n\n    return (\n      <RadialPatternBackground\n        className={styles.radialPattern}\n        backgroundColors={backdropColors}\n        patternColor={patternColor}\n        patternIcon={patternIcon.customEmoji}\n      />\n    );\n  }, [emojiStatus, isOpen, patternIcon]);\n\n  const mockPeerWithStatus = useMemo(() => {\n    return {\n      ...currentUser,\n      emojiStatus,\n    } satisfies ApiUser;\n  }, [currentUser, emojiStatus]);\n\n  const header = useMemo(() => {\n    return (\n      <div className={styles.header}>\n        <div\n          className={buildClassName(styles.profileBlock)}\n          style={buildStyle(subtitleColor && `color: ${subtitleColor}`)}\n        >\n\n          {radialPatternBackdrop}\n          <Avatar peer={mockPeerWithStatus} size=\"jumbo\" className={styles.avatar} />\n          <FullNameTitle\n            peer={mockPeerWithStatus}\n            className={styles.userTitle}\n            withEmojiStatus\n            noFake\n            noVerified\n            statusSparklesColor={subtitleColor}\n          />\n          <p className={styles.status} style={buildStyle(subtitleColor && `color: ${subtitleColor}`)}>\n            {lang('Online')}\n          </p>\n        </div>\n        <div className={styles.titleContainer}>\n          <div className={styles.giftTitle}>\n            {\n              lang('UniqueStatusWearTitle', {\n                gift: mockPeerWithStatus?.emojiStatus?.title,\n              })\n            }\n          </div>\n          <div className={styles.infoDescription}>\n            {\n              lang('UniqueStatusBenefitsDescription')\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }, [subtitleColor, radialPatternBackdrop, mockPeerWithStatus, lang]);\n\n  const listItemData = [\n    ['radial-badge', lang('UniqueStatusBadgeBenefitTitle'), lang('UniqueStatusBadgeDescription')],\n    ['unique-profile', lang('UniqueStatusProfileDesignBenefitTitle'), lang('UniqueStatusProfileDesignDescription')],\n    ['proof-of-ownership', lang('UniqueStatusProofOfOwnershipBenefitTitle'),\n      lang('UniqueStatusProofOfOwnershipDescription')],\n  ] satisfies TableAboutData;\n\n  const footer = useMemo(() => {\n    if (!isOpen) return undefined;\n    return (\n      <div className={styles.footer}>\n        <Button\n          size=\"smaller\"\n          onClick={onWearClick}\n        >\n          {lang('UniqueStatusWearButton')}\n          {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.lockIcon} />}\n        </Button>\n      </div>\n    );\n  }, [lang, isCurrentUserPremium, isOpen]);\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      header={header}\n      listItemData={listItemData}\n      footer={footer}\n      hasBackdrop\n      onClose={handleClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!)!;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      currentUser,\n      isCurrentUserPremium,\n    };\n  },\n)(GiftStatusInfoModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"LQgz8Nlx\",\"giftPreview\":\"hgs0ts_O\",\"backdrop\":\"OnBhMaBw\",\"description\":\"HBxB4QPY\",\"arrow\":\"kXTOUpfb\",\"noPassword\":\"BnqLhoKr\"};","import {\n  memo,\n  useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiStarGiftUnique } from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\nimport { type CustomPeer, SettingsScreens } from '../../../../types';\n\nimport { getDays } from '../../../../util/dates/units';\nimport { getServerTime } from '../../../../util/serverTime';\nimport { getGiftAttributes } from '../../../common/helpers/gifts';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Avatar from '../../../common/Avatar';\nimport Icon from '../../../common/icons/Icon';\nimport PasswordForm from '../../../common/PasswordForm';\nimport RadialPatternBackground from '../../../common/profile/RadialPatternBackground';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\n\nimport styles from './GiftWithdrawModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['giftWithdrawModal'];\n};\n\ntype StateProps = {\n  hasPassword?: boolean;\n  passwordHint?: string;\n};\n\nconst FRAGMENT_PEER: CustomPeer = {\n  isCustomPeer: true,\n  avatarIcon: 'fragment',\n  title: '',\n  customPeerAvatarColor: '#000000',\n};\nconst GIFT_STICKER_SIZE = 4.5 * REM;\n\nconst GiftWithdrawModal = ({ modal, hasPassword, passwordHint }: OwnProps & StateProps) => {\n  const {\n    closeGiftWithdrawModal,\n    clearGiftWithdrawError,\n    closeGiftInfoModal,\n    processStarGiftWithdrawal,\n    openSettingsScreen,\n  } = getActions();\n  const isOpen = Boolean(modal);\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const lang = useLang();\n\n  const renderingModal = useCurrentOrPrev(modal);\n  const gift = renderingModal?.gift?.gift as ApiStarGiftUnique;\n  const giftAttributes = gift && getGiftAttributes(gift);\n  const exportDelay = renderingModal?.gift?.canExportAt\n    ? Math.max(renderingModal.gift.canExportAt - getServerTime(), 0) : undefined;\n\n  const handleClose = useLastCallback(() => {\n    closeGiftWithdrawModal();\n  });\n\n  const handleSubmit = useLastCallback((password: string) => {\n    processStarGiftWithdrawal({\n      gift: renderingModal!.gift.inputGift!,\n      password,\n    });\n  });\n\n  const handleSetUpPassword = useLastCallback(() => {\n    openSettingsScreen({\n      screen: SettingsScreens.TwoFaDisabled,\n    });\n    closeGiftWithdrawModal();\n    closeGiftInfoModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={lang('GiftWithdrawTitle')}\n      hasCloseButton\n      isSlim\n      onClose={handleClose}\n    >\n      {giftAttributes && (\n        <>\n          <div className={styles.header}>\n            <div className={styles.giftPreview}>\n              <RadialPatternBackground\n                className={styles.backdrop}\n                backgroundColors={[giftAttributes.backdrop!.centerColor, giftAttributes.backdrop!.edgeColor]}\n                patternColor={giftAttributes.backdrop?.patternColor}\n                patternIcon={giftAttributes.pattern?.sticker}\n              />\n              <AnimatedIconFromSticker\n                className={styles.sticker}\n                size={GIFT_STICKER_SIZE}\n                sticker={giftAttributes.model?.sticker}\n              />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar\n              peer={FRAGMENT_PEER}\n              size=\"giant\"\n              className={styles.avatar}\n            />\n          </div>\n          <p className={styles.description}>\n            {lang('GiftWithdrawDescription', {\n              gift: `${gift.title} #${gift.number}`,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n              renderTextFilters: ['br'],\n            })}\n          </p>\n        </>\n      )}\n      {Boolean(exportDelay) && (\n        <p className={styles.exportHint}>\n          {lang('GiftWithdrawWait', { days: getDays(exportDelay) }, { pluralValue: getDays(exportDelay) })}\n        </p>\n      )}\n      {!hasPassword && (\n        <>\n          <span className={styles.noPassword}>{lang('ErrorPasswordMissing')}</span>\n          <Button className=\"mt-2\" size=\"smaller\" onClick={handleSetUpPassword}>{lang('SetUp2FA')}</Button>\n        </>\n      )}\n      {hasPassword && !exportDelay && (\n        <PasswordForm\n          shouldShowSubmit\n          placeholder={lang('CheckPasswordPlaceholder')}\n          error={renderingModal?.errorKey && lang.withRegular(renderingModal?.errorKey)}\n          description={lang('CheckPasswordDescription')}\n          clearError={clearGiftWithdrawError}\n          isLoading={renderingModal?.isLoading}\n          hint={passwordHint}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isOpen}\n          onChangePasswordVisibility={setShouldShowPassword}\n          submitLabel={lang('GiftWithdrawSubmit')}\n          onSubmit={handleSubmit}\n        />\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword,\n        },\n      },\n      twoFaSettings: {\n        hint: passwordHint,\n      },\n    } = global;\n\n    return {\n      hasPassword,\n      passwordHint,\n    };\n  },\n)(GiftWithdrawModal));\n","import {\n  getIsHeavyAnimating, useCallback, useRef, useState,\n} from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useHeavyAnimation from './useHeavyAnimation';\nimport useRunDebounced from './useRunDebounced';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useDebouncedMemo<R, D extends unknown[]>(\n  resolverFn: () => R, ms: number, dependencies: D,\n): R | undefined {\n  const [value, setValue] = useState<R>();\n  const { isFrozen, updateWhenUnfrozen } = useHeavyAnimationFreeze();\n  const runDebounced = useRunDebounced(ms, true);\n\n  useSyncEffect(() => {\n    if (isFrozen) {\n      updateWhenUnfrozen();\n      return;\n    }\n\n    runDebounced(() => {\n      setValue(resolverFn());\n    });\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [...dependencies, isFrozen]);\n\n  return value;\n}\n\nfunction useHeavyAnimationFreeze() {\n  const isPending = useRef(false);\n\n  const updateWhenUnfrozen = useCallback(() => {\n    isPending.current = true;\n  }, []);\n\n  const forceUpdate = useForceUpdate();\n  const handleUnfreeze = useCallback(() => {\n    if (!isPending.current) {\n      return;\n    }\n\n    isPending.current = false;\n    forceUpdate();\n  }, [forceUpdate]);\n  useHeavyAnimation(noop, handleUnfreeze);\n\n  return {\n    isFrozen: getIsHeavyAnimating(),\n    updateWhenUnfrozen,\n  };\n}\n\nfunction noop() {\n}\n","import { useState } from '../lib/teact/teact';\n\nimport type { ApiChat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\nimport useAsync from './useAsync';\nimport useDebouncedMemo from './useDebouncedMemo';\nimport useLastCallback from './useLastCallback';\n\nconst DEBOUNCE_TIMEOUT = 300;\n\nexport async function peerGlobalSearch(query: string) {\n  const searchResult = await callApi('searchChats', { query });\n  if (!searchResult) return undefined;\n\n  const ids = [...searchResult.accountResultIds, ...searchResult.globalResultIds];\n\n  return ids;\n}\n\nexport function prepareChatMemberSearch(chat: ApiChat) {\n  return async (query: string) => {\n    const searchResult = await callApi('fetchMembers', {\n      chat,\n      memberFilter: 'search',\n      query,\n    });\n\n    return searchResult?.members?.map((member) => member.userId) || [];\n  };\n}\n\nexport default function usePeerSearch({\n  query,\n  queryFn = peerGlobalSearch,\n  defaultValue,\n  debounceTimeout = DEBOUNCE_TIMEOUT,\n  isDisabled,\n}: {\n  query: string;\n  queryFn?: (query: string) => Promise<string[] | undefined>;\n  defaultValue?: string[];\n  debounceTimeout?: number;\n  isDisabled?: boolean;\n}) {\n  const debouncedQuery = useDebouncedMemo(() => query, debounceTimeout, [query]);\n  const [currentResultsQuery, setCurrentResultsQuery] = useState<string>('');\n  const searchQuery = !query ? query : debouncedQuery; // Ignore debounce if query is empty\n  const queryCallback = useLastCallback(queryFn);\n\n  const result = useAsync(async () => {\n    if (!searchQuery || isDisabled) {\n      setCurrentResultsQuery('');\n      return Promise.resolve(defaultValue);\n    }\n\n    const answer = await queryCallback(searchQuery);\n    setCurrentResultsQuery(searchQuery);\n    return answer;\n  }, [searchQuery, defaultValue, queryCallback, isDisabled], defaultValue);\n\n  return {\n    ...result,\n    currentResultsQuery,\n  };\n}\n","import {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiStarGiftUnique } from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\nimport type { UniqueCustomPeer } from '../../../../types';\n\nimport { ALL_FOLDER_ID } from '../../../../config';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { selectCanGift, selectPeer } from '../../../../global/selectors';\nimport { unique } from '../../../../util/iteratees';\nimport { formatStarsAsIcon, formatStarsAsText } from '../../../../util/localization/format';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { getGiftAttributes } from '../../../common/helpers/gifts';\nimport sortChatIds from '../../../common/helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePeerSearch from '../../../../hooks/usePeerSearch';\n\nimport GiftTransferPreview from '../../../common/gift/GiftTransferPreview';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport PickerModal from '../../../common/pickers/PickerModal';\nimport ConfirmDialog from '../../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['giftTransferModal'];\n};\n\ntype StateProps = {\n  contactIds?: string[];\n  currentUserId?: string;\n};\n\ntype Categories = 'withdraw';\n\nconst GiftTransferModal = ({\n  modal, contactIds, currentUserId,\n}: OwnProps & StateProps) => {\n  const { closeGiftTransferModal, openGiftWithdrawModal, transferGift } = getActions();\n  const isOpen = Boolean(modal);\n\n  const lang = useLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const renderingModal = useCurrentOrPrev(modal);\n  const uniqueGift = renderingModal?.gift?.gift as ApiStarGiftUnique;\n  const giftAttributes = uniqueGift && getGiftAttributes(uniqueGift);\n\n  const [selectedId, setSelectedId] = useState<string | undefined>();\n\n  const renderingSelectedPeerId = useCurrentOrPrev(selectedId);\n  const renderingSelectedPeer = useMemo(() => {\n    const global = getGlobal();\n    return renderingSelectedPeerId ? selectPeer(global, renderingSelectedPeerId) : undefined;\n  }, [renderingSelectedPeerId]);\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n\n  const sortedLocalIds = useMemo(() => {\n    return unique([\n      ...(contactIds || []),\n      ...(orderedChatIds || []),\n    ]);\n  }, [contactIds, orderedChatIds]);\n\n  const { result: foundIds, currentResultsQuery } = usePeerSearch({\n    query: searchQuery,\n    defaultValue: sortedLocalIds,\n  });\n\n  const isLoading = currentResultsQuery !== searchQuery;\n\n  const categories = useMemo(() => {\n    if (currentResultsQuery) return MEMO_EMPTY_ARRAY;\n\n    return [{\n      type: 'withdraw',\n      isCustomPeer: true,\n      avatarIcon: 'toncoin',\n      peerColorId: 5,\n      title: lang('GiftTransferTON'),\n    }] satisfies UniqueCustomPeer<Categories>[];\n  }, [lang, currentResultsQuery]);\n\n  const handleCategoryChange = useLastCallback((category: Categories) => {\n    if (category !== 'withdraw') return;\n\n    openGiftWithdrawModal({\n      gift: renderingModal!.gift,\n    });\n    closeGiftTransferModal();\n  });\n\n  const displayIds = useMemo(() => {\n    if (isLoading) return MEMO_EMPTY_ARRAY;\n    const global = getGlobal();\n\n    return sortChatIds((foundIds || []).filter((peerId) => (\n      peerId !== currentUserId && selectCanGift(global, peerId)\n    )),\n    false);\n  }, [isLoading, foundIds, currentUserId]);\n\n  const closeConfirmModal = useLastCallback(() => {\n    setSelectedId(undefined);\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      setSelectedId(undefined);\n    }\n  }, [isOpen]);\n\n  const handleTransfer = useLastCallback(() => {\n    if (!renderingModal?.gift.inputGift) return;\n    transferGift({\n      gift: renderingModal.gift.inputGift,\n      recipientId: renderingSelectedPeerId!,\n      transferStars: renderingModal.gift.transferStars,\n    });\n\n    closeConfirmModal();\n    closeGiftTransferModal();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={closeGiftTransferModal}\n      title={lang('GiftTransferTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      ignoreFreeze\n    >\n      <PeerPicker<Categories>\n        itemIds={displayIds}\n        categories={categories}\n        onSelectedCategoryChange={handleCategoryChange}\n        withDefaultPadding\n        withPeerUsernames\n        isSearchable\n        noScrollRestore\n        isLoading={isLoading}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onFilterChange={setSearchQuery}\n        onSelectedIdChange={setSelectedId}\n      />\n      {giftAttributes && (\n        <ConfirmDialog\n          isOpen={Boolean(selectedId)}\n          noDefaultTitle\n          onClose={closeConfirmModal}\n          confirmLabel={renderingModal?.gift.transferStars\n            ? lang(\n              'GiftTransferConfirmButton',\n              { amount: formatStarsAsIcon(lang, renderingModal.gift.transferStars, { asFont: true }) },\n              { withNodes: true },\n            ) : lang('GiftTransferConfirmButtonFree')}\n          confirmHandler={handleTransfer}\n        >\n          {renderingSelectedPeer && (\n            <GiftTransferPreview\n              peer={renderingSelectedPeer}\n              gift={uniqueGift}\n            />\n          )}\n          <p>\n            {renderingModal?.gift.transferStars\n              ? lang('GiftTransferConfirmDescription', {\n                gift: lang('GiftUnique', { title: uniqueGift.title, number: uniqueGift.number }),\n                amount: formatStarsAsText(lang, renderingModal.gift.transferStars),\n                peer: getPeerTitle(lang, renderingSelectedPeer!),\n              }, {\n                withNodes: true,\n                withMarkdown: true,\n              })\n              : lang('GiftTransferConfirmDescriptionFree', {\n                gift: lang('GiftUnique', { title: uniqueGift.title, number: uniqueGift.number }),\n                peer: getPeerTitle(lang, renderingSelectedPeer!),\n              }, {\n                withNodes: true,\n                withMarkdown: true,\n              })}\n          </p>\n        </ConfirmDialog>\n      )}\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { contactList, currentUserId } = global;\n\n    return {\n      contactIds: contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(GiftTransferModal));\n","import { memo, useState } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\n\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { selectUser } from '../../../../global/selectors';\nimport { formatStarsAsText } from '../../../../util/localization/format';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Checkbox from '../../../ui/Checkbox';\nimport ConfirmDialog from '../../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['chatRefundModal'];\n};\n\ntype StateProps = {\n  user?: ApiUser;\n};\n\nconst ChatRefundModal = ({ modal, user }: OwnProps & StateProps) => {\n  const { closeChatRefundModal, toggleNoPaidMessagesException } = getActions();\n\n  const [shouldRefundStars, setShouldRefundStars] = useState(false);\n\n  const renderingModal = useCurrentOrPrev(modal);\n  const renderingUser = useCurrentOrPrev(user);\n\n  const { starsToRefund, userId } = renderingModal || {};\n\n  const lang = useLang();\n\n  const isOpen = Boolean(modal);\n\n  const handleConfirmRemoveFee = useLastCallback(() => {\n    closeChatRefundModal();\n    if (!userId) return;\n\n    toggleNoPaidMessagesException ({ userId, shouldRefundCharged: shouldRefundStars });\n  });\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeChatRefundModal}\n      title={lang('RemoveFeeTitle')}\n      confirmLabel={lang('ConfirmRemoveMessageFee')}\n      confirmHandler={handleConfirmRemoveFee}\n    >\n      {lang('ConfirmDialogMessageRemoveFee', {\n        peer: renderingUser && getPeerTitle(lang, renderingUser),\n      }, {\n        withMarkdown: true,\n        withNodes: true,\n      })}\n      {\n        Boolean(starsToRefund) && (\n          <Checkbox\n            className=\"dialog-checkbox\"\n            label={lang('ConfirmDialogRemoveFeeRefundStars', {\n              amount: formatStarsAsText(lang, starsToRefund),\n            }, {\n              withMarkdown: true,\n              withNodes: true,\n            })}\n            checked={shouldRefundStars}\n            onCheck={setShouldRefundStars}\n          />\n        )\n      }\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { modal }): StateProps => {\n  const user = modal?.userId ? selectUser(global, modal.userId) : undefined;\n\n  return {\n    user,\n  };\n})(ChatRefundModal));\n"],"names":["memo","withGlobal","global","modal","user","forUserId","selectUser","undefined","StarsGiftModal","closeStarsGiftModal","openInvoice","requestConfetti","getActions","dialogRef","useRef","isOpen","Boolean","renderingModal","useCurrentOrPrev","oldLang","useOldLang","selectedOption","setSelectedOption","useState","isHeaderHidden","setHeaderHidden","useEffect","showConfetti","useLastCallback","dialog","current","top","left","width","height","querySelector","getBoundingClientRect","withStars","isCompleted","handleClick","option","type","userId","id","stars","currency","amount","handleClose","bottomText","useMemo","parts","split","_jsx","SafeLink","url","text","Modal","className","buildClassName","styles","modalDialog","contentClassName","content","isSlim","onClose","children","_jsxs","main","onScroll","e","scrollTop","currentTarget","Button","round","size","closeButton","color","onClick","ariaLabel","Icon","name","header","hiddenHeader","starHeaderText","headerInfo","_Fragment","Avatar","peer","avatar","logoBackground","src","StarsBackground","alt","draggable","logo","StarLogo","headerText","center","renderText","formatCurrencyAsString","code","description","getPeerTitle","section","StarTopupOptionList","options","starsGiftOptions","secondaryInfo","chats","listIds","currentUserId","userIds","contactList","activeListIds","active","archivedListIds","archived","StarsGiftingPickerModal","closeStarsGiftingPickerModal","openStarsGiftModal","searchQuery","setSearchQuery","displayedUserIds","usersById","getGlobal","users","byId","combinedIds","unique","filteredUserIds","filterPeersByQuery","ids","query","sortChatIds","filter","isSupport","isUserBot","isDeletedUser","SERVICE_NOTIFICATIONS_USER_ID","handleSelectedUserIdsChange","newSelectedId","length","PickerModal","title","hasCloseButton","shouldAdaptToSearch","withFixedHeight","confirmButtonText","onEnter","PeerPicker","itemIds","filterValue","filterPlaceholder","onFilterChange","isSearchable","withDefaultPadding","withStatus","onSelectedIdChange","BalanceBlock","balance","withAddButton","lang","useLang","openStarsBalanceModal","balanceBlock","balanceInfo","smallerText","balanceBottom","TON_CURRENCY_CODE","convertCurrencyFromBaseUnit","StarIcon","STARS_CURRENCY_CODE","formatStarsAmount","BadgeButton","addStarsButton","addStarsIcon","StarsSubscriptionItem","subscription","openStarsSubscriptionModal","peerId","pricing","until","isCancelled","photo","useSelector","selectPeer","selectProvidedPeer","hasExpired","Date","now","formattedDate","formatDateToString","root","preview","subscriptionStar","info","subtitle","webPhoto","status","statusEnded","statusPricing","star","formatInteger","statusPeriod","getTransactionTitle","transaction","paidMessages","count","withNodes","pluralValue","isGiftResale","isNegativeAmount","starRefCommision","formatPercent","isGiftUpgrade","extendedMedia","subscriptionPeriod","isReaction","giveawayPostId","isMyGift","isGift","starGift","customPeer","buildStarsTransactionCustomPeer","titleKey","currencyAmount","starsAmount","nanos","SingleMediaThumb","boughtMedia","index","media","video","mediaHash","getMediaHash","thumb","getMediaThumbUri","mediaBlob","useMedia","blurry","full","PaidMediaThumb","isTransactionPreview","Math","min","isLocked","dir","slice","reverse","map","item","i","arr","realIndex","MediaSpoiler","isVisible","thumbDataUri","thumbnail","dataUri","noOutline","StarsTransactionItem","openStarsTransactionModal","date","transactionPeer","selectOptionalPeer","isUniqueGift","giftSticker","getStickerFromGift","data","avatarPeer","CUSTOM_PEER_PREMIUM","subtitleKey","number","isRefund","hasFailed","isPending","previewContent","backdrop","getGiftAttributes","backgroundColors","centerColor","edgeColor","RadialPatternBackground","uniqueGiftBackground","AnimatedIconFromSticker","sticker","play","formatDateTimeToString","negative","positive","formatStarsTransactionAmount","TRANSACTION_TYPES","TRANSACTION_TABS_KEYS","TRANSACTION_ITEM_CLASS","shouldForceHeight","ton","history","all","transactions","starsBalanceState","tonBalanceState","canBuyPremium","selectIsPremiumPurchaseBlocked","tonUsdRate","appConfig","TON_USD_RATE_DEFAULT","tonTopupUrl","TON_TOPUP_URL_DEFAULT","StarsBalanceModal","closeStarsBalanceModal","loadStarsTransactions","loadStarsSubscriptions","openStarsGiftingPickerModal","openUrl","currentState","subscriptions","selectedTabIndex","setSelectedTabIndex","areBuyOptionsShown","showBuyOptions","hideBuyOptions","useFlag","originStarsPayment","originReaction","originGift","topup","shouldOpenOnBuy","ongoingTransactionAmount","form","invoice","totalAmount","subscriptionInfo","subscriptionPricing","gift","balanceNeeded","starsNeeded","starsNeededText","channel","selectChat","chatId","getChatTitle","bot","botId","getUserFullName","purpose","PAID_MESSAGES_PURPOSE","withMarkdown","shouldShowItems","shouldSuggestGifting","transactionTabs","key","tosText","handleLoadMoreTransactions","isTon","handleLoadMoreSubscriptions","openStarsGiftingPickerModalHandler","handleBuyStars","handleTonTopUp","minimal","modalBalance","renderTonSection","tonAmount","ParticlesHeader","model","isDisabled","tonBalanceContainer","tonBalance","tonIconBalance","tonInUsd","convertTonToUsd","topUpButton","starButton","isText","noForcedUpperCase","topupOptions","tos","hint","list","sectionTitle","nextOffset","disabled","isLoading","loadMore","loadMoreIcon","container","Transition","isRtl","activeKey","renderCount","shouldRestoreHeight","transition","InfiniteScroll","onLoadMore","items","scrollContainerClosest","itemSelector","noFastList","noScrollRestoreOnTop","TabList","tabs","tabClassName","tab","activeTab","onSwitchTab","messageInputInvoice","inputInvoice","message","selectChatMessage","messageId","chat","isPaidMedia","paidMedia","paidMediaMessage","paidMediaChat","StarPaymentModal","closeStarsPaymentModal","sendStarPaymentForm","markLoading","unmarkLoading","prevModal","usePrevious","isBotSubscription","canShowPeerItem","descriptionText","botName","starsText","areAllPhotos","every","duration","areAllVideos","mediaText","channelTitle","disclaimerText","link","inviteCustomPeer","getCustomPeerFromInvite","handlePayment","paymentContent","hasAbsoluteCloseButton","paymentImages","paymentPhoto","avatarStar","PeerBadge","avatarWebPhoto","avatarSize","badgeIcon","badgeText","badgeClassName","amountBadge","paymentImageBackground","PeerChip","botItem","paymentButton","formatStarsAsIcon","asFont","disclaimer","UniqueGiftHeader","modelAttribute","backdropAttribute","patternAttribute","subtitlePeer","resellPrice","openChat","deps","useTransitionActiveKey","subtitleColor","textColor","radialPatternBackdrop","backdropColors","patternColor","patternIcon","slideClassName","direction","style","buildStyle","paidMessageCommission","starsPaidMessageCommissionPermille","starsGiftSticker","selectGiftStickerForStars","selectGiftStickerForTon","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","topSticker","StarsTransactionModal","showNotification","openMediaViewer","closeStarsTransactionModal","handleOpenMedia","origin","MediaViewerOrigin","StarsTransaction","standaloneMedia","flatMap","Object","values","starModalData","giftAttributes","toName","getStarsPeerTitleKey","messageLink","getMessageLink","giveawayMessageLink","mediaAmount","m","shouldDisplayAvatar","uniqueGiftHeader","pattern","regularHeader","noLoop","percent","tableData","peerLabel","push","containerClassName","copyTextToClipboard","footerTextParts","footer","renderingModalData","TableInfoModal","hasBackdrop","buttonText","StarsSubscriptionModal","closeStarsSubscriptionModal","fulfillStarsSubscription","changeStarsSubscription","checkChatInvite","loadStarStatus","buttonState","canRefulfill","isActive","canRestart","chatInviteHash","invoiceSlug","handleButtonClick","hash","slug","hasBotCancelled","isApiPeerUser","specialReplacement","STARS_ICON_PLACEHOLDER","footerTos","DEFAULT_POINTS","getProgress","points","value","pointIndex","findIndex","point","prevPoint","nextPoint","getValue","progress","floor","StarSlider","maxValue","defaultValue","onChange","floatingBadgeRef","result","setValue","useEffectOnce","updateSafeBadgePosition","badge","parent","parentElement","requestMeasure","safeMinX","offsetLeft","offsetWidth","safeMaxX","requestMutation","setProperty","useResizeObserver","handleChange","event","newValue","Number","floatingBadgeWrapper","floatingBadge","ref","floatingBadgeText","floatingBadgeIcon","AnimatedCounter","floatingBadgeTriangle","viewBox","fill","x1","x2","y1","y2","offset","d","Sparkles","preset","sparkles","slider","max","step","ANONYMOUS_PEER","avatarIcon","customPeerAvatarColor","isCustomPeer","starBalance","maxAmount","paidReactionMaxAmount","defaultPrivacy","settings","paidReactionPrivacy","sendPaidReactionsAsPeerIds","currentUser","PaidReactionModal","closePaidReactionModal","addLocalPaidReaction","loadSendPaidReactionsAs","setStarsAmount","isTouched","markTouched","unmarkTouched","shouldSendAsAnonymous","setShouldSendAsAnonymous","sendAsPeerId","setSendAsPeerId","senderPeer","isMobile","useAppLayout","handleShowInTopSendersChange","target","checked","handleAmountChange","filteredMyReactorIds","unshift","canChangeSendAsPeer","currentReactor","reactions","topReactors","find","reactor","isMy","isAnonymous","includes","handleSend","isPrivate","shouldIgnoreDefaultPrivacy","handleSendAsPeerChange","renderMenuItem","isSelected","MenuItem","itemInfo","FullNameTitle","itemTitle","noFake","noVerified","itemSubtitle","itemIcon","SendAsPeerMenuButton","onTrigger","ripple","sendAsPeerMenuButton","sendAsPeerButtonAvatar","buttonDownIcon","sendAsPeersMenu","DropdownMenu","sendAsPeerMenu","bubbleClassName","sendAsPeerMenuBubble","trigger","positionX","autoClose","hasCurrentSender","myReactorAmount","forEach","isCurrentReactor","localAmount","sender","sort","a","b","chatTitle","isLowStackPriority","sendAsPeersMenuContainer","headerControlPanel","Separator","topLabel","countText","topPeer","topBadge","separator","Checkbox","checkBox","label","buttonStar","theme","selectTheme","isBlurred","isBackgroundBlurred","background","customBackground","backgroundColor","selectThemeValues","paidMessagesStars","selectPeerPaidMessagesStars","userFullInfo","selectUserFullInfo","isGiftForSelf","areUniqueStarGiftsDisallowed","disallowedGifts","shouldDisallowUniqueStarGifts","shouldDisallowLimitedStarGifts","tabState","selectTabState","captionLimit","starGiftMaxMessageLength","isPaymentFormLoading","giftByStars","sendStarGift","sendPremiumGiftByStars","openGiftUpgradeModal","giftMessage","setGiftMessage","shouldHideName","setShouldHideName","shouldPayForUpgrade","setShouldPayForUpgrade","shouldPayByStars","setShouldPayByStars","customBackgroundValue","useCustomBackground","isStarGift","isPremiumGift","hasPremiumByStars","isPeerUser","isSelf","localMessage","currentGift","isOutgoing","senderId","action","mediaType","months","isNameHidden","starsToConvert","canUpgrade","alreadyPaidUpgradeStars","upgradeStars","fromId","handleGiftMessageChange","handleShouldHideNameChange","handleShouldPayForUpgradeChange","toggleShouldPayByStars","handleOpenUpgradePreview","giftId","handleGetMoreStars","handleMainButtonClick","shouldUpgrade","canUseStarsPayment","bgClassName","inert","ActionMessage","threadId","MAIN_THREAD_ID","appearanceOrder","symbolsLeft","TextArea","maxLength","maxLengthIndicator","toString","ListItem","narrow","Switcher","Link","isPrimary","receiver","renderOptionsSection","formatCurrency","availabilityRemains","PremiumProgress","availabilityTotal","rightText","leftText","renderFooter","selectGiftStickerForDuration","baseMonthAmount","optionByStars","handleGiftClick","perMonth","discount","ceil","tabIndex","role","nonInteractive","caption","renderMonths","pill","fluid","GiftRibbon","observeIntersection","isResale","openGiftInfoModal","stickerRef","setIsVisible","isGiftUnique","uniqueGift","regularGift","resellPriceInStars","resellMinStars","priceInStarsAsString","isLimited","isSoldOut","giftNumber","giftRibbon","useOnIntersect","entry","visible","isIntersecting","StickerView","observeIntersectionForPlaying","observeIntersectionForLoading","containerRef","shouldPreloadPreview","withSparkleEffect","starGifts","resaleGifts","areGiftsAllLoaded","isAllLoaded","areGiftsLoading","updateIteration","resellGifts","gifts","GiftModalResaleScreen","onGiftClick","loadResaleGifts","updateResaleGiftsFilter","scrollerRef","resellGiftsIds","g","hasFilter","modelAttributes","patternAttributes","backdropAttributes","handleLoadMoreResellGifts","isGiftsEmpty","viewportIds","useInfiniteScroll","RESALE_GIFTS_LIMIT","observe","useIntersectionObserver","rootRef","throttleMs","handleResetGiftsFilter","resaleScreenRoot","notFoundGiftsRoot","AnimatedIconWithPreview","tgsUrl","LOCAL_TGS_URLS","SearchingDuck","notFoundGiftsDescription","notFoundGiftsLink","resaleStarGiftsContainer","preloadBackwards","GiftItemStar","ATTRIBUTE_STICKER_SIZE","REM","ResaleGiftMenuAttributeSticker","customColor","useDynamicColorListener","thumbClassName","attributes","counters","GiftResaleFilters","searchModelQuery","setSearchModelQuery","searchBackdropQuery","setSearchBackdropQuery","searchPatternQuery","setSearchPatternQuery","filteredAttributes","counter","attribute","found","attr","backdropId","documentId","filteredAndSearchedAttributes","filterBySearch","trim","toLowerCase","sortMenuRef","isContextMenuOpen","isSortContextMenuOpen","contextMenuAnchor","sortContextMenuAnchor","handleContextMenu","handleSortContextMenu","handleContextMenuClose","handleSortContextMenuClose","handleContextMenuHide","handleSortContextMenuHide","useContextMenuHandlers","getSortMenuElement","modelMenuRef","isModelContextMenuOpen","modelContextMenuAnchor","handleModelContextMenu","handleModelContextMenuClose","handleModelContextMenuHide","getModelMenuElement","backdropMenuRef","isBackdropContextMenuOpen","backdropContextMenuAnchor","handleBackdropContextMenu","handleBackdropContextMenuClose","handleBackdropContextMenuHide","getBackdropMenuElement","patternMenuRef","isPatternContextMenuOpen","patternContextMenuAnchor","handlePatternContextMenu","handlePatternContextMenuClose","handlePatternContextMenuHide","getPatternMenuElement","SortMenuButton","sortType","isMenuOpen","ModelMenuButton","attributesCount","BackdropMenuButton","PatternMenuButton","handleSortMenuItemClick","handleSelectedAllModelsClick","handleSelectedAllPatternsClick","handleSelectedAllBackdropsClick","handleModelMenuItemClick","updatedAttributes","some","handlePatternMenuItemClick","handleBackdropMenuItemClick","handleSearchModelInputReset","useCallback","handleSearchBackdropInputReset","handleSearchPatternInputReset","handleSearchInputClick","stopPropagation","preventDefault","modelMenuItemsContainerRef","Menu","anchor","menu","getMenuElement","onCloseAnimationEnd","icon","menuItemText","menuItemIcon","models","selectedAttributes","isSelectedAll","menuContentContainer","SearchInput","search","onReset","placeholder","menuItemStickerText","renderModelMenuItems","right","backdrops","backdropAttributeMenuItemText","renderBackdropMenuItems","patterns","renderPatternMenuItems","buttonsContainer","idsByCategory","StarGiftCategoryList","onCategoryChanged","areLimitedStarGiftsDisallowed","starCategories","keys","category","hasResale","selectedCategory","setSelectedCategory","renderCategoryName","renderCategoryItem","handleItemClick","isInteger","useHorizontalScroll","runThrottledForScroll","throttle","cb","forPeerId","resaleGiftsCount","areResaleGiftsLoading","boostPerSentGift","boostsPerSentGift","starGiftsById","starGiftIdsByCategory","GiftModal","closeGiftModal","resetResaleGifts","transitionRef","giftHeaderRef","isApiPeerChat","selectedGift","setSelectedGift","selectedResellGift","setSelectedResellGift","shouldShowMainScreenHeader","setShouldShowMainScreenHeader","isMainScreenHeaderForStarGifts","setIsMainScreenHeaderForStarGifts","isGiftScreenHeaderForStarGifts","setIsGiftScreenHeaderForStarGifts","areAllGiftsDisallowed","shouldDisallowPremiumGifts","disallowedGiftTypes","areUnlimitedStarGiftsDisallowed","shouldDisallowUnlimitedStarGifts","allGifts","filteredGifts","prevGift","giftsByStars","mapGifts","Map","starsGift","set","baseGift","reduce","prev","isResaleScreen","isGiftScreen","shouldShowHeader","isHeaderForStarGifts","handleScroll","headerTop","transitionTop","giftPremiumDescription","starGiftDescription","renderTextFilters","recipientId","handleCloseModal","handleCloseButtonClick","isBackButton","buttonClassName","resaleHeader","headerSlide","isFirstLoading","resaleHeaderContentContainer","resaleHeaderText","resaleHeaderDescription","commonHeaderText","renderHeader","avatars","premiumGiftsGallery","GiftItemPremium","get","starGiftsDescription","starGiftsTransition","filteredGiftIds","starGiftsContainer","shouldShowResale","availabilityResale","shouldDuplicateAsResale","elements","renderStarGifts","GiftSendingOptions","GiftRecipientPicker","closeGiftRecipientPicker","openGiftModal","idsWithSelf","concat","filteredPeerIds","selectCanGift","selectedId","forceShowSelf","AVATAR_SIZE","GIFT_STICKER_SIZE","GiftTransferPreview","giftPreview","arrow","typeGift","isSavedGift","fromPeer","targetPeer","hasAdminRights","getHasAdminRight","recipientPeer","currentUserEmojiStatus","emojiStatus","collectibleEmojiStatuses","statuses","releasedByPeerId","releasedByPeer","starGiftMaxConvertPeriod","tonExplorerUrl","GiftInfoModal","closeGiftInfoModal","changeGiftVisibility","convertGiftToStars","openChatWithInfo","focusMessage","buyStarGift","isConvertConfirmOpen","openConvertConfirm","closeConvertConfirm","isConfirmModalOpen","setIsConfirmModalOpen","renderingFromPeer","renderingTargetPeer","isTargetChat","savedGift","isSender","canConvertDifference","getServerTime","conversionLeft","hasConvertOption","giftSubtitle","ownerTitle","getMainUsername","fallbackText","owner","canFocusUpgrade","upgradeMsgId","canManage","inputGift","canBuyGift","giftOwnerTitle","ownerName","ownerId","handleFocusUpgraded","giftChat","handleTriggerVisibility","isUnsaved","shouldUnsave","handleConvertToStars","handleOpenUpgradeModal","handleBuyGift","closeConfirmModal","handleConfirmBuyGift","SettingsMenuButton","headerButton","renderFooterButton","isShiny","saleDateInfo","firstSaleDate","lastSaleDate","modalData","isConverted","canConvert","isVisibleForMe","uniqueGiftContextMenu","GiftMenuItems","uniqueGiftModalHeader","modalHeader","giftResalePriceContainer","giftResalePriceStar","headerSplitButton","moreIcon","soldOut","CUSTOM_PEER_HIDDEN","unknown","starsValue","giftValue","starAmountIcon","total","renderTextWithEntities","ownerAddress","ownerPeer","originalDetails","copyIcon","withEmojiStatus","uniqueAttribute","rarityPercent","issued","issuedCount","totalCount","recipient","recipientLink","senderLink","tonLink","giftAddress","footerDescription","shouldSkipModal","withBalanceBar","ConfirmDialog","noDefaultTitle","confirmLabel","confirmHandler","formatStarsAsText","configPermille","starsStargiftResaleCommissionPermille","starsStargiftResaleAmountMin","starsStargiftResaleAmountMax","starsUsdWithdrawRateX1000","starsUsdWithdrawRate","GiftResalePriceComposerModal","closeGiftResalePriceComposerModal","updateStarGiftPrice","price","setPrice","hasPrice","handleChangePrice","parseFloat","isNaN","handleSellGift","variables","commission","isPriceCorrect","InputText","inputMode","teactExperimentControlled","toFixed","GiftUpgradeModal","closeGiftUpgradeModal","upgradeGift","renderingRecipient","shouldKeepOriginalDetails","setShouldKeepOriginalDetails","previewAttributes","setPreviewAttributes","handleUpgrade","updatePreviewAttributes","sampleAttributes","previousSelection","random","getRandomAttributes","useInterval","getStickerMediaHash","fetch","ApiMediaFormat","BlobUrl","listItemData","onCheck","TableAboutModal","isCurrentUserPremium","selectIsCurrentUserPremium","GiftStatusInfoModal","closeGiftStatusInfoModal","setEmojiStatus","useCustomEmoji","patternDocumentId","onWearClick","customEmoji","mockPeerWithStatus","statusSparklesColor","FRAGMENT_PEER","byKey","hasPassword","twoFaSettings","passwordHint","GiftWithdrawModal","closeGiftWithdrawModal","clearGiftWithdrawError","processStarGiftWithdrawal","openSettingsScreen","shouldShowPassword","setShouldShowPassword","exportDelay","canExportAt","handleSubmit","password","handleSetUpPassword","screen","SettingsScreens","TwoFaDisabled","exportHint","days","getDays","noPassword","PasswordForm","shouldShowSubmit","error","errorKey","withRegular","clearError","isPasswordVisible","shouldResetValue","onChangePasswordVisibility","submitLabel","onSubmit","noop","async","peerGlobalSearch","searchResult","callApi","accountResultIds","globalResultIds","contactIds","GiftTransferModal","closeGiftTransferModal","openGiftWithdrawModal","transferGift","setSelectedId","renderingSelectedPeerId","renderingSelectedPeer","orderedChatIds","useFolderManagerForOrderedIds","ALL_FOLDER_ID","sortedLocalIds","foundIds","currentResultsQuery","queryFn","debounceTimeout","debouncedQuery","resolverFn","ms","dependencies","isFrozen","updateWhenUnfrozen","forceUpdate","useForceUpdate","handleUnfreeze","useHeavyAnimation","getIsHeavyAnimating","useHeavyAnimationFreeze","runDebounced","useRunDebounced","useSyncEffect","useDebouncedMemo","setCurrentResultsQuery","queryCallback","useAsync","Promise","resolve","answer","usePeerSearch","categories","MEMO_EMPTY_ARRAY","peerColorId","handleCategoryChange","displayIds","handleTransfer","transferStars","ignoreFreeze","onSelectedCategoryChange","withPeerUsernames","noScrollRestore","ChatRefundModal","closeChatRefundModal","toggleNoPaidMessagesException","shouldRefundStars","setShouldRefundStars","renderingUser","starsToRefund","handleConfirmRemoveFee","shouldRefundCharged"],"sourceRoot":""}